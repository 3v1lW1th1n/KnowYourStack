{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework March 2019 Update","PublishedOn":"2019-03-20T00:40:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nCLR\n\nAddressed an issue where the Framework would throw an...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/","RawContent":null},{"Title":".NET Core Container Images now Published to Microsoft Container Registry","PublishedOn":"2019-03-15T14:12:09+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We are now publishing .NET Core container images to Microsoft Container Registry (MCR). We have also made other changes to the images we publish, described in this post.\nImportant: You will need to...","Href":"https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/","RawContent":null},{"Title":".NET Core March 2019 Updates – 1.0.15, 1.1.12, 2.1.9 and 2.2.3","PublishedOn":"2019-03-12T22:59:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core March 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes.\n\n.NET Core...","Href":"https://devblogs.microsoft.com/dotnet/net-core-march-2019/","RawContent":null},{"Title":"Announcing ML.NET 0.11 – Machine Learning for .NET","PublishedOn":"2019-03-09T01:03:28+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-0-11-machine-learning-for-net/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 3","PublishedOn":"2019-03-06T19:10:42+00:00","CommentsCount":36,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 3. We would like to update you on the .NET Core 3.0 schedule and introduce you to improvements in .NET Core SDK installers, Docker containers, Range, and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-3/","RawContent":null},{"Title":"Floating-Point Parsing and Formatting improvements in .NET Core 3.0","PublishedOn":"2019-03-05T22:14:48+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"Starting back with the .NET Core 2.1 release, we were making iterative improvements to the floating-point parsing and formatting code in .NET Core. Now, in .NET Core 3.0 Preview 3, we are nearing...","Href":"https://devblogs.microsoft.com/dotnet/floating-point-parsing-and-formatting-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Collecting .NET Core Linux Container CPU Traces from a Sidecar Container","PublishedOn":"2019-03-05T19:31:18+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Introduction\nIn recent years, containerization has gained popularity in DevOps due to its valuable capacities, including more efficient resource utilization and better agility. Microsoft and Docker...","Href":"https://devblogs.microsoft.com/dotnet/collecting-net-core-linux-container-cpu-traces-from-a-sidecar-container/","RawContent":null},{"Title":".NET Framework March 1, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-03-01T18:25:39+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, March 1, we released the February 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-1-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"An update to C# versions and C# tooling","PublishedOn":"2019-02-27T18:59:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Starting with Visual Studio 2019 Preview 4 and RC, we&#8217;ll be adjusting how C# versions are treated in .NET tooling.\nSummary of changes\nFirstly, we&#8217;re adding two new Language Version...","Href":"https://devblogs.microsoft.com/dotnet/an-update-to-c-versions-and-c-tooling/","RawContent":null},{"Title":"How to port desktop applications to .NET Core 3.0","PublishedOn":"2019-02-26T18:00:30+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"In this post, I will describe how to port a desktop application from .NET Framework to .NET Core. I picked a WinForms application as an example. Steps for WPF application are similar and I&#8217;ll...","Href":"https://devblogs.microsoft.com/dotnet/how-to-port-desktop-applications-to-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9266562420","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:04:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Merged pull request \"Add V3.1 repo and change documentation link\" (#137) at dotnet/foundation","RelatedBody":""},{"Id":"9266559615","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:03:34","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Merged pull request \"Add Dave to cake.md\" (#138) at dotnet/foundation","RelatedBody":""},{"Id":"9225246598","Type":"PullRequestEvent","CreatedAt":"2019-03-12T10:03:37","Actor":"devlead","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Opened pull request \"Add Dave to cake.md\" (#138) at dotnet/foundation","RelatedBody":""},{"Id":"9214022828","Type":"PullRequestEvent","CreatedAt":"2019-03-10T16:40:38","Actor":"MikeWilliams-UK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Opened pull request \"Add V3.1 repo and change documentation link\" (#137) at dotnet/foundation","RelatedBody":""},{"Id":"9208392766","Type":"IssuesEvent","CreatedAt":"2019-03-08T19:00:06","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123) at dotnet/foundation","RelatedBody":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130"},{"Id":"9208389675","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:59:32","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Merged pull request \"Fix logo and update team contributors\" (#136) at dotnet/foundation","RelatedBody":""},{"Id":"9208386555","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:59:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Merged pull request \"adds Umbraco logo\" (#135) at dotnet/foundation","RelatedBody":"fixes #124 "},{"Id":"9208386542","Type":"IssuesEvent","CreatedAt":"2019-03-08T18:59:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124) at dotnet/foundation","RelatedBody":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151"},{"Id":"9208384997","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:58:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Merged pull request \"adds the prism logo\" (#134) at dotnet/foundation","RelatedBody":"fixes #126 "},{"Id":"9208384964","Type":"IssuesEvent","CreatedAt":"2019-03-08T18:58:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126) at dotnet/foundation","RelatedBody":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157"},{"Id":"9208383052","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:58:27","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Merged pull request \"Add additional ReactiveUI organization projects.\" (#133) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9228689700","Type":"IssuesEvent","CreatedAt":"2019-03-12T17:35:17","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Opened issue \"March 2019 .NET Updates\" (#103) at dotnet/announcements","RelatedBody":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0))\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9150531193","Type":"IssuesEvent","CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Opened issue \"SDK Installers will remove previous patch versions\" (#102) at dotnet/announcements","RelatedBody":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions)."},{"Id":"9078417647","Type":"IssuesEvent","CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Opened issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101) at dotnet/announcements","RelatedBody":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition."},{"Id":"9075495754","Type":"IssuesEvent","CreatedAt":"2019-02-15T14:06:30","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Opened issue \"Advisory on February 2019 Security update for Windows 10 update 1809\" (#100) at dotnet/announcements","RelatedBody":"<span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.\r\n\r\nWe are actively working on fixing and re-shipping a correction for this issue. If you installed the February 2019 security update and have not yet seen any negative behavior, we recommend that you leave your system as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We are working to improve our testing infrastructure to prevent these type of issues in the future. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this <a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/15/advisory-on-february-2019-security-update-for-windows-10-update-1809/\" rel=\"nofollow\">post</a> as we have new information.\r\n<h2>Guidance</h2>\r\nWe are working on guidance and will update this pose and as we have new information.\r\n<h2>Workaround</h2>\r\nThere are no known workarounds at this time.\r\n<h2>Symptoms</h2>\r\nAfter installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:\r\n<p class=\"xxxxxmsonormal\"><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></p>\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9313327855","Type":"PullRequestEvent","CreatedAt":"2019-03-26T05:29:43","Actor":"safern","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23450","RelatedDescription":"Opened pull request \"Nullable: String\" (#23450) at dotnet/coreclr","RelatedBody":""},{"Id":"9313076191","Type":"PullRequestEvent","CreatedAt":"2019-03-26T04:10:25","Actor":"krwq","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23449","RelatedDescription":"Merged pull request \"Nullable: Uint32, (U)Int16, (U)Int64\" (#23449) at dotnet/coreclr","RelatedBody":"Convert more int types to nullable syntax similarly to Int32"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9313128724","Type":"PullRequestEvent","CreatedAt":"2019-03-26T04:27:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11013","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#11013) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n"},{"Id":"9313121812","Type":"PullRequestEvent","CreatedAt":"2019-03-26T04:25:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11015","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11015) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190322.1\r\n- **Date Produced**: 3/23/2019 12:05 AM\r\n- **Commit**: 26b345d9b9ee451728bb9d0d6daa51075fb9cbfb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19172.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190323.1\r\n- **Date Produced**: 3/23/2019 12:12 PM\r\n- **Commit**: d895cc92a97616862158b797435d767b0c634e12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19173.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190323.1\r\n- **Date Produced**: 3/23/2019 12:12 PM\r\n- **Commit**: d895cc92a97616862158b797435d767b0c634e12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19173.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9311737033","Type":"PullRequestEvent","CreatedAt":"2019-03-25T22:16:47","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1107","RelatedDescription":"Opened pull request \"Add transport package for NetStandard\" (#1107) at dotnet/standard","RelatedBody":"This creates a transport package, `Microsoft.Private.Standard`, which contains the same netstandard2.1 binaries as `NetStandard.Library`, but not `NetStandard.Library.Targets`. The assets are in `ref\\netstandard2.1` instead of `build\\netstandard2.1\\ref`. This transport package can be consumed by Core-Setup for the purpose of creating the targeting pack, rather than publicly shipping `NetStandard.Library`, or having Core-Setup consume its Standard dependencies through `NetStandard.Library`. Eventually we can phase out NS.L in favor of this transport package.\r\n\r\n@ericstj @dagood @terrajobst PTAL"},{"Id":"9310545723","Type":"IssuesEvent","CreatedAt":"2019-03-25T19:02:31","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1106","RelatedDescription":"Opened issue \"Create a transport package for NetStandard\" (#1106) at dotnet/standard","RelatedBody":"We should create a transport package for Net Standard, and stop shipping/building stable versions of NS.Library. Instead, we can have Core-Setup consume the transport package, and release the bits through a targeting pack. The contents should be similar to what's in NS.Library today, but in the `ref\\netstandard2.1` folder instead of `build`\r\n\r\nCC @dagood @ericstj "},{"Id":"9303088290","Type":"IssuesEvent","CreatedAt":"2019-03-24T14:58:58","Actor":"crone66","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1105","RelatedDescription":"Opened issue \"Classdiagramms in .net standard projects creates .vb files instead of .cs files\" (#1105) at dotnet/standard","RelatedBody":"If I create a .net standard project I can't create a c# class digramm instead I get a vb class diagramm. If I create a class diagramm for Windows Forms App everything works fine.\r\n\r\nSteps I did:\r\n\r\n1. Disabled all third -party extensions\r\n2. Restarted Visual Studio\r\n3. Created a new C# .Net Standard Project\r\n4. Added a Class Diagramm file (Visual C# Items -> General -> Class Diagramm)\r\n5. Added a class via drag & drop from the toolbox\r\n-> \"New Class\" dialog pops up where I can change the name\r\n-> The content of Create new file is \"Class1.vb\"\r\n6. Changed the extension to .cs and pressed ok\r\n-> Got the error message \"Visual studio class diagram file name extension is invalid a valid extension is .vb\"\r\n\r\nI Created a normal C# class library project as workaround."},{"Id":"9297028430","Type":"PullRequestEvent","CreatedAt":"2019-03-22T17:11:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1104","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1104) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.2\r\n- **Date Produced**: 3/21/2019 6:29 PM\r\n- **Commit**: 5f884de91b56acd5d19bf792516b646e5fad19b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.6\r\n\r\n"},{"Id":"9291927232","Type":"PullRequestEvent","CreatedAt":"2019-03-22T00:34:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1104","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1104) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.2\r\n- **Date Produced**: 3/21/2019 6:29 PM\r\n- **Commit**: 5f884de91b56acd5d19bf792516b646e5fad19b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.2\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9313284452","Type":"PullRequestEvent","CreatedAt":"2019-03-26T05:16:46","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/36357","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-27526-00, beta-27526-00, respectively (master)\" (#36357) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"9313248402","Type":"PullRequestEvent","CreatedAt":"2019-03-26T05:05:26","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/36356","RelatedDescription":"Opened pull request \"disable UWP on arm\" (#36356) at dotnet/corefx","RelatedBody":"it is failing all tests on all runs. \r\nIt is clearly not ready. "},{"Id":"9312410034","Type":"PullRequestEvent","CreatedAt":"2019-03-26T01:05:55","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36131","RelatedDescription":"Merged pull request \"Remove corefx references to String.Copy and mark it obsolete\" (#36131) at dotnet/corefx","RelatedBody":"Resolves https://github.com/dotnet/corefx/issues/33602. See https://github.com/dotnet/corefx/issues/32563 for more information."},{"Id":"9312410025","Type":"IssuesEvent","CreatedAt":"2019-03-26T01:05:54","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/33602","RelatedDescription":"Closed issue \"Obsolete string.Copy(string) method\" (#33602) at dotnet/corefx","RelatedBody":"This is the API review for https://github.com/dotnet/corefx/issues/32563.\r\n\r\n```cs\r\nnamespace System\r\n{\r\n    public sealed partial class String\r\n    {\r\n        // new attribute, obsolete as warning (not error)\r\n        // method implementation stays as-is for now\r\n        [Obsolete(\"String instances are intended to be immutable. To make a mutable buffer with the same contents as a string, use the method string.ToCharArray(). To create a mutable copy of the string for interop purposes, use the method Marshal.StringToHGlobalUni(string).\")]\r\n        public static string Copy(string str);\r\n    }\r\n}\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9313281889","Type":"PullRequestEvent","CreatedAt":"2019-03-26T05:15:54","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34433","RelatedDescription":"Opened pull request \"Adjust Find All References and Go To Implementation for Default Interface Methods\" (#34433) at dotnet/roslyn","RelatedBody":"- Include non-abstract definition into the implementations result.\r\n- Include implementations from derived interfaces into the result."},{"Id":"9313196000","Type":"PullRequestEvent","CreatedAt":"2019-03-26T04:48:48","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34432","RelatedDescription":"Closed pull request \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#34432) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9313195663","Type":"PullRequestEvent","CreatedAt":"2019-03-26T04:48:41","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34426","RelatedDescription":"Closed pull request \"Merge master to features/readonly-members\" (#34426) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9313195354","Type":"PullRequestEvent","CreatedAt":"2019-03-26T04:48:36","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34425","RelatedDescription":"Closed pull request \"Merge master to features/NullableDogfood\" (#34425) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/NullableDogfood.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/NullableDogfood\ngit reset --hard upstream/features/NullableDogfood\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/NullableDogfood --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9313194950","Type":"PullRequestEvent","CreatedAt":"2019-03-26T04:48:29","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34424","RelatedDescription":"Closed pull request \"Merge master to features/lspSupport\" (#34424) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9313194664","Type":"PullRequestEvent","CreatedAt":"2019-03-26T04:48:24","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34423","RelatedDescription":"Closed pull request \"Merge master to features/editorconfig-in-compiler\" (#34423) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9313193280","Type":"PullRequestEvent","CreatedAt":"2019-03-26T04:48:00","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34422","RelatedDescription":"Closed pull request \"Merge master to master-vs-deps\" (#34422) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9312858354","Type":"PullRequestEvent","CreatedAt":"2019-03-26T03:08:24","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34432","RelatedDescription":"Opened pull request \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#34432) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9311641619","Type":"PullRequestEvent","CreatedAt":"2019-03-25T21:58:43","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7218","RelatedDescription":"Opened pull request \"Add option to remove CurlHandler\" (#7218) at dotnet/corert","RelatedBody":"Workaround for https://github.com/dotnet/corert/issues/7000. The CurlHandle is on its path to extinction. Until that happens, add an option to strip it manually."},{"Id":"9311288761","Type":"PullRequestEvent","CreatedAt":"2019-03-25T20:58:47","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7217","RelatedDescription":"Opened pull request \"Basic support for running multiple tests\" (#7217) at dotnet/corert","RelatedBody":"This change introduces a new helper class, ApplicationSet,\r\nrepresenting an arbitrary number of apps. This change let me\r\nadd support for building and summarizing a larger number of apps.\r\n\r\nI had to decouple the compiler runners from the input / output\r\npath pair as these vary for the individual apps within the\r\nset (right now the logic is that basically one folder = one app).\r\n\r\nI have added a new switch compile-subtree and two new options\r\n--nojit and --noetw with hopefully self-explanatory purpose.\r\nI haven't yet integrated the bucketing logic as I need to switch\r\nover to actually measuring the statistics and working on the\r\npresentation.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9309468460","Type":"PullRequestEvent","CreatedAt":"2019-03-25T16:32:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7209","RelatedDescription":"Merged pull request \"Make default comparers a removable feature\" (#7209) at dotnet/corert","RelatedBody":"Adding to make it possible to work around current problems in #7208 when reflection is disabled.\r\n\r\nComparers also root the entire type loader, so making this optional puts as on a path where we can make type loader optional too. Type loader is about 500 kB of junk. If we can remove it, our Hello world size becomes competitive with Go. People who are willing to walk the extra mile to make their code compatible with this get very small deployment sizes that are especially important for e.g. the WASM target."},{"Id":"9309463984","Type":"PullRequestEvent","CreatedAt":"2019-03-25T16:31:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7216","RelatedDescription":"Merged pull request \"Delete CoreLib aliases that are no longer needed\" (#7216) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9313019011","Type":"PullRequestEvent","CreatedAt":"2019-03-26T03:53:29","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3033","RelatedDescription":"Merged pull request \"Insert NuGet Build 5.1.0-rtm.5906 into sdk\" (#3033) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.1.0-rtm.5906 into sdk release/2.1.7xx branch"},{"Id":"9313017285","Type":"PullRequestEvent","CreatedAt":"2019-03-26T03:52:58","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3032","RelatedDescription":"Merged pull request \"Insert NuGet Build 5.1.0-rtm.5906 into sdk\" (#3032) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.1.0-rtm.5906 into sdk release/2.2.3xx branch"},{"Id":"9312458326","Type":"PullRequestEvent","CreatedAt":"2019-03-26T01:19:33","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/3041","RelatedDescription":"Closed pull request \"WIP Fix test flakiness by override DotnetCliHome\" (#3041) at dotnet/sdk","RelatedBody":"So local tools resolver cache is isolated as well to overcome each build has the same package id for local tools nupkg."},{"Id":"9312275750","Type":"PullRequestEvent","CreatedAt":"2019-03-26T00:28:11","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3038","RelatedDescription":"Merged pull request \"Attempt to fix flaky \"test as tool\" runs\" (#3038) at dotnet/sdk","RelatedBody":"We've been having some of the \"test as tool\" runs fail.  The command to run the tool is failing, and the output ends up being the usage information for `dotnet tool run`, for example:\r\n\r\n```\r\nUsage: dotnet tool run [options] <COMMAND_NAME> [[--] <additional arguments>...]]\r\n\r\nArguments:\r\n  <COMMAND_NAME>   The command name of the tool to run.\r\n\r\nOptions:\r\n  -h, --help   Show command line help.\r\nAdditional Arguments:\r\n  Arguments passed to the application that is being run.\r\n```\r\n\r\nIn the .binlog, there is also a message:\r\n\r\n> Run \"dotnet tool restore\" to make the \"testSdkClean\" command available.\r\n\r\nSo this PR attempts to fix this by explicitly including the `--` before the arguments to the tool, as well as explicitly running `dotnet tool restore` before running the tool."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"425233988","IsPullRequest":true,"CreatedAt":"2019-03-26T05:29:42","Actor":"safern","Number":"23450","RawContent":null,"Title":"Nullable: String","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23450","RelatedDescription":"Open PR \"Nullable: String\" (#23450)"},{"Id":"425194543","IsPullRequest":true,"CreatedAt":"2019-03-26T04:10:25","Actor":"krwq","Number":"23449","RawContent":null,"Title":"Nullable: Uint32, (U)Int16, (U)Int64","State":"closed","Body":"Convert more int types to nullable syntax similarly to Int32","Url":"https://github.com/dotnet/coreclr/pull/23449","RelatedDescription":"Closed or merged PR \"Nullable: Uint32, (U)Int16, (U)Int64\" (#23449)"},{"Id":"425183921","IsPullRequest":true,"CreatedAt":"2019-03-26T02:13:43","Actor":"krwq","Number":"23443","RawContent":null,"Title":"Nullable: Int32","State":"closed","Body":"Use nullable feature for System.Int32","Url":"https://github.com/dotnet/coreclr/pull/23443","RelatedDescription":"Closed or merged PR \"Nullable: Int32\" (#23443)"},{"Id":"425192352","IsPullRequest":true,"CreatedAt":"2019-03-26T02:05:30","Actor":"jorive","Number":"23448","RawContent":null,"Title":"[WIP][EventPipe] Streaming events out-of-proc using IPC","State":"open","Body":"## What's here?\r\n- Change the dependency of `EventPipe` and `EventPipeBufferManager` from `EventPipeFile` to `FastSerializableObject`. Thus, we are able to use the same plumbing we use to flush events to file to virtually any class that implements the interface used.\r\n- There was a race condition on `EventPipe::Disable` where we deallocated the `s_pSession` and set it to `NULL`, but there was still a thread waiting to write and dereference the null pointer. Now, we check that the session is not null.\r\n- Added a new `attach` event to be handled to the Diagnostic server.\r\n- Some formatting.\r\n\r\n## What's pending?\r\n- Send \"small files\" that can be parsed by TraceEvent, instead of a continuous full file that can only be parsed at the end of the streaming.\r\n- On Linux, IPC was failing when `delete` was invoked because we were using `new (std::nothrow)` instead of `new (nothrow)` when allocating the newly connected clients/streams. I have temporarily replace the call with `new`, and I need to fix this.","Url":"https://github.com/dotnet/coreclr/pull/23448","RelatedDescription":"Open PR \"[WIP][EventPipe] Streaming events out-of-proc using IPC\" (#23448)"},{"Id":"425188018","IsPullRequest":true,"CreatedAt":"2019-03-26T02:02:40","Actor":"dotnet-maestro-bot","Number":"23446","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to preview4-27525-72, preview4.19164.7, preview4-27525-12, respectively (feature/utf8string)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/23446","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to preview4-27525-72, preview4.19164.7, preview4-27525-12, respectively (feature/utf8string)\" (#23446)"},{"Id":"425188147","IsPullRequest":false,"CreatedAt":"2019-03-26T01:43:46","Actor":"VincentBu","Number":"23447","RawContent":null,"Title":"[arm64] Test failed: System.IO.Tests.EncryptDecrypt.EncryptDecrypt_Read","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_corefx_tieredcompilation_tst/26/\r\n\r\n**Failed tests:**\r\nSystem.IO.Tests.EncryptDecrypt.EncryptDecrypt_Read\r\n\r\n**Log:**\r\n```\r\nSystem.IO.Tests.EncryptDecrypt.EncryptDecrypt_Read [FAIL]\r\n      System.IO.IOException : The service has not been started. : 'C:\\Users\\HelixAdmin\\AppData\\Local\\Temp\\tmp5C97.tmp'\r\n      Stack Trace:\r\n        D:\\j\\workspace\\arm64_cross_c---aca7f1c3\\_\\fx\\src\\System.IO.FileSystem\\src\\System\\IO\\FileSystem.Win32.cs(60,0): at System.IO.FileSystem.ThrowExceptionEncryptDecryptFail(String fullPath)\r\n        D:\\j\\workspace\\arm64_cross_c---aca7f1c3\\_\\fx\\src\\System.IO.FileSystem\\src\\System\\IO\\FileSystem.Win32.cs(24,0): at System.IO.FileSystem.Encrypt(String path)\r\n        D:\\j\\workspace\\arm64_cross_c---aca7f1c3\\_\\fx\\src\\System.IO.FileSystem\\src\\System\\IO\\File.cs(650,0): at System.IO.File.Encrypt(String path)\r\n        D:\\j\\workspace\\arm64_cross_c---aca7f1c3\\_\\fx\\src\\System.IO.FileSystem\\tests\\File\\EncryptDecrypt.cs(45,0): at System.IO.Tests.EncryptDecrypt.EncryptDecrypt_Read()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23447","RelatedDescription":"Open issue \"[arm64] Test failed: System.IO.Tests.EncryptDecrypt.EncryptDecrypt_Read\" (#23447)"},{"Id":"425187631","IsPullRequest":false,"CreatedAt":"2019-03-26T01:41:19","Actor":"VincentBu","Number":"23445","RawContent":null,"Title":"[arm64] Test failed: System.Diagnostics.TextWriterTraceListenerTests.XmlWriterTraceListenerTests.ListenerWithFilter","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_corefx_minopts_tst/26/\r\n\r\n**Failed tests:**\r\nSystem.Diagnostics.TextWriterTraceListenerTests.XmlWriterTraceListenerTests.ListenerWithFilter\r\n\r\n**Log:**\r\n```\r\nSystem.Diagnostics.TextWriterTraceListenerTests.XmlWriterTraceListenerTests.ListenerWithFilter [FAIL]\r\n      Assert.DoesNotContain() Failure\r\n      Found:    2304\r\n      In value: <E2ETraceEvent xmlns=\"http://schemas.microsoft.com/2004/06/E2ETraceEvent\"><System xmlns=\"http://schemas.microsoft.com/2004/06/windows/eventlog/system\"><EventID>0</EventID><Type>3</Type><SubType Name=\"Error\">0</SubType><Level>2</Level><TimeCreated SystemTime=\"2019-03-25T05:10:28.3197363-07:00\" /><Source Name=\"Trace\" /><Correlation ActivityID=\"{00000000-0000-0000-0000-000000000000}\" /><Execution ProcessName=\"dotnet\" ProcessID=\"4924\" ThreadID=\"9\" /><Channel/><Computer>ARM64-AMD-023</Computer></System><ApplicationData>Goodbye</ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns=\"http://schemas.microsoft.com/2004/06/E2ETraceEvent\"><System xmlns=\"http://schemas.microsoft.com/2004/06/windows/eventlog/system\"><EventID>1</EventID><Type>3</Type><SubType Name=\"Critical\">0</SubType><Level>1</Level><TimeCreated SystemTime=\"2019-03-25T05:10:28.3230435-07:00\" /><Source Name=\"Trace\" /><Correlation ActivityID=\"{00000000-0000-0000-0000-000000000000}\" /><Execution ProcessName=\"dotnet\" ProcessID=\"4924\" ThreadID=\"9\" /><Channel/><Computer>ARM64-AMD-023</Computer></System><ApplicationData><TraceData><DataItem>shouldbehere</DataItem></TraceData></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns=\"http://schemas.microsoft.com/2004/06/E2ETraceEvent\"><System xmlns=\"http://schemas.microsoft.com/2004/06/windows/eventlog/system\"><EventID>1</EventID><Type>3</Type><SubType Name=\"Critical\">0</SubType><Level>1</Level><TimeCreated SystemTime=\"2019-03-25T05:10:28.3230857-07:00\" /><Source Name=\"Trace\" /><Correlation ActivityID=\"{00000000-0000-0000-0000-000000000000}\" /><Execution ProcessName=\"dotnet\" ProcessID=\"4924\" ThreadID=\"9\" /><Channel/><Computer>ARM64-AMD-023</Computer></System><ApplicationData><TraceData><DataItem>existent</DataItem><DataItem>.net</DataItem><DataItem>code</DataItem></TraceData></ApplicationData></E2ETraceEvent>\r\n      Stack Trace:\r\n        D:\\j\\workspace\\arm64_cross_c---d6aee07b\\_\\fx\\src\\System.Diagnostics.TextWriterTraceListener\\tests\\XmlWriterTraceListenerTests.cs(142,0): at System.Diagnostics.TextWriterTraceListenerTests.XmlWriterTraceListenerTests.ListenerWithFilter()\r\n  Finished:    System.Diagnostics.TextWriterTraceListener.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.TextWriterTraceListener.Tests  Total: 110, Errors: 0, Failed: 1, Skipped: 0, Time: 4.328s\r\n----- end  5:10:30.71 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23445","RelatedDescription":"Open issue \"[arm64] Test failed: System.Diagnostics.TextWriterTraceListenerTests.XmlWriterTraceListenerTests.ListenerWithFilter\" (#23445)"},{"Id":"425184158","IsPullRequest":false,"CreatedAt":"2019-03-26T01:23:42","Actor":"VincentBu","Number":"23444","RawContent":null,"Title":"[arm64] lldb was not found. Unable to print core file","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/144/\r\n\r\n**Log:**\r\n```\r\nlldb was not found. Unable to print core file.\r\nCopying core file core to /tmp/coredumps/core.12094 in case you need it.\r\nerror: One or more tests failed while running tests from ''.  Exit code 134.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23444","RelatedDescription":"Open issue \"[arm64] lldb was not found. Unable to print core file\" (#23444)"},{"Id":"425177556","IsPullRequest":false,"CreatedAt":"2019-03-26T01:14:23","Actor":"sywhang","Number":"23441","RawContent":null,"Title":"Enabling EventPipe via .eventpipeconfig is broken on Linux","State":"closed","Body":"Enabling EventPipe via file drop (.eventpipeconfig) is broken. Specifically, the timer callback which calls into `EventPipe::Enable` is no longer getting called. I spent some time investigating where this came from and it seems like https://github.com/dotnet/coreclr/commit/f94728547617160837baedc43b7786a457b3e45f is the first commit that broke this. Will keep investigating this and see why that breaks the callback entry. Thanks @andy-ms for reporting this. \r\n\r\ncc @cshung @jorive @noahfalk @vancem","Url":"https://github.com/dotnet/coreclr/issues/23441","RelatedDescription":"Closed issue \"Enabling EventPipe via .eventpipeconfig is broken on Linux\" (#23441)"},{"Id":"425181898","IsPullRequest":false,"CreatedAt":"2019-03-26T01:12:40","Actor":"VincentBu","Number":"23442","RawContent":null,"Title":"[x86] Test failed: baseservices_threading._mutex_abandonedmutex_am01waitallneg_am01waitallneg_._mutex_abandonedmutex_am01waitallneg_am01waitallneg_cmd","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_jitstressregs8/779/\r\n\r\n**Failed test:**\r\nbaseservices_threading._mutex_abandonedmutex_am01waitallneg_am01waitallneg_._mutex_abandonedmutex_am01waitallneg_am01waitallneg_cmd\r\n\r\n**Log:**\r\n```\r\nbaseservices_threading._mutex_abandonedmutex_am01waitallneg_am01waitallneg_._mutex_abandonedmutex_am01waitallneg_am01waitallneg_cmd [FAIL]\r\n        \r\n  Return code:      1\r\n  Raw output file:      D:\\j\\workspace\\x86_checked_w---a80e7e19\\bin\\tests\\Windows_NT.x86.Checked\\Reports\\baseservices.threading\\mutex\\abandonedmutex\\am01waitallneg\\am01waitallneg.output.txt\r\n  Raw output:\r\n  BEGIN EXECUTION\r\n         \"D:\\j\\workspace\\x86_checked_w---a80e7e19\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" am01waitallneg.exe \r\n        Waiting...\r\n        WaitAll did not throw an exception, bRet = False\r\n        Test Failed\r\n        Expected: 100\r\n        Actual: -1\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        \r\n  To run the test:\r\n  > set CORE_ROOT=D:\\j\\workspace\\x86_checked_w---a80e7e19\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\n  > D:\\j\\workspace\\x86_checked_w---a80e7e19\\bin\\tests\\Windows_NT.x86.Checked\\baseservices\\threading\\mutex\\abandonedmutex\\am01waitallneg\\am01waitallneg.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x86_checked_w---a80e7e19\\bin\\tests\\Windows_NT.x86.Checked\\TestWrappers\\baseservices.threading\\baseservices.threading.XUnitWrapper.cs(16909,0): at baseservices_threading._mutex_abandonedmutex_am01waitallneg_am01waitallneg_._mutex_abandonedmutex_am01waitallneg_am01waitallneg_cmd()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23442","RelatedDescription":"Open issue \"[x86] Test failed: baseservices_threading._mutex_abandonedmutex_am01waitallneg_am01waitallneg_._mutex_abandonedmutex_am01waitallneg_am01waitallneg_cmd\" (#23442)"},{"Id":"425172929","IsPullRequest":true,"CreatedAt":"2019-03-26T00:27:10","Actor":"sandreenko","Number":"23440","RawContent":null,"Title":"Delete unused variables in jit. Part 2.","State":"open","Body":"Continue work in #23399.","Url":"https://github.com/dotnet/coreclr/pull/23440","RelatedDescription":"Open PR \"Delete unused variables in jit. Part 2.\" (#23440)"},{"Id":"425171574","IsPullRequest":false,"CreatedAt":"2019-03-26T00:20:12","Actor":"jkoritzinsky","Number":"23439","RawContent":null,"Title":"Exception messages for debugging/error messages reference Silverlight","State":"open","Body":"When investigating dotnet/corefx#35909, we found that the `IDS_EE_LINK_FOR_DEBUGGING_MESSAGES` and `IDS_EE_LINK_FOR_ERROR_MESSAGE` point to shortlinks for Silverlight. We should update these links to point to the corresponding .NET Core page.\r\n\r\nThese error codes live in mscorrc.small.rc:\r\n https://github.com/dotnet/coreclr/blob/2520798548b0c414f513aaaf708399f8ef5a4f6c/src/dlls/mscorrc/mscorrc.small.rc#L35-L36","Url":"https://github.com/dotnet/coreclr/issues/23439","RelatedDescription":"Open issue \"Exception messages for debugging/error messages reference Silverlight\" (#23439)"},{"Id":"425170707","IsPullRequest":false,"CreatedAt":"2019-03-26T00:16:00","Actor":"gdkchan","Number":"23438","RawContent":null,"Title":"JIT SSE ConvertToInt64 intrinsic has unexpected result","State":"open","Body":"The ConvertToInt64 intrinsic is using the xmm -> r32 encoding, rather than xmm -> r64. The codegen for the sample program provided below (plus some debug code that affects the registers used but that doesn't matter) looks more or less like this:\r\n```\r\nvcvtss2si ecx, xmm6\r\n```\r\nRather than:\r\n```\r\nvcvtss2si rcx, xmm6\r\n```\r\nWhich means it can't convert values that don't fit on a 32-bits integer, even though it returns a 64-bits integer.\r\n\r\nHere's a sample program that demonstrates the issue:\r\n```cs\r\nusing System;\r\nusing System.Runtime.Intrinsics;\r\nusing System.Runtime.Intrinsics.X86;\r\n\r\nnamespace SseTest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Vector128<float> val = Vector128.Create(BitConverter.Int32BitsToSingle(0x4f800000));\r\n\r\n            long result = Sse.X64.ConvertToInt64(val);\r\n\r\n            Console.WriteLine(result);\r\n        }\r\n    }\r\n}\r\n```\r\nExpected result: 4294967296\r\nActual result: 2147483648\r\n\r\nI believe that it has the same codegen as the `ConvertToInt32` intrinsic method, but returning a long instead, so it seems to be a JIT bug.\r\n\r\nfyi @LDj3SNuD since he is the one that is trying to use the intrinsic and found the problem.\r\n\r\ncc @fiigii ","Url":"https://github.com/dotnet/coreclr/issues/23438","RelatedDescription":"Open issue \"JIT SSE ConvertToInt64 intrinsic has unexpected result\" (#23438)"},{"Id":"425170644","IsPullRequest":false,"CreatedAt":"2019-03-26T00:15:43","Actor":"GrabYourPitchforks","Number":"23437","RawContent":null,"Title":"JIT: Unnecessary stack spill when mixing fixed pointers and refs in same method","State":"open","Body":"RyuJIT seems to be performing unnecessary stack-spillage when mixing fixed locals and byref locals in the same routine. Consider the following method and its codegen (using latest 3.0 master preview):\r\n\r\n```cs\r\npublic static unsafe int MethodA(ReadOnlySpan<byte> span)\r\n{\r\n    fixed (byte* ptr = &MemoryMarshal.GetReference(span))\r\n    {\r\n        return DoSomething(ptr, span.Length);\r\n    }\r\n}\r\n```\r\n```asm\r\n00007ffc`95a1a170 4883ec28        sub     rsp,28h\r\n00007ffc`95a1a174 33c0            xor     eax,eax\r\n00007ffc`95a1a176 4889442420      mov     qword ptr [rsp+20h],rax\r\n00007ffc`95a1a17b 48894c2430      mov     qword ptr [rsp+30h],rcx\r\n00007ffc`95a1a180 488b11          mov     rdx,qword ptr [rcx]\r\n00007ffc`95a1a183 4889542420      mov     qword ptr [rsp+20h],rdx\r\n00007ffc`95a1a188 488bca          mov     rcx,rdx\r\n00007ffc`95a1a18b 488b542430      mov     rdx,qword ptr [rsp+30h]\r\n00007ffc`95a1a190 8b5208          mov     edx,dword ptr [rdx+8]\r\n00007ffc`95a1a193 e81881daff      call    DoSomething(Byte*, Int32) (00007ffc`957c22b0)\r\n00007ffc`95a1a198 90              nop\r\n00007ffc`95a1a199 4883c428        add     rsp,28h\r\n00007ffc`95a1a19d c3              ret\r\n```\r\n\r\nIf this method is rewritten avoid reading the _ptr_ local after it has been assigned, the extra stack spillage disappears. See below.\r\n\r\n```cs\r\npublic static unsafe int MethodB(ReadOnlySpan<byte> span)\r\n{\r\n    fixed (byte* ptr = &MemoryMarshal.GetReference(span))\r\n    {\r\n        return DoSomething((byte*)Unsafe.AsPointer(ref MemoryMarshal.GetReference(span)), span.Length);\r\n    }\r\n}\r\n```\r\n```asm\r\n00007ffc`95a1a1e0 4883ec28        sub     rsp,28h\r\n00007ffc`95a1a1e4 33c0            xor     eax,eax\r\n00007ffc`95a1a1e6 4889442420      mov     qword ptr [rsp+20h],rax\r\n00007ffc`95a1a1eb 488b11          mov     rdx,qword ptr [rcx]\r\n00007ffc`95a1a1ee 8b4108          mov     eax,dword ptr [rcx+8]\r\n00007ffc`95a1a1f1 4889542420      mov     qword ptr [rsp+20h],rdx\r\n00007ffc`95a1a1f6 488bca          mov     rcx,rdx\r\n00007ffc`95a1a1f9 8bd0            mov     edx,eax\r\n00007ffc`95a1a1fb e8b080daff      call    DoSomething(Byte*, Int32) (00007ffc`957c22b0)\r\n00007ffc`95a1a200 90              nop\r\n00007ffc`95a1a201 4883c428        add     rsp,28h\r\n00007ffc`95a1a205 c3              ret\r\n```\r\n\r\nThere is still potential room for optimization, as perhaps the JIT can elide zero-initing the value at address `[rsp + 20h]` (assuming it doesn't make the GC fall over dead). But the stack spillage is really the thing that's showing up in terms of codegen size and execution time.","Url":"https://github.com/dotnet/coreclr/issues/23437","RelatedDescription":"Open issue \"JIT: Unnecessary stack spill when mixing fixed pointers and refs in same method\" (#23437)"},{"Id":"424799622","IsPullRequest":true,"CreatedAt":"2019-03-25T23:20:33","Actor":"janvorli","Number":"23430","RawContent":null,"Title":"Disable loading IJW assemblies into collectible ALC","State":"closed","Body":"IJW (mixed assemblies) have many potential issues with unloadability. They can run arbitrary native code that the runtime knows nothing about, they can have data structures that the runtime knows nothing about etc. So attempt to unload them could easily result in memory leaks and crashes.\r\nThis change disables loading IJW assemblies into collectible ALC. These assemblies are supported in .NET Core to simplify migration of an pre-existing code, so we won't support loading them as collectible.\r\n\r\nClose #20177","Url":"https://github.com/dotnet/coreclr/pull/23430","RelatedDescription":"Closed or merged PR \"Disable loading IJW assemblies into collectible ALC\" (#23430)"},{"Id":"425153224","IsPullRequest":true,"CreatedAt":"2019-03-25T23:02:13","Actor":"wtgodbe","Number":"23436","RawContent":null,"Title":"Set IsPreRelease to false in rel/3.0","State":"open","Body":"CC @jkotas @GrabYourPitchforks ","Url":"https://github.com/dotnet/coreclr/pull/23436","RelatedDescription":"Open PR \"Set IsPreRelease to false in rel/3.0\" (#23436)"},{"Id":"425078790","IsPullRequest":true,"CreatedAt":"2019-03-25T22:00:27","Actor":"AndyAyersMS","Number":"23434","RawContent":null,"Title":"Mark test GitHub_18582 as optimization sensitive","State":"closed","Body":"Jitstress on OSX will turn on cloning stress in `Test` and cause stack overflows\r\ncloning the large `GT_LIST` subtree of the call.\r\n\r\nSee issue #23346.","Url":"https://github.com/dotnet/coreclr/pull/23434","RelatedDescription":"Closed or merged PR \"Mark test GitHub_18582 as optimization sensitive\" (#23434)"},{"Id":"425051929","IsPullRequest":false,"CreatedAt":"2019-03-25T20:04:30","Actor":"TonyValenti","Number":"23432","RawContent":null,"Title":"Fatal Race Condition in Lazy<T>","State":"closed","Body":"Hi All,\r\nWe're running into what seems to be a race condition of some sort with Lazy<T>.\r\n\r\nMy understanding is that System.Threading.LazyThreadSafetyMode.None should allow the Lazy<T> to be called from multiple threads concurrently with the side effect that it is possible that the lazily initialized value could be created twice.\r\n\r\nWe are seeing that in some situations, we're getting errors instead.\r\n\r\nThe code below demonstrates the issue.\r\n\r\n````\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace LazyTests {\r\n    class Program {\r\n        static async Task Main(string[] args) {\r\n\r\n\r\n            var ToTest = new List<Foo>();\r\n\r\n            for (int i = 0; i < 1000; i++) {\r\n                ToTest.Add(new Foo());\r\n            }\r\n\r\n            var Token = new System.Threading.CancellationTokenSource();\r\n            \r\n\r\n            var Tasks = new[] {\r\n                Task.Run(() => DoTest(ToTest, Token)),\r\n                Task.Run(() => DoTest(ToTest, Token)),\r\n                Task.Run(() => DoTest(ToTest, Token)),\r\n            };\r\n            Token.Cancel();\r\n\r\n\r\n            await Task.WhenAll(Tasks);\r\n\r\n        }\r\n\r\n        private static async Task DoTest(List<Foo> ToTest, CancellationTokenSource Token) {\r\n            try {\r\n                await Task.Delay(Timeout.InfiniteTimeSpan, Token.Token)\r\n                    .ConfigureAwait(false)\r\n                    ;\r\n            } catch (Exception ex) {\r\n                \r\n            }\r\n\r\n            foreach (var item in ToTest) {\r\n                var V = item.Test.Value;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public class Foo {\r\n        public Lazy<String> Test = new Lazy<string>(() => {\r\n            System.Threading.Thread.Sleep(10);\r\n\r\n            return \"DONE!\";\r\n        }, System.Threading.LazyThreadSafetyMode.None);\r\n\r\n    }\r\n\r\n}\r\n````\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/23432","RelatedDescription":"Closed issue \"Fatal Race Condition in Lazy<T>\" (#23432)"},{"Id":"425090943","IsPullRequest":true,"CreatedAt":"2019-03-25T20:04:18","Actor":"sandreenko","Number":"23435","RawContent":null,"Title":"Add call to setup-stress-dependencies.sh to build-test.sh.","State":"open","Body":"I had to revert #23354 because of OSX failure.\r\n\r\nThis PR adds a condition not to initialize CoreDisTools on OSX.","Url":"https://github.com/dotnet/coreclr/pull/23435","RelatedDescription":"Open PR \"Add call to setup-stress-dependencies.sh to build-test.sh.\" (#23435)"},{"Id":"425071918","IsPullRequest":true,"CreatedAt":"2019-03-25T19:14:56","Actor":"dotnet-maestro-bot","Number":"23433","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"open","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @janvorli\n* @jkotas\n* @tarekgh\n* @stephentoub\n* @sandreenko\n* @GrabYourPitchforks\n* @jkoritzinsky\n* @andy-ms\n* @luhenry\n* @briansull\n* @cshung\n* @BruceForstall\n* @jashook\n* @RussKeldorph\n* @adiaaida\n* @jorive\n* @sywhang\n* @echesakovMSFT\n* @AndyAyersMS\n* @davmason\n* @wtgodbe\n* @franksinankaya\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/23433","RelatedDescription":"Open PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#23433)"},{"Id":"424691025","IsPullRequest":false,"CreatedAt":"2019-03-25T18:45:41","Actor":"VincentBu","Number":"23425","RawContent":null,"Title":"[x64] error NU1102: Unable to find package Microsoft.Net.Compilers.netcore with version","State":"closed","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/release_rhel7.2/590/\r\n\r\n**Log:**\r\n```\r\n/mnt/resource/j/workspace/dotnet_coreclr/master/release_rhel7.2/packages/microsoft.dotnet.buildtools/2.2.0-preview1-02725-03/lib/tool-runtime/project.csproj : error NU1102: Unable to find package Microsoft.Net.Compilers.netcore with version (>= 2.6.0-beta3-62316-02)\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23425","RelatedDescription":"Closed issue \"[x64] error NU1102: Unable to find package Microsoft.Net.Compilers.netcore with version\" (#23425)"},{"Id":"424689278","IsPullRequest":false,"CreatedAt":"2019-03-25T18:43:37","Actor":"VincentBu","Number":"23424","RawContent":null,"Title":"[x64] error C3859: Failed to create virtual memory for PCH","State":"closed","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_windows_nt_jitsse2only/693/\r\n\r\n**Log:**\r\n```\r\nc1xx : error C3859: Failed to create virtual memory for PCH [D:\\j\\workspace\\x64_checked_w---db8fd239\\bin\\obj\\Windows_NT.x64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\n  c1xx: note: PCH: Unable to commit memory across file map\r\n  c1xx: note: please visit https://aka.ms/pch-help for more details\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [D:\\j\\workspace\\x64_checked_w---db8fd239\\bin\\obj\\Windows_NT.x64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\n  comdependenthandle.cpp\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23424","RelatedDescription":"Closed issue \"[x64] error C3859: Failed to create virtual memory for PCH\" (#23424)"},{"Id":"424770520","IsPullRequest":false,"CreatedAt":"2019-03-25T08:08:08","Actor":"dotnet-mc-bot","Number":"23429","RawContent":null,"Title":"Test failure: Loader_AssemblyDependencyResolverTests._AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_/_AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_sh","State":"open","Body":"Opened on behalf of @AriNuer\n\nThe test `Loader_AssemblyDependencyResolverTests._AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_/_AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_sh` has failed.\n\nFailure Message:\n```\n\nUnhandled Exception: System.IO.IOException: Read-only file system\n   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\n   at System.IO.FileStream.OpenHandle(FileMode mode, FileShare share, FileOptions options)\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\n   at System.IO.FileSystem.CopyFile(String sourceFullPath, String destFullPath, Boolean overwrite)\n   at TestLibrary.HostPolicyMock.Initialize(String testBasePath, String coreRoot) in /__w/3/s/tests/src/Common/CoreCLRTestLibrary/HostPolicyMock.cs:line 67\n   at AssemblyDependencyResolverTests.AssemblyDependencyResolverTests.Initialize() in /__w/3/s/tests/src/Loader/AssemblyDependencyResolverTests/AssemblyDependencyResolverTests.cs:line 22\n   at AssemblyDependencyResolverTests.TestBase.RunTestsForType(Type testType) in /__w/3/s/tests/src/Loader/AssemblyDependencyResolverTests/TestBase.cs:line 51\n   at AssemblyDependencyResolverTests.TestBase.RunTests(Type[] testTypes) in /__w/3/s/tests/src/Loader/AssemblyDependencyResolverTests/TestBase.cs:line 30\n   at AssemblyDependencyResolverTests.AssemblyDependencyResolverTests.Main() in /__w/3/s/tests/src/Loader/AssemblyDependencyResolverTests/AssemblyDependencyResolverTests.cs:line 314\n/root/helix/work/workitem/AssemblyDependencyResolverTests/AssemblyDependencyResolverTests.sh: line 259:    74 Aborted                 (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\n/n/nReturn code:      1/nRaw output file:      /root/helix/work/workitem/Reports/Loader.AssemblyDependencyResolverTests/AssemblyDependencyResolverTests/AssemblyDependencyResolverTests.output.txt/nRaw output:/nBEGIN EXECUTION\n/root/helix/work/correlation/corerun AssemblyDependencyResolverTests.exe ''\nTestMissingHostPolicy Start\nTestMissingHostPolicy PASSED.\nExpected: 100\nActual: 134\nEND EXECUTION - FAILED\nTest Harness Exitcode is : 1\n/nTo run the test:/n> set CORE_ROOT=/root/helix/work/correlation/n> /root/helix/work/workitem/AssemblyDependencyResolverTests/AssemblyDependencyResolverTests.sh/n\nExpected: True\nActual:   False\n```\n\nStack Trace:\n```\n   at Loader_AssemblyDependencyResolverTests._AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_._AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_sh() in /__w/3/s/bin/tests/Linux.arm64.Release/TestWrappers/Loader.AssemblyDependencyResolverTests/Loader.AssemblyDependencyResolverTests.XUnitWrapper.cs:line 109\n```\n\nBuild : 3.0 - 20190324.72 (Core Tests)\nFailing configurations:\n- (Ubuntu.18.04.Arm64)Ubuntu.1604.Arm64.Docker@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm64v8-0a0ebdd-20190312220351-arm64\n  - \n  - \n- (Debian.9.Arm64 on Docker)Ubuntu.1604.Arm64.Docker@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-9-helix-arm64v8-0a0ebdd-20190312215438-arm64\n  - \n  - \n\nDetails:\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190324.72/workItem/Loader.AssemblyDependencyResolverTests/analysis/xunit/Loader_AssemblyDependencyResolverTests._AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_~2F_AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_sh","Url":"https://github.com/dotnet/coreclr/issues/23429","RelatedDescription":"Open issue \"Test failure: Loader_AssemblyDependencyResolverTests._AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_/_AssemblyDependencyResolverTests_AssemblyDependencyResolverTests_sh\" (#23429)"},{"Id":"424674271","IsPullRequest":true,"CreatedAt":"2019-03-25T05:48:31","Actor":"Dotnet-GitSync-Bot","Number":"23422","RawContent":null,"Title":"Mirror changes from dotnet/corefx,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni","Url":"https://github.com/dotnet/coreclr/pull/23422","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,corert\" (#23422)"},{"Id":"424722268","IsPullRequest":true,"CreatedAt":"2019-03-25T04:50:06","Actor":"simplejackcoder","Number":"23428","RawContent":null,"Title":"GetPinnableReference on String.cs","State":"open","Body":"This is a feature improvement for https://github.com/dotnet/coreclr/issues/23359\r\n\r\nPlease let me know if there is more to do this seem too easy!","Url":"https://github.com/dotnet/coreclr/pull/23428","RelatedDescription":"Open PR \"GetPinnableReference on String.cs\" (#23428)"},{"Id":"424693429","IsPullRequest":false,"CreatedAt":"2019-03-25T02:07:34","Actor":"VincentBu","Number":"23427","RawContent":null,"Title":"[x64] Test failed: Interop_COM._NativeClients_Licensing_Licensing_._NativeClients_Licensing_Licensing_cmd","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/x64_release_windows_nt_ilrt/796/\r\n\r\n**Failed test:**\r\nInterop_COM._NativeClients_Licensing_Licensing_._NativeClients_Licensing_Licensing_cmd\r\n\r\n**Log:**\r\n```\r\nInterop_COM._NativeClients_Licensing_Licensing_._NativeClients_Licensing_Licensing_cmd [FAIL]\r\n  Return code:      1\r\n  Raw output file:      D:\\j\\workspace\\x64_release_w---21e2e994\\bin\\tests\\Windows_NT.x64.Release\\Reports\\Interop.COM\\NativeClients\\Licensing\\Licensing.output.txt\r\n  Raw output:\r\n  BEGIN EXECUTION\r\n        D:\\j\\workspace\\x64_release_w---21e2e994\\bin\\tests\\Windows_NT.x64.Release\\Tests\\Core_Root\\ildasm.exe /raweh /out=Licensing.dasm.il Licensing.exe\r\n        D:\\j\\workspace\\x64_release_w---21e2e994\\bin\\tests\\Windows_NT.x64.Release\\Tests\\Core_Root\\ilasm.exe /output=Licensing.asm.exe  Licensing.dasm.il \r\n        Microsoft (R) .NET Framework IL Assembler.  Version 4.5.30319.0\r\n        Copyright (c) Microsoft Corporation.  All rights reserved.\r\n        Assembling 'Licensing.dasm.il'  to EXE --> 'Licensing.asm.exe'\r\n        Source file is ANSI \r\n        Assembled method Program?<>c::.cctor\r\n        Assembled method Program?<>c::.ctor\r\n        Assembled method Program?<>c::<Main>b__0_0\r\n        Assembled method Program?<>c::<Main>b__0_1\r\n        Assembled method Program::Main\r\n        Assembled method Program::.ctor\r\n        Creating PE file\r\n        \r\n        Emitting classes:\r\n        Class 1:\tProgram\r\n        Class 2:\tProgram?<>c\r\n        \r\n        Emitting fields and methods:\r\n        Global \t\r\n        Class 1\tMethods: 2;\t\r\n        Class 2\tFields: 3;\tMethods: 4;\t\r\n        Resolving local member refs: 10 -> 10 defs, 0 refs, 0 unresolved\r\n        \r\n        Emitting events and properties:\r\n        Global \t\r\n        Class 1\t\r\n        Class 2\t\r\n        Resolving local member refs: 0 -> 0 defs, 0 refs, 0 unresolved\r\n        Writing PE file\r\n        Operation completed successfully\r\n         \"D:\\j\\workspace\\x64_release_w---21e2e994\\bin\\tests\\Windows_NT.x64.Release\\Tests\\Core_Root\\corerun.exe\" Licensing.asm.exe  \r\n        Searching for exe to launch in D:\\j\\workspace\\x64_release_w---21e2e994\\bin\\tests\\Windows_NT.x64.Release\\Interop\\COM\\NativeClients\\Licensing...\r\n        Launching 'D:\\j\\workspace\\x64_release_w---21e2e994\\bin\\tests\\Windows_NT.x64.Release\\Interop\\COM\\NativeClients\\Licensing\\COMClientLicensing.exe'...\r\n        License test through CoCreateInstance...\r\n        FAILURE: 0x8007007e = ::CoCreateInstance(CLSID_LicenseTesting, nullptr, CLSCTX_INPROC, IID_ILicenseTesting, (void**)&licenseTesting)\r\n        Test Failure: 0x8007007e\r\n        \r\n        END EXECUTION OF IL{D}ASM BINARY - FAILED 101 vs 100\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        \r\n  To run the test:\r\n  > set CORE_ROOT=D:\\j\\workspace\\x64_release_w---21e2e994\\bin\\tests\\Windows_NT.x64.Release\\Tests\\Core_Root\r\n  > D:\\j\\workspace\\x64_release_w---21e2e994\\bin\\tests\\Windows_NT.x64.Release\\Interop\\COM\\NativeClients\\Licensing\\Licensing.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x64_release_w---21e2e994\\bin\\tests\\Windows_NT.x64.Release\\TestWrappers\\Interop.COM\\Interop.COM.XUnitWrapper.cs(251,0): at Interop_COM._NativeClients_Licensing_Licensing_._NativeClients_Licensing_Licensing_cmd()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23427","RelatedDescription":"Open issue \"[x64] Test failed: Interop_COM._NativeClients_Licensing_Licensing_._NativeClients_Licensing_Licensing_cmd\" (#23427)"},{"Id":"424692682","IsPullRequest":false,"CreatedAt":"2019-03-25T02:02:41","Actor":"VincentBu","Number":"23426","RawContent":null,"Title":"[x64] Test failed: _GCSimulator_GCSimulator_108_GCSimulator_108_sh","State":"open","Body":"**job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_release_osx10.12_gcsimulator_tst/178/\r\n\r\n**Failed tests:**\r\n_GCSimulator_GCSimulator_108_GCSimulator_108_sh\r\n\r\n**Log:**\r\n```\r\nGC_Scenarios._GCSimulator_GCSimulator_351_GCSimulator_351_._GCSimulator_GCSimulator_351_GCSimulator_351_sh [FAIL]\r\n        /n/nReturn code:      1/nRaw output file:      /Users/dotnet-bot/j/workspace/dotnet_coreclr/master/x64_release_osx10.12_gcsimulator_tst/bin/tests/OSX.x64.Release/GC/Scenarios/Reports/GC.Scenarios/GCSimulator/GCSimulator_351/GCSimulator_351.output.txt/nRaw output:/nBEGIN EXECUTION\r\n        export CDPATH=/Users/dotnet-bot/j/workspace/dotnet_coreclr/master/x64_release_osx10.12_gcsimulator_tst/bin/tests/OSX.x64.Release/GC/Scenarios/GCSimulator/GCSimulator_351\r\n        /usr/bin/env bash ../GCSimulator/GCSimulator.sh '-t' '1' '-tp' '0' '-dz' '17' '-sdz' '8517' '-dc' '10000' '-sdc' '5000' '-lt' '3' '-f' '-dp' '0.8' '-dw' '0.4'\r\n        Usage: ../GCSimulator/GCSimulator.sh  \r\n        \r\n        Arguments:\r\n        -debug=debuggerFullPath\r\n        Run testcases under debugger.\r\n        -coreroot=coreRootFullPath\r\n        Set CORE_ROOT to the specified value before running the test.\r\n        -?,-h,--help    show this message\r\n        Expected: 0\r\n        Actual: 1\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        /nTo run the test:/n> set CORE_ROOT=/Users/dotnet-bot/j/workspace/dotnet_coreclr/master/x64_release_osx10.12_gcsimulator_tst/bin/tests/OSX.x64.Release/Tests/Core_Root/n> /Users/dotnet-bot/j/workspace/dotnet_coreclr/master/x64_release_osx10.12_gcsimulator_tst/bin/tests/OSX.x64.Release/GC/Scenarios/GCSimulator/GCSimulator_351/GCSimulator_351.sh/n\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /Users/dotnet-bot/j/workspace/dotnet_coreclr/master/release_osx10.12/bin/tests/OSX.x64.Release/TestWrappers/GC.Scenarios/GC.Scenarios.XUnitWrapper.cs(21741,0): at GC_Scenarios._GCSimulator_GCSimulator_351_GCSimulator_351_._GCSimulator_GCSimulator_351_GCSimulator_351_sh()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23426","RelatedDescription":"Open issue \"[x64] Test failed: _GCSimulator_GCSimulator_108_GCSimulator_108_sh\" (#23426)"},{"Id":"424682986","IsPullRequest":true,"CreatedAt":"2019-03-25T00:54:05","Actor":"franksinankaya","Number":"23423","RawContent":null,"Title":"SSE abstraction for GCC and abstract __if_exists","State":"open","Body":"@am11 @janvorli @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/23423","RelatedDescription":"Open PR \"SSE abstraction for GCC and abstract __if_exists\" (#23423)"},{"Id":"424656802","IsPullRequest":true,"CreatedAt":"2019-03-24T23:26:38","Actor":"Dotnet-GitSync-Bot","Number":"23421","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @nschonni","Url":"https://github.com/dotnet/coreclr/pull/23421","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#23421)"},{"Id":"424562120","IsPullRequest":true,"CreatedAt":"2019-03-24T01:36:00","Actor":"HughPH","Number":"23420","RawContent":null,"Title":"Switched Abs for sbyte, short and int to faster bit manipulating code.","State":"closed","Body":"Integer types can have their bits twiddled to get to Absolute faster.","Url":"https://github.com/dotnet/coreclr/pull/23420","RelatedDescription":"Closed or merged PR \"Switched Abs for sbyte, short and int to faster bit manipulating code.\" (#23420)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"424493739","IsPullRequest":true,"CreatedAt":"2019-03-26T04:27:12","Actor":"dotnet-maestro[bot]","Number":"11013","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11013","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11013)"},{"Id":"424496363","IsPullRequest":true,"CreatedAt":"2019-03-26T04:25:04","Actor":"dotnet-maestro[bot]","Number":"11015","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190322.1\r\n- **Date Produced**: 3/23/2019 12:05 AM\r\n- **Commit**: 26b345d9b9ee451728bb9d0d6daa51075fb9cbfb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19172.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190323.1\r\n- **Date Produced**: 3/23/2019 12:12 PM\r\n- **Commit**: d895cc92a97616862158b797435d767b0c634e12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19173.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190323.1\r\n- **Date Produced**: 3/23/2019 12:12 PM\r\n- **Commit**: d895cc92a97616862158b797435d767b0c634e12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19173.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11015","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11015)"},{"Id":"425187107","IsPullRequest":false,"CreatedAt":"2019-03-26T01:38:35","Actor":"Varorbc","Number":"11020","RawContent":null,"Title":"dotnet build error","State":"open","Body":"## Steps to reproduce\r\n\r\n### 1.\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\n```csharp\r\nusing System;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n            if (GetT<Program>() is null)\r\n            {\r\n                Console.WriteLine(\"null\");\r\n            }\r\n        }\r\n\r\n        public static T GetT<T>() where T : new()\r\n        {\r\n            var t = new T();\r\n            if (t is null)\r\n            {\r\n                throw new Exception();\r\n            }\r\n\r\n            return t;\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n### 2. dotnet build dotnet build ConsoleApp1.csproj error\r\n\r\n### 3.build by VS2019 16.0.0 RC.3 is success\r\n\r\n## Expected  behavior\r\n\r\ndotnet build success\r\n\r\n## Actual behavior\r\n\r\ndotnet build error\r\n\r\nProgram.cs(19,22): error CS0403: 无法将 null 转换为类型参数“T”，因为它可能是不可以为 null 的值类型。请考虑改用“default(T)”\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.105\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11020","RelatedDescription":"Open issue \"dotnet build error\" (#11020)"},{"Id":"425130509","IsPullRequest":false,"CreatedAt":"2019-03-25T21:47:15","Actor":"wli3","Number":"11019","RawContent":null,"Title":"Do not print usage when Resolve cache miss","State":"open","Body":"https://github.com/dotnet/sdk/pull/3038#issuecomment-476381711","Url":"https://github.com/dotnet/cli/issues/11019","RelatedDescription":"Open issue \"Do not print usage when Resolve cache miss\" (#11019)"},{"Id":"425104374","IsPullRequest":true,"CreatedAt":"2019-03-25T20:38:01","Actor":"wli3","Number":"11018","RawContent":null,"Title":"Fix problem where data for some verbs is lost","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11018","RelatedDescription":"Open PR \"Fix problem where data for some verbs is lost\" (#11018)"},{"Id":"424688729","IsPullRequest":false,"CreatedAt":"2019-03-25T01:36:40","Actor":"flcdrg","Number":"11017","RawContent":null,"Title":"Add parameter to ensure tests run in sequence regardless of when build completes","State":"open","Body":"As initially reported in https://github.com/Microsoft/vstest/issues/1966, there isn't currently a way to prevent `dotnet test` from running separate test assemblies in parallel when this is not desirable behaviour.\r\n\r\n@ShreyasRmsft suggested that adding a new parameter to the cli that would ensure tests run in sequence regardless of when build completes would enable this.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11017","RelatedDescription":"Open issue \"Add parameter to ensure tests run in sequence regardless of when build completes\" (#11017)"},{"Id":"424526747","IsPullRequest":false,"CreatedAt":"2019-03-23T17:48:28","Actor":"atifaziz","Number":"11016","RawContent":null,"Title":"Global tools path not discoverable on macOS via `which`","State":"open","Body":"## Steps to reproduce\r\n\r\n- Install .NET Core SDK 2.1+\r\n- Install any global tool\r\n- Run `which` in a Terminal session on macOS to discover the tool's path\r\n\r\n## Expected  behavior\r\n\r\n`which` should print the absolute path of where the global tool is installed and finish with an exit code of zero.\r\n\r\n## Actual behavior\r\n\r\n`which` fails with a non-zero exit code.\r\n\r\n## Environment data\r\n\r\nMy `PATH` contains the path to the tools directory:\r\n\r\n```\r\n$ tr ':' '\\n' <<< \"$PATH\" | grep dotnet\r\n/usr/local/share/dotnet\r\n~/.dotnet/tools\r\n```\r\n\r\nRunning `dotnet --info` prints:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.500/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  1.0.1 [/usr/local/share/dotnet/sdk]\r\n  2.0.0 [/usr/local/share/dotnet/sdk]\r\n  2.1.4 [/usr/local/share/dotnet/sdk]\r\n  2.1.200 [/usr/local/share/dotnet/sdk]\r\n  2.1.300 [/usr/local/share/dotnet/sdk]\r\n  2.1.401 [/usr/local/share/dotnet/sdk]\r\n  2.1.500 [/usr/local/share/dotnet/sdk]\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11016","RelatedDescription":"Open issue \"Global tools path not discoverable on macOS via `which`\" (#11016)"},{"Id":"424494398","IsPullRequest":true,"CreatedAt":"2019-03-23T12:37:44","Actor":"dotnet-maestro[bot]","Number":"11014","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190323.1\r\n- **Date Produced**: 3/23/2019 12:12 PM\r\n- **Commit**: d895cc92a97616862158b797435d767b0c634e12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19173.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11014","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser\" (#11014)"},{"Id":"424440016","IsPullRequest":true,"CreatedAt":"2019-03-23T00:41:19","Actor":"dotnet-maestro[bot]","Number":"11012","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190322.1\r\n- **Date Produced**: 3/23/2019 12:05 AM\r\n- **Commit**: 26b345d9b9ee451728bb9d0d6daa51075fb9cbfb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19172.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11012","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser\" (#11012)"},{"Id":"424426729","IsPullRequest":true,"CreatedAt":"2019-03-22T23:55:57","Actor":"nguerrera","Number":"11011","RawContent":null,"Title":"Mark packages as non-shipping","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11011","RelatedDescription":"Closed or merged PR \"Mark packages as non-shipping\" (#11011)"},{"Id":"423523637","IsPullRequest":true,"CreatedAt":"2019-03-22T17:07:07","Actor":"dotnet-bot","Number":"11003","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11003","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11003)"},{"Id":"424177387","IsPullRequest":true,"CreatedAt":"2019-03-22T12:40:11","Actor":"dotnet-maestro[bot]","Number":"11010","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11010","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11010)"},{"Id":"423947903","IsPullRequest":true,"CreatedAt":"2019-03-21T23:59:36","Actor":"nugetlurker","Number":"11008","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5906 into cli","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.5906 into cli release/2.1.7xx branch","Url":"https://github.com/dotnet/cli/pull/11008","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.5906 into cli\" (#11008)"},{"Id":"423947882","IsPullRequest":true,"CreatedAt":"2019-03-21T23:59:12","Actor":"nugetlurker","Number":"11007","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5906 into cli","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.5906 into cli release/2.2.3xx branch","Url":"https://github.com/dotnet/cli/pull/11007","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.5906 into cli\" (#11007)"},{"Id":"423982717","IsPullRequest":false,"CreatedAt":"2019-03-21T23:57:06","Actor":"hayatusm","Number":"11009","RawContent":null,"Title":"dotnet quits unexpectedly on mac os","State":"closed","Body":"Process:               dotnet [10526]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        VisualStudio [9812]\r\nResponsible:           dotnet [10526]\r\nUser ID:               501\r\n\r\nDate/Time:             2019-03-21 18:05:39.998 -0500\r\nOS Version:            Mac OS X 10.14.3 (18D109)\r\nReport Version:        12\r\nAnonymous UUID:        552DA19D-37CB-A00A-A2FC-360C4FE69F9E\r\n\r\nSleep/Wake UUID:       F3547967-C847-474B-B2CB-783BD4CCFCCF\r\n\r\nTime Awake Since Boot: 100000 seconds\r\nTime Since Wake:       580 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_CRASH (SIGABRT)\r\nException Codes:       0x0000000000000000, 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nApplication Specific Information:\r\nabort() called\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1c23e __pthread_kill + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad2c1c pthread_kill + 285\r\n2   libsystem_c.dylib             \t0x00007fff5c9851c9 abort + 127\r\n3   libcoreclr.dylib              \t0x000000010abf984e PROCAbort + 14\r\n4   libcoreclr.dylib              \t0x000000010abf7cf2 PROCEndProcess(void*, unsigned int, int) + 226\r\n5   libcoreclr.dylib              \t0x000000010aed02c1 UnwindManagedExceptionPass1(PAL_SEHException&, _CONTEXT*) + 737\r\n6   libcoreclr.dylib              \t0x000000010aed0460 DispatchManagedException(PAL_SEHException&, bool) + 304\r\n7   libcoreclr.dylib              \t0x000000010ae31339 IL_Throw(Object*) + 713\r\n8   ???                           \t0x000000011970577f 0 + 4721760127\r\n9   ???                           \t0x0000000119e35527 0 + 4729296167\r\n10  ???                           \t0x0000000119c81b93 0 + 4727511955\r\n11  libcoreclr.dylib              \t0x000000010af57397 CallDescrWorkerInternal + 124\r\n12  libcoreclr.dylib              \t0x000000010adbd561 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 945\r\n13  libcoreclr.dylib              \t0x000000010ac90106 RunMain(MethodDesc*, short, int*, PtrArray**) + 694\r\n14  libcoreclr.dylib              \t0x000000010ac90472 Assembly::ExecuteMainMethod(PtrArray**, int) + 402\r\n15  libcoreclr.dylib              \t0x000000010acd0ea4 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 436\r\n16  libcoreclr.dylib              \t0x000000010ac02046 coreclr_execute_assembly + 230\r\n17  libhostpolicy.dylib           \t0x000000010ab4b388 0x10aac2000 + 562056\r\n18  libhostpolicy.dylib           \t0x000000010ab347df 0x10aac2000 + 468959\r\n19  libhostpolicy.dylib           \t0x000000010ab3b089 0x10aac2000 + 495753\r\n20  libhostfxr.dylib              \t0x000000010aa5d8a3 0x10a9d3000 + 567459\r\n21  libhostfxr.dylib              \t0x000000010aa7d5ee 0x10a9d3000 + 697838\r\n22  libhostfxr.dylib              \t0x000000010aa801c2 0x10a9d3000 + 709058\r\n23  libhostfxr.dylib              \t0x000000010aa7e678 0x10a9d3000 + 702072\r\n24  libhostfxr.dylib              \t0x000000010aa5e919 0x10a9d3000 + 571673\r\n25  dotnet                        \t0x000000010a9a7052 0x10a99a000 + 53330\r\n26  dotnet                        \t0x000000010a9a7645 0x10a99a000 + 54853\r\n27  libdyld.dylib                 \t0x00007fff5c8dced9 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   libcoreclr.dylib              \t0x000000010abfe8c8 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x000000010abfd81e SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1e2ee poll + 10\r\n1   libcoreclr.dylib              \t0x000000010abf0a1e CorUnix::CPalSynchronizationManager::ThreadPrepareForShutdown() + 30\r\n2   libcoreclr.dylib              \t0x000000010abf2550 CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 944\r\n3   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n4   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca17152 __open + 10\r\n1   libcoreclr.dylib              \t0x000000010ac6e3ff TwoWayPipe::WaitForConnection() + 31\r\n2   libcoreclr.dylib              \t0x000000010ac65e11 DbgTransportSession::TransportWorker() + 177\r\n3   libcoreclr.dylib              \t0x000000010ac64759 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n7   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4f32 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010ac62b98 DebuggerRCThread::MainLoop() + 264\r\n7   libcoreclr.dylib              \t0x000000010ac62a2b DebuggerRCThread::ThreadProc() + 251\r\n8   libcoreclr.dylib              \t0x000000010ac62734 DebuggerRCThread::ThreadProcStatic(void*) + 132\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea773 SVR::gc_heap::gc_thread_function() + 163\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea751 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea751 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea751 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4f32 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010ae0785e FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 158\r\n7   libcoreclr.dylib              \t0x000000010ae07953 FinalizerThread::FinalizerThreadWorker(void*) + 115\r\n8   libcoreclr.dylib              \t0x000000010ad80f23 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 419\r\n9   libcoreclr.dylib              \t0x000000010ad815c9 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 73\r\n10  libcoreclr.dylib              \t0x000000010ae07c6c FinalizerThread::FinalizerThreadStart(void*) + 204\r\n11  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n13  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n14  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   libclrjit.dylib               \t0x000000010c3eee68 MachMessage::Receive(unsigned int) + 72\r\n3   libclrjit.dylib               \t0x000000010c3eddbe SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf532d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010ada3d16 ThreadpoolMgr::TimerThreadFire() + 150\r\n6   libcoreclr.dylib              \t0x000000010ada3be5 ThreadpoolMgr::TimerThreadStart(void*) + 181\r\n7   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n10  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff2f68ffde __CFRunLoopServiceMachPort + 337\r\n3   com.apple.CoreFoundation      \t0x00007fff2f68f52d __CFRunLoopRun + 1654\r\n4   com.apple.CoreFoundation      \t0x00007fff2f68ec64 CFRunLoopRunSpecific + 463\r\n5   com.apple.CoreFoundation      \t0x00007fff2f68ea70 CFRunLoopRun + 40\r\n6   ???                           \t0x0000000119c901e3 0 + 4727570915\r\n7   ???                           \t0x000000011ad4c271 0 + 4745118321\r\n8   ???                           \t0x000000011af25126 0 + 4747055398\r\n9   libcoreclr.dylib              \t0x000000010af57397 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x000000010adbd561 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 945\r\n11  libcoreclr.dylib              \t0x000000010add168f ThreadNative::KickOffThread_Worker(void*) + 431\r\n12  libcoreclr.dylib              \t0x000000010ad80f23 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 419\r\n13  libcoreclr.dylib              \t0x000000010ad81533 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x000000010add18af ThreadNative::KickOffThread(void*) + 351\r\n15  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n18  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 13:\r\n0   libsystem_pthread.dylib       \t0x00007fff5cacf3f8 start_wqthread + 0\r\n1   ???                           \t0x0000000054485244 0 + 1414025796\r\n\r\nThread 14:\r\n0   libsystem_pthread.dylib       \t0x00007fff5cacf3f8 start_wqthread + 0\r\n1   ???                           \t0x0000000000001403 0 + 5123\r\n\r\nThread 15:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 16:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf532d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010ae1080f __SwitchToThread(unsigned int, unsigned int) + 15\r\n6   libcoreclr.dylib              \t0x000000010ada328c ThreadpoolMgr::GateThreadStart(void*) + 444\r\n7   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n10  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 17:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 18:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca17e5e read + 10\r\n1   System.Native.dylib           \t0x000000010df9c79f SignalHandlerLoop + 79\r\n2   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n3   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n4   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 19:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 20:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 21:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff2f68ffde __CFRunLoopServiceMachPort + 337\r\n3   com.apple.CoreFoundation      \t0x00007fff2f68f52d __CFRunLoopRun + 1654\r\n4   com.apple.CoreFoundation      \t0x00007fff2f68ec64 CFRunLoopRunSpecific + 463\r\n5   com.apple.CoreFoundation      \t0x00007fff2f68ea70 CFRunLoopRun + 40\r\n6   ???                           \t0x0000000119c901e3 0 + 4727570915\r\n7   ???                           \t0x000000011ad4c271 0 + 4745118321\r\n8   ???                           \t0x000000011af25126 0 + 4747055398\r\n9   libcoreclr.dylib              \t0x000000010af57397 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x000000010adbd561 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 945\r\n11  libcoreclr.dylib              \t0x000000010add168f ThreadNative::KickOffThread_Worker(void*) + 431\r\n12  libcoreclr.dylib              \t0x000000010ad80f23 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 419\r\n13  libcoreclr.dylib              \t0x000000010ad81533 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x000000010add18af ThreadNative::KickOffThread(void*) + 351\r\n15  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n18  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 22:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9ec0d CLRLifoSemaphore::WaitForSignal(unsigned int) + 269\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 23:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9ec0d CLRLifoSemaphore::WaitForSignal(unsigned int) + 269\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x00000001134845c0  rcx: 0x00007ffee525bf88  rdx: 0x0000000000000000\r\n  rdi: 0x0000000000000307  rsi: 0x0000000000000006  rbp: 0x00007ffee525bfc0  rsp: 0x00007ffee525bf88\r\n   r8: 0x000000000009efff   r9: 0xffffffff00000000  r10: 0x0000000000000000  r11: 0x0000000000000206\r\n  r12: 0x0000000000000307  r13: 0x0000000000000000  r14: 0x0000000000000006  r15: 0x000000000000002d\r\n  rip: 0x00007fff5ca1c23e  rfl: 0x0000000000000206  cr2: 0x000070000341eff8\r\n  \r\nLogical CPU:     0\r\nError Code:      0x02000005\r\nTrap Number:     133\r\n\r\n\r\nBinary Images:\r\n       0x10a99a000 -        0x10a9bcff7 +dotnet (0) <EC08A28E-D343-361D-BA43-97C8616BBE3B> /usr/local/share/dotnet/dotnet\r\n       0x10a9d3000 -        0x10aab9fff +libhostfxr.dylib (0) <9421119C-940C-3E46-B924-583295CD62B9> /usr/local/share/dotnet/host/fxr/2.2.3/libhostfxr.dylib\r\n       0x10aac2000 -        0x10ababfff +libhostpolicy.dylib (0) <63A45EA9-CA14-3C7B-BF29-4A41C1A8BCF3> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/libhostpolicy.dylib\r\n       0x10abb5000 -        0x10b107fff +libcoreclr.dylib (0) <69A2907A-6CAB-39EE-9700-D7749FE0B8CC> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/libcoreclr.dylib\r\n       0x10c226000 -        0x10c436ff7 +libclrjit.dylib (0) <C5987D3A-F658-3D22-B71F-FD26316E843C> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/libclrjit.dylib\r\n       0x10c4da000 -        0x10c4e5fff +System.Globalization.Native.dylib (0) <4CBB0592-3C9A-3E59-BAB3-950323C204FE> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/System.Globalization.Native.dylib\r\n       0x10df95000 -        0x10df9dfff +System.Native.dylib (0) <CE333C0B-EE55-33C2-ACD8-6502D8E762D7> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/System.Native.dylib\r\n       0x10dfbe000 -        0x10dfc4ff7 +System.Security.Cryptography.Native.Apple.dylib (0) <91B1BDF7-6E80-3FAE-ACF6-CA70331B8754> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/System.Security.Cryptography.Native.Apple.dylib\r\n       0x1133ce000 -        0x11344ca87  dyld (655.1) <3EBA447F-A546-366B-B302-8DC3B21A3E30> /usr/lib/dyld\r\n    0x7fff2b980000 -     0x7fff2b980fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <A09CB6D5-3F8A-3E05-B0EB-63878296A059> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff2b998000 -     0x7fff2c038fe3  com.apple.vImage (8.1 - ???) <BDA40EB0-9B20-3ACF-BE37-199578FA84F4> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff2c039000 -     0x7fff2c2b0fd7  libBLAS.dylib (1243.200.4) <0ADBEAE3-6636-33E5-AC9F-11C2249E19D3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff2c2b1000 -     0x7fff2c323fe7  libBNNS.dylib (38.200.5) <CC93B9B5-2A8C-3D42-9234-75DD41EC8C0D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff2c324000 -     0x7fff2c6cafff  libLAPACK.dylib (1243.200.4) <45722A8A-5788-3C4C-ADD9-1812763FA635> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff2c6cb000 -     0x7fff2c6e0ffb  libLinearAlgebra.dylib (1243.200.4) <3923AB79-213E-32FD-AC87-8B1A1A832336> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff2c6e1000 -     0x7fff2c6e6ff3  libQuadrature.dylib (3.200.2) <4FBCAC0A-81A4-3C53-8458-27F3569C809D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff2c6e7000 -     0x7fff2c764ffb  libSparse.dylib (79.200.5) <2D650C50-E87E-3F24-9BFA-C8EB6DE1A6E9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff2c765000 -     0x7fff2c778ffb  libSparseBLAS.dylib (1243.200.4) <6F8C78BE-A0FD-3507-8A95-541AFC57F1EE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff2c779000 -     0x7fff2c95dff3  libvDSP.dylib (671.220.1) <2F576522-08B1-3C65-8F00-3427E938ADDA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff2c95e000 -     0x7fff2ca13ff3  libvMisc.dylib (671.220.1) <D7B5F89D-3310-31F4-B8BF-42DA300ABE64> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff2ca14000 -     0x7fff2ca14fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <221E4FEF-0431-3316-8281-22B6F8315A09> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff2da38000 -     0x7fff2da38fff  com.apple.ApplicationServices (50.1 - 50.1) <86D6F10E-21F8-3CDC-9838-EB07A1C54BA9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff2da39000 -     0x7fff2daa4ff7  com.apple.ApplicationServices.ATS (377 - 453.11) <4080F8BE-F2A2-3707-8754-436FBDB1DAF1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff2db3d000 -     0x7fff2dc5cfff  libFontParser.dylib (228.6) <BBCBEE2C-5B55-3278-B81D-22D72466753E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff2dc5d000 -     0x7fff2dca8ff7  libFontRegistry.dylib (228.12.1.1) <B515718C-81BC-3705-A207-7215486C6D28> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff2dda4000 -     0x7fff2dda8ff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <4B1238CC-9B77-3AA5-8329-EE3C736F07EA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff2de45000 -     0x7fff2de97ff3  com.apple.HIServices (1.22 - 627.14.2) <1F851BF9-AD29-3558-9EA5-AAD9BAAAC823> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff2de98000 -     0x7fff2dea6ff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) <5654723A-7B3B-391F-B9F7-0DE4D5940185> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff2dea7000 -     0x7fff2def3fff  com.apple.print.framework.PrintCore (14.2 - 503.8) <F1246C9A-2216-3390-8DF1-89304F47CE5D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff2def4000 -     0x7fff2df2fff7  com.apple.QD (3.12 - 407.2) <F6B648DA-DA39-3EB4-B593-1B7E316661CD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff2df30000 -     0x7fff2df3cff7  com.apple.speech.synthesis.framework (8.1.0 - 8.1.0) <CF19C8B6-AAD5-3DCF-ABD0-3BABB44D119C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff2df3d000 -     0x7fff2e1dafff  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <5D484151-F269-3D98-B507-0544A6B950AC> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff2e540000 -     0x7fff2e901fff  com.apple.CFNetwork (976 - 976) <A434842F-305B-301D-8F88-373CA7BF7196> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff2ee3f000 -     0x7fff2ef0bfff  com.apple.ColorSync (4.13.0 - 3340) <2F45EB01-0C51-3D25-9836-18F99222E1C7> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff2f0a6000 -     0x7fff2f136fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <1E7EF105-B843-370D-884E-0A43E1A5800B> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff2f1c8000 -     0x7fff2f569fef  com.apple.CoreData (120 - 866.1) <18CD58FD-513E-385B-B43C-08EEB909709C> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff2f56a000 -     0x7fff2f653ff7  com.apple.CoreDisplay (101.3 - 106.2) <EE0D334B-8B71-3A70-9F90-677171D6762F> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff2f654000 -     0x7fff2faa1fef  com.apple.CoreFoundation (6.9 - 1562) <02A2C178-9FF6-385C-A9C5-7F4FC9D66311> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff2faa3000 -     0x7fff30130ff7  com.apple.CoreGraphics (2.0 - 1249.2) <78B75F62-4B60-3FF4-9259-8981E755F6CD> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff30132000 -     0x7fff3045bfff  com.apple.CoreImage (14.2.0 - 720.0.130) <B356BA95-EDD3-35D8-9E4B-250AF6C6DDF9> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff30911000 -     0x7fff30911fff  com.apple.CoreServices (941 - 941) <6DBA4791-26DB-39FB-A6A3-5910A0F2EDD2> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff30912000 -     0x7fff30990ffb  com.apple.AE (771 - 771) <4B009524-699E-3891-98DD-E3B6BB433C8F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff30991000 -     0x7fff30c69ff7  com.apple.CoreServices.CarbonCore (1178.16 - 1178.16) <17FC2B9E-EB6C-3768-A2D0-6E086F2563D9> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff30c6a000 -     0x7fff30cb4ff7  com.apple.DictionaryServices (1.2 - 284.16.3) <1DAC9153-FB5A-3798-8797-CBFEFF227F71> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff30cb5000 -     0x7fff30cbdffb  com.apple.CoreServices.FSEvents (1239.200.12 - 1239.200.12) <8E1507EA-F0A8-3845-B32D-4FBC1381E89C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff30cbe000 -     0x7fff30e89fff  com.apple.LaunchServices (941 - 941) <A8E42760-995C-35E2-BF4A-C96FD0633B29> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff30e8a000 -     0x7fff30f2cfff  com.apple.Metadata (10.7.0 - 1191.53) <48609998-8A34-3CAF-8A42-52C180809656> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff30f2d000 -     0x7fff30f78ff7  com.apple.CoreServices.OSServices (941 - 941) <1B9EA259-09DF-332B-807A-BD50F3184CAC> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff30f79000 -     0x7fff30fe7ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <CEC29BB5-D28E-3424-84FE-70756E521F3B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff30fe8000 -     0x7fff3100cffb  com.apple.coreservices.SharedFileList (71.27 - 71.27) <6389B59D-DDAC-3C97-A982-137B9B1FB734> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff31354000 -     0x7fff314b9ffb  com.apple.CoreText (352.0 - 584.26) <5F61037C-825D-37A4-9091-0047413CC213> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff314ba000 -     0x7fff314f7fff  com.apple.CoreVideo (1.8 - 0.0) <34EC73F1-F0ED-32F5-B96E-7683B1F9A7A2> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff3180b000 -     0x7fff31810fff  com.apple.DiskArbitration (2.7 - 2.7) <97707A79-30E7-3D99-AA20-B992B0900BC4> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff319d9000 -     0x7fff31da7fff  com.apple.Foundation (6.9 - 1562) <83D4A12B-EA5A-3C62-8D93-95E64F0A256B> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff31e18000 -     0x7fff31e48ff3  com.apple.GSS (4.0 - 2.0) <86D07291-5DFC-30C2-9A18-5FCEDB0BE621> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff320ce000 -     0x7fff32161fff  com.apple.framework.IOKit (2.0.2 - 1483.240.1) <241690BB-8AFA-3B6A-A210-67874197CB59> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff32163000 -     0x7fff3216dff7  com.apple.IOSurface (255.1 - 255.1) <58826B1A-38E8-3C76-8FFC-76C9282DA893> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff321c4000 -     0x7fff32362fff  com.apple.ImageIO.framework (3.3.0 - 1822.1) <908907D5-5C29-32F7-ACD9-C6A6D51C4D15> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff32363000 -     0x7fff32367ffb  libGIF.dylib (1822.1) <35E37B95-1962-3A25-9C9E-CADD161152B3> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff32368000 -     0x7fff3244dfe7  libJP2.dylib (1822.1) <BDBCBF28-12DB-3D63-B6F0-A559D1839F81> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff3244e000 -     0x7fff32473ff7  libJPEG.dylib (1822.1) <D443C754-4AFC-38E1-9E45-D309ACBCE17B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff32746000 -     0x7fff3276cfe7  libPng.dylib (1822.1) <28FE6E2C-1A17-3A84-AAF3-76014DEADDD4> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff3276d000 -     0x7fff3276fff7  libRadiance.dylib (1822.1) <687906E3-4EC2-3CE9-B7EA-34418239EE1B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff32770000 -     0x7fff327beffb  libTIFF.dylib (1822.1) <0A1C083B-CE2F-3A00-8E45-EB58DCA2FF34> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff33868000 -     0x7fff33881fff  com.apple.Kerberos (3.0 - 1) <5D1B0593-3C0E-32D5-AAE5-ABC22A98B639> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff342a3000 -     0x7fff34336fff  com.apple.Metal (158.5 - 158.5) <72BF7187-81FE-389B-882F-7B2587FEB455> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff34353000 -     0x7fff34373ff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <18281B14-0C6A-38F8-AB80-2D4BB0743C88> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff34374000 -     0x7fff343f2ff7  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <BEAF764B-362B-3C45-86F5-2AFBA5FA0F47> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff343f3000 -     0x7fff3441bfff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <116D6C1A-2FD7-3743-95A0-CDDA3D459529> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff3441c000 -     0x7fff3454eff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <88E80BEE-3D2B-328B-80D4-F4717BDB2E9F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff3454f000 -     0x7fff3456aff7  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <E0E652B0-1624-3435-AD60-83A9C4B59852> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector\r\n    0x7fff3456b000 -     0x7fff3456bff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <1BBA8BC8-49C6-3C9B-B985-7CE4373E3553> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff35769000 -     0x7fff35775ffb  com.apple.NetFS (6.0 - 4.0) <918DF6CD-2DB0-36A8-B869-5EF637A06C0D> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff38235000 -     0x7fff3828dfff  com.apple.opencl (2.15.1 - 2.15.1) <CC9439C3-FF30-38D2-BF2F-EA0EF1B5775E> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff3828e000 -     0x7fff382aaff7  com.apple.CFOpenDirectory (10.14 - 207.200.4) <2CB1F122-2FA0-347C-8454-9CE0FA150832> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff382ab000 -     0x7fff382b7ffb  com.apple.OpenDirectory (10.14 - 207.200.4) <A3FB0F0C-57F4-3F89-A4B1-63DA1F7C9E8E> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff38c1a000 -     0x7fff38c1cfff  libCVMSPluginSupport.dylib (17.3.1) <B2310175-04D6-378B-A220-A8AD7F0DA68E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff38c1d000 -     0x7fff38c22ff3  libCoreFSCache.dylib (163.20) <566DB80E-F1D6-3AEC-AF06-08955507AFEE> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff38c23000 -     0x7fff38c27fff  libCoreVMClient.dylib (163.20) <B9A89373-BDCD-3003-9A82-6D73B930A122> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff38c28000 -     0x7fff38c30ffb  libGFXShared.dylib (17.3.1) <9FFA679A-8CC9-3932-8A41-AA80C386AD3A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff38c31000 -     0x7fff38c3cfff  libGL.dylib (17.3.1) <CFAB6AE4-E646-3E8A-B872-EF091CAF949E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff38c3d000 -     0x7fff38c77fef  libGLImage.dylib (17.3.1) <1AEC8E56-D851-3516-96FE-2829883A8302> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff38deb000 -     0x7fff38e28fff  libGLU.dylib (17.3.1) <90279918-D4B2-31E0-9709-8E06628D9486> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff397d8000 -     0x7fff397e7ff3  com.apple.opengl (17.3.1 - 17.3.1) <2F59064F-D6EF-35CD-9747-20A91DB3D5DF> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff3a643000 -     0x7fff3a89cfff  com.apple.QuartzCore (1.11 - 696.3) <01A2F065-8759-311D-AC2E-FD49F52A87FA> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff3b0f0000 -     0x7fff3b418ff7  com.apple.security (7.0 - 58286.240.4) <91A03FF2-2EE9-36A7-AC4F-169E11FE7846> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff3b419000 -     0x7fff3b4a8fff  com.apple.securityfoundation (6.0 - 55185.200.14) <F6A0EC77-51DB-3312-991C-3E1F920DE8F1> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff3b4da000 -     0x7fff3b4deff3  com.apple.xpc.ServiceManagement (1.0 - 1) <26BA237C-DBA0-3322-B9BF-8B8E739E3A20> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff3b89b000 -     0x7fff3b90bff3  com.apple.SystemConfiguration (1.17 - 1.17) <A8FD596E-C858-397F-836C-978038B97AC0> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff3eb79000 -     0x7fff3ec1efe7  com.apple.APFS (1.0 - 1) <BCB42C90-DEE0-3CD2-9B28-55CD8EFD9487> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff3f66a000 -     0x7fff3f66bff3  com.apple.AggregateDictionary (1.0 - 1) <EBA6443E-6CF0-34F6-B77A-3FCEC57F8F80> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary\r\n    0x7fff3ff70000 -     0x7fff3ff7ffcf  com.apple.AppleFSCompression (96.200.3 - 1.0) <78D538DD-1D24-34FC-AFB3-10411494870D> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff400c9000 -     0x7fff40112ff3  com.apple.AppleJPEG (1.0 - 1) <EC4C49F1-C060-3C0F-910F-3620985D4F12> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff40365000 -     0x7fff4038dff7  com.apple.applesauce (1.0 - ???) <58654BC0-9243-39D1-BC43-B7F2E37A3A44> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff404f3000 -     0x7fff40509ffb  com.apple.AssertionServices (1.0 - 1) <3F767D20-FE14-35CF-A089-E0445375ECFB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices\r\n    0x7fff40cb9000 -     0x7fff40cc2ff3  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <05CF66F0-9650-3F75-9857-F8D186043866> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff40d66000 -     0x7fff40dd7ffb  com.apple.BaseBoard (360.24 - 360.24) <04AF4372-C5D3-3F0A-A688-68D888D6D138> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard\r\n    0x7fff4298c000 -     0x7fff42995fff  com.apple.CommonAuth (4.0 - 2.0) <090893E5-BB65-39DA-A174-EAB2C7191EFE> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff436a6000 -     0x7fff436bafff  com.apple.CoreEmoji (1.0 - 69.19.8) <26BC0F82-08C1-3EBD-9299-D3CC5091C467> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff43c90000 -     0x7fff43d02ff7  com.apple.CoreNLP (1.0 - 130.15.22) <D0A3E880-CDEA-360A-9838-220D76BAECC6> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP\r\n    0x7fff44a99000 -     0x7fff44a9dff7  com.apple.DSExternalDisplay (3.1 - 380) <76449D22-BA27-3FB1-AD25-A290936E6DEA> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff45dc2000 -     0x7fff461eafff  com.apple.vision.FaceCore (3.3.4 - 3.3.4) <41218EB7-19C9-3813-A793-B0623387CADF> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff4b1b7000 -     0x7fff4b1bcff7  com.apple.GPUWrangler (3.28.4 - 3.28.4) <7E06C75D-5502-3F1D-987C-4F103917CD85> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff4c027000 -     0x7fff4c036fff  com.apple.GraphVisualizer (1.0 - 5) <CAFE626E-9738-3C14-88AA-B6A9182F2C39> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff4c187000 -     0x7fff4c1fcfff  com.apple.Heimdal (4.0 - 2.0) <D99FF31F-6310-3D80-8AE3-64934385AC11> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff4d5ec000 -     0x7fff4d5f3ffb  com.apple.IOAccelerator (404.2.2 - 404.2.2) <2F099589-DBE9-3442-AC93-F4AB363482A0> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff4d5f7000 -     0x7fff4d610fff  com.apple.IOPresentment (1.0 - 42.6) <F7E91CC9-E4BB-3904-8647-0473E3BCAF70> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff4dd23000 -     0x7fff4de1afff  com.apple.LanguageModeling (1.0 - 159.15.15) <34609F31-4DA1-3881-8947-85BEA7AFC938> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff4de1b000 -     0x7fff4de5cff7  com.apple.Lexicon-framework (1.0 - 33.15.10) <07E008F3-E823-333B-8B41-A46024AB0561> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff4de63000 -     0x7fff4de69ff7  com.apple.LinguisticData (1.0 - 238.23.4) <F6AA7095-3975-3C76-9833-BBE955EFEBD7> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff4ebc6000 -     0x7fff4ebeeffb  com.apple.spotlight.metadata.utilities (1.0 - 1191.53) <2CFFD786-87A5-3629-B5E1-8E4DEF51ADA8> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities\r\n    0x7fff4ebef000 -     0x7fff4ec81fff  com.apple.gpusw.MetalTools (1.0 - 1) <C0489BBD-C25C-33E5-84CD-8A50205080A0> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff4eed5000 -     0x7fff4eeffff7  com.apple.MultitouchSupport.framework (2410.5 - 2410.5) <3A712911-F672-3BB3-B62B-A2A7BADF3578> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff4f172000 -     0x7fff4f17dfff  com.apple.NetAuth (6.2 - 6.2) <A6474ABC-FD4B-3A8F-AB33-7AACEEED7F0E> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff4fa4a000 -     0x7fff4faa0fff  com.apple.OTSVG (1.0 - ???) <F020144A-D840-390D-A87F-29E8095C78AF> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG\r\n    0x7fff5578f000 -     0x7fff55a41ff3  com.apple.SkyLight (1.600.0 - 337.5) <B18B2F6F-F44B-3B5B-8DA1-3B8977E59240> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff57616000 -     0x7fff57623ffb  com.apple.TCC (1.0 - 1) <81F88B91-49C1-36E7-8A39-C4BD654EE942> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff5960a000 -     0x7fff5960cff3  com.apple.loginsupport (1.0 - 1) <67BC49D6-320F-33ED-912E-16E5A342F385> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff598c7000 -     0x7fff598fffff  libCRFSuite.dylib (41.15.4) <92752A96-D1CF-3CA1-837A-1E075AE4C642> /usr/lib/libCRFSuite.dylib\r\n    0x7fff59902000 -     0x7fff5990dff7  libChineseTokenizer.dylib (28.15.3) <55572692-4918-3C54-AD35-726E03EC47D5> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff5999e000 -     0x7fff5999fff7  libDiagnosticMessagesClient.dylib (107) <15210AC0-61F9-3F9D-A159-A009F62EB537> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff599d6000 -     0x7fff59b99ff7  libFosl_dynamic.dylib (18.3.2) <D67B74E9-EB95-38BC-995C-5F4CC044C3F7> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff59bef000 -     0x7fff59c0eff7  libMobileGestalt.dylib (645.220.9) <C2C55511-993B-34D2-9040-902BFDA38141> /usr/lib/libMobileGestalt.dylib\r\n    0x7fff59c0f000 -     0x7fff59c0ffff  libOpenScriptingUtil.dylib (179) <441A2E60-5D5C-3567-9B00-AA22E6EE5358> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff59d50000 -     0x7fff59d51ffb  libSystem.B.dylib (1252.200.5) <C6201660-5E17-397D-BA21-C503420CD706> /usr/lib/libSystem.B.dylib\r\n    0x7fff59ddb000 -     0x7fff59ddcfff  libThaiTokenizer.dylib (2.15.1) <F09EB0BB-1E8A-3391-BEF5-7D91F0715A62> /usr/lib/libThaiTokenizer.dylib\r\n    0x7fff59def000 -     0x7fff59e05ffb  libapple_nghttp2.dylib (1.24.1) <71C126C5-D869-3E67-9778-058FA7F3CA74> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff59e06000 -     0x7fff59e2fffb  libarchive.2.dylib (54.200.3) <32B8634D-E465-3F6D-B254-A20D44504508> /usr/lib/libarchive.2.dylib\r\n    0x7fff59eb3000 -     0x7fff59eb3ff3  libauto.dylib (187) <003DEF68-0C59-3AFB-A7B7-A1B5ED301AF2> /usr/lib/libauto.dylib\r\n    0x7fff59f8a000 -     0x7fff59f9aff3  libbsm.0.dylib (39.200.18) <58A9ACEC-BF46-3A4E-86F5-3DD9AD7095B4> /usr/lib/libbsm.0.dylib\r\n    0x7fff59f9b000 -     0x7fff59fa9fff  libbz2.1.0.dylib (38.200.3) <4DEC3797-087F-3C8D-815B-48E895813251> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff59faa000 -     0x7fff5a001ff7  libc++.1.dylib (400.9.4) <B260AC33-EB9A-30C6-8746-D011B3B02B08> /usr/lib/libc++.1.dylib\r\n    0x7fff5a002000 -     0x7fff5a017fff  libc++abi.dylib (400.17) <446F4748-8A89-3D2E-AE1C-27EEBE93A8AB> /usr/lib/libc++abi.dylib\r\n    0x7fff5a018000 -     0x7fff5a018ff3  libcharset.1.dylib (51.200.6) <43F7E100-F5D1-36AB-A26E-CF94196A19C0> /usr/lib/libcharset.1.dylib\r\n    0x7fff5a019000 -     0x7fff5a029ffb  libcmph.dylib (6.15.1) <CEDA6538-C071-3B5A-948E-DF61E2878983> /usr/lib/libcmph.dylib\r\n    0x7fff5a02a000 -     0x7fff5a042ffb  libcompression.dylib (52.200.13) <05A2A91B-D24D-39E8-A071-261CBC5BB158> /usr/lib/libcompression.dylib\r\n    0x7fff5a2ed000 -     0x7fff5a303fff  libcoretls.dylib (155.220.1) <1229F9EA-C070-3D03-9DC6-F548C59F9FD5> /usr/lib/libcoretls.dylib\r\n    0x7fff5a304000 -     0x7fff5a305ff3  libcoretls_cfhelpers.dylib (155.220.1) <33661841-3C3B-3608-86AC-C88D1CD6FE98> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff5a97c000 -     0x7fff5a9d3ffb  libcups.2.dylib (462.10) <29B6D106-A5F2-321D-8916-90F595545D88> /usr/lib/libcups.2.dylib\r\n    0x7fff5ab0b000 -     0x7fff5ab0bfff  libenergytrace.dylib (17.200.1) <F5BA8134-16F9-31CD-90E1-D1EBEBADA4AE> /usr/lib/libenergytrace.dylib\r\n    0x7fff5ab3d000 -     0x7fff5ab42ff7  libgermantok.dylib (17.15.2) <9381B152-5CFD-3D23-A5A7-4D64EE55B85E> /usr/lib/libgermantok.dylib\r\n    0x7fff5ab43000 -     0x7fff5ab48ff7  libheimdal-asn1.dylib (520.220.2) <D851A47D-E162-35F8-B8D4-6ABEA7FFDAD7> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff5ab74000 -     0x7fff5ac65ff7  libiconv.2.dylib (51.200.6) <9FB95807-7C62-32B7-A19F-946D7FB7CCA6> /usr/lib/libiconv.2.dylib\r\n    0x7fff5ac66000 -     0x7fff5aec9ffb  libicucore.A.dylib (62109.0.1) <FEB89BD3-79C4-3208-A754-7E6BC4D38548> /usr/lib/libicucore.A.dylib\r\n    0x7fff5af16000 -     0x7fff5af17fff  liblangid.dylib (128.15.1) <663D0A24-7260-31D1-9BFE-74D67B6F72F6> /usr/lib/liblangid.dylib\r\n    0x7fff5af18000 -     0x7fff5af30fff  liblzma.5.dylib (10.200.3) <9A52A949-0CB1-39B6-9244-D079FB609559> /usr/lib/liblzma.5.dylib\r\n    0x7fff5af48000 -     0x7fff5aff8fff  libmecab.1.0.0.dylib (779.24.1) <590BC39C-2A3E-368B-9499-C808B84C4955> /usr/lib/libmecab.1.0.0.dylib\r\n    0x7fff5aff9000 -     0x7fff5b236ff7  libmecabra.dylib (779.24.1) <22BFD5A8-EA42-3DC3-8910-F27DCFB1B631> /usr/lib/libmecabra.dylib\r\n    0x7fff5b40e000 -     0x7fff5b766ffb  libnetwork.dylib (1229.240.1) <F99593DA-3089-3008-BE5B-5AC096EBF3A3> /usr/lib/libnetwork.dylib\r\n    0x7fff5b7f8000 -     0x7fff5bf7efe7  libobjc.A.dylib (750.1) <804715F4-F52D-34D0-8FEC-A25DC08513C3> /usr/lib/libobjc.A.dylib\r\n    0x7fff5bf91000 -     0x7fff5bf95ffb  libpam.2.dylib (22.200.1) <85253002-89F2-3872-9C8A-1801303A2EBB> /usr/lib/libpam.2.dylib\r\n    0x7fff5bf98000 -     0x7fff5bfceff7  libpcap.A.dylib (79.200.4) <6D25197A-2F7C-3147-A45A-F6F13E55909F> /usr/lib/libpcap.A.dylib\r\n    0x7fff5c0e8000 -     0x7fff5c100ffb  libresolv.9.dylib (65.200.2) <A1A77B4E-1AF0-3039-9945-D05440494E00> /usr/lib/libresolv.9.dylib\r\n    0x7fff5c154000 -     0x7fff5c32bfe7  libsqlite3.dylib (274.22) <B30E3B7E-E22E-37A0-A3EB-EA333ADEE13E> /usr/lib/libsqlite3.dylib\r\n    0x7fff5c5b8000 -     0x7fff5c5bbffb  libutil.dylib (51.200.4) <10C5E165-0939-363A-9D13-7076F3B513EC> /usr/lib/libutil.dylib\r\n    0x7fff5c5bc000 -     0x7fff5c5c9fff  libxar.1.dylib (404) <16E875B3-CF89-3059-87BB-36D301B32E7B> /usr/lib/libxar.1.dylib\r\n    0x7fff5c5ce000 -     0x7fff5c6b1fff  libxml2.2.dylib (32.8) <3E7875AC-3195-3800-AC48-8AA3B7BE51E4> /usr/lib/libxml2.2.dylib\r\n    0x7fff5c6b2000 -     0x7fff5c6daff3  libxslt.1.dylib (16.1) <D6EBFEBB-F88E-398F-B1B5-66F413C2CD32> /usr/lib/libxslt.1.dylib\r\n    0x7fff5c6db000 -     0x7fff5c6edffb  libz.1.dylib (70.200.4) <15F7B40A-424C-33BB-BF2C-7E8195128B78> /usr/lib/libz.1.dylib\r\n    0x7fff5c75e000 -     0x7fff5c762ff3  libcache.dylib (81) <704331AC-E43D-343A-8C24-39201142AF27> /usr/lib/system/libcache.dylib\r\n    0x7fff5c763000 -     0x7fff5c76dff3  libcommonCrypto.dylib (60118.220.1) <9C865644-EE9A-3662-AB77-7C8A5E561784> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff5c76e000 -     0x7fff5c775fff  libcompiler_rt.dylib (63.4) <817772E3-E836-3FFD-A39B-BDCD1C357221> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff5c776000 -     0x7fff5c77fff3  libcopyfile.dylib (146.200.3) <5C5C4F35-DAB7-3CF1-940F-F47192AB8289> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff5c780000 -     0x7fff5c804fdf  libcorecrypto.dylib (602.230.1) <C78D1A87-5543-3561-BEB4-3B480BA94ECB> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff5c88b000 -     0x7fff5c8c5ff7  libdispatch.dylib (1008.220.2) <2FDB1401-5119-3DF0-91F5-F4E105F00CD7> /usr/lib/system/libdispatch.dylib\r\n    0x7fff5c8c6000 -     0x7fff5c8f5ff3  libdyld.dylib (655.1) <90C801E7-5D05-37A8-810C-B58E8C53953A> /usr/lib/system/libdyld.dylib\r\n    0x7fff5c8f6000 -     0x7fff5c8f6ffb  libkeymgr.dylib (30) <A4EFD9A4-2EF3-3E18-B325-F527E3821939> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff5c8f7000 -     0x7fff5c903ff7  libkxld.dylib (4903.241.1) <D039B38D-E8E6-3011-94F5-A21CD3D59526> /usr/lib/system/libkxld.dylib\r\n    0x7fff5c904000 -     0x7fff5c904ff7  liblaunch.dylib (1336.240.2) <D5F0014D-CF46-3B04-9DE0-A1466DA14A2C> /usr/lib/system/liblaunch.dylib\r\n    0x7fff5c905000 -     0x7fff5c90afff  libmacho.dylib (921) <6ADB99F3-D142-3A0A-B3CE-031354766ACC> /usr/lib/system/libmacho.dylib\r\n    0x7fff5c90b000 -     0x7fff5c90dffb  libquarantine.dylib (86.220.1) <58524FD7-63C5-38E0-9D90-845A79551C14> /usr/lib/system/libquarantine.dylib\r\n    0x7fff5c90e000 -     0x7fff5c90fff3  libremovefile.dylib (45.200.2) <BA53CA8A-9974-3A43-9265-B110B1AE470F> /usr/lib/system/libremovefile.dylib\r\n    0x7fff5c910000 -     0x7fff5c927ff3  libsystem_asl.dylib (356.200.4) <33C62769-1242-3BC1-9459-13CBCDECC7FE> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff5c928000 -     0x7fff5c928fff  libsystem_blocks.dylib (73) <152EDADF-7D94-35F2-89B7-E66DCD945BBA> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff5c929000 -     0x7fff5c9b1fff  libsystem_c.dylib (1272.200.26) <D6C701A2-9F17-308D-B6AC-9E17EF31B7DF> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff5c9b2000 -     0x7fff5c9b5ff7  libsystem_configuration.dylib (963.200.27) <94898525-ECC8-3CC9-B312-CBEAAC305E32> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff5c9b6000 -     0x7fff5c9b9ff7  libsystem_coreservices.dylib (66) <10818C17-70E1-328E-A3E3-C3EB81AEC590> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff5c9ba000 -     0x7fff5c9c0ffb  libsystem_darwin.dylib (1272.200.26) <07468CF7-982F-37C4-83D0-D5E602A683AA> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff5c9c1000 -     0x7fff5c9c7ff7  libsystem_dnssd.dylib (878.240.1) <5FEA5E1E-E80F-3616-AD33-8E936D61F31A> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff5c9c8000 -     0x7fff5ca14ff3  libsystem_info.dylib (517.200.9) <54B65F21-2E93-3579-9B72-6637A03245D9> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff5ca15000 -     0x7fff5ca3dff7  libsystem_kernel.dylib (4903.241.1) <CA10BC3A-5B09-32CE-B74F-BAD01755AA37> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff5ca3e000 -     0x7fff5ca89ff7  libsystem_m.dylib (3158.200.7) <AF25F8E8-194C-314F-A2D3-A424853EE796> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff5ca8a000 -     0x7fff5caaeff7  libsystem_malloc.dylib (166.220.1) <4777DC06-F9C6-356E-82AB-86A1C6D62F3A> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff5caaf000 -     0x7fff5cabaff3  libsystem_networkextension.dylib (767.240.1) <4DB0D4A2-83E7-3638-AAA0-39CECD5C25F8> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff5cabb000 -     0x7fff5cac2fff  libsystem_notify.dylib (172.200.21) <65B3061D-41D7-3485-B217-A861E05AD50B> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff5cac3000 -     0x7fff5caccfef  libsystem_platform.dylib (177.200.16) <83DED753-51EC-3B8C-A98D-883A5184086B> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff5cacd000 -     0x7fff5cad7fff  libsystem_pthread.dylib (330.230.1) <80CC5992-823E-327E-BB6E-9D4568B84161> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff5cad8000 -     0x7fff5cadbff7  libsystem_sandbox.dylib (851.230.3) <D6469A17-C13C-3538-A300-D6517BB7F249> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff5cadc000 -     0x7fff5cadeff3  libsystem_secinit.dylib (30.220.1) <5964B6D2-19D4-3CF9-BDBC-4EB1D42348F1> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff5cadf000 -     0x7fff5cae6ff7  libsystem_symptoms.dylib (820.237.2) <487E1794-4C6E-3B1B-9C55-95B1A5FF9B90> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff5cae7000 -     0x7fff5cafcff7  libsystem_trace.dylib (906.220.1) <4D4BA88A-FA32-379D-8860-33838723B35F> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff5cafe000 -     0x7fff5cb03ffb  libunwind.dylib (35.4) <EF1A77FD-A86B-39F5-ABEA-6100AB23583A> /usr/lib/system/libunwind.dylib\r\n    0x7fff5cb04000 -     0x7fff5cb34fff  libxpc.dylib (1336.240.2) <EE0CDA53-6FF9-3B4E-A571-335A5FF6B6F4> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 57080\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=340.7M resident=0K(0%) swapped_out_or_unallocated=340.7M(100%)\r\nWritable regions: Total=114.9M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=114.9M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nActivity Tracing                   256K        2 \r\nDispatch continuations            8192K        2 \r\nKernel Alloc Once                    8K        2 \r\nMALLOC                            42.6M       11 \r\nMALLOC guard page                   16K        5 \r\nMALLOC_LARGE (reserved)            9.9M        2         reserved VM address space (unallocated)\r\nSTACK GUARD                       56.1M       25 \r\nStack                             19.2M       25 \r\nVM_ALLOCATE                       18.9G      728 \r\nVM_ALLOCATE (reserved)              68K        3         reserved VM address space (unallocated)\r\n__DATA                            16.4M      194 \r\n__FONT_DATA                          4K        2 \r\n__LINKEDIT                       218.0M       11 \r\n__TEXT                           122.6M      198 \r\n__UNICODE                          564K        2 \r\nmapped file                       94.8M      577 \r\nshared memory                       48K        6 \r\n===========                     =======  ======= \r\nTOTAL                             19.4G     1778 \r\nTOTAL, minus reserved VM space    19.4G     1778 \r\n\r\nModel: MacBookAir7,2, BootROM 182.0.0.0.0, 2 processors, Intel Core i5, 1.6 GHz, 4 GB, SMC 2.27f2\r\nGraphics: Intel HD Graphics 6000, Intel HD Graphics 6000, Built-In\r\nMemory Module: BANK 0/DIMM0, 2 GB, DDR3, 1600 MHz, 0x80AD, 0x483943434E4E4E384A544D4C41522D4E544D\r\nMemory Module: BANK 1/DIMM0, 2 GB, DDR3, 1600 MHz, 0x80AD, 0x483943434E4E4E384A544D4C41522D4E544D\r\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x117), Broadcom BCM43xx 1.0 (7.77.61.1 AirPortDriverBrcmNIC-1305.2)\r\nBluetooth: Version 6.0.10f1, 3 services, 27 devices, 1 incoming serial ports\r\nNetwork Service: Wi-Fi, AirPort, en0\r\nSerial ATA Device: APPLE SSD SM0128G, 121.33 GB\r\nUSB Device: USB 3.0 Bus\r\nUSB Device: Internal Memory Card Reader\r\nUSB Device: BRCM20702 Hub\r\nUSB Device: Bluetooth USB Host Controller\r\nThunderbolt Bus: MacBook Air, Apple Inc., 27.2\r\n","Url":"https://github.com/dotnet/cli/issues/11009","RelatedDescription":"Closed issue \"dotnet quits unexpectedly on mac os\" (#11009)"},{"Id":"423464116","IsPullRequest":true,"CreatedAt":"2019-03-21T22:39:24","Actor":"livarcocc","Number":"10998","RawContent":null,"Title":"Update branding to 2.2.300","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10998","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.300\" (#10998)"},{"Id":"423463722","IsPullRequest":true,"CreatedAt":"2019-03-21T22:38:40","Actor":"livarcocc","Number":"10997","RawContent":null,"Title":"Update branding to 2.1.7xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10997","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.7xx\" (#10997)"},{"Id":"422695219","IsPullRequest":true,"CreatedAt":"2019-03-21T22:38:25","Actor":"dotnet-maestro[bot]","Number":"10991","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19167.10\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190317.10\r\n- **Date Produced**: 3/18/2019 7:14 AM\r\n- **Commit**: de7be3ba62b92e5c48c36876c851a14f154444af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19167.10\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190320.2\r\n- **Date Produced**: 3/20/2019 5:43 PM\r\n- **Commit**: f70fa34786cff993625a4548ae0125335eabe82e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19170.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10991","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10991)"},{"Id":"423577885","IsPullRequest":false,"CreatedAt":"2019-03-21T18:31:59","Actor":"ashishnegi","Number":"11005","RawContent":null,"Title":"Understanding use of Nuget.exe in restore command","State":"closed","Body":"From documentation of [dotnet restore](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore?tabs=netcore2x), it says:\r\n\r\n>The dotnet restore command uses NuGet to restore dependencies \r\n\r\nDoes `dotnet`\r\n* uses `nuget.exe` found in `PATH` or \r\n* ships `nuget.exe` with itself or \r\n* consumes nuget as library in dotnet binary ?\r\n\r\nI need this information to understand if failure of dotnet restore can be changes in my `PATH` corruption or not ?","Url":"https://github.com/dotnet/cli/issues/11005","RelatedDescription":"Closed issue \"Understanding use of Nuget.exe in restore command\" (#11005)"},{"Id":"423853618","IsPullRequest":false,"CreatedAt":"2019-03-21T17:28:20","Actor":"JeremyMorton","Number":"11006","RawContent":null,"Title":"DotnetCliTool references don't work if BaseIntermediateOutputPath is changed in a Directory.Build.props file.","State":"open","Body":"## Steps to reproduce\r\nI have a hard time coming up with a public repro, since I don't know of public DotnetCliTools; I'm hitting this with an internal one.\r\n\r\nI tried debugging dotnet.exe, but build.cmd doesn't make a dotnet.pdb and I can't build in VS nor Rider in order to be able to run under a debugger (nor does `dotnet build` work, ironically).\r\n\r\n* Add a reference to a DotnetCliTool and a target to run it to your .csproj:\r\n```XML\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"MyDotnetCliTool\" Version = \"1.0.0\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"RunMyDotnetCliToolForTargetFramework\" DependsOnTargets=\"RunMyDotnetCliTool\" BeforeTargets=\"BeforeBuild\" Condition=\"'$(TargetFrameworks)' == ''\" />\r\n  <Target Name=\"RunMyDotnetCliToolForTargetFrameworks\" DependsOnTargets=\"RunMyDotnetCliTool\" BeforeTargets=\"DispatchToInnerBuilds\" Condition=\"'$(TargetFrameworks)' != ''\" />\r\n  <Target Name=\"RunMyDotnetCliTool\">\r\n    <Exec WorkingDirectory=\"$(MSBuildProjectDirectory)\" Command=\"dotnet -d mydotnetclitool\" />\r\n    <Message Text=\"Ran dotnet -d mydotnetclitool\" Importance=\"High\" />\r\n  </Target>\r\n```\r\n* Run `dotnet build` and it will find and run `dotnet -d mydotnetclitool` successfully.\r\n* *IMPORTANT* Delete the `obj` subdirectory that the above, successful run created.\r\n* Create a Directory.Build.props, as that is the mechanism to override BaseIntermediateOutputPath.\r\n```XML\r\n<Project>\r\n  <PropertyGroup>\r\n    <BaseIntermediateOutputPath>c:/build_directories/obj/</BaseIntermediateOutputPath>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n* Create the `c:/build_directories/obj/` directory.\r\n* Run `dotnet build` and it will fail to find `dotnet-mydotnetclitool.dll` when it tries to run `dotnet -d mydotnetclitool`\r\n\r\n## Expected  behavior\r\nThat it finds the `dotnet-mydotnetclitool.dll` that the DotnetCliToolReference brought down to the machine.\r\n```\r\n  Persisting no-op dg to C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.nuget.dgspec.json\r\n  Restore completed in 829.89 ms for C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.\r\n  Restore completed in 902.96 ms for C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.\r\n  Telemetry is: Enabled\r\n  projectfactory: MSBUILD_EXE_PATH = C:\\Program Files\\dotnet\\sdk\\2.2.104\\MSBuild.dll\r\n  projectfactory: MSBuild project path = C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj\r\n  projecttoolscommandresolver: resolving commandspec from 1 Tool Libraries.\r\n  projecttoolscommandresolver: Attempting to resolve command spec from tool MyDotnetCliTool\r\n  projecttoolscommandresolver: nuget packages root:\r\n  - C:\\Users\\jmorton\\.nuget\\packages\\\r\n  - C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\r\n  projecttoolscommandresolver: found tool lockfile at : C:\\Users\\jmorton\\.nuget\\packages\\.tools\\MyDotnetCliTool\\1.0.0\\netcoreapp2.2\\project.assets.json\r\n  projecttoolscommandresolver: expect deps.json at: C:\\Users\\jmorton\\.nuget\\packages\\.tools\\MyDotnetCliTool\\1.0.0\\netcoreapp2.2\\MyDotnetCliTool.deps.json\r\n  projecttoolscommandresolver: attempting to create commandspec\r\n  packagedcommandspecfactory: attempting to find command dotnet-mydotnetclitool in MyDotnetCliTool\r\n  PackagedCommandSpecFactory: Looking for prefercliruntime file at `C:\\Users\\jmorton\\.nuget\\packages\\MyDotnetCliTool\\1.0.0\\lib\\netcoreapp2.0\\..\\..\\prefercliruntime`\r\n  Running C:\\Program Files\\dotnet\\dotnet.exe exec --depsfile C:\\Users\\jmorton\\.nuget\\packages\\.tools\\MyDotnetCliTool\\1.0.0\\netcoreapp2.2\\MyDotnetCliTool.deps.json --additionalprobingpath C:\\Users\\jmorton\\.nuget\\packages --additionalprobingpath \"c:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\" C:\\Users\\jmorton\\.nuget\\packages\\MyDotnetCliTool\\1.0.0\\lib\\netcoreapp2.0\\dotnet-mydotnetclitool.dll\r\n  Process ID: 12708\r\n  Ran dotnet -d mydotnetclitool\r\n  Project1 -> C:\\projects\\MyProgram\\src\\Project1\\Project1\\bin\\Debug\\netcoreapp2.1\\Project1.dll\r\n```\r\n\r\n## Actual behavior\r\nIt fails to find `dotnet-mydotnetclitool.dll` if, and only if, the `dotnet restore` was ran with `BaseIntermediateOutputPath` redirected to another location:\r\n```\r\n  Persisting no-op dg to C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.nuget.dgspec.json\r\n  Restore completed in 829.89 ms for C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.\r\n  Restore completed in 902.96 ms for C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.\r\n  Telemetry is: Enabled\r\n  projectfactory: MSBUILD_EXE_PATH = C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\MSBuild.dll\r\n  projectfactory: MSBuild project path = C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj\r\n  projecttoolscommandresolver: resolving commandspec from 1 Tool Libraries.\r\n  projecttoolscommandresolver: Attempting to resolve command spec from tool MyDotnetCliTool\r\n  projecttoolscommandresolver: nuget packages root:\r\n\r\n  projecttoolscommandresolver: failed to resolve commandspec from library.\r\n  Microsoft.DotNet.Cli.Utils.CommandUnknownException: No executable found matching command \"dotnet-mydotnetclitool\". See https://aka.ms/missing-command for more information.\r\n     at Microsoft.DotNet.CommandFactory.CommandFactoryUsingResolver.Create(ICommandResolverPolicy commandResolverPolicy, String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n     at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n     at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\nC:\\projects\\MyProgram\\src\\Project1\\Project1.csproj(126,5): error MSB3073: The command \"dotnet -d mydotnetclitool\" exited with code 1. [C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.104\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\nThis also occurred without a global.json:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/11006","RelatedDescription":"Open issue \"DotnetCliTool references don't work if BaseIntermediateOutputPath is changed in a Directory.Build.props file.\" (#11006)"},{"Id":"423531889","IsPullRequest":true,"CreatedAt":"2019-03-21T00:41:45","Actor":"mlorbetske","Number":"11004","RawContent":null,"Title":"Convert from using Newtonsoft.Json for reading launchSettings.json to System.Text.Json","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11004","RelatedDescription":"Open PR \"Convert from using Newtonsoft.Json for reading launchSettings.json to System.Text.Json\" (#11004)"},{"Id":"423519365","IsPullRequest":true,"CreatedAt":"2019-03-20T23:41:21","Actor":"wli3","Number":"11002","RawContent":null,"Title":"Move to System.Text.Json for local global tools","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11002","RelatedDescription":"Open PR \"Move to System.Text.Json for local global tools\" (#11002)"},{"Id":"423519068","IsPullRequest":true,"CreatedAt":"2019-03-20T23:40:21","Actor":"wli3","Number":"11001","RawContent":null,"Title":"Bcl.json better commit","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11001","RelatedDescription":"Closed or merged PR \"Bcl.json better commit\" (#11001)"},{"Id":"423486374","IsPullRequest":true,"CreatedAt":"2019-03-20T22:53:43","Actor":"nguerrera","Number":"10999","RawContent":null,"Title":"Clean up package references for source build","State":"closed","Body":"* Remove package references that aren't needed\r\n* Move hard-coded versions to eng\\Versions.props","Url":"https://github.com/dotnet/cli/pull/10999","RelatedDescription":"Closed or merged PR \"Clean up package references for source build\" (#10999)"},{"Id":"423507694","IsPullRequest":true,"CreatedAt":"2019-03-20T22:53:37","Actor":"LordMike","Number":"11000","RawContent":null,"Title":"Add solution folder argument to dotnet-sln add","State":"open","Body":"I've begun work on the first half of what I think \"dotnet-sln add\" should be allowed to do:\r\n\r\n- Target arbitrary solution folders within an SLN\r\n- Add arbitrary files as solution-level files, and not just projects\r\n\r\nIf possible, I'd like some feedback before proceeding to add the ability for \"dotnet-sln add\" to add arbitrary files. So, I suppose this is kind of a WIP which isn't exactly preferable... Sorry about that.\r\n\r\nIs there a test project for \"dotnet sln\" ?\r\n\r\nRelated issues:\r\n- Issue https://github.com/dotnet/cli/issues/8678, which discuses a \"add\" feature that allows arbitrary files to be added; where I outline my intended commandline layout\r\n- PR https://github.com/dotnet/cli/pull/10873, which touches on a similar subject, but also adds a unit test project. Naming between that PR, and this one, should be coordinated.","Url":"https://github.com/dotnet/cli/pull/11000","RelatedDescription":"Open PR \"Add solution folder argument to dotnet-sln add\" (#11000)"},{"Id":"422986481","IsPullRequest":true,"CreatedAt":"2019-03-20T20:37:07","Actor":"livarcocc","Number":"10993","RawContent":null,"Title":"Update branding to 2.2.203","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10993","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.203\" (#10993)"},{"Id":"422986019","IsPullRequest":true,"CreatedAt":"2019-03-20T20:36:56","Actor":"livarcocc","Number":"10992","RawContent":null,"Title":"Update branding to 2.1.603","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10992","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.603\" (#10992)"},{"Id":"423314749","IsPullRequest":false,"CreatedAt":"2019-03-20T17:29:00","Actor":"polterguy","Number":"10996","RawContent":null,"Title":"Support for generate command","State":"closed","Body":"Somebody sent me a pull request to my [own repo](https://github.com/polterguy/magic) supplying a CLI template file, and I started playing around with the CLI arguably for the first time really studying it myself, and I quickly realized the beauty of the dotnet CLI project, allowing me to among other things _\"generate\"_ entire solution/project structures, etc.\r\n\r\nHowever, as I look through the project, I realize at least for my own purposes, how extremely useful it would be to have something resembling _\"ng generate\"_ in the dotnet CLI, which unfortunately doesn't seem to exist at the moment.\r\n\r\nFor instance for my personal usage in [Magic](https://github.com/polterguy/magic), being able to _\"generate\"_ new controllers/services/etc by using the dotnet CLI, would significantly reduce the pain associated with adding to the existing code base of a Magic project.\r\n\r\nTo create a new domain type in Magic for instance, requires to create a new service, a new service interface, a new controller endpoint, and the database model + the view model. Plus (possibly) also new projects for each of the previously mentioned classes/interfaces. If the CLI could simply _\"automagically\"_ create this for me, and my users, and either associate with existing project, and/or create new projects and associate the solution with - Obviously a lot of time would be saved in this process ...\r\n\r\nBasically, what I am looking for, is something similar to `ng generate`, which allows the developer to generate components, etc - Hopefully implemented in such a way that I could extend it myself somehow, to work with my own Magic project ...\r\n\r\n* Is this something that has been considered implement in the dotnet CLI?\r\n* If not, why?\r\n* Is it possible to create as my own plugin to the CLI?\r\n* Would you possibly be willing to accept a pull request, if I actually went forth and implemented such commands myself, assuming it's generic in nature, good solid code, obeys by your coding standard, and not in any ways _\"hard coded\"_ towards my own baby (Magic) ...?\r\n\r\nThx,\r\n\r\n.t","Url":"https://github.com/dotnet/cli/issues/10996","RelatedDescription":"Closed issue \"Support for generate command\" (#10996)"},{"Id":"423127451","IsPullRequest":false,"CreatedAt":"2019-03-20T08:36:33","Actor":"leighghunt","Number":"10995","RawContent":null,"Title":"Build fails with 'MSB3552: Resource file \"**/*.resx\" cannot be found.' on Mac when folders with windows like paths exist in project folder","State":"open","Body":"## Steps to reproduce\r\n- Create a new console application\r\n- Create a folder named `D:\\Processed` within the project directory\r\n- Build the project\r\n\r\n## Expected  behavior\r\n- Successful build\r\n\r\n## Actual behavior\r\n- Build fails.\r\n```\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 36.12 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n/usr/local/share/dotnet/sdk/2.2.102/Microsoft.Common.CurrentVersion.targets(3049,5): error MSB3552: Resource file \"**/*.resx\" cannot be found. [/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\nComplete work through of issue from scratch:\r\n```\r\n✔ ~/dev/test \r\n21:30 $ mkdir dotnet-cli-build-error\r\n✔ ~/dev/test \r\n21:30 $ cd dotnet-cli-build-error/\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:30 $ dotnet new console\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj...\r\n  Restoring packages for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj...\r\n  Generating MSBuild file /Users/leigh/dev/test/dotnet-cli-build-error/obj/dotnet-cli-build-error.csproj.nuget.g.props.\r\n  Generating MSBuild file /Users/leigh/dev/test/dotnet-cli-build-error/obj/dotnet-cli-build-error.csproj.nuget.g.targets.\r\n  Restore completed in 197.37 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n\r\nRestore succeeded.\r\n\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:30 $ dotnet build\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 36.83 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n  dotnet-cli-build-error -> /Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:02.26\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ mkdir D\\:\\\\Processed\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ ls -l\r\ntotal 16\r\ndrwxr-xr-x  2 leigh  staff   64 20 Mar 21:31 D:\\Processed\r\n-rw-r--r--  1 leigh  staff  204 20 Mar 21:30 Program.cs\r\ndrwxr-xr-x  3 leigh  staff   96 20 Mar 21:31 bin\r\n-rw-r--r--  1 leigh  staff  237 20 Mar 21:30 dotnet-cli-build-error.csproj\r\ndrwxr-xr-x  7 leigh  staff  224 20 Mar 21:31 obj\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ dotnet clean; dotnet build\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 20/03/19 9:31:43 PM.\r\n     1>Project \"/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj\" on node 1 (Clean target(s)).\r\n     1>CoreClean:\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.deps.json\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.runtimeconfig.json\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.runtimeconfig.dev.json\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.dll\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.pdb\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.csprojAssemblyReference.cache\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.csproj.CoreCompileInputs.cache\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.AssemblyInfoInputs.cache\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.AssemblyInfo.cs\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.dll\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.pdb\".\r\n     1>Done Building Project \"/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj\" (Clean target(s)).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.49\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 36.12 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n/usr/local/share/dotnet/sdk/2.2.102/Microsoft.Common.CurrentVersion.targets(3049,5): error MSB3552: Resource file \"**/*.resx\" cannot be found. [/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/usr/local/share/dotnet/sdk/2.2.102/Microsoft.Common.CurrentVersion.targets(3049,5): error MSB3552: Resource file \"**/*.resx\" cannot be found. [/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.91\r\n✘-1 ~/dev/test/dotnet-cli-build-error \r\n```\r\n\r\nNote that removal of the folder resolves the issue:\r\n```\r\n21:31 $ rmdir D\\:\\\\Processed/\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ dotnet clean; dotnet build\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 20/03/19 9:31:56 PM.\r\n     1>Project \"/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj\" on node 1 (Clean target(s)).\r\n     1>CoreClean:\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.csprojAssemblyReference.cache\".\r\n     1>Done Building Project \"/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj\" (Clean target(s)).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.45\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 36.79 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n  dotnet-cli-build-error -> /Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.07\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ \r\n\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.102\r\n Commit:    96ff75a873\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.102/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  1.0.1 [/usr/local/share/dotnet/sdk]\r\n  1.0.4 [/usr/local/share/dotnet/sdk]\r\n  2.1.4 [/usr/local/share/dotnet/sdk]\r\n  2.2.100-preview3-009430 [/usr/local/share/dotnet/sdk]\r\n  2.2.102 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35497 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35497 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27014-02 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10995","RelatedDescription":"Open issue \"Build fails with 'MSB3552: Resource file \"**/*.resx\" cannot be found.' on Mac when folders with windows like paths exist in project folder\" (#10995)"},{"Id":"422994622","IsPullRequest":true,"CreatedAt":"2019-03-20T00:48:17","Actor":"wli3","Number":"10994","RawContent":null,"Title":"dotnet list package interactive","State":"closed","Body":"add --interactive flag to dotnet list\r\n\r\ncontinue of https://github.com/dotnet/cli/pull/10721","Url":"https://github.com/dotnet/cli/pull/10994","RelatedDescription":"Closed or merged PR \"dotnet list package interactive\" (#10994)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"425140404","IsPullRequest":true,"CreatedAt":"2019-03-25T22:16:46","Actor":"wtgodbe","Number":"1107","RawContent":null,"Title":"Add transport package for NetStandard","State":"open","Body":"This creates a transport package, `Microsoft.Private.Standard`, which contains the same netstandard2.1 binaries as `NetStandard.Library`, but not `NetStandard.Library.Targets`. The assets are in `ref\\netstandard2.1` instead of `build\\netstandard2.1\\ref`. This transport package can be consumed by Core-Setup for the purpose of creating the targeting pack, rather than publicly shipping `NetStandard.Library`, or having Core-Setup consume its Standard dependencies through `NetStandard.Library`. Eventually we can phase out NS.L in favor of this transport package.\r\n\r\n@ericstj @dagood @terrajobst PTAL","Url":"https://github.com/dotnet/standard/pull/1107","RelatedDescription":"Open PR \"Add transport package for NetStandard\" (#1107)"},{"Id":"425067073","IsPullRequest":false,"CreatedAt":"2019-03-25T19:02:30","Actor":"wtgodbe","Number":"1106","RawContent":null,"Title":"Create a transport package for NetStandard","State":"open","Body":"We should create a transport package for Net Standard, and stop shipping/building stable versions of NS.Library. Instead, we can have Core-Setup consume the transport package, and release the bits through a targeting pack. The contents should be similar to what's in NS.Library today, but in the `ref\\netstandard2.1` folder instead of `build`\r\n\r\nCC @dagood @ericstj ","Url":"https://github.com/dotnet/standard/issues/1106","RelatedDescription":"Open issue \"Create a transport package for NetStandard\" (#1106)"},{"Id":"424622375","IsPullRequest":false,"CreatedAt":"2019-03-24T14:58:58","Actor":"crone66","Number":"1105","RawContent":null,"Title":"Classdiagramms in .net standard projects creates .vb files instead of .cs files","State":"open","Body":"If I create a .net standard project I can't create a c# class digramm instead I get a vb class diagramm. If I create a class diagramm for Windows Forms App everything works fine.\r\n\r\nSteps I did:\r\n\r\n1. Disabled all third -party extensions\r\n2. Restarted Visual Studio\r\n3. Created a new C# .Net Standard Project\r\n4. Added a Class Diagramm file (Visual C# Items -> General -> Class Diagramm)\r\n5. Added a class via drag & drop from the toolbox\r\n-> \"New Class\" dialog pops up where I can change the name\r\n-> The content of Create new file is \"Class1.vb\"\r\n6. Changed the extension to .cs and pressed ok\r\n-> Got the error message \"Visual studio class diagram file name extension is invalid a valid extension is .vb\"\r\n\r\nI use Visual Studio Community 2017 V.: 15.7.6\r\nI Created a normal C# class library project as workaround.","Url":"https://github.com/dotnet/standard/issues/1105","RelatedDescription":"Open issue \"Classdiagramms in .net standard projects creates .vb files instead of .cs files\" (#1105)"},{"Id":"423998952","IsPullRequest":true,"CreatedAt":"2019-03-22T17:11:38","Actor":"dotnet-maestro[bot]","Number":"1104","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.2\r\n- **Date Produced**: 3/21/2019 6:29 PM\r\n- **Commit**: 5f884de91b56acd5d19bf792516b646e5fad19b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1104","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1104)"},{"Id":"422563592","IsPullRequest":false,"CreatedAt":"2019-03-19T06:25:32","Actor":"githubdigo","Number":"1103","RawContent":null,"Title":"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1103","RelatedDescription":"Open issue \"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception\" (#1103)"},{"Id":"421676181","IsPullRequest":true,"CreatedAt":"2019-03-18T19:09:34","Actor":"terrajobst","Number":"1102","RawContent":null,"Title":"Expose RandomNumberGenerator.GetInt32","State":"closed","Body":"Fixes #1101.","Url":"https://github.com/dotnet/standard/pull/1102","RelatedDescription":"Closed or merged PR \"Expose RandomNumberGenerator.GetInt32\" (#1102)"},{"Id":"420975088","IsPullRequest":false,"CreatedAt":"2019-03-18T19:09:34","Actor":"khellang","Number":"1101","RawContent":null,"Title":"Include System.Security.Cryptography.RandomNumberGenerator.GetInt32","State":"closed","Body":"I'd like to propose the inclusion of the new `System.Security.Cryptography.RandomNumberGenerator.GetInt32` APIs, added in https://github.com/dotnet/corefx/pull/31243.\r\n\r\nAs noted in https://github.com/dotnet/corefx/issues/30873, this is often incorrectly implemented, which can lead to security vulnerabilities and bias. It would be nice if it was part of the standard, to have a convenient API for this across all platforms.\r\n\r\nThe implementation doesn't have a lot of dependencies and could probably be (more or less) copied to other platforms.\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex ec34484..2b7d68b 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -810,6 +810,8 @@ namespace System.Security.Cryptography\r\n         public virtual void GetBytes(System.Span<byte> data) { }\r\n         public virtual void GetNonZeroBytes(byte[] data) { }\r\n         public virtual void GetNonZeroBytes(System.Span<byte> data) { }\r\n+        public static int GetInt32(int fromInclusive, int toExclusive) { throw null; }\r\n+        public static int GetInt32(int toExclusive) { throw null; }\r\n     }\r\n     [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n     public abstract partial class RC2 : System.Security.Cryptography.SymmetricAlgorithm\r\n\r\n```\r\n\r\n// @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1101","RelatedDescription":"Closed issue \"Include System.Security.Cryptography.RandomNumberGenerator.GetInt32\" (#1101)"},{"Id":"420728685","IsPullRequest":false,"CreatedAt":"2019-03-13T21:30:55","Actor":"OpenSpacesAndPlaces","Number":"1100","RawContent":null,"Title":"Question....On .Net Framework 4.7 without any SDKs...","State":"open","Body":"I'm currently running into an issue with a hosting company that only has .Net Framework 4.7 installed and no supporting SDKS for netstandard 2.0.\r\n\r\nThe netstandard 2.0. library is needed for EntityFramework Core and SignalR Core.\r\n\r\nThe problem is:\r\nCould not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n\r\n- Simply trying to add the 4.7.1. dll results in:\r\nCould not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. Reference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context\r\n\r\n- Pre-compiling/Publish has not helped.\r\n- Attempting to include the required base libraries (the ones .Net Standard would be used to pull in) has not helped.\r\n- Various combinations of assembly rules/config settings has not helped.\r\n\r\n---\r\n\r\nI'm totally fine with hand adding every last nuget package needed if there is a way to redirect the netstandard bindings to the base libraries.\r\n\r\nUnfortunately there is no RDP access to the server - so any fix has to be within the confines of bin folder drops or web.config values.\r\n\r\n---\r\n\r\nAny help appreciated!\r\nAny other details I can provide - let me know!","Url":"https://github.com/dotnet/standard/issues/1100","RelatedDescription":"Open issue \"Question....On .Net Framework 4.7 without any SDKs...\" (#1100)"},{"Id":"419180568","IsPullRequest":false,"CreatedAt":"2019-03-10T17:28:29","Actor":"jinyuttt","Number":"1099","RawContent":null,"Title":"Elliptic Curve Cryptography","State":"closed","Body":"Provide elliptic curve cryptography? ","Url":"https://github.com/dotnet/standard/issues/1099","RelatedDescription":"Closed issue \"Elliptic Curve Cryptography\" (#1099)"},{"Id":"418668244","IsPullRequest":true,"CreatedAt":"2019-03-09T00:32:27","Actor":"stephentoub","Number":"1098","RawContent":null,"Title":"Add dummy field to TypedReference","State":"closed","Body":"cc: @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1098","RelatedDescription":"Closed or merged PR \"Add dummy field to TypedReference\" (#1098)"},{"Id":"418474274","IsPullRequest":false,"CreatedAt":"2019-03-07T22:27:38","Actor":"MgSam","Number":"1097","RawContent":null,"Title":"Change .NET Standard 2.1 version number","State":"closed","Body":"It was just [announced ](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-3/#) that the next version of .NET Standard will be 2.1, which will be implemented by .NET Core 3.0 and incompatible with .NET Core 2.1 and incompatible with any version of .NET Framework. Got all that?\r\n\r\nI implore you to please change the version number of Standard 2.1 before it's too late. It is extremely confusing to have it be Standard 2.1 which is incompatible with Core 2.1. I strongly feel that Standard should version alongside of Core (given that Core is the lead implementation of .NET) and should be Standard 3.0\r\n\r\nIn lieu of that, at the very least it should get a version number which doesn't actively lead to confusion by aligning with the version number of an incompatible version of Core. Standard 2.5?\r\n\r\nI know Microsoft has a reputation to uphold at being horrible at naming things, but this is a bridge too far :)","Url":"https://github.com/dotnet/standard/issues/1097","RelatedDescription":"Closed issue \"Change .NET Standard 2.1 version number\" (#1097)"},{"Id":"417603266","IsPullRequest":true,"CreatedAt":"2019-03-06T03:17:38","Actor":"terrajobst","Number":"1096","RawContent":null,"Title":"Update information for .NET Standard 2.1","State":"closed","Body":"This updates the version table for .NET Standard 2.1 as well as the API diff.\r\n\r\n/cc @mairaw ","Url":"https://github.com/dotnet/standard/pull/1096","RelatedDescription":"Closed or merged PR \"Update information for .NET Standard 2.1\" (#1096)"},{"Id":"417601953","IsPullRequest":true,"CreatedAt":"2019-03-06T03:11:36","Actor":"terrajobst","Number":"1095","RawContent":null,"Title":"Add footnote regarding .NET Framework 4.6.1 support","State":"closed","Body":"This mirrors what's already in the docs","Url":"https://github.com/dotnet/standard/pull/1095","RelatedDescription":"Closed or merged PR \"Add footnote regarding .NET Framework 4.6.1 support\" (#1095)"},{"Id":"416990675","IsPullRequest":false,"CreatedAt":"2019-03-04T21:01:09","Actor":"tannergooding","Number":"1094","RawContent":null,"Title":"Consider the HWIntrinsic APIs for NS2.1","State":"open","Body":"### Summary\r\n\r\nWe should consider including the Harware Intrinsic APIs as part of `netstandard2.1` given that they are trivial to \"support\" (you just expose the APIs and return `false` for all the `IsSupported` checks, as the shared framework code is already doing), were designed in a way that the feature can be incrementally enabled by a given runtime, are already finding use in the shared framework code, and will allow users to more readily write cross-runtime libraries.\r\n\r\n### Rationale\r\n\r\n`netcoreapp3.0` is adding ~1500 APIs in order to support the new \"Hardware Intrinsics\" feature. These APIs provide support for writing more efficient algorithms that can take advantage of hardware specific functionality.\r\n\r\nWhile the number of APIs exposed may seem daunting, the APIs are hardware specific and were designed such that you must perform the appropriate checks before attempting to use a given API or they will result in a `PlatformNotSupportedException` at runtime. For example, `System.Runtime.Intrinsics.X86.Sse` is a class that exposes the SSE ISA for the x86 and x64 architectures. Before using any of the methods on that class, you must emit an `if (Sse.IsSupported)` check to validate that both the current hardware and the current runtime support this ISA.\r\n\r\nThese API declarations are also part of the existing shared framework code and have a default implementation of returning `false` for the `IsSupported` checks and throwing `PlatformNotSupportedException` from any of the other exposed hardware-specific APIs. This has allowed us to already take a cross-runtime dependency on these intrinsics in places like `SpanHelpers`, `Decimal`, `BitOperations`, `BitArray`, and more.\r\n\r\nGiven the above, I propose that these APIs be included as part of `netstandard2.1` as it will allow general library and application developers to share in the same benefits we have already seen. That is, it will light-up on .NET Core 3.0 and will do nothing on other runtimes. This will avoid the need for them to cross-compile their code in a number of cases.\r\n\r\nFor the runtimes that don't support this functionality yet, they should require somewhere between no and minimal changes. For the most part, they should already be internally compiling these APIs and hitting the `IsSupported=false` paths. So they will ultimately just be exposing these APIs to the end-user and would require no changes. The work that may be required is to ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types have the appropriate ABI dependent type layouts. That is, these types should have the appropriate packing (e.g. `16` for `Vector128<T>` on x86/x64 since it maps to the `__m128` ABI primitive defined by the Windows and System V calling convention specifications).\r\n\r\nExposing this will also allow the various runtimes to have incremental \"light-up\" of these APIs. That is, rather than waiting for the next release to both expose and implement the APIs, they can expose the the APIs as part of `netstandard2.1` and the corresponding version of their runtime (e.g `x.0`). They can then light up individual ISAs and make them available to their users as they see fit (e.g. They could enable just `SSE` in `x.1` and could enable SSE2/SSE3 in `x.2`, etc).\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1094","RelatedDescription":"Open issue \"Consider the HWIntrinsic APIs for NS2.1\" (#1094)"},{"Id":"416499863","IsPullRequest":false,"CreatedAt":"2019-03-03T18:13:53","Actor":"proof85","Number":"1093","RawContent":null,"Title":"HashCode to standard","State":"closed","Body":"Hi,\r\n\r\nis it possible to add the HashCode-\"Helper\" struct to the .net standard? Including the Combine method? it is covered by the .net corefx since v2.1 and it looks like there is no os or platform specific usecase","Url":"https://github.com/dotnet/standard/issues/1093","RelatedDescription":"Closed issue \"HashCode to standard\" (#1093)"},{"Id":"414920447","IsPullRequest":false,"CreatedAt":"2019-02-27T02:53:49","Actor":"divega","Number":"1092","RawContent":null,"Title":"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1","State":"open","Body":"This is mainly about adding the API from https://github.com/dotnet/corefx/issues/31595 (commit https://github.com/dotnet/corefx/commit/b30fc2b4ee302e449e3580ae39cb083a76b813c9), plus possibly two additional async method possibly coming from https://github.com/dotnet/corefx/issues/35611, to .NET Standard 2.1.\r\n\r\ncc @roji @ajcvickers @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1092","RelatedDescription":"Open issue \"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1\" (#1092)"},{"Id":"414887877","IsPullRequest":false,"CreatedAt":"2019-02-27T00:35:13","Actor":"ChaseFlorell","Number":"1091","RawContent":null,"Title":"Collection<T> and ObservableCollection<T> do not support ranges","State":"open","Body":"This is taken directly from https://github.com/dotnet/corefx/issues/10752 [by @robertmclaws]\r\n\r\nThis API change is already approved in .netcore (tentatively scheduled for 3.0), and I think it's equally as important to be available in .netstandard\r\n\r\n```csharp\r\n    // Adds a range to the end of the collection.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void AddRange(IEnumerable<T> collection) => InsertItemsRange(0, collection);\r\n\r\n    // Inserts a range\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void InsertRange(int index, IEnumerable<T> collection) => InsertItemsRange(index, collection);\r\n\r\n    // Removes a range.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Remove)\r\n    public void RemoveRange(int index, int count) => RemoveItemsRange(index, count);\r\n\r\n    // Will allow to replace a range with fewer, equal, or more items.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Replace)\r\n    public void ReplaceRange(int index, int count, IEnumerable<T> collection)\r\n    {\r\n         RemoveItemsRange(index, count);\r\n         InsertItemsRange(index, collection);\r\n    }\r\n\r\n    #region virtual methods\r\n    protected virtual void InsertItemsRange(int index, IEnumerable<T> collection);\r\n    protected virtual void RemoveItemsRange(int index, int count);\r\n    #endregion\r\n```\r\n\r\nPlease see the linked issue for the full discussion.\r\n\r\nI'm assuming it would land [here](https://github.com/dotnet/standard/blob/master/src/netstandard/ref/System.Collections.ObjectModel.cs) and the appropriate shims would be created, however I don't know enough about netstandard to actually draw up the PR.\r\n","Url":"https://github.com/dotnet/standard/issues/1091","RelatedDescription":"Open issue \"Collection<T> and ObservableCollection<T> do not support ranges\" (#1091)"},{"Id":"414879247","IsPullRequest":false,"CreatedAt":"2019-02-27T00:01:34","Actor":"wtgodbe","Number":"1090","RawContent":null,"Title":"Sort out baseline between netstandard & netcoreapp","State":"open","Body":"We should sit down & go over the diff between netstandard & netcoreapp, and decide what we need to fix/how we need to fix it.\r\n\r\nCC @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1090","RelatedDescription":"Open issue \"Sort out baseline between netstandard & netcoreapp\" (#1090)"},{"Id":"414599564","IsPullRequest":true,"CreatedAt":"2019-02-26T13:10:54","Actor":"dotnet-maestro[bot]","Number":"1089","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19125.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1089","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1089)"},{"Id":"414366560","IsPullRequest":true,"CreatedAt":"2019-02-26T02:10:06","Actor":"terrajobst","Number":"1087","RawContent":null,"Title":"Remove windows row","State":"closed","Body":"After talking to @ptorr-msft it seems we can update this table and simplify the confusing Windows rows by combining *Windows* with *UWP* and removing *Windows Phone* and *Windows Phone Silverlight* entirely.\r\n\r\n/cc @mairaw @richlander ","Url":"https://github.com/dotnet/standard/pull/1087","RelatedDescription":"Closed or merged PR \"Remove windows row\" (#1087)"},{"Id":"414395637","IsPullRequest":true,"CreatedAt":"2019-02-26T02:09:06","Actor":"terrajobst","Number":"1088","RawContent":null,"Title":"Update .NET Standard 2.1 API delta","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1088","RelatedDescription":"Closed or merged PR \"Update .NET Standard 2.1 API delta\" (#1088)"},{"Id":"414093373","IsPullRequest":true,"CreatedAt":"2019-02-25T13:10:50","Actor":"dotnet-maestro[bot]","Number":"1086","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19124.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1086","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1086)"},{"Id":"413818940","IsPullRequest":true,"CreatedAt":"2019-02-24T13:10:46","Actor":"dotnet-maestro[bot]","Number":"1085","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19123.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1085","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1085)"},{"Id":"413693365","IsPullRequest":true,"CreatedAt":"2019-02-23T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1084","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19122.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1084","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1084)"},{"Id":"413628435","IsPullRequest":true,"CreatedAt":"2019-02-23T00:53:44","Actor":"terrajobst","Number":"1083","RawContent":null,"Title":"Add \"generated by a tool\"-header","State":"closed","Body":"This adds a header to all the Markdown files provided in the docs folder that\r\nshow the API set of .NET Standard. The header indicates that these are\r\ngenerated by a tool and PRs are generally not accepted.\r\n\r\nFixes #1053.","Url":"https://github.com/dotnet/standard/pull/1083","RelatedDescription":"Closed or merged PR \"Add \"generated by a tool\"-header\" (#1083)"},{"Id":"413393938","IsPullRequest":true,"CreatedAt":"2019-02-22T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1082","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1082","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1082)"},{"Id":"413086694","IsPullRequest":true,"CreatedAt":"2019-02-22T07:09:05","Actor":"terrajobst","Number":"1080","RawContent":null,"Title":"Add SwitchExpressionException","State":"closed","Body":"Fixes #1077\r\n\r\nThis adds `SwitchExpressionException` that was added for supporting C#'s [`switch` expression construct](https://github.com/dotnet/csharplang/blob/master/proposals/patterns.md#switch-expression). The exception type was discussed in CoreFX in [this API request](https://github.com/dotnet/corefx/issues/33284).","Url":"https://github.com/dotnet/standard/pull/1080","RelatedDescription":"Closed or merged PR \"Add SwitchExpressionException\" (#1080)"},{"Id":"413148623","IsPullRequest":false,"CreatedAt":"2019-02-21T22:14:20","Actor":"wtgodbe","Number":"1081","RawContent":null,"Title":"Use Arcade defaults for DebugType, etc","State":"open","Body":"https://github.com/dotnet/standard/blob/4a006e962fc5c5651b7712028e0e352b1e011a58/Directory.Build.props#L86-L104\r\n\r\nCC @tmat ","Url":"https://github.com/dotnet/standard/issues/1081","RelatedDescription":"Open issue \"Use Arcade defaults for DebugType, etc\" (#1081)"},{"Id":"412718646","IsPullRequest":true,"CreatedAt":"2019-02-21T22:12:16","Actor":"tmat","Number":"1078","RawContent":null,"Title":"Set copyright and package license","State":"closed","Body":"Prepares repo for change https://github.com/dotnet/arcade/pull/2003 by setting `Copyright` and `PackageLicenseExpression` properties. These values will be required to be set by each repository once https://github.com/dotnet/arcade/pull/2003 is merged.\r\n\r\nIn order to not break the current builds this change sets the properties conditionally. This condition can be removed once all repos switch to Arcade that has https://github.com/dotnet/arcade/pull/2003.\r\n\r\n@markwilkie\r\n","Url":"https://github.com/dotnet/standard/pull/1078","RelatedDescription":"Closed or merged PR \"Set copyright and package license\" (#1078)"},{"Id":"412912955","IsPullRequest":true,"CreatedAt":"2019-02-21T13:10:49","Actor":"dotnet-maestro[bot]","Number":"1079","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1079","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1079)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"425231267","IsPullRequest":true,"CreatedAt":"2019-03-26T05:16:45","Actor":"dotnet-maestro-bot","Number":"36357","RawContent":null,"Title":"Update ProjectNTfs, ProjectNTfsTestILC to beta-27526-00, beta-27526-00, respectively (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/36357","RelatedDescription":"Open PR \"Update ProjectNTfs, ProjectNTfsTestILC to beta-27526-00, beta-27526-00, respectively (master)\" (#36357)"},{"Id":"425228998","IsPullRequest":true,"CreatedAt":"2019-03-26T05:05:26","Actor":"wfurt","Number":"36356","RawContent":null,"Title":"disable UWP on arm","State":"open","Body":"it is failing all tests on all runs. \r\nIt is clearly not ready. ","Url":"https://github.com/dotnet/corefx/pull/36356","RelatedDescription":"Open PR \"disable UWP on arm\" (#36356)"},{"Id":"425171746","IsPullRequest":false,"CreatedAt":"2019-03-26T00:21:05","Actor":"lmolkova","Number":"36355","RawContent":null,"Title":"System.Diagnostics.DiagnosticSource on netfx depends on wrong version of System.Memory?","State":"open","Body":"**Repro app**: [ConsoleApp1.zip](https://github.com/dotnet/corefx/files/3005969/ConsoleApp1.zip)\r\n\r\n**Repro steps**: \r\n- create new console app with new csproj that targets netfx (e.g. net461).\r\n- install latest (nightly build) DiagnosticSource 4.6.0-preview4.19164.7\r\n- run `Console.WriteLine(System.Diagnostics.ActivityTraceId.CreateRandom().ToHexString());` in Main\r\n\r\n**Result**:\r\n```\r\nUnhandled Exception: System.TypeInitializationException: The type initializer for 'PerTypeValues`1' threw an exception. ---> System.IO.FileLoadException: Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe, Version=4.0.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n   at System.SpanHelpers.PerTypeValues`1.MeasureArrayAdjustment()\r\n   at System.SpanHelpers.PerTypeValues`1..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at System.Diagnostics.ActivityTraceId.CreateRandom()\r\n   at ConsoleApp1.Program.Main(String[] args)\r\nPress any key to continue . . .\r\n```\r\n\r\n\r\n**Workarounds and observations**:  installing System.Memory 4.5.2 explicitly  solves the issue (DiagnosticSource brings 4.5.0)\r\n\r\nInterestingly, there is no problem  with old csproj -  binding redirect forSystem.Runtime.CompilerServices.Unsafe v4.0.5.0 is added automatically everything works.\r\n\r\n```\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Runtime.CompilerServices.Unsafe\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.5.0\" newVersion=\"4.0.5.0\" />\r\n      </dependentAssembly>\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/36355","RelatedDescription":"Open issue \"System.Diagnostics.DiagnosticSource on netfx depends on wrong version of System.Memory?\" (#36355)"},{"Id":"425170224","IsPullRequest":true,"CreatedAt":"2019-03-26T00:13:45","Actor":"bartonjs","Number":"36354","RawContent":null,"Title":"Add Detach to JsonDocument and JsonElement","State":"open","Body":"Fixes #36152 (pending api review).","Url":"https://github.com/dotnet/corefx/pull/36354","RelatedDescription":"Open PR \"Add Detach to JsonDocument and JsonElement\" (#36354)"},{"Id":"425169231","IsPullRequest":true,"CreatedAt":"2019-03-26T00:09:50","Actor":"steveharter","Number":"36353","RawContent":null,"Title":"Add Json serializer doc for ignore and propertyname features","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/36353","RelatedDescription":"Closed or merged PR \"Add Json serializer doc for ignore and propertyname features\" (#36353)"},{"Id":"425161347","IsPullRequest":true,"CreatedAt":"2019-03-25T23:33:59","Actor":"bartonjs","Number":"36352","RawContent":null,"Title":"Add JsonElement.Write[Value]To.","State":"open","Body":"Fixes #36153 (pending api review).","Url":"https://github.com/dotnet/corefx/pull/36352","RelatedDescription":"Open PR \"Add JsonElement.Write[Value]To.\" (#36352)"},{"Id":"425159723","IsPullRequest":false,"CreatedAt":"2019-03-25T23:26:56","Actor":"steveharter","Number":"36351","RawContent":null,"Title":"Json serializer support for a property name policy","State":"open","Body":"Extend the JSON Serializer [API](https://github.com/dotnet/corefx/issues/34372) to add support for how a property name is (de)serialized. Related information can be found in the programming model [documentation](https://github.com/dotnet/corefx/blob/master/src/System.Text.Json/docs/SerializerProgrammingModel.md).\r\n\r\nFunctionality includes:\r\n- An attribute used to specify an explicit name (`JsonPropertyNameAttribute`).\r\n- An attribute used to specify camel casing (`JsonCamelCasingConverterAttribute`).\r\n- A base attribute of the above two (`JsonPropertyNamePolicyAttribute`) that:\r\n  - specifies whether to use case-insensitive property name comparisons (by default case-sensitive)\r\n  - is an extension point that can be used to create additional attributes, such as one to support snake-casing.\r\n\r\n# Examples\r\nLet's start with coding examples before the formal API is provided.\r\n\r\nTo change a property name explicitly (JSON will contain \"birthdate\" instead of \"BirthDay\")\r\n```cs\r\n    public class Person\r\n    {\r\n...\r\n        [JsonPropertyName(\"birthdate\")] public DateTime BirthDay { get; set; }\r\n...\r\n    }\r\n```\r\n\r\nTo use camel-casing (JSON will contain \"birthDay\" instead of \"BirthDay\")\r\n```cs\r\n        [JsonCamelCasingConverter] public DateTime BirthDay { get; set; }\r\n```\r\n\r\n## Additions to JsonSerializerOptions\r\nThese methods allow run-time control over the attributes.\r\n\r\nThese methods can be called until (de)serialization occurs. If the first `AddAttribute` method (options for all types) is  called after (de)serialization occurs for any type, then the method will throw an `InvalidOperationException`. If the last two methods are called after serialization occurs for the given Type, then the methods will throw an `InvalidOperationException`.\r\n```cs\r\nnamespace System.Text.Json.Serialization\r\n{\r\n    public class JsonSerializerOptions\r\n    {\r\n...\r\n        public void AddAttribute(JsonPropertyNamePolicyAttribute value);\r\n        public void AddAttribute(Type type, JsonPropertyNamePolicyAttribute value);\r\n        public void AddAttribute(Type type, string propertyName, JsonPropertyNamePolicyAttribute value);\r\n    }\r\n}\r\n```\r\n\r\n## Property Name feature\r\n```cs\r\nnamespace System.Text.Json.Serialization\r\n{\r\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property, AllowMultiple = false)]\r\n    public sealed class JsonCamelCasingConverterAttribute : JsonPropertyNamePolicyAttribute\r\n    {\r\n        public JsonCamelCasingConverterAttribute();\r\n\r\n        public override string ResolvePropertyName(string value);\r\n    }\r\n\r\n    [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)]\r\n    public sealed class JsonPropertyNameAttribute : JsonPropertyNamePolicyAttribute\r\n    {\r\n        public JsonPropertyNameAttribute();\r\n        public JsonPropertyNameAttribute(string name);\r\n\r\n        public string Name { get; set; }\r\n\r\n        public override string ResolvePropertyName(string value);\r\n    }\r\n\r\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property, AllowMultiple = false)]\r\n    public class JsonPropertyNamePolicyAttribute : Attribute\r\n    {\r\n        public bool? CaseInsensitive { get; set; }\r\n\r\n        public virtual string ResolvePropertyName(string value);\r\n    }\r\n}\r\n```\r\n\r\n_Note that these attributes are not used to change the naming policy for Dictionary keys, Enum item names or other cases. Dictionary and Enum support is TBD but may have their own attribute for this and\\or a callback approach may be used._\r\n","Url":"https://github.com/dotnet/corefx/issues/36351","RelatedDescription":"Open issue \"Json serializer support for a property name policy\" (#36351)"},{"Id":"425068259","IsPullRequest":true,"CreatedAt":"2019-03-25T23:26:31","Actor":"safern","Number":"36344","RawContent":null,"Title":"Fix corefx official builds","State":"closed","Body":"Fixes: #36248 \r\nThis was causing arcade to be restored to the user's NuGet cache, which caused Maestro's task to fail, due to try to run a `git` command setting working directory to: `Environment.CurrentDirectory` which points to arcade restored location. When we restore with `-ci` flag the restore directory is under the repository, so the `git` command won't fail because we're within a repository. \r\n\r\nThis was fixed in Maestro to not depend on that: https://github.com/dotnet/arcade-services/pull/274 but let's add this switch to be more resilient.\r\n\r\n@tmat I think we should have some sort of validation that ci is set to true when one of the azure devops env vars is set, or at least emit a warning, it is super fragile, that forgetting a build flag, causes really weird issues.\r\n\r\ncc: @ericstj @jcagme @danmosemsft @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/36344","RelatedDescription":"Closed or merged PR \"Fix corefx official builds\" (#36344)"},{"Id":"425070765","IsPullRequest":true,"CreatedAt":"2019-03-25T23:02:29","Actor":"dotnet-maestro-bot","Number":"36346","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @davidsh\n* @stephentoub\n* @dotnet-maestro[bot]\n* @steveharter\n* @jkotas\n* @GrabYourPitchforks\n* @layomia\n* @tarekgh\n* @ViktorHofer\n* @ahsonkhan\n* @safern\n* @vancem\n* @tarikulsabbir\n* @adamsitnik\n* @Wraith2\n* @Anipik\n* @danmosemsft\n* @AfsanehR\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/36346","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#36346)"},{"Id":"425133788","IsPullRequest":true,"CreatedAt":"2019-03-25T21:57:00","Actor":"bartonjs","Number":"36350","RawContent":null,"Title":"Build a JsonDocument from an already positioned Utf8JsonReader","State":"open","Body":"Implementation and tests for creating a JsonDocument from an already positioned reader.\r\n\r\nFixes #36148 (once it gets api-approved).","Url":"https://github.com/dotnet/corefx/pull/36350","RelatedDescription":"Open PR \"Build a JsonDocument from an already positioned Utf8JsonReader\" (#36350)"},{"Id":"425059624","IsPullRequest":true,"CreatedAt":"2019-03-25T21:43:29","Actor":"wfurt","Number":"36342","RawContent":null,"Title":"make mmap tests friendlier to containers","State":"closed","Body":"Even if it is possible to construct container in a way this test pass, that is not the case even when started with `--privileged` flag.\r\n\r\nThis change makes it easier to run MemoryMappedFiles tests inside containers. \r\nIf privilege is not available it will report test skip instead of failure. \r\n\r\n```\r\nhelixbot@eea8b9b5c8fa:/mnt/wfurt-corefx-arm/artifacts/bin/tests/System.IO.MemoryMappedFiles.Tests/netcoreapp-Linux-Debug-arm$ ../../../testhost/netcoreapp-Linux-Debug-arm/dotnet xunit.console.dll System.IO.MemoryMappedFiles.Tests.dll -xml testResults.xml -nologo -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -notrait category=failing\r\n Discovering: System.IO.MemoryMappedFiles.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.IO.MemoryMappedFiles.Tests (found 80 of 103 test cases)\r\n  Starting:    System.IO.MemoryMappedFiles.Tests (parallel test collections = on, max threads = 6)\r\n    System.IO.MemoryMappedFiles.Tests.MemoryMappedViewStreamTests.ValidAccessLevelCombinations(mapAccess: ReadWriteExecute, viewAccess: ReadWriteExecute) [SKIP]\r\n      Execute permission failing in container.\r\n    System.IO.MemoryMappedFiles.Tests.MemoryMappedViewStreamTests.ValidAccessLevelCombinations(mapAccess: ReadWriteExecute, viewAccess: ReadExecute) [SKIP]\r\n      Execute permission failing in container.\r\n    System.IO.MemoryMappedFiles.Tests.MemoryMappedViewAccessorTests.ValidAccessLevelCombinations(mapAccess: ReadWriteExecute, viewAccess: ReadWriteExecute) [SKIP]\r\n      Execute permission failing in container.\r\n    System.IO.MemoryMappedFiles.Tests.MemoryMappedViewAccessorTests.ValidAccessLevelCombinations(mapAccess: ReadWriteExecute, viewAccess: ReadExecute) [SKIP]\r\n      Execute permission failing in container.\r\n  Finished:    System.IO.MemoryMappedFiles.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.IO.MemoryMappedFiles.Tests  Total: 345, Errors: 0, Failed: 0, Skipped: 4, Time: 5.316s\r\n``` \r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36342","RelatedDescription":"Closed or merged PR \"make mmap tests friendlier to containers\" (#36342)"},{"Id":"425123887","IsPullRequest":false,"CreatedAt":"2019-03-25T21:28:06","Actor":"vancem","Number":"36349","RawContent":null,"Title":"API Review for Activity Sampling Support for DiagnosticSource","State":"open","Body":"In addition to the work for System.Diagnostic.Activity to support the W3C Ids (see issue  #34828), we also wanted to support  the W3C concept of ACTIVITY SAMPLING in System.DIagnostics.DiagnositicSource.      The goal is to allow logging systems (like Applications Insights) to have most (say 99%) requests NOT logged (thus saving overhead and log size), but having ALL the events for those 1% that are sampled logged (which gives excellent fidelity for those requests.   \r\n\r\nThis feature was planned along with the other W3C support in #34828) but we wanted to do it as a separate item to make review and implementation more straightforward.   This issue tracks the API design portion of the sampling feature, and  #36340 is the actual implementation.  \r\n\r\nOne important goal of the design is to give the control over the sampling to the logging system (e.g. that is the subscriber of the DiagnosticListener).    That way they control all configuration of the system.   DiagnosticSource/Activity's role is to provide 'primitives' to support this.   In particular \r\n\r\n1. Creating a 'W3CIDFlags' property on Activity.   Activity already was mirroring the structure of the W3C ID, and this is just 'finishing it off' by exposing the 'flags' part of the ID (previously we simply ignored this data).   In particular the only flag current defined byte by the W3C standard is the 'Recording' bit that represent the fact that the associated request should be sampled by the logging system..   \r\n2. Parse the W3CIDFlags property from the ID, as well as propage it to child Activities, and use the flags on any outgoing W3C Ids. \r\n3. Add a new  callback  DiagnosticSource.OnActivityImport(...), This method can be called by instrumentation logic whose job it is to read 'external' requests (e.g. HTTP) and gives the subscribers the ability to update the Activity (basically set or reset the 'Recording' bit, based on whatever policy they have.   \r\n3. Add a new  callback  DiagnosticSource.OnActivityExport(...), This method can be called by instrumentation logic whose job it is to write 'external' requests (e.g. HTTP) and gives the subscriber the ability to update the outgoing payload based on its policy (it is not expected that this callback will be used in most cases, but is useful for completeness).  \r\n\r\nThe following APIs support the setting and propagation of the W3CIdFlags.    Along with these new APIs, we also updated the string'based ID methods/properties so that they properly parse / output the new flags based on the state of the W3CIDFlags field. \r\n```\r\n    public partial class Activity\r\n    {\r\n        public bool Recording { get; }\r\n        public 3CIdFlags W3CIdFlags { get; set; }\r\n        public Activity SetParentId(in ActivityTraceId traceId, in ActivitySpanId spanId, W3CIdFlags w3CFlags = W3CIdFlags.None);\r\n    }\r\n    [System.FlagsAttribute]\r\n    public enum W3CIdFlags\r\n    {\r\n        None = 0,\r\n        Recording = 1,\r\n    }\r\n```\r\nThe 'Recording' property is simply a convenience method for accessing W3CIdFlags.Recording.  It is useful because the 'IsEnabled' callback in DiagnosticsListener subscribers will want to access it conveniently, and it is a concept that is independent of W3C, so having a name that reflects that is good.  A setter is possible, but we did not include it here because it is used far less often and we can add it later if we find it useful to do so.   \r\n\r\nThe changes to DiagnosticSource/DiagnosticListener to support the new OnActivityImport and OnActivityExport are shown below. \r\n```\r\n    public partial class DiagnosticListener : System.Diagnostics.DiagnosticSource, System.IDisposable, System.IObservable<System.Collections.Generic.KeyValuePair<string, object>>\r\n    {\r\n        public override void OnActivityExport(Activity activity, object payloadObj) \r\n        public override void OnActivityImport(Activity activity, object payloadObj) \r\n        public virtual System.IDisposable Subscribe(\r\n            System.IObserver<KeyValuePair<string, object>> observer, \r\n            System.Func<string, object, object, bool> isEnabled, \r\n            System.Action<Activity, object> onActivityImport = null, \r\n            System.Action<Activity, object> onActivityExport = null);\r\n    }\r\n    public abstract partial class DiagnosticSource\r\n    {\r\n        public virtual void OnActivityExport(Activity activity, object payloadObj) \r\n        public virtual void OnActivityImport(Activity activity, object payloadObj)\r\n    }\r\n```\r\nBasically each of those methods is given the 'payload object' (which represents the incoming (or outgoing) request, and the activity that should be imported (or exported).   \r\n\r\nNote that very few instrumentation sites will need to ever call these callbacks (basically only those where activities are 'entering' or 'leaving' the system), and it is also assumed that unless you are doing something sophisticated like sampling, the subscriber will not need to specify them (the 'do nothing' body is fine).\r\n\r\nBelow is the help for each of the *OnActivity* methods\r\n```\r\n        /// <summary>\r\n        /// Optional: If an instumentation site creating an new activity that was caused\r\n        /// by something outside the process (e.g. an incomming HTTP request), then that site\r\n        /// will want to make a new activity and transfer state from that incoming request\r\n        /// to the activity.   To the extent possible this should be done by the instrumenation\r\n        /// site (because it is a contract between Activity and the incomming request logic\r\n        /// at the instrumenation site.   However the instrumenation site can't handle policy\r\n        /// (for example if sampling is done exactly which requests should be sampled) For this\r\n        /// the instrumentation site needs to call back out to the logging system and ask it to\r\n        /// resolve policy (e.g. decide if the Activity's 'sampling' bit should be set)  This\r\n        /// is what OnActivityImport is for.   It is given the activity as well as a payload\r\n        /// object that represents the incomming request.   The DiagnosticSource's subscribers\r\n        /// then have the opportunity to update this activity as desired.   \r\n        /// \r\n        /// Note that this callout is rarely used at instrumentation sites (only those sites\r\n        /// that are on the 'boundry' of the process), and the instrumetation site will implement\r\n        /// some default policy (it sets the activity in SOME way), and so this method does not\r\n        /// need to be overriden if that default policy is fine.   Thus this is call should \r\n        /// be used rare (but often important) cases.   \r\n        /// \r\n        /// Note that the type of 'payloadObject' is typed as object here, but for any \r\n        /// particular instrumentation site and the subscriber will know the type of \r\n        /// the payload and thus cast it and decode it if it needs to. \r\n        /// </summary>\r\n        public virtual void OnActivityImport(Activity activity, object payloadObj) { }\r\n\r\n        /// <summary>\r\n        /// Optional: If an instumentation site is at a location where activities leave the\r\n        /// process (e.g. an outgoing HTTP request), then that site will want to transfer state \r\n        /// from the activity to the outgoing request.    To the extent possible this should be\r\n        /// done by the instrumenationsite (because it is a contract between Activity and the \r\n        /// ougoing request logic at the instrumenation site.   However the instrumenation site \r\n        /// can't handle policy (for example whether activity information should be disabled, \r\n        /// or written in a older format for compatibility reasons).   For this\r\n        /// the instrumentation site needs to call back out to the logging system and ask it to\r\n        /// resolve policy.  This is what OnActivityExport is for.   It is given the activity as\r\n        /// well as a payloay object that represents the outgoing request.   The DiagnosticSource's \r\n        /// subscriber then have the ability to update the outgoing request before it is sent.   \r\n        /// \r\n        /// Note that this callout is rarely used at instrumentation sites (only those sites\r\n        /// that are on an outgoing 'boundry' of the process).   Moreover typically the default\r\n        /// policy that the instrumenation site performs (transfer all activity state in a \r\n        /// particular outgoing convention), is likely to be fine.   This is only for cases\r\n        /// where that is a problem.  Thus this is call should be used very rarely and is\r\n        /// mostly here for symetry with OnActivityImport and future-proofing.  \r\n        /// \r\n        /// Note that the type of 'payloadObject' is typed as object here, but for any \r\n        /// particular instrumentation site and the subscriber should know the type of \r\n        /// the payload and thus cast it and decode it if it needs to.\r\n        /// </summary>\r\n        public virtual void OnActivityExport(Activity activity, object payloadObj) { }\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/36349","RelatedDescription":"Open issue \"API Review for Activity Sampling Support for DiagnosticSource\" (#36349)"},{"Id":"424735646","IsPullRequest":true,"CreatedAt":"2019-03-25T21:15:45","Actor":"tmds","Number":"36333","RawContent":null,"Title":"Process.Unix: fix unexpected Process.Exited events","State":"closed","Body":"Extract ProcessWaitHandle creation from EnsureWatchingForExit to avoid\r\nProcess.Exited events when user hasn't set EnableRaisingEvents.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/36331","Url":"https://github.com/dotnet/corefx/pull/36333","RelatedDescription":"Closed or merged PR \"Process.Unix: fix unexpected Process.Exited events\" (#36333)"},{"Id":"424687538","IsPullRequest":false,"CreatedAt":"2019-03-25T21:15:45","Actor":"danmosemsft","Number":"36331","RawContent":null,"Title":"Sporadic failure in System.Diagnostics.Tests.ProcessTests.TestEnableRaiseEvents on Linux","State":"closed","Body":"Debian.8.Amd64-x64 and Alpine.38.Amd64-x64 today. Previously I see SLES and OpenSUSE.\r\n\r\nEach of the two tests (null and false) passed on rerun on one configuration and failed on the other, suggesting general flakiness. It looks like historically they are slightly flaky. The \"true\" version is not.\r\n\r\nThe failure is because the `Exited` delegate was invoked even though `p.EnableRaisingEvents` was set to false or not set at all. \r\n\r\n```\r\nAssert.False() Failure\r\nExpected: False\r\nActual:   True\r\nStack Trace :\r\n   at System.Diagnostics.Tests.ProcessTests.TestEnableRaiseEvents(Nullable`1 enable) in /__w/1/s/src/System.Diagnostics.Process/tests/ProcessTests.cs:line 121\r\n```\r\n\r\n\r\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190324.4/workItem/System.Diagnostics.Process.Tests/analysis/xunit/System.Diagnostics.Tests.ProcessTests~2FTestEnableRaiseEvents(enable:%20null)\r\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190324.4/workItem/System.Diagnostics.Process.Tests/analysis/xunit/System.Diagnostics.Tests.ProcessTests~2FTestEnableRaiseEvents(enable:%20False)\r\n\r\nIn Process.cs, `EnableRaisingEvents` sets `_watchForExit`. In this case we do not set it (or set to false) => `_watchForExit` is false. \r\n\r\nThe `Exited` delegate is called by `OnExited()` which is called by `RaiseOnExited()` which is called synchronously by `HasExited` (not used here) or synchronously by `WaitForExit` (if `_watchForExit` set) or by `CompletionCallback`. =>  `CompletionCallback` must be the source of this callback.\r\n\r\n`CompletionCallback` is set up by `EnsureWatchingForExit()` to be called when the process handle is signaled. This is the only only place it is set up =>we know `EnsureWatchingForExit()` was called.\r\n\r\nIf `_watchForExit` is false the only other effect is to prevent `SetProcessHandle` from calling `EnsureWatchingForExit()`. Other than by `EnableRaisingEvents`  this is the only place that `EnsureWatchingForExit()` is called (on Windows). => on Windows, if `EnableRaisingEvents` is not true, `Exited` will only be invoked if you use `HasExited` and this test does not.\r\n\r\nIncidentally MSDN says \r\n\r\n>Note that the Exited event is raised even if the value of EnableRaisingEvents is false when the process exits during or before the user performs a HasExited check.\r\n\r\nThat comment seems wrong. \r\n\r\nOn Unix  `EnsureWatchingForExit()` is called in one other place, `GetProcessHandle`, and `GetProcessHandle` is always called in `ForkAndExecProcess` if the fork succeeds. => on Unix, whatever the value of  `EnableRaisingEvents`, the callback will be called when the `_waitHandle` is signaled \r\n\r\n1. Question then is why the test ever passes - apparently most times, the handle does not get signaled.? The test after killing the process does `p.WaitForExit(30 sec)` before checking that `Exited` was called. The simplest explanation is that the process is usually not terminating within that 30 seconds. Seems unlikely? The `ProcessWaitState` class is complex and it's not clear to me what other causes there may be. @tmds\r\n\r\n2. Either way it seems that we should modify the Unix implementation so that, like Windows, it does not raise the event ever, if `EnableRaisingEvents` is false, and you do not call `HasExited`.\r\n\r\n@stephentoub\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/36331","RelatedDescription":"Closed issue \"Sporadic failure in System.Diagnostics.Tests.ProcessTests.TestEnableRaiseEvents on Linux\" (#36331)"},{"Id":"425115282","IsPullRequest":false,"CreatedAt":"2019-03-25T21:05:27","Actor":"ericstj","Number":"36348","RawContent":null,"Title":"API request : CompressionLevel.Highest","State":"open","Body":"Currently we only have `CompressionLevel.NoCompression, CompressionLevel.Fastest, CompressionLevel.Optimal`.\r\n\r\nAs discussed in https://github.com/dotnet/corefx/issues/34157 and other issues `CompressionLevel.Optimal` is not the \"best\" compression.  It's a trade-off of CPU/resources vs final compressed size.  In some cases the result is much worse than the best a compression algorithm can do.\r\n\r\nLet's let the `CompressionLevel.Optimal` continue to be the [goldilocks](https://en.wikipedia.org/wiki/Goldilocks_and_the_Three_Bears#Literary_elements) option, and add `CompressionLevel.Highest` for those who desire the absolute best compression, regardless of resource consumption.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/36348","RelatedDescription":"Open issue \"API request : CompressionLevel.Highest\" (#36348)"},{"Id":"425078682","IsPullRequest":true,"CreatedAt":"2019-03-25T19:32:10","Actor":"layomia","Number":"36347","RawContent":null,"Title":"Implement escaped-character handling in (Try)GetDateTime(Offset) & (T…","State":"open","Body":"…ry)GetGuid in Utf8JsonReader and JsonElement\r\n\r\nFixes https://github.com/dotnet/corefx/issues/36202.","Url":"https://github.com/dotnet/corefx/pull/36347","RelatedDescription":"Open PR \"Implement escaped-character handling in (Try)GetDateTime(Offset) & (T…\" (#36347)"},{"Id":"425068878","IsPullRequest":true,"CreatedAt":"2019-03-25T19:07:18","Actor":"lmolkova","Number":"36345","RawContent":null,"Title":"Fix: TraceId is not available before Activity starts","State":"open","Body":"In W3C distributed tracing TraceId is a unique identifier of the whole transaction: all Activities created to trace it, share the same trace id.\r\n\r\nTracing systems may use trace id to apply sampling consistent across multiple services. Sampling decision should be made as early as possible and even before Activity starts. \r\n\r\nWeb framework (ASP.NET Core) reads traceparent header (with trace-id and other identifiers) and creates a new Activity. Then sends callback `OnActivityImport` (#36340) to the tracing system. Then tracing system decides whether Activity is sampled in or not (based on sampling bit, trace Id).\r\nOnly after that Activity starts.\r\n\r\nThis change lazily parses traceId when it is set with `Activity.SetParentId(string)` but Activity is not started yet to support above scenario.","Url":"https://github.com/dotnet/corefx/pull/36345","RelatedDescription":"Open PR \"Fix: TraceId is not available before Activity starts\" (#36345)"},{"Id":"425066875","IsPullRequest":false,"CreatedAt":"2019-03-25T19:02:01","Actor":"EatonZ","Number":"36343","RawContent":null,"Title":"Possible bug with RSACng hash verification","State":"open","Body":"Original question: https://stackoverflow.com/questions/55319441/rsacng-fails-to-verify-hash\r\nI've verified the problem also affects .NET Core and am convinced this may be a bug in both .NET Core and .NET Framework.\r\n\r\n**How to reproduce:**\r\n1. Create a new .NET Core Console App in VS 2017 on Windows.\r\n2. Add the `System.Security.Cryptography.Cng` package.\r\n3. Add `using System.Security.Cryptography;` to the top of `Program.cs` and paste this code into `Main`:\r\n```\r\nvar rsaKeyPub = \"BgIAAACkAABSU0ExAAgAAAMAAAC7N02Zb0lf3UO4pl3ymFvkrNSkPP0Q076vYzvbeTqS5vkBcoXloM044q1LCFtaXw6DUzSFM0IqoGOONb+PW+UeNcTcA/+MKNi7nzbBGg3kAj8QhuxO3u2QJXg62Zb9H+SEvZYfi9PhOCSo0LpWKl72k+uaoTyPAuV738TamRvXWb8XOswSmsHQa38q1Id4TW7CzvVOjc0vnhL+rZ8Po1qg5FJc8m8gdGWC0a4NJTzBsOqLzeVE12B8zgIMehu1gGw/SjY5PVEkDABWgY2DzxLT3rbs6oZ5ZLSHu041q3s1ihOQ8+GMRx3qqvPyB4JVlyd7jqN0j0dT+Yqr+8t3/Liu\";\r\nvar hash = \"Ow1kg47GAgf9cyZbisDuTRNy5NQ=\";\r\nvar signature = \"bBnFouYvuZSYZIPihDB4J/CVC7o5ej3MrbkZV9cn6vgL23rDW1jevWEHx4wGBXLc443DKrZ0XQlSpp3FE/+isyDMcGh7c0buMufiYuOQ0rbo8e4tvuZuZpt+06xnBQcYyFMqe4lkFcI0f/NeAIvy1vME+Kq4v3ikwR4+CsjObgEJIBdWB0B4cqp8355pxtYJv2BQ7UHy/Tv0+OtslgbxikrwU2CQ+tR3XHywIdzm0BEOBfdnOlky96ED18BAqwLlxjef0snCl3DvKz93gtIIQVwEoDRlKC/v/Xb4Eke/fyvt66orLEIyL8Emaer9J6P38ZB1pWRuOsLCv4ly8fnOMw==\";\r\nRSAParameters rsaParams;\r\nusing (var rsa = new RSACryptoServiceProvider())\r\n{\r\n    rsa.ImportCspBlob(Convert.FromBase64String(rsaKeyPub));\r\n    //Export now for easy importing in the next function. This is not the reason the next block returns false.\r\n    rsaParams = rsa.ExportParameters(false);\r\n    var valid = rsa.VerifyHash(Convert.FromBase64String(hash), Convert.FromBase64String(signature), HashAlgorithmName.SHA1, RSASignaturePadding.Pkcs1);\r\n}\r\nusing (var rsa = new RSACng())\r\n{\r\n    rsa.ImportParameters(rsaParams);\r\n    var valid = rsa.VerifyHash(Convert.FromBase64String(hash), Convert.FromBase64String(signature), HashAlgorithmName.SHA1, RSASignaturePadding.Pkcs1);\r\n}\r\n```\r\n4. Set breakpoints after `var valid` to see the results. The first block returns true, the second false.\r\n\r\nThis bug may go pretty deep, all the way down into `NCryptVerifySignature`. I don't know where I would post a bug report for that, though. Maarten Bodewes on Stack Overflow suggests it may be a problem with the exponent (3) this particular key uses.\r\n","Url":"https://github.com/dotnet/corefx/issues/36343","RelatedDescription":"Open issue \"Possible bug with RSACng hash verification\" (#36343)"},{"Id":"424665031","IsPullRequest":true,"CreatedAt":"2019-03-25T18:39:34","Actor":"davidsh","Number":"36329","RawContent":null,"Title":"Fix Kerberos/NTLM for multiple domain/realm environments in Linux","State":"closed","Body":"This PR addresses some issues reported by a customer (not thru GitHub). They noticed that\r\nmultiple domain scenarios were working in .NET Core 2.0 but broke in .NET Core 2.1 on Linux.\r\n\r\nWhile the previous PR #35383 solved the Negotiate Kerberos to NTLM fallback issue,\r\nit added more complexity than necessary. The retry logic I added wasn't really necessary\r\nbecause the original code that used GSS_KRB5_NT_PRINCIPAL_NAME format for the target name\r\nwas wrong. That logic only works for pure Kerberos environments and doesn't handle domain\r\nor realm referrals. So, it only handles the default Kerberos realm on the single Linux\r\nclient. In addition, using GSS_KRB5_NT_PRINCIPAL_NAME defeats the logic of the SPNEGO mechanism.\r\nThat is why I originally needed to add the retry logic using GSS_C_NT_HOSTBASED_SERVICE format\r\nfor the target name.\r\n\r\nThe multiple domain/realm scenario worked in .NET Core 2.0 because it used CurlHandler.\r\nAnd libcurl always uses GSS_C_NT_HOSTBASED_SERVICE format for target name.\r\n\r\nThis PR reworks the logic to use the GSS_C_NT_HOSTBASED_SERVICE format. It also removes the\r\nnow unneeded retry logic. I tested this against Windows and Linux as well as pure Kerberos\r\nand Kerberos to NTLM fallback (using SPNEGO).\r\n\r\nI added more tests. These tests are currently part of the enterprise scenario tests we are\r\nbuilding. They are activated via environment variables.\r\n\r\nBy definining all of the environment variables below, I am able to run the System.Net.Security\r\nand System.Net.Http enterprise-scenario tests. Both SocketsHttpHandler in System.Net.Http and\r\nNegotiateStream in System.Net.Security use the same common GSS-API logic in CoreFx.\r\n\r\nDefine domain-joined server remote endpoint:\r\n* COREFX_NET_SECURITY_NEGOSERVERURI\r\n* COREFX_DOMAINJOINED_HTTPHOST\r\n* COREFX_NET_AD_DOMAINNAME\r\n* COREFX_NET_AD_PASSWORD\r\n* COREFX_NET_AD_USERNAME\r\n\r\nDefine standalone server remote endpoint:\r\n* COREFX_NET_SERVER_PASSWORD\r\n* COREFX_NET_SERVER_USERNAME\r\n* COREFX_WINDOWSSERVER_HTTPHOST","Url":"https://github.com/dotnet/corefx/pull/36329","RelatedDescription":"Closed or merged PR \"Fix Kerberos/NTLM for multiple domain/realm environments in Linux\" (#36329)"},{"Id":"425017148","IsPullRequest":true,"CreatedAt":"2019-03-25T17:07:47","Actor":"directhex","Number":"36341","RawContent":null,"Title":"Add RIDs Mono cares about, or has been known to","State":"open","Body":"Hopefully I got the correct places updated.\r\n\r\nThis isn't a complete list - @nealef will likely have opinions on which distributions should have zSeries entries, and @NattyNarwhal will complain I didn't add enough variety to the AIX entry. There's also room for improvement in the RHEL entries - I have a RHEL for PPC64el license in a desk drawer, so that's certainly a thing too.\r\n\r\n* Generic UNIX PPC64\r\n* Generic UNIX PPC64 Little Endian\r\n* Generic UNIX zSeries\r\n* Generic UNIX MIPS Little Endian\r\n* Generic Linux PPC64\r\n* Generic Linux PPC64 Little Endian\r\n* Generic Linux zSeries\r\n* Generic Linux MIPS Little Endian\r\n* AIX 7.2 PPC64\r\n* Debian 8 PPC64 Little Endian\r\n* Debian 8 zSeries\r\n* Debian 8 MIPS Little Endian\r\n* Debian 9 PPC64 Little Endian\r\n* Debian 9 zSeries\r\n* Debian 9 MIPS Little Endian\r\n* Debian 10 ARM Little Endian (v5)\r\n* Debian 10 ARM Little Endian with Hard Float (v7)\r\n* Debian 10 ARM64 (v8)\r\n* Debian 10 x86\r\n* Debian 10 x64\r\n* Debian 10 PPC64 Little Endian\r\n* Debian 10 zSeries\r\n* Debian 10 MIPS Little Endian\r\n* Raspbian 8 ARM Little Endian with Hard Float (v6)\r\n* Raspbian 9 ARM Little Endian with Hard Float (v6)\r\n* Raspbian 10 ARM Little Endian with Hard Float (v6)","Url":"https://github.com/dotnet/corefx/pull/36341","RelatedDescription":"Open PR \"Add RIDs Mono cares about, or has been known to\" (#36341)"},{"Id":"425013694","IsPullRequest":true,"CreatedAt":"2019-03-25T17:00:21","Actor":"vancem","Number":"36340","RawContent":null,"Title":"Support for System.Diagnostics.Activity sampling.   ","State":"open","Body":"@lmolkova - this is the PR associated with the changes we discussed on Friday.\r\n@noahfalk  \r\n\r\nAPI review issue #36349","Url":"https://github.com/dotnet/corefx/pull/36340","RelatedDescription":"Open PR \"Support for System.Diagnostics.Activity sampling.   \" (#36340)"},{"Id":"424867447","IsPullRequest":true,"CreatedAt":"2019-03-25T15:19:46","Actor":"dotnet-maestro[bot]","Number":"36336","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190324.72\r\n- **Date Produced**: 3/25/2019 12:51 AM\r\n- **Commit**: 2f4a7564beb6f8c1f4929504ee2221953d25fc39\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview4-27524-72\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview4-27524-72\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview4-27524-72\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36336","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#36336)"},{"Id":"424727266","IsPullRequest":true,"CreatedAt":"2019-03-25T14:42:07","Actor":"dotnet-maestro-bot","Number":"36332","RawContent":null,"Title":"Update ProjectNTfs, ProjectNTfsTestILC to beta-27525-00, beta-27525-00, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/36332","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs, ProjectNTfsTestILC to beta-27525-00, beta-27525-00, respectively (master)\" (#36332)"},{"Id":"424878664","IsPullRequest":true,"CreatedAt":"2019-03-25T13:36:48","Actor":"dotnet-maestro[bot]","Number":"36337","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190324.03\r\n- **Date Produced**: 3/25/2019 4:23 AM\r\n- **Commit**: f89f4f9def5f8faff4505376688671b9866172f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27524-03\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview4-27524-03\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview4-27524-03\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36337","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#36337)"},{"Id":"424902471","IsPullRequest":false,"CreatedAt":"2019-03-25T13:29:24","Actor":"khellang","Number":"36339","RawContent":null,"Title":"Proposal: Combine ISOWeek.GetWeekOfYear and GetYear methods","State":"open","Body":"If you have a `DateTime` and want to get the ISO week for that date, it's usually not enough to only get the week, as the ISO week year might not be the same as the year of the specified `date`. That means you'd almost always want to call both `GetWeekOfYear` and `GetYear` for the same date.\r\n\r\nSince both `GetYear` and `GetWeekOfYear` does (more or less) the same work and has both week and year available internally, it would make sense to merge the two methods into one, to avoid doing the same work twice, and have it return either a tuple or make `ISOWeek` itself a (readonly) struct and return that.\r\n\r\nThe current type looks like this:\r\n\r\n```csharp\r\nnamespace System.Globalization\r\n{\r\n    public static partial class ISOWeek\r\n    {\r\n        public static int GetWeekOfYear(System.DateTime date) { throw null; }\r\n        public static int GetWeeksInYear(int year) { throw null; }\r\n        public static int GetYear(System.DateTime date) { throw null; }\r\n        public static System.DateTime GetYearEnd(int year) { throw null; }\r\n        public static System.DateTime GetYearStart(int year) { throw null; }\r\n        public static System.DateTime ToDateTime(int year, int week, System.DayOfWeek dayOfWeek) { throw null; }\r\n    }\r\n}\r\n```\r\n\r\nI propose something like this:\r\n\r\n```diff\r\nnamespace System.Globalization\r\n{\r\n-    public static partial class ISOWeek\r\n+    public readonly partial struct ISOWeek : System.IEquatable<ISOWeek>\r\n    {\r\n+        public ISOWeek(int year, int week) { throw null; }\r\n+        public int Year { get { throw null; } }\r\n+        public int Week { get { throw null; } }\r\n+        public void Deconstruct(out int year, out int week) { throw null; }\r\n+        public bool Equals(System.Globalization.ISOWeek obj) { throw null; }\r\n+        public override bool Equals(object obj) { throw null; }\r\n+        public override int GetHashCode() { throw null; }\r\n+        public override string ToString() { throw null; }\r\n+        public bool TryFormat(System.Span<char> destination, out int charsWritten) { throw null; }\r\n\r\n-        public static int GetWeekOfYear(System.DateTime date) { throw null; }\r\n-        public static int GetYear(System.DateTime date) { throw null; }\r\n+        public static System.Globalization.ISOWeek FromDate(System.DateTime date) { throw null; }\r\n    }\r\n}\r\n```\r\n\r\nRef. https://github.com/dotnet/corefx/issues/28933#issuecomment-476096246\r\n\r\nIs it too late to make changes to the (not yet shipped) `System.Globalization.ISOWeek` APIs?\r\n\r\n// @tarekgh ","Url":"https://github.com/dotnet/corefx/issues/36339","RelatedDescription":"Open issue \"Proposal: Combine ISOWeek.GetWeekOfYear and GetYear methods\" (#36339)"},{"Id":"424881229","IsPullRequest":false,"CreatedAt":"2019-03-25T12:42:12","Actor":"AdamJachocki","Number":"36338","RawContent":null,"Title":"EnvDTE SolutionFolder AddFromFile shows error message","State":"open","Body":"Hi, first of all, sorry that I posted this bug here, but I couldn't find any better place for this.\r\n\r\nI want to add some projects to solution using DTE. This is WPF APPLICATION, not an extension.\r\n\r\nI have to add some projects to one folder, and then another one project to other folder and last project to yet another folder.\r\n\r\nWhen adding projects to first folder everything is ok. But when I add projects to another folder, the message box popups saying: \"Operation could not be completed: Invalid window handle.\"\r\n\r\nAfter clicking OK, I get another MessageBox: \"Operation could not be completed: Unspecified error\".\r\n\r\nBut, all the projects are successfully added to the solution. So the biggest problem is the message box that popups while doing the job. Having read \"invalid window handle\", I thought that maybe I should try do EVERYTHING on main thread. But result is the same. Additionaly there is no messages in Output Window of Visual Studio. This is my code:\r\n\r\n(DoFunction and DoAction are simple methods that wraps the content into try..catch and if there is RPC_E_SERVERCALL_RETRYLATER exception, it will take another attempt)\r\n\r\n`//Getting DTE Service\r\ndteService = DoFunction(() =>(DTE2)Activator.CreateInstance(Type.GetTypeFromProgID(\"VisualStudio.DTE.15.0\", true), true));\r\n\r\n//Getting the solution\r\nactiveSolution = DoFunction(() => dteService.Solution as Solution4);\r\nDoAction(() =>activeSolution.Open(solutionPath));`\r\n\r\nActiveSolution is my private field.\r\n\r\n`//Adding project to solution:\r\nDoAction(() =>\r\n{\r\n    SolutionFolder folder = GetExistingSolutionFolder(folderTree);\r\n    if (folder == null)\r\n        activeSolution.AddFromFile(projectFileName);\r\n    else\r\n        folder.AddFromFile(projectFileName); //<-- messagebox popups here\r\n}); `\r\n\r\nProject is being added to folder inside solution. Folders already exist in solution. GetExistingSolutionFolder just searches recurseviley for the folder.\r\n\r\nWhat could be the reason of this message box? What's important, no exception is thrown.\r\n\r\nI have also described this problem here: https://stackoverflow.com/questions/55179773/envdte-solutionfolder-addfromfile-shows-error-message","Url":"https://github.com/dotnet/corefx/issues/36338","RelatedDescription":"Open issue \"EnvDTE SolutionFolder AddFromFile shows error message\" (#36338)"},{"Id":"424765075","IsPullRequest":false,"CreatedAt":"2019-03-25T11:27:37","Actor":"KoalaBear84","Number":"36334","RawContent":null,"Title":"System.InvalidProgramException with string ranges","State":"closed","Body":"Sorry if this is the wrong repository or not good if I post this. But it was very confusing because there was no help in IDE or at runtime.\r\n\r\nYes, it looks like I'm using the new feature wrong. The problem is that the IDE/Roslyn/compiler does not give an error/warning and I didn't know that I was using it wrong.\r\n\r\nThe code:\r\n```csharp\r\nstring test = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nConsole.WriteLine(test[^3]);\r\n```\r\n\r\nException when running:\r\n```\r\nSystem.InvalidProgramException\r\n  HResult=0x8013153A\r\n  Message=Common Language Runtime detected an invalid program.\r\n  Source=<Cannot evaluate the exception source>\r\n```\r\n\r\nYes. I've seen on example pages that I should use it like `..^3` (all until last 3 characters) or `^3..` (last 3 characters).\r\n\r\nMore details if needed:\r\n\r\n<details>\r\n  <summary>dotnet --list-sdks</summary>\r\n\r\n> 1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n> 1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.200 [C:\\Program Files\\dotnet\\sdk][C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.400-preview-009063 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.400-preview-009171 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.500-preview-009297 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.500-preview-009335 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.600-preview-009497 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n> 3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n</details>\r\n\r\n<details>\r\n  <summary>dotnet --list-runtimes</summary>\r\n\r\n> Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n> Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.0.0-preview2-25407-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 3.0.0-preview-27324-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n</details>\r\n","Url":"https://github.com/dotnet/corefx/issues/36334","RelatedDescription":"Closed issue \"System.InvalidProgramException with string ranges\" (#36334)"},{"Id":"424786653","IsPullRequest":false,"CreatedAt":"2019-03-25T08:56:59","Actor":"znakeeye","Number":"36335","RawContent":null,"Title":"Provide public API for non-throwing division of Decimal","State":"open","Body":"`Decimal` division operator throws when the result overflows. Please provide a public API to allow safe division without non-performant throw/catch. E.g.:\r\n\r\n```\r\nvar numerator = 100m;\r\nvar denumerator = 0m;\r\n\r\nif (!numerator.TryDivide(denumerator))\r\n{\r\n    // Overflow or division by zero. Handle it!\r\n}\r\n```\r\n\r\nJust for the record. In .NET Framework the division operator calls into some non-public native `FCallDivideOverflowed` API where this piece of information was also - unfortunately - hidden from the public APIs:\r\n\r\n```\r\nprivate static extern void FCallDivideOverflowed(\r\n     ref Decimal d1, ref Decimal d2, ref bool overflowed);\r\n```","Url":"https://github.com/dotnet/corefx/issues/36335","RelatedDescription":"Open issue \"Provide public API for non-throwing division of Decimal\" (#36335)"},{"Id":"424679925","IsPullRequest":false,"CreatedAt":"2019-03-25T00:25:04","Actor":"danmosemsft","Number":"36330","RawContent":null,"Title":"AssociatePersistedKey_CAPIviaCNG_RSA failing on Windows.10.Arm64-arm64-Release","State":"open","Body":"Looks like this may be sporadic.\r\n```\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Keyset as registered is invalid.\r\nStack Trace :\r\n   at Internal.NativeCrypto.CapiHelper.CreateProvHandle(CspParameters parameters, Boolean randomKeyContainer) in F:\\vsagent\\75\\s\\src\\System.Security.Cryptography.Csp\\src\\System\\Security\\Cryptography\\CapiHelper.Windows.cs:line 287\r\n   at System.Security.Cryptography.RSACryptoServiceProvider.get_SafeProvHandle() in F:\\vsagent\\75\\s\\src\\System.Security.Cryptography.Csp\\src\\System\\Security\\Cryptography\\RSACryptoServiceProvider.Windows.cs:line 86\r\n   at System.Security.Cryptography.RSACryptoServiceProvider.get_SafeKeyHandle() in F:\\vsagent\\75\\s\\src\\System.Security.Cryptography.Csp\\src\\System\\Security\\Cryptography\\RSACryptoServiceProvider.Windows.cs:line 135\r\n   at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 keySize, CspParameters parameters, Boolean useDefaultKeySize) in F:\\vsagent\\75\\s\\src\\System.Security.Cryptography.Csp\\src\\System\\Security\\Cryptography\\RSACryptoServiceProvider.Windows.cs:line 71\r\n   at System.Security.Cryptography.RSACryptoServiceProvider..ctor(CspParameters parameters) in F:\\vsagent\\75\\s\\src\\System.Security.Cryptography.Csp\\src\\System\\Security\\Cryptography\\RSACryptoServiceProvider.Windows.cs:line 47\r\n   at System.Security.Cryptography.X509Certificates.Tests.CertificateCreation.PrivateKeyAssociationTests.AssociatePersistedKey_CAPIviaCNG_RSA(Int32 provType, KeyNumber keyNumber) in F:\\vsagent\\75\\s\\src\\System.Security.Cryptography.X509Certificates\\tests\\CertificateCreation\\PrivateKeyAssociationTests.cs:line 97\r\n```\r\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190324.4/workItem/System.Security.Cryptography.X509Certificates.Tests/analysis/xunit/System.Security.Cryptography.X509Certificates.Tests.CertificateCreation.PrivateKeyAssociationTests~2FAssociatePersistedKey_CAPIviaCNG_RSA(provType:%201,%20keyNumber:%20Exchange)\r\n```\r\nAssociatePersistedKey_CAPIviaCNG_RSA(provType: 1, keyNumber: Exchange)\t\r\nAssociatePersistedKey_CAPIviaCNG_RSA(provType: 1, keyNumber: Signature)\t\r\nAssociatePersistedKey_CAPIviaCNG_RSA(provType: 12, keyNumber: Exchange)\t\r\nAssociatePersistedKey_CAPIviaCNG_RSA(provType: 24, keyNumber: Exchange)\t\r\nAssociatePersistedKey_CAPIviaCNG_RSA(provType: 24, keyNumber: Signature)\r\n```","Url":"https://github.com/dotnet/corefx/issues/36330","RelatedDescription":"Open issue \"AssociatePersistedKey_CAPIviaCNG_RSA failing on Windows.10.Arm64-arm64-Release\" (#36330)"},{"Id":"424660973","IsPullRequest":true,"CreatedAt":"2019-03-24T21:54:58","Actor":"nschonni","Number":"36328","RawContent":null,"Title":"typo: effiecently -> efficiently","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/36328","RelatedDescription":"Closed or merged PR \"typo: effiecently -> efficiently\" (#36328)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"425231103","IsPullRequest":true,"CreatedAt":"2019-03-26T05:15:54","Actor":"AlekseyTs","Number":"34433","RawContent":null,"Title":"Adjust Find All References and Go To Implementation for Default Interface Methods","State":"open","Body":"- Include non-abstract definition into the implementations result.\r\n- Include implementations from derived interfaces into the result.","Url":"https://github.com/dotnet/roslyn/pull/34433","RelatedDescription":"Open PR \"Adjust Find All References and Go To Implementation for Default Interface Methods\" (#34433)"},{"Id":"425205486","IsPullRequest":true,"CreatedAt":"2019-03-26T04:48:47","Actor":"dotnet-bot","Number":"34432","RawContent":null,"Title":"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34432","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#34432)"},{"Id":"425167224","IsPullRequest":true,"CreatedAt":"2019-03-26T04:48:41","Actor":"dotnet-bot","Number":"34426","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34426","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#34426)"},{"Id":"425167200","IsPullRequest":true,"CreatedAt":"2019-03-26T04:48:35","Actor":"dotnet-bot","Number":"34425","RawContent":null,"Title":"Merge master to features/NullableDogfood","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/NullableDogfood.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/NullableDogfood\ngit reset --hard upstream/features/NullableDogfood\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/NullableDogfood --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34425","RelatedDescription":"Closed or merged PR \"Merge master to features/NullableDogfood\" (#34425)"},{"Id":"425167176","IsPullRequest":true,"CreatedAt":"2019-03-26T04:48:29","Actor":"dotnet-bot","Number":"34424","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34424","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#34424)"},{"Id":"425167163","IsPullRequest":true,"CreatedAt":"2019-03-26T04:48:24","Actor":"dotnet-bot","Number":"34423","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34423","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#34423)"},{"Id":"425167135","IsPullRequest":true,"CreatedAt":"2019-03-26T04:48:00","Actor":"dotnet-bot","Number":"34422","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34422","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#34422)"},{"Id":"425140990","IsPullRequest":true,"CreatedAt":"2019-03-26T03:07:04","Actor":"JoeRobich","Number":"34416","RawContent":null,"Title":"Update infrastructure for 16.1 preview1","State":"closed","Body":"- Add new dev16.1 preview1 branches to CI\r\n- Update master to beta2\r\n- Add publishing for dev16.1 preview1 branch","Url":"https://github.com/dotnet/roslyn/pull/34416","RelatedDescription":"Closed or merged PR \"Update infrastructure for 16.1 preview1\" (#34416)"},{"Id":"425175899","IsPullRequest":false,"CreatedAt":"2019-03-26T00:42:21","Actor":"vsfeedback","Number":"34431","RawContent":null,"Title":"Issue a compiler warning when using the is operator to compare a variable of a non-nullable reference type with its declared type.","State":"open","Body":"<p>I am currently debugging a library following some refactoring where a similar expression was used by mistake. I feel it would be helpful if this would issue a compiler warning to make the problem easier to find, similar to how the same thing with a non-nullable value type issues a warning.</p><p>The following is example C# code that would issue this warning:</p><pre>#nullable enable\nbool isString(string s) =&gt; s is string;</pre><p>Of course, the is operator would return false if s were null, but s is declared non-nullable.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/502487/issue-a-compiler-warning-when-using-the-is-operato.html\nVSTS ticketId: 825470_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 3/22/2019, 02:02 AM (3 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/34431","RelatedDescription":"Open issue \"Issue a compiler warning when using the is operator to compare a variable of a non-nullable reference type with its declared type.\" (#34431)"},{"Id":"425175534","IsPullRequest":true,"CreatedAt":"2019-03-26T00:40:14","Actor":"dibarbet","Number":"34430","RawContent":null,"Title":"Wait for fully loaded workspace before allowing code cleanup.","State":"open","Body":"Redo of #34175 with the new master changes.\r\n\r\nWait until solution is fully loaded when the user hits the code broom.\r\n![code_broom_wait](https://user-images.githubusercontent.com/5749229/54462191-18b29280-472c-11e9-97e8-d366640cc1d3.gif)","Url":"https://github.com/dotnet/roslyn/pull/34430","RelatedDescription":"Open PR \"Wait for fully loaded workspace before allowing code cleanup.\" (#34430)"},{"Id":"425174892","IsPullRequest":true,"CreatedAt":"2019-03-26T00:36:57","Actor":"333fred","Number":"34429","RawContent":null,"Title":"Add public API implementation and wire it up to the rewriter.","State":"open","Body":"This adds an initial implementation of the API and hooks it up the rewriter information, and addresses a few prototype comments (while also adding a few more). We'll need to have a more fine-grained control over whether to enable the nullable analysis than the global context option, but I'm using that for now as it's a simple solution and works well for our tests. I've hooked up the API to our `VerifyTypes` hook, which is now using entirely public APIs instead of manually binding nodes and running the walker. @AlekseyTs specifically for review, as this is doing a bunch of stuff in the semantic model. @dotnet/roslyn-compiler for review.","Url":"https://github.com/dotnet/roslyn/pull/34429","RelatedDescription":"Open PR \"Add public API implementation and wire it up to the rewriter.\" (#34429)"},{"Id":"425174751","IsPullRequest":false,"CreatedAt":"2019-03-26T00:36:14","Actor":"heejaechang","Number":"34428","RawContent":null,"Title":"remove double execute command handler pattern we have.","State":"open","Body":"I think we have this pattern\r\n\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.EditorFeatures/Implementation/ExtractMethod/AbstractExtractMethodCommandHandler.cs,81\r\n\r\nwhere we get a document and check things like \r\n> if (!supportsFeatureService.SupportsRefactorings(document))\r\n\r\nand then dig in\r\n> return Execute(args.SubjectBuffer, args.TextView, context.OperationContext);\r\n\r\nand get a document again to avoid a case where we get 2 different documents in 1 method.\r\n\r\nwith @dibarbet clean up - https://github.com/dotnet/roslyn/pull/34314\r\n\r\nwe should be able to clean up those patterns. and make all these checking to be centralized in some system?","Url":"https://github.com/dotnet/roslyn/issues/34428","RelatedDescription":"Open issue \"remove double execute command handler pattern we have.\" (#34428)"},{"Id":"425174671","IsPullRequest":false,"CreatedAt":"2019-03-26T00:35:54","Actor":"vsfeedback","Number":"34427","RawContent":null,"Title":"\"Pull members up to base type\" refactoring should shorten type references","State":"open","Body":"<p>Currently when I use the &quot;Pull members up to base type&quot; refactoring, the resulting code in the base type has any generated code fully namespaced.</p><p>For example, consider the following code:</p><pre>using System.Collections.Generic;\n\npublic class MyClass : IMyInterface\n{\n    IList&lt;Info&gt; GetInfo();\n}</pre><p>Pulling the GetInfo method below up into the interface results in the following code generated in the interface:</p><pre>public interface IMyInterface\n{\n    System.Collections.Generic.IList&lt;Info&gt; GetInfo();\n}</pre><p>This is a trivial example with only one required namespace, it can look a real mess where more namespaces need to be pulled in.</p><p>My suggestion is that the code refactoring should automatically shorten type definitions, adding in using statements as required.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/501399/pull-members-up-to-base-type-refactoring-should-sh.html\nVSTS ticketId: 825054_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 3/22/2019, 02:04 AM (3 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/34427","RelatedDescription":"Open issue \"\"Pull members up to base type\" refactoring should shorten type references\" (#34427)"},{"Id":"425153992","IsPullRequest":true,"CreatedAt":"2019-03-25T23:05:09","Actor":"jaredpar","Number":"34421","RawContent":null,"Title":"Fix build correctness","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/34421","RelatedDescription":"Open PR \"Fix build correctness\" (#34421)"},{"Id":"425150164","IsPullRequest":false,"CreatedAt":"2019-03-25T22:51:02","Actor":"sharwell","Number":"34420","RawContent":null,"Title":"Unit tests are needed for Code Cleanup","State":"open","Body":"A targeted unit test is missing for https://github.com/dotnet/roslyn/pull/32175#discussion_r247572698.","Url":"https://github.com/dotnet/roslyn/issues/34420","RelatedDescription":"Open issue \"Unit tests are needed for Code Cleanup\" (#34420)"},{"Id":"425149294","IsPullRequest":false,"CreatedAt":"2019-03-25T22:47:49","Actor":"sharwell","Number":"34419","RawContent":null,"Title":"Cleanup project only runs on one target framework","State":"open","Body":"> have we considered apply clean up on all context for multitargeted projects? like the way @genlu  did for his sync namepsace to folder name stuff?\r\n>\r\n> asking since context is only exposed through editor but not through solution explorer? or should we ask platform team to expose context in code clean up menu in solution explorer?\r\n\r\n_Originally posted by @heejaechang in https://github.com/dotnet/roslyn/pull/32175#discussion_r267840181_\r\n\r\n> so, this handle all multitarget project case? so, the service itself can handle multi-targetting? @genlu had some complication on sync folder/namespace fix on multi targetting. so might be good person to code review this area?\r\n\r\n_Originally posted by @heejaechang in https://github.com/dotnet/roslyn/pull/32175#discussion_r267852007_\r\n","Url":"https://github.com/dotnet/roslyn/issues/34419","RelatedDescription":"Open issue \"Cleanup project only runs on one target framework\" (#34419)"},{"Id":"425148862","IsPullRequest":false,"CreatedAt":"2019-03-25T22:46:18","Actor":"sharwell","Number":"34418","RawContent":null,"Title":"Consolidate generated code checks for code fixes","State":"open","Body":"> I see this generated code kind of checks for fixer in arbitary places.. we probably need to discuss and create some kind of central thing? otherwise, this behavior seems hard to make consistent?\r\n\r\n_Originally posted by @heejaechang in https://github.com/dotnet/roslyn/pull/32175#discussion_r267858835_","Url":"https://github.com/dotnet/roslyn/issues/34418","RelatedDescription":"Open issue \"Consolidate generated code checks for code fixes\" (#34418)"},{"Id":"425147075","IsPullRequest":false,"CreatedAt":"2019-03-25T22:39:54","Actor":"mikadumont","Number":"34417","RawContent":null,"Title":"Auto population of lambda expression for delegate assignment","State":"open","Body":"Customer request copying here.\r\n\r\n**Version Used**: Visual Studio 2017 and Visual Studio 2019 Preview\r\n\r\n**Steps to Reproduce**:\r\n\r\n> Useful feature is auto population of lambda expression for delegate assignment. \r\n\r\n> With Resharper, when you type ServicePointManager.ServerCertificateValidationCallback +=\r\n\r\n> You get suggestion with (sender, cert, chain, err) => ; Same when you initialize event. \r\n\r\n> Vs2019 preview 3 only suggests named event handler method. It would be very helpful to \r\n\r\n> suggest lambda expression for delegate. meaning when I type “+=” the lambda expression is \r\n\r\n> in the suggestions. Visual studio’s suggestions include a named method while Resharper \r\n\r\n> suggests both the named method and lambda expression. ","Url":"https://github.com/dotnet/roslyn/issues/34417","RelatedDescription":"Open issue \"Auto population of lambda expression for delegate assignment\" (#34417)"},{"Id":"425124975","IsPullRequest":false,"CreatedAt":"2019-03-25T21:31:07","Actor":"heejaechang","Number":"34415","RawContent":null,"Title":"remove IWorkspaceStatusService and add proper one once prototype work is done","State":"open","Body":"right now, we are in prototype mode for partial solution feature. it might or might not get in depending on the exercise we are doing among multiple teams.\r\n\r\nthis tracks once everything is settled, we clean up things we added for prototyping.","Url":"https://github.com/dotnet/roslyn/issues/34415","RelatedDescription":"Open issue \"remove IWorkspaceStatusService and add proper one once prototype work is done\" (#34415)"},{"Id":"425118292","IsPullRequest":false,"CreatedAt":"2019-03-25T21:13:10","Actor":"333fred","Number":"34414","RawContent":null,"Title":"Unused assignment analysis isn't handling `??=` correctly","State":"open","Body":"```C#\r\nusing System;\r\n\r\npublic class C\r\n{\r\n    public void M(object o = null /* Flagged as unused value */)\r\n    {\r\n        o ??= \"Hello world\";\r\n        Console.WriteLine(o);\r\n    }\r\n\r\n    public void M2(object o)\r\n    {\r\n        o = GetObject(); // Flagged as unused value\r\n        o ??= \"Hello world\";\r\n        Console.WriteLine(o);\r\n    }\r\n\r\n    public void M3()\r\n    {\r\n        object o = GetObject(); // Not flagged as unused value?\r\n        o ??= \"Hello world\";\r\n        Console.WriteLine(o);\r\n    }\r\n\r\n    object GetObject() => throw null;\r\n}\r\n```\r\n\r\nThe first two are, for some reason, flagged as unused, but not the third. /cc @genlu @mavasani.","Url":"https://github.com/dotnet/roslyn/issues/34414","RelatedDescription":"Open issue \"Unused assignment analysis isn't handling `??=` correctly\" (#34414)"},{"Id":"425092864","IsPullRequest":true,"CreatedAt":"2019-03-25T20:09:27","Actor":"v-zbsail","Number":"34413","RawContent":null,"Title":"LOC CHECKIN | dotnet/roslyn dev16.0-vs-deps | 20190325","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/34413","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/roslyn dev16.0-vs-deps | 20190325\" (#34413)"},{"Id":"425089689","IsPullRequest":false,"CreatedAt":"2019-03-25T20:01:02","Actor":"333fred","Number":"34412","RawContent":null,"Title":"Inconsistent `NullableAnnotation` for value type fields between source and references","State":"open","Body":"```C#\r\n#nullable enable\r\npublic class C\r\n{\r\n\tpublic int i;\r\n}\r\n```\r\n\r\nFor the above code, `FieldSymbol.TypeWithAnnotations` is different for the field `i` between source and metadata. When the `FieldSymbol` is created from source, it has a `TypeWithAnnotations` of `NotAnnotated`. When the `FieldSymbol` is parsed from metadata, it has a `TypeWithAnnotations` of `Oblivious`. This is because we don't emit a `Nullable` attribute for the field, as it's a value type and can never be null. We should make our handling of these consistent between source and metadata, as this will affect the public API.","Url":"https://github.com/dotnet/roslyn/issues/34412","RelatedDescription":"Open issue \"Inconsistent `NullableAnnotation` for value type fields between source and references\" (#34412)"},{"Id":"425072893","IsPullRequest":false,"CreatedAt":"2019-03-25T19:17:26","Actor":"jcouv","Number":"34411","RawContent":null,"Title":"Should reachability affect nullability of ref conditionals?","State":"open","Body":"In `(true ? ref notNullableString : ref nullableString) = null;` we warn that the two nullabilities (`ref notNullableString` and `ref nullableString`) don't match. \r\nShould we also warn about the assignment of `null`, or instead only consider the reachable branch to determine the L-value annotation of the ternary?\r\n\r\nRelates to https://github.com/dotnet/roslyn/pull/34323#pullrequestreview-218426166","Url":"https://github.com/dotnet/roslyn/issues/34411","RelatedDescription":"Open issue \"Should reachability affect nullability of ref conditionals?\" (#34411)"},{"Id":"425071346","IsPullRequest":false,"CreatedAt":"2019-03-25T19:13:31","Actor":"jcouv","Number":"34410","RawContent":null,"Title":"QuickInfo on ranges and indexes","State":"open","Body":"We should review what is currently displayed in QuickInfo for ranges and indexes (`x..y`, `x..^y`, `^y`, ...).\r\nIn particular, we may be able to alleviate some confusion on `^1`.\r\n\r\nFYI @agocke ","Url":"https://github.com/dotnet/roslyn/issues/34410","RelatedDescription":"Open issue \"QuickInfo on ranges and indexes\" (#34410)"},{"Id":"425068271","IsPullRequest":false,"CreatedAt":"2019-03-25T19:05:41","Actor":"jcouv","Number":"34409","RawContent":null,"Title":"Remove hard-coded nullable annotations in compiler before C# 8.0 RTM","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/34409","RelatedDescription":"Open issue \"Remove hard-coded nullable annotations in compiler before C# 8.0 RTM\" (#34409)"},{"Id":"425067987","IsPullRequest":false,"CreatedAt":"2019-03-25T19:04:56","Actor":"jcouv","Number":"34408","RawContent":null,"Title":"Fix message \"Possible dereference of a null reference\"","State":"open","Body":"The dereference is certain.","Url":"https://github.com/dotnet/roslyn/issues/34408","RelatedDescription":"Open issue \"Fix message \"Possible dereference of a null reference\"\" (#34408)"},{"Id":"425067463","IsPullRequest":false,"CreatedAt":"2019-03-25T19:03:35","Actor":"jcouv","Number":"34407","RawContent":null,"Title":"Async-streams: add contextual variable `cancellationToken`","State":"open","Body":"Also, you cannot have an async-enumerable method with a parameter called `cancellationToken`. If you do, maybe a fixer helps fix your code.","Url":"https://github.com/dotnet/roslyn/issues/34407","RelatedDescription":"Open issue \"Async-streams: add contextual variable `cancellationToken`\" (#34407)"},{"Id":"425060675","IsPullRequest":false,"CreatedAt":"2019-03-25T18:47:14","Actor":"sharwell","Number":"34406","RawContent":null,"Title":"Add tests for renaming to 'unmanaged' or 'nameof'","State":"open","Body":"> FYI: 'unmanaged' is another one of those special names.  as is 'nameof'.  Possibly things to look into.\r\n\r\n_Originally posted by @CyrusNajmabadi in https://github.com/dotnet/roslyn/pull/34391#discussion_r268797982_","Url":"https://github.com/dotnet/roslyn/issues/34406","RelatedDescription":"Open issue \"Add tests for renaming to 'unmanaged' or 'nameof'\" (#34406)"},{"Id":"425060235","IsPullRequest":false,"CreatedAt":"2019-03-25T18:46:14","Actor":"vsfeedback","Number":"34405","RawContent":null,"Title":"VB EnC: Allow editing method containing a static variable","State":"open","Body":"Using VS Community 2017 v 15.9.<br><br>I've had no problem with previous versions, but in 2017 I can't edit and continue.  Get the message:<br><br>&quot;Edits were made to the code which cannot be applied while debugging.&quot;<br><br>I'm forced to stop and edit or to restart.  I cannot edit and continue.  Any (valid) changes I make are met with this error.<br><br>The errors within VS 2017 show &quot;modifying method which contains a static variable will prevent the debug session fromn continuing&quot;.<br><br>This was never a problem in previous versions.<br><br>What has changed?  Is there a way to fix this?<br><br>Dave W.\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/383111/edit-and-continue-fails.html\r\nVSTS ticketId: 729878_\r\n","Url":"https://github.com/dotnet/roslyn/issues/34405","RelatedDescription":"Open issue \"VB EnC: Allow editing method containing a static variable\" (#34405)"},{"Id":"425029804","IsPullRequest":true,"CreatedAt":"2019-03-25T17:35:46","Actor":"RikkiGibson","Number":"34404","RawContent":null,"Title":"Readonly members LangVersion checks","State":"open","Body":"Related to #32911 \r\n\r\nEnsures that the readonly members feature cannot be used on 7.3 and earlier language versions.","Url":"https://github.com/dotnet/roslyn/pull/34404","RelatedDescription":"Open PR \"Readonly members LangVersion checks\" (#34404)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"425134383","IsPullRequest":true,"CreatedAt":"2019-03-25T21:58:43","Actor":"jkotas","Number":"7218","RawContent":null,"Title":"Add option to remove CurlHandler","State":"open","Body":"Workaround for https://github.com/dotnet/corert/issues/7000. The CurlHandle is on its path to extinction. Until that happens, add an option to strip it manually.","Url":"https://github.com/dotnet/corert/pull/7218","RelatedDescription":"Open PR \"Add option to remove CurlHandler\" (#7218)"},{"Id":"425112687","IsPullRequest":true,"CreatedAt":"2019-03-25T20:58:47","Actor":"trylek","Number":"7217","RawContent":null,"Title":"Basic support for running multiple tests","State":"open","Body":"This change introduces a new helper class, ApplicationSet,\r\nrepresenting an arbitrary number of apps. This change let me\r\nadd support for building and summarizing a larger number of apps.\r\n\r\nI had to decouple the compiler runners from the input / output\r\npath pair as these vary for the individual apps within the\r\nset (right now the logic is that basically one folder = one app).\r\n\r\nI have added a new switch compile-subtree and two new options\r\n--nojit and --noetw with hopefully self-explanatory purpose.\r\nI haven't yet integrated the bucketing logic as I need to switch\r\nover to actually measuring the statistics and working on the\r\npresentation.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7217","RelatedDescription":"Open PR \"Basic support for running multiple tests\" (#7217)"},{"Id":"424646792","IsPullRequest":true,"CreatedAt":"2019-03-25T16:32:25","Actor":"MichalStrehovsky","Number":"7209","RawContent":null,"Title":"Make default comparers a removable feature","State":"closed","Body":"Adding to make it possible to work around current problems in #7208 when reflection is disabled.\r\n\r\nComparers also root the entire type loader, so making this optional puts as on a path where we can make type loader optional too. Type loader is about 500 kB of junk. If we can remove it, our Hello world size becomes competitive with Go. People who are willing to walk the extra mile to make their code compatible with this get very small deployment sizes that are especially important for e.g. the WASM target.","Url":"https://github.com/dotnet/corert/pull/7209","RelatedDescription":"Closed or merged PR \"Make default comparers a removable feature\" (#7209)"},{"Id":"424965967","IsPullRequest":true,"CreatedAt":"2019-03-25T16:31:49","Actor":"jkotas","Number":"7216","RawContent":null,"Title":"Delete CoreLib aliases that are no longer needed","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7216","RelatedDescription":"Closed or merged PR \"Delete CoreLib aliases that are no longer needed\" (#7216)"},{"Id":"424719302","IsPullRequest":false,"CreatedAt":"2019-03-25T04:33:25","Actor":"philcarbone","Number":"7215","RawContent":null,"Title":"Multiple csproj projects referenced and using NativeCallable","State":"open","Body":"I can't seem to get multiple project using NativeCallableAttribute to expose these functions. Only the project that has the references (the project being compiled) has it's functions exposed as native callable functions.  \r\n\r\n**Project A** has a native function 'add':\r\n``` csharp\r\n[NativeCallable (EntryPoint = \"add\", CallingConvention = CallingConvention.StdCall)]\r\npublic static int Add (int a, int b) {\r\n\treturn a + b;\r\n}\r\n```\r\n\r\n**Project B** has a native function 'subtract':\r\n``` csharp\r\n[NativeCallable (EntryPoint = \"subtract\", CallingConvention = CallingConvention.StdCall)]\r\npublic static int Subtract (int a, int b) {\r\n\treturn a - b;\r\n}\r\n```\r\n\r\n1. **Project A** has a project reference to **Project B** \r\n2. **Project A** is compiled\r\n3. I can only access **Project A's** 'add' function, the 'subtract' function is not available.\r\n\r\n----\r\n## More Notes ##\r\nProject A's nuget.config\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n <packageSources>\r\n    <clear />\r\n    <add key=\"dotnet-core\" value=\"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n </packageSources>\r\n</configuration>\r\n```\r\n\r\nProject A's csproj file:\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\t<PropertyGroup>\r\n\t\t<OutputType>Library</OutputType>\r\n    \t\t<TargetFramework>netcoreapp3.0</TargetFramework>\r\n    \t\t<RuntimeIdentifiers>win-x64;osx-x64;linux-x64</RuntimeIdentifiers>\r\n    \t\t<NativeLib>Static</NativeLib>\r\n    \t\t<RootNamespace>HostA</RootNamespace>\r\n    \t\t<LangVersion>8.0</LangVersion>\r\n    \t\t<NullableContextOptions>enable</NullableContextOptions>\r\n\t</PropertyGroup>\r\n  \t<PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    \t\t<LangVersion>8.0</LangVersion>\r\n    \t\t<NullableContextOptions>enable</NullableContextOptions>\r\n  \t</PropertyGroup>\r\n  \t<PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    \t\t<LangVersion>8.0</LangVersion>\r\n    \t\t<NullableContextOptions>enable</NullableContextOptions>\r\n  \t</PropertyGroup>\r\n\t<ItemGroup>\r\n    \t\t<PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n    \t\t<PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.2.0\" />\r\n    \t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"2.2.0\" />\r\n    \t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"2.2.0\" />\r\n    \t\t<PackageReference Include=\"System.Runtime.InteropServices\" Version=\"4.3.*\" />\r\n\t</ItemGroup>\r\n  \t<ItemGroup>\r\n\t\t<ProjectReference Include=\"..\\ProjectB\\ProjectB.csproj\" />\r\n  \t</ItemGroup>\r\n  \t<ItemGroup>\r\n    \t\t<RdXmlFile Include=\"rd.xml\" />\r\n    \t\t<IlcArg Include=\"--stacktracedata\" />\r\n  \t</ItemGroup>\r\n</Project>\r\n```\r\n\r\nCommand used to build:\r\n``` bash\r\ndotnet publish /p:NativeLib=Shared -r win-x64 -c release\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7215","RelatedDescription":"Open issue \"Multiple csproj projects referenced and using NativeCallable\" (#7215)"},{"Id":"424658901","IsPullRequest":true,"CreatedAt":"2019-03-25T02:48:30","Actor":"Dotnet-GitSync-Bot","Number":"7212","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @nschonni @nschonni","Url":"https://github.com/dotnet/corert/pull/7212","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7212)"},{"Id":"424675508","IsPullRequest":true,"CreatedAt":"2019-03-25T01:33:59","Actor":"nattress","Number":"7214","RawContent":null,"Title":"Update metadata Rvas w.r.t. rva section","State":"closed","Body":"Initial implementation for fixing up RVAs embedded in the copied metadata blob in R2R compilation mode contains a bug where if the RVA pointed to in the metadata lies outside the `.text` section, a spurious fixed up RVA is emitted.\r\n\r\n* Adjust the implementation to update the metadata RVAs after all sections are laid out and the image is finalized.\r\n* Run the metadata RVA fixups on the output stream to avoid another full copy.\r\n* Pass in a delegate to `MetadataRvaFixupBuilder` which can transform any input MSIL image Rva to an output R2R image Rva. Previously we just passed in `.text` section Rva delta which is insufficient.\r\n\r\nIn particular this fixes a runtime issue with a previously Crossgened System.Private.CoreLib where RVA fields are inaccessible because they lie in the .data section and we emitted a large negative RVA value which points nowhere good.","Url":"https://github.com/dotnet/corert/pull/7214","RelatedDescription":"Closed or merged PR \"Update metadata Rvas w.r.t. rva section\" (#7214)"},{"Id":"424663939","IsPullRequest":true,"CreatedAt":"2019-03-25T00:44:14","Actor":"trylek","Number":"7213","RawContent":null,"Title":"Miscellaneous SuperIlc Improvements, pt# 3","State":"closed","Body":"1) Add new JitRunner representing a no-op compilation step\r\nfollowed by JIT-only execution of the source IL assembly.\r\n\r\n2) CompilerRunner - add timeout constant for execution\r\nwith / without GC stress and support for environment overrides.\r\n\r\n3) ParallelRunner - I have come to the conclusion that\r\nin ETW mode we need to keep the process ID alive for\r\nthe entire duration of the [potentially parallel] ETW run,\r\notherwise OS may end up recycling some PIDs and we become\r\nunable to back-translate them to logical execution processes.\r\n\r\nTo compensate for this somewhat ugly requirement, I have\r\nadded logic to split the execution process set to chunks\r\n(currently each chunk corresponds to 1000 processes);\r\nwe only apply parallelism within a particular chunk,\r\nthe chunks are run in serial and each creates a new trace\r\nevent session and the ReadyToRunJittedMethods filter.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7213","RelatedDescription":"Closed or merged PR \"Miscellaneous SuperIlc Improvements, pt# 3\" (#7213)"},{"Id":"424657906","IsPullRequest":true,"CreatedAt":"2019-03-24T20:51:39","Actor":"Dotnet-GitSync-Bot","Number":"7211","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni @nschonni","Url":"https://github.com/dotnet/corert/pull/7211","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7211)"},{"Id":"424656815","IsPullRequest":true,"CreatedAt":"2019-03-24T20:43:39","Actor":"Dotnet-GitSync-Bot","Number":"7210","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @nschonni","Url":"https://github.com/dotnet/corert/pull/7210","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7210)"},{"Id":"424644778","IsPullRequest":true,"CreatedAt":"2019-03-24T18:31:20","Actor":"MichalStrehovsky","Number":"7208","RawContent":null,"Title":"Add a mode that disables reflection","State":"open","Body":"Fixes #6897.\r\n\r\nThis adds an option to disable generation of reflection data in the compiler.","Url":"https://github.com/dotnet/corert/pull/7208","RelatedDescription":"Open PR \"Add a mode that disables reflection\" (#7208)"},{"Id":"424554294","IsPullRequest":false,"CreatedAt":"2019-03-23T23:02:40","Actor":"DjArt","Number":"7207","RawContent":null,"Title":"MissingMetadataException for type, defined in RD","State":"open","Body":"Error: `This object cannot be invoked because it was metadata-enabled for browsing only: 'System.Func<System.Runtime.CompilerServices.CallSite,System.Object,System.Collections.Generic.KeyValuePair<System.Collections.IEnumerator,System.IDisposable>>.Invoke(System.Runtime.CompilerServices.CallSite,System.Object)'`\r\nRD file:\r\n```\r\n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">\r\n    <Application>\r\n        <Assembly Name=\"*Application*\" Dynamic=\"Required All\"/>\r\n        <TypeInstantiation Name=\"System.Func\" Arguments=\"System.Runtime.CompilerServices.CallSite, System.Object, System.Collections.Generic.KeyValuePair{System.Collections.IEnumerator, System.IDisposable}\" Dynamic=\"Required All\" />\r\n    </Application>\r\n</Directives>\r\n```\r\nUsage code isn't available, because it's dynamic stuff inside IronPython.","Url":"https://github.com/dotnet/corert/issues/7207","RelatedDescription":"Open issue \"MissingMetadataException for type, defined in RD\" (#7207)"},{"Id":"424510739","IsPullRequest":true,"CreatedAt":"2019-03-23T21:49:11","Actor":"MichalStrehovsky","Number":"7206","RawContent":null,"Title":"Make globalization a removable feature","State":"closed","Body":"Removes another ~100 kB from a Hello World.\r\n\r\nUnfortunately, more removal was needed than just flipping the `get_Invariant` bit because the scanner doesn't do inlining and dead code elimination: on retail builds, we still scan the complete graph before RyuJIT does dead code elimination. This makes us find new things that are callable and not reflection blocked on the way, and force them into the optimized closure even though they're no longer reachable from optimized code.","Url":"https://github.com/dotnet/corert/pull/7206","RelatedDescription":"Closed or merged PR \"Make globalization a removable feature\" (#7206)"},{"Id":"424507255","IsPullRequest":true,"CreatedAt":"2019-03-23T15:37:33","Actor":"MichalStrehovsky","Number":"7205","RawContent":null,"Title":"Fix dependency reporting issues","State":"closed","Body":"`SealedVTableNode` is going to query the vtable of the type and its interfaces in `GetData`. Make sure to report that as a non-reloc dependency.\r\n\r\n`ReadyToRunGenericHelperNode` is going to query the vtable in the generated helper to find the dictionary slot. Report that too.\r\n\r\nNot reporting these leads to failures when scanner is involved (and we use pre-built vtables). We're currently getting away without this reporting, because native layout and reflection report these dependencies too.","Url":"https://github.com/dotnet/corert/pull/7205","RelatedDescription":"Closed or merged PR \"Fix dependency reporting issues\" (#7205)"},{"Id":"423991016","IsPullRequest":true,"CreatedAt":"2019-03-23T09:08:00","Actor":"trylek","Number":"7199","RawContent":null,"Title":"Integrating test execution into SuperIlc and other improvements","State":"closed","Body":"1) Change --cpaot and --corerun from boolean flags to paths to the\r\nactual compilers; this also implicitly removes the --tool-directory\r\noption.\r\n\r\n2) Introduce new compiler index for internal use to easily iterate\r\nover CPAOT vs. Crossgen results. I have also changed the output\r\ndirectory name to be based on this logical enumeration rather than\r\non the plain file name of the compiler exe.\r\n\r\n3) Integrate logic for ETW tracing. I have not yet implemented\r\nthe actual per-assembly JIT breakdown but this delta goes a long way\r\ntowards that goal. The delta is getting big so I'd prefer to merge\r\nsomething in and follow up in a subsequent change if possible.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7199","RelatedDescription":"Closed or merged PR \"Integrating test execution into SuperIlc and other improvements\" (#7199)"},{"Id":"424462989","IsPullRequest":true,"CreatedAt":"2019-03-23T05:50:26","Actor":"Dotnet-GitSync-Bot","Number":"7204","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7204","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7204)"},{"Id":"424449878","IsPullRequest":true,"CreatedAt":"2019-03-23T02:50:28","Actor":"Dotnet-GitSync-Bot","Number":"7203","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7203","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7203)"},{"Id":"424383732","IsPullRequest":true,"CreatedAt":"2019-03-23T01:37:01","Actor":"Dotnet-GitSync-Bot","Number":"7202","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7202","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7202)"},{"Id":"423956207","IsPullRequest":true,"CreatedAt":"2019-03-22T03:37:40","Actor":"jkotas","Number":"7198","RawContent":null,"Title":" Implement GetConservativeUpperBoundForOutgoingArgs for Unix","State":"closed","Body":"Fixes #7118 ","Url":"https://github.com/dotnet/corert/pull/7198","RelatedDescription":"Closed or merged PR \" Implement GetConservativeUpperBoundForOutgoingArgs for Unix\" (#7198)"},{"Id":"424019704","IsPullRequest":true,"CreatedAt":"2019-03-22T03:37:24","Actor":"Dotnet-GitSync-Bot","Number":"7201","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @ahoefling","Url":"https://github.com/dotnet/corert/pull/7201","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7201)"},{"Id":"423999173","IsPullRequest":false,"CreatedAt":"2019-03-22T00:35:51","Actor":"christianscheuer","Number":"7200","RawContent":null,"Title":"[Question] CoreRT future plans","State":"open","Body":"Dear CoreRT team,\r\n\r\nHaving followed this repo for now a couple of years and having developed a product depending on it, it's been quite a journey to follow the development in here. It's been very rewarding to be able to follow the progress of a compiler and runtime and I've been stoked to see that it was finally possible to do full AOT compilation of .NET. It's been a joy to watch the discussions and PRs come in one by one, slowly improving the product - thank you to the whole team for all their hard work on this!\r\n\r\nNow for my question.\r\nDuring the past months I've started to notice hints about the future of CoreRT in a growing number of discussions around github and I've been surprised to see references to that CoreRT is still considered an experimental runtime and is often ruled out as a good solution for customers. Whereas initially over the first years following this, it felt like CoreRT was on a path to becoming part of the official \"dotnet\" CLI experience, but these recent discussions seem to indicate that the opposite is true. It strikes me that in the long discussion thread on single file deployment many of the use cases would benefit from CoreRT yet it seems like everybody is ruling it out for reasons I still don't fully understand (apart from the obvious dynamic plugin loading, but honestly there are many alternative ways to implement plugins in CoreRT, some of which we use in our product).\r\n\r\nIt seems to me that you have a stellar product here that would solve so many issues if it were on a path to official support, yet at some point along the way it was decided to not fully support it anyway. @jkotas you hinted in the discussion that the technology would likely end up in a (different) product some day, but even if that calmed my nerves slightly, it also sparked more questions, such as - can we continue to rely on this compiler for our product, or do we run the risk of it suddenly falling out of grace.\r\nI thought at one point that the decision to not officially support CoreRT was simply that it wasn't ready. But now that it feels increasingly more mature yet seems to be ruled out of official support plans, it strikes me that it might be a more strategic decision.\r\n\r\nI know that this might be a tricky question to answer in a public forum, but please don't take it the wrong way. I'm just curious to try to understand if full AOT compilation (not CPAOT but CoreRT) is still being considered a strategic part of the .NET future.\r\n\r\nI have noticed the efforts to unify the sources from the various runtimes which is another hint that long time development is intended. I understand that this repo serves many officially supported products, among those now .NET Native and CPAOT, which leads me to have greater trust in CoreRT going forward.\r\n\r\nBut I hope it makes sense that it would be nice at one point to gain a little clarity of what Microsoft's intentions are in the longer term in this space. In my ideal world, it would be decided to acknowledge how great of a product this already is and it would gain a permanent place on the .NET stage.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7200","RelatedDescription":"Open issue \"[Question] CoreRT future plans\" (#7200)"},{"Id":"423793795","IsPullRequest":true,"CreatedAt":"2019-03-21T16:47:52","Actor":"Dotnet-GitSync-Bot","Number":"7197","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7197","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7197)"},{"Id":"423603532","IsPullRequest":true,"CreatedAt":"2019-03-21T08:49:33","Actor":"Dotnet-GitSync-Bot","Number":"7196","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7196","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7196)"},{"Id":"423543547","IsPullRequest":true,"CreatedAt":"2019-03-21T07:39:13","Actor":"Dotnet-GitSync-Bot","Number":"7195","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @GrabYourPitchforks @GrabYourPitchforks @grant-d @sywhang","Url":"https://github.com/dotnet/corert/pull/7195","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7195)"},{"Id":"423475823","IsPullRequest":true,"CreatedAt":"2019-03-20T22:34:10","Actor":"nattress","Number":"7194","RawContent":null,"Title":"Get CoreCLR tests from Azure","State":"closed","Body":"Jenkins saved build artifacts are likely to be deleted as we move to AzDO. Move them all to the cloudcijobs account and update URL pointers in the repo.","Url":"https://github.com/dotnet/corert/pull/7194","RelatedDescription":"Closed or merged PR \"Get CoreCLR tests from Azure\" (#7194)"},{"Id":"423152064","IsPullRequest":true,"CreatedAt":"2019-03-20T18:22:11","Actor":"MichalStrehovsky","Number":"7192","RawContent":null,"Title":"Run CoreFX tests single threaded","State":"closed","Body":"Might help us avoid `abort trap 6` that has been plaguing the CI (#7118).\r\n\r\nDisabling parallel execution everywhere because it doesn't have big impact on test execution time and helps keep the changes to build-job.yml short.","Url":"https://github.com/dotnet/corert/pull/7192","RelatedDescription":"Closed or merged PR \"Run CoreFX tests single threaded\" (#7192)"},{"Id":"423152175","IsPullRequest":true,"CreatedAt":"2019-03-20T18:20:16","Actor":"MichalStrehovsky","Number":"7193","RawContent":null,"Title":"Make CoreFX tests RD.XML smaller","State":"closed","Body":"Most of this stuff is no longer needed.","Url":"https://github.com/dotnet/corert/pull/7193","RelatedDescription":"Closed or merged PR \"Make CoreFX tests RD.XML smaller\" (#7193)"},{"Id":"423022378","IsPullRequest":true,"CreatedAt":"2019-03-20T07:41:28","Actor":"jkotas","Number":"7191","RawContent":null,"Title":"Add back APIs dropped from RuntimeHelpers by accident","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7191","RelatedDescription":"Closed or merged PR \"Add back APIs dropped from RuntimeHelpers by accident\" (#7191)"},{"Id":"422926102","IsPullRequest":true,"CreatedAt":"2019-03-19T23:42:06","Actor":"trylek","Number":"7190","RawContent":null,"Title":"SuperIlc improvements, part #1","State":"closed","Body":"This change enables parallelization of ILC compilation when building\r\nmultiple assemblies. For the CoreCLR framework I'm observing about\r\n3~4 times compilation time speedup (about 33 seconds where\r\npreviously I was observing about 120 seconds with SuperIlc and\r\nabout 180 seconds with the legacy scripts).\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7190","RelatedDescription":"Closed or merged PR \"SuperIlc improvements, part #1\" (#7190)"},{"Id":"422441417","IsPullRequest":true,"CreatedAt":"2019-03-19T23:03:16","Actor":"trylek","Number":"7189","RawContent":null,"Title":"Fix the last remaining compilation error in ASP.NET assemblies","State":"closed","Body":"This change fixes the build of ASP.NET S.P.Corelib which needs\r\nGC ref map construction for ByRefLike types - I skipped this\r\ncorner case in my initial implementation with a TODO throw.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7189","RelatedDescription":"Closed or merged PR \"Fix the last remaining compilation error in ASP.NET assemblies\" (#7189)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"423947858","IsPullRequest":true,"CreatedAt":"2019-03-26T03:53:29","Actor":"nugetlurker","Number":"3033","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5906 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.5906 into sdk release/2.1.7xx branch","Url":"https://github.com/dotnet/sdk/pull/3033","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.5906 into sdk\" (#3033)"},{"Id":"423947836","IsPullRequest":true,"CreatedAt":"2019-03-26T03:52:58","Actor":"nugetlurker","Number":"3032","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5906 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.5906 into sdk release/2.2.3xx branch","Url":"https://github.com/dotnet/sdk/pull/3032","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.5906 into sdk\" (#3032)"},{"Id":"425143096","IsPullRequest":true,"CreatedAt":"2019-03-26T01:19:33","Actor":"wli3","Number":"3041","RawContent":null,"Title":"WIP Fix test flakiness by override DotnetCliHome","State":"closed","Body":"So local tools resolver cache is isolated as well to overcome each build has the same package id for local tools nupkg.","Url":"https://github.com/dotnet/sdk/pull/3041","RelatedDescription":"Closed or merged PR \"WIP Fix test flakiness by override DotnetCliHome\" (#3041)"},{"Id":"425052570","IsPullRequest":true,"CreatedAt":"2019-03-26T00:28:11","Actor":"dsplaisted","Number":"3038","RawContent":null,"Title":"Attempt to fix flaky \"test as tool\" runs","State":"closed","Body":"We've been having some of the \"test as tool\" runs fail.  The command to run the tool is failing, and the output ends up being the usage information for `dotnet tool run`, for example:\r\n\r\n```\r\nUsage: dotnet tool run [options] <COMMAND_NAME> [[--] <additional arguments>...]]\r\n\r\nArguments:\r\n  <COMMAND_NAME>   The command name of the tool to run.\r\n\r\nOptions:\r\n  -h, --help   Show command line help.\r\nAdditional Arguments:\r\n  Arguments passed to the application that is being run.\r\n```\r\n\r\nIn the .binlog, there is also a message:\r\n\r\n> Run \"dotnet tool restore\" to make the \"testSdkClean\" command available.\r\n\r\nSo this PR attempts to fix this by explicitly including the `--` before the arguments to the tool, as well as explicitly running `dotnet tool restore` before running the tool.","Url":"https://github.com/dotnet/sdk/pull/3038","RelatedDescription":"Closed or merged PR \"Attempt to fix flaky \"test as tool\" runs\" (#3038)"},{"Id":"425163243","IsPullRequest":false,"CreatedAt":"2019-03-25T23:42:34","Actor":"jkoritzinsky","Number":"3042","RawContent":null,"Title":"Adding User Experience for creating WinMDs on .NET Core","State":"open","Body":"We're planning on adding a new WinRT host in `core-setup` to enable users to author WinRT components that run on .NET Core 3.0 and are activated via the upcoming side-by-side WinRT resolution, Reg-Free WinRT. See dotnet/core-setup#5527\r\n\r\nWe should add support in the SDK to enable users to \"relatively\" easily author a WinRT .NET Core 3.0 component.\r\n\r\nAs per the design in dotnet/core-setup#5527, my plan is to resolve the WinRT host the same way that the .NET Core App Host or the .NET Core COM Host are currently resolved. After resolving the host, we will copy the host to the output directory and rename it to be the output name of the component with a `.dll` suffix.\r\n\r\nThe user will enable creating a WinRT .NET Core 3.0 component by setting the `<OutputType>` to `winmdobj` in their `.csproj`. MSBuild and the SDK already have all of the targets and tasks wired up correctly to to generate a `.winmd` when the user specifies an output type of `winmdobj`, so there minimal work needed on that end.\r\n\r\nCurrent open issues:\r\n\r\n- WinMDExp is only available on Desktop MSBuild. We can either make this available in Core MSBuild or require users to use Desktop MSBuild to build these WinMDs.\r\n- WinMDExp only supports full PDBs. My suggestion is to change the default debug type for `winmdobj` projects to be `full` instead of `portable`.\r\n- The user will need to add a reference to `Windows.Foundation.winmd`. The Windows team is currently working on a new metapackage (`Microsoft.Windows.SDK.Contracts`) that is currently on MyGet (https://dotnet.myget.org/gallery/windows-sdk-beta). This package can be referenced by users to fulfill this requirement.","Url":"https://github.com/dotnet/sdk/issues/3042","RelatedDescription":"Open issue \"Adding User Experience for creating WinMDs on .NET Core\" (#3042)"},{"Id":"423513883","IsPullRequest":true,"CreatedAt":"2019-03-25T23:02:47","Actor":"peterhuene","Number":"3030","RawContent":null,"Title":"Prevent copy-local of runtime assets when targeting .NET Framework TFM.","State":"closed","Body":"This commit prevents the copying of \"runtime\" assets (those that end up\r\nin the `runtimes/` sub-directory for resolution based on the RID at\r\nruntime) when building or publishing an application that targets a .NET\r\nFramework TFM.  Only the .NET Core runtime will resolve these assets\r\nbased on RID, so copying them for .NET Framework targeted applications\r\nis unnecessary.\r\n\r\nFixes dotnet/cli#10979.","Url":"https://github.com/dotnet/sdk/pull/3030","RelatedDescription":"Closed or merged PR \"Prevent copy-local of runtime assets when targeting .NET Framework TFM.\" (#3030)"},{"Id":"425111456","IsPullRequest":false,"CreatedAt":"2019-03-25T20:55:37","Actor":"nguerrera","Number":"3040","RawContent":null,"Title":"Fix flakiness in test-as-tools leg and re-enable it","State":"open","Body":"See #3038, #3039\r\n\r\nWe get a usage error from `dotnet tool run`","Url":"https://github.com/dotnet/sdk/issues/3040","RelatedDescription":"Open issue \"Fix flakiness in test-as-tools leg and re-enable it\" (#3040)"},{"Id":"425111026","IsPullRequest":true,"CreatedAt":"2019-03-25T20:54:30","Actor":"nguerrera","Number":"3039","RawContent":null,"Title":"Remove test-as-tools leg for now due to flakiness","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3039","RelatedDescription":"Open PR \"Remove test-as-tools leg for now due to flakiness\" (#3039)"},{"Id":"423465719","IsPullRequest":true,"CreatedAt":"2019-03-25T16:56:41","Actor":"livarcocc","Number":"3029","RawContent":null,"Title":"Update branding to 2.2.300","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3029","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.300\" (#3029)"},{"Id":"423465302","IsPullRequest":true,"CreatedAt":"2019-03-25T16:56:28","Actor":"livarcocc","Number":"3028","RawContent":null,"Title":"Updating brandh to 2.1.700","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3028","RelatedDescription":"Closed or merged PR \"Updating brandh to 2.1.700\" (#3028)"},{"Id":"424714573","IsPullRequest":false,"CreatedAt":"2019-03-25T04:06:31","Actor":"xakep139","Number":"3037","RawContent":null,"Title":"NETSDK1056 error on building for Alpine 3.8/3.9","State":"open","Body":"### Steps to reproduce\r\n```\r\ndotnet new console\r\ndotnet restore --runtime=alpine.3.8-x64\r\ndotnet publish --runtime=alpine.3.8-x64\r\n```\r\n\r\nError:\r\n```\r\nC:\\Users\\n.balabaev\\Downloads\\test\\test.csproj : error : NETSDK1056: Project is targeting runtime 'alpine.3.8-x64' but did not resolve any runtime-specific packages. This runtime may not be supported by the target framework.\r\n```\r\n\r\nI get the same error with Alpine 3.9 RID and\\or `dotnet build`. However, I could build\\publish with Alpine 3.7 RID successfully.\r\n\r\nHere is an output of `dotnet --info`:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.105\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009497 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/3037","RelatedDescription":"Open issue \"NETSDK1056 error on building for Alpine 3.8/3.9\" (#3037)"},{"Id":"424626267","IsPullRequest":false,"CreatedAt":"2019-03-24T15:35:31","Actor":"ChrisMaddock","Number":"3036","RawContent":null,"Title":"GenerateSupportedRuntimes causes breaking change with targeting specific .NET framework versions","State":"open","Body":"(I think that...) The new GenerateSupportedRuntimes functionality (https://github.com/dotnet/sdk/pull/2447) caused a breaking change, when using the `complus_version` environment variable, to launch a process running on a specific version of the .NET Framework. This change broke the NUnit Console, which relies on this behaviour. The solution to this may be to \"not do that\" - but I thought I should report for awareness.\r\n\r\n-----\r\n\r\nThe NUnit Console by default runs all test assemblies in external processes (called \"agent processes\"), and uses the `complus_version` environment to run these agent processes on a specific version of the .NET Framework. (The target version of the test assembly in question.)\r\n\r\nFor `complus_version` to be respected, it's required that no `supportedRuntime` elements exist in the app.config. Otherwise, these elements appear to override `complus_version`. Because the agent executable currently targets .NET 2.0 (as the lowest runtime we support), the new GenerateSupportedRuntimes functionality added `<supportedRuntime version=\"v2.0.50727\" />`  to the app.config, forcing the agent processes to always run on .NET 2.0, and therefore fail to load any assemblies targetting .NET 4.0 or higher.\r\n\r\nBecause we potentially need to launch multiple agent processes under various different frameworks at runtime, having fixed values in the app.config is not an option. We've currently added `<GenerateSupportedRuntimes>false</GenerateSupportedRuntimes>` to our csproj's to suppress this behaviour. \r\n\r\nI'm aware `complus_version` isn't 'documented'...is there a better solution we should be using to support this situation instead?\r\n\r\nApologies if I've incorrectly pinpointed the cause here - I'm not too familiar with MSBuild.","Url":"https://github.com/dotnet/sdk/issues/3036","RelatedDescription":"Open issue \"GenerateSupportedRuntimes causes breaking change with targeting specific .NET framework versions\" (#3036)"},{"Id":"424443069","IsPullRequest":false,"CreatedAt":"2019-03-23T00:28:57","Actor":"fadimounir","Number":"3035","RawContent":null,"Title":"SDK double writes runtime files when publishing self contained apps","State":"open","Body":"Here's a repro:\r\n1) dotnet new console (make sure to target \"netcoreapp3.0\")\r\n2) Edit the csproj and add a PackageReference to NewtonSoft.Json version 9.0.1.\r\n3) dotnet publish -r win-x64\r\n\r\nThe Json library pulls netstandard1.x runtime packages, and when you run dotnet publish and reference netcoreapp3.0 runtime libraries, the list of files to publish will contain runtime assemblies from both 1.x and 3.0 runtimes, and will end up double writing some of them.\r\n\r\nExample:\r\n.nuget\\packages\\runtime.any.system.io\\4.1.0\\lib\\netstandard1.5\\System.IO.dll\r\n.nuget\\packages\\runtime.win-x64.microsoft.netcore.app\\3.0.0-preview4-27501-7\\runtimes\\win-x64\\lib\\netcoreapp3.0\\System.IO.dll\r\n\r\n\r\nThis also causes errors when crossgen is enabled (Eventually).\r\n\r\nThe expected behavior is that the SDK should probably ensure that there's a unique copy of each assembly, and take the highest version one.","Url":"https://github.com/dotnet/sdk/issues/3035","RelatedDescription":"Open issue \"SDK double writes runtime files when publishing self contained apps\" (#3035)"},{"Id":"424428233","IsPullRequest":true,"CreatedAt":"2019-03-22T22:57:56","Actor":"nguerrera","Number":"3034","RawContent":null,"Title":"Mark packages as non-shipping","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3034","RelatedDescription":"Open PR \"Mark packages as non-shipping\" (#3034)"},{"Id":"423890353","IsPullRequest":false,"CreatedAt":"2019-03-22T00:31:43","Actor":"jnm2","Number":"3031","RawContent":null,"Title":"Native assets are not copied to bin for net472 app if any referenced package uses netstandard2.0","State":"closed","Body":"Full description is here: https://github.com/dotnet/symreader-converter/issues/151\r\n\r\nI suspect this is an SDK bug in `C:\\Program Files\\dotnet\\sdk\\2.1.504\\Sdks\\Microsoft.NET.Sdk\\tools\\net46\\Microsoft.NET.Build.Tasks.dll`; see https://github.com/dotnet/symreader-converter/issues/151#issuecomment-475344092.\r\n\r\nMy workaround for now is to add this to the csproj, but it's obviously brittle:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <ReferenceCopyLocalPaths Include=\"C:\\Users\\jmusser\\.nuget\\packages\\microsoft.diasymreader.native\\1.7.0\\runtimes\\win-x64\\native\\Microsoft.DiaSymReader.Native.amd64.dll\" />\r\n  </ItemGroup>\r\n```","Url":"https://github.com/dotnet/sdk/issues/3031","RelatedDescription":"Closed issue \"Native assets are not copied to bin for net472 app if any referenced package uses netstandard2.0\" (#3031)"},{"Id":"423048476","IsPullRequest":false,"CreatedAt":"2019-03-20T03:24:01","Actor":"davidwengier","Number":"3027","RawContent":null,"Title":"Duplicate \"_PackageReferenceToAdd\" item name breaks builds in VS","State":"open","Body":"Looks like this was introduced here:\r\nhttps://github.com/dotnet/sdk/commit/63d7cdec5041a9a97b002b1e81d3d1f835cad871\r\n\r\n`_PackageReferenceToAdd` is used twice.\r\nIt's used in: https://github.com/dotnet/sdk/blob/afae0615d5cbb16c058c5ce1fd65215d07df24d9/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.TargetingPackResolution.targets#L124\r\n\r\nand:\r\n\r\nhttps://github.com/dotnet/sdk/blob/f217153b0a1624a012041a4de375faf76ddfdc07/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.DefaultItems.targets#L278\r\n\r\nThis is breaking the https://github.com/dotnet/project-system build in VS for me (we have duplicate nuget references)","Url":"https://github.com/dotnet/sdk/issues/3027","RelatedDescription":"Open issue \"Duplicate \"_PackageReferenceToAdd\" item name breaks builds in VS\" (#3027)"},{"Id":"422694774","IsPullRequest":true,"CreatedAt":"2019-03-19T12:03:51","Actor":"dotnet-maestro[bot]","Number":"3025","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19167.10\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19167.10\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190317.10\r\n- **Date Produced**: 3/18/2019 7:14 AM\r\n- **Commit**: de7be3ba62b92e5c48c36876c851a14f154444af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19167.10\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19167.10\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190320.2\r\n- **Date Produced**: 3/20/2019 5:43 PM\r\n- **Commit**: f70fa34786cff993625a4548ae0125335eabe82e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19170.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19170.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19171.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19171.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19171.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3025","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3025)"},{"Id":"422622666","IsPullRequest":false,"CreatedAt":"2019-03-19T09:25:27","Actor":"itn3000","Number":"3024","RawContent":null,"Title":"dotnet pack always failed on Ubuntu-18.04 with dotnet-sdk-3.0-preview3","State":"open","Body":"# Overview\r\n\r\n`dotnet pack` command always failed in Ubuntu-18.04 in dotnet-sdk-3.0-preview3.\r\nif dotnet-sdk-2.2 was used, it successed.\r\n\r\n# Environment\r\n\r\nplatform is ubuntu-18.04-x64(created from azure virtual machine)\r\n\r\nhere is my `dotnet --info`\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /home/itn/dotnet/sdk/3.0.100-preview3-010431/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview3-010431 [/home/itn/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [/home/itn/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [/home/itn/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n1. download dotnet-sdk-3.0-preview3 for linux-x64 from [SDK's download page](https://dotnet.microsoft.com/download/dotnet-core/3.0)\r\n2. extract archive to directory(`$HOME/dotnet`)\r\n3. add `$HOME/dotnet` to `$PATH` env\r\n4. run `dotnet new classlib --name test1`\r\n5. change directory to test1\r\n6. change `TargetFramework` to `netstandard2.1`\r\n6. run `dotnet pack`\r\n\r\n# Expected Behavior\r\n\r\ntest1.nupkg was created in `bin` directory.\r\n\r\n# Actual Behavior\r\n\r\nfailed to create nupkg with following error message.\r\n```\r\n/home/itn/dotnet/sdk/3.0.100-preview3-010431/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(199,5): error NU5019: File not found: '/home/itn/test1/bin/Debug/netstandard2.1/test1.dll'. [/home/itn/test1/test1.csproj]\r\n```\r\n`/home/itn/test1/bin/Debug/netstandard2.1/test1.dll` was created successfuly.\r\nI also tried to change `TargetFramework` to `netstandard2.0`, but did not success.\r\n","Url":"https://github.com/dotnet/sdk/issues/3024","RelatedDescription":"Open issue \"dotnet pack always failed on Ubuntu-18.04 with dotnet-sdk-3.0-preview3\" (#3024)"},{"Id":"421891895","IsPullRequest":false,"CreatedAt":"2019-03-17T07:33:13","Actor":"fernacolo","Number":"3023","RawContent":null,"Title":"PackAsTool true breaks debugging in Visual Studio when project is WPF","State":"open","Body":"I'm writing a tool application that uses WPF. It is intended to be called from console, but it shows graphics that cannot be represented by text, therefore I need WPF. It works fine in .NET Framework, but when migrating to .NET Core, when I add `<PackAsTool>true</PackAsTool>`, VS2019 cannot debug it anymore, saying:\r\n\r\n **The debug executable 'c:\\path\\to\\mytool.exe' specified in 'mytool' debug profile does not exist.**\r\n\r\nThis might be a VS2019 issue (as you are probably thinking right now 😉), however it seems that when `<PackAsTool>true</PackAsTool>` is added to the `.csproj`, it **changes the output type to dll**, even though the project says it's `WinExe`:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <UseWPF>true</UseWPF>\r\n    <PackageType>DotnetTool</PackageType>\r\n    <PackAsTool>true</PackAsTool>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThis is bad because I cannot use the simplicity of `<PackAsTool>true</PackAsTool>` for publishing and installation (i.e. have an automatic shim installed to path).\r\n\r\nEven if I ignore the VS limitation, I'm also not sure if a DLL would work as expected for a WPF project. My understanding is that WPF requires `WinExe` for certain features.\r\n\r\nHere's my `dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nAnd this is my VS version:\r\n\r\n![image](https://user-images.githubusercontent.com/8313235/54486907-1b0c0e00-484c-11e9-80a9-9503c7136747.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/3023","RelatedDescription":"Open issue \"PackAsTool true breaks debugging in Visual Studio when project is WPF\" (#3023)"},{"Id":"422743497","IsPullRequest":false,"CreatedAt":"2019-03-15T23:16:35","Actor":"jzabroski","Number":"3026","RawContent":null,"Title":"<EnableDefaultItems>true</EnableDefaultItems> not configurable","State":"open","Body":"Example usage:\r\n\r\n```\r\n<PropertyGroup>\r\n    <EnableDefaultItems>true</EnableDefaultItems>\r\n    <DefaultItems>\r\n      <DefaultItem Type=\"Compile\" Include=\"**/*.cs\" Exclude=\"**/*.user; **/*.*proj; **/*.sln; **/*.vssscc\" />\r\n      <DefaultItem Type=\"EmbeddedResource\" Include=\"**/*.resx; **/*.sql\" Exclude=\"**/*.user; **/*.*proj; **/*.sln; **/*.vssscc\" />\r\n      <DefaultItem Type=\"None\" Include=\"**/*\" Exclude=\"**/*.user; **/*.*proj; **/*.sln; **/*.vssscc\" />\r\n    </DefaultItems>\r\n</PropertyGroup>\r\n```\r\n\r\nhttps://aka.ms/sdkimplicititems lays out the current behavior of `EnableDefaultItems` - I find it strange that the only way to auto-include resources if they have a resx extension.\r\n\r\nI love the ability to do the following, but it does not allow me to recursively include an entire folder as a certain Build Action (like EmbeddedResource):\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <EnableDefaultItems>false</EnableDefaultItems>\r\n</PropertyGroup>\r\n```\r\n\r\nI don't know about most developers, but I hate project file merge conflicts, and we have to deal with a lot of them in our SQL projects using FluentMigrator.  Our directory structure looks like:\r\n\r\n```\r\nDatabase.csproj\r\n \\_ Schema\r\n    \\_ Functions\r\n    \\_ Security\r\n    \\_ Stored Procedures\r\n    \\_ Triggers\r\n    \\_ Types\r\n    \\_ Views\r\n```\r\n\r\nIdeally, I want the ability to say \"any item in this folder tree is an EmbeddedResource\".  I realize you can [use wildcards](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-items?view=vs-2015#BKMK_Wildcards) like `<EmbeddedResource Include=\"Schema/**/*.sql\" />` but the user story doesn't work well - adding new SQL files includes them as Content, etc.  Here is a link to a StackOverflow question where someone else opines on the same pain in a different context of RazorTemplate engine: https://stackoverflow.com/questions/27839645/automatically-add-files-as-embedded\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3026","RelatedDescription":"Open issue \"<EnableDefaultItems>true</EnableDefaultItems> not configurable\" (#3026)"},{"Id":"420462297","IsPullRequest":true,"CreatedAt":"2019-03-15T20:24:11","Actor":"dotnet-maestro[bot]","Number":"3020","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19162.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19162.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3020","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3020)"},{"Id":"418571115","IsPullRequest":true,"CreatedAt":"2019-03-15T01:00:20","Actor":"dotnet-bot","Number":"3013","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3013","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3013)"},{"Id":"421179324","IsPullRequest":true,"CreatedAt":"2019-03-14T23:24:43","Actor":"johnbeisner","Number":"3022","RawContent":null,"Title":"Picking up the latest changes from the BuildPerformanceTestAssets repo","State":"closed","Body":"Reference: https://github.com/dotnet/BuildPerformanceTestAssets/pull/5\r\n\r\n@jorive","Url":"https://github.com/dotnet/sdk/pull/3022","RelatedDescription":"Closed or merged PR \"Picking up the latest changes from the BuildPerformanceTestAssets repo\" (#3022)"},{"Id":"420786755","IsPullRequest":true,"CreatedAt":"2019-03-14T23:09:17","Actor":"peterhuene","Number":"3021","RawContent":null,"Title":"Remove duplicates items from resolved publish assets.","State":"closed","Body":"When `CopyLocalLockFileAssemblies` was true, `ReferenceCopyLocalPaths`\r\ncontained the set of `RuntimePackAsset` items.\r\n\r\nWhen resolving assets to copy local for publish, the `RuntimePackAsset` items\r\nwere added twice: once explicitly and again via `ReferenceCopyLocalPaths`.\r\n\r\nThis commit fixes this by only adding to the resolved copy local assets for\r\npublish when `CopyLocalLockFileAssemblies` is false.\r\n\r\nFixes #3007.","Url":"https://github.com/dotnet/sdk/pull/3021","RelatedDescription":"Closed or merged PR \"Remove duplicates items from resolved publish assets.\" (#3021)"},{"Id":"419948212","IsPullRequest":true,"CreatedAt":"2019-03-13T12:00:14","Actor":"dotnet-maestro[bot]","Number":"3018","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19161.14\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19161.14\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3018","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3018)"},{"Id":"420065077","IsPullRequest":true,"CreatedAt":"2019-03-12T23:01:18","Actor":"dsplaisted","Number":"3019","RawContent":null,"Title":"Don't set \"platform library\" for .NET Core 3.0 and higher","State":"closed","Body":"Don't try to exclude files from the platform library on .NET Core 3.0 and higher, which uses runtime and targeting packs instead\r\n\r\nFixes #3004\r\n\r\nTo help verify whether this is safe, I looked at the places where `MicrosoftNETPlatformLibrary` is used:\r\n\r\n- It's used by the `GenerateDepsFile`, `GenerateRuntimeConfigurationFiles`, and `ResolveCopyLocalAssets` tasks.  These all simply pass it to `LockFileExtensions.CreateProjectContext`.  In that method, it's used as part of the check to determine if the app is framework dependent:\r\n    ```C#\r\n    bool isFrameworkDependent = (platformLibrary != null || runtimeFrameworks?.Any() == true) &&\r\n        (!isSelfContained || string.IsNullOrEmpty(lockFileTarget.RuntimeIdentifier));\r\n    ```\r\n    Note that for .NET Core 3.0 and higher, the `ResolveFrameworkReferences` should add `RuntimeFramework` items, so the `isFrameworkDependent` calculation should still work.\r\n- In the created `ProjectContext`, the `GetRuntimeLibraries` method excludes assets from the platform library for framework dependent apps.\r\n- The `GenerateRuntimeConfigurationFiles` task also uses the platform library from the `ProjectContext` in order to write the runtimeconfig file, but only if there aren't any `RuntimeFrameworks`.\r\n- The `ResolvePackageAssets` task excludes assets from the platform library in `GetPlatformPackageExclusions`.  (It also excludes assets from libraries matching names of `RuntimeFrameworks`, which I believe we should now remove, as those assets will come from runtime packs and won't be in the assets file anyway now).\r\n- The `_RestoreCrossgen` and `PrepforRestoreForComposeStore` use the platform library name.  These are both part of support for `dotnet store`, which we are [considering dropping](https://github.com/dotnet/sdk/issues/2914), and which will need a lot of work in any case if we want it to work when targeting .NET Core 3","Url":"https://github.com/dotnet/sdk/pull/3019","RelatedDescription":"Closed or merged PR \"Don't set \"platform library\" for .NET Core 3.0 and higher\" (#3019)"},{"Id":"419043286","IsPullRequest":false,"CreatedAt":"2019-03-11T15:36:04","Actor":"saxenark","Number":"3014","RawContent":null,"Title":"Installing JRE in microsoft/dotnet:sdk container","State":"closed","Body":"Hi,\r\n\r\nI need JRE to run dependencies for my .NET core sdk 2.2 unit tests in Visual Studio 2017. I would like to know how to install JRE into my windows docker container. Through the docker environment, I tried to run java.exe but it does not run.\r\n\r\nSo, my question is how do I install JRE on my container?\r\n\r\n```\r\nFROM microsoft/dotnet:sdk\r\n\r\nWORKDIR C:/Temp\r\nCOPY jre-8u202-windows-x64.exe ./Java.exe\r\n\r\nWORKDIR C:/P4Source\r\n\r\nI am using Windows Server 2016 1607 with Docker basic EE\r\n\r\nThanks,\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3014","RelatedDescription":"Closed issue \"Installing JRE in microsoft/dotnet:sdk container\" (#3014)"},{"Id":"419249712","IsPullRequest":true,"CreatedAt":"2019-03-11T13:32:19","Actor":"dotnet-maestro[bot]","Number":"3017","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19160.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19160.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19160.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19160.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3017","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3017)"},{"Id":"419177642","IsPullRequest":true,"CreatedAt":"2019-03-10T13:16:08","Actor":"dotnet-maestro[bot]","Number":"3016","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19159.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19159.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3016","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3016)"},{"Id":"419069291","IsPullRequest":true,"CreatedAt":"2019-03-09T14:16:04","Actor":"dotnet-maestro[bot]","Number":"3015","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19158.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19158.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3015","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3015)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1110268016921464832","CreatedAt":"2019-03-25T19:51:37+00:00","UserScreenname":"dotnet","Text":"This week's @aspnet Community Standup will feature Brady Gaster (@bradygaster) on #SignalR!\n\nJoin us on Tuesday Mar… https://t.co/ef8BQS2nV5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"1107676822957744128","CreatedAt":"2019-03-18T16:15:08+00:00","UserScreenname":"dotnet","Text":"Got a suggested topic or guest for a .NET Community Standup? \n\nLet us know!\n\nhttps://t.co/STWml56tti","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":26,"RawContent":null},{"Id":"1106559820415406080","CreatedAt":"2019-03-15T14:16:34+00:00","UserScreenname":"dotnet","Text":".NET Core Container Images now Published to Microsoft Container Registry https://t.co/025dCayCnx","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":88,"FavoriteCount":53,"RawContent":null},{"Id":"1106511609768357889","CreatedAt":"2019-03-15T11:05:00+00:00","UserScreenname":"dotnet","Text":"Did you know you could build video games with .NET? \n\nCheck out this episode of #OnDotNet where \n@BrianPeek &amp;… https://t.co/g6DSHnfV18","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":55,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2019-03-26T05:30:28.7605703Z","RunDurationInMilliseconds":9707}