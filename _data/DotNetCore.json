{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1","PublishedOn":"2020-01-14T20:21:23+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2020 Update. These updates also contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are...","Href":"https://devblogs.microsoft.com/dotnet/net-core-january-2020/","RawContent":null},{"Title":".NET Framework January Security and Quality Rollup","PublishedOn":"2020-01-14T19:13:47+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the January 2020 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nCVE-2020-0605, CVE-2020-0606, CVE-2020-0646 – .NET Framework Remote Code Execution\nA remote...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/","RawContent":null},{"Title":"Collecting and analyzing memory dumps","PublishedOn":"2020-01-13T21:14:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Building upon the diagnostics improvements introduced in .NET Core 3.1, we&#8217;ve introduced a new tool for collecting heap dumps from a running .NET Core process.\nIn a previous blog post we...","Href":"https://devblogs.microsoft.com/dotnet/collecting-and-analyzing-memory-dumps/","RawContent":null},{"Title":"An Introduction to DataFrame","PublishedOn":"2019-12-16T16:00:04+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Last month, we announced .NET support for Jupyter notebooks, and showed how to use them to work with .NET for Apache Spark and ML.NET. Today, we&#8217;re announcing the preview of a DataFrame type for...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-dataframe/","RawContent":null},{"Title":"ConfigureAwait FAQ","PublishedOn":"2019-12-12T04:31:21+00:00","CommentsCount":46,"FacebookCount":0,"Summary":".NET added async/await to the languages and libraries over seven years ago. In that time, it&#8217;s caught on like wildfire, not only across the .NET ecosystem, but also being replicated in a myriad...","Href":"https://devblogs.microsoft.com/dotnet/configureawait-faq/","RawContent":null},{"Title":"An Introduction to System.Threading.Channels","PublishedOn":"2019-12-12T03:52:18+00:00","CommentsCount":34,"FacebookCount":0,"Summary":"&#8220;Producer/consumer&#8221; problems are everywhere, in all facets of our lives. A line cook at a fast food restaurant, slicing tomatoes that are handed off to another cook to assemble a burger,...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-system-threading-channels/","RawContent":null},{"Title":".NET Framework December 2019 Security and Quality Rollup","PublishedOn":"2019-12-10T21:39:52+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the December 2019 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the latest security...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/","RawContent":null},{"Title":"We made Windows Server Core container images >40% smaller","PublishedOn":"2019-12-09T21:50:23+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Over the past year, we&#8217;ve been working with the Windows Server team to make Windows Server Core container images a lot smaller. They are now 40% smaller! The Windows Server team has already...","Href":"https://devblogs.microsoft.com/dotnet/we-made-windows-server-core-container-images-40-smaller/","RawContent":null},{"Title":"GC Perf Infrastructure – Part 1","PublishedOn":"2019-12-09T09:33:32+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We open sourced our new GC Perf Infrastructure! It’s now part of the dotnet performance repo. I’ve been meaning to write about it ‘cause some curious minds had been asking when they could use it after...","Href":"https://devblogs.microsoft.com/dotnet/gc-perf-infrastructure-part-1/","RawContent":null},{"Title":".NET Core 2.2 will reach End of Life on December 23, 2019","PublishedOn":"2019-12-05T19:55:57+00:00","CommentsCount":6,"FacebookCount":0,"Summary":".NET Core 2.2 was released on December 4, 2018. As a non-LTS (&#8220;Current&#8221;) release, it is supported for three months after the next release. .NET Core 3.0 was released on September 23, 2019....","Href":"https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"11334200867","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:30","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Merged pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"11334196288","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:01","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Merged pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"11334180047","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:07:14","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Merged pull request \"Update Teams Link\" (#156) at dotnet/foundation","RelatedBody":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`"},{"Id":"11334176612","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:52","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Merged pull request \"Link Reactive Extensions to new github repo\" (#157) at dotnet/foundation","RelatedBody":""},{"Id":"11334171592","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:20","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Merged pull request \"Add Akka.NET to DNF\" (#158) at dotnet/foundation","RelatedBody":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n"},{"Id":"11311426059","Type":"IssuesEvent","CreatedAt":"2020-01-20T02:00:07","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Opened issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11311406330","Type":"PullRequestEvent","CreatedAt":"2020-01-20T01:54:16","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Opened pull request \"Add Akka.NET to DNF\" (#158) at dotnet/foundation","RelatedBody":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n"},{"Id":"11190129717","Type":"PullRequestEvent","CreatedAt":"2020-01-02T11:42:33","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Opened pull request \"Link to new github repo\" (#157) at dotnet/foundation","RelatedBody":""},{"Id":"11108512890","Type":"PullRequestEvent","CreatedAt":"2019-12-17T15:52:33","Actor":"khalidabuhakmeh","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Opened pull request \"Update Teams Link\" (#156) at dotnet/foundation","RelatedBody":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11275368710","Type":"IssuesEvent","CreatedAt":"2020-01-14T20:37:01","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Opened issue \"January 2020 .NET Updates\" (#150) at dotnet/announcements","RelatedBody":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1-download.md) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2-download.md) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15-download.md) )\r\n\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11274184940","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:14","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149) at dotnet/announcements","RelatedBody":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"},{"Id":"11274183716","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:05","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"},{"Id":"11214612804","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:02:39","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Opened issue \".NET Core 2.2 has reached end of life\" (#147) at dotnet/announcements","RelatedBody":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n"},{"Id":"11137901850","Type":"IssuesEvent","CreatedAt":"2019-12-20T20:42:34","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Opened issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146) at dotnet/announcements","RelatedBody":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n"},{"Id":"11059014848","Type":"IssuesEvent","CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Opened issue \"December 2019 .NET Updates\" (#145) at dotnet/announcements","RelatedBody":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"11050403011","Type":"IssuesEvent","CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Opened issue \"Removal of read-collaborator access\" (#144) at dotnet/announcements","RelatedBody":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the contributor badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n\r\n-   **You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"11339020552","Type":"IssuesEvent","CreatedAt":"2020-01-23T00:22:11","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27800","RelatedDescription":"Closed issue \"Enable P/Invoke for unmanaged pointers to non-blittable types\" (#27800) at dotnet/coreclr","RelatedBody":"As per https://github.com/dotnet/coreclr/pull/23899#issuecomment-551374665, we could enable unmanaged pointers to non-blittable types (such as `bool`) by removing the existing restriction found in srv/vm/mlinfo.cpp\r\n\r\n"},{"Id":"11327762449","Type":"IssuesEvent","CreatedAt":"2020-01-21T20:32:59","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/3732","RelatedDescription":"Closed issue \"ARM64: implement profiler apis \" (#3732) at dotnet/coreclr","RelatedBody":""},{"Id":"11305605210","Type":"IssuesEvent","CreatedAt":"2020-01-18T07:11:56","Actor":"safern","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26241","RelatedDescription":"Closed issue \"Test failed: tracing\\eventpipe\\providervalidation\\providervalidation\\providervalidation.cmd\" (#26241) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/40a0c6d5-430e-4787-9f60-9317e3055a63/workitems/PayloadGroup0/console\r\n\r\n**Failed tests:**\r\ntracing\\eventpipe\\providervalidation\\providervalidation\\providervalidation.cmd\r\n\r\n**Log:**\r\n```\r\n tracing\\eventpipe\\providervalidation\\providervalidation\\providervalidation.cmd [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\40a0c6d5-430e-4787-9f60-9317e3055a63\\Work\\2cf345e3-c30f-4727-90b8-5c1641ee9d44\\Exec\\tracing\\eventpipe\\Reports\\tracing.eventpipe\\providervalidation\\providervalidation\\providervalidation.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\40a0c6d5-430e-4787-9f60-9317e3055a63\\Payload\\corerun.exe\" providervalidation.dll \r\n      TEST STARTING\r\n      TEST PASSED!\r\n      TEST STARTING\r\n      Test FAILED!\r\n      No events for provider \"Microsoft-DotNETCore-SampleProfiler\"\r\n      Configuration:\r\n      {\r\n      bufferSize: 1024,\r\n      providers: [\r\n      MyEventSource:0xFFFFFFFFFFFFFFFF:5,\r\n      Microsoft-DotNETCore-SampleProfiler:0xFFFFFFFFFFFFFFFF:5,\r\n      SentinelEventSource:0xFFFFFFFFFFFFFFFF:5,\r\n      ]\r\n      }\r\n      \r\n      Expected:\r\n      {\r\n      \"MyEventSource\" = 1000 +- 300\r\n      \"Microsoft-Windows-DotNETRuntimeRundown\" = -1 +- -0\r\n      \"Microsoft-DotNETCore-SampleProfiler\" = -1 +- -0\r\n      }\r\n      \r\n      Actual:\r\n      {\r\n      \"MyEventSource\" = 1000\r\n      \"Microsoft-DotNETCore-EventPipe\" = 1\r\n      \"Microsoft-Windows-DotNETRuntimeRundown\" = 1931\r\n      }\r\n      Expected: 100\r\n      Actual: -1\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n      To run the test:\r\n      > set CORE_ROOT=C:\\dotnetbuild\\work\\40a0c6d5-430e-4787-9f60-9317e3055a63\\Payload\r\n      > C:\\dotnetbuild\\work\\40a0c6d5-430e-4787-9f60-9317e3055a63\\Work\\2cf345e3-c30f-4727-90b8-5c1641ee9d44\\Exec\\tracing\\eventpipe\\providervalidation\\providervalidation\\providervalidation.cmd\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        F:\\workspace\\_work\\1\\s\\bin\\tests\\Windows_NT.x64.Checked\\TestWrappers\\tracing.eventpipe\\tracing.eventpipe.XUnitWrapper.cs(431,0): at tracing_eventpipe._providervalidation_providervalidation_providervalidation_._providervalidation_providervalidation_providervalidation_cmd()\r\n      Output:\r\n        \r\n        Return code:      1\r\n        Raw output file:      C:\\dotnetbuild\\work\\40a0c6d5-430e-4787-9f60-9317e3055a63\\Work\\2cf345e3-c30f-4727-90b8-5c1641ee9d44\\Exec\\tracing\\eventpipe\\Reports\\tracing.eventpipe\\providervalidation\\providervalidation\\providervalidation.output.txt\r\n        Raw output:\r\n        BEGIN EXECUTION\r\n         \"C:\\dotnetbuild\\work\\40a0c6d5-430e-4787-9f60-9317e3055a63\\Payload\\corerun.exe\" providervalidation.dll \r\n        TEST STARTING\r\n        TEST PASSED!\r\n        TEST STARTING\r\n        Test FAILED!\r\n        No events for provider \"Microsoft-DotNETCore-SampleProfiler\"\r\n        Configuration:\r\n        {\r\n        bufferSize: 1024,\r\n        providers: [\r\n        MyEventSource:0xFFFFFFFFFFFFFFFF:5,\r\n        Microsoft-DotNETCore-SampleProfiler:0xFFFFFFFFFFFFFFFF:5,\r\n        SentinelEventSource:0xFFFFFFFFFFFFFFFF:5,\r\n        ]\r\n        }\r\n        \r\n        Expected:\r\n        {\r\n        \"MyEventSource\" = 1000 +- 300\r\n        \"Microsoft-Windows-DotNETRuntimeRundown\" = -1 +- -0\r\n        \"Microsoft-DotNETCore-SampleProfiler\" = -1 +- -0\r\n        }\r\n        \r\n        Actual:\r\n        {\r\n        \"MyEventSource\" = 1000\r\n        \"Microsoft-DotNETCore-EventPipe\" = 1\r\n        \"Microsoft-Windows-DotNETRuntimeRundown\" = 1931\r\n        }\r\n        Expected: 100\r\n        Actual: -1\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n```"},{"Id":"11304609867","Type":"IssuesEvent","CreatedAt":"2020-01-17T23:40:00","Actor":"erozenfeld","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/23903","RelatedDescription":"Closed issue \"JIT: optFoldNullCheck missed cases\" (#23903) at dotnet/coreclr","RelatedBody":"`optFoldNullCheck`'s pattern match misses some cases.\r\n\r\nSee https://github.com/dotnet/coreclr/pull/23850#issuecomment-482231386 for one such example (though perhaps that could also be addressed by better handling of commas in add trees).\r\n\r\nWill add others as I run across them.\r\n\r\ncategory:cq\r\ntheme:basic-cq\r\nskill-level:intermediate\r\ncost:small"},{"Id":"11302791430","Type":"PullRequestEvent","CreatedAt":"2020-01-17T18:31:44","Actor":"VSadov","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27975","RelatedDescription":"Closed pull request \"Setting MinLimitTotalWorkerThreads according to CPU quota.\" (#27975) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"11339691963","Type":"PullRequestEvent","CreatedAt":"2020-01-23T03:05:55","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13205","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from dotnet/templating\" (#13205) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2edc82a1-19d9-431c-901b-08d76d41c6c3\r\n- **Build**: 20200114.1\r\n- **Date Produced**: 1/14/2020 7:24 PM\r\n- **Commit**: 247f60e9e34a03ed99e855eb1ea0c20931a968db\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.2-servicing.20064.1\r\n\r\n[marker]: <> (End:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n\r\n"},{"Id":"11339691158","Type":"PullRequestEvent","CreatedAt":"2020-01-23T03:05:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13204","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#13204) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820\r\n- **Build**: 20200118.1\r\n- **Date Produced**: 1/18/2020 7:44 PM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20068.1\r\n\r\n[marker]: <> (End:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n\r\n"},{"Id":"11339278532","Type":"PullRequestEvent","CreatedAt":"2020-01-23T01:20:37","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13203","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13203) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200122.3\r\n- **Date Produced**: 1/22/2020 11:30 PM\r\n- **Commit**: 3ff3791a1b3f8af0c3fadf3988012c69ac16c28f\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20072.3\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11339102678","Type":"PullRequestEvent","CreatedAt":"2020-01-23T00:40:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13203","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13203) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200122.3\r\n- **Date Produced**: 1/22/2020 11:30 PM\r\n- **Commit**: 3ff3791a1b3f8af0c3fadf3988012c69ac16c28f\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20072.3\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11326161480","Type":"PullRequestEvent","CreatedAt":"2020-01-21T17:07:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13195","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore\" (#13195) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: d54a5172-b4ce-4f86-d36b-08d6f038a15f\r\n- **Build**: 20200116.10\r\n- **Date Produced**: 1/17/2020 12:25 AM\r\n- **Commit**: bd11e9503c35094d56814f6399c58c77f4220f71\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.3-servicing.20066.10\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"},{"Id":"11318262699","Type":"PullRequestEvent","CreatedAt":"2020-01-20T19:45:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13202","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#13202) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: fa87930c-8514-45a1-0d47-08d6910cd73b\r\n- **Build**: 20200120.2\r\n- **Date Produced**: 1/20/2020 6:09 PM\r\n- **Commit**: 316fbdd10e8829faaf9157ecbb05795e75b618f7\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.103-servicing.20070.2\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"11338397670","Type":"IssuesEvent","CreatedAt":"2020-01-22T22:29:15","Actor":"GrabYourPitchforks","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1677","RelatedDescription":"Closed issue \"Bug with \"is\" operator on int[] and uint[] via object type reference.\" (#1677) at dotnet/standard","RelatedBody":"Hello developers,\r\n\r\nI've discovered what I believe to be a bug. In the code below you can see I create two arrays, one of `int` and one of `uint` and assign them both to object. I then check the `is` operator for type comparison.\r\n```cs\r\n            object ai = new int[0];\r\n            object au = new uint[0];\r\n\r\n            Console.WriteLine(ai is uint[]);\r\n            Console.WriteLine(ai is int[]);\r\n            Console.WriteLine(au is uint[]);\r\n            Console.WriteLine(au is int[]);\r\n```\r\nThe output I get is four prints of true, which I would expect only two.\r\n\r\nThe strange thing is if I assign `ai` and `au` to their actual types instead of `object`, then the code works as expected.\r\n\r\nSorry if this should be in the runtime repo or somewhere else."},{"Id":"11333730697","Type":"PullRequestEvent","CreatedAt":"2020-01-22T13:16:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1682","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1682) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200121.3\r\n- **Date Produced**: 1/21/2020 8:28 PM\r\n- **Commit**: e06e2807048b6bc7b3549b401a1833bed3bcd8c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20071.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11333606135","Type":"PullRequestEvent","CreatedAt":"2020-01-22T13:00:57","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1682","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1682) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200121.3\r\n- **Date Produced**: 1/21/2020 8:28 PM\r\n- **Commit**: e06e2807048b6bc7b3549b401a1833bed3bcd8c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20071.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11328805834","Type":"PullRequestEvent","CreatedAt":"2020-01-21T22:53:32","Actor":"joperezr","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1650","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1650) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200118.1\r\n- **Date Produced**: 1/18/2020 1:38 PM\r\n- **Commit**: ebc71292545adda514c1e6a5657cd9ab753240bc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20068.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20068.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20068.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20068.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20068.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20068.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"11340078100","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:57:15","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/8655","RelatedDescription":"Reopened issue \".NET should no longer preemptively check for paths being too long\" (#8655) at dotnet/corefx","RelatedBody":"EDIT: See latest list of work items: https://github.com/dotnet/corefx/issues/8655#issuecomment-314969840\r\n\r\nWe've never been able to get this correct. Historically we've blocked using legitimate paths by trying to guess up front. Across all of the platforms we don't have a rock solid way to know that a path will go over a particular API's limit.\r\n\r\nOn Windows the historical \"limit\" has been MAX_PATH, but not all of the APIs enforce it. In addition, there is an ability to circumvent it for _some_ APIs with extended DOS device syntax (`\\\\?\\`). Even if we did have a list of every API we called and what it supported:\r\n1. That API's support could (and likely will) change\r\n2. The real limits are based on complicated internal details that are difficult, if not impossible, to replicate (see [DOS to NT: A Path's Journey](https://blogs.msdn.microsoft.com/jeremykuhne/2016/05/02/dos-to-nt-a-paths-journey/))\r\n3. Lower level file systems (CDFS, UDF, NTFS, FAT16, ReFS, etc., etc.) impose their own limits which are nearly impossible to check with reparse points\r\n4. Related to above we already get it wrong with path segments- not all file systems have a max of 255 characters\r\n\r\nIt is particularly problematic with normalization methods that we provide (Path.GetFullPath). Checking there can block legitimate uses with other API's that don't have the limits we are claiming are system wide.\r\n\r\nPathTooLong should only throw from the actual platform invokes, which we already do.\r\n"},{"Id":"11340060171","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:52:10","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42507","RelatedDescription":"Reopened issue \"File_Move_Multiple_From_Watched_To_Unwatched_Mac failing occasionally in CI\" (#42507) at dotnet/corefx","RelatedBody":"https://helix.dot.net/api/2019-06-17/jobs/1b698513-91ff-47b1-84a1-c095c8eeb9b4/workitems/System.IO.FileSystem.Watcher.Tests/files/console.d0c0e6dd.log\r\n\r\n  ```\r\nSystem.IO.Tests.File_Move_Tests.File_Move_Multiple_From_Watched_To_Unwatched_Mac(filesCount: 1) [FAIL]\r\n      Expected events (3) count doesn't match triggered events count (1):\r\n      Deleted /var/folders/j1/76_p663903g5g2rg7ckqbv440000gy/T/File_Move_Tests_hepan0n0.4wy/FileMove_Multiple_FromWatchedToUnwatched_192_9877436f/dir_watched/file0 \r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.IO.FileSystem.Watcher/tests/Utility/FileSystemWatcherTest.cs(558,0): at System.IO.Tests.FileSystemWatcherTest.ExpectEvents(FileSystemWatcher watcher, Int32 expectedEvents, Action action)\r\n        /_/src/System.IO.FileSystem.Watcher/tests/FileSystemWatcher.File.Move.cs(216,0): at System.IO.Tests.File_Move_Tests.FileMove_Multiple_FromWatchedToUnwatched(Int32 filesCount, Boolean skipOldEvents)\r\n        /_/src/System.IO.FileSystem.Watcher/tests/FileSystemWatcher.File.Move.cs(43,0): at System.IO.Tests.File_Move_Tests.File_Move_Multiple_From_Watched_To_Unwatched_Mac(Int32 filesCount)\r\n```\r\n\r\ncloning from discussion in #42344\r\n\r\nThis test assumes that we will always get incorrect Create event in OSX but that seems to happen only sometimes. We should update test to either wait for Crete events first, ignore them and be able to deal with both cases. \r\n\r\nFurther more, I did test run on unsupported FreeBSD and I got expected events in different order. \r\n```\r\n /usr/home/furt/git/wfurt-corefx/artifacts/bin/System.IO.FileSystem.Watcher.Tests/netcoreapp-FreeBSD-Debug ~/git/wfurt-corefx/src/System.IO.FileSystem.Watcher/tests\r\n    Discovering: System.IO.FileSystem.Watcher.Tests (method display = ClassAndMethod, method display options = None)\r\n    Discovered:  System.IO.FileSystem.Watcher.Tests (found 147 of 183 test cases)\r\n    Starting:    System.IO.FileSystem.Watcher.Tests (parallel test collections = on, max threads = 2)\r\n      System.IO.Tests.File_Move_Tests.File_Move_Multiple_From_Unwatched_To_WatchedMac(filesCount: 3) [FAIL]\r\n        Assert.Equal() Failure\r\n        Expected: SelectArrayIterator<<>f__AnonymousType1<String, String>, FiredEvent> [Created /tmp/File_Move_Tests_jviqx2cg.0d2/FileMove_Multiple_FromUnwatchedToWatched_233_249fe60e/dir_watched/file0 , Created /tmp/File_Move_Tests_jviqx2cg.0d2/FileMove_Multiple_FromUnwatchedToWatched_233_249fe60e/dir_watched/file1 , Created /tmp/File_Move_Tests_jviqx2cg.0d2/FileMove_Multiple_FromUnwatchedToWatched_233_249fe60e/dir_watched/file2 ]\r\n        Actual:   List<FiredEvent> [Created /tmp/File_Move_Tests_jviqx2cg.0d2/FileMove_Multiple_FromUnwatchedToWatched_233_249fe60e/dir_watched/file0 , Created /tmp/File_Move_Tests_jviqx2cg.0d2/FileMove_Multiple_FromUnwatchedToWatched_233_249fe60e/dir_watched/file2 , Created /tmp/File_Move_Tests_jviqx2cg.0d2/FileMove_Multiple_FromUnwatchedToWatched_233_249fe60e/dir_watched/file1 ]\r\n        Stack Trace:\r\n          /usr/home/furt/git/wfurt-corefx/src/System.IO.FileSystem.Watcher/tests/FileSystemWatcher.File.Move.cs(253,0): at System.IO.Tests.File_Move_Tests.FileMove_Multiple_FromUnwatchedToWatched(Int32 filesCount)\r\n          /usr/home/furt/git/wfurt-corefx/src/System.IO.FileSystem.Watcher/tests/FileSystemWatcher.File.Move.cs(62,0): at System.IO.Tests.File_Move_Tests.File_Move_Multiple_From_Unwatched_To_WatchedMac(Int32 filesCount)\r\n    Finished:    System.IO.FileSystem.Watcher.Tests\r\n  === TEST EXECUTION SUMMARY ===\r\n     System.IO.FileSystem.Watcher.Tests  Total: 267, Errors: 0, Failed: 1, Skipped: 0, Time: 3.360s\r\n\r\n```\r\n\r\nThis may be be product bug or limitation but it is another example where test seems too strict. \r\n\r\ncc: @aik-jahoda "},{"Id":"11340054708","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:50:34","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/40711","RelatedDescription":"Reopened issue \"System.Net.Mail.Tests.SmtpClientTest.TestZeroTimeout hangs in CI\" (#40711) at dotnet/corefx","RelatedBody":"https://dnceng.visualstudio.com/public/_build/results?buildId=332322&view=ms.vss-test-web.build-test-results-tab&runId=9745396&resultId=175895&paneView=attachments\r\n\r\nConfiguration: netcoreapp-Linux-Release-x64-(Alpine.38.Amd64.Open)ubuntu.1604.amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.8-helix-09ca40b-20190620184125\r\n\r\n```\r\n  Discovering: System.Net.Mail.Functional.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Net.Mail.Functional.Tests (found 137 test cases)\r\n  Starting:    System.Net.Mail.Functional.Tests (parallel test collections = on, max threads = 2)\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestZeroTimeout', Elapsed: 00:02:10\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestZeroTimeout', Elapsed: 00:04:10\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestZeroTimeout', Elapsed: 00:06:10\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestZeroTimeout', Elapsed: 00:08:10\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestZeroTimeout', Elapsed: 00:10:10\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestZeroTimeout', Elapsed: 00:12:10\r\n   System.Net.Mail.Functional.Tests: [Long Running Test] 'System.Net.Mail.Tests.SmtpClientTest.TestZeroTimeout', Elapsed: 00:14:10\r\n```\r\n\r\n@davidsh, @wfurt, @scalablecory, @eiriktsarpalis, @karelz"},{"Id":"11340045920","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:48:07","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39075","RelatedDescription":"Reopened issue \"System.IO.Packaging VeryLargePart outerloop test failing in CI\" (#39075) at dotnet/corefx","RelatedBody":"It's failing e.g. on all OSes here:\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38804~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190701.1/workItem/System.IO.Packaging.Tests/analysis/xunit/System.IO.Packaging.Tests.Tests~2FVeryLargePart\r\n```\r\nUnhandled Exception of Type System.IO.InvalidDataException\r\nMessage :\r\nSystem.IO.InvalidDataException : A local file header is corrupt.\r\nStack Trace :\r\n   at System.IO.Compression.ZipArchiveEntry.ThrowIfNotOpenable(Boolean needToUncompress, Boolean needToLoadIntoMemory) in /_/src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs:line 597\r\n   at System.IO.Compression.ZipArchiveEntry.OpenInReadMode(Boolean checkOpenable) in /_/src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs:line 670\r\n   at System.IO.Compression.ZipArchiveEntry.Open() in /_/src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs:line 297\r\n   at System.IO.Packaging.ZipStreamManager.Open(ZipArchiveEntry zipArchiveEntry, FileMode streamFileMode, FileAccess streamFileAccess) in /_/src/System.IO.Packaging/src/System/IO/Packaging/ZipStreamManager.cs:line 86\r\n   at System.IO.Packaging.ZipPackagePart.GetStreamCore(FileMode streamFileMode, FileAccess streamFileAccess) in /_/src/System.IO.Packaging/src/System/IO/Packaging/ZipPackagePart.cs:line 38\r\n   at System.IO.Packaging.PackagePart.GetStream(FileMode mode, FileAccess access) in /_/src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs:line 323\r\n   at System.IO.Packaging.PackagePart.GetStream() in /_/src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs:line 270\r\n   at System.IO.Packaging.Tests.Tests.VeryLargePart() in /_/src/System.IO.Packaging/tests/Tests.cs:line 3739\r\n```\r\ncc: @ericstj"},{"Id":"11340034260","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:44:50","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/36643","RelatedDescription":"Reopened issue \"Json serializer support for collections\" (#36643) at dotnet/corefx","RelatedBody":"This issue is to add built-in support for specific collections including:\r\n\r\n`System.Collections.Generic`\r\n- [x] `IEnumerable<T>`\r\n- [x] `ICollection<T>`\r\n- [x] `IList<T>`\r\n- [x] `IReadOnlyCollection<T>`\r\n- [x] `IReadOnlyList<T>`\r\n- [x] `ISet<T>`\r\n- [x] `Stack<T>`\r\n- [x] `Queue<T>`\r\n- [x] `HashSet<T>`\r\n- [x] `LinkedList<T>`\r\n- [x] `SortedSet<T>`\r\n- [x] `SortedDictionary<TKey, TValue>`\r\n- [x] `KeyValuePair<TKey, TValue>`\r\n\r\nFuture `KeyedByCollection<TItem>`, `LinkedListNode<T>`, `SynchronizedCollection<T>`, `SynchronizedKeyCollection<K, T>`, `SynchronizedReadOnlyCollection<T>` \r\n\r\n`Sytem.Collections`\r\n- [x] `IEnumerable`\r\n- [x] `ICollection`\r\n- [x] `IList`\r\n- [x] `IDictionary`\r\n- [x] `Stack`\r\n- [x] `Queue`\r\n- [x] `Hashtable`\r\n- [x] `ArrayList`\r\n- [x] `SortedList`\r\n\r\nFuture: `BitArray`\r\n\r\n`System.Collections.Immutable`\r\n- [x] `IImmutableList<T>`\r\n- [x] `IImmutableQueue<T>`\r\n- [x] `IImmutableSet<T>`\r\n- [x] `IImmutableStack<T>`\r\n- [x] `IImmutableDictionary<TKey, TValue>`\r\n- [x] `ImmutableArray<T>`\r\n- [x] `ImmutableHashSet<T>`\r\n- [x] `ImmutableList<T>`\r\n- [x] `ImmutableQueue<T>`\r\n- [x] `ImmutableSortedSet<T>`\r\n- [x] `ImmutableStack<T>`\r\n- [x] `ImmutableDictionary<TKey, TValue>`\r\n- [x] `ImmutableSortedDictionary<TKey, TValue>`\r\n\r\nIt should leverage the [extensibility support for IEnumerable](https://github.com/dotnet/corefx/issues/36640) and register these interfaces.\r\n\r\nDesign notes:\r\n1) No new public APIs are needed.\r\n\r\n~~2) The instance returned should only implement the specific interface. It should **not** be possible to cast to our implementation. This ensures we can change the type later if necessary and prevents other general misuses.\r\nFor example, the likely implementation for `IEnumerable<T>` is an internal class that implements `IEnumerable<T>` where the only public members are those used to implement `IEnumerable<T>`. The internal class then forwards each `IEnumerable<T>` member call to an instance of `List<T>` which is stored in a private field and thus not accessible publically and not castable to `List<T>` or other interfaces like `IList<T>`.~~\r\n\r\n3) We may want to also provide default implementations of some non-interfaces as well pending feedback (for example `System.Collections.Immutable.ImmutableArray`)\r\n\r\n**UPDATE**\r\nAlso support `System.Collections.Immutable` and `System.Collections.Generic` (actual list TBD). These are not interfaces, but the same mechanism can be used to support them."},{"Id":"11340028863","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:43:17","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/35466","RelatedDescription":"Reopened issue \"HTTP2: Clean up shutdown behavior\" (#35466) at dotnet/corefx","RelatedBody":"We don't currently have a good handle on the lifetime semantics of various objects on Http2Connection. We should clean this up\r\n\r\nSee discussion on #35422 "},{"Id":"11340026353","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:42:31","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33530","RelatedDescription":"Reopened issue \"NetworkInformation.NetworkAddressChange not implemented on FreeBSD\" (#33530) at dotnet/corefx","RelatedBody":"This is related to #24386\r\nNetworkAddressChange is not implemented and related tests are disabled. \r\nAttempt to use with throw PNSP exception."},{"Id":"11340019117","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:40:21","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/31104","RelatedDescription":"Reopened issue \"PostAsync_ReuseRequestContent_Success fails on OSX 10.13\" (#31104) at dotnet/corefx","RelatedBody":"Found during PR #31100.\r\n\r\nHttpClientHandlerTest.PostAsync_ReuseRequestContent_Success is failing on OSX 10.13 in CurlHandler:\r\n\r\nhttps://mc.dot.net/#/user/davidsh/pr~2Fjenkins~2Fdotnet~2Fcorefx~2Fmaster~2F/test~2Ffunctional~2Fcli~2F/b14a215bc5e5263683e2ec248d2178785f98524a/workItem/System.Net.Http.Functional.Tests/analysis/xunit/System.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest~2FPostAsync_ReuseRequestContent_Success(remoteServer:%20https:~2F~2Fcorefx-net-http2.azurewebsites.net~2FEcho.ashx)\r\n\r\n```\r\nAssert.Contains() Failure\r\nNot found: This is the content string.\r\nIn value:  \r\n```\r\n"},{"Id":"11340015359","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:39:19","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/31032","RelatedDescription":"Reopened issue \"Microsoft.CSharp.Tests fail when running against NETFX\" (#31032) at dotnet/corefx","RelatedBody":"There are around 620 tests failing when running them against netfx. \r\n\r\nAlso, [Microsoft.CSharp.RuntimeBinder.Tests.RuntimeBinderTests](https://github.com/dotnet/corefx/blob/master/src/Microsoft.CSharp/tests/RuntimeBinderTests.cs#L19) are failing with a StackOverflowException. I quickly attached windbg and got a call stack for this SOE and it looks like an infinite recursion:\r\n\r\n```\r\n0:000> !CLRStack\r\nOS Thread Id: 0x3c424 (0)\r\n        Child SP               IP Call Site\r\n0000005b384d96d8 00007ffab5eef143 [InlinedCallFrame: 0000005b384d96d8] System.RuntimeTypeHandle.Instantiate(System.RuntimeTypeHandle, IntPtr*, Int32, System.Runtime.CompilerServices.ObjectHandleOnStack)\r\n0000005b384d96d8 00007ffab3ec7fbd [InlinedCallFrame: 0000005b384d96d8] System.RuntimeTypeHandle.Instantiate(System.RuntimeTypeHandle, IntPtr*, Int32, System.Runtime.CompilerServices.ObjectHandleOnStack)\r\n0000005b384d96b0 00007ffab3ec7fbd DomainNeutralILStubClass.IL_STUB_PInvoke(System.RuntimeTypeHandle, IntPtr*, Int32, System.Runtime.CompilerServices.ObjectHandleOnStack)\r\n0000005b384d9760 00007ffab3ebcb0c System.RuntimeTypeHandle.Instantiate(System.Type[])\r\n0000005b384d97c0 00007ffab3e66814 System.RuntimeType.MakeGenericType(System.Type[])\r\n0000005b384d9830 00007ffa56b762e1 Microsoft.CSharp.RuntimeBinder.Semantics.CType.CalculateAssociatedSystemTypeForAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\Type.cs @ 192]\r\n0000005b384d98c0 00007ffa56b760c4 Microsoft.CSharp.RuntimeBinder.Semantics.CType.CalculateAssociatedSystemType(Microsoft.CSharp.RuntimeBinder.Semantics.CType) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\Type.cs @ 127]\r\n0000005b384d9900 00007ffa56b75f37 Microsoft.CSharp.RuntimeBinder.Semantics.CType.get_AssociatedSystemType() [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\Type.cs @ 86]\r\n0000005b384d9930 00007ffa56b7544f Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol, Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType, Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 259]\r\n0000005b384d99a0 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9a10 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n0000005b384d9a70 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9ae0 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n0000005b384d9b40 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9bb0 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n0000005b384d9c10 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9c80 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n0000005b384d9ce0 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9d50 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n0000005b384d9db0 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9e20 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n0000005b384d9e80 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9ef0 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n0000005b384d9f50 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9fc0 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n...\r\n0000005b384d9e80 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9ef0 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n0000005b384d9f50 00007ffa56b82c37 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeArray(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 515]\r\n0000005b384d9fc0 00007ffa56b828d7 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType, Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 585]\r\n0000005b385c96b0 00007ffa56b7f4c8 Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType.GetBaseClass() [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\AggregateType.cs @ 51]\r\n0000005b385c9710 00007ffa56b754be Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol, Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType, Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 285]\r\n0000005b385c9780 00007ffa56b76725 Microsoft.CSharp.RuntimeBinder.SymbolTable.GetConstructedType(System.Type, Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\SymbolTable.cs @ 869]\r\n0000005b385c97e0 00007ffa56b738fb Microsoft.CSharp.RuntimeBinder.SymbolTable.LoadSymbolsFromType(System.Type) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\SymbolTable.cs @ 791]\r\n0000005b385c9880 00007ffa56b75496 Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol, Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType, Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Types\\TypeManager.cs @ 282]\r\n0000005b385c98f0 00007ffa56b75364 Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol.getThisType() [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\ManagedBinder\\Semantics\\Symbols\\AggregateSymbol.cs @ 118]\r\n0000005b385c9920 00007ffa56b747c9 Microsoft.CSharp.RuntimeBinder.SymbolTable.AddAggregateToSymbolTable(Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceOrAggregateSymbol, System.Type) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\SymbolTable.cs @ 1186]\r\n0000005b385c99a0 00007ffa56b73858 Microsoft.CSharp.RuntimeBinder.SymbolTable.LoadSymbolsFromType(System.Type) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\SymbolTable.cs @ 798]\r\n0000005b385c9a40 00007ffa56b766e8 Microsoft.CSharp.RuntimeBinder.SymbolTable.GetConstructedType(System.Type, Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\SymbolTable.cs @ 859]\r\n0000005b385c9aa0 00007ffa56b738fb Microsoft.CSharp.RuntimeBinder.SymbolTable.LoadSymbolsFromType(System.Type) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\SymbolTable.cs @ 791]\r\n0000005b385c9b40 00007ffa56b82642 Microsoft.CSharp.RuntimeBinder.SymbolTable.CreateInheritanceHierarchyList(System.Type) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\SymbolTable.cs @ 365]\r\n0000005b385c9b90 00007ffa56b82255 Microsoft.CSharp.RuntimeBinder.SymbolTable.PopulateSymbolTableWithName(System.String, System.Collections.Generic.IEnumerable`1, System.Type) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\SymbolTable.cs @ 178]\r\n0000005b385c9bf0 00007ffa56b81c20 Microsoft.CSharp.RuntimeBinder.RuntimeBinder.PopulateSymbolTableWithPayloadInformation(System.Dynamic.DynamicMetaObjectBinder, System.Type, ArgumentObject[]) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\RuntimeBinder.cs @ 560]\r\n0000005b385c9c50 00007ffa56b7ea6b Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindCore(System.Dynamic.DynamicMetaObjectBinder, System.Collections.Generic.IEnumerable`1, System.Dynamic.DynamicMetaObject[], System.Dynamic.DynamicMetaObject ByRef) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\RuntimeBinder.cs @ 215]\r\n0000005b385c9cd0 00007ffa56b7e910 Microsoft.CSharp.RuntimeBinder.RuntimeBinder.Bind(System.Dynamic.DynamicMetaObjectBinder, System.Collections.Generic.IEnumerable`1, System.Dynamic.DynamicMetaObject[], System.Dynamic.DynamicMetaObject ByRef) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\RuntimeBinder.cs @ 172]\r\n0000005b385c9d30 00007ffa56b7dda6 Microsoft.CSharp.RuntimeBinder.BinderHelper.Bind(System.Dynamic.DynamicMetaObjectBinder, Microsoft.CSharp.RuntimeBinder.RuntimeBinder, System.Collections.Generic.IEnumerable`1, System.Collections.Generic.IEnumerable`1, System.Dynamic.DynamicMetaObject) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\Binder.cs @ 268]\r\n0000005b385c9de0 00007ffa56b7cfc0 Microsoft.CSharp.RuntimeBinder.CSharpInvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[], System.Dynamic.DynamicMetaObject) [f:\\dd\\ndp\\fx\\src\\CSharp\\Microsoft\\CSharp\\CSharpInvokeMemberBinder.cs @ 77]\r\n0000005b385c9e40 00007ffa56b7ceea System.Dynamic.DynamicMetaObject.BindInvokeMember(System.Dynamic.InvokeMemberBinder, System.Dynamic.DynamicMetaObject[]) [f:\\dd\\ndp\\fx\\src\\Core\\Microsoft\\Scripting\\Actions\\DynamicMetaObject.cs @ 224]\r\n0000005b385c9e70 00007ffa56b7c48b System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection`1, System.Linq.Expressions.LabelTarget) [f:\\dd\\ndp\\fx\\src\\Core\\Microsoft\\Scripting\\Actions\\DynamicMetaObjectBinder.cs @ 109]\r\n0000005b385c9ee0 00007ffa56b7b478 System.Runtime.CompilerServices.CallSiteBinder.BindCore[[System.__Canon, mscorlib]](System.Runtime.CompilerServices.CallSite`1, System.Object[]) [f:\\dd\\ndp\\fx\\src\\Core\\Microsoft\\Scripting\\Actions\\CallSiteBinder.cs @ 130]\r\n0000005b385c9f40 00007ffa56b7a793 System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid2[[System.__Canon, mscorlib],[System.__Canon, mscorlib]](System.Runtime.CompilerServices.CallSite, System.__Canon, System.__Canon) [f:\\dd\\ndp\\fx\\src\\Core\\Microsoft\\Scripting\\Actions\\UpdateDelegates.Generated.cs @ 1627]\r\n0000005b385c9fe0 00007ffa56b5fd6e *** ERROR: Module load completed but symbols could not be loaded for Microsoft.CSharp.Tests.dll\r\nMicrosoft.CSharp.RuntimeBinder.Tests.RuntimeBinderTests.DynamicArgumentToCyclicTypeDefinition()\r\n```\r\n\r\nThis SOE can be repro in a full framework app running on 4.7.2 (didn't check if it repro on earlier versions of netfx) with the following piece of code:\r\n```cs\r\nstatic void Main(string[] args)\r\n{\r\n    dynamic arg = 5;\r\n    new Builder<object>().SomeMethod(arg);\r\n}\r\n\r\npublic class Builder<TItem> : BuilderBaseEx<Builder<TItem>>\r\n{\r\n    public Builder<TItem> SomeMethod(object arg)\r\n    {\r\n        return this;\r\n    }\r\n}\r\npublic class BuilderBaseEx<T> : BuilderBase<T> where T : BuilderBaseEx<T> { }\r\npublic class BuilderBase<T> where T : BuilderBase<T> { }\r\n```\r\n\r\ncc: @AlexGhiondea @danmosemsft "},{"Id":"11340006590","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:36:47","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/28027","RelatedDescription":"Reopened issue \"ClientWebSocket aborts on closes when going thru a proxy\" (#28027) at dotnet/corefx","RelatedBody":"While working on #26957, I noticed that the following test will fail. There seems to be a problem with the close frame exchange and final TCP socket close when going thru a proxy.\r\n\r\nRepro test (not yet in repo):\r\n\r\n```c#\r\n[OuterLoop] // TODO: Issue #11345\r\n[ConditionalTheory(nameof(WebSocketsSupported)), MemberData(nameof(EchoServers))]\r\npublic async Task Proxy_ConnectThruProxy_Success(Uri server)\r\n{\r\n    IWebProxy proxy = new WebProxy(new Uri(\"http://localhost:8080/\"));\r\n    using (ClientWebSocket cws = await WebSocketHelper.GetConnectedWebSocket(\r\n        server,\r\n        TimeOutMilliseconds,\r\n        _output,\r\n        default(TimeSpan),\r\n        proxy))\r\n    {\r\n        var cts = new CancellationTokenSource(TimeOutMilliseconds);\r\n        Assert.Equal(WebSocketState.Open, cws.State);\r\n\r\n        var closeStatus = WebSocketCloseStatus.NormalClosure;\r\n        string closeDescription = \"Normal Closure\";\r\n\r\n        await cws.CloseAsync(closeStatus, closeDescription, cts.Token);\r\n\r\n        // Verify a clean close frame handshake.\r\n        Assert.Equal(WebSocketState.Closed, cws.State); // *** FAILS HERE ***\r\n        Assert.Equal(closeStatus, cws.CloseStatus);\r\n        Assert.Equal(closeDescription, cws.CloseStatusDescription);\r\n    }\r\n}\r\n```\r\n\r\nFails with error:\r\n\r\n```\r\n    System.Net.WebSockets.Client.Tests.ClientWebSocketOptionsTests.Proxy_SecureConnectThruProxy_Success(server: ws://corefx-net.cloudapp.net/WebSocket/EchoWeb\r\n  Socket.ashx) [FAIL]\r\n        Assert.Equal() Failure\r\n        Expected: Closed\r\n        Actual:   Aborted\r\n        Stack Trace:\r\n           s:\\GitHub\\corefx\\src\\System.Net.WebSockets.Client\\tests\\ClientWebSocketOptionsTests.cs(90,0): at System.Net.WebSockets.Client.Tests.ClientWebSocketO\r\n  ptionsTests.Proxy_SecureConnectThruProxy_Success(Uri server)\r\n           --- End of stack trace from previous location where exception was thrown ---\r\n     System.Net.WebSockets.Client.Tests.ClientWebSocketOptionsTests.Proxy_SecureConnectThruProxy_Success(server: wss://corefx-net.cloudapp.net/WebSocket/EchoWe\r\n  bSocket.ashx) [FAIL]\r\n        Assert.Equal() Failure\r\n        Expected: Closed\r\n        Actual:   Aborted\r\n        Stack Trace:\r\n           s:\\GitHub\\corefx\\src\\System.Net.WebSockets.Client\\tests\\ClientWebSocketOptionsTests.cs(90,0): at System.Net.WebSockets.Client.Tests.ClientWebSocketO\r\n  ptionsTests.Proxy_SecureConnectThruProxy_Success(Uri server)\r\n           --- End of stack trace from previous location where exception was thrown ---\r\n```"},{"Id":"11340000437","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:34:58","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27552","RelatedDescription":"Reopened issue \"Several FileSystem and Path tests failing with latest coreclr\" (#27552) at dotnet/corefx","RelatedBody":"```\r\n2018-02-28 13:24:45,135: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Span(value: \\\"C:\\\\\\\\\\\\\\\\\\\", expected: \\\"C:\\\\\\\\\\\") [FAIL]\r\n2018-02-28 13:24:45,135: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,135: INFO: proc(54): run_and_log_output: Output:                    ↓ (pos 3)\r\n2018-02-28 13:24:45,135: INFO: proc(54): run_and_log_output: Output:       Expected: C:\\\r\n2018-02-28 13:24:45,135: INFO: proc(54): run_and_log_output: Output:       Actual:   C:\\\\\r\n2018-02-28 13:24:45,135: INFO: proc(54): run_and_log_output: Output:                    ↑ (pos 3)\r\n2018-02-28 13:24:45,135: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.netcoreapp.cs(17,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Span(String value, String expected)\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Span(value: \\\"C:\\\\\\\\\\\\\\\\foo2\\\", expected: \\\"C:\\\\\\\\\\\") [FAIL]\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:                    ↓ (pos 3)\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:       Expected: C:\\\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:       Actual:   C:\\\\\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:                    ↑ (pos 3)\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.netcoreapp.cs(17,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Span(String value, String expected)\r\n2018-02-28 13:24:45,244: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Span(value: \\\"\\\\\\\\\\\\\\\\test\\\\\\\\unc\\\\\\\\path\\\\\\\\to\\\\\\\\something\\\", expected: \\\"\\\\\\\\\\\\\\\\test\\\\\\\\unc\\\") [FAIL]\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:                           ↓ (pos 10)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\test\\unc\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\test\\unc\\\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:                           ↑ (pos 10)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.netcoreapp.cs(17,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Span(String value, String expected)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Span(value: \\\"\\\\\\\\\\\\\\\\a\\\\\\\\b\\\\\\\\c\\\\\\\\d\\\\\\\\e\\\", expected: \\\"\\\\\\\\\\\\\\\\a\\\\\\\\b\\\") [FAIL]\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:                      ↓ (pos 5)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\a\\b\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\a\\b\\\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:                      ↑ (pos 5)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.netcoreapp.cs(17,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Span(String value, String expected)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Span(value: \\\"\\\\\\\\\\\\\\\\a\\\\\\\\b\\\\\\\\\\\", expected: \\\"\\\\\\\\\\\\\\\\a\\\\\\\\b\\\") [FAIL]\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:                      ↓ (pos 5)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\a\\b\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\a\\b\\\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:                      ↑ (pos 5)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.netcoreapp.cs(17,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Span(String value, String expected)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Span(value: \\\"\\\\\\\\\\\\\\\\?\\\\\\\\UNC\\\\\\\\test\\\\\\\\unc\\\\\\\\path\\\\\\\\to\\\\\\\\something\\\", expected: \\\"\\\\\\\\\\\\\\\\?\\\\\\\\UNC\\\\\\\\test\\\\\\\\unc\\\") [FAIL]\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:                                 ↓ (pos 16)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\?\\UNC\\test\\unc\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\?\\UNC\\test\\unc\\\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:                                 ↑ (pos 16)\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,260: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.netcoreapp.cs(17,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Span(String value, String expected)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Span(value: \\\"\\\\\\\\\\\\\\\\?\\\\\\\\UNC\\\\\\\\a\\\\\\\\b2\\\\\\\\\\\", expected: \\\"\\\\\\\\\\\\\\\\?\\\\\\\\UNC\\\\\\\\a\\\\\\\\b2\\\") [FAIL]\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                             ↓ (pos 12)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\?\\UNC\\a\\b2\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\?\\UNC\\a\\b2\\\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                             ↑ (pos 12)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.netcoreapp.cs(17,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Span(String value, String expected)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(value: \\\"\\\\\\\\\\\\\\\\test\\\\\\\\unc\\\\\\\\path\\\\\\\\to\\\\\\\\something\\\", expected: \\\"\\\\\\\\\\\\\\\\test\\\\\\\\unc\\\") [FAIL]\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                           ↓ (pos 10)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\test\\unc\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\test\\unc\\\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                           ↑ (pos 10)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.cs(48,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(String value, String expected)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(value: \\\"\\\\\\\\\\\\\\\\a\\\\\\\\b\\\\\\\\c\\\\\\\\d\\\\\\\\e\\\", expected: \\\"\\\\\\\\\\\\\\\\a\\\\\\\\b\\\") [FAIL]\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                      ↓ (pos 5)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\a\\b\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\a\\b\\\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                      ↑ (pos 5)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.cs(48,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(String value, String expected)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(value: \\\"\\\\\\\\\\\\\\\\a\\\\\\\\b\\\\\\\\\\\", expected: \\\"\\\\\\\\\\\\\\\\a\\\\\\\\b\\\") [FAIL]\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                      ↓ (pos 5)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\a\\b\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\a\\b\\\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                      ↑ (pos 5)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.cs(48,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(String value, String expected)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(value: \\\"\\\\\\\\\\\\\\\\?\\\\\\\\UNC\\\\\\\\test\\\\\\\\unc\\\\\\\\path\\\\\\\\to\\\\\\\\something\\\", expected: \\\"\\\\\\\\\\\\\\\\?\\\\\\\\UNC\\\\\\\\test\\\\\\\\unc\\\") [FAIL]\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                                 ↓ (pos 16)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\?\\UNC\\test\\unc\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\?\\UNC\\test\\unc\\\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                                 ↑ (pos 16)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.cs(48,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(String value, String expected)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(value: \\\"\\\\\\\\\\\\\\\\?\\\\\\\\UNC\\\\\\\\a\\\\\\\\b2\\\\\\\\\\\", expected: \\\"\\\\\\\\\\\\\\\\?\\\\\\\\UNC\\\\\\\\a\\\\\\\\b2\\\") [FAIL]\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                             ↓ (pos 12)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\?\\UNC\\a\\b2\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\?\\UNC\\a\\b2\\\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:                             ↑ (pos 12)\r\n2018-02-28 13:24:45,276: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:45,292: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.Runtime.Extensions\\tests\\System\\IO\\PathTests_Windows.cs(48,0): at System.IO.Tests.PathTests_Windows.GetPathRoot_Windows(String value, String expected)\r\n```\r\nand\r\n```\r\n2018-02-28 13:24:34,276: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.FileInfo_Directory.UNCShares [FAIL]\r\n2018-02-28 13:24:34,276: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:34,276: INFO: proc(54): run_and_log_output: Output:                                    ↓ (pos 19)\r\n2018-02-28 13:24:34,276: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\Machine\\Directory\r\n2018-02-28 13:24:34,276: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\Machine\\Directory\\\r\n2018-02-28 13:24:34,276: INFO: proc(54): run_and_log_output: Output:                                    ↑ (pos 19)\r\n2018-02-28 13:24:34,292: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:34,401: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.IO.FileSystem\\tests\\FileInfo\\Directory.cs(55,0): at System.IO.Tests.FileInfo_Directory.UNCShares()\r\n2018-02-28 13:24:38,369: INFO: proc(54): run_and_log_output: Output:    System.IO.Tests.FileInfo_DirectoryName.UNCShares [FAIL]\r\n2018-02-28 13:24:38,369: INFO: proc(54): run_and_log_output: Output:       Assert.Equal() Failure\r\n2018-02-28 13:24:38,369: INFO: proc(54): run_and_log_output: Output:                                    ↓ (pos 19)\r\n2018-02-28 13:24:38,369: INFO: proc(54): run_and_log_output: Output:       Expected: \\\\Machine\\Directory\r\n2018-02-28 13:24:38,369: INFO: proc(54): run_and_log_output: Output:       Actual:   \\\\Machine\\Directory\\\r\n2018-02-28 13:24:38,369: INFO: proc(54): run_and_log_output: Output:                                    ↑ (pos 19)\r\n2018-02-28 13:24:38,369: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-02-28 13:24:38,369: INFO: proc(54): run_and_log_output: Output:          D:\\j\\workspace\\windows-TGrou---74aa877a\\src\\System.IO.FileSystem\\tests\\FileInfo\\Directory.cs(55,0): at System.IO.Tests.FileInfo_Directory.UNCShares()\r\n```"},{"Id":"11339997467","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:34:04","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27269","RelatedDescription":"Reopened issue \"Need to update tests for https://github.com/dotnet/coreclr/pull/16447\" (#27269) at dotnet/corefx","RelatedBody":"I will link to the test change that disables the tests that are impacted."},{"Id":"11339991774","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:32:23","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27106","RelatedDescription":"Reopened issue \"Fix ETW EventCounter Tests and Manifest_Write_T Tests\" (#27106) at dotnet/corefx","RelatedBody":"Both of these tests fail because the event names are incorrect.  They both use TraceLogging but have statically defined events as well which results in them having a manifest produced as well (because they are not strictly marked as SelfDescribing EventSources).  TraceEvent loads the manifests correctly but does not load the templates for the TraceLogging events.\r\n\r\nTemplate loading appears to be specific to TraceLog but swapping in TraceLog results in a bunch of other failures.  This should be investigated so that these tests can be re-activated."},{"Id":"11339986069","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:30:44","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26910","RelatedDescription":"Reopened issue \"MethodBodyStreamEncoder.AddMethodBody ignores attributes for tiny methods.\" (#26910) at dotnet/corefx","RelatedBody":"RelatedTo:https://github.com/dotnet/roslyn/issues/23951\r\n\r\nMethodBodyStreamEncoder.AddMethodBody checks if it is possible to emit Tiny method header, and if it otherwise fits in Tiny, the InitLocals flag get effectively ignored.\r\n\r\nThere is a case where we may need Fat format specifically because we want the InitLocals flag.\r\nThat happens if a method otherwise meets requirements of a Tiny format, but has `stackalloc` in it. If Tiny is used in such case, the caller will `stackalloc` a piece of nondeterministic garbage.\r\n\r\nOverall - it should be up to the caller to decide whether the InitLocals is needed. \r\nAddMethodBody should ensure that the flag is emitted if asked by the caller.\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"11340167753","Type":"IssuesEvent","CreatedAt":"2020-01-23T05:20:44","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41159","RelatedDescription":"Opened issue \"ArgumentOutOfRangeException in ReplacePropertyWithMethodsCodeRefactoringProvider\" (#41159) at dotnet/roslyn","RelatedBody":"**Version Used**: 16.5 Preview 2\r\n\r\n**Steps to Reproduce**:\r\n\r\nAttempted to use a refactoring to convert `RunTests.Options.LogFilesOutputDirectory` to a full property.\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\r\n   at Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GetBinaryExpressionOperatorTokenKind(SyntaxKind kind)\r\n   at Microsoft.CodeAnalysis.CSharp.ReplacePropertyWithMethods.CSharpReplacePropertyWithMethodsService.UnwrapCompoundAssignment(SyntaxNode compoundAssignment,ExpressionSyntax readExpression)\r\n   at Microsoft.CodeAnalysis.ReplacePropertyWithMethods.AbstractReplacePropertyWithMethodsService`5.ReferenceReplacer.<>c.<.cctor>b__35_2(ReferenceReplacer replacer,SyntaxNode parent)\r\n   at Microsoft.CodeAnalysis.ReplacePropertyWithMethods.AbstractReplacePropertyWithMethodsService`5.ReferenceReplacer.<>c.<.cctor>b__35_3(SyntaxNode parent,SyntaxGenerator generator,ReplaceParentArgs args)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.ReplaceChange`1.Apply(SyntaxNode root,SyntaxGenerator generator)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.GetChangedRoot()\r\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider.UpdateReferencesInDocumentAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider.UpdateReferencesAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider.ReplacePropertyWithMethodsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.<>c__DisplayClass11_0.<GetPreviewAsync>b__0(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](<Unknown Parameters>)\r\n```"},{"Id":"11340034498","Type":"PullRequestEvent","CreatedAt":"2020-01-23T04:44:54","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41143","RelatedDescription":null,"RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 567feadf-e495-4ebb-cee4-08d67668456c\r\n- **Build**: 20200122.2\r\n- **Date Produced**: 1/22/2020 6:47 PM\r\n- **Commit**: 27b56f866fe9a97cdc02dc439082476dae6fd235\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20072.2\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n"},{"Id":"11340034372","Type":"PullRequestEvent","CreatedAt":"2020-01-23T04:44:52","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41143","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/arcade\" (#41143) at dotnet/roslyn","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 567feadf-e495-4ebb-cee4-08d67668456c\r\n- **Build**: 20200122.2\r\n- **Date Produced**: 1/22/2020 6:47 PM\r\n- **Commit**: 27b56f866fe9a97cdc02dc439082476dae6fd235\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20072.2\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n"},{"Id":"11340024984","Type":"IssuesEvent","CreatedAt":"2020-01-23T04:42:05","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41158","RelatedDescription":"Opened issue \"TaskCanceledException in TodoCommentIncrementalAnalyzer.GetTodoItems\" (#41158) at dotnet/roslyn","RelatedBody":"**Version Used**: 16.5 Preview 2\r\n\r\n**Steps to Reproduce**: Unknown\r\n\r\n**Actual Behavior**:\r\n\r\n<pre>\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n    at Roslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground[T](Task`1 task, CancellationToken cancellationToken)\r\n    at Microsoft.CodeAnalysis.Editor.Implementation.TodoComments.TodoCommentIncrementalAnalyzer.GetTodoItems(Workspace workspace, DocumentId id, CancellationToken cancellationToken)\r\n    at Microsoft.CodeAnalysis.Editor.Implementation.TodoComments.TodoCommentIncrementalAnalyzerProvider.GetTodoItems(Workspace workspace, DocumentId documentId, CancellationToken cancellationToken)\r\n    at Microsoft.VisualStudio.LanguageServices.Implementation.TableDataSource.VisualStudioBaseTodoListTable.TableDataSource.TableEntriesSource.GetItems()\r\n    at Microsoft.VisualStudio.LanguageServices.Implementation.TableDataSource.TableEntriesFactory`1.AggregatedEntriesSource.GetItems()\r\n    at Microsoft.VisualStudio.LanguageServices.Implementation.TableDataSource.TableEntriesFactory`1.GetSnapshot(Int32 versionNumber)\r\n    at Microsoft.VisualStudio.Shell.TableControl.Implementation.EntriesFromSnapshot.&lt;PinSnapshot&gt;b__14_1()\r\n    at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.CallExtensionPoint[T](Object errorSource, Func`1 call, T valueOnThrow)\r\n</pre>"},{"Id":"11339958738","Type":"PullRequestEvent","CreatedAt":"2020-01-23T04:22:48","Actor":"jmarolf","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41157","RelatedDescription":"Opened pull request \"add contents of wiki to the docs folder\" (#41157) at dotnet/roslyn","RelatedBody":"This way anyone can submit a PR to the docs folder"},{"Id":"11339657099","Type":"IssuesEvent","CreatedAt":"2020-01-23T02:56:40","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41156","RelatedDescription":"Opened issue \"Unexpected code changes are made by IDE refactoring \" (#41156) at dotnet/roslyn","RelatedBody":"1. Checkout https://github.com/dotnet/roslyn/commit/4f7db0617737bf2949925d2d1e13b001b8540f66\r\n\r\n2. Go to https://github.com/dotnet/roslyn/blob/4f7db0617737bf2949925d2d1e13b001b8540f66/src/Compilers/CSharp/Portable/Symbols/Source/ParameterHelpers.cs#L82 and extract the right side of the assignment to a method.\r\n\r\nObserve:\r\nExplicit type parameters are added to the enclosing method call.\r\n```\r\n        public static ImmutableArray<FunctionPointerParameterSymbol> MakeFunctionPointerParameters(\r\n            Binder binder,\r\n            FunctionPointerMethodSymbol owner,\r\n            SeparatedSyntaxList<ParameterSyntax> parametersList,\r\n            DiagnosticBag diagnostics,\r\n            bool suppressUseSiteDiagnostics)\r\n        {\r\n            return MakeParameters<FunctionPointerParameterSymbol, FunctionPointerMethodSymbol>(\r\n                binder,\r\n                owner,\r\n                parametersList,\r\n                out _,\r\n                diagnostics,\r\n                allowRefOrOut: true,\r\n                allowThis: false,\r\n                // PROTOTYPE(func-ptr): Investigate if cases where this can be false for regular parameters applies to func pointers as well\r\n                addRefReadOnlyModifier: true,\r\n                suppressUseSiteDiagnostics,\r\n                parametersList.Count - 2,\r\n                parameterCreationFunc: (Binder binder, FunctionPointerMethodSymbol owner, TypeWithAnnotations parameterType,\r\n                                        ParameterSyntax syntax, RefKind refKind, int ordinal,\r\n                                        SyntaxToken paramsKeyword, SyntaxToken thisKeyword, bool addRefReadOnlyModifier,\r\n                                        DiagnosticBag diagnostics) =>\r\n                {\r\n\r\n                    var customModifiers = GetCustomModifiers(binder, syntax, refKind, addRefReadOnlyModifier, diagnostics);\r\n\r\n                    if (parameterType.IsVoidType())\r\n                    {\r\n                        diagnostics.Add(ErrorCode.ERR_NoVoidParameter, syntax.Type.Location);\r\n                    }\r\n\r\n                    return new FunctionPointerParameterSymbol(\r\n                        parameterType,\r\n                        refKind,\r\n                        ordinal,\r\n                        owner,\r\n                        customModifiers);\r\n                },\r\n                parsingFunctionPointer: true);\r\n        }\r\n\r\n        private static ImmutableArray<CustomModifier> GetCustomModifiers(Binder binder, ParameterSyntax syntax, RefKind refKind, bool addRefReadOnlyModifier, DiagnosticBag diagnostics)\r\n        {\r\n            return addRefReadOnlyModifier && refKind == RefKind.In ?\r\n                                    CreateInModifiers(binder, diagnostics, syntax) :\r\n                                    ImmutableArray<CustomModifier>.Empty;\r\n        }\r\n```\r\n\r\nExpected:\r\nNo changes outside of the assignment.\r\n\r\nI noticed similar things happening with VB (probably with 'Introduce local' as well). Besides adding explicit type parameters, I've seen unnecessary changes made throughout the file (even in different functions) :\r\n- names fully qualified, including additions of a global namespace reference.  \r\n- Explicit CType operators added, etc.\r\n\r\n"},{"Id":"11339569804","Type":"PullRequestEvent","CreatedAt":"2020-01-23T02:32:54","Actor":"jmarolf","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41112","RelatedDescription":"Merged pull request \"use MIT license\" (#41112) at dotnet/roslyn","RelatedBody":"fixes #37797"},{"Id":"11339569774","Type":"IssuesEvent","CreatedAt":"2020-01-23T02:32:53","Actor":"jmarolf","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37797","RelatedDescription":"Closed issue \"Switch to MIT license\" (#37797) at dotnet/roslyn","RelatedBody":"I suggest that Roslyn's license should be changed to a MIT license. This would [alleviate legal problems for developers](https://github.com/dotnet/fsharp/issues/1727) and be consistent with the rest of .NET Core."},{"Id":"11339471216","Type":"PullRequestEvent","CreatedAt":"2020-01-23T02:07:42","Actor":"RikkiGibson","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41129","RelatedDescription":"Merged pull request \"Support ExcludeFromCodeCoverageAttribute in local functions\" (#41129) at dotnet/roslyn","RelatedBody":"Related to #38801"},{"Id":"11339418776","Type":"IssuesEvent","CreatedAt":"2020-01-23T01:54:46","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41155","RelatedDescription":"Opened issue \"Quick action : move type to *.vb duplicates enum\" (#41155) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/637617/quick-action-move-type-to-vb-duplicates-enum.html)._\n\n---\nwhen using Quick action : move type to *.vb for a file which also contains an enum creates a duplicates enum in the new file created.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 7/9/2019, 11:48 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"11312288930","Type":"IssuesEvent","CreatedAt":"2020-01-20T05:59:53","Actor":"akinohana","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7955","RelatedDescription":"Opened issue \"[BUG]print stack trace from child thread cause a fastfail exception\" (#7955) at dotnet/corert","RelatedBody":"![image](https://user-images.githubusercontent.com/29968862/72702124-8faa8a00-3b8c-11ea-980a-966ba2b76836.png)\r\n\r\n\r\ncodes to reproduce:\r\n\r\n\r\n```\r\n\r\n\tclass Program\r\n    {\r\n\t    static void tr()\r\n\t    {\r\n\t\t\tConsole.WriteLine(\"thread start\");\r\n\t\t    Console.WriteLine(\"2\" + Environment.StackTrace);\r\n\r\n\t\t}\r\n\t\tstatic void Main(string[] args)\r\n        {\r\n\t        Console.WriteLine(\"1\" + Environment.StackTrace);\r\n\r\n\t\t\tThreadStart threadStart = tr;\r\n\t        var th = new Thread(threadStart);\r\n\t\t\tth.Start();\r\n\r\n\t\t\tConsole.ReadKey();\r\n        }\r\n    }\r\n\r\n```\r\n\r\nresults:\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/72702208-cda7ae00-3b8c-11ea-883b-746631ae7aed.png)\r\n\r\n\r\nstack trace when crashed:\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/72702271-165f6700-3b8d-11ea-8334-b445bbad823f.png)\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"11339696231","Type":"PullRequestEvent","CreatedAt":"2020-01-23T03:07:06","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/4209","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from dotnet/core-setup\" (#4209) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5a976d45-b90d-4c39-d453-08d76e1d3434)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 5a976d45-b90d-4c39-d453-08d76e1d3434\r\n- **Build**: 20200120.1\r\n- **Date Produced**: 1/20/2020 9:36 AM\r\n- **Commit**: 966115a91565d43cd545c1b8acd83eda2a0cb4cb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n\r\n[marker]: <> (End:5a976d45-b90d-4c39-d453-08d76e1d3434)\r\n\r\n"},{"Id":"11338679785","Type":"PullRequestEvent","CreatedAt":"2020-01-22T23:15:34","Actor":"dotnet-maestro-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/4208","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/3.1.2xx' => 'master'\" (#4208) at dotnet/sdk","RelatedBody":"I detected changes in the release/3.1.2xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.2xx by the following committers:\n\n* wli3\n* nguerrera\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.2xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.2xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.2xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.2xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.2xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.2xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"11338667147","Type":"PullRequestEvent","CreatedAt":"2020-01-22T23:13:21","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/4170","RelatedDescription":"Merged pull request \"Updating PublishItemsOutputGroup to include the publish deps file when _UseBuildDependencyFile is false\" (#4170) at dotnet/sdk","RelatedBody":"This is the output group that gets used with VS installer projects. Right now we're using the wrong deps file in the case where assets are marked as excluded from publish.\r\n\r\nFor some historical context you can look at the comments in PR 3141. At that point we didn't actually do a real publish when this output group got used so PublishDepsFilePath wasn't available to us. But now consuming this output group using an installer project does a real publish, so we can and should use the publish version of the deps file when _UseBuildDependencyFile is false."},{"Id":"11337897577","Type":"PullRequestEvent","CreatedAt":"2020-01-22T21:19:34","Actor":"fadimounir","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/4207","RelatedDescription":"Opened pull request \"[WIP] Initial plumbing work to support compiling R2R images using crossgen2\" (#4207) at dotnet/sdk","RelatedBody":"Posting as WIP at this point to get initial feedback, and because there are dependencies that need to be merged in other branches"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:29","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#152)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:00","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#153)"},{"Id":"539153211","IsPullRequest":true,"CreatedAt":"2020-01-22T14:07:13","Actor":"khalidabuhakmeh","Number":"156","RawContent":null,"Title":"Update Teams Link","State":"closed","Body":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`","Url":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Closed or merged PR \"Update Teams Link\" (#156)"},{"Id":"544546454","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:51","Actor":"manne","Number":"157","RawContent":null,"Title":"Link Reactive Extensions to new github repo","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Closed or merged PR \"Link Reactive Extensions to new github repo\" (#157)"},{"Id":"552026315","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:19","Actor":"nagytech","Number":"158","RawContent":null,"Title":"Add Akka.NET to DNF","State":"closed","Body":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n","Url":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Closed or merged PR \"Add Akka.NET to DNF\" (#158)"},{"Id":"552027434","IsPullRequest":false,"CreatedAt":"2020-01-20T02:00:06","Actor":"nagytech","Number":"159","RawContent":null,"Title":"Add Akka.NET to the DNF project listing","State":"open","Body":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings.","Url":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Open issue \"Add Akka.NET to the DNF project listing\" (#159)"},{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"540149649","IsPullRequest":true,"CreatedAt":"2020-01-17T18:31:43","Actor":"VSadov","Number":"27975","RawContent":null,"Title":"Setting MinLimitTotalWorkerThreads according to CPU quota.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27975","RelatedDescription":"Closed or merged PR \"Setting MinLimitTotalWorkerThreads according to CPU quota.\" (#27975)"},{"Id":"551004118","IsPullRequest":true,"CreatedAt":"2020-01-17T02:10:57","Actor":"dotnet-maestro-bot","Number":"28002","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @hoyosjs\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28002","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#28002)"},{"Id":"550505294","IsPullRequest":true,"CreatedAt":"2020-01-16T19:16:48","Actor":"hoyosjs","Number":"28000","RawContent":null,"Title":"Fix issues in release 3.0","State":"closed","Body":"Changes discussed to obtain green CI and fix RHEL6 outerloop builds:\r\n\r\n- Restore the Helix SDK using Tools.props to work around msbuild issues\r\n- Disable formatting jobs\r\n- Disable windows ARM jobs until dotnet/runtime#1097 is solved\r\n- Fix TRACE statement for RHEL6 in debug/checked pal out-of-proc unwind.\r\n\r\ncc @jeffschwMSFT @mmitche @jashook @trylek ","Url":"https://github.com/dotnet/coreclr/pull/28000","RelatedDescription":"Closed or merged PR \"Fix issues in release 3.0\" (#28000)"},{"Id":"550514396","IsPullRequest":true,"CreatedAt":"2020-01-16T01:27:41","Actor":"mmitche","Number":"28001","RawContent":null,"Title":"[release/2.1] Restore official build for 2.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28001","RelatedDescription":"Closed or merged PR \"[release/2.1] Restore official build for 2.1\" (#28001)"},{"Id":"549855987","IsPullRequest":true,"CreatedAt":"2020-01-15T21:04:10","Actor":"GrabYourPitchforks","Number":"27996","RawContent":null,"Title":"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/752 to release/3.1\r\nFixes https://github.com/dotnet/runtime/issues/594\r\n\r\n## Description\r\n\r\nIn .NET Core 3.0 / 3.1 we changed how the _completed_ out parameter is set on the `EncoderNLS.Convert` and `DecoderNLS.Convert` routines. We had changed the logic to match precisely what MSDN's documentation stated and to fix a possible data corruption bug; however, this broke a number of customers' applications by sending them into infinite loops.\r\n\r\nThis PR reverts that change.\r\n\r\n## Customer Impact\r\n\r\nIf customers were relying on the previous behavior of the _completed_ out parameter, their applications could end up in an infinite loop. What makes matters worse is that the sample code on the MSDN page for `Encoder.Convert` and `Decoder.Convert` is also susceptible to this pattern, so we suspect a large number of customers may have based their own application code on the sample.\r\n\r\n## Regression?\r\n\r\nYes, from .NET Framework 4.x and .NET Core 2.x. One half of this change was introduced in .NET Core 3.0 (see https://github.com/dotnet/coreclr/commit/43a5159d39bd52195c5095da4006183f791c696b); the other half was introduced in .NET Core 3.1 (see https://github.com/dotnet/coreclr/commit/c07ec4cd2f88c23edc87500893576d83c20f2e6d).\r\n\r\n## Testing\r\n\r\nThe reversion is already committed in the 5.0 branches (see https://github.com/dotnet/runtime/commit/d49b541ab156d992aeb4bbe410f7a816bb0ac039), so we have been getting test coverage on those nightlies. No notable regressions have been reported.\r\n\r\n## Risk\r\n\r\nSomewhere between minimal and moderate. It's possible that some applications may have taken a dependency on the new behavior. See for instance https://github.com/dotnet/aspnetcore/pull/17747, where ASP.NET appears to have unintentionally taken a dependency on the new behavior and had to proactively make a change so that they behave correctly both before and after this PR goes through.\r\n\r\n/cc @tarekgh @anurse @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/27996","RelatedDescription":"Closed or merged PR \"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes\" (#27996)"},{"Id":"550396592","IsPullRequest":true,"CreatedAt":"2020-01-15T20:04:13","Actor":"dotnet-maestro-bot","Number":"27999","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27999","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27999)"},{"Id":"550393850","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:13","Actor":"mmitche","Number":"27998","RawContent":null,"Title":"[release/3.1] Update branding to 3.1.2","State":"closed","Body":"eng/Versions.props doesn't seem to be the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27998","RelatedDescription":"Closed or merged PR \"[release/3.1] Update branding to 3.1.2\" (#27998)"},{"Id":"550393454","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:06","Actor":"mmitche","Number":"27997","RawContent":null,"Title":"[release/3.0] Update branding to 3.0.3","State":"closed","Body":"eng/Versions.props doesn't seem to the the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27997","RelatedDescription":"Closed or merged PR \"[release/3.0] Update branding to 3.0.3\" (#27997)"},{"Id":"549295331","IsPullRequest":true,"CreatedAt":"2020-01-15T03:31:02","Actor":"VSadov","Number":"27990","RawContent":null,"Title":"Revert CPU clipping in the presence of CPU quota to 3.0, 2.x behavior.","State":"closed","Body":"This is a fix for an issue tracked by https://github.com/dotnet/runtime/issues/622. \r\nIt is a reversal of a change made in 3.1 vs. 3.0 and 2.X \r\n(Basically reverting https://github.com/dotnet/coreclr/pull/26806)\r\nThe change was an improvement in some cases, but was causing considerable performance regressions in constrained container scenarios.\r\n\r\n## Customer Impact\r\nCustomers report performance regressions in constrained container scenarios when CPU quotas are applied.\r\n\r\n## Regression?\r\nYes. From 3.0 and 2.x\r\n\r\n## Testing\r\nRegular PR tests. \r\nVerified that the most affected aspnet benchmarks are back to 3.0 performance levels.\r\n\r\n## Risk\r\nLow: This is reverting to behavior that we had for a few releases.","Url":"https://github.com/dotnet/coreclr/pull/27990","RelatedDescription":"Closed or merged PR \"Revert CPU clipping in the presence of CPU quota to 3.0, 2.x behavior.\" (#27990)"},{"Id":"549775170","IsPullRequest":true,"CreatedAt":"2020-01-14T22:47:49","Actor":"Anipik","Number":"27994","RawContent":null,"Title":"update branding for coreclr 2.1.16","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27994","RelatedDescription":"Closed or merged PR \"update branding for coreclr 2.1.16\" (#27994)"},{"Id":"549842263","IsPullRequest":true,"CreatedAt":"2020-01-14T22:05:50","Actor":"dotnet-maestro-bot","Number":"27995","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\n* @mmitche\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27995","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27995)"},{"Id":"549732492","IsPullRequest":true,"CreatedAt":"2020-01-14T21:54:02","Actor":"Anipik","Number":"27993","RawContent":null,"Title":"update branding to 3.0.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27993","RelatedDescription":"Closed or merged PR \"update branding to 3.0.3\" (#27993)"},{"Id":"537840266","IsPullRequest":true,"CreatedAt":"2020-01-14T18:36:19","Actor":"AndyAyersMS","Number":"27972","RawContent":null,"Title":"[release/3.1] Port fix for JIT silent bad code","State":"closed","Body":"Release/3.1 port of dotnet/runtime#797.\r\nFixes dotnet/runtime#764\r\n\r\nThe jit might incorrectly order a read from a struct field with an operation\r\nthat modifies the field, so that the read returns the wrong value.\r\n\r\n## Customer Impact\r\nSilent bad code; program behaves incorrectly.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing framework\r\nor test code.\r\n\r\n## Risk\r\n**Low**: the jit is now spilling the eval stack entries to temps in cases where it\r\ndid not before; this should be conservatively safe.\r\n\r\ncc @BruceForstall \r\n\r\n____\r\n\r\nIf we're appending an assignment whose LHS is is a location within a local\r\nstruct, we need to spill all references to that struct from the eval stack.\r\n\r\nUpdate the existing logic for this to handle the case where the LHS is a field\r\nof a local struct, and the field is updated by unusual means (here, `initobj`).\r\n\r\nFixes dotnet/runtime#764.","Url":"https://github.com/dotnet/coreclr/pull/27972","RelatedDescription":"Closed or merged PR \"[release/3.1] Port fix for JIT silent bad code\" (#27972)"},{"Id":"538649669","IsPullRequest":true,"CreatedAt":"2020-01-14T18:35:50","Actor":"AndyAyersMS","Number":"27973","RawContent":null,"Title":"Release/3.1 port of dotnet/runtime#239","State":"closed","Body":"Fix for #27923\r\n\r\nThe jit might fail to locate a class handle for a ref class, leading to an\r\nunexpected crash while jitting.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash/exception\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: the jit will now fall back to using the handle for System.Object if no\r\nbetter option can be found.\r\n\r\ncc @BruceForstall\r\n\r\n____\r\n\r\nIn some cases we may end up in lvaSetClass without a valid ref class handle\r\nfrom either the IR or the stack. Use the handle for object as a conservative\r\nfallback.","Url":"https://github.com/dotnet/coreclr/pull/27973","RelatedDescription":"Closed or merged PR \"Release/3.1 port of dotnet/runtime#239\" (#27973)"},{"Id":"544722108","IsPullRequest":true,"CreatedAt":"2020-01-14T18:35:32","Actor":"sywhang","Number":"27979","RawContent":null,"Title":"[3.1 port] Fix EventSource to stop ignoring EventCommand.SendManifest","State":"closed","Body":"This is a port of https://github.com/dotnet/runtime/pull/848 to 3.1 servicing. \r\n\r\n## Customer Impact\r\n\r\nSending ETW command to trigger manifest file to be generated does not work anymore. This blocks some customers who are relying on ETW commands to generate multiple ETL files per session, since the files they generate after the initial file don't have any test. \r\n\r\n## Regression?\r\n\r\nYes, from https://github.com/dotnet/coreclr/pull/11639/. This is some time around .NET Core 2.0 timeframe. \r\n\r\n## Testing\r\n\r\nAdded automated test as part of https://github.com/dotnet/runtime/pull/848. \r\nI also verified the fix with the repro sent by the customer who initially reported this (Azure Stack). \r\n\r\n## Risk\r\n\r\nLow. The code path being changed affects only ETW, and is a relatively simple change. I've tested the scenario with all the ETW tests we have and verified that they pass. ","Url":"https://github.com/dotnet/coreclr/pull/27979","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix EventSource to stop ignoring EventCommand.SendManifest\" (#27979)"},{"Id":"546543040","IsPullRequest":true,"CreatedAt":"2020-01-14T18:16:16","Actor":"Anipik","Number":"27981","RawContent":null,"Title":"update branding to 3.1.2","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27981","RelatedDescription":"Closed or merged PR \"update branding to 3.1.2\" (#27981)"},{"Id":"549469260","IsPullRequest":false,"CreatedAt":"2020-01-14T10:23:34","Actor":"DavidSchuldenfrei","Number":"27992","RawContent":null,"Title":"Better checking of Null Reference when fields are validated/initialized by method","State":"open","Body":"The idea, is to add attributes to `System.Diagnostics.CodeAnalysis` namespace.\r\nThese attribute would be:\r\n```\r\n[AttributeUsage(AttributeTargets.Parameter, Inherited = false)]\r\nsealed class NotNullAfterAttribute : Attribute { }\r\n```\r\nThis Attribute would behave in a way similar to `NotNullWhenAttribute`, but would guaranty that the parameter isn't null if the function returns. \r\n\r\nThis would be used to handle cases like the following\r\n```\r\nprivate void ValidateParams([NotNullAfter] object? param1)\r\n{\r\n    if (param1 == null)\r\n        throw new Exception();\r\n}\r\n```\r\nAnother set of attributes would be similar to `NotNullWhenAttribute` and `NotNullAfterAttribute`, but would work on members of the class, instead of function parameters\r\n```\r\n[AttributeUsage(AttributeTargets.Method, AllowMultiple = true, Inherited = false)]\r\nsealed class MemberNotNullWhenAttribute: Attribute\r\n{\r\n    public MemberNotNullWhenAttribute(string memberName, bool returnValue)\r\n    {\r\n         MemberName = memberName;\r\n         ReturnValue = returnValue;\r\n    }\r\n    public string MemberName { get; }\r\n    public bool ReturnValue { get; }\r\n}\r\n\r\n[AttributeUsage(AttributeTargets.Method, AllowMultiple = true, Inherited = false)]\r\nsealed class MemberNotNullAfterAttribute: Attribute\r\n{\r\n    public MemberNotNullAfterAttribute(string memberName) => MemberName = memberName;\r\n    public string MemberName { get; }\r\n}\r\n```\r\nThe reason for such attributes would be to handle (very common) code like the following (pseudo-code)\r\n```\r\n[MemberNotNullAfter(\"field1\")]\r\n[MemberNotNullAfter(\"field2\")]\r\n[MemberNotNullAfter(\"Property\")]\r\nprivate void ValidateState()\r\n{\r\n   if (field1 == null)\r\n      throw new NotInitializedEception();\r\n   if (field2 == null)\r\n      throw new ObjectDisposedException();\r\n   if (Property == null)\r\n      Property = new object();\r\n    //...\r\n}\r\n\r\n[MemberNotNullWhen(\"field1\", true)]\r\n[MemberNotNullWhen(\"field2\", true)]\r\n[MemberNotNullWhen(\"Property\", true)]\r\nprivate void IsValid()\r\n{\r\n    if (field1 == null)\r\n        return false;\r\n    if (field2 == null)\r\n      return false;\r\n    if (Property == null)\r\n      return false;\r\n    return true;\r\n}\r\n```\r\nWith the above, the compiler would know in code like\r\n```\r\nvoid Method()\r\n{\r\n    ValidateState();\r\n    field1.DoSomething();\r\n    field2.DoSomethingElse();\r\n    Property.DoAgain();\r\n}\r\n\r\nvoid Method2()\r\n{\r\n    if (IsValid())\r\n    {\r\n        field1.DoSomething();\r\n        field2.DoSomethingElse();\r\n        Property.DoAgain();\r\n    }\r\n}\r\n```\r\nEven if field1, field2, and Property may be null, as per their definition, not to give any warning.\r\n\r\nAnother use for this, is if there is a method `Initialize` which initializes all fields, such a method could be called from constructors, to initialize Non Null references. In this case also the compiler shouldn't give any warnings\r\n","Url":"https://github.com/dotnet/coreclr/issues/27992","RelatedDescription":"Open issue \"Better checking of Null Reference when fields are validated/initialized by method\" (#27992)"},{"Id":"548404728","IsPullRequest":false,"CreatedAt":"2020-01-11T09:11:27","Actor":"stoichammer","Number":"27988","RawContent":null,"Title":"andra","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/issues/27988","RelatedDescription":"Closed issue \"andra\" (#27988)"},{"Id":"548401484","IsPullRequest":false,"CreatedAt":"2020-01-11T08:35:17","Actor":"Kevin920920","Number":"27987","RawContent":null,"Title":"BUILD: Error: Failed to generate version headers . And System.TimeoutException","State":"open","Body":"E:\\Downloads\\coreclr-3.1.0>build.cmd\r\nBUILD: Starting Build at 15:58:14.03\r\nBUILD: Searching for Visual Studio 2017 or later installation\r\nBUILD: \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\"\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.4.1\r\n** Copyright (c) 2019 Microsoft Corporation\r\n**********************************************************************\r\nBUILD: Commencing CoreCLR product build\r\nBUILD: Checking prerequisites\r\nBUILD: Number of processor cores 4\r\n  未能从“https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.net.compilers.toolset/3.3.0-beta2-19367-02/microsoft.net.compilers.toolset.3.3.0-beta2-19367-02.nupkg”下载包“Microsoft.Net.Compilers.Toolset.3.3.0-beta2-19367-02”。\r\n  由于在 60000 毫秒内未接收到数据，“https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.net.compilers.toolset/3.3.0-beta2-19367-02/microsoft.net.compilers.toolset.3.3.0-beta2-19367-02.nupkg”的下载超时。\r\n    Exception of type 'System.TimeoutException' was thrown.\r\n  未能从“https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.net.compilers.toolset/3.3.0-beta2-19367-02/microsoft.net.compilers.toolset.3.3.0-beta2-19367-02.nupkg”下载包“Microsoft.Net.Compilers.Toolset.3.3.0-beta2-19367-02”。\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: 远程主机强迫关闭了一个现有的连接。.\r\n    远程主机强迫关闭了一个现有的连接。\r\n  E:\\Downloads\\coreclr-3.1.0\\eng\\empty.csproj 的还原在 17.91 min 内完成。\r\nE:\\Downloads\\coreclr-3.1.0\\.packages\\microsoft.build.tasks.git\\1.0.0-beta2-19367-01\\build\\Microsoft.Build.Tasks.Git.targets(24,5): error : 无法定位包含目录 'E:\\Downloads\\coreclr-3.1.0\\eng' 的存储库。 [E:\\Downloads\\coreclr-3.1.0\\eng\\empty.csproj]\r\nE:\\Downloads\\coreclr-3.1.0\\.packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19461.7\\tools\\Version.targets(53,5): error : SourceRevisionId is not set, which means the SourceLink targets are not included in the build. Those are needed to produce a correct sha for our build outputs. [E:\\Downloads\\coreclr-3.1.0\\eng\\empty.csproj]\r\n\r\n生成失败。\r\n\r\nE:\\Downloads\\coreclr-3.1.0\\.packages\\microsoft.build.tasks.git\\1.0.0-beta2-19367-01\\build\\Microsoft.Build.Tasks.Git.targets(24,5): error : 无法定位包含目录 'E:\\Downloads\\coreclr-3.1.0\\eng' 的存储库。 [E:\\Downloads\\coreclr-3.1.0\\eng\\empty.csproj]\r\nE:\\Downloads\\coreclr-3.1.0\\.packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19461.7\\tools\\Version.targets(53,5): error : SourceRevisionId is not set, which means the SourceLink targets are not included in the build. Those are needed to produce a correct sha for our build outputs. [E:\\Downloads\\coreclr-3.1.0\\eng\\empty.csproj]\r\n    0 个警告\r\n    2 个错误\r\n\r\n已用时间 00:17:55.82\r\nBuild failed.\r\nBUILD: Error: Failed to generate version headers.","Url":"https://github.com/dotnet/coreclr/issues/27987","RelatedDescription":"Open issue \"BUILD: Error: Failed to generate version headers . And System.TimeoutException\" (#27987)"},{"Id":"544464942","IsPullRequest":false,"CreatedAt":"2020-01-11T08:16:58","Actor":"Joowoo30","Number":"27978","RawContent":null,"Title":"How can I use some headers in gc.cpp.","State":"closed","Body":"Hello.\r\nI forked coreclr code and added some test code in it to analyze gc behavior.\r\nbut I can't use #include <dlfcn.h> in it. (Exactly in coreclr/src/gc/gc.cpp)\r\nTo solve this problem, I edited CmakeLists files many times (Adding target_link_libraries dl and so on)\r\nbut I fail to build coreclr with my code.\r\n\r\nhow can I use #include <dlfcn.h> in gc.cpp?\r\nI have to use dlopen and dlsym for my test.\r\n\r\nI would be really grateful if someone let me know.\r\nThank you.","Url":"https://github.com/dotnet/coreclr/issues/27978","RelatedDescription":"Closed issue \"How can I use some headers in gc.cpp.\" (#27978)"},{"Id":"548326464","IsPullRequest":true,"CreatedAt":"2020-01-10T22:44:49","Actor":"CarolEidt","Number":"27986","RawContent":null,"Title":"Port of dotnet/runtime#1059 to 3.1 branch","State":"open","Body":"This is the fix for #27924. This is a GC hole bug that was found externally, #27590.\r\nThe cause is that the JIT was using the target type of the subtract when it needed\r\nto make a copy of the source, but it needs to use the source type.\r\n\r\n## Customer Impact\r\nCorruption of state that is non-deterministic and hard to track down.\r\n\r\n## Regression?\r\nNot a recent regression, but exposed by Unsafe.ByteOffset.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightfoward and only impacts 3 lines of code.\r\n\r\n## Code Reviewer\r\n@jaschook and @jkotas","Url":"https://github.com/dotnet/coreclr/pull/27986","RelatedDescription":"Open PR \"Port of dotnet/runtime#1059 to 3.1 branch\" (#27986)"},{"Id":"547818433","IsPullRequest":true,"CreatedAt":"2020-01-10T01:45:51","Actor":"AntonLapounov","Number":"27985","RawContent":null,"Title":"[3.1 port] Fix GC heap corruption on ARM","State":"open","Body":"Port of dotnet/runtime#1389 to 3.1 branch.  Applications may crash in GC code due to GC heap corruption caused by incorrect padding size calculation on ARM.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crashes.\r\n\r\n## Regression?\r\nNo.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: one-line fix of the incorrect calculation.","Url":"https://github.com/dotnet/coreclr/pull/27985","RelatedDescription":"Open PR \"[3.1 port] Fix GC heap corruption on ARM\" (#27985)"},{"Id":"547811395","IsPullRequest":true,"CreatedAt":"2020-01-10T01:18:37","Actor":"CarolEidt","Number":"27984","RawContent":null,"Title":"Port PR #258 to 3.1","State":"open","Body":"Port of dotnet/runtime#258 to 3.1 branch.\r\nThis is the fix for #27937. The manifestation is an AV in the JIT. Although it isn't SBCG, it is difficult for the developer to track down that this is a JIT bug, rather than caused by something in their code.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crashes.\r\n\r\n## Regression?\r\nNo.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightforward and only prevents the AV case.\r\n\r\n## Code Reviewers\r\nAuthored by @saucecontrol, reviewed by @CarolEidt and @swaroop-sridhar ","Url":"https://github.com/dotnet/coreclr/pull/27984","RelatedDescription":"Open PR \"Port PR #258 to 3.1\" (#27984)"},{"Id":"547728284","IsPullRequest":true,"CreatedAt":"2020-01-09T21:16:47","Actor":"CarolEidt","Number":"27983","RawContent":null,"Title":"Port fix for #1241 to 3.1","State":"open","Body":"Port of dotnet/runtime#1279 to 3.1 branch.\r\nThis is the fix for dotnet/runtime#1241. This is a SBCG bug reported externally. When a struct is partially written, the JIT fails to invalidate assertions (in this case that the entire struct had been zero'd). This results in incorrect optimization. The fix is to invalidate the assertions in the partial write case.\r\n\r\n## Customer Impact\r\nSBCG resulting in incorrect behavior.\r\n\r\n## Regression?\r\nNot a recent regression, but exposed by doing more optimizations on structs.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightforward and kills assertions which only disables optimizations.\r\n\r\n## Code Reviewer\r\n@briansull and @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/27983","RelatedDescription":"Open PR \"Port fix for #1241 to 3.1\" (#27983)"},{"Id":"546575203","IsPullRequest":false,"CreatedAt":"2020-01-08T20:46:40","Actor":"assyadh","Number":"27982","RawContent":null,"Title":"CoreCLR failed to run tests on v3.1 tag \" The wrappers must be compiled and placed at\"","State":"closed","Body":"Hi,\r\n\r\nI am building coreclr/corefx from source, and encountering a weird issue when trying to run the coreclr tests. This occurs when testing the 3.1 tag, testing 2.1 works fine.\r\n\r\nAt first was seeing similar errors as https://github.com/dotnet/coreclr/issues/27725 when testing coreclr on amazon linux and ended up importing a patch based on https://github.com/dotnet/coreclr/pull/27815.\r\n\r\nNow I am seeing the following error:\r\n\r\n```\r\n/build/coreclr/tests/tests.targets(19,5): error :  The wrappers must be compiled and placed at /build/coreclr/tests/../bin/tests/Linux.x64.Release/tests/\\*\\ before they can be run, Do a clean Test Run [/build/coreclr/tests/runtest.proj]\r\n```\r\n\r\n\r\nWhen running:\r\n\r\n```\r\ntests/runtest.sh     \r\n--testRootDir=/build/coreclr/bin/tests/Linux.x64.Release     \r\n--testNativeBinDir=/build/coreclr/bin/obj/Linux.x64.Release/tests     \r\n--coreClrBinDir=/build/coreclr/bin/Product/Linux.x64.Release     \r\n--mscorlibDir=/build/coreclr/bin/Product/Linux.x64.Release     \r\n--coreFxBinDir=/build/corefx/bin/runtime/netcoreapp-Linux-Release-x64 \r\nrelease\r\n```\r\n\r\nI have been pulling my hairs on what is going on here, I can build/test 2.1 properly, but can't figure out what changed with 3.1. It looks like a path issue but I don't see where the hiccup occurs.\r\n\r\n\r\nAny thoughts @jashook? Thanks for the help 👍 \r\n\r\n\r\nFull log:\r\n\r\n```\r\ntests/runtest.sh     --testRootDir=/build/coreclr/bin/tests/Linux.x64.Release     --testNativeBinDir=/build/coreclr/bin/obj/Linux.x64.Release/tests     --coreClrBinDir=/build/coreclr/bin/Product/Linux.x64.Release     --mscorlibDir=/build/coreclr/bin/Product/Linux.x64.Release     --coreFxBinDir=/build/corefx/bin/runtime/netcoreapp-Linux-Release-x64 release\r\nRunning on  CPU- x64\r\nBuild Architecture            : x64\r\nBuild Configuration           : Release\r\nTest Location                 : /build/coreclr/bin/tests/Linux.x64.Release\r\nProduct Location              : /build/coreclr/bin/Product/Linux.x64.Release\r\nTest Native Bin Location      : /build/coreclr/bin/obj/Linux.x64.Release/tests\r\n\r\nSkipping xunit wrapper build. If build-test was called on a different\r\nhost_os or arch the test run will most likely have failures.\r\npython /build/coreclr/tests/runtest.py -arch x64 -build_type Release -test_location /build/coreclr/bin/tests/Linux.x64.Release -product_location /build/coreclr/bin/Product/Linux.x64.Release -test_native_bin_location /build/coreclr/bin/obj/Linux.x64.Release/tests\r\nhost_os                  :Linux\r\narch                     :x64\r\nbuild_type               :Release\r\ncoreclr_repo_location    :/build/coreclr\r\nproduct_location         :/build/coreclr/bin/Product/Linux.x64.Release\r\ncore_root                :/build/coreclr/bin/tests/Linux.x64.Release/Tests/Core_Root\r\ntest_location            :/build/coreclr/bin/tests/Linux.x64.Release\r\ntest_native_bin_location :None\r\nFound COMPlus variables in the current environment\r\n\r\nUnset COMPlus_gcServer\r\nUnset COMPlus_EnableEventLog\r\n\r\nTestEnv: /tmp/tmpMgAmE0\r\n\r\nContents:\r\n\r\n# Temporary test env for test run.\r\nexport COMPlus_gcServer=0\r\nexport COMPlus_EnableEventLog=1\r\n\r\n\r\nSetting __TestTimeout=900000\r\nSetting CORE_ROOT=/build/coreclr/bin/tests/Linux.x64.Release/Tests/Core_Root\r\nSetting __TestEnv=/tmp/tmpMgAmE0\r\nDownload and overwrite xunit.console.dll in Core_Root\r\n/build/coreclr/dotnet.sh msbuild /build/coreclr/tests/runtest.proj /p:Runtests=true /clp:showcommandline /fileloggerparameters:\"Verbosity=normal;LogFile=/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release.log\" /fileloggerparameters1:\"WarningsOnly;LogFile=/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release.wrn\" /fileloggerparameters2:\"ErrorsOnly;LogFile=/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release.err\" /consoleloggerparameters:Summary /p:__BuildOS=Linux /p:__BuildArch=x64 /p:__BuildType=Release /p:__LogsDir=/build/coreclr/bin/Logs\r\nRunning init-dotnet.sh\r\nInstalling dotnet using Arcade...\r\nRunning: /build/coreclr/.dotnet/dotnet msbuild /build/coreclr/tests/runtest.proj /p:Runtests=true /clp:showcommandline /fileloggerparameters:\"Verbosity=normal;LogFile=/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release.log\" /fileloggerparameters1:\"WarningsOnly;LogFile=/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release.wrn\" /fileloggerparameters2:\"ErrorsOnly;LogFile=/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release.err\" /consoleloggerparameters:Summary /p:__BuildOS=Linux /p:__BuildArch=x64 /p:__BuildType=Release /p:__LogsDir=/build/coreclr/bin/Logs\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/build/coreclr/tests/tests.targets(19,5): error :  The wrappers must be compiled and placed at /build/coreclr/tests/../bin/tests/Linux.x64.Release/tests/\\*\\ before they can be run, Do a clean Test Run [/build/coreclr/tests/runtest.proj]\r\n\r\nBuild FAILED.\r\n\r\n/build/coreclr/tests/tests.targets(19,5): error :  The wrappers must be compiled and placed at /build/coreclr/tests/../bin/tests/Linux.x64.Release/tests/\\*\\ before they can be run, Do a clean Test Run [/build/coreclr/tests/runtest.proj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.41\r\nERROR: An error occurred in /build/coreclr/.dotnet/dotnet msbuild /build/coreclr/tests/runtest.proj /p:Runtests=true /clp:showcommandline /fileloggerparameters:\"Verbosity=normal;LogFile=/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release.log\" /fileloggerparameters1:\"WarningsOnly;LogFile=/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release.wrn\" /fileloggerparameters2:\"ErrorsOnly;LogFile=/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release.err\" /consoleloggerparameters:Summary /p:__BuildOS=Linux /p:__BuildArch=x64 /p:__BuildType=Release /p:__LogsDir=/build/coreclr/bin/Logs. Check logs under /build/coreclr.\r\nTest run finished.\r\nParsing test results from (/build/coreclr/bin/Logs/TestRunResults_Linux_x64_Release)\r\nUnable to find testRun.xml. This normally means the tests did not run.\r\nIt could also mean there was a problem logging. Please run the tests again.\r\n\r\n\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/27982","RelatedDescription":"Closed issue \"CoreCLR failed to run tests on v3.1 tag \" The wrappers must be compiled and placed at\"\" (#27982)"},{"Id":"537829085","IsPullRequest":true,"CreatedAt":"2020-01-08T16:51:52","Actor":"mateoatr","Number":"27971","RawContent":null,"Title":"Fix memory leaked caused by Marshal.GetFunctionPointerForDelegate","State":"closed","Body":"Issue: https://github.com/dotnet/runtime/issues/353\r\n\r\nCustomer impact\r\n---\r\n\r\nMemory leak when using Marshal.GetFunctionPointerForDelegate\r\n\r\nRegression?\r\n---\r\n\r\nNot a regression -- introduced in Windows Phone CoreCLR port.\r\n\r\nRisk\r\n---\r\n\r\nLow\r\n\r\n----\r\n\r\ncc @jeffschwMSFT @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/27971","RelatedDescription":"Closed or merged PR \"Fix memory leaked caused by Marshal.GetFunctionPointerForDelegate\" (#27971)"},{"Id":"545822848","IsPullRequest":false,"CreatedAt":"2020-01-06T16:44:59","Actor":"mikernet","Number":"27980","RawContent":null,"Title":"[Deleted: Posted in wrong repository]","State":"closed","Body":"Gah, wrong repository...","Url":"https://github.com/dotnet/coreclr/issues/27980","RelatedDescription":"Closed issue \"[Deleted: Posted in wrong repository]\" (#27980)"},{"Id":"542571528","IsPullRequest":false,"CreatedAt":"2019-12-26T15:50:11","Actor":"Macromullet","Number":"27977","RawContent":null,"Title":"Different 32-bit marshalling behavior with on Windows with 3.1","State":"closed","Body":"I posted about this last week, but with the holidays it hasn't received any traction. https://github.com/dotnet/core/issues/3950#issuecomment-567792601\r\n\r\nIn a nutshell, a test that has behaved perfectly under .net framework and .net core, suddenly stopped working after an upgrade to .net core 3.1.\r\n\r\nUpdate: This appears to be a difference between how tests are run with the 16.4 Microsoft.NET.Test.Sdk project type. When using 16.2, even when using x86 as the processor architecture (under Tests->Processor Architecture for AnyCPU Projects) it still is using 64-bit. In 16.4, it actually runs the test in 32-bit mode, causing the test to fail.","Url":"https://github.com/dotnet/coreclr/issues/27977","RelatedDescription":"Closed issue \"Different 32-bit marshalling behavior with on Windows with 3.1\" (#27977)"},{"Id":"542289671","IsPullRequest":false,"CreatedAt":"2019-12-25T08:20:59","Actor":"peppy","Number":"27976","RawContent":null,"Title":"Finalizer called without ctor in optimized compilation case","State":"closed","Body":"We recently encountered a bug where an object expected to be in an initialized state at point of finalizing was not. Minimal reproduction case:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Diagnostics;\r\n\r\nnamespace ReproduceFinalizerFailure\r\n{\r\n    class Program\r\n    {\r\n        public static bool CtorReached;\r\n        public static bool FinalizerReached;\r\n\r\n        static void Main()\r\n        {\r\n            try\r\n            {\r\n                GetObject();\r\n            }\r\n            catch\r\n            {\r\n            }\r\n\r\n            GC.Collect();\r\n            GC.WaitForPendingFinalizers();\r\n\r\n            Trace.Assert(!CtorReached, \"Constructor should not be reached\");\r\n            Trace.Assert(!FinalizerReached, \"Finalizer should not be reached\");\r\n        }\r\n\r\n        private static void GetObject()\r\n        {\r\n            var obj = throwException();\r\n            new FinalizingObject(obj);\r\n        }\r\n\r\n        private static object throwException()\r\n        {\r\n            throw new Exception();\r\n        }\r\n    }\r\n\r\n    class FinalizingObject\r\n    {\r\n        public FinalizingObject(object obj) => Program.CtorReached = true;\r\n\r\n        ~FinalizingObject() => Program.FinalizerReached = true;\r\n    }\r\n}\r\n```\r\n\r\n```sh\r\n➜  ReproduceFinalizerFailure  dotnet --version\r\n3.1.100\r\n➜  ReproduceFinalizerFailure  dotnet run -c Release\r\nProcess terminated. Assertion Failed\r\nFinalizer should not be reached\r\n   at ReproduceFinalizerFailure.Program.Main() in /Users/dean/Projects/ReproduceFinalizerFailure/ReproduceFinalizerFailure/Program.cs:line 27\r\n```\r\n\r\nThis only happens with build configuration Release and debugger detached.\r\n\r\nPotentially related to https://github.com/dotnet/runtime/issues/764.","Url":"https://github.com/dotnet/coreclr/issues/27976","RelatedDescription":"Closed issue \"Finalizer called without ctor in optimized compilation case\" (#27976)"},{"Id":"538806283","IsPullRequest":false,"CreatedAt":"2019-12-18T06:40:39","Actor":"zengqinglei","Number":"27974","RawContent":null,"Title":"Unable to delete assembly file after plugin uninstall","State":"closed","Body":"**Describe the bug**\r\n\r\nWhen I use the sample code: https://github.com/dotnet/samples/tree/master/core/tutorials/Unloading\r\nThen I want to remove the assembly file after the plugin is uninstalled and I get an exception:\r\n\r\n![image](https://user-images.githubusercontent.com/7374317/70961451-cb998d80-20bc-11ea-837c-601b70c8e52a.png)\r\n\r\n**Run Environment**\r\n* .NET CORE 3.1\r\n* Windows 10 \r\n![image](https://user-images.githubusercontent.com/7374317/70961722-a8231280-20bd-11ea-852a-eb42a443ac45.png)\r\n\r\nI hope to get your help soon, thank you!","Url":"https://github.com/dotnet/coreclr/issues/27974","RelatedDescription":"Closed issue \"Unable to delete assembly file after plugin uninstall\" (#27974)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"553912022","IsPullRequest":true,"CreatedAt":"2020-01-23T03:05:55","Actor":"dotnet-maestro[bot]","Number":"13205","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2edc82a1-19d9-431c-901b-08d76d41c6c3\r\n- **Build**: 20200114.1\r\n- **Date Produced**: 1/14/2020 7:24 PM\r\n- **Commit**: 247f60e9e34a03ed99e855eb1ea0c20931a968db\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.2-servicing.20064.1\r\n\r\n[marker]: <> (End:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13205","RelatedDescription":"Open PR \"[release/3.1.2xx] Update dependencies from dotnet/templating\" (#13205)"},{"Id":"553911990","IsPullRequest":true,"CreatedAt":"2020-01-23T03:05:43","Actor":"dotnet-maestro[bot]","Number":"13204","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820\r\n- **Build**: 20200118.1\r\n- **Date Produced**: 1/18/2020 7:44 PM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20068.1\r\n\r\n[marker]: <> (End:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13204","RelatedDescription":"Open PR \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#13204)"},{"Id":"553876342","IsPullRequest":true,"CreatedAt":"2020-01-23T01:20:36","Actor":"dotnet-maestro[bot]","Number":"13203","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200122.3\r\n- **Date Produced**: 1/22/2020 11:30 PM\r\n- **Commit**: 3ff3791a1b3f8af0c3fadf3988012c69ac16c28f\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20072.3\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13203","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13203)"},{"Id":"551137527","IsPullRequest":true,"CreatedAt":"2020-01-21T17:07:26","Actor":"dotnet-maestro[bot]","Number":"13195","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: d54a5172-b4ce-4f86-d36b-08d6f038a15f\r\n- **Build**: 20200116.10\r\n- **Date Produced**: 1/17/2020 12:25 AM\r\n- **Commit**: bd11e9503c35094d56814f6399c58c77f4220f71\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.3-servicing.20066.10\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13195","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore\" (#13195)"},{"Id":"552463283","IsPullRequest":true,"CreatedAt":"2020-01-20T19:45:42","Actor":"dotnet-maestro[bot]","Number":"13202","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: fa87930c-8514-45a1-0d47-08d6910cd73b\r\n- **Build**: 20200120.2\r\n- **Date Produced**: 1/20/2020 6:09 PM\r\n- **Commit**: 316fbdd10e8829faaf9157ecbb05795e75b618f7\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.103-servicing.20070.2\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13202","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#13202)"},{"Id":"552198555","IsPullRequest":true,"CreatedAt":"2020-01-20T11:00:43","Actor":"dotnet-maestro[bot]","Number":"13201","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200120.1\r\n- **Date Produced**: 1/20/2020 9:36 AM\r\n- **Commit**: 966115a91565d43cd545c1b8acd83eda2a0cb4cb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20070.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13201","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13201)"},{"Id":"551888915","IsPullRequest":true,"CreatedAt":"2020-01-19T09:40:36","Actor":"dotnet-maestro[bot]","Number":"13200","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200118.5\r\n- **Date Produced**: 1/19/2020 7:40 AM\r\n- **Commit**: 90a093bbbe2c46ef19e301d717bed3cfaa56abb3\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.102-servicing.20068.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13200","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13200)"},{"Id":"551032797","IsPullRequest":true,"CreatedAt":"2020-01-18T21:11:49","Actor":"dotnet-maestro[bot]","Number":"13194","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200118.1\r\n- **Date Produced**: 1/18/2020 7:44 PM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20068.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13194","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13194)"},{"Id":"551669690","IsPullRequest":true,"CreatedAt":"2020-01-18T00:03:50","Actor":"dotnet-maestro[bot]","Number":"13199","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200117.4\r\n- **Date Produced**: 1/17/2020 10:19 PM\r\n- **Commit**: 916b5cba268e1e1e803243004f4276cf40b2dda8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20067.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13199","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13199)"},{"Id":"551611436","IsPullRequest":true,"CreatedAt":"2020-01-17T20:45:36","Actor":"dotnet-maestro[bot]","Number":"13198","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200117.03\r\n- **Date Produced**: 1/17/2020 7:27 PM\r\n- **Commit**: c03f2fe62663edec83d1bc12b4e9f11bd3de5d0e\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20067-03\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13198","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13198)"},{"Id":"551471556","IsPullRequest":true,"CreatedAt":"2020-01-17T16:00:39","Actor":"dotnet-maestro[bot]","Number":"13197","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200117.02\r\n- **Date Produced**: 1/17/2020 2:31 PM\r\n- **Commit**: 00b693a04137fa04d3564d73a65ca87cb4b73d7a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20067-02\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13197","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13197)"},{"Id":"551382296","IsPullRequest":true,"CreatedAt":"2020-01-17T13:25:53","Actor":"dotnet-maestro[bot]","Number":"13196","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200117.1\r\n- **Date Produced**: 1/17/2020 11:37 AM\r\n- **Commit**: 76cc488b8c942815d8b4bfe1de803b916667fe37\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20067.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13196","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13196)"},{"Id":"551015705","IsPullRequest":true,"CreatedAt":"2020-01-17T03:23:55","Actor":"dotnet-maestro[bot]","Number":"13193","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200116.11\r\n- **Date Produced**: 1/17/2020 2:08 AM\r\n- **Commit**: 92224c91b9a8dda9b77c41b583fbd711378adc87\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20066.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13193","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13193)"},{"Id":"550995074","IsPullRequest":true,"CreatedAt":"2020-01-17T02:08:52","Actor":"dotnet-maestro[bot]","Number":"13192","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200116.10\r\n- **Date Produced**: 1/17/2020 1:00 AM\r\n- **Commit**: bef07b2aa26c92a422558436498661efc06d26d8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20066-10\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13192","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13192)"},{"Id":"550429439","IsPullRequest":true,"CreatedAt":"2020-01-16T18:14:46","Actor":"nguerrera","Number":"13183","RawContent":null,"Title":"Bump branding to 2.1.804","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13183","RelatedDescription":"Closed or merged PR \"Bump branding to 2.1.804\" (#13183)"},{"Id":"550521268","IsPullRequest":true,"CreatedAt":"2020-01-16T18:12:04","Actor":"dotnet-maestro[bot]","Number":"13188","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200116.1\r\n- **Date Produced**: 1/16/2020 11:43 AM\r\n- **Commit**: 582ca1fbb0cb2dc7f4a6d1a60b69802b6aab592f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20066.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13188","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13188)"},{"Id":"550448932","IsPullRequest":true,"CreatedAt":"2020-01-16T18:09:31","Actor":"nguerrera","Number":"13186","RawContent":null,"Title":"Merge from 2.1.8xx internal","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13186","RelatedDescription":"Closed or merged PR \"Merge from 2.1.8xx internal\" (#13186)"},{"Id":"550431589","IsPullRequest":true,"CreatedAt":"2020-01-16T17:30:00","Actor":"nguerrera","Number":"13185","RawContent":null,"Title":"Bump branding to 2.1.512","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13185","RelatedDescription":"Closed or merged PR \"Bump branding to 2.1.512\" (#13185)"},{"Id":"550684109","IsPullRequest":true,"CreatedAt":"2020-01-16T10:00:28","Actor":"dotnet-maestro[bot]","Number":"13191","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200115.15\r\n- **Date Produced**: 1/16/2020 8:55 AM\r\n- **Commit**: 36b94a593d57e671c05d5037e79e285f63b3ea58\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20065-15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13191","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13191)"},{"Id":"550638391","IsPullRequest":true,"CreatedAt":"2020-01-16T08:25:32","Actor":"dotnet-maestro[bot]","Number":"13190","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200115.13\r\n- **Date Produced**: 1/16/2020 7:08 AM\r\n- **Commit**: 53d378430fdfca5c2acd9f86c0cf45fece6cfcae\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20065-13\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13190","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13190)"},{"Id":"550595676","IsPullRequest":true,"CreatedAt":"2020-01-16T06:45:31","Actor":"dotnet-maestro[bot]","Number":"13189","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200115.11\r\n- **Date Produced**: 1/16/2020 5:37 AM\r\n- **Commit**: 0ac2af95dbbe4a28c3f79be9d27bae48405ab97a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20065-11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13189","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13189)"},{"Id":"550411048","IsPullRequest":true,"CreatedAt":"2020-01-16T03:49:18","Actor":"dotnet-maestro[bot]","Number":"13180","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200115.08\r\n- **Date Produced**: 1/16/2020 2:28 AM\r\n- **Commit**: faa6e6d483b1b40a5abd3ff9d1747f00621b0764\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20065-08\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13180","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13180)"},{"Id":"550449243","IsPullRequest":true,"CreatedAt":"2020-01-15T23:51:18","Actor":"dotnet-maestro[bot]","Number":"13187","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200115.6\r\n- **Date Produced**: 1/15/2020 8:58 PM\r\n- **Commit**: 36e79022bebf4974a3352a6e1dcc869ae67997fe\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20065.6\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13187","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13187)"},{"Id":"550409888","IsPullRequest":true,"CreatedAt":"2020-01-15T23:49:59","Actor":"dotnet-maestro[bot]","Number":"13179","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: d4b89351-e138-4a22-94d9-08d690bc143a\r\n- **Build**: 20200114.3\r\n- **Date Produced**: 1/14/2020 7:59 PM\r\n- **Commit**: 33e67fafeb3b3a8db5b8384e9654b5512a2e5bae\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.0.3-servicing.20064.3\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13179","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#13179)"},{"Id":"550430421","IsPullRequest":true,"CreatedAt":"2020-01-15T23:23:29","Actor":"nguerrera","Number":"13184","RawContent":null,"Title":"Bump branding to 2.1.609","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13184","RelatedDescription":"Closed or merged PR \"Bump branding to 2.1.609\" (#13184)"},{"Id":"550359498","IsPullRequest":true,"CreatedAt":"2020-01-15T23:15:16","Actor":"dotnet-maestro[bot]","Number":"13178","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200115.3\r\n- **Date Produced**: 1/15/2020 6:32 PM\r\n- **Commit**: 595244ad4a8c4ab7be4e4a78641f4da7b4361aae\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.102-servicing.20065.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13178","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13178)"},{"Id":"550412299","IsPullRequest":true,"CreatedAt":"2020-01-15T23:09:52","Actor":"dotnet-maestro[bot]","Number":"13181","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200114.3\r\n- **Date Produced**: 1/14/2020 11:01 PM\r\n- **Commit**: 193fb40ae0a6fb0a2ecd63cb63db0a95719dbe8d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20064.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13181","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13181)"},{"Id":"550355801","IsPullRequest":true,"CreatedAt":"2020-01-15T22:37:02","Actor":"dotnet-maestro[bot]","Number":"13177","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: fa87930c-8514-45a1-0d47-08d6910cd73b\r\n- **Build**: 20200114.5\r\n- **Date Produced**: 1/15/2020 2:11 AM\r\n- **Commit**: 4ae7f4f500698f71e5c9e46a2dfe3bb96d80e890\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.103-servicing.20064.5\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13177","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#13177)"},{"Id":"550412947","IsPullRequest":true,"CreatedAt":"2020-01-15T22:10:48","Actor":"dotnet-maestro[bot]","Number":"13182","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2f46839f-4f80-4d33-eeee-08d727dab80f\r\n- **Build**: 20200114.1\r\n- **Date Produced**: 1/14/2020 7:24 PM\r\n- **Commit**: 247f60e9e34a03ed99e855eb1ea0c20931a968db\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.2-servicing.20064.1\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13182","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13182)"},{"Id":"549944109","IsPullRequest":true,"CreatedAt":"2020-01-15T03:31:18","Actor":"dotnet-maestro-bot","Number":"13176","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dsplaisted\n* dotnet-bot\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13176","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13176)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"547178727","IsPullRequest":false,"CreatedAt":"2020-01-22T22:29:15","Actor":"Chamberlain91","Number":"1677","RawContent":null,"Title":"Bug with \"is\" operator on int[] and uint[] via object type reference.","State":"closed","Body":"Hello developers,\r\n\r\nI've discovered what I believe to be a bug. In the code below you can see I create two arrays, one of `int` and one of `uint` and assign them both to object. I then check the `is` operator for type comparison.\r\n```cs\r\n            object ai = new int[0];\r\n            object au = new uint[0];\r\n\r\n            Console.WriteLine(ai is uint[]);\r\n            Console.WriteLine(ai is int[]);\r\n            Console.WriteLine(au is uint[]);\r\n            Console.WriteLine(au is int[]);\r\n```\r\nThe output I get is four prints of true, which I would expect only two.\r\n\r\nThe strange thing is if I assign `ai` and `au` to their actual types instead of `object`, then the code works as expected.\r\n\r\nSorry if this should be in the runtime repo or somewhere else.","Url":"https://github.com/dotnet/standard/issues/1677","RelatedDescription":"Closed issue \"Bug with \"is\" operator on int[] and uint[] via object type reference.\" (#1677)"},{"Id":"553525948","IsPullRequest":true,"CreatedAt":"2020-01-22T13:16:19","Actor":"dotnet-maestro[bot]","Number":"1682","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200121.3\r\n- **Date Produced**: 1/21/2020 8:28 PM\r\n- **Commit**: e06e2807048b6bc7b3549b401a1833bed3bcd8c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20071.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1682","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1682)"},{"Id":"549879760","IsPullRequest":false,"CreatedAt":"2020-01-15T00:50:36","Actor":"pushkin-","Number":"1681","RawContent":null,"Title":"Confused about EOL for .NET Standard versions","State":"closed","Body":"I am having trouble understanding EOL support for .NET Standard versions. I could only find information about .NET Core [here](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nI am planning on using .NET Core 3.1. From what I've found out, I can target .NET Standard 2.1 and anything below it.\r\n\r\nIdeally, I would like my .NET Framework code to also reference the .NET Standard code, which means that I have to use .NET Standard 2.0. However, my concern is that .NET Standard 2.0's support will end soonish, at least compared to 2.1.\r\n\r\nIs that correct? What is EOL for .NET Standard 2.0?\r\n\r\nI did also read that Standard versions are fixed/immutable so new APIs get added to new Standard versions (and so maintenance perhaps doesn't make sense for Standard; new versions just get created). Maybe that partially answers my question. ","Url":"https://github.com/dotnet/standard/issues/1681","RelatedDescription":"Closed issue \"Confused about EOL for .NET Standard versions\" (#1681)"},{"Id":"548387889","IsPullRequest":false,"CreatedAt":"2020-01-13T22:25:56","Actor":"replaysMike","Number":"1679","RawContent":null,"Title":"UTF8 Encoding isn't consistent with .Net Framework","State":"closed","Body":"I found a subtle difference that was revealed in a bunch of hashing code I had written a while back for .Net Framework. I wrote a multi-platform test that shows UTF8Encoding is treated slightly different in .Net Standard and I don't really have a good way to solve it yet.\r\n\r\nConsider the following - I encoded a string in hex to guarantee the bytes are the same for the test:\r\n(hopefully github doesn't mangle the expected string, it looks correct after previewing)\r\n\r\n```csharp\r\n[Test]\r\npublic void ShouldEncodeUTF8()\r\n{\r\n    var netFrameworkExpected = \"�\\u0004[\\u0004�\\u0001�\\v,�\\u001cn]�$«�� )�:�YH̗I5�V���Nl7α��i�g_�ZQW%\\u001d�Dy\\u001eЕ\\u0013w�v+\\u0012*��\\u000f*��\\u0019r��}���8��w��&�\\r���\\f����?���&�t�M��[�`kzhz9\\u0015�\\u0012I�\\u001ey_`�\\u0011\\tF��A�Af~��q��%P�����\\u0003�x�(g���e\\u001fM�32\\u0014��\";\r\n    var hex = \"BC045B0488019F0B2CE61C6E5DFC24C2ABE09BDA2029CC3AE9AD5948CC9749359756B1A2D94E6C37CEB189D269AA675FF75A5157251D8544791ED09513779B762B122A89E10F2A98E91972D7CA7DF9F98038DFDB779FED269A0DE3F8FA0C828993B23F85B5A826B474E84DFECD5B87606B7A687A3915C31249CE1E795F609A11094686DF41E99041667E9DD271A0E22550FDD0C3CEF0039678F328679B8590651F4DBE3332148DBA\";\r\n    var bytes = hex.HexToBytes();\r\n    var utf8Encoded = Encoding.UTF8.GetString(bytes);\r\n    Assert.AreEqual(netFrameworkExpected, utf8Encoded);\r\n}\r\n\r\npublic static byte[] HexToBytes(this string hexString)\r\n{\r\n    return Enumerable.Range(0, hexString.Length)\r\n        .Where(x => x % 2 == 0)\r\n        .Select(x => Convert.ToByte(hexString.Substring(x, 2), 16))\r\n        .ToArray();\r\n}\r\n```\r\n\r\nThis test will pass on .Net Framework 4.8, but will fail on .Net Standard 2.0","Url":"https://github.com/dotnet/standard/issues/1679","RelatedDescription":"Closed issue \"UTF8 Encoding isn't consistent with .Net Framework\" (#1679)"},{"Id":"548955096","IsPullRequest":false,"CreatedAt":"2020-01-13T14:10:16","Actor":"richbryant","Number":"1680","RawContent":null,"Title":"RFC: Add a Unit type to the System namespace","State":"open","Body":"**Abstract**\r\n\r\n`Unit`s are proliferating in the NetCore ecosystem.  Nobody can deny their utility (since you can't return a void) but this does introduce the issue of incompatible structs all called `Unit` provided by different packages.\r\n\r\n**Proposal**\r\n\r\nImplement a `System.Unit` struct, taking on board the needs of the major libraries providing `Unit`s at the moment.\r\n\r\n**Benefits**\r\n\r\n- Provide a `Type` that can be used _interchangeably_ between the major libraries\r\n- Provide a `Unit` for future libraries, preventing yet more proliferation\r\n- Make the lives of everyone who has to work these so much better\r\n\r\n*_Example_*\r\n\r\n[This file](https://github.com/richbryant/BetterUnit/blob/master/BetterUnit/Unit.cs) is an example of integrating `System.Reactive.Unit` (paging @ghuntley @onovotny ) with `Mediatr.Unit` (credit @jbogard) and `language-ext.Unit` (credit @louthy ).\r\n\r\nThis covers 90% of the Use Cases for `Unit`.  If this were implemented in the `System` namespace with other Types, it would solve a lot of issues and prevent a lot of future issues .\r\n","Url":"https://github.com/dotnet/standard/issues/1680","RelatedDescription":"Open issue \"RFC: Add a Unit type to the System namespace\" (#1680)"},{"Id":"548237528","IsPullRequest":false,"CreatedAt":"2020-01-10T18:55:55","Actor":"MikeKenyon","Number":"1678","RawContent":null,"Title":"System.Uri decoding automatically and incorrectly","State":"open","Body":"Consider the following block:\r\n\r\n```\r\n            var uri = new Uri($\"https://sample.com/api/go?o=Presentation%20of%20%E2%80%9CGreen%E2%80%9D%20data\");\r\n            var original = uri.OriginalString;\r\n            var modified = uri.ToString();\r\n```\r\n\r\nThe URL contains contents that are not necessarily valid ASCII characters.  In this regard, the modified version of the string shows the content there decoded, while the original (as provided) contains encoded versions of those.\r\n\r\nThis is important because a number of uses for a URL require them to comply to with, [HTTP Headers](https://tools.ietf.org/html/rfc7230#section-3.2.4) for example.  The URI provided was valid as a header.  The URL returned does not.    This comes up when say doing a redirect to it.\r\n\r\nThis can be avoided by using a String to represent the URL location, but that's generally considered a bad practice and anti-pattern.  \r\n\r\nIt would be amazing if we could indicate somehow that while the decoding that gets performed automatically is to be used in such a way that any encoding provided should not be undone.\r\n\r\nI'm thinking a constructor parameter or property.","Url":"https://github.com/dotnet/standard/issues/1678","RelatedDescription":"Open issue \"System.Uri decoding automatically and incorrectly\" (#1678)"},{"Id":"546869832","IsPullRequest":false,"CreatedAt":"2020-01-08T13:45:20","Actor":"sudheer876","Number":"1676","RawContent":null,"Title":"Severity Code Description Project File Line Suppression State Warning The primary reference \"Microsoft.Xrm.Sdk\" could not be resolved because it was built against the \".NETFramework,Version=v4.6.2\" framework.","State":"open","Body":"Severity Code Description Project File Line Suppression State\r\nWarning The primary reference \"Microsoft.Xrm.Sdk\" could not be resolved because it was built against the \".NETFramework,Version=v4.6.2\" framework. This is a higher version than the currently targeted framework \".NETFramework,Version=v4.5.2\".\tCRM\t\t\t\r\n","Url":"https://github.com/dotnet/standard/issues/1676","RelatedDescription":"Open issue \"Severity Code Description Project File Line Suppression State Warning The primary reference \"Microsoft.Xrm.Sdk\" could not be resolved because it was built against the \".NETFramework,Version=v4.6.2\" framework.\" (#1676)"},{"Id":"546426210","IsPullRequest":false,"CreatedAt":"2020-01-07T18:00:20","Actor":"sudheer876","Number":"1675","RawContent":null,"Title":"Please explain any one early binding and late binding with sample example code","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1675","RelatedDescription":"Open issue \"Please explain any one early binding and late binding with sample example code\" (#1675)"},{"Id":"546122602","IsPullRequest":false,"CreatedAt":"2020-01-07T12:32:41","Actor":"sudheer876","Number":"1674","RawContent":null,"Title":"which assembly we have to add for fault exception?","State":"closed","Body":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0246\tThe type or namespace name 'FaultException<>' could not be found (are you missing a using directive or an assembly reference?)","Url":"https://github.com/dotnet/standard/issues/1674","RelatedDescription":"Closed issue \"which assembly we have to add for fault exception?\" (#1674)"},{"Id":"545060077","IsPullRequest":true,"CreatedAt":"2020-01-03T16:21:05","Actor":"lserhii","Number":"1673","RawContent":null,"Title":"Fixed broken link. Close:  #1653","State":"open","Body":"Added missing dot to fix a broken link in docs/faq.md","Url":"https://github.com/dotnet/standard/pull/1673","RelatedDescription":"Open PR \"Fixed broken link. Close:  #1653\" (#1673)"},{"Id":"544232543","IsPullRequest":false,"CreatedAt":"2019-12-31T17:31:26","Actor":"usaguerrilla","Number":"1672","RawContent":null,"Title":"SerialDevice.InputStream.ReadAsync continues on wrong thread","State":"closed","Body":".NET Standard 2.1 (couldn't change that for some reason)\r\nWindows 10, version 1903, Build 18362\r\nx64\r\n\r\n```\r\nint REQUEST_LENGTH = 8;\r\nint RESPONSE_LENGTH = 7;\r\n\r\nbyte[] request = new byte[REQUEST_LENGTH];\r\nbyte[] response = new byte[RESPONSE_LENGTH];\r\n\r\nSerialDevice serialDevice = await SerialDevice.FromIdAsync(serialDeviceId);\r\n\r\nusing (CancellationTokenSource cancellationTokenSource = new CancellationTokenSource(TimeSpan.FromSeconds(1)))\r\n{\r\n   Console.WriteLine(\"A=\" + Thread.CurrentThread.ManagedThreadId);\r\n   Task<IBuffer> readTask = serialDevice.InputStream.ReadAsync(response.AsBuffer(), RESPONSE_LENGTH, InputStreamOptions.None)\r\n                                                    .AsTask(cancellationTokenSource.Token);\r\n   await serialDevice.OutputStream.WriteAsync(request.AsBuffer());\r\n   Console.WriteLine(\"B=\" + Thread.CurrentThread.ManagedThreadId);\r\n   await Task.WhenAll(readTask);\r\n   Console.WriteLine(\"C=\" + Thread.CurrentThread.ManagedThreadId);\r\n}\r\n```\r\n\r\nThis results in the following output:\r\n\r\n```\r\nA=12\r\nB=12\r\nC=8\r\n```\r\n\r\nI didn't ask for thread switch in any of the calls.\r\n\r\nAnother issues is that ReadAsync ignores ReadTimeout / WriteTimeout. Just hangs forever if UART device never replies back.","Url":"https://github.com/dotnet/standard/issues/1672","RelatedDescription":"Closed issue \"SerialDevice.InputStream.ReadAsync continues on wrong thread\" (#1672)"},{"Id":"542974619","IsPullRequest":false,"CreatedAt":"2019-12-27T19:58:14","Actor":"mbrautgithub","Number":"1671","RawContent":null,"Title":"Referring  Microsoft.AspNetCore.App from netstandard2.1","State":"open","Body":"Hi Team,\r\n\r\nI am currently upgrading from .netcoreapp2.1 to netcoreapp3.1 and new to .Net technology.\r\n\r\nAlso, I have projects in my solution which are currently on netstandard2.0 and using below package references.\r\n\r\n<ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.OAuth\" Version=\"2.2.0\" />\r\n</ItemGroup>\r\n\r\nThese references are become absolute since .netcoreapp3.1 and if I would want to continue using these I need to use  FrameworkReference Include=\"Microsoft.AspNetCore.App\"  \r\n\r\nHowever I am getting below error.\r\nNETSDK1073\tThe FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\tC:\\Program Files\\dotnet\\sdk\\3.1.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets\t283\t\t\r\n\r\nConfig file \r\n\r\nProject Sdk=\"Microsoft.NET.Sdk\"\r\n\r\n  PropertyGroup\r\n    TargetFrameworknetstandard2.1TargetFramework\r\n  PropertyGroup\r\n\r\n  ItemGroup\r\n   FrameworkReference Include=\"Microsoft.AspNetCore.App\" \r\n    PackageReference Include=\"Microsoft.Extensions.Caching.StackExchangeRedis\" Version=\"3.1.0\" \r\n  ItemGroup\r\n\r\n\r\nProjec\r\n\r\nPlease help me on the same\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1671","RelatedDescription":"Open issue \"Referring  Microsoft.AspNetCore.App from netstandard2.1\" (#1671)"},{"Id":"542015240","IsPullRequest":false,"CreatedAt":"2019-12-24T06:48:19","Actor":"tanveerbadar","Number":"1670","RawContent":null,"Title":"Potentially Incorrect Terminology in .net Standard FAQ","State":"open","Body":"The [FAQ document ](https://github.com/dotnet/standard/blob/master/docs/faq.md#is-appdomain-part-of-net-standard)for .net standard mentions this:\r\n\r\n> Using #if, also called cross-compiling\r\n\r\nShouldn't it say \"conditional compilation\" instead?","Url":"https://github.com/dotnet/standard/issues/1670","RelatedDescription":"Open issue \"Potentially Incorrect Terminology in .net Standard FAQ\" (#1670)"},{"Id":"541368388","IsPullRequest":false,"CreatedAt":"2019-12-21T20:30:37","Actor":"Emdot","Number":"1669","RawContent":null,"Title":"T4 cannot find netstandard 2.1","State":"open","Body":"When a T4 compile-time template references a netstandard 2.1 assembly, if the template's code tries to instantiate a class from that assembly it generates an error:\r\n\r\n```\r\nRunning transformation: System.IO.FileNotFoundException: Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n   at Microsoft.VisualStudio.TextTemplatingDF0B46F7DFCCCF2CAD1FBB2E3A8D5FC6225E74132FDDBD12D44030F822D8B29A6DFFE0B2FED81F4BED62AEA63823EBB5C1182E33103987C1DA7368F9D1022F09.GeneratedTextTransformation.TransformText()\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at Microsoft.VisualStudio.TextTemplating.TransformationRunner.PerformTransformation()\r\n```\r\n\r\nThis occurs even if the project containing the T4 template targets netstandard 2.1.\r\n\r\nTest case attached: just right-click TT.tt and select Run Custom Tool. The error message appears.\r\n\r\n[NetStandardT4.zip](https://github.com/dotnet/standard/files/3991786/NetStandardT4.zip)\r\n\r\nMicrosoft Visual Studio Community 2019, v 16.4.0; 64-bit PC; 64-bit Windows 10. I'm using the Devart Template Editor extension, v 1.0.11.0. I do not see this error when the dependency targets netstandard 2,0 instead.","Url":"https://github.com/dotnet/standard/issues/1669","RelatedDescription":"Open issue \"T4 cannot find netstandard 2.1\" (#1669)"},{"Id":"540785622","IsPullRequest":false,"CreatedAt":"2019-12-20T06:05:06","Actor":"Michael-Baumanns","Number":"1668","RawContent":null,"Title":"Runtime Standard - Core CLR / Core RT etc.","State":"open","Body":"Hello everybody,\r\n\r\nFirst of all I hope this is the right place for my question.\r\n\r\nIs there any specification about the expected types / methods who have to be implemented by a runtime implementation like core CLR or core RT? Do you have something like a runtime standard document?\r\n\r\nBest regards\r\n\r\nMichael","Url":"https://github.com/dotnet/standard/issues/1668","RelatedDescription":"Open issue \"Runtime Standard - Core CLR / Core RT etc.\" (#1668)"},{"Id":"538960639","IsPullRequest":false,"CreatedAt":"2019-12-17T10:01:53","Actor":"gulbanana","Number":"1667","RawContent":null,"Title":"Could we please get CallerArgumentExpressionAttribute in .NET Standard?","State":"open","Body":"It's not in ns2.1, so that's a missing feature from C# 8.","Url":"https://github.com/dotnet/standard/issues/1667","RelatedDescription":"Open issue \"Could we please get CallerArgumentExpressionAttribute in .NET Standard?\" (#1667)"},{"Id":"538783452","IsPullRequest":false,"CreatedAt":"2019-12-17T01:45:21","Actor":"pb-gs","Number":"1666","RawContent":null,"Title":"System.Net.PeerToPeer in .NET Standard","State":"open","Body":"Hey there,\r\n\r\nJust wondering if it is likely that .NET Standard will include classes from [`System.Net.PeerToPeer`](https://docs.microsoft.com/en-us/dotnet/api/system.net.peertopeer?view=netframework-4.8) (e.g. [`PeerNameResolver`](https://docs.microsoft.com/en-us/dotnet/api/system.net.peertopeer.peernameresolver?view=netframework-4.8)) or otherwise have peer name resolution protocol support?\r\n\r\nThank you.","Url":"https://github.com/dotnet/standard/issues/1666","RelatedDescription":"Open issue \"System.Net.PeerToPeer in .NET Standard\" (#1666)"},{"Id":"537929488","IsPullRequest":false,"CreatedAt":"2019-12-14T15:46:28","Actor":"shcummin","Number":"1665","RawContent":null,"Title":"<PackageReference> System.* when targeting NET Framework leads to ambiguity","State":"open","Body":"Related to Framework compat\r\n\r\nIn a project targeting 4.6, references:\r\n\r\n```\r\n    <PackageReference Include=\"System.ComponentModel.Annotations\" />\r\n    <PackageReference Include=\"System.ServiceModel.Primitives\" />\r\n```\r\n\r\nAnd:\r\n\r\n```\r\n    <Reference Include=\"System.ComponentModel.DataAnnotations\"  />\r\n    <Reference Include=\"System.ServiceModel\" />\r\n```\r\n\r\nAppear to be synonymous (because builds pass) when in reality:\r\n\r\n`<PackageReference>` is restoring packages, rewriting generated nupkg dependencies and introducing version complexity and binplacing new dlls (or facade dlls?)\r\n\r\n`<Reference>`, comparatively, is unambiguously depending on the Framework and not changing any nuget collateral.\r\n\r\nAs there does not appear to be a particularly compelling reason to use `<PackageReference>` in this way when targeting .NET Framework 4.5/4.6, and even doing this opens up compat issues such as Issue #1179 , then `<PackageReference>` for System.* packages net45/net46 should cause a build error in the msbuild/vs toolchain or cause a runtime error. [or there should be a doc describing why this is a bad idea]\r\n\r\n\r\n**Edit:** Additionally there is loads of confusion online:\r\n\r\nhttps://weblog.west-wind.com/posts/2019/Feb/19/Using-NET-Standard-with-Full-Framework-NET\r\n\r\n> As a side note a number of people pointed out to me that Paket - which is an alternate package manager for NuGet packages - considers versions of .NET 4.7.1 and older incompatible with .NET Standard so you can't actually install .NET Standard packages for those versions by default.\r\n> \r\n> Makes sense - **Microsoft has acknowledged that using .NET Standard on anything prior to 4.7.1 is not a good idea** and I would add using 4.7.1 is not optimal either, but alas it does work with some of the messy hackery described above.\r\n\r\nWhere did Microsoft acknowledge this in an official capacity?\r\n\r\nAnd, if this is the case, why does System.Servicemodel.Primitives.4.4.0.nuspec look like this:\r\n\r\n```\r\n      <group targetFramework=\".NETFramework4.5\" />\r\n      <group targetFramework=\".NETFramework4.6\">\r\n        <dependency id=\"NETStandard.Library\" version=\"1.6.1\" />\r\n      </group>\r\n      <group targetFramework=\".NETFramework4.6.1\" />\r\n\r\n```\r\n\r\nwhy does System.Servicemodel.Primitives.4.7.0.nuspec look like this:\r\n\r\n```\r\n      <group targetFramework=\".NETFramework4.5\" />\r\n      <group targetFramework=\".NETFramework4.6\">\r\n        <dependency id=\"NETStandard.Library\" version=\"2.0.3\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n      <group targetFramework=\".NETFramework4.6.1\" />\r\n```\r\n\r\nWhat is this package going to do on 4.5, 4.6, 4.6.1, 4.6.2?\r\n\r\nAnd the lib folders:\r\n\r\n![image](https://user-images.githubusercontent.com/28113572/70868825-433eaf80-1f39-11ea-9f5f-79d8de22bd97.png)\r\n\r\nWhy is the binplace different across 4.5, 4.6, 4.6.1, 4.6.2?\r\n\r\nBehavior seems to be: \r\n- 4.5 explicit discard/no-op\r\n- 4.6 binplace 1 dll\r\n- 4.6.1 binplace 2 dlls??\r\n- 4.6.2 - not called out, so .netstandard20 path is followed, (??) then for version S.SM.Primitives 4.4 there's 1 dll, and in S.SM.Primitive 4.7 there are 2 dlls.\r\n\r\nGiven this behavior, why would I want\r\n\r\n```\r\n    <PackageReference Include=\"System.ServiceModel.Primitives\" />\r\n```\r\n\r\nanywhere near a .NET 4.6.x project?\r\n\r\nThere seems to be some discussion of this sort of thing being a nuget restore warning here: https://github.com/NuGet/Home/issues/8376  however there seems to be also a possibility that the nuget authors forcefully break people targeting 4.5 thru to 4.6.2 which would be preferable to difficult to define behavior.\r\n","Url":"https://github.com/dotnet/standard/issues/1665","RelatedDescription":"Open issue \"<PackageReference> System.* when targeting NET Framework leads to ambiguity\" (#1665)"},{"Id":"536390167","IsPullRequest":false,"CreatedAt":"2019-12-11T15:41:06","Actor":"Jmales","Number":"1663","RawContent":null,"Title":"Can I import net472 project from a .netstandard project? Also, should I?","State":"closed","Body":"Imagine the following scenario:\r\n\r\nA------------------->B--------------------->C\r\n(**Net472**)----------->(**NetStandard**)--------->(**Net472**)\r\n\r\nMain project A in **NET framework,** referencing a **.Net Standard** project B which references a **NET Framework 472** project.\r\n\r\nIn theory, as **Net Standard** is a subset of **NET framework**, it shouldn't make sense that I can reference the whole from within a subset right? However, if I create a simple App with that structure I'm able to build and run it without errors or warnings.\r\n\r\nBUT, if I try this in other applications, mainly a big one that I'm porting to .NET Standard, I get warning in the **.NET Standard** projects referencing **.NET 472**. When is this warning raised after all?\r\n\r\n`C.csproj was resolved using '.NETFramework,Version=v4.7.2' instead of the project target framework '.NETStandard,Version=v2.0'. This project may not be fully compatible with your project.`\r\n\r\nAnd, can I or can't I reference a **NET472** project from within a **.NET Standard 2.0/2.1**?\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1663","RelatedDescription":"Closed issue \"Can I import net472 project from a .netstandard project? Also, should I?\" (#1663)"},{"Id":"535997897","IsPullRequest":false,"CreatedAt":"2019-12-10T21:14:54","Actor":"hrumhurum","Number":"1662","RawContent":null,"Title":".NET Standard 2.1 mscorlib misses type forwarder for System.Reflection.Emit.ILGenerator","State":"open","Body":".NET Standard 2.1 introduced availability of `System.Reflection.Emit.ILGenerator` class: https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit.ilgenerator?view=netstandard-2.1\r\n\r\nBut `mscorlib` assembly located at `C:\\Program Files\\dotnet\\packs\\NETStandard.Library.Ref\\2.1.0\\ref\\netstandard2.1\\mscorlib.dll` misses a corresponding type forwarder for `System.Reflection.Emit.ILGenerator`.\r\n\r\nThat omission causes a hole in type system integrity.","Url":"https://github.com/dotnet/standard/issues/1662","RelatedDescription":"Open issue \".NET Standard 2.1 mscorlib misses type forwarder for System.Reflection.Emit.ILGenerator\" (#1662)"},{"Id":"534875855","IsPullRequest":false,"CreatedAt":"2019-12-09T11:45:47","Actor":"IanKemp","Number":"1661","RawContent":null,"Title":"2.1 release timeline?","State":"open","Body":"It's been more than 2 years since Standard 2.0. We're already on Core 3.1 that's LTS, when can we expect the next version of Standard? Or is Standard dead and we should just use Core for everything going forward?","Url":"https://github.com/dotnet/standard/issues/1661","RelatedDescription":"Open issue \"2.1 release timeline?\" (#1661)"},{"Id":"529638047","IsPullRequest":true,"CreatedAt":"2019-11-28T01:14:42","Actor":"dotnet-maestro[bot]","Number":"1660","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1660","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1660)"},{"Id":"529573719","IsPullRequest":false,"CreatedAt":"2019-11-27T21:33:26","Actor":"timdoke","Number":"1659","RawContent":null,"Title":"Generic class operators derived from interface seems broken","State":"closed","Body":"Let's say I have a CaseInsensitiveConcurrentDictionary.  The intention of it is to be interchangeable with regular Dictionary implementations -- where, we always use the interface IDictionary<T, T> to interact with either.  Both Dictionary and ConcurrentDictionary implement IDictionary interface members.\r\n\r\nThe class looks like this:\r\n\r\n\r\n    public class CaseInsensitiveDictionary<TValue>\r\n        : ConcurrentDictionary<string, TValue>\r\n    {\r\n        public CaseInsensitiveDictionary()\r\n            : base(StringComparer.InvariantCultureIgnoreCase)\r\n        {\r\n        }\r\n\r\n        private CaseInsensitiveDictionary(IDictionary<string, TValue> attributes)\r\n            : this()\r\n        {\r\n            AddRange(attributes);\r\n        }\r\n\r\n        public void Add(string key, TValue value)\r\n        {\r\n            this.TryAdd(key, value);\r\n        }\r\n\r\n        public void AddRange(IDictionary<string, TValue> entries)\r\n        {\r\n            foreach (var item in entries)\r\n            {\r\n                this.TryAdd(item.Key, item.Value);\r\n            }\r\n        }\r\n\r\n        public static CaseInsensitiveDictionary<TValue> Create(IDictionary<string, TValue> attributes = null)\r\n        {\r\n            if (attributes == null)\r\n            {\r\n                return new CaseInsensitiveDictionary<TValue>();\r\n            }\r\n            return new CaseInsensitiveDictionary<TValue>(attributes);\r\n        }\r\n\r\n        public static implicit operator Dictionary<string, TValue>(CaseInsensitiveDictionary<TValue> data)\r\n        {\r\n            return new Dictionary<string, TValue>(data);\r\n        }\r\n\r\n        public static implicit operator CaseInsensitiveDictionary<TValue>(Dictionary<string, TValue> data)\r\n        {\r\n            return Create(data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n`  \r\n\r\n\r\nLet's say then that we are trying to implicitly convert the ConcurrentDictionary to and from a dictionary.  To test, I wrote these methods:\r\n\r\n\r\n\r\n        public void FromDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n\r\n            Dictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n            Console.WriteLine(\"FromDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n        public void FromIDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n            IDictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n\r\n            Console.WriteLine(\"FromIDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n\r\n        public void FromCaseInsensitiveDictionaryToDictionaryTest()\r\n        {\r\n\r\n            var dc2 = new CaseInsensitiveDictionary<string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (Dictionary<string, string>)dc2;\r\n\r\n            Console.WriteLine(\"FromCaseInsensitiveDictionaryToDictionaryTest success\");\r\n\r\n        }\r\n\r\n\r\n\r\nThe first (FromDictionaryToCaseInsensitiveDictionaryTest) and third methods (FromCaseInsensitiveDictionaryToDictionaryTest) work fine and correctly use the operators.\r\n\r\nThe second one fails with this exception: System.InvalidCastException: 'Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' to type 'OpenToken.CaseInsensitiveDictionary`1[System.String]'.'\r\n.  In my opinion, FromIDictionaryToCaseInsensitiveDictionaryTest should work because the type is CaseInsensitiveDictionary and implements IDictionary.  If I do NOT have the first conversion operator, the first test method fails with this exact same error message, \r\n\r\nWith this evidence, it seems to me that something is missing when the runtime is looking for the appropriate operator.  FromIDictionaryToCaseInsensitiveDictionaryTest should work either from the Dictionary operator or automatically work because it implements the IDictionary interface.  (I cannot create an operator for IDictionary conversion because that is illegal).  \r\n\r\nPlease let me know if this is expected behavior and if there is some workaround for it.  This issue seems to be present in all versions of C#.\r\n\r\nThanks!\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1659","RelatedDescription":"Closed issue \"Generic class operators derived from interface seems broken\" (#1659)"},{"Id":"526765953","IsPullRequest":false,"CreatedAt":"2019-11-25T02:23:45","Actor":"arizvisa","Number":"1657","RawContent":null,"Title":"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed","State":"closed","Body":"Hey guys, the signature check for this package seems to be failing. Not sure what that actually means, but here's the checksum as of 2019/11/21 12:23 (CST).\r\n\r\n```\r\n# fetch https://packages.microsoft.com/fedora/30/prod/netstandard-targeting-pack-2.1.0-x64.rpm\r\nnetstandard-targeting-pack-2.1.0-x64.rpm 100% 2201944 2201944\r\n# openssl dgst -sha256 netstandard-targeting-pack-2.1.0-x64.rpm \r\nSHA256(netstandard-targeting-pack-2.1.0-x64.rpm)= 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480\r\n```\r\n\r\nThen with dnf actually complaining about it.\r\n```\r\n# dnf repository-packages packages-microsoft-com-prod install netstandard-targeting-pack-2.1                                                                                 \r\nenabling fedora-modular-debuginfo repository                                                                  \r\nenabling updates-modular-debuginfo repository       \r\nenabling updates-debuginfo repository                                                                         \r\nenabling fedora-debuginfo repository\r\nenabling rpmfusion-free-updates-debuginfo repository\r\nenabling rpmfusion-free-debuginfo repository                                                                  \r\nLast metadata expiration check: 0:13:30 ago on Thu 21 Nov 2019 12:03:15 PM CST.\r\nDependencies resolved.     \r\n==============================================================================================================\r\n Package                               Architecture  Version         Repository                          Size \r\n==============================================================================================================\r\nInstalling:\r\n netstandard-targeting-pack-2.1        x86_64        2.1.0-1         packages-microsoft-com-prod        2.1 M\r\n\r\nTransaction Summary\r\n==============================================================================================================\r\nInstall  1 Package\r\n\r\nTotal download size: 2.1 M\r\nInstalled size: 2.1 M\r\nIs this ok [y/N]: y\r\nDownloading Packages:\r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[FAILED] netstandard-targeting-pack-2.1.0-x64.rpm: No more mirrors to try - All mirrors were already tried without success\r\n```\r\n\r\nHopefully this doesn't entail the need for ir. Heh.","Url":"https://github.com/dotnet/standard/issues/1657","RelatedDescription":"Closed issue \"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed\" (#1657)"},{"Id":"527469491","IsPullRequest":true,"CreatedAt":"2019-11-23T01:19:55","Actor":"dotnet-maestro[bot]","Number":"1658","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1658","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1658)"},{"Id":"526119676","IsPullRequest":true,"CreatedAt":"2019-11-20T20:02:50","Actor":"dotnet-maestro[bot]","Number":"1656","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656)"},{"Id":"523456559","IsPullRequest":false,"CreatedAt":"2019-11-19T23:58:30","Actor":"SetTrend","Number":"1655","RawContent":null,"Title":"Change .NET Framework in version table from 4.6.1 to 4.7.1","State":"closed","Body":"Currently, the [.NET Standard version table](/dotnet/standard/blob/master/docs/versions.md) shows `.NET Framework 4.6.1` to be compatible with `.NET Standard >= 1.5`.\r\n\r\nHowever, a footnote clarifies that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nMoreover, many issues on [StackOverflow.com](https://stackoverflow.com/questions/49925484/you-must-add-a-reference-to-assembly-netstandard-version-2-0-0-0) and [GitHub](542) give evidence that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nWouldn't it be wise then to update above version table to provide **_true_** information than just spout some wannabe information?","Url":"https://github.com/dotnet/standard/issues/1655","RelatedDescription":"Closed issue \"Change .NET Framework in version table from 4.6.1 to 4.7.1\" (#1655)"},{"Id":"523175041","IsPullRequest":false,"CreatedAt":"2019-11-15T00:02:51","Actor":"replaysMike","Number":"1654","RawContent":null,"Title":"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator","State":"open","Body":"I'm trying to use certificate based authentication using HttpClient in .Net Standard 2.0. However, I've noticed TLS negotiation doesn't succeed unless running the application in Administrator mode.\r\n\r\n```\r\nvar requestMessage = new HttpRequestMessage() {\r\n    RequestUri = new Uri(new Uri(_configuration.Endpoint), \"someendpoint\"),\r\n    Method = HttpMethod.Get\r\n};\r\nvar handler = new HttpClientHandler {\r\n    ClientCertificateOptions = ClientCertificateOption.Manual,\r\n    SslProtocols = SslProtocols.Tls12,\r\n};          \r\nhandler.ClientCertificates.Add(certificate);\r\nhandler.CheckCertificateRevocationList = false;\r\n// this is required to get around untrusted self-signed certs\r\nhandler.ServerCertificateCustomValidationCallback = (httpRequestMessage, cert, cetChain, policyErrors) => true;\r\nvar client = new HttpClient(handler);\r\nrequestMessage.Headers.Add(\"X-ARR-ClientCert\", certificate.GetRawCertDataString());\r\nvar response = await client.SendAsync(requestMessage);\r\n```\r\nThe client certificate is valid and installed in the local computer `My` store.\r\n\r\nWithout Administrator privileges a generic error is thrown: `The request was aborted: Could not create SSL/TLS secure channel` when not Administrator.\r\n\r\nAnyone have a clue as to why?","Url":"https://github.com/dotnet/standard/issues/1654","RelatedDescription":"Open issue \"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator\" (#1654)"},{"Id":"522886300","IsPullRequest":false,"CreatedAt":"2019-11-14T14:14:42","Actor":"tndata","Number":"1653","RawContent":null,"Title":"Broken link","State":"open","Body":"\r\nI found a broken link in this sentence:\r\n\r\nThe plan for handling .NET Framework 4.6.1 and .NET Standard 2.0 is outlined in the **spec**.\r\n\r\nOn this page \r\nhttps://github.com/dotnet/standard/blob/master/docs/faq.md\r\n","Url":"https://github.com/dotnet/standard/issues/1653","RelatedDescription":"Open issue \"Broken link\" (#1653)"},{"Id":"522854157","IsPullRequest":true,"CreatedAt":"2019-11-14T13:46:23","Actor":"dotnet-maestro[bot]","Number":"1652","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191113.6\r\n- **Date Produced**: 11/14/2019 7:13 AM\r\n- **Commit**: 5cee7c97d602f294e27c582d4dab81ec388f1d7b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19563.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1652","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1652)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"553888832","IsPullRequest":true,"CreatedAt":"2020-01-23T01:27:49","Actor":"halter73","Number":"42837","RawContent":null,"Title":"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync","State":"open","Body":"3.1 backport of dotnet/runtime#1437.\r\n\r\nFixes dotnet/runtime#1436","Url":"https://github.com/dotnet/corefx/pull/42837","RelatedDescription":"Open PR \"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync\" (#42837)"},{"Id":"550563524","IsPullRequest":true,"CreatedAt":"2020-01-17T22:17:49","Actor":"dotnet-maestro-bot","Number":"42831","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @danmosemsft\n* @Anipik\n* @dotnet-maestro[bot]\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42831","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42831)"},{"Id":"551300317","IsPullRequest":true,"CreatedAt":"2020-01-17T17:54:34","Actor":"dotnet-maestro[bot]","Number":"42834","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200116.2\r\n- **Date Produced**: 1/17/2020 2:55 AM\r\n- **Commit**: fd22fd600a2526a7c58536da0e80325eb710d7f1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20066.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20066.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20066.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42834","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42834)"},{"Id":"551390974","IsPullRequest":true,"CreatedAt":"2020-01-17T13:46:02","Actor":"dotnet-maestro[bot]","Number":"42835","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: 66928e2e-bd95-4f7e-280f-08d690bc5860\r\n- **Build**: 20200116.3\r\n- **Date Produced**: 1/17/2020 6:12 AM\r\n- **Commit**: 259ce7d4619478cfefe7b0c0f6fa765f765f7e37\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.3-servicing.20066.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.3-servicing.20066.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.3-servicing.20066.3\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42835","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#42835)"},{"Id":"550491818","IsPullRequest":true,"CreatedAt":"2020-01-16T22:04:38","Actor":"GrabYourPitchforks","Number":"42829","RawContent":null,"Title":"[release/3.1] Revert changes to EncoderNLS/DecoderNLS.Convert unit tests","State":"closed","Body":"These are the unit test changes to accompany https://github.com/dotnet/coreclr/pull/27996, which was committed to the __release/3.1__ branch in the _coreclr_ repo.\r\n\r\nThis _corefx_ PR isn't a functional product change. It's just updating the unit tests to reflect the incoming _coreclr_ changes. Once a nightly _coreclr_ build is created and it works its way into this repo, this PR will resolve the resulting unit test failures and will unblock future work in this repo.","Url":"https://github.com/dotnet/corefx/pull/42829","RelatedDescription":"Closed or merged PR \"[release/3.1] Revert changes to EncoderNLS/DecoderNLS.Convert unit tests\" (#42829)"},{"Id":"550704048","IsPullRequest":true,"CreatedAt":"2020-01-16T21:35:58","Actor":"dotnet-maestro[bot]","Number":"42832","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.4\r\n- **Date Produced**: 1/16/2020 3:43 AM\r\n- **Commit**: 4e29494f5610ecd739b1b762b36d3b93c61a4a4b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20065.4\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20065.4\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20065.4\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42832","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42832)"},{"Id":"550410091","IsPullRequest":true,"CreatedAt":"2020-01-16T05:32:52","Actor":"dotnet-maestro[bot]","Number":"42827","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: 66928e2e-bd95-4f7e-280f-08d690bc5860\r\n- **Build**: 20200115.2\r\n- **Date Produced**: 1/15/2020 8:41 PM\r\n- **Commit**: c76e272e578101a245e0ff895d1c3879b7995832\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.3-servicing.20065.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.3-servicing.20065.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.3-servicing.20065.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42827","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#42827)"},{"Id":"547574992","IsPullRequest":true,"CreatedAt":"2020-01-16T04:13:22","Actor":"bartonjs","Number":"42809","RawContent":null,"Title":"[release/2.1] Always build the OpenSSL shim in portable mode on macOS.","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42809","RelatedDescription":"Closed or merged PR \"[release/2.1] Always build the OpenSSL shim in portable mode on macOS.\" (#42809)"},{"Id":"547582097","IsPullRequest":true,"CreatedAt":"2020-01-16T04:13:05","Actor":"bartonjs","Number":"42810","RawContent":null,"Title":"[release/3.0] Always build the OpenSSL shim in portable mode on macOS.","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42810","RelatedDescription":"Closed or merged PR \"[release/3.0] Always build the OpenSSL shim in portable mode on macOS.\" (#42810)"},{"Id":"550545725","IsPullRequest":true,"CreatedAt":"2020-01-16T04:10:55","Actor":"dotnet-maestro[bot]","Number":"42830","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.3\r\n- **Date Produced**: 1/15/2020 8:39 PM\r\n- **Commit**: f14483fb2857f507c302815a54d02d275864e423\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20065.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20065.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20065.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42830","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42830)"},{"Id":"550000195","IsPullRequest":false,"CreatedAt":"2020-01-16T01:10:36","Actor":"fgfmichael","Number":"42825","RawContent":null,"Title":"Non static System.Text.Json?","State":"closed","Body":"Hi Team\r\n\r\nI try to avoid usage of global/static code, however after looking over System.Text.Json it looks like all of the code is written with statics... Is there any way to use DI instead of accessing a global static (i.e. is there some interface I can inject into my services) OR will i need to wrap your serialize up into my own container class?\r\n\r\nReally not a fan of globals...","Url":"https://github.com/dotnet/corefx/issues/42825","RelatedDescription":"Closed issue \"Non static System.Text.Json?\" (#42825)"},{"Id":"549770095","IsPullRequest":false,"CreatedAt":"2020-01-16T00:07:10","Actor":"lorranpalmeira","Number":"42819","RawContent":null,"Title":"System.Text.Json disallows string literals surrounded by single quotes","State":"closed","Body":"´´´\r\nvar objectExpeted = @\"{\r\n              'cep': '01001-000',\r\n              'logradouro': 'Praça da Sé',\r\n              'complemento': 'lado ímpar',\r\n              'bairro': 'Sé',\r\n              'localidade': 'São Paulo',\r\n              'uf': 'SP',\r\n              'unidade': '',\r\n              'ibge': '3550308',\r\n              'gia': '1004'\r\n            }\";\r\n\r\n //var expected = JsonSerializer.Deserialize<Cep>(objectExpeted);\r\n    var expected = JsonConvert.DeserializeObject<Cep>(objectExpeted);\r\n´´´\r\n\r\n\r\nIt has an exception when I try Deserialize in JsonSerializer.In NewtonSoft works perfectly.\r\n\r\n![image](https://user-images.githubusercontent.com/18705060/72375374-b9763380-36ea-11ea-8aab-f8892c3f9a33.png)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42819","RelatedDescription":"Closed issue \"System.Text.Json disallows string literals surrounded by single quotes\" (#42819)"},{"Id":"550413141","IsPullRequest":true,"CreatedAt":"2020-01-15T23:08:47","Actor":"dotnet-maestro[bot]","Number":"42828","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.1\r\n- **Date Produced**: 1/15/2020 8:47 AM\r\n- **Commit**: c43d0336eb999fe3bc7bf5873effe89cee716c69\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.1-servicing.20065.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.1-servicing.20065.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.1-servicing.20065.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42828","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42828)"},{"Id":"545972653","IsPullRequest":true,"CreatedAt":"2020-01-15T17:52:25","Actor":"bartonjs","Number":"42801","RawContent":null,"Title":"[release/3.1] Always build the OpenSSL shim in portable mode on macOS.","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42801","RelatedDescription":"Closed or merged PR \"[release/3.1] Always build the OpenSSL shim in portable mode on macOS.\" (#42801)"},{"Id":"549897137","IsPullRequest":true,"CreatedAt":"2020-01-15T17:38:38","Actor":"Anipik","Number":"42824","RawContent":null,"Title":"updating assembly version and package version for system.data.sqlclient","State":"closed","Body":"There is no need to update package index here because we update that for 2.x branches after we have published the package. Because we fix that functionality in 3.1\r\n","Url":"https://github.com/dotnet/corefx/pull/42824","RelatedDescription":"Closed or merged PR \"updating assembly version and package version for system.data.sqlclient\" (#42824)"},{"Id":"549587098","IsPullRequest":false,"CreatedAt":"2020-01-15T07:27:29","Actor":"Itd-Automha","Number":"42816","RawContent":null,"Title":"System.Text.Json Custom JsonConverter<DateTime> .Read() method not being used by .Deserialize()","State":"closed","Body":"I have created a custom converter and it was working in my api project. When i build my client i tried using the same class, but the .Deserialize() methods won't call .Read() on the DateTime property of my class.\r\n\r\nhttps://stackoverflow.com/questions/59733697/system-text-json-custom-jsonconverterdatetime-read-method-not-being-used-by","Url":"https://github.com/dotnet/corefx/issues/42816","RelatedDescription":"Closed issue \"System.Text.Json Custom JsonConverter<DateTime> .Read() method not being used by .Deserialize()\" (#42816)"},{"Id":"549892106","IsPullRequest":true,"CreatedAt":"2020-01-15T06:32:14","Actor":"Anipik","Number":"42823","RawContent":null,"Title":"updating assembly versions, packageversions and publishing the packages","State":"closed","Body":"We have serviced 6 commits in 3.1.2\r\n3  -> system.data.sqlclient\r\n1 -> system.text.json\r\n1 -> Reflection.MetadataLoadContext (eric already made that change for this change)\r\n1 -> changes system.Native (part of shared framework)","Url":"https://github.com/dotnet/corefx/pull/42823","RelatedDescription":"Closed or merged PR \"updating assembly versions, packageversions and publishing the packages\" (#42823)"},{"Id":"549865580","IsPullRequest":true,"CreatedAt":"2020-01-15T00:37:58","Actor":"Anipik","Number":"42821","RawContent":null,"Title":"update branding of 2.1.16","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42821","RelatedDescription":"Closed or merged PR \"update branding of 2.1.16\" (#42821)"},{"Id":"549887977","IsPullRequest":true,"CreatedAt":"2020-01-15T00:34:55","Actor":"dotnet-maestro-bot","Number":"42822","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28325-011, servicing-28327-021, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42822","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28325-011, servicing-28327-021, stable, respectively (release/2.1)\" (#42822)"},{"Id":"549772423","IsPullRequest":true,"CreatedAt":"2020-01-14T20:37:06","Actor":"dotnet-maestro-bot","Number":"42820","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\n* @dotnet-maestro[bot]\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42820","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42820)"},{"Id":"549734204","IsPullRequest":true,"CreatedAt":"2020-01-14T19:28:33","Actor":"Anipik","Number":"42818","RawContent":null,"Title":"update branding to 3.0.3","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42818","RelatedDescription":"Closed or merged PR \"update branding to 3.0.3\" (#42818)"},{"Id":"546538978","IsPullRequest":true,"CreatedAt":"2020-01-14T19:22:39","Actor":"Anipik","Number":"42803","RawContent":null,"Title":"update branding to 3.1.2","State":"closed","Body":"No packages were published in 3.1.1 so packages.builds is already cleared\r\nNeeds to merge after we release 3.1.1","Url":"https://github.com/dotnet/corefx/pull/42803","RelatedDescription":"Closed or merged PR \"update branding to 3.1.2\" (#42803)"},{"Id":"547759227","IsPullRequest":false,"CreatedAt":"2020-01-14T17:51:07","Actor":"assyadh","Number":"42811","RawContent":null,"Title":"Path issues when running corefx tests for .NET Core 3.1 tag, what is RunTests.sh?","State":"closed","Body":"Hi,\r\n\r\nI am trying to run the tests for corefx using the v3.1.0 tag.\r\n\r\nI have my corefx build output in ```/build/corefx/artifacts/bin```\r\n\r\nWhen I try to run the following: \r\n\r\n``` ./eng/run-test.sh --configurationGroup Release```\r\n\r\nI get the following result:\r\n```\r\nNothing to test in Common.Tests\r\nNothing to test in Invariant.Tests\r\nNothing to test in Microsoft.CSharp.Tests\r\nNothing to test in Microsoft.Bcl.AsyncInterfaces.Tests\r\nNothing to test in Microsoft.VisualBasic.Core.Tests\r\nNothing to test in Microsoft.Win32.Primitives.Tests\r\nNothing to test in System.Buffers.Tests\r\nNothing to test in System.AppContext.Tests\r\nNothing to test in Microsoft.XmlSerializer.Generator.Tests\r\nNothing to test in System.CodeDom.Tests\r\nNothing to test in System.Collections.Concurrent.Tests\r\nNothing to test in System.Collections.NonGeneric.Tests\r\nNothing to test in System.Collections.Specialized.Tests\r\nNothing to test in System.Collections.Immutable.Tests\r\nNothing to test in System.Collections.Tests\r\nNothing to test in System.ComponentModel.Annotations.Tests\r\nNothing to test in System.ComponentModel.Composition.Registration.Tests\r\nNothing to test in System.ComponentModel.Composition.Tests\r\nNothing to test in System.ComponentModel.EventBasedAsync.Tests\r\nNothing to test in System.ComponentModel.Primitives.Tests\r\nNothing to test in System.ComponentModel.Tests\r\n...\r\n```\r\n\r\nWhich leads me to believe there is a path issue.\r\n\r\nEffectively, my *.Tests folder contain a ```netcoreapp-Release``` folder with no mention of an OS or Arch as required in the run-test.sh script https://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/eng/run-test.sh#L201\r\n\r\n\r\n```\r\nls artifacts/bin/System.Data.Common.Tests/\r\nnetcoreapp-Release\r\n```\r\n\r\nHere is how I am building corefx:\r\n\r\n```./build.sh --buildtests --configuration Release --os Linux```\r\n\r\nSo at this point, after editing the ```run-test.sh#L201``` script above, and removing the OS and Arch properties, I get the following output: ``` dirName=\"$1/netcoreapp-$ConfigurationGroup\"```\r\n\r\nI am facing the following issues:\r\n\r\n```\r\nNothing to test in System.Xml.XPath.XDocument.Tests\r\nCannot find /build/corefx/artifacts/bin/tests/System.Xml.Xsl.XslCompiledTransformApi.Tests/netcoreapp-Release/RunTests.sh\r\nCannot find /build/corefx/artifacts/bin/tests/System.Xml.XPath.XmlDocument.Tests/netcoreapp-Release/RunTests.sh\r\nCannot find /build/corefx/artifacts/bin/tests/System.Xml.Xsl.XslTransformApi.Tests/netcoreapp-Release/RunTests.sh\r\nCannot find /build/corefx/artifacts/bin/tests/XsltCompiler.Tests/netcoreapp-Release/RunTests.sh\r\n```\r\n\r\nSo my questions: \r\n**Am I trying to run the tests the correct way?\r\nWhat is that RunTests.sh script? I can't get a hold of it.**\r\n\r\nI am successfully running the corefx test on .NET Core 2.1.13, and trying to adapt my scripts for 3.1, but can't get this part to work.\r\n\r\nThanks for the help\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42811","RelatedDescription":"Closed issue \"Path issues when running corefx tests for .NET Core 3.1 tag, what is RunTests.sh?\" (#42811)"},{"Id":"548630141","IsPullRequest":false,"CreatedAt":"2020-01-14T04:49:35","Actor":"AllanMichaelsen","Number":"42815","RawContent":null,"Title":"MessagePack Reference Loop Handling","State":"closed","Body":"I know there is a thread for handling this with Json  ( #38579 ), but the issue also exists with message pack protocol.(MPP)\r\n\r\nWhen switching to binary serialization via MPP there are immediate buffer overflow issues.\r\n\r\nIs there a way to handle this with MPP?","Url":"https://github.com/dotnet/corefx/issues/42815","RelatedDescription":"Closed issue \"MessagePack Reference Loop Handling\" (#42815)"},{"Id":"548414836","IsPullRequest":false,"CreatedAt":"2020-01-11T14:40:14","Actor":"faruknane","Number":"42814","RawContent":null,"Title":"[BUG] .Net Core ArrayPool","State":"closed","Body":"I have tried to use Array Pool many times. Every time I used it to create many arrays with big sizes, I encountered a problem. The problem is after a while my deep learning library runs it throws \"System.AccessViolationException HResult=0x80004003 Message=Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\". So, I infer that array pool doesn't work well, because I saw that I couldn't use an array long enough even though I didn't return it. So I implemented two new versions for my performance library. Now it works pretty well. However, I think there is a bug going on with Net core ArrayPool.","Url":"https://github.com/dotnet/corefx/issues/42814","RelatedDescription":"Closed issue \"[BUG] .Net Core ArrayPool\" (#42814)"},{"Id":"548021488","IsPullRequest":false,"CreatedAt":"2020-01-10T11:16:30","Actor":"deokershesh","Number":"42812","RawContent":null,"Title":"Ubuntu .NET Core 3.1 runtime issue","State":"open","Body":"I have successfully built .NET Core 3.1 from \"https://github.com/dotnet/corefx/tree/release/3.1\" on Ubuntu 18.04. I have also changed the System.Data.Odbc to make it work for Informix database. I have also changed Interop.Odbc.cs and Interop.Libraries.cs file appropriately for Linux to look for Informix ODBC shared object (.so). \r\n\r\nHowever, when I run simple .NET Core C# example to connect to Informix database it reports exception. Exception is very strange, as soon as it calls OdbcEnvironmentHandle() constructor ( ), which internally calls Interop.Odbc.SQLAllocHandle(<arguments>), it throws exception. It appears that it was unable to load the Informix ODBC shared object which is mentioned in the Interop.Libraries.cs file. LD_LIBRARY_PATH and other variables are set correctly, simple Informix ODBC application works in the same environment. I don't have unixODBC Driver Manager setup.\r\n\r\nIs there any specific setup needed to load the dependent shared objects (which are natively written in C/C++ code) at runtime for .NET Core 3.1? Does unixODBC's \"libodbc.so\" is mandatory to be used?\r\n\r\nAny help in this regard would be greatly appreciated.","Url":"https://github.com/dotnet/corefx/issues/42812","RelatedDescription":"Open issue \"Ubuntu .NET Core 3.1 runtime issue\" (#42812)"},{"Id":"547495294","IsPullRequest":false,"CreatedAt":"2020-01-09T14:02:29","Actor":"GuerrillaCoder","Number":"42808","RawContent":null,"Title":"System.Text.Json read record by record","State":"closed","Body":"In the documentation all examples on how to serialize Json appear to occur in one step that involves loading the entire serialized collection into memory.\r\n\r\nIs it possible to read one record at a time so it is possible to work with large files and preserve memory?\r\n\r\nTo illustrate my point, this is possible in Newtonsoft:\r\n\r\n```csharp\r\nJsonTextReader reader = new JsonTextReader(new StringReader(json));\r\nwhile (reader.Read())\r\n{\r\n    if (reader.Value != null)\r\n    {\r\n        Console.WriteLine(\"Token: {0}, Value: {1}\", reader.TokenType, reader.Value);\r\n    }\r\n    else\r\n    {\r\n        Console.WriteLine(\"Token: {0}\", reader.TokenType);\r\n    }\r\n}\r\n```\r\n\r\nDoes System.Text.Json have an equivalent ability or do we have to manually buffer the data to be de-serialized?\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42808","RelatedDescription":"Closed issue \"System.Text.Json read record by record\" (#42808)"},{"Id":"546949179","IsPullRequest":false,"CreatedAt":"2020-01-08T22:44:23","Actor":"miloszkukla","Number":"42806","RawContent":null,"Title":"XmlSerializer doesn't encode/escape Unicode characters when serializing","State":"closed","Body":"XmlSerializer doesn't encode/escape Unicode characters (e.g. German quotation marks as illustrated below) during serialization when TextWriter with non-Unicode encoding e.g. ISO-8859-1 is used. I've tested this behavior on .NET Framework 4.5.2, 4.7.2 and .NET Core 2.2.\r\n\r\nSince mentioned characters are part of Unicode and are not known to ISO-8859-1 the expected behavior would be the same as when using XmlWriter so encoding the characters with their character entity references. I understand this would be a breaking change so probably this issue will get closed but perhaps someone will find this helpful in future.\r\n\r\nExecution of the following code results in incorrect XML and consequently deserialization exception:\r\n\r\n```\r\npublic class Foo\r\n{\r\n    [XmlAttribute(\"bar\")]\r\n    public string Bar { get; set; } = new string(new[]\r\n    {\r\n        '\\u201A', // ‚ replaced with 44 ,\r\n        '\\u2018', // ‘ replaced with 39 '\r\n        '\\u201E', // „ replaced with 34 \"\r\n        '\\u201C'  // “ replaced with 34 \"\r\n    });\r\n}\r\n\r\nvar iso88591 = Encoding.GetEncoding(\"ISO-8859-1\");\r\nvar ms = new MemoryStream();\r\nvar sw = new StreamWriter(ms, iso88591);\r\nvar sr = new StreamReader(ms, iso88591);\r\nvar serializer = new XmlSerializer(typeof(Foo));\r\n\r\nserializer.Serialize(sw, new Foo());\r\nvar charPreview = iso88591.GetString(ms.GetBuffer()).ToCharArray();\r\nms.Position = 0;\r\nserializer.Deserialize(sr); //fails due containing extra quotation marks\r\n```\r\n\r\nThe workaround would be to use Serialize method overload accepting XmlWriter e.g.:\r\n```\r\nvar xmlWriter = XmlWriter.Create(ms, new XmlWriterSettings() { Encoding = iso88591 });\r\nserializer.Serialize(xmlWriter, new Foo());\r\n```","Url":"https://github.com/dotnet/corefx/issues/42806","RelatedDescription":"Closed issue \"XmlSerializer doesn't encode/escape Unicode characters when serializing\" (#42806)"},{"Id":"546888825","IsPullRequest":true,"CreatedAt":"2020-01-08T14:19:01","Actor":"dotnet-maestro-bot","Number":"42805","RawContent":null,"Title":"Update BuildTools, CoreFx, ProjectNTfs, ProjectNTfsTestILC to rc1-04626-02, servicing-28327-021, rel-28509-00, rel-28509-00, respectively (release/uwp6.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42805","RelatedDescription":"Open PR \"Update BuildTools, CoreFx, ProjectNTfs, ProjectNTfsTestILC to rc1-04626-02, servicing-28327-021, rel-28509-00, rel-28509-00, respectively (release/uwp6.2)\" (#42805)"},{"Id":"546157095","IsPullRequest":false,"CreatedAt":"2020-01-07T08:50:59","Actor":"deokershesh","Number":"42802","RawContent":null,"Title":"Ubuntu : .NET Core 3.1 build error","State":"open","Body":"I downloaded .NET Core 3.1 source code, while doing the build.sh on Ubuntu, it reports following errors! There doesn't seem to be good error message to possibly resolve the same. Kindly help to fix the below build issue.\r\n\r\nroot@64ac36d6c74e:/shesh/dotnetcore/corefx-release-3.1# uname -a\r\nLinux 64ac36d6c74e 4.9.184-linuxkit #1 SMP Tue Jul 2 22:58:16 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n\r\n  Setting up directories for build\r\n  Checking pre-requisites...\r\n  Commencing build of corefx native components for Linux.x64.Debug\r\n  Invoking \"/shesh/dotnetcore/corefx-release-3.1/src/Native/Unix/gen-buildsys-clang.sh\" \"/shesh/dotnetcore/corefx-release-3.1/src/Native/Unix\" \"3\" \"9\" \"x64\" \"DEBUG\" \" -DFEATURE_DISTRO_AGNOSTIC_SSL=1 -DCMAKE_STATIC_LIB_LINK=0\"\r\n  -- Configuring incomplete, errors occurred!\r\n  See also \"/shesh/dotnetcore/corefx-release-3.1/artifacts/obj/native/netcoreapp-Linux-Debug-x64/CMakeFiles/CMakeOutput.log\".\r\n  See also \"/shesh/dotnetcore/corefx-release-3.1/artifacts/obj/native/netcoreapp-Linux-Debug-x64/CMakeFiles/CMakeError.log\".\r\n  Failed to generate native component build project!\r\n/shesh/dotnetcore/corefx-release-3.1/src/Native/build-native.proj(36,5): error MSB3073: The command \"\"/shesh/dotnetcore/corefx-release-3.1/src/Native/build-native.sh\" x64 Debug Linux outconfig netcoreapp-Linux-Debug-x64 -portable\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\n/shesh/dotnetcore/corefx-release-3.1/src/Native/build-native.proj(36,5): error MSB3073: The command \"\"/shesh/dotnetcore/corefx-release-3.1/src/Native/build-native.sh\" x64 Debug Linux outconfig netcoreapp-Linux-Debug-x64 -portable\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:46.11\r\nBuild failed (exit code '1').\r\nroot@64ac36d6c74e:/shesh/dotnetcore/corefx-release-3.1#","Url":"https://github.com/dotnet/corefx/issues/42802","RelatedDescription":"Open issue \"Ubuntu : .NET Core 3.1 build error\" (#42802)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"553944112","IsPullRequest":false,"CreatedAt":"2020-01-23T05:20:43","Actor":"sharwell","Number":"41159","RawContent":null,"Title":"ArgumentOutOfRangeException in ReplacePropertyWithMethodsCodeRefactoringProvider","State":"open","Body":"**Version Used**: 16.5 Preview 2\r\n\r\n**Steps to Reproduce**:\r\n\r\nAttempted to use a refactoring to convert `RunTests.Options.LogFilesOutputDirectory` to a full property.\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\r\n   at Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GetBinaryExpressionOperatorTokenKind(SyntaxKind kind)\r\n   at Microsoft.CodeAnalysis.CSharp.ReplacePropertyWithMethods.CSharpReplacePropertyWithMethodsService.UnwrapCompoundAssignment(SyntaxNode compoundAssignment,ExpressionSyntax readExpression)\r\n   at Microsoft.CodeAnalysis.ReplacePropertyWithMethods.AbstractReplacePropertyWithMethodsService`5.ReferenceReplacer.<>c.<.cctor>b__35_2(ReferenceReplacer replacer,SyntaxNode parent)\r\n   at Microsoft.CodeAnalysis.ReplacePropertyWithMethods.AbstractReplacePropertyWithMethodsService`5.ReferenceReplacer.<>c.<.cctor>b__35_3(SyntaxNode parent,SyntaxGenerator generator,ReplaceParentArgs args)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.ReplaceChange`1.Apply(SyntaxNode root,SyntaxGenerator generator)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.GetChangedRoot()\r\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider.UpdateReferencesInDocumentAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider.UpdateReferencesAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider.ReplacePropertyWithMethodsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.<>c__DisplayClass11_0.<GetPreviewAsync>b__0(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](<Unknown Parameters>)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/41159","RelatedDescription":"Open issue \"ArgumentOutOfRangeException in ReplacePropertyWithMethodsCodeRefactoringProvider\" (#41159)"},{"Id":"553932754","IsPullRequest":false,"CreatedAt":"2020-01-23T04:42:05","Actor":"sharwell","Number":"41158","RawContent":null,"Title":"TaskCanceledException in TodoCommentIncrementalAnalyzer.GetTodoItems","State":"open","Body":"**Version Used**: 16.5 Preview 2\r\n\r\n**Steps to Reproduce**: Unknown\r\n\r\n**Actual Behavior**:\r\n\r\n<pre>\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n    at Roslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground[T](Task`1 task, CancellationToken cancellationToken)\r\n    at Microsoft.CodeAnalysis.Editor.Implementation.TodoComments.TodoCommentIncrementalAnalyzer.GetTodoItems(Workspace workspace, DocumentId id, CancellationToken cancellationToken)\r\n    at Microsoft.CodeAnalysis.Editor.Implementation.TodoComments.TodoCommentIncrementalAnalyzerProvider.GetTodoItems(Workspace workspace, DocumentId documentId, CancellationToken cancellationToken)\r\n    at Microsoft.VisualStudio.LanguageServices.Implementation.TableDataSource.VisualStudioBaseTodoListTable.TableDataSource.TableEntriesSource.GetItems()\r\n    at Microsoft.VisualStudio.LanguageServices.Implementation.TableDataSource.TableEntriesFactory`1.AggregatedEntriesSource.GetItems()\r\n    at Microsoft.VisualStudio.LanguageServices.Implementation.TableDataSource.TableEntriesFactory`1.GetSnapshot(Int32 versionNumber)\r\n    at Microsoft.VisualStudio.Shell.TableControl.Implementation.EntriesFromSnapshot.&lt;PinSnapshot&gt;b__14_1()\r\n    at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.CallExtensionPoint[T](Object errorSource, Func`1 call, T valueOnThrow)\r\n</pre>","Url":"https://github.com/dotnet/roslyn/issues/41158","RelatedDescription":"Open issue \"TaskCanceledException in TodoCommentIncrementalAnalyzer.GetTodoItems\" (#41158)"},{"Id":"553928513","IsPullRequest":true,"CreatedAt":"2020-01-23T04:22:47","Actor":"jmarolf","Number":"41157","RawContent":null,"Title":"add contents of wiki to the docs folder","State":"open","Body":"This way anyone can submit a PR to the docs folder","Url":"https://github.com/dotnet/roslyn/pull/41157","RelatedDescription":"Open PR \"add contents of wiki to the docs folder\" (#41157)"},{"Id":"553909987","IsPullRequest":false,"CreatedAt":"2020-01-23T02:56:39","Actor":"AlekseyTs","Number":"41156","RawContent":null,"Title":"Unexpected code changes are made by IDE refactoring ","State":"open","Body":"1. Checkout https://github.com/dotnet/roslyn/commit/4f7db0617737bf2949925d2d1e13b001b8540f66\r\n\r\n2. Go to https://github.com/dotnet/roslyn/blob/4f7db0617737bf2949925d2d1e13b001b8540f66/src/Compilers/CSharp/Portable/Symbols/Source/ParameterHelpers.cs#L82 and extract the right side of the assignment to a method.\r\n\r\nObserve:\r\nExplicit type parameters are added to the enclosing method call.\r\n```\r\n        public static ImmutableArray<FunctionPointerParameterSymbol> MakeFunctionPointerParameters(\r\n            Binder binder,\r\n            FunctionPointerMethodSymbol owner,\r\n            SeparatedSyntaxList<ParameterSyntax> parametersList,\r\n            DiagnosticBag diagnostics,\r\n            bool suppressUseSiteDiagnostics)\r\n        {\r\n            return MakeParameters<FunctionPointerParameterSymbol, FunctionPointerMethodSymbol>(\r\n                binder,\r\n                owner,\r\n                parametersList,\r\n                out _,\r\n                diagnostics,\r\n                allowRefOrOut: true,\r\n                allowThis: false,\r\n                // PROTOTYPE(func-ptr): Investigate if cases where this can be false for regular parameters applies to func pointers as well\r\n                addRefReadOnlyModifier: true,\r\n                suppressUseSiteDiagnostics,\r\n                parametersList.Count - 2,\r\n                parameterCreationFunc: (Binder binder, FunctionPointerMethodSymbol owner, TypeWithAnnotations parameterType,\r\n                                        ParameterSyntax syntax, RefKind refKind, int ordinal,\r\n                                        SyntaxToken paramsKeyword, SyntaxToken thisKeyword, bool addRefReadOnlyModifier,\r\n                                        DiagnosticBag diagnostics) =>\r\n                {\r\n\r\n                    var customModifiers = GetCustomModifiers(binder, syntax, refKind, addRefReadOnlyModifier, diagnostics);\r\n\r\n                    if (parameterType.IsVoidType())\r\n                    {\r\n                        diagnostics.Add(ErrorCode.ERR_NoVoidParameter, syntax.Type.Location);\r\n                    }\r\n\r\n                    return new FunctionPointerParameterSymbol(\r\n                        parameterType,\r\n                        refKind,\r\n                        ordinal,\r\n                        owner,\r\n                        customModifiers);\r\n                },\r\n                parsingFunctionPointer: true);\r\n        }\r\n\r\n        private static ImmutableArray<CustomModifier> GetCustomModifiers(Binder binder, ParameterSyntax syntax, RefKind refKind, bool addRefReadOnlyModifier, DiagnosticBag diagnostics)\r\n        {\r\n            return addRefReadOnlyModifier && refKind == RefKind.In ?\r\n                                    CreateInModifiers(binder, diagnostics, syntax) :\r\n                                    ImmutableArray<CustomModifier>.Empty;\r\n        }\r\n```\r\n\r\nExpected:\r\nNo changes outside of the assignment.\r\n\r\nI noticed similar things happening with VB (probably with 'Introduce local' as well). Besides adding explicit type parameters, I've seen unnecessary changes made throughout the file (even in different functions) :\r\n- names fully qualified, including additions of a global namespace reference.  \r\n- Explicit CType operators added, etc.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/41156","RelatedDescription":"Open issue \"Unexpected code changes are made by IDE refactoring \" (#41156)"},{"Id":"553895311","IsPullRequest":false,"CreatedAt":"2020-01-23T01:54:45","Actor":"vsfeedback","Number":"41155","RawContent":null,"Title":"Quick action : move type to *.vb duplicates enum","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/637617/quick-action-move-type-to-vb-duplicates-enum.html)._\n\n---\nwhen using Quick action : move type to *.vb for a file which also contains an enum creates a duplicates enum in the new file created.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 7/9/2019, 11:48 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/41155","RelatedDescription":"Open issue \"Quick action : move type to *.vb duplicates enum\" (#41155)"},{"Id":"553865378","IsPullRequest":true,"CreatedAt":"2020-01-23T01:49:33","Actor":"dotnet-bot","Number":"41151","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41151","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41151)"},{"Id":"553864905","IsPullRequest":true,"CreatedAt":"2020-01-23T01:49:06","Actor":"dotnet-bot","Number":"41150","RawContent":null,"Title":"Merge master to release/dev16.6-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.6-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.6-preview1\ngit reset --hard upstream/release/dev16.6-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.6-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41150","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.6-preview1\" (#41150)"},{"Id":"553865451","IsPullRequest":true,"CreatedAt":"2020-01-23T01:49:03","Actor":"dotnet-bot","Number":"41152","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41152","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#41152)"},{"Id":"553883445","IsPullRequest":true,"CreatedAt":"2020-01-23T01:06:23","Actor":"AlekseyTs","Number":"41154","RawContent":null,"Title":"Small refactoring to reuse conditional logic.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41154","RelatedDescription":"Open PR \"Small refactoring to reuse conditional logic.\" (#41154)"},{"Id":"553873959","IsPullRequest":true,"CreatedAt":"2020-01-23T00:31:14","Actor":"jasonmalinowski","Number":"41153","RawContent":null,"Title":"Document why we have -vs-deps branches","State":"open","Body":"This gives some of the reasons behind why we have these branches, the alternatives we've considered and the challenges those run into. This is not to be used as a justification of why we _cannot_ move away from a -vs-deps model, but rather the new problems we create if we do so. The concerns of course may change over time, and also be solvable in other ways we haven't thought of, and this document should not shut those conversations down. We just want to capture past conversations so we don't forget them.","Url":"https://github.com/dotnet/roslyn/pull/41153","RelatedDescription":"Open PR \"Document why we have -vs-deps branches\" (#41153)"},{"Id":"553863749","IsPullRequest":false,"CreatedAt":"2020-01-22T23:58:15","Actor":"ivanbasov","Number":"41149","RawContent":null,"Title":"AddParameterDialog.OK_Click should take type and name values from IntellisenseTextBox view models rather than from control","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/41149","RelatedDescription":"Open issue \"AddParameterDialog.OK_Click should take type and name values from IntellisenseTextBox view models rather than from control\" (#41149)"},{"Id":"553861516","IsPullRequest":true,"CreatedAt":"2020-01-22T23:50:34","Actor":"JoeRobich","Number":"41148","RawContent":null,"Title":"Mark Microsoft.CodeAnalysis.LanguageServer.Protocol as PrivateAssets","State":"open","Body":"Fix nuget warning.","Url":"https://github.com/dotnet/roslyn/pull/41148","RelatedDescription":"Open PR \"Mark Microsoft.CodeAnalysis.LanguageServer.Protocol as PrivateAssets\" (#41148)"},{"Id":"553857071","IsPullRequest":false,"CreatedAt":"2020-01-22T23:36:03","Actor":"mikadumont","Number":"41147","RawContent":null,"Title":"Move using directive style options from Advanced to Code Style","State":"open","Body":"These 2 using directive rules should be moved under code style options since there are EditorConfig options for them: \r\n\r\n![image](https://user-images.githubusercontent.com/46729679/72944035-a38cf200-3d2c-11ea-99d5-686249ab5373.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/41147","RelatedDescription":"Open issue \"Move using directive style options from Advanced to Code Style\" (#41147)"},{"Id":"553847595","IsPullRequest":true,"CreatedAt":"2020-01-22T23:09:19","Actor":"agocke","Number":"41146","RawContent":null,"Title":"Update Language Feature Status.md","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41146","RelatedDescription":"Open PR \"Update Language Feature Status.md\" (#41146)"},{"Id":"553840129","IsPullRequest":false,"CreatedAt":"2020-01-22T22:49:09","Actor":"ivanbasov","Number":"41145","RawContent":null,"Title":"Consider removing GetAddedParameter from IChangeSignatureOptionsService","State":"open","Body":"ChangeSignatureDialog.Add_Click is in the VS layer. However, it calls GetAddedParameter from the service which calls the AddParameterDialog. \r\n\r\nPlease note that with the current implementation, IChangeSignatureViewModelFactoryService should be called for each new instance of the Add Parameter Dialog\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/41145","RelatedDescription":"Open issue \"Consider removing GetAddedParameter from IChangeSignatureOptionsService\" (#41145)"},{"Id":"553838569","IsPullRequest":false,"CreatedAt":"2020-01-22T22:45:11","Actor":"isadorasophia","Number":"41144","RawContent":null,"Title":"EnC Scenario: deleting a file doesn't display rude edit","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n1. Create a Console App (.NET Core) with the following code on Program.cs:\r\n```csharp\r\nclass Program \r\n{\r\n    int a = 20;\r\n    return;\r\n}\r\n```\r\n2. Start debugging (F10); \r\n3. Delete Program.cs externally;\r\n\r\n**Expected Behavior**:\r\n- EnC reports an error that the file has been deleted.\r\n\r\n**Actual Behavior**:\r\n- You can continue debugging without source code.\r\n\r\n_Remarks_\r\n*If you create a .NET Framework Console App instead, Roslyn emits a rude edit as long as you also close the code in the editor window. However, no message shows up on \"Error List\" Window.\r\n*We might want to deal with file renames as well?","Url":"https://github.com/dotnet/roslyn/issues/41144","RelatedDescription":"Open issue \"EnC Scenario: deleting a file doesn't display rude edit\" (#41144)"},{"Id":"553837111","IsPullRequest":true,"CreatedAt":"2020-01-22T22:41:29","Actor":"dotnet-maestro[bot]","Number":"41143","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 567feadf-e495-4ebb-cee4-08d67668456c\r\n- **Build**: 20200122.2\r\n- **Date Produced**: 1/22/2020 6:47 PM\r\n- **Commit**: 27b56f866fe9a97cdc02dc439082476dae6fd235\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20072.2\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/41143","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#41143)"},{"Id":"553798785","IsPullRequest":true,"CreatedAt":"2020-01-22T21:17:38","Actor":"agocke","Number":"41142","RawContent":null,"Title":"Work around bug blocking signed build publish","State":"open","Body":"A bug related to setting up tokens is blocking the signed build publish\r\nfrom succeeding. This works around the issue by using the old token\r\ncode. Issue: https://github.com/dotnet/arcade/issues/4660","Url":"https://github.com/dotnet/roslyn/pull/41142","RelatedDescription":"Open PR \"Work around bug blocking signed build publish\" (#41142)"},{"Id":"553790083","IsPullRequest":true,"CreatedAt":"2020-01-22T20:59:42","Actor":"JoeRobich","Number":"41141","RawContent":null,"Title":"Add Namespace grouping to API","State":"open","Body":"Enhance the data returned (from https://github.com/dotnet/roslyn/pull/37917) by grouping symbols by namespace.\r\n\r\nThe current shape of the api data:\r\n```\r\n{\r\n     “AssemblyName”: {Hash of Assembly Name},\r\n     “AssemblyVersion”: {Unhashed Assembly Version},\r\n     “Symbols”: [{Hash of Symbol’s Documentation Comment Id},…]\r\n}\r\n```\r\nThe shape after adding a grouping on namespace:\r\n```\r\n{\r\n    “AssemblyName”: {Hash of Assembly Name},\r\n    “AssemblyVersion”: {Unhashed Assembly Version},\r\n    “Namespaces”:\r\n    [\r\n        {\r\n           “Namespace”: {Hash of Namespace} ,\r\n            “Symbols”: [{Hash of Symbol’s Documentation Comment Id},…]\r\n        },\r\n        {…}\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/pull/41141","RelatedDescription":"Open PR \"Add Namespace grouping to API\" (#41141)"},{"Id":"553762887","IsPullRequest":false,"CreatedAt":"2020-01-22T20:02:25","Actor":"mikadumont","Number":"41140","RawContent":null,"Title":"Expand scope for Add Null Checks and Add Null Checks for All Parameters","State":"open","Body":"**Version Used**: \r\nVisual Studio 2019 Preview\r\n\r\nIf I place my cursor within the parenthesis after the comma next to `a` I dont get an option to add null checks or add null checks for all parameters. \r\n![image](https://user-images.githubusercontent.com/46729679/72929442-b09ae880-3d0e-11ea-976d-20667a8a404e.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/41140","RelatedDescription":"Open issue \"Expand scope for Add Null Checks and Add Null Checks for All Parameters\" (#41140)"},{"Id":"553724244","IsPullRequest":true,"CreatedAt":"2020-01-22T18:44:16","Actor":"YairHalberstadt","Number":"41139","RawContent":null,"Title":"Do not emit Array.Empty for an empty params call if the params is an array of pointers.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41139","RelatedDescription":"Open PR \"Do not emit Array.Empty for an empty params call if the params is an array of pointers.\" (#41139)"},{"Id":"553531064","IsPullRequest":true,"CreatedAt":"2020-01-22T15:01:38","Actor":"dotnet-maestro[bot]","Number":"41138","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 567feadf-e495-4ebb-cee4-08d67668456c\r\n- **Build**: 20200121.3\r\n- **Date Produced**: 1/21/2020 8:28 PM\r\n- **Commit**: e06e2807048b6bc7b3549b401a1833bed3bcd8c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20071.3\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/41138","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#41138)"},{"Id":"553266151","IsPullRequest":true,"CreatedAt":"2020-01-22T02:12:59","Actor":"tmat","Number":"41137","RawContent":null,"Title":"Add TypeScript external access APIs","State":"open","Body":"Add some external access APIs: various extension methods, diagnostic related APIs and a few others.","Url":"https://github.com/dotnet/roslyn/pull/41137","RelatedDescription":"Open PR \"Add TypeScript external access APIs\" (#41137)"},{"Id":"553223590","IsPullRequest":true,"CreatedAt":"2020-01-22T01:47:11","Actor":"dotnet-bot","Number":"41132","RawContent":null,"Title":"Merge master to release/dev16.6-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.6-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.6-preview1\ngit reset --hard upstream/release/dev16.6-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.6-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41132","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.6-preview1\" (#41132)"},{"Id":"553224254","IsPullRequest":true,"CreatedAt":"2020-01-22T01:46:55","Actor":"dotnet-bot","Number":"41133","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41133","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41133)"},{"Id":"553224416","IsPullRequest":true,"CreatedAt":"2020-01-22T01:46:52","Actor":"dotnet-bot","Number":"41135","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41135","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#41135)"},{"Id":"553228902","IsPullRequest":false,"CreatedAt":"2020-01-22T00:14:05","Actor":"ivanbasov","Number":"41136","RawContent":null,"Title":"refactor TryCreateUpdatedSolutionAsync","State":"open","Body":"It mixes both background analysis and also that path for fetching the options.","Url":"https://github.com/dotnet/roslyn/issues/41136","RelatedDescription":"Open issue \"refactor TryCreateUpdatedSolutionAsync\" (#41136)"},{"Id":"553224345","IsPullRequest":true,"CreatedAt":"2020-01-22T00:03:48","Actor":"dotnet-bot","Number":"41134","RawContent":null,"Title":"Merge release/dev16.6-preview1 to release/dev16.6-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.6-preview1 into release/dev16.6-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.6-preview1-to-release/dev16.6-preview1-vs-deps\ngit reset --hard upstream/release/dev16.6-preview1-vs-deps\ngit merge upstream/release/dev16.6-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.6-preview1-to-release/dev16.6-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41134","RelatedDescription":"Open PR \"Merge release/dev16.6-preview1 to release/dev16.6-preview1-vs-deps\" (#41134)"},{"Id":"553223035","IsPullRequest":false,"CreatedAt":"2020-01-22T00:00:44","Actor":"vsfeedback","Number":"41131","RawContent":null,"Title":"Converting from if to switch removes comments","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/886271/converting-from-if-to-switch-removes-comments.html)._\r\n\r\n---\r\nSteps to Reproduce:\r\n\r\nUse the following code: \r\n\r\n```csharp\r\n            bool? abc = true;\r\n            if (abc == true)\r\n            {\r\n                Console.WriteLine(3);\r\n            }\r\n            // some comment here\r\n            else if (abc == false)\r\n            {\r\n                Console.WriteLine(4);\r\n            }\r\n            else if (abc is null)\r\n            {\r\n                Console.WriteLine(14);\r\n            }\r\n```\r\n\r\nNow use a quick fix to change this to a switch statement:\r\n\r\nExpected: \r\n Comment should be retained. \r\n\r\nActual:\r\nI get this: \r\n\r\n```csharp\r\n            bool? abc = true;\r\n            switch (abc)\r\n            {\r\n                case true:\r\n                    Console.WriteLine(3);\r\n                    break;\r\n                case false:\r\n                    Console.WriteLine(4);\r\n                    break;\r\n                case null:\r\n                    Console.WriteLine(14);\r\n                    break;\r\n            }\r\n```\r\n---\r\n### Original Comments\r\n\r\n#### Visual Studio Feedback System on 1/16/2020, 00:16 AM: \r\n\r\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n#### Visual Studio Feedback System on 1/16/2020, 02:56 PM: \r\n\r\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/41131","RelatedDescription":"Open issue \"Converting from if to switch removes comments\" (#41131)"},{"Id":"553221870","IsPullRequest":false,"CreatedAt":"2020-01-21T23:57:52","Actor":"ivanbasov","Number":"41130","RawContent":null,"Title":"CSharpChangeSignatureService and VisualBasicChangeSignatureService - use code generator instead of  syntaxfactory where possible","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/41130","RelatedDescription":"Open issue \"CSharpChangeSignatureService and VisualBasicChangeSignatureService - use code generator instead of  syntaxfactory where possible\" (#41130)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"552085171","IsPullRequest":false,"CreatedAt":"2020-01-20T05:59:52","Actor":"akinohana","Number":"7955","RawContent":null,"Title":"[BUG]print stack trace from child thread cause a fastfail exception","State":"open","Body":"![image](https://user-images.githubusercontent.com/29968862/72702124-8faa8a00-3b8c-11ea-980a-966ba2b76836.png)\r\n\r\n\r\ncodes to reproduce:\r\n\r\n\r\n```\r\n\r\n\tclass Program\r\n    {\r\n\t    static void tr()\r\n\t    {\r\n\t\t\tConsole.WriteLine(\"thread start\");\r\n\t\t    Console.WriteLine(\"2\" + Environment.StackTrace);\r\n\r\n\t\t}\r\n\t\tstatic void Main(string[] args)\r\n        {\r\n\t        Console.WriteLine(\"1\" + Environment.StackTrace);\r\n\r\n\t\t\tThreadStart threadStart = tr;\r\n\t        var th = new Thread(threadStart);\r\n\t\t\tth.Start();\r\n\r\n\t\t\tConsole.ReadKey();\r\n        }\r\n    }\r\n\r\n```\r\n\r\nresults:\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/72702208-cda7ae00-3b8c-11ea-883b-746631ae7aed.png)\r\n\r\n\r\nstack trace when crashed:\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/72702271-165f6700-3b8d-11ea-8334-b445bbad823f.png)\r\n","Url":"https://github.com/dotnet/corert/issues/7955","RelatedDescription":"Open issue \"[BUG]print stack trace from child thread cause a fastfail exception\" (#7955)"},{"Id":"549435138","IsPullRequest":true,"CreatedAt":"2020-01-14T14:16:42","Actor":"MichalStrehovsky","Number":"7954","RawContent":null,"Title":"Fix sigantures in calli","State":"closed","Body":"* The called methods accept a byref, not a pointer.\r\n* The called methods don't return anything.\r\n\r\nThis is also a slight perf improvement (no longer need to allocate the lambda for `PinObjectAndCall`).\r\n\r\nFixes #7951.","Url":"https://github.com/dotnet/corert/pull/7954","RelatedDescription":"Closed or merged PR \"Fix sigantures in calli\" (#7954)"},{"Id":"548637124","IsPullRequest":false,"CreatedAt":"2020-01-14T14:16:42","Actor":"yowl","Number":"7951","RawContent":null,"Title":"Wasm: CalliIntrinsics.Call<T> is generating invalid calli","State":"closed","Body":"https://github.com/dotnet/corert/blob/42f1bc077327d6e3647861bec00cfe0458187071/src/System.Private.CoreLib/src/System/Runtime/InteropServices/Marshal.CoreRT.cs#L200-L203\r\n\r\nThis is currently a problem for the wasm backend.  With the input\r\n```\r\n    // something to exercise CalliIntrinsics.Call<T>\r\n    struct NonBlittableToMarshal\r\n    {\r\n        internal int a;\r\n        internal object b;\r\n    }\r\n\r\n    static void TestMarshalStructToPtr()\r\n    {\r\n        StartTest(\"Test marshal struct to ptr\");\r\n        NonBlittableToMarshal s = new NonBlittableToMarshal();\r\n        s.a = 1;\r\n        s.b = null;\r\n        var pParms = Marshal.AllocHGlobal(Marshal.SizeOf(typeof(NonBlittableToMarshal)));\r\n        Marshal.StructureToPtr(s, pParms, false);\r\n        EndTest(true);\r\n    }\r\n```\r\nThis fails at runtime with an invalid signature message, with ASSERTIONS=2, it produces:\r\n\r\n```\r\nInvalid function pointer 4692 called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). This pointer might make sense in another type signature: as sig \"vi\" pointing to function _Internal_CompilerGenerated__Module____ManagedToNative_HelloWasm_Program_NonBlittableToMarshal, \r\n```\r\nThis is saying that there is a method with a void (int) signature at the right function index, but it does not match the called convention which is int (int,int,int).  There is a method produced with a `vi` signature, although it looks incomplete and throws an exception\r\n```\r\ndefine void @\"Internal_CompilerGenerated__Module___<ManagedToNative>HelloWasm_Program_NonBlittableToMarshal\"(i8*) {\r\nProlog:\r\n  br label %Block0\r\n\r\nBlock0:                                           ; preds = %Prolog\r\n  %LoadAddressOfSymbolNode = load i32*, i32** @__Str_Struct__NonBlittableToMarshal__6058104189200C7DE718BE6B8F3608243B48FAFC59CD4893FB0EFFADF26C30EA___SYMBOL\r\n  %1 = getelementptr i8, i8* %0, i32 8\r\n  %Temp0_ = getelementptr i8, i8* %0, i32 8\r\n  %LoadeeType = load i32, i32* bitcast (i32** @__EEType_S_P_CoreLib_System_Exception___SYMBOL to i32*)\r\n  call void @S_P_CoreLib_System_Runtime_RuntimeExports__RhNewObject(i8* %1, i8* %Temp0_, i32 %LoadeeType)\r\n  %2 = getelementptr i8, i8* %0, i32 12\r\n  %Temp0_1 = getelementptr i8, i8* %0, i32 8\r\n  %CastPtrTemp0_ = bitcast i8* %Temp0_1 to i8**\r\n  %LdTemp0_ = load i8*, i8** %CastPtrTemp0_\r\n  %3 = getelementptr i8, i8* %2, i32 0\r\n  %CastPtrTypedStore = bitcast i8* %3 to i8**\r\n  store i8* %LdTemp0_, i8** %CastPtrTypedStore\r\n  %CastPtr = bitcast i32* %LoadAddressOfSymbolNode to i8*\r\n  %4 = getelementptr i8, i8* %2, i32 4\r\n  %CastPtrTypedStore2 = bitcast i8* %4 to i8**\r\n  store i8* %CastPtr, i8** %CastPtrTypedStore2\r\n  call void @S_P_CoreLib_System_Exception___ctor_0(i8* %2)\r\n  call void @llvm.trap()\r\n  unreachable\r\n}\r\n```\r\nAnd the `iiii` signature method would match the calli inside \r\n```\r\n                        CalliIntrinsics.Call<int>(\r\n                            marshalStub,\r\n                            ((void*)((IntPtr*)unboxedStructPtr + offset)),  // safe (need to adjust offset as it could be class)\r\n                            (void*)ptr                                      // unsafe (no need to adjust as it is always struct)\r\n                        );\r\n``` \r\nWith an the extra `i` for the shadow stack.  I guess the question starts with how does the marshal code get generated because it shouldn't terminate in a throw I imagine?","Url":"https://github.com/dotnet/corert/issues/7951","RelatedDescription":"Closed issue \"Wasm: CalliIntrinsics.Call<T> is generating invalid calli\" (#7951)"},{"Id":"548791451","IsPullRequest":false,"CreatedAt":"2020-01-14T09:42:02","Actor":"akinohana","Number":"7953","RawContent":null,"Title":"How to fix Error setting value to Field on XXXXX After CoreRT?","State":"closed","Body":"this happens with following code, it works fine before CoreRT\r\n```\r\n\tinternal class C1\r\n    {\r\n\t    public string p;\r\n    }\r\n\r\n    var res = JsonConvert.DeserializeObject<C1>(jsonString);\r\n```\r\n\r\njsonString = \"{\\\\\"p\\\\\":\\\\\"xxxxx\\\\\"}\"\r\n\r\nis there a way I can solve this issue? \r\n\r\nor it's not possible, maybe because CoreRT can't do reflection which is required by `DeserializeObject`?\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7953","RelatedDescription":"Closed issue \"How to fix Error setting value to Field on XXXXX After CoreRT?\" (#7953)"},{"Id":"548709455","IsPullRequest":false,"CreatedAt":"2020-01-13T05:15:33","Actor":"DenMpei","Number":"7952","RawContent":null,"Title":"Error when publish","State":"open","Body":"Good morning! Sometimes, such an error occurs when publishing (dotnet publish -c Release -r win-x64). They in no way treated, but disappears by itself after a while. Prompt, what to see and how to fix?\r\nMicrosoft.DotNet.ILCompiler package version: 1.0.0-alpha-28327-01, but I tried on 1.0.0-alpha-28510-01\r\n\r\nGenerating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n16:06:21 EXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [D:\\Jenkins\\workspace\\Project.csproj]\r\n16:06:21 EXEC : error : External component has thrown an exception. [D:\\Jenkins\\workspace\\Project.csproj]\r\n16:06:21   System.Runtime.InteropServices.SEHException (0x80004005): External component has thrown an exception.\r\n16:06:21      at ILCompiler.DependencyAnalysis.ObjectWriter.FinishObjWriter(IntPtr objWriter)\r\n16:06:21      at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n16:06:21      at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n16:06:22      at ILCompiler.Program.Run(String[] args)\r\n16:06:22      at ILCompiler.Program.Main(String[] args)\r\n16:06:22 C:\\Users\\rpt-virtual\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28327-01\\build\\Microsoft.NETCore.Native.targets(226,5): error MSB3073: The command \"\"C:\\Users\\user\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28327-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp2.2\\win-x64\\native\\Project.ilc.rsp\"\" exited with code 1. [D:\\Jenkins\\workspace\\Project.csproj]","Url":"https://github.com/dotnet/corert/issues/7952","RelatedDescription":"Open issue \"Error when publish\" (#7952)"},{"Id":"548158930","IsPullRequest":true,"CreatedAt":"2020-01-11T16:55:53","Actor":"jkotas","Number":"7948","RawContent":null,"Title":"Use plain clang by default on Linux","State":"closed","Body":"clang-3.9 is not available on recent Linux distros. Typically, there is clang alias setup for a good version of clang so just use that by default.\r\n\r\nFixes #5654","Url":"https://github.com/dotnet/corert/pull/7948","RelatedDescription":"Closed or merged PR \"Use plain clang by default on Linux\" (#7948)"},{"Id":"548397442","IsPullRequest":true,"CreatedAt":"2020-01-11T09:03:06","Actor":"jkotas","Number":"7950","RawContent":null,"Title":"Initialize global VEH after runtime instance","State":"closed","Body":"VEH may use the runtime instance","Url":"https://github.com/dotnet/corert/pull/7950","RelatedDescription":"Closed or merged PR \"Initialize global VEH after runtime instance\" (#7950)"},{"Id":"548304234","IsPullRequest":true,"CreatedAt":"2020-01-10T23:57:47","Actor":"jkotas","Number":"7949","RawContent":null,"Title":"Make sure MethodFixupCell is pointer aligned","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7949","RelatedDescription":"Closed or merged PR \"Make sure MethodFixupCell is pointer aligned\" (#7949)"},{"Id":"546964830","IsPullRequest":true,"CreatedAt":"2020-01-09T13:46:13","Actor":"MichalStrehovsky","Number":"7944","RawContent":null,"Title":"Progress towards x86 Windows support","State":"closed","Body":"This, along with #7943 and dotnet/runtime#1451 is enough to get my snake game running on x86 Windows.\r\n\r\nSee individual commits for details.\r\n\r\nI'm not particularly happy with the \"Fix ObjWriter build\" commit - building LLVM with the forced stdcall calling convention hits some template expansion snafu and I had to back it out in a weird way.","Url":"https://github.com/dotnet/corert/pull/7944","RelatedDescription":"Closed or merged PR \"Progress towards x86 Windows support\" (#7944)"},{"Id":"547338363","IsPullRequest":true,"CreatedAt":"2020-01-09T11:25:48","Actor":"MichalStrehovsky","Number":"7947","RawContent":null,"Title":"Disable the \"Update versions repository\" step","State":"closed","Body":"This step has been failing for months. It's a nuisance because it also makes the official build show as failed. All we care about is publishing NuGet packages and that happens before this step.","Url":"https://github.com/dotnet/corert/pull/7947","RelatedDescription":"Closed or merged PR \"Disable the \"Update versions repository\" step\" (#7947)"},{"Id":"547300953","IsPullRequest":true,"CreatedAt":"2020-01-09T08:53:18","Actor":"jkotas","Number":"7946","RawContent":null,"Title":"Fix intermittent stack overflow","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7946","RelatedDescription":"Closed or merged PR \"Fix intermittent stack overflow\" (#7946)"},{"Id":"547118932","IsPullRequest":true,"CreatedAt":"2020-01-09T07:38:43","Actor":"yowl","Number":"7945","RawContent":null,"Title":"Wasm: fix for implicit ext of UInt16 to UInt32","State":"closed","Body":"Previously this was doing a sext resulting in left filling with the MSB of the UInt16.  This change adds a test for this and fixes it.","Url":"https://github.com/dotnet/corert/pull/7945","RelatedDescription":"Closed or merged PR \"Wasm: fix for implicit ext of UInt16 to UInt32\" (#7945)"},{"Id":"546954776","IsPullRequest":true,"CreatedAt":"2020-01-08T16:05:08","Actor":"MichalStrehovsky","Number":"7943","RawContent":null,"Title":"Implement Windows x86 name mangling","State":"open","Body":"So far CoreRT only had to deal with platforms that have straightforward mangling for `extern \"C\"` symbols (which is what we shoot for in CoreRT).\r\n\r\nWindows x86 stdcall calling convention does the weird thing where `@XXX` is appended to symbol names (where XXX is the number of bytes of arguments to the method).\r\n\r\nThis pull request implements enough of what's needed to get p/invokes up and running.\r\n\r\nI'm marking it as draft because we probably want to make a decision on how to mangle our symbol definitions too (right now this only does something for p/invoke references).","Url":"https://github.com/dotnet/corert/pull/7943","RelatedDescription":"Open PR \"Implement Windows x86 name mangling\" (#7943)"},{"Id":"546250661","IsPullRequest":false,"CreatedAt":"2020-01-08T14:49:05","Actor":"psantosl","Number":"7942","RawContent":null,"Title":"The command ilc exited with code 137.","State":"closed","Body":"Hi,\r\n\r\nGetting this when trying to build our code with corert on OpenSuse 15.1 Leap.\r\n\r\nOS: OpenSuse 15.1 Leap (vmware I use for development).\r\nclang: version 7.0.1 (tags/RELEASE_701/final 349238)\r\nInstalled libncurses5 to fix dependency in libobjwriter.so\r\n\r\nGot stuck after that:\r\n\r\n```\r\nCppCompilerAndLinker=clang dotnet publish server-reduced-netcore.csproj -r linux-x64 -c Release /p:Mode=CoreRT\r\nMicrosoft (R) Build Engine version 16.4.0+e901037fe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 76.89 ms for /home/pablo/wkspaces/wkplastic/01plastic/src/server/server-reduced-netcore.csproj.\r\n  server-reduced-netcore -> /home/pablo/wkspaces/wkplastic/01plastic/bin/server-netcore/linux-x64/plasticd.dll\r\n  /usr/bin/clang\r\n  Generating native code\r\n  /tmp/tmpd8f36c85e5a444a1a7e64809b471adea.exec.cmd: line 2: 41255 Killed                  \"/home/pablo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28507-01/tools/ilc\" @\"obj/Release/linux-x64/native/plasticd.ilc.rsp\"\r\n/home/pablo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-28507-01/build/Microsoft.NETCore.Native.targets(226,5): error MSB3073: The command \"\"/home/pablo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28507-01/tools/ilc\" @\"obj/Release/linux-x64/native/plasticd.ilc.rsp\"\" exited with code 137. [/home/pablo/wkspaces/wkplastic/01plastic/src/server/server-reduced-netcore.csproj]\r\n```\r\n\r\nWe are trying to build plastic scm natively for Linux. It builds and runs ok on Windows :-)\r\n\r\n\r\nThanks!!\r\n","Url":"https://github.com/dotnet/corert/issues/7942","RelatedDescription":"Closed issue \"The command ilc exited with code 137.\" (#7942)"},{"Id":"545488687","IsPullRequest":false,"CreatedAt":"2020-01-06T00:27:15","Actor":"yowl","Number":"7941","RawContent":null,"Title":"Wasm: question: how best to make CoreRT a drop in replacement regards WebAssembly.Runtime.InvokeJS","State":"open","Body":"The Uno Platform makes use of https://github.com/mono/mono/blob/59a1eade7ce4fb79c56a47d043151fbdd5363b1b/sdks/wasm/src/driver.c#L323 for JS interop.  It does this here: https://github.com/unoplatform/uno/blob/1dede9e628108c7c7b71d6aee4cd759c0f9bf9d9/src/Uno.Foundation/Runtime.wasm.cs#L21.  \r\n\r\nHow would that be best handled so that CoreRT could be a drop in replacement for mono?  Could it intercept the call to `WebAssembly.Runtime.InvokeJS` in https://github.com/dotnet/corert/blob/f52a8e504b0485dff9e4737a6fb9535d5eccb77d/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L1575 and replace with a call to a similar method perhaps in https://github.com/yowl/corert/blob/uno-js-llvm/src/CoreRT.WebAssembly.Interop/InternalCalls.cs.  Not asking how to actually get into JS, but what would be the right way to start.\r\n\r\nThanks.","Url":"https://github.com/dotnet/corert/issues/7941","RelatedDescription":"Open issue \"Wasm: question: how best to make CoreRT a drop in replacement regards WebAssembly.Runtime.InvokeJS\" (#7941)"},{"Id":"545388992","IsPullRequest":false,"CreatedAt":"2020-01-05T08:30:07","Actor":"MichalStrehovsky","Number":"7940","RawContent":null,"Title":"Remove dependency on link.exe and Windows SDK","State":"open","Body":"Link.exe is not available as a standalone tool and gets bundled with the Windows SDK/DDK that is a huge download.\r\n\r\nInvestigate whether we can bundle [LLD](https://lld.llvm.org/).\r\n\r\n- [ ] make sure it can embed NatVis files when targeting Windows\r\n- [ ] make sure it can generate all the debug records we emit\r\n- [ ] make sure it supports SourceLink (I have a WIP SourceLink support in a branch that I can never get to - https://github.com/MichalStrehovsky/corert/commit/84e53e3eec9ff24e666eb55792de95eb4b4e6585)\r\n- [ ] make sure it can generate import libraries out of DEF files a la `link.exe /lib /def:foo.def /machine:x64 /out:foo.lib` (this is our way out of the \"what kind of import libraries to specify\" hell + gets rid of the Windows SDK dependency)\r\n\r\nThis is also a stepping stone to enable cross-compilation (e.g. target Windows from Linux and Linux from Windows).","Url":"https://github.com/dotnet/corert/issues/7940","RelatedDescription":"Open issue \"Remove dependency on link.exe and Windows SDK\" (#7940)"},{"Id":"545282390","IsPullRequest":true,"CreatedAt":"2020-01-04T12:59:34","Actor":"MichalStrehovsky","Number":"7939","RawContent":null,"Title":"Port changes from dotnet/runtime","State":"open","Body":"First commit is xcopy from crossgen2, the rest is adjustments. I'm going to squash and merge, this is just for posterity.\r\n\r\nI'm planning to sync things back to the runtime repo because we're starting to accumulate changes on this side.","Url":"https://github.com/dotnet/corert/pull/7939","RelatedDescription":"Open PR \"Port changes from dotnet/runtime\" (#7939)"},{"Id":"545220256","IsPullRequest":true,"CreatedAt":"2020-01-04T00:56:18","Actor":"yowl","Number":"7938","RawContent":null,"Title":"Wasm: generic struct and generic context in finally funclets","State":"open","Body":"This fixes a few issues encountered when compiling the Uno platform with regards to shared generics.\r\n\r\n- Handling of generic structs when passing to functions and when returned.\r\n- Getting the generic context in finally blocks\r\n- Creation of incorrect type for some generic structures.\r\n\r\nFixes #7935 ","Url":"https://github.com/dotnet/corert/pull/7938","RelatedDescription":"Open PR \"Wasm: generic struct and generic context in finally funclets\" (#7938)"},{"Id":"545180752","IsPullRequest":false,"CreatedAt":"2020-01-04T00:24:31","Actor":"QFSW","Number":"7937","RawContent":null,"Title":"Visual Studio 2019 and .NET Core 3.1","State":"closed","Body":"I've been trying to give CoreRT a go but am unable to add the package\r\n```\r\nerror: Unable to find package Microsoft.DotNet.ILCompiler. No packages exist with this id in source(s): dotnet-core, nuget\r\n```\r\nDoes CoreRT still require VS17 and .NET Core 2.0 or is the readme outdated?\r\n\r\nIf not, any idea what I am doing wrong?","Url":"https://github.com/dotnet/corert/issues/7937","RelatedDescription":"Closed issue \"Visual Studio 2019 and .NET Core 3.1\" (#7937)"},{"Id":"544764328","IsPullRequest":false,"CreatedAt":"2020-01-03T12:23:23","Actor":"Sergio0694","Number":"7936","RawContent":null,"Title":"ArrayPool<T> returning a single T item (!) as a T[] reference [UWP]","State":"closed","Body":"Hello,\r\nI've just stumbled upon a very weird bug that's happening for me on UWP (Debug x64). I'm using `ArrayPool<T>.Shared` to rent arrays, and for whatever reason I've started getting an `ArrayTypeMismatchException` when trying to copy items from two rented arrays of the same type. Upon further investigation, turns out the reason is that one of the rented arrays is in fact... Just a single `T` item, and not a `T[]` object. Looks like something went really wrong with the type system and I'd be really curious to know what's going on.\r\nI've personally worked around the issue by just going back to non-pooled arrays in this case, but still this issue was so strange that I though it'd be interesting to share 😄\r\n\r\nHere's a screen:\r\n\r\n![image](https://user-images.githubusercontent.com/10199417/71695441-6cbd5f00-2db2-11ea-9ab3-10ad502e1faf.png)\r\n\r\nYou can see that `T[] newItems` array is in fact a single `T` element, and not an array at all.\r\n\r\nHere's another screen, where I've also added `.GetType()` on the second array just to double check:\r\n\r\n![image](https://user-images.githubusercontent.com/10199417/71695493-95ddef80-2db2-11ea-8964-e6d6d094513f.png)\r\n\r\nHere's the source code of that `Pool<T>` class I'm using: https://gist.github.com/Sergio0694/9a08161830fbcebf26e1973ad2a51cea.\r\n\r\nI've created a repro branch in my repo and I have steps that seem to reproduce the crash reliably, so I'd be happy to give access to the repo to anyone from the team, if you guys want to investigate this.\r\n\r\nThank you for your time, and happy new year to the whole team! 🎉","Url":"https://github.com/dotnet/corert/issues/7936","RelatedDescription":"Closed issue \"ArrayPool<T> returning a single T item (!) as a T[] reference [UWP]\" (#7936)"},{"Id":"544371019","IsPullRequest":false,"CreatedAt":"2020-01-01T15:43:28","Actor":"yowl","Number":"7935","RawContent":null,"Title":"Wasm: Question on type of return values from shared generic calls","State":"open","Body":"As an example, take\r\nhttps://github.com/dotnet/corert/blob/88d75715f4c84c383365a33734d6f0cffe837061/src/System.Private.CoreLib/shared/System/Threading/WaitHandle.cs#L295\r\n\r\nThe second call parameter `safeWaitHandles` is an implicit op to a `Span<SafeWaitHandle?>` from its declaration\r\n```\r\nSafeWaitHandle?[]? safeWaitHandles = RentSafeWaitHandleArray(waitHandles.Length);\r\n```\r\n This implicit method  is a shared generic method so the call in LLVM looks like\r\n\r\n```\r\n%45 = call %\"[S.P.CoreLib]System.Span`1<System.__Canon>\" @\"S_P_CoreLib_System_Span_1<System___Canon>__op_Implicit\"(i8* %43, i8* %CastPtr163)\r\n```\r\nWhere the return is the Canon type, `[S.P.CoreLib]System.Span`1<System.__Canon>`\r\n\r\nThis is not a valid type to pass into `ObtainSafeWaitHandles` as in LLVM that is defined on the concrete type\r\n\r\n```\r\ndefine void @S_P_CoreLib_System_Threading_WaitHandle__ObtainSafeWaitHandles(i8*, %\"[S.P.CoreLib]System.ReadOnlySpan`1<System.Threading.WaitHandle>\", %\"[S.P.CoreLib]System.Span`1<Microsoft.Win32.SafeHandles.SafeWaitHandle>\", %\"[S.P.CoreLib]System.Span`1<native int>\")\r\n```\r\n\r\nWhat would be the right way to solve this?  Should it always convert types to their canonical versions to the extent that `System.Span`1<Microsoft.Win32.SafeHandles.SafeWaitHandle>` is invalid in the LLVM?  ","Url":"https://github.com/dotnet/corert/issues/7935","RelatedDescription":"Open issue \"Wasm: Question on type of return values from shared generic calls\" (#7935)"},{"Id":"543284657","IsPullRequest":true,"CreatedAt":"2020-01-01T05:38:38","Actor":"josephmoresena","Number":"7929","RawContent":null,"Title":"Generate version script automatically unix","State":"closed","Body":"As we discussed in #s, these changes will allow at shared libraries compilation on unix-like platforms to automatically generate a version-script and remove all local symbols and unused code.\r\nAs is said on https://github.com/dotnet/corert/issues/7340#issuecomment-486095150 the .so file contains all debug information so we need still remove all this information from file with strip in order to reduce significatly the size of .so file.","Url":"https://github.com/dotnet/corert/pull/7929","RelatedDescription":"Closed or merged PR \"Generate version script automatically unix\" (#7929)"},{"Id":"544258401","IsPullRequest":false,"CreatedAt":"2019-12-31T19:46:40","Actor":"yowl","Number":"7934","RawContent":null,"Title":"Wasm: fails the simple Generics TestNullableCasting test","State":"open","Body":"This test fails for Wasm.  Have tried the suggestion at https://github.com/dotnet/corert/pull/7897/files#r362161168, but hits the assert at https://github.com/dotnet/corert/blob/7cb8f8c93161ac5e365c6feef1379fe16188e191/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ReadyToRunGenericHelperNode.cs#L48 with target `{[S.P.CoreLib]System.Collections.Generic.ICollection`1<T_System.__Canon>}`\r\n\r\nStack\r\n\r\n```\r\n \tSystem.Private.CoreLib.dll!System.Diagnostics.Debug.Assert(bool condition, string message, string detailMessage)\tUnknown\r\n>\tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.ReadyToRunGenericHelperNode.GetLookupSignature(ILCompiler.DependencyAnalysis.NodeFactory factory, ILCompiler.DependencyAnalysis.ReadyToRunHelperId id, object target) Line 48\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.ReadyToRunGenericHelperNode.ReadyToRunGenericHelperNode(ILCompiler.DependencyAnalysis.NodeFactory factory, ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object target, Internal.TypeSystem.TypeSystemEntity dictionaryOwner) Line 34\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.ReadyToRunGenericLookupFromTypeNode.ReadyToRunGenericLookupFromTypeNode(ILCompiler.DependencyAnalysis.NodeFactory factory, ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object target, Internal.TypeSystem.TypeSystemEntity dictionaryOwner) Line 296\tC#\r\n \tILCompiler.WebAssembly.dll!ILCompiler.DependencyAnalysis.WebAssemblyReadyToRunGenericLookupFromTypeNode.WebAssemblyReadyToRunGenericLookupFromTypeNode(ILCompiler.DependencyAnalysis.NodeFactory factory, ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object target, Internal.TypeSystem.TypeSystemEntity dictionaryOwner) Line 12\tC#\r\n \tILCompiler.WebAssembly.dll!ILCompiler.DependencyAnalysis.WebAssemblyCodegenNodeFactory.CreateGenericLookupFromTypeNode(ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey helperKey) Line 88\tC#\r\n \tSystem.Collections.Concurrent.dll!System.Collections.Concurrent.ConcurrentDictionary<ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey, ILCompiler.DependencyAnalysis.ISymbolNode>.GetOrAdd(ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey key, System.Func<ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey, ILCompiler.DependencyAnalysis.ISymbolNode> valueFactory)\tUnknown\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.NodeFactory.NodeCache<ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey, ILCompiler.DependencyAnalysis.ISymbolNode>.GetOrAdd(ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey key) Line 150\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunHelperFromTypeLookup(ILCompiler.DependencyAnalysis.ReadyToRunHelperId id, object target, Internal.TypeSystem.TypeSystemEntity dictionaryOwner) Line 910\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.GetGenericLookupHelperAndAddReference(ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object helperArg, out LLVMSharp.LLVMValueRef helper, System.Collections.Generic.IEnumerable<LLVMSharp.LLVMTypeRef> additionalArgs) Line 3981\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.CallGenericHelper(ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object helperArg) Line 1538\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.ImportCasting(Internal.IL.ILOpcode opcode, int token) Line 1516\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.ImportBasicBlock(Internal.IL.ILImporter.BasicBlock basicBlock) Line 597\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.ImportBasicBlocks() Line 304\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.Import() Line 167\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.CompileMethod(ILCompiler.WebAssemblyCodegenCompilation compilation, ILCompiler.DependencyAnalysis.WebAssemblyMethodCodeNode methodCodeNodeNeedingCode) Line 85\tC#\r\n \tILCompiler.WebAssembly.dll!ILCompiler.WebAssemblyCodegenCompilation.ComputeDependencyNodeDependencies(System.Collections.Generic.List<ILCompiler.DependencyAnalysisFramework.DependencyNodeCore<ILCompiler.DependencyAnalysis.NodeFactory>> obj) Line 74\tC#\r\n \tILCompiler.DependencyAnalysisFramework.dll!ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer<ILCompiler.DependencyAnalysisFramework.NoLogStrategy<ILCompiler.DependencyAnalysis.NodeFactory>, ILCompiler.DependencyAnalysis.NodeFactory>.ComputeDependencies(System.Collections.Generic.List<ILCompiler.DependencyAnalysisFramework.DependencyNodeCore<ILCompiler.DependencyAnalysis.NodeFactory>> deferredStaticDependencies) Line 139\tC#\r\n```","Url":"https://github.com/dotnet/corert/issues/7934","RelatedDescription":"Open issue \"Wasm: fails the simple Generics TestNullableCasting test\" (#7934)"},{"Id":"543970884","IsPullRequest":true,"CreatedAt":"2019-12-30T18:29:30","Actor":"yowl","Number":"7933","RawContent":null,"Title":"WIP: Wasm: enables calling generic methods that need a hidden context from finally blocks","State":"open","Body":"Add supports for passing the generic context to finally funclets so that `foreach` statements over e.g. `List<>` can be compiled.  `foreach` will add a finally to call dispose on the enumerator which if the method is generic and needs the context from a hidden parameter was previously not compiling.\r\n\r\nAdded test for this case.\r\n\r\nWIP as depends on #7248 ","Url":"https://github.com/dotnet/corert/pull/7933","RelatedDescription":"Open PR \"WIP: Wasm: enables calling generic methods that need a hidden context from finally blocks\" (#7933)"},{"Id":"543557063","IsPullRequest":true,"CreatedAt":"2019-12-30T00:59:36","Actor":"jkotas","Number":"7932","RawContent":null,"Title":"Update versions of dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7932","RelatedDescription":"Closed or merged PR \"Update versions of dependencies\" (#7932)"},{"Id":"543383206","IsPullRequest":true,"CreatedAt":"2019-12-29T17:00:50","Actor":"am11","Number":"7931","RawContent":null,"Title":"Set TRYRUN_OUTPUT in set_cache_value macro","State":"closed","Body":"Also fix cmake warning about unused variable by conditionally including it.\r\nWarning is appearing in every build for sometime, [e.g.](https://dev.azure.com/dnceng/public/_build/results?buildId=467504&view=logs&j=9d9bed24-aafc-5ca0-72eb-d60e686a8d72&t=a99ab234-d192-591f-6b8f-e2800dd13d29&l=117)\r\n\r\nFollowup on https://github.com/dotnet/corert/pull/7899#issuecomment-565599126\r\nContributes to: #4589","Url":"https://github.com/dotnet/corert/pull/7931","RelatedDescription":"Closed or merged PR \"Set TRYRUN_OUTPUT in set_cache_value macro\" (#7931)"},{"Id":"543350545","IsPullRequest":false,"CreatedAt":"2019-12-29T10:25:49","Actor":"secana","Number":"7930","RawContent":null,"Title":"Myget feed does not exist (404)","State":"closed","Body":"I've tried to update CoreRT to the newest version, but I'm not able to download from MyGet.\r\n\r\nI get the following error message:\r\n```powershell\r\ndotnet add package Microsoft.DotNet.ILCompiler --version 1.0.5-prerelease-00002 --source https://www.myget.org/F/dotnet/api/v3/index.json\r\n  Writing C:\\Users\\x\\AppData\\Local\\Temp\\tmp5431.tmp\r\ninfo : Adding PackageReference for package 'Microsoft.DotNet.ILCompiler' into project 'C:\\Users\\Stefa\\source\\repos\\CertDump\\CertDump\\CertDump.csproj'.\r\ninfo : Restoring packages for C:\\Users\\x\\source\\repos\\CertDump\\CertDump\\CertDump.csproj...\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.ilcompiler/index.json\r\ninfo :   CACHE https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.dotnet.ilcompiler/index.json\r\ninfo :   NotFound https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.ilcompiler/index.json 689ms\r\nerror: Unable to load the service index for source https://www.myget.org/F/dotnet/api/v3/index.json.\r\nerror:   Response status code does not indicate success: 404 (Feed does not exist.).\r\n```\r\n\r\nAdding the feed to a nuget.config doesn't work either. Any ideas how to get the newest release?","Url":"https://github.com/dotnet/corert/issues/7930","RelatedDescription":"Closed issue \"Myget feed does not exist (404)\" (#7930)"},{"Id":"542941521","IsPullRequest":true,"CreatedAt":"2019-12-27T19:40:25","Actor":"jkotas","Number":"7928","RawContent":null,"Title":"Handle glibc sys/sysctl.h deprecation","State":"closed","Body":"Port https://github.com/dotnet/coreclr/pull/27048 to CoreRT PAL\r\n\r\nFixes #7927","Url":"https://github.com/dotnet/corert/pull/7928","RelatedDescription":"Closed or merged PR \"Handle glibc sys/sysctl.h deprecation\" (#7928)"},{"Id":"542935832","IsPullRequest":false,"CreatedAt":"2019-12-27T19:40:25","Actor":"Christopher876","Number":"7927","RawContent":null,"Title":"[Linux] glibc <sys/sysctl.h> header include build error","State":"closed","Body":"glibc deprecated <sys/sysctl.h> in version 2.30.\r\n\r\n## Software version:\r\n.NET Core 3.1\r\nFedora 31 x64\r\nglibc 2.30\r\n\r\n## Error:\r\n```bash\r\nSetting up directories for build\r\nChecking pre-requisites...\r\nCommencing build of corert native components for Linux.x64.Debug\r\n~/git/corert/bin/obj/Native/Linux.x64.Debug ~/git/corert\r\nInvoking cmake with arguments: \"/home/christopherwilliams/git/corert/buildscripts/..\" Debug\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/christopherwilliams/git/corert/bin/obj/Native/Linux.x64.Debug\r\nExecuting make install -j 5 \r\n[  1%] Built target bootstrappercpp\r\n[  1%] Built target AsmOffsets\r\n[  2%] Built target bootstrapper\r\n[  4%] Built target jitinterface\r\n[  6%] Built target bootstrapperdll\r\n[  6%] Building CXX object Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/unix/PalRedhawkUnix.cpp.o\r\n[  9%] Built target System.Private.CoreLib.Native\r\n[  9%] Building CXX object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/PalRedhawkUnix.cpp.o\r\n[  9%] Building CXX object Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/__/gc/unix/events.cpp.o\r\n[ 11%] Built target System.Private.TypeLoader.Native\r\n[ 11%] Building CXX object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/ThunksMapping.cpp.o\r\n[ 11%] Building CXX object Runtime/Full/CMakeFiles/Runtime.dir/__/unix/PalRedhawkUnix.cpp.o\r\nIn file included from /home/christopherwilliams/git/corert/src/Native/Runtime/unix/PalRedhawkUnix.cpp:48:\r\n/usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n#warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n ^\r\n[ 11%] Building CXX object Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/__/gc/unix/cgroup.cpp.o\r\nIn file included from /home/christopherwilliams/git/corert/src/Native/Runtime/unix/PalRedhawkUnix.cpp:48:\r\n/usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n#warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n ^\r\n1 error generated.\r\nmake[2]: *** [Runtime/Portable/CMakeFiles/PortableRuntime.dir/build.make:778: Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/unix/PalRedhawkUnix.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\n[ 12%] Building CXX object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/HardwareExceptions.cpp.o\r\n1 error generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/build.make:778: Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/PalRedhawkUnix.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\n[ 12%] Building CXX object Runtime/Full/CMakeFiles/Runtime.dir/__/ThunksMapping.cpp.o\r\nIn file included from /home/christopherwilliams/git/corert/src/Native/Runtime/unix/PalRedhawkUnix.cpp:48:\r\n/usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n#warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n ^\r\n1 error generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.dir/build.make:778: Runtime/Full/CMakeFiles/Runtime.dir/__/unix/PalRedhawkUnix.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [CMakeFiles/Makefile2:334: Runtime/Full/CMakeFiles/Runtime.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [CMakeFiles/Makefile2:280: Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/all] Error 2\r\nmake[1]: *** [CMakeFiles/Makefile2:361: Runtime/Portable/CMakeFiles/PortableRuntime.dir/all] Error 2\r\nmake: *** [Makefile:130: all] Error 2\r\nFailed to build corert native components.\r\n```","Url":"https://github.com/dotnet/corert/issues/7927","RelatedDescription":"Closed issue \"[Linux] glibc <sys/sysctl.h> header include build error\" (#7927)"},{"Id":"542474668","IsPullRequest":false,"CreatedAt":"2019-12-26T08:05:57","Actor":"chenxustu1","Number":"7926","RawContent":null,"Title":"osx with error \"The data area passed to a system call is too small\"","State":"open","Body":"source code works fine on windows.\r\nosx encounter error:\r\n\r\n> EXEC : error : The data area passed to a system call is too small. [/Users/xxxxx.csproj]\r\n   (Exception from HRESULT: 0x8007007A)\r\n  System.Runtime.InteropServices.COMException (0x8007007A): The data area passed to a system call is too small.\r\n   (Exception from HRESULT: 0x8007007A)\r\n     at System.StubHelpers.MngdNativeArrayMarshaler.ConvertContentsToNative(IntPtr pMarshalState, Object& pManagedHome, IntPtr pNativeHome)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.GetEnumTypeIndex(IntPtr objWriter, EnumTypeDescriptor enumTypeDescriptor, EnumRecordTypeDescriptor[] typeRecords)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.GetEnumTypeIndex(EnumTypeDescriptor enumTypeDescriptor, EnumRecordTypeDescriptor[] typeRecords)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetEnumTypeIndex(TypeDesc type)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetVariableTypeIndex(TypeDesc type, Boolean needsCompleteIndex)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetClassTypeIndex(TypeDesc type, Boolean needsCompleteType)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetTypeIndex(TypeDesc type, Boolean needsCompleteType)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetVariableTypeIndex(TypeDesc type, Boolean needsCompleteIndex)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetVariableTypeIndex(TypeDesc type)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitDebugVar(DebugVarInfo debugVar)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitDebugVarInfo(ObjectNode node)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/Users/xxxx/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-28426-01/b\r\nuild/Microsoft.NETCore.Native.targets(226,5): error MSB3073: The command \"\"/User\r\ns/xxxx/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha\r\n-28426-01/tools/ilc\" @\"obj/release/netcoreapp3.1/osx-x64/native/xxxxxxxx.ilc.rsp\r\n\"\" exited with code 1. [/Users/xxxxxxxxxxxx.csproj]","Url":"https://github.com/dotnet/corert/issues/7926","RelatedDescription":"Open issue \"osx with error \"The data area passed to a system call is too small\"\" (#7926)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"553912298","IsPullRequest":true,"CreatedAt":"2020-01-23T03:07:05","Actor":"dotnet-maestro[bot]","Number":"4209","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5a976d45-b90d-4c39-d453-08d76e1d3434)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 5a976d45-b90d-4c39-d453-08d76e1d3434\r\n- **Build**: 20200120.1\r\n- **Date Produced**: 1/20/2020 9:36 AM\r\n- **Commit**: 966115a91565d43cd545c1b8acd83eda2a0cb4cb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n\r\n[marker]: <> (End:5a976d45-b90d-4c39-d453-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4209","RelatedDescription":"Open PR \"[release/3.1.2xx] Update dependencies from dotnet/core-setup\" (#4209)"},{"Id":"553849935","IsPullRequest":true,"CreatedAt":"2020-01-22T23:15:33","Actor":"dotnet-maestro-bot","Number":"4208","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.2xx' => 'master'","State":"open","Body":"I detected changes in the release/3.1.2xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.2xx by the following committers:\n\n* wli3\n* nguerrera\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.2xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.2xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.2xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.2xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.2xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.2xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.2xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/4208","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.2xx' => 'master'\" (#4208)"},{"Id":"553799736","IsPullRequest":true,"CreatedAt":"2020-01-22T21:19:33","Actor":"fadimounir","Number":"4207","RawContent":null,"Title":"[WIP] Initial plumbing work to support compiling R2R images using crossgen2","State":"open","Body":"Posting as WIP at this point to get initial feedback, and because there are dependencies that need to be merged in other branches","Url":"https://github.com/dotnet/sdk/pull/4207","RelatedDescription":"Open PR \"[WIP] Initial plumbing work to support compiling R2R images using crossgen2\" (#4207)"},{"Id":"553541707","IsPullRequest":true,"CreatedAt":"2020-01-22T14:59:39","Actor":"dotnet-maestro[bot]","Number":"4206","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200121.7\r\n- **Date Produced**: 1/22/2020 11:06 AM\r\n- **Commit**: 9c82a36c23235c4d50954cb33a4d5d89b787a1aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.20071.7\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4206","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4206)"},{"Id":"551918977","IsPullRequest":true,"CreatedAt":"2020-01-22T14:42:50","Actor":"dotnet-maestro[bot]","Number":"4193","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200121.3\r\n- **Date Produced**: 1/21/2020 8:28 PM\r\n- **Commit**: e06e2807048b6bc7b3549b401a1833bed3bcd8c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20071.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4193","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4193)"},{"Id":"553315765","IsPullRequest":false,"CreatedAt":"2020-01-22T05:20:50","Actor":"wli3","Number":"4205","RawContent":null,"Title":"Install powershell script failed without good diagnose info","State":"open","Body":"For this issue the error is simply the following \r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=492107&view=logs&j=1f7f0ae9-6d8b-5300-18e4-8627865be549&t=a4594482-09b1-5607-9af7-3db5e61ee1a3\r\n\r\n```\r\n2020-01-21T20:01:12.6940988Z [2020/01/21 20:01:12][INFO] DotNet Install Path: 'D:\\a\\1\\s\\tools\\dotnet\\x64'\r\n2020-01-21T20:01:12.6941667Z [2020/01/21 20:01:12][INFO] Downloading https://dot.net/v1/dotnet-install.ps1\r\n2020-01-21T20:01:14.8182491Z [2020/01/21 20:01:14][INFO] $ pushd \"D:\\a\\1\\s\"\r\n2020-01-21T20:01:14.8183653Z [2020/01/21 20:01:14][INFO] $ powershell.exe -NoProfile -ExecutionPolicy Bypass D:\\a\\1\\s\\tools\\dotnet\\x64\\dotnet-install.ps1 -InstallDir D:\\a\\1\\s\\tools\\dotnet\\x64 -Architecture x64 -Channel release/3.1.2xx\r\n2020-01-21T20:01:16.1690996Z [2020/01/21 20:01:16][INFO] dotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.200-preview-014917/dotnet-sdk-3.1.200-preview-014917-win-x64.zip\r\n2020-01-21T20:01:17.4609587Z [2020/01/21 20:01:17][INFO] dotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.200-preview-014917/dotnet-sdk-3.1.200-preview-014917-win-x64.zip\r\n2020-01-21T20:01:30.7387155Z [2020/01/21 20:01:30][INFO] \".NET Core SDK\" with version = 3.1.200-preview-014917 failed to install with an unknown error.\r\n2020-01-21T20:01:30.7388687Z [2020/01/21 20:01:30][INFO] At D:\\a\\1\\s\\tools\\dotnet\\x64\\dotnet-install.ps1:678 char:5\r\n2020-01-21T20:01:30.7389370Z [2020/01/21 20:01:30][INFO] +     throw \"`\"$assetName`\" with version = $SpecificVersion failed to i ...\r\n2020-01-21T20:01:30.7389836Z [2020/01/21 20:01:30][INFO] +     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n2020-01-21T20:01:30.7390375Z [2020/01/21 20:01:30][INFO]     + CategoryInfo          : OperationStopped: (\".NET Core SDK\"... unknown error.:String) [], RuntimeException\r\n2020-01-21T20:01:30.7390856Z [2020/01/21 20:01:30][INFO]     + FullyQualifiedErrorId : \".NET Core SDK\" with version = 3.1.200-preview-014917 failed to install with an unknown\r\n2020-01-21T20:01:30.7391357Z [2020/01/21 20:01:30][INFO]    error.\r\n2020-01-21T20:01:30.7391761Z [2020/01/21 20:01:30][INFO] \r\n2020-01-21T20:01:30.8569932Z [2020/01/21 20:01:30][ERROR] Process exited with status 1\r\n2020-01-21T20:01:30.8575593Z [2020/01/21 20:01:30][INFO] $ popd\r\n```","Url":"https://github.com/dotnet/sdk/issues/4205","RelatedDescription":"Open issue \"Install powershell script failed without good diagnose info\" (#4205)"},{"Id":"553185267","IsPullRequest":false,"CreatedAt":"2020-01-21T22:39:06","Actor":"vatsan-madhavan","Number":"4204","RawContent":null,"Title":"RAR resolves incorrect WindowsBase.dll in .vcxproj with FrameworkReference to Microsoft.WindowsDesktop.App.WPF","State":"open","Body":"I think there may be a problem in RAR (or an adjacent target) failing to resolve WindowsBase correctly. \r\n\r\nRather than resolving WindowsBase.dll from Microsoft.WindowsDesktop.App.Ref, the build seems to allow WindowsBase.dll from Microsoft.NetCore.App.Ref to win during reference resolution. \r\n\r\n\r\nProject: [ApngImage.zip](https://github.com/dotnet/wpf/files/4074581/ApngImage.zip)\r\nBuild logs: [msbuild.zip](https://github.com/dotnet/wpf/files/4074572/msbuild.zip)\r\n\r\nThere is an active discussion about this in the Developer Community at https://developercommunity.visualstudio.com/content/problem/856860/ccli-net-core-unable-to-reference-wpf-classes.html. \r\n\r\nIn a simple .NET Core project with `<FrameworkReferenceInclude=\"Microsoft.WindowsDesktop.App.WPF\" />`,  we get build orchestration like this: \r\n\r\n- Build\r\n  - CoreBuild\r\n    - GenerateBuildDependencyFile\r\n      - _HandlePackageFileConflicts\r\n        - Encountered conflict between 'Reference:C:\\Program Files\\dotnet\\packs\\Microsoft.NETCore.App.Ref\\3.1.0\\ref\\netcoreapp3.1\\WindowsBase.dll' and 'Reference:C:\\Program Files\\dotnet\\packs\\Microsoft.WindowsDesktop.App.Ref\\3.1.0\\ref\\netcoreapp3.1\\WindowsBase.dll'. Choosing 'Reference:C:\\Program Files\\dotnet\\packs\\Microsoft.WindowsDesktop.App.Ref\\3.1.0\\ref\\netcoreapp3.1\\WindowsBase.dll' because file version '4.800.119.56501' is greater than '4.700.19.56404'.\r\n\r\nSimple .NET Core project with FrameworkReference to WPF: [ClassLibrary1.zip](https://github.com/dotnet/wpf/files/4074627/ClassLibrary1.zip)\r\nLogs showing correct WindowsBase resolution: [msbuild-good.zip](https://github.com/dotnet/wpf/files/4074625/msbuild-good.zip)\r\n\r\nIn the `vcxproj` build orchestration, nobody seems to be chaining into `_HandlePackageFileConflicts`. \r\n\r\n/cc @nguerrera, @amit-kabra\r\n\r\n_Originally posted by @vatsan-madhavan in https://github.com/dotnet/wpf/issues/2117#issuecomment-575424746_","Url":"https://github.com/dotnet/sdk/issues/4204","RelatedDescription":"Open issue \"RAR resolves incorrect WindowsBase.dll in .vcxproj with FrameworkReference to Microsoft.WindowsDesktop.App.WPF\" (#4204)"},{"Id":"553120918","IsPullRequest":false,"CreatedAt":"2020-01-21T20:58:17","Actor":"jaredpar","Number":"4203","RawContent":null,"Title":"Cannot use custom Microsoft.VisualBasic.dll for compilation","State":"closed","Body":"Here is [the documentation](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.VisualBasic.targets#L64) on how to specify a custom VB runtime for compilation:\r\n\r\n```txt\r\n   These defaults can be overridden as follows:\r\n    $(UseReferencedVBRuntime) == true:\r\n      Use referenced Microsoft.VisualBasic regardless of TFM.\r\n      This is an escape hatch for a custom Microsoft.VisualBasic reference\r\n      that can work as /vbruntime on a target framework other than .NET Core 3.0+\r\n    $(VBRuntime) != '':\r\n      Pass it through to compiler unchanged.\r\n```\r\n\r\nI tried to implement these by adding the following to my `netcoreapp3.1` VB project file:\r\n\r\n```xml\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <RootNamespace>console.vb</RootNamespace>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n\r\n    <VBRuntime>P:\\roslyn\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Emit.UnitTests\\Debug\\netcoreapp3.1\\Microsoft.VisualBasic.dll</VBRuntime>\r\n    <UseReferencedVBRuntime>false</UseReferencedVBRuntime>\r\n  </PropertyGroup>\r\n```\r\n\r\nDuring compilation though I get the following error:\r\n\r\n> vbc : error BC32210: Multiple assemblies with equivalent identity have been imported: 'C:\\Program Files\\dotnet\\packs\\Microsoft.NETCore.App.Ref\\3.1.0\\ref\\netcoreapp3.1\\Microsoft.VisualBasic.dll' and 'P:\\roslyn\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Emit.UnitTests\\Debug\\netcoreapp3.1\\Microsoft.VisualBasic.dll'. Remove one of the duplicate references. [P:\\temp\\console.vb\\console.vb.vbproj]","Url":"https://github.com/dotnet/sdk/issues/4203","RelatedDescription":"Closed issue \"Cannot use custom Microsoft.VisualBasic.dll for compilation\" (#4203)"},{"Id":"553018531","IsPullRequest":false,"CreatedAt":"2020-01-21T17:19:42","Actor":"heng-liu","Number":"4202","RawContent":null,"Title":"\".NET Core SDK\" with version = 3.1.200-preview-014917 failed to install with an unknown error.","State":"open","Body":"We install the latest preview version of SDK for testing in our build (specifying channel, like release/3.1.2xx during these days). \r\nBut now all our builds are blocked by this issue:\r\n`\".NET Core SDK\" with version = 3.1.200-preview-014917 failed to install with an unknown error.`\r\n\r\nWe found this is similar with https://github.com/dotnet/sdk/issues/3910\r\nIt looks like when SDK is in process of stabilizing , we'll be blocked by not able to get the latest preview version of SDK.\r\n\r\nMay I know if there is any suggestion to get unblocked, in the long term run? Thanks!","Url":"https://github.com/dotnet/sdk/issues/4202","RelatedDescription":"Open issue \"\".NET Core SDK\" with version = 3.1.200-preview-014917 failed to install with an unknown error.\" (#4202)"},{"Id":"552869371","IsPullRequest":true,"CreatedAt":"2020-01-21T15:05:24","Actor":"dotnet-maestro[bot]","Number":"4200","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200120.4\r\n- **Date Produced**: 1/21/2020 8:56 AM\r\n- **Commit**: 46d7becc6c59ed6cd101824814055b360337a702\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.20070.4\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4200","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4200)"},{"Id":"552876657","IsPullRequest":false,"CreatedAt":"2020-01-21T13:27:56","Actor":"dasMulli","Number":"4201","RawContent":null,"Title":"Support project forwarding for dotnet run","State":"open","Body":"`dotnet run` evaluates a project to get a command to run. If this also supports fowarding to other projects, this can also be used for solutions if the solution is extended via `Directory.Solution.props`,  `after.[thsln].sln.targets` or similar to define a \"default project to run\".\r\n\r\nThis would allow repository authors to create a solution structure that allows `dotnet build` and `dotnet run` to work on the top level.\r\n\r\ne.g. when defining a property in the project/solution evaluated by `dotnet run`:\r\n\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <RunProject>src\\web-app\\The.Web.App.csproj</RunProject>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nThen the run command would evaluate the project defined in `RunProject` and use values from there. This may or may not involve further redirects.","Url":"https://github.com/dotnet/sdk/issues/4201","RelatedDescription":"Open issue \"Support project forwarding for dotnet run\" (#4201)"},{"Id":"552775226","IsPullRequest":false,"CreatedAt":"2020-01-21T10:11:36","Actor":"DaveRooney1","Number":"4199","RawContent":null,"Title":"'dotnet test' on a solution with mixed projects (.NET Framework & core) targets none test projects and fails","State":"open","Body":"Hi,\r\n\r\nI am running \"dotnet test\" against a solution which has both .net framework (4.7.2) projects as well as dotnet core projects 2.2 & 3.1.\r\n\r\nThis seems to target the framework csproj files and throws errors like below:\r\n\r\n**Web projects:**\r\nerror MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\3.1.101\\Microsoft\\VisualStudio\\v16.0\\WebApplications\\Microsoft.WebApplication.targets\" was not found. Confirm that the expression in the Import declaration \"C:\\Program Files\\dotnet\\sdk\\3.1.101\\Microsoft\\VisualStudio\\v16.0\\WebApplications\\Microsoft.WebApplication.targets\" is correct, and that the file exists on disk.\r\n\r\n**Projects that access SQL (The reference does exist but the error says it does not):**\r\nerror CS0012: The type 'SqlConnection' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Data.SqlClient, Version=4.5.0.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. \r\n\r\n**Other error messages:**\r\nerror MSB4216: Could not run the \"GenerateResource\" task because MSBuild could not create or connect to a task host with runtime \"CLR4\" and architecture \"x86\".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable \"C:\\Program Files\\dotnet\\sdk\\3.1.100\\MSBuild.exe\" exists and can be run. \r\n\r\nerror MSB4062: The \"EnsureBindingRedirects\" task could not be loaded from the assembly ...\\packages\\Microsoft.Bcl.Build.1.0.21\\build\\Microsoft.Bcl.Build.Tasks.dll. Could not load file or assembly 'Microsoft.Build.Utilities.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. \r\n\r\n\r\nAs a workaround, I was going to create a separate solution with only the dotnet core projects but any help will be appreciated!\r\n\r\nThanks","Url":"https://github.com/dotnet/sdk/issues/4199","RelatedDescription":"Open issue \"'dotnet test' on a solution with mixed projects (.NET Framework & core) targets none test projects and fails\" (#4199)"},{"Id":"551556074","IsPullRequest":false,"CreatedAt":"2020-01-21T07:19:18","Actor":"mb720","Number":"4190","RawContent":null,"Title":"error NETSDK1083: The specified RuntimeIdentifier 'arch-x64' is not recognized","State":"closed","Body":"Steps to reproduce on Arch Linux 5.4.6:\r\n\r\n    dotnet new console -o TestProj\r\n\r\nThis produces:\r\n\r\n    The template \"Console Application\" was created successfully.\r\n\r\n    Processing post-creation actions...\r\n    Running 'dotnet restore' on TestProject/TestProject.csproj...\r\n    /usr/share/dotnet/sdk/3.1.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(88,5): error NETSDK1083: The specified RuntimeIdentifier 'arch-x64' is not recognized. [/home/mb/experiments/TestProject/TestProject.csproj]\r\n    /usr/share/dotnet/sdk/3.1.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(88,5): error NETSDK1083: The specified RuntimeIdentifier 'arch-x64' is not recognized. [/home/mb/experiments/TestProject/TestProject.csproj]\r\n    /usr/share/dotnet/sdk/3.1.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(88,5): error NETSDK1083: The specified RuntimeIdentifier 'arch-x64' is not recognized. [/home/mb/experiments/TestProject/TestProject.csproj]\r\n\r\n    Restore failed.\r\n    Post action failed.\r\n    Description: Restore NuGet packages required by this project.\r\n    Manual instructions: Run 'dotnet restore'\r\n\r\nRunning `dotnet restore` or `dotnet run Program.cs` inside the project:\r\n\r\n    /usr/share/dotnet/sdk/3.1.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(88,5): error NETSDK1083: The specified RuntimeIdentifier 'arch-x64' is not recognized. [/home/mb/experiments/TestProject/TestProject.csproj]\r\n    /usr/share/dotnet/sdk/3.1.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(88,5): error NETSDK1083: The specified RuntimeIdentifier 'arch-x64' is not recognized. [/home/mb/experiments/TestProject/TestProject.csproj]\r\n    /usr/share/dotnet/sdk/3.1.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(88,5): error NETSDK1083: The specified RuntimeIdentifier 'arch-x64' is not recognized. [/home/mb/experiments/TestProject/TestProject.csproj]\r\n\r\n    dotnet --info\r\n\r\n    .NET Core SDK (reflecting any global.json):\r\n    Version:   3.1.100\r\n    Commit:    cd82f021f4\r\n\r\n    Runtime Environment:\r\n    OS Name:     arch\r\n    OS Version:  \r\n    OS Platform: Linux\r\n    RID:         arch-x64\r\n    Base Path:   /usr/share/dotnet/sdk/3.1.100/\r\n\r\n    Host (useful for support):\r\n      Version: 3.1.0\r\n      Commit:  4e9ce2915b\r\n\r\n    .NET Core SDKs installed:\r\n      3.1.100 [/usr/share/dotnet/sdk]\r\n\r\n    .NET Core runtimes installed:\r\n      Microsoft.NETCore.App 3.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n    To install additional .NET Core runtimes or SDKs:\r\n      https://aka.ms/dotnet-download\r\n\r\n    dotnet --version\r\n    3.1.100\r\n\r\n    dotnet --list-sdks\r\n    3.1.100 [/usr/share/dotnet/sdk]\r\n\r\n    dotnet --list-runtimes\r\n    Microsoft.NETCore.App 3.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n\r\nCreating and running a project used to work in previous versions.\r\n\r\nIs there something I can do to fix this?\r\n\r\nThanks for looking into this.\r\n","Url":"https://github.com/dotnet/sdk/issues/4190","RelatedDescription":"Closed issue \"error NETSDK1083: The specified RuntimeIdentifier 'arch-x64' is not recognized\" (#4190)"},{"Id":"550410958","IsPullRequest":true,"CreatedAt":"2020-01-20T17:39:35","Actor":"dotnet-maestro[bot]","Number":"4180","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: ee7760b1-2875-4869-d002-08d7114cdbad\r\n- **Build**: 20200117.03\r\n- **Date Produced**: 1/17/2020 7:27 PM\r\n- **Commit**: c03f2fe62663edec83d1bc12b4e9f11bd3de5d0e\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4180","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#4180)"},{"Id":"552292209","IsPullRequest":true,"CreatedAt":"2020-01-20T14:55:54","Actor":"dotnet-maestro[bot]","Number":"4197","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200119.2\r\n- **Date Produced**: 1/20/2020 3:05 AM\r\n- **Commit**: cd622cd50c7104fc14a25fb199f8377472920f2e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.20069.2\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4197","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4197)"},{"Id":"552320326","IsPullRequest":false,"CreatedAt":"2020-01-20T14:05:04","Actor":"emveepee","Number":"4198","RawContent":null,"Title":"dotnet/cli   dotnet-install-sh  3.1.100  --runtime variations","State":"open","Body":"Using dotnet-install.sh on linux  doesn't give inconsistent versions and I cannot update aspnetcore to current release\r\n\r\ndotnet-install.sh -c LTS --runtime aspnetcore -DryRun\r\ndotnet-install: Payload URLs:\r\ndotnet-install: Primary named payload URL: https://dotnetcli.azureedge.net/dotnet/aspnetcore/Runtime/3.1.0/aspnetcore-runtime-3.1.0-linux-x64.tar.gz\r\ndotnet-install: Repeatable invocation: ./dotnet-install.sh --version \"3.1.0\" --install-dir \"/root/.dotnet\" --architecture \"x64\" --runtime \"aspnetcore\"\r\n\r\n\r\ndotnet-install.sh -c LTS  -DryRun\r\ndotnet-install: Payload URLs:\r\ndotnet-install: Primary named payload URL: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.101/dotnet-sdk-3.1.101-linux-x64.tar.gz\r\ndotnet-install: Repeatable invocation: ./dotnet-install.sh --version \"3.1.101\" --install-dir \"/root/.dotnet\" --architecture \"x64\"\r\n\r\ndotnet-install.sh -c LTS --runtime dotnet  -DryRun\r\ndotnet-install: Payload URLs:\r\ndotnet-install: Primary named payload URL: https://dotnetcli.azureedge.net/dotnet/Runtime/3.1.1/dotnet-runtime-3.1.1-linux-x64.tar.gz\r\ndotnet-install: Repeatable invocation: ./dotnet-install.sh --version \"3.1.1\" --install-dir \"/root/.dotnet\" --architecture \"x64\" --runtime \"dotnet\"\r\n\r\n/dotnet-install.sh -c 3.1 -runtime aspnetcore -DryRun\r\ndotnet-install: Payload URLs:\r\ndotnet-install: Primary named payload URL: https://dotnetcli.azureedge.net/dotnet/aspnetcore/Runtime/a1388f194c30cb21b36b75982962cb5e35954e4e/aspnetcore-runtime-a1388f194c30cb21b36b75982962cb5e35954e4e-linux-x64.tar.gz\r\ndotnet-install: Repeatable invocation: ./dotnet-install.sh --version \"a1388f194c30cb21b36b75982962cb5e35954e4e\" --install-dir \"/root/.dotnet\" --architecture \"x64\" --runtime \"aspnetcore","Url":"https://github.com/dotnet/sdk/issues/4198","RelatedDescription":"Open issue \"dotnet/cli   dotnet-install-sh  3.1.100  --runtime variations\" (#4198)"},{"Id":"552198529","IsPullRequest":true,"CreatedAt":"2020-01-20T10:10:13","Actor":"dotnet-maestro[bot]","Number":"4196","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: e0b7e874-2dc6-462b-dd42-08d72a4caef5\r\n- **Build**: 20200120.1\r\n- **Date Produced**: 1/20/2020 9:36 AM\r\n- **Commit**: 966115a91565d43cd545c1b8acd83eda2a0cb4cb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4196","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#4196)"},{"Id":"552056102","IsPullRequest":false,"CreatedAt":"2020-01-20T04:14:10","Actor":"erikest","Number":"4195","RawContent":null,"Title":"Publish command doesn't respect runtime identifier when selecting native library from nuget packages","State":"open","Body":"Having trouble coming up with the best short description of the problem in the title there but here's the issue:\r\n\r\nI've added support for gRPC with .net core on raspberry pi with a package for that specific rid:  linux-arm. My nuget package uses the convention for native libraries `runtimes\\<rid>\\native\\<lib>`.  The grpc core package also uses this convention, but _doesn't_ have the linux-arm rid, just linux.  Both packages are required when publishing for arm, but with the native library from mine and the .net assembly from grpc core.  \r\n\r\nWhen I publish with `-r linux-arm`, my expectation is that it would find the library it's looking for preferring the matching directory for the rid being published.  It used to do this correctly in 3.0 preview, which was the last time I updated my package.  To get people going, I supply a dotnet new project template which demonstrates the library with a simple client / server they can deploy to the pi, and while trying to test my package by publishing with the 3.1.101 sdk, I get the following:\r\n\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\Users\\Geocoder\\.nuget\\packages\\grpc.core\\2.26.0\\runtimes\\linux\\native\\libgrpc_csharp_ext.x86.so' and 'CopyLocal:C:\\Users\\Geocoder\\.nuget\\packages\\libgrpc_csharp_ext.arm7\\1.0.9\\runtimes\\linux-arm\\native\\libgrpc_csharp_ext.x86.so'. Choosing 'CopyLocal:C:\\Users\\Geocoder\\.nuget\\packages\\grpc.core\\2.26.0\\runtimes\\linux\\native\\libgrpc_csharp_ext.x86.so' arbitrarily as both items are copy-local and have equal file and assembly versions.\r\n```\r\n\r\nShouldn't it prefer the specific runtime before comparing file versions?  Seems more important as the other library isn't even going to load on the pi.\r\n\r\nAlso, as the file in question is a native lib, it doesn't have an assembly version, so it's not an accurate explanation besides.","Url":"https://github.com/dotnet/sdk/issues/4195","RelatedDescription":"Open issue \"Publish command doesn't respect runtime identifier when selecting native library from nuget packages\" (#4195)"},{"Id":"551921632","IsPullRequest":true,"CreatedAt":"2020-01-19T14:53:31","Actor":"dotnet-maestro[bot]","Number":"4194","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200118.4\r\n- **Date Produced**: 1/19/2020 9:13 AM\r\n- **Commit**: 339b44734dad126a1241a10511ec1c5ecd1f41cf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.20068.4\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4194","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4194)"},{"Id":"550413408","IsPullRequest":true,"CreatedAt":"2020-01-18T22:38:16","Actor":"dotnet-maestro[bot]","Number":"4181","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: e0b7e874-2dc6-462b-dd42-08d72a4caef5\r\n- **Build**: 20200117.4\r\n- **Date Produced**: 1/17/2020 10:19 PM\r\n- **Commit**: 916b5cba268e1e1e803243004f4276cf40b2dda8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4181","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#4181)"},{"Id":"551769312","IsPullRequest":true,"CreatedAt":"2020-01-18T15:01:24","Actor":"dotnet-maestro[bot]","Number":"4192","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200117.9\r\n- **Date Produced**: 1/18/2020 10:14 AM\r\n- **Commit**: c4bddfbe85c0ba3498a1129ec560eb24d2f1df85\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.20067.9\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4192","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4192)"},{"Id":"551766363","IsPullRequest":true,"CreatedAt":"2020-01-18T14:21:49","Actor":"dotnet-maestro[bot]","Number":"4191","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200117.2\r\n- **Date Produced**: 1/17/2020 11:26 PM\r\n- **Commit**: 514e47a844ea7fe193978725c15e67ec16bff572\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20067.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20067.2\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20067.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4191","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4191)"},{"Id":"551402252","IsPullRequest":true,"CreatedAt":"2020-01-17T17:02:50","Actor":"dotnet-maestro[bot]","Number":"4187","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200116.1\r\n- **Date Produced**: 1/16/2020 1:39 PM\r\n- **Commit**: bca68c2df2c6230389f10def3880a61db266c6c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20066.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20066.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20066.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4187","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4187)"},{"Id":"551411067","IsPullRequest":true,"CreatedAt":"2020-01-17T15:20:31","Actor":"dotnet-maestro[bot]","Number":"4188","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200116.11\r\n- **Date Produced**: 1/17/2020 9:54 AM\r\n- **Commit**: 4db72366e8e49c30d7aa6d2cc920cf063fb911ea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.20066.11\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4188","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4188)"},{"Id":"551439162","IsPullRequest":false,"CreatedAt":"2020-01-17T14:15:09","Actor":"zii-dmg","Number":"4189","RawContent":null,"Title":"dotnet --info identation inconsistency","State":"open","Body":"`dotnet --info` prints first two sections (`.NET Core SDK` and `Runtime Environment`) with one whitespace indent and other sections with two whitespaces. Most help output of `dotnet` is indented with two whitespaces.\r\n\r\nExample:\r\n```\r\n>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.101\r\n Commit:    b377529961\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.101\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.1\r\n  Commit:  a1388f194c\r\n\r\n.NET Core SDKs installed:\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n...\r\n```\r\nCode:\r\n[One whitespace](https://github.com/dotnet/toolset/blob/0f6551cfd7b50fd226bccb7a4da81fc0bcb76e97/src/dotnet/Program.cs#L304)\r\n[Two whitespaces](https://github.com/dotnet/runtime/blob/8d817ee237d355d539135acfa5513e2fa86d0666/src/installer/corehost/cli/fxr/command_line.cpp#L286)\r\n","Url":"https://github.com/dotnet/sdk/issues/4189","RelatedDescription":"Open issue \"dotnet --info identation inconsistency\" (#4189)"},{"Id":"551312011","IsPullRequest":false,"CreatedAt":"2020-01-17T09:49:34","Actor":"Saba-Ghani","Number":"4186","RawContent":null,"Title":"AWS Error Http 500.31","State":"open","Body":"Hi,\r\n\r\nI'm new to AWS, trying to deploy my .net core 3.1 application on AWS and finding this error. \r\n![image](https://user-images.githubusercontent.com/59004595/72602107-875a1100-3938-11ea-830c-6e473fd2fda2.png)\r\nCan someone please help- .net sdk and runtime are in place. ","Url":"https://github.com/dotnet/sdk/issues/4186","RelatedDescription":"Open issue \"AWS Error Http 500.31\" (#4186)"},{"Id":"550802831","IsPullRequest":true,"CreatedAt":"2020-01-16T17:52:22","Actor":"dotnet-maestro[bot]","Number":"4185","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200115.4\r\n- **Date Produced**: 1/16/2020 6:46 AM\r\n- **Commit**: 5c9338e09ad0a2f282c3dd14b0cc06aab37887a0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.20065.4\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4185","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4185)"},{"Id":"550793056","IsPullRequest":true,"CreatedAt":"2020-01-16T14:31:56","Actor":"dotnet-maestro[bot]","Number":"4184","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200115.5\r\n- **Date Produced**: 1/16/2020 5:26 AM\r\n- **Commit**: 39220c078e22f4b5a053e0de5c616a567446a0eb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20065.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20065.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20065.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4184","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4184)"},{"Id":"550511784","IsPullRequest":false,"CreatedAt":"2020-01-16T00:55:05","Actor":"Varorbc","Number":"4183","RawContent":null,"Title":"SDK installer did not remove previous patch versions","State":"open","Body":"According to the [announcement](https://github.com/dotnet/announcements/issues/102), the SDK installer will remove previous patch versions but did not work\r\n\r\n![image](https://user-images.githubusercontent.com/5714438/72483926-99a35480-383d-11ea-8b56-3c0c007377b2.png)\r\n\r\n```bash\r\ndotnet --info\r\n\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   3.1.101\r\n Commit:    b377529961\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.101\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.1\r\n  Commit:  a1388f194c\r\n\r\n.NET Core SDKs installed:\r\n  2.2.203 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/4183","RelatedDescription":"Open issue \"SDK installer did not remove previous patch versions\" (#4183)"},{"Id":"550414362","IsPullRequest":false,"CreatedAt":"2020-01-15T21:19:10","Actor":"StefanBertels","Number":"4182","RawContent":null,"Title":"dotnet publish skips custom files (PrepareForRunDependsOn)","State":"closed","Body":"My `publish` folder misses files I have in the output folder after calling `dotnet publish` (self-contained).\r\n\r\nI have a custom C# library as nuget package.  This nuget package contains legacy DLL files (and some more in a similar way).\r\n\r\nThis is in the library csproj:\r\n```\r\n  <ItemGroup>\r\n    <Content Include=\"MyLegacy.*.dll\" PackagePath=\"my\\\" CopyToOutputDirectory=\"Always\" />\r\n    <Content Include=\"MyLegacy.targets\" PackagePath=\"build\\\" />\r\n  </ItemGroup>\r\n```\r\nMyLegacy.targets content:\r\n```\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n<PropertyGroup>\r\n    <CleanDependsOn> MyLegacyCleanTarget; $(CleanDependsOn) </CleanDependsOn>\r\n    <PrepareForRunDependsOn>$(PrepareForRunDependsOn);MyLegacyBuildTarget</PrepareForRunDependsOn>\r\n</PropertyGroup>\r\n<Target Name=\"MyLegacyBuildTarget\">\r\n    <ItemGroup>\r\n        <ExtraFile Include=\"$(MSBuildThisFileDirectory)\\..\\my\\MyLegacy.*.dll\" />\r\n    </ItemGroup>\r\n    <Copy SourceFiles=\"@(ExtraFile)\" DestinationFolder=\"$(OutputPath)\" />\r\n</Target>\r\n<Target Name=\"MyLegacyCleanTarget\">\r\n    <ItemGroup>\r\n        <_FilesToDelete Include=\"$(OutputPath)\\MyLegacy.*.dll\"/>\r\n    </ItemGroup>\r\n    <Delete Files=\"@(_FilesToDelete)\"/></Target>\r\n</Project>\r\n```\r\n\r\nThe consuming (console) project references this nuget package: \r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>\r\n    <RuntimeIdentifier>win7-x64</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"MyLegacy\" Version=\"1.2.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThis worked fine when everything was .NET Framework and it still works fine when building as netcoreapp3.1. But calling `dotnet publish` (building a self-contained deployment) ignores these extra files. They are in `bin\\Release\\win7-x64` but missing in `bin\\Release\\win7-x64\\publish`","Url":"https://github.com/dotnet/sdk/issues/4182","RelatedDescription":"Closed issue \"dotnet publish skips custom files (PrepareForRunDependsOn)\" (#4182)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1220078186165415937","CreatedAt":"2020-01-22T20:18:02+00:00","UserScreenname":"dotnet","Text":"See what's happening in the world of #Blazor...\n\nIn today's keynote replay from #dotNETConf, we get the latest and… https://t.co/FJjiBh8142","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":42,"FavoriteCount":19,"RawContent":null},{"Id":"1220018058355449856","CreatedAt":"2020-01-22T16:19:06+00:00","UserScreenname":"dotnet","Text":"Build native mobile apps using #CSharp &amp; #dotNET for #iOS &amp; #Android using familiar web programming patterns.\n\n🎉 An… https://t.co/hsdWi1hiRi","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":112,"FavoriteCount":59,"RawContent":null},{"Id":"1219735175019581441","CreatedAt":"2020-01-21T21:35:01+00:00","UserScreenname":"dotnet","Text":"#dotNETConf Focus on 🔥 Blazor🔥 replays on-demand are here‼️ \n\nCheck out the full playlist on our new YouTube channe… https://t.co/x0Rm4oYsRo","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":77,"FavoriteCount":30,"RawContent":null},{"Id":"1219680328496766976","CreatedAt":"2020-01-21T17:57:05+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":19,"FavoriteCount":6,"RawContent":null},{"Id":"1219656174238404608","CreatedAt":"2020-01-21T16:21:06+00:00","UserScreenname":"dotnet","Text":"Here are 🔟 tips to help you make your code quality better c/o @realDotNetDave: https://t.co/OZcR1sGqoO https://t.co/plczhn33Xb","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":39,"FavoriteCount":18,"RawContent":null},{"Id":"1219366992056147968","CreatedAt":"2020-01-20T21:12:00+00:00","UserScreenname":"dotnet","Text":"Looking to learn more about #IoT? Join us in this journey of discovery in this 9-part series on dev'ing for #dotNET… https://t.co/Y0E5CdgbuP","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":45,"FavoriteCount":23,"RawContent":null},{"Id":"1219291000398663681","CreatedAt":"2020-01-20T16:10:02+00:00","UserScreenname":"dotnet","Text":"Microservices-based apps consist of multiple services and are built with a variety of programming languages. \n \nOn… https://t.co/VQu1g2DMzm","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":67,"FavoriteCount":25,"RawContent":null},{"Id":"1218296194314784768","CreatedAt":"2020-01-17T22:17:02+00:00","UserScreenname":"dotnet","Text":"In this episode, #OndotNET &amp; @AshishC1 discuss where Service Bus fits in the #Azure messaging landscape. PLUS, we g… https://t.co/kMK3Vobc4W","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"1218204611397529602","CreatedAt":"2020-01-17T16:13:07+00:00","UserScreenname":"dotnet","Text":"How do you write XAML? \n\n@LyalinDotCom talks about the on-going efforts to make coding in #XAML faster, easier, &amp; m… https://t.co/5JuI0ZkPKE","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":27,"FavoriteCount":18,"RawContent":null},{"Id":"1217926256714567686","CreatedAt":"2020-01-16T21:47:02+00:00","UserScreenname":"dotnet","Text":"Give @MairaCW &amp; @GotHeap 2mins 31secs # they'll teach you a little bit about expression bodied members in #CSharp.… https://t.co/yB2aaZAfdr","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"1217841446696443906","CreatedAt":"2020-01-16T16:10:01+00:00","UserScreenname":"dotnet","Text":"Containers sound like a good idea - but can you get your application live on them? \n\n#dotNETRocks talks to… https://t.co/vvoY40yDkE","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":32,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2020-01-23T05:30:42.6789834Z","RunDurationInMilliseconds":17340}