{"Data":{"Blog":{"FeedItems":[{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null},{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null},{"Title":"Visual Challenge Conquered!","PublishedOn":"2019-04-03T19:03:49+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The post Visual Challenge Conquered! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/visual-challenge-conquered/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019","PublishedOn":"2019-04-02T19:56:18+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The post What&#8217;s New for Xamarin Developers in Visual Studio 2019 appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-visual-studio-2019/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9534487927","Type":"PullRequestEvent","CreatedAt":"2019-04-30T01:49:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3041","RelatedDescription":"Merged pull request \"Bump to mono/mono/2019-02@00362f57\" (#3041) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/13654\r\nFixes: https://github.com/mono/mono/issues/14079\r\nFixes: https://github.com/xamarin/xamarin-macios/issues/5809\r\n\r\nContext: https://github.com/xamarin/monodroid/runs/113546526\r\nContext: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=2629299\r\n\r\nMost importantly, we *hope* that mono/mono@0136ead4 will fix a\r\nXamarin.Android Designer integration bug which prevented\r\n`libmonosgen-2.0.dll` from being loaded on Windows because\r\n`libmonosgen-2.0.dll` was (1) referencing `libgcc_s_seh-1.dll`, and\r\n(2) `libgcc_s_seh-1.dll` could not be found (it wasn't packaged).\r\n\r\nCommit mono/mono@0136ead4 *should* remove the dependency on\r\n`libgcc_s_seh-1.dll`, thus fixing the Designer tests on Windows."},{"Id":"9533702168","Type":"PullRequestEvent","CreatedAt":"2019-04-29T22:07:59","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3044","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] don't copy to linksrc for Debug builds\" (#3044) at xamarin/xamarin-android","RelatedBody":"While investigating performance of the `_LinkAssembliesNoShrink`\r\nMSBuild target, I noticed it has the following behavior:\r\n\r\n* Take all assemblies from `@(ResolvedAssemblies)`. These are their\r\n  original locations from after `Build`. Some from `bin\\Debug`, some\r\n  from `$(UserProfile)\\.nuget`, etc.\r\n* Output assemblies directly to be packaged, in:\r\n  `$(IntermediateOutputPath)android\\assets`\r\n\r\nAfter a build, however, there was a `linksrc` directory containing all\r\nassemblies. For the Xamarin.Forms app in this repo, it was ~69.7MB and\r\nhad 77 files.\r\n\r\nBut this directory appears to be completely unused when\r\n`$(AndroidLinkMode)` is `None`?\r\n\r\nThat means we could skip a few MSBuild targets in this case:\r\n\r\n* `_CopyIntermediateAssemblies`\r\n* `_CopyPdbFiles`\r\n* `_CopyMdbFiles`\r\n\r\nAn initial build of the Xamarin.Forms project in this repo used to\r\ntake:\r\n\r\n     16 ms  _CopyMdbFiles                              1 calls\r\n     77 ms  _CopyPdbFiles                              1 calls\r\n    202 ms  _CopyIntermediateAssemblies                1 calls\r\n\r\nSo this looks like it saves ~275ms on debug builds. I suspect the\r\nsavings would be even better on slower machines (or without SSDs)."},{"Id":"9533566908","Type":"PullRequestEvent","CreatedAt":"2019-04-29T21:41:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3027","RelatedDescription":"Merged pull request \"[build] Create symlink to MSBuild's `Current` \"version\" directory\" (#3027) at xamarin/xamarin-android","RelatedBody":"Newer MSBuild versions are moving to use the `Current` directory instaed of a\r\nversioned one (e.g. `14.0`, `15.0`) to keep its binaries, targets etc. Without\r\npointing to that directory in a symlink from\r\n`bin/$(Configuration)/lib/xamarin.android/xbuild` the build will fail on Unix\r\nwith an error similar to:\r\n\r\n  bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Aapt2.targets(31,3): error MSB3191: Unable to create directory \"/Debug/\". Access to the path '/Debug/' is denied.\r\n\r\nAdjust XABuildPaths.cs to first look for the `Current` directory and only then\r\nfor the old `15.0` one."},{"Id":"9533350155","Type":"PullRequestEvent","CreatedAt":"2019-04-29T21:02:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3043","RelatedDescription":"Opened pull request \"[build] Remove `llvm` submodule\" (#3043) at xamarin/xamarin-android","RelatedBody":"We should prefer using mono's `llvm` submodule instead of providing\r\nour own, as:\r\n\r\n 1. Having *both* `external/llvm` *and* `external/mono/external/llvm`\r\n    is confusing (which one \"wins\"?), and\r\n\r\n 2. The one that *actually* matters (\"wins\") is mono's `llvm`, as\r\n    that's the one included in the mono archive, which is now used by\r\n    default (333b98b3).\r\n\r\nSimplify life.  Remove `external/llvm`."},{"Id":"9533114989","Type":"PullRequestEvent","CreatedAt":"2019-04-29T20:24:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3040","RelatedDescription":"Merged pull request \"[tests] Consistently run `run-api-compatibility-tests`\" (#3040) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/491\r\nContext: https://github.com/xamarin/xamarin-android/pull/3032#issuecomment-487174225\r\n\r\nA \"funny\" thing has happened with the mono/2019-02 bump: it has\r\napparently [broken API compatibility][0], which was not detected or\r\nreported in the last [mono/2019-02 PR build][1].\r\n\r\nWhat went wrong is that the `make run-all-tests` step was failing,\r\nreporting an error, but because of how `make run-all-tests` was\r\nstructured, when the `RunAllTests` MSBuild target failed,\r\n*no further tests were run*.\r\n\r\nFurther tests such as the API compatibility tests!\r\n\r\nFix the `make run-all-tests` target so that even if the `RunAllTests`\r\nMSBuild target fails, we *continue executing tests* so that the\r\n`make run-api-compatibility-tests` target is consistently executed.\r\n\r\nThe exit value of `make run-all-tests` is the exit value of the\r\n*last failed test*.\r\n\r\n[0]: https://github.com/xamarin/xamarin-android/pull/3032#issuecomment-487174225\r\n[1]: https://jenkins.mono-project.com/job/xamarin-android-pr-pipeline-release/684/"},{"Id":"9532752311","Type":"PullRequestEvent","CreatedAt":"2019-04-29T19:25:54","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3042","RelatedDescription":"Opened pull request \"Support running unit tests against a system installation\" (#3042) at xamarin/xamarin-android","RelatedBody":"Adds Initial support to run apk instrumentation tests against a system installation.\r\n\r\nEnhances APK Instrumentation to better report and diagnose failures."},{"Id":"9532648476","Type":"PullRequestEvent","CreatedAt":"2019-04-29T19:09:06","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3041","RelatedDescription":"Opened pull request \"Bump to mono/mono/2019-02@00362f57\" (#3041) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/13654\r\nFixes: https://github.com/mono/mono/issues/14079\r\nFixes: https://github.com/xamarin/xamarin-macios/issues/5809\r\n\r\nContext: https://github.com/xamarin/monodroid/runs/113546526\r\nContext: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=2629299\r\n\r\nMost importantly, we *hope* that mono/mono@0136ead4 will fix a\r\nXamarin.Android Designer integration bug which prevented\r\n`libmonosgen-2.0.dll` from being loaded on Windows because\r\n`libmonosgen-2.0.dll` was (1) referencing `libgcc_s_seh-1.dll`, and\r\n(2) `libgcc_s_seh-1.dll` could not be found (it wasn't packaged).\r\n\r\nCommit mono/mono@0136ead4 *should* remove the dependency on\r\n`libgcc_s_seh-1.dll`, thus fixing the Designer tests on Windows."},{"Id":"9532621533","Type":"PullRequestEvent","CreatedAt":"2019-04-29T19:04:38","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3030","RelatedDescription":"Merged pull request \"[monodroid] Change the libmono-native dllmap target on osx\" (#3030) at xamarin/xamarin-android","RelatedBody":"One of the designer unit tests is failing on Mac with:\r\n\r\n    [2019-04-25 21:52:55.8] INFO: : Unhandled Exception:\r\n    [2019-04-25 21:52:55.8] INFO: : System.TypeInitializationException: The type initializer for 'System.Console' threw an exception. ---> System.DllNotFoundException: libmono-native.so\r\n    [2019-04-25 21:52:55.8] INFO: :   at (wrapper managed-to-native) Interop+Sys.Stat(byte&,Interop/Sys/FileStatus&)\r\n    [2019-04-25 21:52:55.8] INFO: :   at Interop+Sys.Stat (System.ReadOnlySpan`1[T] path, Interop+Sys+FileStatus& output) [0x00028] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.IO.FileSystem.FileExists (System.ReadOnlySpan`1[T] fullPath, System.Int32 fileType, Interop+ErrorInfo& errorInfo) [0x00007] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.IO.FileSystem.FileExists (System.ReadOnlySpan`1[T] fullPath) [0x00006] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.IO.File.Exists (System.String path) [0x00043] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.IO.LogcatTextWriter.IsRunningOnAndroid () [0x00000] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.Console.SetupStreams (System.Text.Encoding inputEncoding, System.Text.Encoding outputEncoding) [0x00050] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.Console..cctor () [0x0004f] in <ca2a591e441f458bb6bef167b4521022>:0\r\n\r\nFirst, the `.so` extension is wrong. Also the designer puts the assemblies in temporary location, without the shared libraries, so the share `libmono-native` library is not found. Designer preloads the runtime shared libraries instead.\r\n\r\nSo we set the dllmap target on Mac to `__Internal` and the designer will preload the `libmono-native`."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9534346722","Type":"PullRequestEvent","CreatedAt":"2019-04-30T01:02:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5320","RelatedDescription":"Closed pull request \"Added ReturnType to Editor\" (#5320) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded support for ReturnType property to Editor. Moved ReturnType from Entry to base class InputView.\r\nIt also fixes several reported issues.\r\n\r\nProbably ReturnCommand property should also be moved to InputView, something which will be handled in a future ticket.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - ReturnType InputView.ReturnType  { get; set; } //Bindable Property\r\n\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9534322869","Type":"PullRequestEvent","CreatedAt":"2019-04-30T00:54:41","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5984","RelatedDescription":"Closed pull request \"Debug CI\" (#5984) at xamarin/Xamarin.Forms","RelatedBody":""},{"Id":"9534094106","Type":"IssuesEvent","CreatedAt":"2019-04-29T23:46:36","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6016","RelatedDescription":"Closed issue \"[Bug] (Shell, Android) Shell.Current.GoToAsync 2 levels from root causes root page so flicker in at transition\" (#6016) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nXamarin.Form Shell on Android\r\nnavigating between 2 pages registered with Routing.RegisterRoute causes the root page to appear during navigation transition.\r\n\r\n \r\n Shell.Current.GoToAsync 2 levels from root causes root page so flicker in at transition\r\n### Steps to Reproduce\r\n\r\n1. \r\n[Straxa-master.zip](https://github.com/xamarin/Xamarin.Forms/files/3120099/Straxa-master.zip)\r\n\r\n2. Register 2 routes for pages (page1 and page2) that are not defined on the shell.xaml structure , with Routing.RegisterRoute\r\n\r\n3. from shell root page, Shell.Current.GoToAsync to registered route/page 1 - navigation is ok\r\n\r\n4. from page1 , Shell.Current.GoToAsync to registered route/page 2\r\n\r\n5. from page2, navigate back\r\n\r\n### Expected Behavior\r\n4. navigate to page 2 smoothly\r\n5. navigates to page 1 \r\n\r\n### Actual Behavior\r\n4. root page appears for an instant, then page 2 appears\r\n5. navigates to root page\r\n\r\n### Basic Information\r\n\r\n- Version with issue: xamarin.forms 4.0.0.346134-pre9\r\n- Last known good version: n/a ( the stack implementation on pre9 differs from pre8 as it does not exist, but up to root (null) / current page\r\n\r\n- IDE: visual studio 2019 16.0.1 (win)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS: n/a\r\n  - Android: any\r\n  - UWP:  n/a\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\nsee attached project to reproduce with information in-code\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9534071213","Type":"PullRequestEvent","CreatedAt":"2019-04-29T23:40:13","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6025","RelatedDescription":"Merged pull request \"fix global routes to push onto stack correctly\" (#6025) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nPages on shell sections were always just being pushed off. This change correctly interprets the URI request and then pushes or replaces accordingly\r\n\r\n### Issues Resolved ### \r\n- fixes #6016 \r\n\r\n### API Changes ###\r\n Removed:\r\n - Made ShellSection.GoToAsync internal for now. Converted away from public virtual. This will be replaced later with handlers\r\n \r\n\r\n### Platforms Affected ### \r\n- Core/XAML (all platforms)\r\n\r\n### Testing Procedure ###\r\nThere is a unit test but you can try doing this\r\ngotoasync(\"page\")\r\ngotoasync(\"page\")\r\n\r\nand make sure it creates a stack of two pages\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n\r\n"},{"Id":"9533775731","Type":"PullRequestEvent","CreatedAt":"2019-04-29T22:24:25","Actor":"dansiegel","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6047","RelatedDescription":"Opened pull request \"Add EventToCommandBehavior\" (#6047) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis would replace PR #5685 from @davidortinau for an EventToCommandBehavior. This makes two changes\r\n\r\n1) Adds the AssociatedObject in Behavior{T} which is the major missing piece of Behavior and even shown in numerous samples and docs.\r\n2) Adds the EventToCommandBehavior from Prism which provides support for invoking a command based on a Path Name of a property in the EventArgs and/or using a IValueConverter to convert the EventArgs/Property \r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - T Behavior<T>.AssociatedObject { get; } \r\n - EventToCommandBehavior\r\n \r\n### Platforms Affected ### \r\n\r\n- Core\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nn/a\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9533715629","Type":"IssuesEvent","CreatedAt":"2019-04-29T22:10:59","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6046","RelatedDescription":"Opened issue \"Label LineHeight does not render the same on iOS and Android\" (#6046) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIf you change the default `LineHeight` on a `Label`, when text is wrapped, Android seems to be applying spacing between lines. On the other hand, iOS changes the height of each line, which creates unnecessary padding above the first line.\r\n\r\n### Steps to Reproduce\r\nRun the attached repro on both platforms and notice that iOS line spacing is off.\r\n\r\n### Reproduction Link\r\n\r\n[App18776.zip](https://github.com/xamarin/Xamarin.Forms/files/3129362/App18776.zip)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9535116056","Type":"PullRequestEvent","CreatedAt":"2019-04-30T05:25:14","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5957","RelatedDescription":"Merged pull request \"Bump mono to head of 2019-02\" (#5957) at xamarin/xamarin-macios","RelatedBody":"New commits in mono/mono:\n\n* mono/mono@c4ea64e1b1a [interp] fix op_explicit for cast from nfloat to nint and vice versa (#14221)\n* mono/mono@0613d5890a1 [2019-02] Fix arm32 tailcall_reg/tailcall_membase. (#14235)\n* mono/mono@0157e9e396a [2019-02] [interp] Fix interp strmfld vt (#14211)\n* mono/mono@c7ae3117772 [2019-02] [acceptance-tests] Run roslyn tests using in-tree mono instead of system mono (#14197)\n* mono/mono@5a96819a1cc [interp] Fix GetFunctionPointer\n* mono/mono@f13f53d2e6f [interp] Fix buffer overflow when incrementing sp (#14175)\n* mono/mono@e66c7667424 [monodroid] Bump corefx for more disabled tests\n* mono/mono@2905b39edc8 Fix pointing to a PR\n* mono/mono@2f9606a17e3 Fix copy/paste typos\n* mono/mono@a82d5c4d1e0 [monodroid] Disable/adjust some tests\n* mono/mono@a418e944cc3 Merge pull request #14162 from directhex/fix-fsharp-patch-target-bockbuild\n* mono/mono@1093ea8b8ca Fix MSBuild/FSharp patch, which was missed in backport\n* mono/mono@f1b2de3bbee [aot] partial revert of #14043\n* mono/mono@4a3945ede61 [monodroid] Exclude System.IO.Tests.File_Copy_str_str CoreFX testsuite (#14133)\n* mono/mono@6a23ed6c6cd [2019-02] Protecting boxing a null value (#14114)\n* mono/mono@196138eb86f [2019-02] Update msbuild to vs16 (#14061)\n* mono/mono@3a8f93b9a47 Increase gsharedvt trampolines by 10% from 4000 to 4400.\n\nDiff: https://github.com/mono/mono/compare/cf880be66a2d1cc8ca34e345114a7f420b7b86ea..c4ea64e1b1a522c011224ed389869ebd34e55bc3"},{"Id":"9535111819","Type":"PullRequestEvent","CreatedAt":"2019-04-30T05:23:50","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5960","RelatedDescription":"Merged pull request \"[builds] Fix race condition when building device runtimes.\" (#5960) at xamarin/xamarin-macios","RelatedBody":"We need to complete the corresponding cross builds first, because the cross\nbuilds will also try to configure device builds, so we might end up with two\nmake processes trying to configure the same target simulatenously.\n\nAlso add support for building mono from source in pull requests by using\nlabels."},{"Id":"9533232822","Type":"IssuesEvent","CreatedAt":"2019-04-29T20:43:43","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5913","RelatedDescription":"Closed issue \"iOS depends on private symbols which prevents builds with no linking from submission (Xamarin.Forms and others)\" (#5913) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Use latest XF nuget 3.6.0.293080\r\n2. Archive for publishing in release mode\r\n3. Upload using Application Loader\r\n\r\n### Expected Behaviour\r\n\r\nIt should work fine as before\r\n\r\n### Actual Behavior\r\n\r\nApple complains that the app makes reference to non-public APIs:\r\n\r\nWe identified one or more issues with a recent delivery for your app. Please correct the following issues, then upload again.\r\n\r\nNon-public API usage:\r\n\r\nThe app references non-public selectors in App.iOS: addTemporaryAttribute:value:forCharacterRange:, addTemporaryAttributes:forCharacterRange:, behaviorWithType:, defaultBaselineOffsetForFont:, defaultLineHeightForFont:, finished, greekingThreshold, horizontalCornerRadius, initWithSource:convolutionState:weights:, initWithType:, postSession:didAddPlayer:, postSession:didReceiveData:fromPlayer:, postSession:didReceiveMessage:withData:fromPlayer:, postSession:didRemovePlayer:, postSession:player:didChangeConnectionState:, postSession:player:didSaveData:, preferredMetalContext, removeData:, removeTemporaryAttribute:forCharacterRange:, setGreekingThreshold:, setHorizontalCornerRadius:, setIsPrimary:, setShouldAntiAlias:, setUUID:, setVerticalCornerRadius:, shouldAntiAlias, temporaryAttribute:atCharacterIndex:effectiveRange:, temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:, temporaryAttributesAtCharacterIndex:effectiveRange:, temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:, textContainerChangedTextView:, toolTip, usesBackgroundSession, verticalCornerRadius\r\nIf method names in your source code match the private Apple APIs listed above, altering your method names will help prevent this app from being flagged in future submissions. In addition, note that one or more of the above APIs may be located in a static library that was included with your app. If so, they must be removed.\n\n> VS bug [#855982](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/855982)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":14,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":93,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":149,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null},{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":44,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":29,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2019-04-30T05:30:54.2884059Z","RunDurationInMilliseconds":1863}