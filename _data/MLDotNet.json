{"Data":{"GitHub":{"Issues":[{"Id":"414814181","IsPullRequest":true,"CreatedAt":"2019-02-27T05:02:18","Actor":"wschin","Number":"2745","RawContent":null,"Title":"Remove IMultiStreamSource when path (type: string) exists in text loader APIs","State":"closed","Body":"Fix bugs introduced in #2710. If `string path` and `IMultiStreamSource dataExample` are present at the same time, we drop `IMultiStreamSource dataExample`.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2745","RelatedDescription":"Closed or merged PR \"Remove IMultiStreamSource when path (type: string) exists in text loader APIs\" (#2745)"},{"Id":"414939291","IsPullRequest":true,"CreatedAt":"2019-02-27T04:26:43","Actor":"jwood803","Number":"2754","RawContent":null,"Title":"Replace Float with float","State":"open","Body":"Fix for #1669.","Url":"https://github.com/dotnet/machinelearning/pull/2754","RelatedDescription":"Open PR \"Replace Float with float\" (#2754)"},{"Id":"414381392","IsPullRequest":true,"CreatedAt":"2019-02-27T02:49:00","Actor":"zeahmed","Number":"2730","RawContent":null,"Title":"Scrubbing FieldAwareFactorizationMachine learner.","State":"closed","Body":"This PR partially addressed https://github.com/dotnet/machinelearning/issues/2620\r\n\r\nIn FieldAwareFactorizationMachine related classes, the following tasks were performed.\r\n* Checking to make sure that unnecessary public methods/properties be `internal`.\r\n* Renaming parameters according to standard.\r\n* Creating/Refactoring samples according to standards.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2730","RelatedDescription":"Closed or merged PR \"Scrubbing FieldAwareFactorizationMachine learner.\" (#2730)"},{"Id":"414902960","IsPullRequest":true,"CreatedAt":"2019-02-27T01:37:10","Actor":"wschin","Number":"2753","RawContent":null,"Title":"[WIP] Scrub Fast Tree Family","State":"open","Body":"This PR fixes #2617 and is also a part of #2613.\r\n\r\nCleaned items:\r\n\r\n- [x] FastTree.cs\r\n- [x] FastTreeArguments.cs\r\n- [ ] Derived fast tree classes\r\n- [ ] Gam family","Url":"https://github.com/dotnet/machinelearning/pull/2753","RelatedDescription":"Open PR \"[WIP] Scrub Fast Tree Family\" (#2753)"},{"Id":"414748153","IsPullRequest":true,"CreatedAt":"2019-02-27T00:31:43","Actor":"codemzs","Number":"2740","RawContent":null,"Title":"Microsoft.ML.Internal.Internallearn should be hidden/moved/renamed","State":"closed","Body":"fixes #2714","Url":"https://github.com/dotnet/machinelearning/pull/2740","RelatedDescription":"Closed or merged PR \"Microsoft.ML.Internal.Internallearn should be hidden/moved/renamed\" (#2740)"},{"Id":"414884463","IsPullRequest":false,"CreatedAt":"2019-02-27T00:21:51","Actor":"Ivanidzo4ka","Number":"2752","RawContent":null,"Title":"FastTree needs it's own package","State":"open","Body":"We decided move FastTree library into separate package.","Url":"https://github.com/dotnet/machinelearning/issues/2752","RelatedDescription":"Open issue \"FastTree needs it's own package\" (#2752)"},{"Id":"414840808","IsPullRequest":true,"CreatedAt":"2019-02-26T23:44:17","Actor":"wschin","Number":"2747","RawContent":null,"Title":"Expose split gains in tree models","State":"closed","Body":"Fix #2658 by adding split gains to tree's public API. \r\n","Url":"https://github.com/dotnet/machinelearning/pull/2747","RelatedDescription":"Closed or merged PR \"Expose split gains in tree models\" (#2747)"},{"Id":"414872944","IsPullRequest":false,"CreatedAt":"2019-02-26T23:37:41","Actor":"sfilipi","Number":"2751","RawContent":null,"Title":"Namespace reorg for the Microsoft.ML package","State":"open","Body":"Related to #2326, and the feedback of the ML.Net public surface API recommended the following changes:\r\n \r\n1 - Microsoft.ML.Trainers.* everything should go to Microsoft.ML.Trainers, except FastTree. \r\n2- Microsoft.ML.Transforms.* should go to Microsoft.ML.Transforms with the exception of Text and Images\r\n\r\n\r\ncc @Ivanidzo4ka , @eerhardt @TomFinley \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2751","RelatedDescription":"Open issue \"Namespace reorg for the Microsoft.ML package\" (#2751)"},{"Id":"414869153","IsPullRequest":false,"CreatedAt":"2019-02-26T23:24:21","Actor":"daholste","Number":"2750","RawContent":null,"Title":"R4 label works with some but not all binary classification trainers","State":"open","Body":"This code:\r\n\r\n```C#\r\nusing System;\r\nusing Microsoft.ML.Data;\r\n\r\nnamespace Microsoft.ML.Samples\r\n{\r\n    internal static class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var context = new MLContext();\r\n            var options = new TextLoader.Options()\r\n            {\r\n                Columns = new TextLoader.Column[]\r\n                {\r\n                    new TextLoader.Column(\"Label\", DataKind.Single, 0),\r\n                    new TextLoader.Column(\"Sentiment\", DataKind.String, 1)\r\n                },\r\n                HasHeader = true\r\n            };\r\n            var loader = context.Data.CreateTextLoader(options);\r\n            var data = loader.Read(@\"C:\\AutoMLDotNet\\src\\Samples\\Data\\wikipedia-detox-250-line-data.tsv\");\r\n            var estimator = context.Transforms.Text.FeaturizeText(\"Features\", \"Sentiment\")\r\n                .Append(context.BinaryClassification.Trainers.AveragedPerceptron());\r\n            var transformer = estimator.Fit(data);\r\n            var scoredData = transformer.Transform(data);\r\n            var metrics = context.BinaryClassification.EvaluateNonCalibrated(scoredData);\r\n            Console.WriteLine(metrics.Accuracy);\r\n            Console.WriteLine(\"Press any key...\");\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n```\r\nworks great!\r\n\r\nIf you replace AveragedPerceptron with LogisticRegression, it throws the exception:\r\n```\r\n 'Schema mismatch for label column: expected Bool, got R4'\r\n```\r\n\r\nThis may indicate a bug in label schema validation with some binary learners","Url":"https://github.com/dotnet/machinelearning/issues/2750","RelatedDescription":"Open issue \"R4 label works with some but not all binary classification trainers\" (#2750)"},{"Id":"414864473","IsPullRequest":true,"CreatedAt":"2019-02-26T23:08:22","Actor":"singlis","Number":"2749","RawContent":null,"Title":"Scrubbing PkPd","State":"open","Body":"- Renamed pkpd class to PkPdTrainer\r\n- Renamed pkpd.cs to PkPdTrainer.cs\r\n- Updates to comments and documentation\r\n\r\nRelated to #2619 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2749","RelatedDescription":"Open PR \"Scrubbing PkPd\" (#2749)"},{"Id":"414846952","IsPullRequest":true,"CreatedAt":"2019-02-26T22:16:56","Actor":"ganik","Number":"2748","RawContent":null,"Title":"Move Learner* input base and Transform* input base out of Entrypoints…","State":"open","Body":"fixes #2582\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2748","RelatedDescription":"Open PR \"Move Learner* input base and Transform* input base out of Entrypoints…\" (#2748)"},{"Id":"414762209","IsPullRequest":true,"CreatedAt":"2019-02-26T22:14:22","Actor":"Ivanidzo4ka","Number":"2742","RawContent":null,"Title":"Respect group id in options for ranking task","State":"closed","Body":"Fix https://github.com/dotnet/machinelearning/issues/2652","Url":"https://github.com/dotnet/machinelearning/pull/2742","RelatedDescription":"Closed or merged PR \"Respect group id in options for ranking task\" (#2742)"},{"Id":"414840331","IsPullRequest":false,"CreatedAt":"2019-02-26T21:59:51","Actor":"sfilipi","Number":"2746","RawContent":null,"Title":"Should the Microsoft.ML.*.StaticPipe namespaces fold into the Microsoft.ML.StaticPipe?","State":"open","Body":"As we are aligning the namespaces of the trainers and transforms main package, `Microsoft.ML`; and moving them from subcategories to the main root, we should probably do the same for the StaticPipe assembly and namespaces. \r\n\r\nSo potentially move things like: \r\nMicrosoft.ML.StaticPipe.Runtime\r\nMicrosoft.ML.HalLearners.StaticPipe\r\nMicrosoft.ML.Transforms.StaticPipe\r\nMicrosoft.ML.LightGBM.StaticPipe\r\n\r\nto \r\nMicrosoft.ML.StaticPipe\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2746","RelatedDescription":"Open issue \"Should the Microsoft.ML.*.StaticPipe namespaces fold into the Microsoft.ML.StaticPipe?\" (#2746)"},{"Id":"414373920","IsPullRequest":true,"CreatedAt":"2019-02-26T21:23:23","Actor":"Anipik","Number":"2727","RawContent":null,"Title":"Added performance tests for small array input for cpumath functions","State":"closed","Body":"I also tried Unrolling the loop for small input. \r\nFor small functions like add, scale unrolling the loop only shows improvement for length 13-15\r\nFor little complex functions like dotproduct , loop is always better than the unrolling scenario.\r\n\r\nThe pr adds the performance tests for small inputs software implementation\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2727","RelatedDescription":"Closed or merged PR \"Added performance tests for small array input for cpumath functions\" (#2727)"},{"Id":"414380910","IsPullRequest":true,"CreatedAt":"2019-02-26T21:22:10","Actor":"najeeb-kazmi","Number":"2729","RawContent":null,"Title":"Adding sample for LightGbm ranking","State":"closed","Body":"Replacing PR #2704 and #2650 as I messed up commit history there.\r\n\r\nFixes #2530\r\nFixes #776\r\n\r\n* Adds a sample for LightGbm ranking.\r\n* Cleans up namespaces in Microsoft.ML.Samples project.\r\n* Addresses feedback from previous PRs","Url":"https://github.com/dotnet/machinelearning/pull/2729","RelatedDescription":"Closed or merged PR \"Adding sample for LightGbm ranking\" (#2729)"},{"Id":"414780361","IsPullRequest":true,"CreatedAt":"2019-02-26T19:31:39","Actor":"codemzs","Number":"2744","RawContent":null,"Title":"Make EarlyStoppingMetric an enum.","State":"open","Body":"fixes #2521\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2744","RelatedDescription":"Open PR \"Make EarlyStoppingMetric an enum.\" (#2744)"},{"Id":"414754017","IsPullRequest":true,"CreatedAt":"2019-02-26T19:28:06","Actor":"codemzs","Number":"2741","RawContent":null,"Title":"Internalize Microsoft.ML.Internal.CpuMath.GeneralUtils.","State":"closed","Body":"fixes #2737\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2741","RelatedDescription":"Closed or merged PR \"Internalize Microsoft.ML.Internal.CpuMath.GeneralUtils.\" (#2741)"},{"Id":"414729013","IsPullRequest":false,"CreatedAt":"2019-02-26T19:28:05","Actor":"eerhardt","Number":"2737","RawContent":null,"Title":"Internalize Microsoft.ML.Internal.CpuMath.GeneralUtils","State":"closed","Body":"We have a single type exposed in `namespace Microsoft.ML.Internal.CpuMath`\r\n\r\n```C#\r\nnamespace Microsoft.ML.Internal.CpuMath {\r\n    public static class GeneralUtils {\r\n        public static int CbitLowZero(uint u);\r\n    }\r\n}\r\n```\r\n\r\nwe should make it internal.\r\n\r\nPart of #2326\r\n\r\n/cc @codemzs @sfilipi ","Url":"https://github.com/dotnet/machinelearning/issues/2737","RelatedDescription":"Closed issue \"Internalize Microsoft.ML.Internal.CpuMath.GeneralUtils\" (#2737)"},{"Id":"414770315","IsPullRequest":true,"CreatedAt":"2019-02-26T19:07:38","Actor":"singlis","Number":"2743","RawContent":null,"Title":"Scrubbing OneVsAll","State":"open","Body":"- Renamed OVA to OneVsAllTrainer\r\n- Updates to comments and documentation\r\nRelated to #2619","Url":"https://github.com/dotnet/machinelearning/pull/2743","RelatedDescription":"Open PR \"Scrubbing OneVsAll\" (#2743)"},{"Id":"414742119","IsPullRequest":false,"CreatedAt":"2019-02-26T17:57:21","Actor":"Husseinbeygi","Number":"2739","RawContent":null,"Title":"Rms is Too High","State":"open","Body":"Hi \r\nI use the Taxi Fair Code Sample and i changed it to predict  the LAST Price of a Stock in Market \r\nnothing too big.....\r\nRms is on 40 and Predict is wrong\r\n\r\nMy question  is what can i do to reduce the Rms?\r\nand why Rms is too high?","Url":"https://github.com/dotnet/machinelearning/issues/2739","RelatedDescription":"Open issue \"Rms is Too High\" (#2739)"},{"Id":"414731575","IsPullRequest":true,"CreatedAt":"2019-02-26T17:31:59","Actor":"wschin","Number":"2738","RawContent":null,"Title":"Polish GetColumn on IDataView","State":"open","Body":"To fix #2473, we need to\r\n\r\n- [x] Remove IHostEnviroment from GetColumn's argument list. Note that our strategy is using `Constracts`.\r\n- [x] Replace column name with `DataViewSchema.Column` in GetColumn's argument list.\r\n\r\nReview steps:\r\n1. Start with the 2nd iteration because some changes in the 1st iteration got discarded.\r\n2. Removal of IHostEnviroment happens in the 2nd iteration.\r\n3. Uses of `DataViewSchema.Column` are done in the 3rd iteration.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/2738","RelatedDescription":"Open PR \"Polish GetColumn on IDataView\" (#2738)"},{"Id":"414713692","IsPullRequest":false,"CreatedAt":"2019-02-26T16:52:56","Actor":"darren-zdc","Number":"2736","RawContent":null,"Title":"Question in the Text Encoding when doing mlContext.Data.ReadFromTextFile","State":"open","Body":"General question, does ML.NET support code page other than utf-8?\r\nAre we able to set the file encoding to other than utf-8? Or that is totally not necessary.\r\n\r\nFor example, I'm going to analyze the sentiment project in French. And my training dataset is all in French. Will the training process run as expected? ","Url":"https://github.com/dotnet/machinelearning/issues/2736","RelatedDescription":"Open issue \"Question in the Text Encoding when doing mlContext.Data.ReadFromTextFile\" (#2736)"},{"Id":"414701876","IsPullRequest":false,"CreatedAt":"2019-02-26T16:29:04","Actor":"yaeldekel","Number":"2735","RawContent":null,"Title":"Add API to save/load models with their input schema","State":"open","Body":"Reasons for this are listed in issue #2663.\r\n\r\nCurrently, ModelOperationsCatalog offers the following API:\r\n\r\n```\r\npublic void Save(ITransformer model, Stream stream) \r\npublic ITransformer Load(Stream stream)\r\n```\r\nSo when using a loaded model, users have to create the `IDataView` to be passed to the `ITransformer` themselves by creating a new `TextLoader`, (or another way?). \r\nI suggest adding these new APIs to ModelOperationsCatalog:\r\n\r\n```\r\npublic void Save<TSource>(IDataReader<TSource> model, Stream stream);\r\npublic void Save<TSource>(IDataReader<TSource> reader, ITransformer model, Stream stream);\r\npublic IDataReader<TSource> Load<TSource>(Stream stream);\r\n```\r\nThe last one would return a `CompositeDataReader` containing the loader and the `ITransformer` chain, so we could also add new APIs to `DataOperationsCatalog` to only load the reader:\r\n\r\n```\r\npublic TextLoader CreateTextLoader(Stream stream);\r\n```\r\n\r\nAnother option is to add an API that creates a `PredictionEngine` from a `Stream`, or an API that creates a `SchemaDefinition` from a `Stream` (that way users can use the existing API to create a `PredictionEngine`).\r\n\r\n@TomFinley, what do you think?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2735","RelatedDescription":"Open issue \"Add API to save/load models with their input schema\" (#2735)"},{"Id":"414594508","IsPullRequest":false,"CreatedAt":"2019-02-26T12:47:58","Actor":"rauhs","Number":"2734","RawContent":null,"Title":"Catalog.NormalizeText doesn't offer a multi-column version","State":"open","Body":"API: Usually most catalog functions will have an overloaded method to supply multiple columns.\r\n\r\nE.g. `ctx.Transforms.Text.TokenizeWords()`. Though, `ctx.Transforms.Text.NormalizeText()` only offers single input column to single output column. Was this overlooked or by-design?","Url":"https://github.com/dotnet/machinelearning/issues/2734","RelatedDescription":"Open issue \"Catalog.NormalizeText doesn't offer a multi-column version\" (#2734)"},{"Id":"414565468","IsPullRequest":true,"CreatedAt":"2019-02-26T11:32:19","Actor":"jwood803","Number":"2733","RawContent":null,"Title":"Enable TextFeaturization tests","State":"open","Body":"Also update tests to use the `SSWE` model.\r\n\r\nFix for #2668.","Url":"https://github.com/dotnet/machinelearning/pull/2733","RelatedDescription":"Open PR \"Enable TextFeaturization tests\" (#2733)"},{"Id":"414434974","IsPullRequest":false,"CreatedAt":"2019-02-26T05:15:47","Actor":"Neeraj-Kashyap","Number":"2732","RawContent":null,"Title":"Can speech recognition be done in ML.NET?","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:  Windows\r\n- **.NET Version (eg., dotnet --info)**:  .NET Framework 4.6\r\n\r\n### Issue\r\n\r\nI am new to Machine Learning. I came across ML.NET (Machine Learning framework by Microsoft). Can we use this framework for speech recognition? What all things you should know if you want to do a speech recognition in ML.NET?\r\n\r\n ","Url":"https://github.com/dotnet/machinelearning/issues/2732","RelatedDescription":"Open issue \"Can speech recognition be done in ML.NET?\" (#2732)"},{"Id":"414430411","IsPullRequest":true,"CreatedAt":"2019-02-26T04:52:21","Actor":"artidoro","Number":"2731","RawContent":null,"Title":"Rename IDataLoader, IDataReader and IDataReaderEstimator","State":"open","Body":"Fixes #2144.\r\n\r\nAs discussed in the issue, it was agreed that `TextReader`, `BinaryReader` and `IDataReader` were bad names because they overlap with .NET concepts.\r\n\r\nIn this PR I:\r\n1. rename `IDataLoader` to `ILegacyDataLoader` (commit 1).\r\n2. rename `IDataReader` to `IDataLoader` and `IDataReaderEstimator` to `IDataLoaderEstimator` (commit 2).","Url":"https://github.com/dotnet/machinelearning/pull/2731","RelatedDescription":"Open PR \"Rename IDataLoader, IDataReader and IDataReaderEstimator\" (#2731)"},{"Id":"414380107","IsPullRequest":false,"CreatedAt":"2019-02-26T01:01:09","Actor":"Ivanidzo4ka","Number":"2728","RawContent":null,"Title":"Ranker Evaluate doesn't allow you specify metric parameters.","State":"open","Body":"https://github.com/dotnet/machinelearning/blob/3b9d407d9dc4f8c46fa85ab80575ef16d74df6df/src/Microsoft.ML.Data/TrainCatalog.cs#L626\r\nI can't specify how deep I want to calculate NDCG@i (i.e. i maximum), I can't specify custom gains.","Url":"https://github.com/dotnet/machinelearning/issues/2728","RelatedDescription":"Open issue \"Ranker Evaluate doesn't allow you specify metric parameters.\" (#2728)"},{"Id":"414369082","IsPullRequest":false,"CreatedAt":"2019-02-26T00:13:46","Actor":"wschin","Number":"2726","RawContent":null,"Title":"Text loader v.s in-memory data structure in examples","State":"open","Body":"We often starts our trainer examples with text loader but recently I feel loading text into `IDataView` is not directly related to the actual training procedure. If we use\r\n```csharp\r\n        /// <summary>\r\n        /// Example with one binary label and 10 feature values.\r\n        /// </summary>\r\n        public class BinaryLabelFloatFeatureVectorSample\r\n        {\r\n            public bool Label;\r\n\r\n            [VectorType(_simpleBinaryClassSampleFeatureLength)]\r\n            public float[] Features;\r\n        }\r\n```\r\nas our in-memory example, we can create more [flexible examples](https://github.com/dotnet/machinelearning/blob/7cc208c36edec554b6353a3a268cfb5e49274d17/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/SDCASupportVectorMachine.cs#L12) like [scikit-learn ones (where data matrix is float matrix)](https://scikit-learn.org/stable/modules/svm.html#multi-class-classification) and make ML.NET's learning curve smoother (because users don't need to learn text loader, the loaded data, and trainer at the same time).\r\n\r\ncc @shmoradims, @rogancarr, @sfilipi.","Url":"https://github.com/dotnet/machinelearning/issues/2726","RelatedDescription":"Open issue \"Text loader v.s in-memory data structure in examples\" (#2726)"},{"Id":"414367658","IsPullRequest":false,"CreatedAt":"2019-02-26T00:08:10","Actor":"Ivanidzo4ka","Number":"2725","RawContent":null,"Title":"Are we happy with Anomaly Detection metrics?","State":"open","Body":"Right now it has two properties.\r\nAUC and DetectionRateAtKFalsePosititives.\r\nWe describe `DetectionRateAtKFalsePosititives`\r\nas:\r\n```\r\n /// This is computed as follows:\r\n        /// 1.Sort the test examples by the output of the anomaly detector in descending order of scores.\r\n        /// 2.Among the top K False Positives,  compute ratio :  (True Positive @ K)  / (Total anomalies in test data)\r\n        /// Example confusion matrix for anomaly detection:\r\n        ///                            Anomalies (in test data)  | Non-Anomalies (in test data)\r\n        ///  Predicted Anomalies     :         TP                |           FP\r\n        ///  Predicted Non-Anomalies :         FN                |           TN\r\n```\r\nand we expose nothing of that.\r\nNo True positive, no total anomalies, no K which user need to save somewhere else.\r\n\r\nShould we expand this metrics right now or wait till v1.0 release?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/2725","RelatedDescription":"Open issue \"Are we happy with Anomaly Detection metrics?\" (#2725)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-27T05:30:55.4915941Z","RunDurationInMilliseconds":1135}