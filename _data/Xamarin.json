{"Data":{"Blog":{"FeedItems":[{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8227777899","Type":"PullRequestEvent","CreatedAt":"2018-09-07T01:03:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2149","RelatedDescription":"Merged pull request \"[Mono.Android] build and reference non-PCL Java.Interop\" (#2149) at xamarin/xamarin-android","RelatedBody":"Fixes: http://work.devdiv.io/667174\r\n\r\nContext: https://github.com/xamarin/java.interop/commit/893562cb6b02031c5991ec94769db5fd1a88b53e\r\nContext: https://github.com/xamarin/java.interop/commit/659711c77407c95a27b58ff6f2c84c9fe6db0691\r\nContext: https://github.com/xamarin/java.interop/compare/b873e81...a09932d\r\n\r\nBumped to java.interop/d15-9/a09932d\r\n\r\nBuild `lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\Java.Interop.dll`\r\nas a `MonoAndroid`-profile assembly instead of as a PCL assembly.\r\nThis decreases the assemblies referenced in a \"Hello World\"\r\nXamarin.Android project dramatically; this:\r\n\r\n\tAdding assembly reference for Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\t    Adding assembly reference for System.Runtime, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.ComponentModel.Composition, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, recursively...\r\n\t    Adding assembly reference for System.Diagnostics.Debug, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Threading, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Collections.Concurrent, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Reflection, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Linq.Expressions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Reflection.Primitives, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Dynamic.Runtime, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.ObjectModel, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Linq, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Runtime.InteropServices, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Runtime.Extensions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Reflection.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\tAdding assembly reference for Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\r\nnow becomes:\r\n\r\n\tAdding assembly reference for Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\tAdding assembly reference for Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\r\nBecause fewer assemblies need to be resolved, the `Rebuild` target\r\ntimes improve by 30%-50% for the \"Hello World\" app:\r\n\r\n  - `Debug` + PCL:            8.424s\r\n  - `Debug` + *not* PCL:      4.258s (~50% faster!)\r\n  - `Release` + PCL:         13.651s\r\n  - `Release` + *not* PCL:    9.487s (~30% faster!)\r\n\r\nThe `lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Java.Interop.dll`\r\ncopy used by `Xamarin.Android.Build.Tasks.dll` remains unchanged, as\r\nit is referenced by `Xamarin.Android.Build.Tasks.csproj`."},{"Id":"8227777280","Type":"PullRequestEvent","CreatedAt":"2018-09-07T01:03:05","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2152","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] CopyIfChanged sets LastWriteTimeUtc (#2…\" (#2152) at xamarin/xamarin-android","RelatedBody":"…038)\r\n\r\n`MonoAndroidHelper.CopyIfChanged()` has a boolean return value,\r\nreturning true if the destination file was updated, otherwise false.\r\n\r\nQuestion: What should be done with this return value?\r\n\r\nThis is, surprisingly, a difficult question to answer: sometimes the\r\nreturn value is checked, more often it isn't.  When it is checked,\r\nit's to determine whether or not\r\n`MonoAndroidHelper.SetLastAccessAndWriteTimeUtc()` should be called;\r\nsee e.g. commit d7e3a232.\r\n\r\nSo should `SetLastAccessAndWriteTimeUtc()` *always* be invoked?\r\nSometimes?  Never?  Is there a guideline *at all*?\r\n\r\nTurns out...there wasn't a guideline that we could infer.\r\nAdditionally, the *lack* of `SetLastAccessAndWriteTimeUtc()` was a\r\n*source* of bugs, as `File.Copy()` would *preserve* the timestamp\r\nof the *source* file, while many targets want \"updated\" timestamps\r\nto prevent the target from re-running again; again, d7e3a232.\r\n\r\nThis entire scenario is confusing.  Confusion is *not* good.\r\n\r\nTo try to clear up this confusion, a question:  Is there any scenario\r\nfor which `MonoAndroidHelper.CopyIfChanged()` *shouldn't* call\r\n`MonoAndroidHelper.SetLastAccessAndWriteTimeUtc()` when the source\r\nfile needs to be copied to the target file?\r\n\r\nWe cannot currently imagine such a scenario.\r\n\r\nAlter the semantics of `MonoAndroidHelper.CopyIfChanged()` so that\r\nthe timestamp of the target file is updated to \"now\" when the target\r\nfile is updated (i.e. the source file differs).\r\n\r\nThis *removes* many of our \"update the write time if\r\n`CopyIfChanged()` returned true\" codepaths, and makes it considerably\r\neasier to reason about what *exactly* should be done with the return\r\nvalue of `MonoAndroidHelper.CopyIfChanged()`: it is now usually safe\r\nto ignore, but if e.g. two files are \"linked\" in some way, it can\r\ncontinue to be used."},{"Id":"8226925295","Type":"PullRequestEvent","CreatedAt":"2018-09-06T20:58:53","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2154","RelatedDescription":"Opened pull request \"[WIP] First steps to support DSOs embedded in the .apk\" (#2154) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1906\r\n\r\nThe idea here is to replace the old `app_libdir` variable with a list of directories where DSOs can be found - be it override dirs, app data directory or in-apk locations. This allows for uniform processing of all the locations and lets us call `dlopen` from only a single function, thus keeping the entire code in one place.\r\n\r\nTODO:\r\n\r\n - [ ] Come up with a way to support optional DSOs (e.g. for bundled apps - currently disabled)\r\n - [ ] Test with DSOs only in APKs\r\n - [ ] Write real commit message\r\n"},{"Id":"8226263630","Type":"PullRequestEvent","CreatedAt":"2018-09-06T18:49:49","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2153","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Generate JNI marshal methods\" (#2153) at xamarin/xamarin-android","RelatedBody":"Implementation of https://github.com/xamarin/xamarin-android/issues/2138\r\n\r\nConditionally generate JNI marshal methods for user assemblies and\r\nMono.Android.dll. It is enabled by setting\r\n`AndroidGenerateJniMarshalMethods` to *True*.\r\n\r\nEnable JNI marshal methods in Mono.Android runtime test in Release\r\nconfiguration."},{"Id":"8225620848","Type":"PullRequestEvent","CreatedAt":"2018-09-06T16:47:56","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2145","RelatedDescription":"Merged pull request \"Add 15.8, 15.9, and update master version number to downloads section.\" (#2145) at xamarin/xamarin-android","RelatedBody":"Updates the https://github.com/xamarin/xamarin-android#downloads section to include our most recent released OSS builds and updates the version on the current master builds."},{"Id":"8224973995","Type":"PullRequestEvent","CreatedAt":"2018-09-06T15:01:29","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2148","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] should Dispose AssemblyDefinition\" (#2148) at xamarin/xamarin-android","RelatedBody":"Reviewing our codebase, we found a place where the `BuildApk` task was\r\ncalling an overload for `MonoAndroidHelper.IsReferenceAssembly`.\r\n\r\nThis presented two problems:\r\n1. It was using the `InMemory` option\r\n2. We were not calling `Dispose()`!\r\n\r\nCase No.1 was bad, since we basically load every assembly into memory!\r\n\r\n    foreach (ITaskItem assembly in ResolvedUserAssemblies) {\r\n        if (MonoAndroidHelper.IsReferenceAssembly (assembly.ItemSpec)) {\r\n    //...\r\n    foreach (ITaskItem assembly in ResolvedFrameworkAssemblies) {\r\n        if (MonoAndroidHelper.IsReferenceAssembly (assembly.ItemSpec)) {\r\n\r\nLikewise, we need to call `Dispose` here, since a lock could be held\r\non the file here on Windows.\r\n\r\nThe changes here made `BuildApk` slower (and more correct!), but the\r\noverall build time better.\r\n\r\nBefore:\r\n\r\n    5890 ms  BuildApk                                   1 calls\r\n    Time Elapsed 00:01:02.59\r\n\r\nAfter:\r\n\r\n    6377 ms  BuildApk                                   1 calls\r\n    Time Elapsed 00:00:59.37\r\n\r\nI think the `AssemblyDefinition` instances must have been getting\r\ncleaned up later in the build by the GC (if we were lucky), and also\r\nused *a lot* more memory. This would contribute to overall build time."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8227545782","Type":"IssuesEvent","CreatedAt":"2018-09-06T23:39:04","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3741","RelatedDescription":"Opened issue \"[iOS] SearchBar width is not currently consistent with other platforms or across ios versions\" (#3741) at xamarin/Xamarin.Forms","RelatedBody":"### Case 1\r\n\r\n```XAML\r\n<Grid>\r\n\t\t\t<Grid.RowDefinitions>\r\n\t\t\t\t<RowDefinition></RowDefinition>\r\n\t\t\t\t<RowDefinition></RowDefinition>\r\n\t\t\t\t<RowDefinition></RowDefinition>\r\n\t\t\t</Grid.RowDefinitions>\r\n\t\t\t<StackLayout Orientation=\"Horizontal\" BackgroundColor=\"Yellow\">\r\n\t\t\t\t<SearchBar Text=\"CenterSearchBar\" HorizontalOptions=\"Center\"></SearchBar>\r\n\t\t\t</StackLayout>\r\n\t\t\t<StackLayout Grid.Row=\"1\"  Orientation=\"Horizontal\" BackgroundColor=\"Yellow\">\r\n\t\t\t\t<Entry Text=\"CenterEntry\" HorizontalOptions=\"Center\" BackgroundColor=\"Green\"></Entry>\r\n\t\t\t</StackLayout>\r\n\t\t\t<StackLayout Grid.Row=\"2\"  Orientation=\"Horizontal\" BackgroundColor=\"Yellow\">\r\n\t\t\t\t<Label Text=\"CenterLabel\" HorizontalOptions=\"Center\" BackgroundColor=\"Green\"></Label>\r\n\t\t\t</StackLayout>\r\n\t\t</Grid>\r\n```\r\n#### Android\r\n![image](https://user-images.githubusercontent.com/5375137/45190314-a00dcf00-b1fa-11e8-94c1-b25e3227232c.png)\r\n\r\n#### iOS 11\r\n![image](https://user-images.githubusercontent.com/5375137/45190337-bc117080-b1fa-11e8-87f4-59f432ce6622.png)\r\n\r\n### Case 2\r\n```XAML\r\n<StackLayout Orientation=\"Vertical\" BackgroundColor=\"Pink\">\r\n\t\t\t\t<StackLayout Orientation=\"Horizontal\" BackgroundColor=\"Yellow\">\r\n\t\t\t\t\t<SearchBar Text=\"Center\" HorizontalOptions=\"Center\"></SearchBar>\r\n\t\t\t\t</StackLayout>\r\n\t\t\t\t<StackLayout Orientation=\"Horizontal\">\r\n\t\t\t\t\t<SearchBar Text=\"CenterAndExpand\" HorizontalOptions=\"CenterAndExpand\"></SearchBar>\r\n\t\t\t\t</StackLayout>\r\n\t\t\t\t<StackLayout Orientation=\"Horizontal\">\r\n\t\t\t\t\t<SearchBar Text=\"Nothing\"></SearchBar>\r\n\t\t\t\t</StackLayout>\r\n\t\t\t\t<StackLayout Orientation=\"Horizontal\">\r\n\t\t\t\t\t<Label Text=\"hello stuffed marshmellow\"></Label>\r\n\t\t\t\t\t<Label Text=\"hello stuffed marshmellow\"></Label>\r\n\t\t\t\t\t<Label Text=\"hello stuffed marshmellow\"></Label>\r\n\t\t\t\t\t<SearchBar></SearchBar>\r\n\t\t\t\t\t<Label Text=\"hello stuffed marshmellow\"></Label>\r\n\t\t\t\t\t<Label Text=\"hello stuffed marshmellow\"></Label>\r\n\t\t\t\t\t<Label Text=\"hello stuffed marshmellow\"></Label>\r\n\t\t\t\t</StackLayout>\r\n\t\t\t</StackLayout>\r\n```\r\n\r\n#### Android\r\n![image](https://user-images.githubusercontent.com/5375137/45190482-612c4900-b1fb-11e8-84ff-feeaa5129ff6.png)\r\n\r\n\r\n#### ios11\r\n![image](https://user-images.githubusercontent.com/5375137/45190466-4a85f200-b1fb-11e8-80a2-b12d4906c4d4.png)\r\n\r\n\r\n#### ios10\r\n![image](https://user-images.githubusercontent.com/5375137/45190428-262a1580-b1fb-11e8-8026-05aacc9754d5.png)\r\n\r\n\r\n\r\n### Steps to Reproduce\r\nRun attached Repro\r\n\r\nit has two pages that have the XAML above\r\n\r\n### Expected Behavior\r\nAll platforms (ios versions) should look the same\r\n\r\n### Actual Behavior\r\nAll platforms (ios versions) do not look the same\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2 pre3\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.4 and 10.3\r\n  - Android: 8.0\r\n\r\n\r\n### Reproduction Link\r\n[Dogfood32.zip](https://github.com/xamarin/Xamarin.Forms/files/2359048/Dogfood32.zip)\r\n"},{"Id":"8227480014","Type":"IssuesEvent","CreatedAt":"2018-09-06T23:17:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3740","RelatedDescription":"Closed issue \"[Feedback] Xamarin Forms PCL Application Resources do not appear to be applied to UWP app\" (#3740) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n<p>I have the following code in my App.xaml file&nbsp;</p><p>```</p><p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;Application xmlns=&quot;http://xamarin.com/schemas/2014/forms&quot;\n             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;\n             x:Class=&quot;GBarScene.App&quot;&gt;\n    &lt;Application.Resources&gt;\n        &lt;ResourceDictionary&gt;\n            &lt;OnPlatform x:Key=&quot;CustRowSpacing&quot; x:TypeArguments=&quot;x:Double&quot;&gt;\n                &lt;OnPlatform.iOS&gt;0&lt;/OnPlatform.iOS&gt;\n                &lt;OnPlatform.Android&gt;0&lt;/OnPlatform.Android&gt;\n                &lt;OnPlatform.WinPhone&gt;0&lt;/OnPlatform.WinPhone&gt;\n            &lt;/OnPlatform&gt;\n\n            &lt;OnPlatform x:Key=&quot;CustColSpacing&quot; x:TypeArguments=&quot;x:Double&quot;&gt;\n                &lt;OnPlatform.iOS&gt;0&lt;/OnPlatform.iOS&gt;\n                &lt;OnPlatform.Android&gt;4&lt;/OnPlatform.Android&gt;\n                &lt;OnPlatform.WinPhone&gt;8&lt;/OnPlatform.WinPhone&gt;\n            &lt;/OnPlatform&gt;\n\n\n            &lt;Style TargetType=&quot;Grid&quot;&gt;\n                &lt;Setter Property=&quot;RowSpacing&quot; Value=&quot;{StaticResource CustRowSpacing}&quot; /&gt;\n                &lt;Setter Property=&quot;ColumnSpacing&quot; Value=&quot;{StaticResource CustColSpacing}&quot; /&gt;\n            &lt;/Style&gt;\n\n            &lt;OnPlatform x:Key=&quot;CustStackSpacing&quot; x:TypeArguments=&quot;x:Double&quot;&gt;\n                &lt;OnPlatform.iOS&gt;0&lt;/OnPlatform.iOS&gt;\n                &lt;OnPlatform.Android&gt;0&lt;/OnPlatform.Android&gt;\n                &lt;OnPlatform.WinPhone&gt;0&lt;/OnPlatform.WinPhone&gt;\n            &lt;/OnPlatform&gt;\n\n            &lt;Style TargetType=&quot;StackLayout&quot;&gt;\n                &lt;Setter Property=&quot;Spacing&quot; Value=&quot;{StaticResource CustStackSpacing}&quot; /&gt;\n            &lt;/Style&gt;\n\n            &lt;Style TargetType=&quot;Button&quot;&gt;\n                &lt;Setter Property=&quot;BorderWidth&quot; Value=&quot;0&quot; /&gt;\n                &lt;Setter Property=&quot;BackgroundColor&quot; Value=&quot;Transparent&quot; /&gt;\n                &lt;Setter Property=&quot;BorderColor&quot; Value=&quot;Transparent&quot; /&gt;\n                &lt;Setter Property=&quot;BorderRadius&quot; Value=&quot;0&quot;/&gt;\n            &lt;/Style&gt;\n\n        &lt;/ResourceDictionary&gt;\n    &lt;/Application.Resources&gt;\n&lt;/Application&gt;&nbsp;</p><p>```</p><p>When I had a WinPhone 8.1 app in the project everything looked fine. I have since removed the WinPhone 8.1 app and added a UWP app. The spacing in the UWP app when running on the WinPhone emulator or device is not what is set in the ResourceDictionary. Also the font sizes (small, medium, large etc.) do not seem to be translating correctly either.</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/39028/xamarin-forms-pcl-application-resources-do-not-app.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/418745\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678435](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678435)"},{"Id":"8227447805","Type":"IssuesEvent","CreatedAt":"2018-09-06T23:07:38","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3740","RelatedDescription":"Opened issue \"[Feedback] Xamarin Forms PCL Application Resources do not appear to be applied to UWP app\" (#3740) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n<p>I have the following code in my App.xaml file&nbsp;</p><p>```</p><p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;Application xmlns=&quot;http://xamarin.com/schemas/2014/forms&quot;\n             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;\n             x:Class=&quot;GBarScene.App&quot;&gt;\n    &lt;Application.Resources&gt;\n        &lt;ResourceDictionary&gt;\n            &lt;OnPlatform x:Key=&quot;CustRowSpacing&quot; x:TypeArguments=&quot;x:Double&quot;&gt;\n                &lt;OnPlatform.iOS&gt;0&lt;/OnPlatform.iOS&gt;\n                &lt;OnPlatform.Android&gt;0&lt;/OnPlatform.Android&gt;\n                &lt;OnPlatform.WinPhone&gt;0&lt;/OnPlatform.WinPhone&gt;\n            &lt;/OnPlatform&gt;\n\n            &lt;OnPlatform x:Key=&quot;CustColSpacing&quot; x:TypeArguments=&quot;x:Double&quot;&gt;\n                &lt;OnPlatform.iOS&gt;0&lt;/OnPlatform.iOS&gt;\n                &lt;OnPlatform.Android&gt;4&lt;/OnPlatform.Android&gt;\n                &lt;OnPlatform.WinPhone&gt;8&lt;/OnPlatform.WinPhone&gt;\n            &lt;/OnPlatform&gt;\n\n\n            &lt;Style TargetType=&quot;Grid&quot;&gt;\n                &lt;Setter Property=&quot;RowSpacing&quot; Value=&quot;{StaticResource CustRowSpacing}&quot; /&gt;\n                &lt;Setter Property=&quot;ColumnSpacing&quot; Value=&quot;{StaticResource CustColSpacing}&quot; /&gt;\n            &lt;/Style&gt;\n\n            &lt;OnPlatform x:Key=&quot;CustStackSpacing&quot; x:TypeArguments=&quot;x:Double&quot;&gt;\n                &lt;OnPlatform.iOS&gt;0&lt;/OnPlatform.iOS&gt;\n                &lt;OnPlatform.Android&gt;0&lt;/OnPlatform.Android&gt;\n                &lt;OnPlatform.WinPhone&gt;0&lt;/OnPlatform.WinPhone&gt;\n            &lt;/OnPlatform&gt;\n\n            &lt;Style TargetType=&quot;StackLayout&quot;&gt;\n                &lt;Setter Property=&quot;Spacing&quot; Value=&quot;{StaticResource CustStackSpacing}&quot; /&gt;\n            &lt;/Style&gt;\n\n            &lt;Style TargetType=&quot;Button&quot;&gt;\n                &lt;Setter Property=&quot;BorderWidth&quot; Value=&quot;0&quot; /&gt;\n                &lt;Setter Property=&quot;BackgroundColor&quot; Value=&quot;Transparent&quot; /&gt;\n                &lt;Setter Property=&quot;BorderColor&quot; Value=&quot;Transparent&quot; /&gt;\n                &lt;Setter Property=&quot;BorderRadius&quot; Value=&quot;0&quot;/&gt;\n            &lt;/Style&gt;\n\n        &lt;/ResourceDictionary&gt;\n    &lt;/Application.Resources&gt;\n&lt;/Application&gt;&nbsp;</p><p>```</p><p>When I had a WinPhone 8.1 app in the project everything looked fine. I have since removed the WinPhone 8.1 app and added a UWP app. The spacing in the UWP app when running on the WinPhone emulator or device is not what is set in the ResourceDictionary. Also the font sizes (small, medium, large etc.) do not seem to be translating correctly either.</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/39028/xamarin-forms-pcl-application-resources-do-not-app.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/418745\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678435](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678435)"},{"Id":"8227447768","Type":"IssuesEvent","CreatedAt":"2018-09-06T23:07:37","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3739","RelatedDescription":"Opened issue \"[Feedback] Xamarin Forms custom renderer for DatePicker and TimePicker not working for UWP\" (#3739) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n<p>I have a Xamarin forms project that supports UWP, iOS, and Android.  I have custom renderers for many controls including the DatePicker and the TimePicker.\n\nThe customer renderers work just fine on iOS and Android.  On UWP, the renderers run just fine, but setting Control.BorderBrush and Control.BorderThickness has no effect.\n\nSee the attached screenshots for the code I'm using as well as the output.  You can see other controls in the image whose rendering is controlled by custom renderers.  I also have a regular picker (not pictured) that works fine as well. \n\nThe picker isn't in the screenshot, but I do have the code in the screenshot.</p><p><br></p><span class=text style=\"box-sizing:border-box;color:rgb(33, 33, 33);display:inline-block;font-size:14px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;margin-left:0.9em;orphans:2;text-align:left;text-decoration:none;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;\"><p style=\"box-sizing:border-box;display:inline;margin-bottom:0.5em;margin-left:0px;margin-right:0px;margin-top:0px;\">I uploaded a sample.  You can get it at https://www.dropbox.com/s/nuhm596kkewkph3/UwpRenderer.zip?dl=0 </p><p>\n</p></span><p><b></b><i></i><u></u><sub></sub><sup></sup><strike></strike><br></p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/240063/xamarin-forms-custom-renderer-for-datepicker-and-t.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/606198\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678635](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678635)"},{"Id":"8227447722","Type":"IssuesEvent","CreatedAt":"2018-09-06T23:07:36","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3738","RelatedDescription":"Opened issue \"[Feedback] Xamarin Forms MultipartFormDataContent with StreamContent doesn't work on ios and android\" (#3738) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>In a Xamarin project I need to upload an image using a multipartformdatacontent. I know that the server works because we have a working app build in native iOS. \n\nWe ported that code to Xamarin Forms (3.0) using the System.Net.Httpclient and it looks like this:\n            using (var client = new HttpClient(GetClientHandler(), false))\n            {\n                var content = new MultipartFormDataContent(Guid.NewGuid().ToString());\n                var streamContent = new StreamContent(stream);\n                content.Add(streamContent, &quot;file&quot;, filename);\n\n                var response = await client.PostAsync(uri, content);\n   }\n\nWhen we use this code to upload a very small image (a 5x5 pixel square) the code works, but when we try to upload a photo (around 1mb) we get a server error. When we post the exact same photo with the old iOS implementation it does work.\n\nTo verify that the code should work I created a WPF app with the exact same code and also using the System.Net.HttpClient and now it also does work. \n\nI have tried a lot of different solutions provided on stackoverflow and the Xamarin forums, even created the complete postbody manually using a stringbuilder to be exactly the same as posts that are correct, but nothing worked so far.\n\nI have attached a repo of this issue that is connecting to a public demo server.</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/254706/xamarin-forms-multipartformdatacontent-with-stream.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/617346\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678639](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678639)"},{"Id":"8227447653","Type":"IssuesEvent","CreatedAt":"2018-09-06T23:07:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3737","RelatedDescription":"Opened issue \"[Feedback] System.NotImplementedException in Xamarin WPF\" (#3737) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n<p>When clearing a observablecollection or removing an item from it, we get a \n\nSystem.NotImplementedException: 'The method or operation is not implemented.'\n\nerror in the WPF implementation of Xamarin. In Android and UWP, the error does not occur.</p><p><br></p><p><span style=\"display:inline !important;float:none;background-color:rgba(255, 255, 255, 1);color:rgb(33, 33, 33);font-size:14px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:left;text-decoration:none;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;\">We attach a mini solution with which you can reproduce the problem. We have noticed that if we enclose the Clear() method in a try / catch structure, the Exception is ignored and the program continues correctly (list clears and rebuilds).This exception only happens in WPF, UWP and Android work correctly.</span><b></b><i></i><u></u><sub></sub><sup></sup><strike></strike><br></p><p><b></b><i></i><u></u><sub></sub><sup></sup><strike></strike><br></p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/272352/systemnotimplementedexception-in-xamarin-wpf.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/632874\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678647](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678647)"},{"Id":"8227447593","Type":"IssuesEvent","CreatedAt":"2018-09-06T23:07:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3736","RelatedDescription":"Opened issue \"[Feedback] Unable to change window border in Xamarin Forms WPF\" (#3736) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>We can neither change the border color of th main window nor remove the border in Xamarin Forms WPF.\n\nWe tried to set the XAML properties natively and also to set the window properties programmatically. Nothing changes the window border, which is always blue in our case.\n\nXAML\n\n&lt;wpf:FormsApplicationPage x:Class=&quot;Client.WPF.MainWindow&quot;\n        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n        xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;\n        xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;\n        xmlns:local=&quot;clr-namespace:Client.WPF&quot;\n        xmlns:wpf=&quot;clr-namespace:Xamarin.Forms.Platform.WPF;assembly=Xamarin.Forms.Platform.WPF&quot;\n        mc:Ignorable=&quot;d&quot;\n        Height=&quot;450&quot; Width=&quot;800&quot; \n        Background=&quot;#455A64&quot;\n        WindowStyle=&quot;None&quot; \n        ResizeMode=&quot;NoResize&quot;\n        AllowsTransparency=&quot;True&quot;\n        BorderBrush=&quot;#000000&quot;\n        BorderThickness=&quot;0&quot;\n        WindowState=&quot;Maximized&quot;\n        &gt;\n&lt;/wpf:FormsApplicationPage&gt;\n\n\nCode:\nthis.WindowStyle = System.Windows.WindowStyle.None;\n            App.Current.MainWindow.AllowsTransparency = true;\n            App.Current.MainWindow.BorderBrush = new SolidColorBrush(System.Windows.Media.Color.FromRgb(255,0,0));\n            App.Current.MainWindow.BorderThickness = new System.Windows.Thickness(0);</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/279579/unable-to-change-window-border-in-xamarin-forms-wp.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/637660\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678650](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678650)"},{"Id":"8227447546","Type":"IssuesEvent","CreatedAt":"2018-09-06T23:07:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3735","RelatedDescription":"Opened issue \"[Feedback] Xamarin UWP screen orientation lock not working\" (#3735) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>Microsoft's documentation says that setting the supported rotations in Package.appxmainifest should lock the app's orientation, but that is not working for me.\n\nI have it set to Landscape and Landscape-Flipped, but my app still rotates freely.\n\n* The app is written using Xamarin Forms 3.0.0.452510\n* I am using Microsoft.NetCore.UniversalWindowsPlatform version 6.1.4\n* I am running Visual Studio 15.7.4\n* I am deploying to a Surface Pro 4 running Windows 10 version 1709 (Fall Creators Update)\n* The surface is set to tablet mode only - although the setting to notify on change is set.  There have been no notifications\n* There are also iOS and Android versions of my app, they work as desired.</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/288903/xamarin-uwp-screen-orientation-lock-not-working.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/644587\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678652](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678652)"},{"Id":"8227362363","Type":"IssuesEvent","CreatedAt":"2018-09-06T22:42:43","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3730","RelatedDescription":"Closed issue \"Inages’s RadiusCorner\" (#3730) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nPlease add RadiusCorner property to Image control instead of keeping it inside a frame or using plugins.\r\n\r\n\r\nThanks,\r\nJassim"},{"Id":"8226017185","Type":"IssuesEvent","CreatedAt":"2018-09-06T18:03:10","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3734","RelatedDescription":"Opened issue \"[Feedback] Xamarin Forms PCL Application Resources do not appear to be applied to UWP app\" (#3734) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n<p>I have the following code in my App.xaml file&nbsp;</p><p>```</p><p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;Application xmlns=&quot;http://xamarin.com/schemas/2014/forms&quot;\n             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;\n             x:Class=&quot;GBarScene.App&quot;&gt;\n    &lt;Application.Resources&gt;\n        &lt;ResourceDictionary&gt;\n            &lt;OnPlatform x:Key=&quot;CustRowSpacing&quot; x:TypeArguments=&quot;x:Double&quot;&gt;\n                &lt;OnPlatform.iOS&gt;0&lt;/OnPlatform.iOS&gt;\n                &lt;OnPlatform.Android&gt;0&lt;/OnPlatform.Android&gt;\n                &lt;OnPlatform.WinPhone&gt;0&lt;/OnPlatform.WinPhone&gt;\n            &lt;/OnPlatform&gt;\n\n            &lt;OnPlatform x:Key=&quot;CustColSpacing&quot; x:TypeArguments=&quot;x:Double&quot;&gt;\n                &lt;OnPlatform.iOS&gt;0&lt;/OnPlatform.iOS&gt;\n                &lt;OnPlatform.Android&gt;4&lt;/OnPlatform.Android&gt;\n                &lt;OnPlatform.WinPhone&gt;8&lt;/OnPlatform.WinPhone&gt;\n            &lt;/OnPlatform&gt;\n\n\n            &lt;Style TargetType=&quot;Grid&quot;&gt;\n                &lt;Setter Property=&quot;RowSpacing&quot; Value=&quot;{StaticResource CustRowSpacing}&quot; /&gt;\n                &lt;Setter Property=&quot;ColumnSpacing&quot; Value=&quot;{StaticResource CustColSpacing}&quot; /&gt;\n            &lt;/Style&gt;\n\n            &lt;OnPlatform x:Key=&quot;CustStackSpacing&quot; x:TypeArguments=&quot;x:Double&quot;&gt;\n                &lt;OnPlatform.iOS&gt;0&lt;/OnPlatform.iOS&gt;\n                &lt;OnPlatform.Android&gt;0&lt;/OnPlatform.Android&gt;\n                &lt;OnPlatform.WinPhone&gt;0&lt;/OnPlatform.WinPhone&gt;\n            &lt;/OnPlatform&gt;\n\n            &lt;Style TargetType=&quot;StackLayout&quot;&gt;\n                &lt;Setter Property=&quot;Spacing&quot; Value=&quot;{StaticResource CustStackSpacing}&quot; /&gt;\n            &lt;/Style&gt;\n\n            &lt;Style TargetType=&quot;Button&quot;&gt;\n                &lt;Setter Property=&quot;BorderWidth&quot; Value=&quot;0&quot; /&gt;\n                &lt;Setter Property=&quot;BackgroundColor&quot; Value=&quot;Transparent&quot; /&gt;\n                &lt;Setter Property=&quot;BorderColor&quot; Value=&quot;Transparent&quot; /&gt;\n                &lt;Setter Property=&quot;BorderRadius&quot; Value=&quot;0&quot;/&gt;\n            &lt;/Style&gt;\n\n        &lt;/ResourceDictionary&gt;\n    &lt;/Application.Resources&gt;\n&lt;/Application&gt;&nbsp;</p><p>```</p><p>When I had a WinPhone 8.1 app in the project everything looked fine. I have since removed the WinPhone 8.1 app and added a UWP app. The spacing in the UWP app when running on the WinPhone emulator or device is not what is set in the ResourceDictionary. Also the font sizes (small, medium, large etc.) do not seem to be translating correctly either.</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/39028/xamarin-forms-pcl-application-resources-do-not-app.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/418745\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[678435](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/678435)"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8228441684","Type":"PullRequestEvent","CreatedAt":"2018-09-07T05:20:05","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4768","RelatedDescription":"Merged pull request \"[registrar] Ignore availability warnings from clang. Fixes #4255.\" (#4768) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/xamarin-macios/issues/4255."},{"Id":"8228441679","Type":"IssuesEvent","CreatedAt":"2018-09-07T05:20:05","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4255","RelatedDescription":"Closed issue \"Fix availability warnings in the generated code from the static registrar\" (#4255) at xamarin/xamarin-macios","RelatedBody":"See #4244 for a few examples:\r\n\r\n```\r\n018-06-13T18:34:30.4481770Z xcrun -sdk macosx clang -x objective-c++ -g -c -Wall -mmacosx-version-min=10.10 -m64 -I/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include -fobjc-runtime=macosx -o static-registrar.o static-registrar.m\r\n2018-06-13T18:34:30.4590770Z static-registrar.m:4559:8: warning: 'MKClusterAnnotation' is only available on macOS 10_13 or newer [-Wunguarded-availability-new]\r\n2018-06-13T18:34:30.4653180Z static MKClusterAnnotation * native_to_managed_trampoline_84 (id self, SEL _cmd, MonoMethod **managed_method_ptr, MKMapView * p0, NSArray * p1, uint32_t token_ref)\r\n2018-06-13T18:34:30.4671540Z        ^\r\n```\r\n\r\nIdeas\r\n\r\n1. Sprinkle `if (@available(macOS 10.13)) { } ` throughout the generated code.\r\n2. Add availability attributes to the API in the header files.\r\n3. Compile with `-Wno-unguarded-availability-new`.\r\n\r\nAt the very least we should avoid doing something that increases the code size."},{"Id":"8227077427","Type":"PullRequestEvent","CreatedAt":"2018-09-06T21:31:37","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4769","RelatedDescription":"Opened pull request \"Order additional arguments after response file (#4607) (#4612)\" (#4769) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/4594\n- There were being adding _before_ the response file which meant options that were overriding defaults were not being honored"},{"Id":"8226257700","Type":"PullRequestEvent","CreatedAt":"2018-09-06T18:48:42","Actor":"lambdageek","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4750","RelatedDescription":"Closed pull request \"mono-2018-08: use coop transitions for monomac\" (#4750) at xamarin/xamarin-macios","RelatedBody":"With `2018-08` (nee 5.18) Mono uses hybrid suspend by default.\r\n\r\nHybrid suspend use cooperative suspend for threads that are running managed code or native Mono runtime code (or other code such as XamMac code marked with GC Unsafe regions) and preemptive suspend for threads that are running other code (such as P/Invokes, blocking system calls, and other code marked by GC Safe regions).\r\n\r\nEvery mono API function called from XM (listed in the `runtime/exports.t4` file) has been wrapped inside to perform GC Unsafe transitions when called.\r\n\r\nThis PR changes XM to use the coop attach/detach functions.  If hybrid suspend is being used, these will ensure that when threads detach they will be left in GC Safe mode.  (If preemptive suspend is used, the coop attach/detach just amount to the same thing as the JIT attach functions from before).\r\n\r\nAlso bump the required minimum system mono version for running XM apps to 5.18.0.68.\r\n\r\nFixes #4723 "},{"Id":"8225053838","Type":"PullRequestEvent","CreatedAt":"2018-09-06T15:13:27","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4768","RelatedDescription":"Opened pull request \"[registrar] Ignore availability warnings from clang. Fixes #4255.\" (#4768) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/xamarin-macios/issues/4255."},{"Id":"8224866886","Type":"IssuesEvent","CreatedAt":"2018-09-06T14:46:16","Actor":"mykyta-bondarenko-gl","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4767","RelatedDescription":"Opened issue \"[ARKit] SwiftShot porting issues\" (#4767) at xamarin/xamarin-macios","RelatedBody":"The original sample: https://developer.apple.com/documentation/arkit/swiftshot_creating_a_game_for_augmented_reality"},{"Id":"8224732238","Type":"PullRequestEvent","CreatedAt":"2018-09-06T14:27:07","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4759","RelatedDescription":"Merged pull request \"[metal] Fix 'indirectRenderCommandAtIndex' binding\" (#4759) at xamarin/xamarin-macios","RelatedBody":"`CreateIndirectRenderCommand` implies we're creating the command while this API \"returns the CPU-based indirect render command at the given index of the indirect command buffer\". Moving to `GetCommand` which is more accurate."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":29,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":40,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":86,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":262,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null}]}},"RunOn":"2018-09-07T05:30:53.7851421Z","RunDurationInMilliseconds":3966}