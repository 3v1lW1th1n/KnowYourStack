{"Data":{"GitHub":{"Issues":[{"Id":"448616612","IsPullRequest":true,"CreatedAt":"2019-05-26T23:09:27","Actor":"hughbe","Number":"1053","RawContent":null,"Title":"Add ComponentDesigner tests and fix bugs","State":"open","Body":"Fixes #1040\r\nFixes #1041\r\nFixes #1045\r\nFixes #1046\r\nFixes #1047\r\nFixes #1048\r\nFixes #1049\r\nFixes #1050\r\nFixes #1051\r\nFixes #1052","Url":"https://github.com/dotnet/winforms/pull/1053","RelatedDescription":"Open PR \"Add ComponentDesigner tests and fix bugs\" (#1053)"},{"Id":"448614807","IsPullRequest":false,"CreatedAt":"2019-05-26T22:43:09","Actor":"hughbe","Number":"1052","RawContent":null,"Title":"ComponentDesigner.PostFilterEvents(new Dictionary<object, object> { { \"key\", null } } ) throws NRE","State":"open","Body":"Should skip:\r\n```cs\r\npublic static IEnumerable<object[]> PostFilterEvents_HasEvents_TestData()\r\n{\r\n    yield return new object[] { null, false };\r\n    yield return new object[] { InheritanceAttribute.Default, false };\r\n    yield return new object[] { InheritanceAttribute.Inherited, false };\r\n    yield return new object[] { InheritanceAttribute.InheritedReadOnly, true };\r\n    yield return new object[] { InheritanceAttribute.NotInherited, false };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(PostFilterEvents_HasEvents_TestData))]\r\npublic void PostFilterEvents_InvokeWithEvents_Success(InheritanceAttribute inheritanceAttribute, bool valid)\r\n{\r\n    EventDescriptor descriptor = TypeDescriptor.GetEvents(typeof(CustomComponent))[0];\r\n    var events = new Dictionary<object, object> { { \"key1\", descriptor }, { \"Key2\", null } };\r\n    var designer = new CustomInheritanceAttributeComponentDesigner(inheritanceAttribute);\r\n    designer.PostFilterEvents(events);\r\n    if (valid)\r\n    {\r\n        EventDescriptor result = Assert.IsAssignableFrom<EventDescriptor>(events[\"Event\"]);\r\n        Assert.Equal(typeof(CustomComponent), result.ComponentType);\r\n        Assert.Equal(\"Event\", result.Name);\r\n        Assert.True(Assert.IsType<ReadOnlyAttribute>(result.Attributes[typeof(ReadOnlyAttribute)]).IsReadOnly);\r\n        Assert.Equal(new Dictionary<object, object> { { \"key1\", descriptor }, { \"Key2\", null }, { \"Event\", result } }, events);\r\n    }\r\n    else\r\n    {\r\n        Assert.Equal(new Dictionary<object, object> { { \"key1\", descriptor }, { \"Key2\", null } }, events);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1052","RelatedDescription":"Open issue \"ComponentDesigner.PostFilterEvents(new Dictionary<object, object> { { \"key\", null } } ) throws NRE\" (#1052)"},{"Id":"448614756","IsPullRequest":false,"CreatedAt":"2019-05-26T22:42:20","Actor":"hughbe","Number":"1051","RawContent":null,"Title":"ComponentDesigner.PostFilterEvents(null) throws NRE","State":"open","Body":"```cs\r\npublic static IEnumerable<object[]> PostFilterEvents_NoEvents_TestData()\r\n{\r\n    yield return new object[] { null, null, null };\r\n    yield return new object[] { null, new Dictionary<string, object>(), new Dictionary<string, object>() };\r\n    yield return new object[] { InheritanceAttribute.Default, new Dictionary<string, object>(), new Dictionary<string, object>() };\r\n    yield return new object[] { InheritanceAttribute.Default, new Dictionary<string, object>(), new Dictionary<string, object>() };\r\n    yield return new object[] { InheritanceAttribute.Inherited, null, null };\r\n    yield return new object[] { InheritanceAttribute.Inherited, new Dictionary<string, object>(), new Dictionary<string, object>() };\r\n    yield return new object[] { InheritanceAttribute.InheritedReadOnly, null, null };\r\n    yield return new object[] { InheritanceAttribute.InheritedReadOnly, new Dictionary<string, object>(), new Dictionary<string, object>() };\r\n    yield return new object[] { InheritanceAttribute.NotInherited, null, null };\r\n    yield return new object[] { InheritanceAttribute.NotInherited, new Dictionary<string, object>(), new Dictionary<string, object>() };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(PostFilterEvents_NoEvents_TestData))]\r\npublic void PostFilterEvents_InvokeWithoutEvents_Success(InheritanceAttribute inheritanceAttribute, IDictionary events, IDictionary expected)\r\n{\r\n    var designer = new CustomInheritanceAttributeComponentDesigner(inheritanceAttribute);\r\n    designer.PostFilterEvents(events);\r\n    Assert.Equal(expected, events);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1051","RelatedDescription":"Open issue \"ComponentDesigner.PostFilterEvents(null) throws NRE\" (#1051)"},{"Id":"448612332","IsPullRequest":false,"CreatedAt":"2019-05-26T22:12:02","Actor":"hughbe","Number":"1050","RawContent":null,"Title":"ComponentDesigner.PostFilterAttributes(null) throws NRE","State":"open","Body":"```cs\r\npublic static IEnumerable<object[]> PostFilterAttributes_TestData()\r\n{\r\n    yield return new object[] { null, InheritanceAttribute.Default };\r\n    yield return new object[] { new Dictionary<Type, object>(), InheritanceAttribute.Default };\r\n    yield return new object[] { new Dictionary<Type, object> { { typeof(InheritanceAttribute), null } }, InheritanceAttribute.Default };\r\n    yield return new object[] { new Dictionary<Type, object> { { typeof(InheritanceAttribute), new object() } }, InheritanceAttribute.Default };\r\n    var attribute = new InheritanceAttribute();\r\n    yield return new object[] { new Dictionary<Type, object> { { typeof(InheritanceAttribute), attribute } }, attribute };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(PostFilterAttributes_TestData))]\r\npublic void PostFilterAttributes_HasInheritanceAttributeKey_Sets(IDictionary attributes, object expected)\r\n{\r\n    var designer = new SubComponentDesigner();\r\n    designer.PostFilterAttributes(attributes);\r\n    Assert.Same(expected, designer.InheritanceAttribute);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1050","RelatedDescription":"Open issue \"ComponentDesigner.PostFilterAttributes(null) throws NRE\" (#1050)"},{"Id":"448589528","IsPullRequest":false,"CreatedAt":"2019-05-26T17:39:51","Actor":"hughbe","Number":"1049","RawContent":null,"Title":"ComponentDesigner.InheritanceAttribute throws NREs across the board if GetInheritanceAttribute returns null","State":"open","Body":"```cs\r\n        public static IEnumerable<object[]> InheritanceAttribute_GetValidService_TestData()\r\n        {\r\n            yield return new object[] { null };\r\n            yield return new object[] { new InheritanceAttribute() };\r\n        }\r\n\r\n        [Theory]\r\n        [MemberData(nameof(InheritanceAttribute_GetValidService_TestData))]\r\n        public void InheritanceAttribute_GetWithValidService_ReturnsDefault(InheritanceAttribute attributeResult)\r\n        {\r\n            var designer = new SubComponentDesigner();\r\n            var component = new Component();\r\n            var mockInheritanceService = new Mock<IInheritanceService>(MockBehavior.Strict);\r\n            mockInheritanceService\r\n                .Setup(s => s.GetInheritanceAttribute(component))\r\n                .Returns(attributeResult)\r\n                .Verifiable();\r\n            var mockSite = new Mock<ISite>(MockBehavior.Strict);\r\n            mockSite\r\n                .Setup(s => s.GetService(typeof(IDesignerHost)))\r\n                .Returns(null);\r\n            mockSite\r\n                .Setup(s => s.GetService(typeof(IComponentChangeService)))\r\n                .Returns(null);\r\n            mockSite\r\n                .Setup(s => s.GetService(typeof(IInheritanceService)))\r\n                .Returns(mockInheritanceService.Object)\r\n                .Verifiable();\r\n            mockSite\r\n                .Setup(s => s.GetService(typeof(IDictionaryService)))\r\n                .Returns(null);\r\n            mockSite\r\n                .Setup(s => s.GetService(typeof(IExtenderListService)))\r\n                .Returns(null);\r\n            mockSite\r\n                .Setup(s => s.GetService(typeof(ITypeDescriptorFilterService)))\r\n                .Returns(null);\r\n            component.Site = mockSite.Object;\r\n            designer.Initialize(component);\r\n            mockSite.Verify(s => s.GetService(typeof(IInheritanceService)), Times.Once());\r\n\r\n            InheritanceAttribute attribute = designer.InheritanceAttribute;\r\n            Assert.Same(attributeResult, attribute);\r\n            Assert.Same(attribute, designer.InheritanceAttribute);\r\n        }\r\n```","Url":"https://github.com/dotnet/winforms/issues/1049","RelatedDescription":"Open issue \"ComponentDesigner.InheritanceAttribute throws NREs across the board if GetInheritanceAttribute returns null\" (#1049)"},{"Id":"448586358","IsPullRequest":false,"CreatedAt":"2019-05-26T17:01:03","Actor":"hughbe","Number":"1048","RawContent":null,"Title":"CDDesignerCommandSet.GetGetCommands(null) throws NRE should work","State":"open","Body":"```cs\r\n[Fact]\r\npublic void Initialize_InvokeIServiceContainerSiteWithNullDesignerCommandSet_CallsAddService()\r\n{\r\n    var designer = new ComponentDesigner();\r\n    var mockSite = new Mock<ISite>(MockBehavior.Strict);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDesignerHost)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IComponentChangeService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IInheritanceService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDictionaryService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IExtenderListService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ITypeDescriptorFilterService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(DesignerCommandSet)))\r\n        .Returns(null)\r\n        .Verifiable();\r\n    DesignerCommandSet set = null;\r\n    mockSite\r\n        .As<IServiceContainer>()\r\n        .Setup(c => c.AddService(typeof(DesignerCommandSet), It.IsAny<DesignerCommandSet>()))\r\n        .Callback<Type, DesignerCommandSet>((t, s) => set = s)\r\n        .Verifiable();\r\n    var component = new Component\r\n    {\r\n        Site = mockSite.Object\r\n    };\r\n\r\n    designer.Initialize(component);\r\n    mockSite.Verify(s => s.GetService(typeof(IDesignerHost)), Times.Once());\r\n    mockSite.Verify(s => s.GetService(typeof(IComponentChangeService)), Times.Once());\r\n    mockSite.Verify(s => s.GetService(typeof(DesignerCommandSet)), Times.Once());\r\n    mockSite.As<IServiceContainer>().Verify(s => s.AddService(typeof(DesignerCommandSet), set), Times.Once());\r\n    Assert.Same(designer.ActionLists, set.GetCommands(\"ActionLists\"));\r\n    Assert.Same(designer.Verbs, set.GetCommands(\"Verbs\"));\r\n    Assert.Null(set.GetCommands(\"Other\"));\r\n    Assert.Null(set.GetCommands(string.Empty));\r\n    Assert.Null(set.GetCommands(null));\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1048","RelatedDescription":"Open issue \"CDDesignerCommandSet.GetGetCommands(null) throws NRE should work\" (#1048)"},{"Id":"448585916","IsPullRequest":false,"CreatedAt":"2019-05-26T16:55:44","Actor":"hughbe","Number":"1047","RawContent":null,"Title":"ComponentDesigner.InvokeGetInheritanceAttribute(null) throws NRE should return null","State":"open","Body":"```cs\r\n[Fact]\r\npublic void InvokeGetInheritanceAttribute_InvokeNullToInvoke_ReturnsNull()\r\n{\r\n    var designer = new SubComponentDesigner();\r\n    Assert.Null(designer.InvokeGetInheritanceAttribute(null));\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1047","RelatedDescription":"Open issue \"ComponentDesigner.InvokeGetInheritanceAttribute(null) throws NRE should return null\" (#1047)"},{"Id":"448583038","IsPullRequest":false,"CreatedAt":"2019-05-26T16:20:59","Actor":"hughbe","Number":"1046","RawContent":null,"Title":"ComponentDesigner.PreFilterProperties throws ICE if props[\"SettingsKey\"] is not a PropertyDescriptor","State":"open","Body":"```cs\r\npublic static IEnumerable<object[]> PreFilterProperties_ComponentWithoutKey_TestData()\r\n{\r\n    yield return new object[] { null };\r\n    yield return new object[] { new Dictionary<string, object>() };\r\n    yield return new object[] { new Dictionary<string, object> { { \"SettingsKey\", new object() } } };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(PreFilterProperties_ComponentWithoutKey_TestData))]\r\npublic void PreFilterProperties_WithIPersistComponentSettingsComponentWithoutKey_Success(IDictionary properties)\r\n{\r\n    var designer = new SubComponentDesigner();\r\n    PropertyDescriptor descriptor = TypeDescriptor.GetProperties(typeof(CustomComponent))[0];\r\n    var component = new IPersistComponentSettingsComponent();\r\n    designer.Initialize(component);\r\n    designer.PreFilterProperties(properties);\r\n    Assert.Null(properties?[\"SettingsKey\"]);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1046","RelatedDescription":"Open issue \"ComponentDesigner.PreFilterProperties throws ICE if props[\"SettingsKey\"] is not a PropertyDescriptor\" (#1046)"},{"Id":"448582998","IsPullRequest":false,"CreatedAt":"2019-05-26T16:20:34","Actor":"hughbe","Number":"1045","RawContent":null,"Title":"ComponentDesigner.PreFilterProperties throws NRE if props is null","State":"open","Body":"```cs\r\npublic static IEnumerable<object[]> PreFilterProperties_ComponentWithoutKey_TestData()\r\n{\r\n    yield return new object[] { null };\r\n    yield return new object[] { new Dictionary<string, object>() };\r\n    yield return new object[] { new Dictionary<string, object> { { \"SettingsKey\", new object() } } };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(PreFilterProperties_ComponentWithoutKey_TestData))]\r\npublic void PreFilterProperties_WithIPersistComponentSettingsComponentWithoutKey_Success(IDictionary properties)\r\n{\r\n    var designer = new SubComponentDesigner();\r\n    PropertyDescriptor descriptor = TypeDescriptor.GetProperties(typeof(CustomComponent))[0];\r\n    var component = new IPersistComponentSettingsComponent();\r\n    designer.Initialize(component);\r\n    designer.PreFilterProperties(properties);\r\n    Assert.Null(properties?[\"SettingsKey\"]);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1045","RelatedDescription":"Open issue \"ComponentDesigner.PreFilterProperties throws NRE if props is null\" (#1045)"},{"Id":"448458538","IsPullRequest":true,"CreatedAt":"2019-05-25T12:52:06","Actor":"dotnet-maestro[bot]","Number":"1044","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19274.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19274.6\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1044","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1044)"},{"Id":"448421097","IsPullRequest":true,"CreatedAt":"2019-05-25T05:41:14","Actor":"dotnet-maestro[bot]","Number":"1043","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190524.03\r\n- **Date Produced**: 5/25/2019 5:20 AM\r\n- **Commit**: 4122653611ecb6e7f964af762b4280ba0e1421c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27724-03\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19274.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19274.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19274.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19274.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19274.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19274.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19274.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19274.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19274.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview6.19274.71 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview6.19274.71 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1043","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1043)"},{"Id":"447858894","IsPullRequest":true,"CreatedAt":"2019-05-24T22:50:02","Actor":"zsd4yr","Number":"1034","RawContent":null,"Title":"Run dotnet format on src and tests & fix other formatting issues","State":"closed","Body":"resolves #937","Url":"https://github.com/dotnet/winforms/pull/1034","RelatedDescription":"Closed or merged PR \"Run dotnet format on src and tests & fix other formatting issues\" (#1034)"},{"Id":"448223655","IsPullRequest":true,"CreatedAt":"2019-05-24T15:15:23","Actor":"hughbe","Number":"1042","RawContent":null,"Title":"Remove dead rootComponent parameter from ComponentDesigner.Initialize…","State":"open","Body":"…InheritedProperties","Url":"https://github.com/dotnet/winforms/pull/1042","RelatedDescription":"Open PR \"Remove dead rootComponent parameter from ComponentDesigner.Initialize…\" (#1042)"},{"Id":"448215694","IsPullRequest":false,"CreatedAt":"2019-05-24T14:58:20","Actor":"hughbe","Number":"1041","RawContent":null,"Title":"new ComponentDesigner().Initialize throws NRE ","State":"open","Body":"Should be a nop","Url":"https://github.com/dotnet/winforms/issues/1041","RelatedDescription":"Open issue \"new ComponentDesigner().Initialize throws NRE \" (#1041)"},{"Id":"448213456","IsPullRequest":false,"CreatedAt":"2019-05-24T14:53:43","Actor":"hughbe","Number":"1040","RawContent":null,"Title":"new ComponentDesigner().ParentComponent throws NRE","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/1040","RelatedDescription":"Open issue \"new ComponentDesigner().ParentComponent throws NRE\" (#1040)"},{"Id":"448185724","IsPullRequest":true,"CreatedAt":"2019-05-24T13:57:14","Actor":"hughbe","Number":"1039","RawContent":null,"Title":"Add more DesignerHost related tests, remove Debug.Asserts and fix a NRE bug","State":"open","Body":"Fixes #1038\r\n","Url":"https://github.com/dotnet/winforms/pull/1039","RelatedDescription":"Open PR \"Add more DesignerHost related tests, remove Debug.Asserts and fix a NRE bug\" (#1039)"},{"Id":"448185252","IsPullRequest":false,"CreatedAt":"2019-05-24T13:56:15","Actor":"hughbe","Number":"1038","RawContent":null,"Title":"Setting Site to null in DesignerHost.ComponentRemoving throws NRE","State":"open","Body":"```cs\r\n[Fact]\r\npublic void SiteNestedContainer_Remove_SetSiteToNullInComponentRemoving_Success()\r\n{\r\n    var surface = new SubDesignSurface();\r\n    IDesignerLoaderHost2 host = surface.Host;\r\n    INestedContainer container = surface.CreateNestedContainer(new Component(), \"containerName\");\r\n    IComponentChangeService changeService = Assert.IsAssignableFrom<IComponentChangeService>(host);\r\n\r\n    var component = new RootDesignerComponent();\r\n    int componentRemovingCallCount = 0;\r\n    ComponentEventHandler componentRemovingHandler = (sender, e) =>\r\n    {\r\n        component.Site = null;\r\n        componentRemovingCallCount++;\r\n    };\r\n    changeService.ComponentRemoving += componentRemovingHandler;\r\n\r\n    container.Add(component);\r\n    container.Remove(component);\r\n    Assert.Null(component.Container);\r\n    Assert.Null(component.Site);\r\n}\r\n```\r\n\r\nShould be a nop","Url":"https://github.com/dotnet/winforms/issues/1038","RelatedDescription":"Open issue \"Setting Site to null in DesignerHost.ComponentRemoving throws NRE\" (#1038)"},{"Id":"448135820","IsPullRequest":true,"CreatedAt":"2019-05-24T12:17:13","Actor":"dotnet-maestro[bot]","Number":"1037","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190523.11\r\n- **Date Produced**: 5/24/2019 5:52 AM\r\n- **Commit**: 02a90cc69d2d32bbde9e6e0e41186711c591de27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19273.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19273.11\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1037","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1037)"},{"Id":"448021291","IsPullRequest":false,"CreatedAt":"2019-05-24T07:33:20","Actor":"Vino-Wang","Number":"1036","RawContent":null,"Title":"[Net Core][LOC]The ‘Misc’ component is not translated in local languages OS","State":"open","Body":"* .NET Core Version: 3.0.100-preview6-012067\r\n* VS: Dev16 16.2 Preview 1 d16.2 28921.214\r\n* OS: CHS RS3 X64\r\n* Affected OS: CHS, CHT, CSY, DEU, ESN, FRA, ITA, JPN, KOR, PTB, RUS, TRK, PLK 13 languages\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nThe ‘Misc’ component text is not translated in local languages OS.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nThe ‘Msic’ component is not localized in local languages OS.\r\ne.g. CHS\r\n![Screenshot](https://user-images.githubusercontent.com/18568603/58310448-36d9f480-7e39-11e9-97e2-4485aee84774.png)\r\n\r\n**Expected behavior:**\r\nThe ‘Msic’ should be translated according to the corresponding languages.\r\n\r\n**Minimal repro:**\r\n1.\tInstall latest VS & .NET Core 3.0 on CHS machine, then open the attached app.\r\n[FrameworkApp.zip](https://github.com/dotnet/winforms/files/3215616/FrameworkApp.zip)\r\n[CoreApp.zip](https://github.com/dotnet/winforms/files/3215617/CoreApp.zip)\r\n2.\tRun it and observe the Misc component headers of PropertyGrid.","Url":"https://github.com/dotnet/winforms/issues/1036","RelatedDescription":"Open issue \"[Net Core][LOC]The ‘Misc’ component is not translated in local languages OS\" (#1036)"},{"Id":"447922247","IsPullRequest":true,"CreatedAt":"2019-05-24T05:03:43","Actor":"dotnet-maestro[bot]","Number":"1035","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190523.06\r\n- **Date Produced**: 5/24/2019 12:00 AM\r\n- **Commit**: 1af8deb0ced17c82bb30cc561a20edf2a8f843c9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27723-06\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19273.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19273.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19273.2 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19273.2 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19273.2 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19273.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19273.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19273.2 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19273.2 (parent: Microsoft.NETCore.App)\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190523.08\r\n- **Date Produced**: 5/24/2019 4:52 AM\r\n- **Commit**: 20426e8c486d8715337cb6438ec70bc3619a514d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27723-08\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19273.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19273.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19273.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19273.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19273.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19273.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19273.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19273.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19273.5 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1035","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1035)"},{"Id":"447805274","IsPullRequest":false,"CreatedAt":"2019-05-23T18:16:51","Actor":"OliaG","Number":"1033","RawContent":null,"Title":"Update doc winforms-designer.md","State":"open","Body":"Update Option 1, remove \"Visual Studio does not allow it currently to create a new WinForms Core App from within Visual Studio\" paragraph, etc.","Url":"https://github.com/dotnet/winforms/issues/1033","RelatedDescription":"Open issue \"Update doc winforms-designer.md\" (#1033)"},{"Id":"447796555","IsPullRequest":true,"CreatedAt":"2019-05-23T18:10:27","Actor":"dotnet-maestro[bot]","Number":"1032","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190523.03\r\n- **Date Produced**: 5/23/2019 5:54 PM\r\n- **Commit**: 956becb1e4a2a83fd42182f823e82e83d992b515\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27723-03\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1032","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1032)"},{"Id":"447780499","IsPullRequest":false,"CreatedAt":"2019-05-23T17:16:02","Actor":"AdamYoblick","Number":"1031","RawContent":null,"Title":"Unit test fails sporadically","State":"open","Body":"https://dev.azure.com/dnceng/internal/_build/results?buildId=198754&view=ms.vss-test-web.build-test-results-tab&runId=4820832&resultId=107675&paneView=debug\r\n\r\nGoing to disable this temporarily to allow code to flow.\r\n","Url":"https://github.com/dotnet/winforms/issues/1031","RelatedDescription":"Open issue \"Unit test fails sporadically\" (#1031)"},{"Id":"447779683","IsPullRequest":false,"CreatedAt":"2019-05-23T17:14:05","Actor":"AdamYoblick","Number":"1030","RawContent":null,"Title":"Unit test fails after arcade update","State":"open","Body":"https://dev.azure.com/dnceng/public/_build/results?buildId=198756&view=ms.vss-test-web.build-test-results-tab&runId=4820080&resultId=101525&paneView=debug\r\n\r\nThis is passing in master.\r\n\r\nNo idea why an arcade update would cause this to fail, but I'm disabling this test for now to allow code to flow.","Url":"https://github.com/dotnet/winforms/issues/1030","RelatedDescription":"Open issue \"Unit test fails after arcade update\" (#1030)"},{"Id":"447767504","IsPullRequest":true,"CreatedAt":"2019-05-23T17:00:01","Actor":"dotnet-maestro[bot]","Number":"1029","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190523.02\r\n- **Date Produced**: 5/23/2019 4:43 PM\r\n- **Commit**: 0d3b3f6112f64c86ab60b265838f570c8359e58f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27723-02\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1029","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1029)"},{"Id":"447760306","IsPullRequest":true,"CreatedAt":"2019-05-23T16:38:16","Actor":"dotnet-maestro[bot]","Number":"1028","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190523.01\r\n- **Date Produced**: 5/23/2019 4:27 PM\r\n- **Commit**: 0d3b3f6112f64c86ab60b265838f570c8359e58f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27723-01\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview6-27721-71 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview6-27721-71 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1028","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1028)"},{"Id":"447220722","IsPullRequest":true,"CreatedAt":"2019-05-23T16:07:16","Actor":"AdamYoblick","Number":"1025","RawContent":null,"Title":"disable helix unit tests for now","State":"closed","Body":"Some unit tests are failing on helix machines that do not fail on the build machines. This change is to get us unblocked. We already run debug unit tests locally (for code coverage), so this is no different than what we already have, and integration tests are still running on helix.\r\n\r\nHere's the fix from Matt Galbraith:\r\n\r\nI’m pretty sure, having now run your test locally, what’s going on. Specifically, I think you’re running afoul of dialog handler, which is a thing we have on all the Helix Windows machines to dismiss things like modal invariant / debug assert dialogs and such.\r\n\r\nWe need this to prevent folks’ Checked and debug test runs from timing out and preventing logging of legitimate failures, but you need it to be gone. \r\n\r\nTo disable it, you can choose to explicitly kill dhandler.exe running on the machine, or for fancier means consult this:\r\nhttps://github.com/dotnet/core-eng/blob/master/Documentation/HelixDocumentation.md#disable-dialog-handler-windows-only\r\n\r\nPing me if you need any clarification.\r\n","Url":"https://github.com/dotnet/winforms/pull/1025","RelatedDescription":"Closed or merged PR \"disable helix unit tests for now\" (#1025)"},{"Id":"447553104","IsPullRequest":true,"CreatedAt":"2019-05-23T09:45:06","Actor":"vladimir-krestov","Number":"1027","RawContent":null,"Title":"Accessibility: adding the ScrollItem pattern to ListBox items, fixing ListBox navigation by Narrator","State":"open","Body":"fixes #932 and related to #1026.\r\nThe pull request adds new changes and replaces pull request #935.","Url":"https://github.com/dotnet/winforms/pull/1027","RelatedDescription":"Open PR \"Accessibility: adding the ScrollItem pattern to ListBox items, fixing ListBox navigation by Narrator\" (#1027)"},{"Id":"447542938","IsPullRequest":false,"CreatedAt":"2019-05-23T09:24:46","Actor":"vladimir-krestov","Number":"1026","RawContent":null,"Title":"Accessibility: While Narrator on, caps lock right arrow jumps out of list box prematurely","State":"open","Body":"**Repro steps:**\r\n- Using the Narrator with caps lock mode set focus to list box item.\r\n- Press caps lock + right arrow to set focus to next list box item.\r\n\r\n**Actual:**\r\nThe Narrator jumps out of the list box without traversing the complete list.\r\n\r\n**Expected result:**\r\nUsing Narrator with caps lock mode set to an item, caps lock right arrow passes in order of the elements of the list up and down without jumping out of the list.","Url":"https://github.com/dotnet/winforms/issues/1026","RelatedDescription":"Open issue \"Accessibility: While Narrator on, caps lock right arrow jumps out of list box prematurely\" (#1026)"},{"Id":"447120587","IsPullRequest":true,"CreatedAt":"2019-05-22T12:56:22","Actor":"hughbe","Number":"1024","RawContent":null,"Title":"Remove dead code relating to support for themes","State":"open","Body":"The Themes feature is supported on operating systems since Windows Server 2003 (https://docs.microsoft.com/en-us/windows/desktop/api/uxtheme/nf-uxtheme-isappthemed)\r\n\r\nImportantly, this does *not* necessarily mean that visual styles are enabled, but that they are present in the feature set.\r\n\r\nIf you look at the implementation of the `OSFeature` check for themes, we don't actually check if `IsAppThemed` returns `true`, but rather that it does not throw.. More specifically we check that it does not throw a `EntryPointNotFoundException`, which won't happen in .NET Core since we're supported since Windows 7\r\n\r\nThe actual check for whether visual styles are enabled is `VisualStyleInformation.IsEnabledByUser`","Url":"https://github.com/dotnet/winforms/pull/1024","RelatedDescription":"Open PR \"Remove dead code relating to support for themes\" (#1024)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-05-27T05:30:50.9615205Z","RunDurationInMilliseconds":769}