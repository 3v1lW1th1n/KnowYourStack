{"Data":{"GitHub":{"Issues":[{"Id":"613037668","IsPullRequest":true,"CreatedAt":"2020-05-06T04:13:39","Actor":"suxi-ms","Number":"5095","RawContent":null,"Title":"Suxi/no transformer","State":"open","Body":"This is a tempory PR to review root cause analysis's implemention by using no transformer. Original one is [here](https://github.com/dotnet/machinelearning/pull/4925)\r\n\r\n\r\n- [ ] Fixes #4960 .\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5095","RelatedDescription":"Open PR \"Suxi/no transformer\" (#5095)"},{"Id":"612863000","IsPullRequest":true,"CreatedAt":"2020-05-05T20:08:04","Actor":"mstfbl","Number":"5094","RawContent":null,"Title":"Re-enabled BinaryClassifierSymSgdTest with platform-specific baselines","State":"open","Body":"\r\nThis PR re-enables the unit test `BinaryClassifierSymSgdTest()` on MacOS and Linux by adding MacOS and Linux-specific baselines for the test. The test works properly on these builds as the platform-specific baselines are consistent between each run.","Url":"https://github.com/dotnet/machinelearning/pull/5094","RelatedDescription":"Open PR \"Re-enabled BinaryClassifierSymSgdTest with platform-specific baselines\" (#5094)"},{"Id":"612858082","IsPullRequest":false,"CreatedAt":"2020-05-05T19:59:00","Actor":"mstfbl","Number":"5093","RawContent":null,"Title":"Ubuntu ML .NET Docker Image has no configured locales","State":"open","Body":"The Ubuntu ML .NET Docker image does not have configured locals, which is resulting in the following error statement:\r\n\r\n>    System.InvalidOperationException : Error initializing model :Microsoft.ML.OnnxRuntime.OnnxRuntimeException: [ErrorCode:RuntimeException] Exception during initialization: /onnxruntime_src/onnxruntime/core/providers/cpu/nn/string_normalizer.cc:87 onnxruntime::string_normalizer::Locale::Locale(const string&) Failed to construct locale with name:en_US.UTF-8:locale::facet::_S_create_c_locale name not valid:Please, install necessary language-pack-XX and configure locales\r\n\r\nThis error is the reason why `TextNormalizingOnnxConversionTest()` is currently disabled on Linux at line 462:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/c83ea54a0874fbeac0d16cb5f31e3cd97f8d97ed/test/Microsoft.ML.Tests/OnnxConversionTest.cs#L440-L473\r\n\r\nThe ONNX Runtime team encountered a similar issue with their docker images and fixed it with [onnxruntime PR#19](https://github.com/onnx/backend-scoreboard/pull/19), where `locales` was installed with `apt-get` and the `en_US.UTF-8` locale was configured.\r\n\r\n**TODO**: Edit the Dockerfile (which is not in this repo) for our Ubuntu builds and add the following:\r\n```\r\nRUN apt-get update && apt-get install -y locales\r\nRUN locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/5093","RelatedDescription":"Open issue \"Ubuntu ML .NET Docker Image has no configured locales\" (#5093)"},{"Id":"612819549","IsPullRequest":false,"CreatedAt":"2020-05-05T18:51:43","Actor":"rquintino","Number":"5092","RawContent":null,"Title":"official docker image for mlnet cli?","State":"open","Body":"Hi! wonder if it would be possible to have an official docker image, either on dockerhub or Microsoft Container Registry (MCR).\r\n\r\nThat would be very cool for single line mlnet cli automl workloads. Can't get easier than that. Also safer to trust an official image.\r\n\r\n(example: https://hub.docker.com/_/microsoft-azure-batch-shipyard)\r\n\r\nthanks!","Url":"https://github.com/dotnet/machinelearning/issues/5092","RelatedDescription":"Open issue \"official docker image for mlnet cli?\" (#5092)"},{"Id":"612672218","IsPullRequest":true,"CreatedAt":"2020-05-05T15:01:17","Actor":"aslotte","Number":"5091","RawContent":null,"Title":"Pass in caught exception to inner exception in LoadTFSession","State":"open","Body":"Fixes #4409 \r\n\r\n## Description\r\nPassing in the caught exception as an inner exception to retain stack trace and information.\r\nI was unable to find a suitable place to add a unit test for this feature. Please feel free to instruct me where I will be able to add that if needed.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5091","RelatedDescription":"Open PR \"Pass in caught exception to inner exception in LoadTFSession\" (#5091)"},{"Id":"611211363","IsPullRequest":true,"CreatedAt":"2020-05-05T07:00:09","Actor":"aslotte","Number":"5082","RawContent":null,"Title":"Use KeyTypeAttribute from Schema in CreateTextLoader","State":"closed","Body":"Fixes #2642 \r\n\r\nThis PR reads the KeyTypeAttribute from the schema of the incoming type and sets that on the corresponding column when loading a text file using the CreateTextLoader.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5082","RelatedDescription":"Closed or merged PR \"Use KeyTypeAttribute from Schema in CreateTextLoader\" (#5082)"},{"Id":"610983267","IsPullRequest":true,"CreatedAt":"2020-05-05T00:58:50","Actor":"mstfbl","Number":"5080","RawContent":null,"Title":"Added SQLite database to test loading of datasets in non-Windows builds","State":"closed","Body":"Fix #4156 and related to #4175 \r\n\r\nMSSQL databases are not supported on Mac and Linux builds. As such, I've generated an equivalent SQLite database, and re-activated these disabled Iris tests so that these unit tests can run on non-Windows builds and produce equivalent test results.\r\n\r\nReactivated tests on Linux and MacOS list:\r\n\r\n- `IrisLightGbm()`\r\n- `IrisLightGbmWithLoadColumnName()`\r\n- `IrisVectorLightGbm()`\r\n- `IrisVectorLightGbmWithLoadColumnName()`\r\n- `IrisSdcaMaximumEntropy()`","Url":"https://github.com/dotnet/machinelearning/pull/5080","RelatedDescription":"Closed or merged PR \"Added SQLite database to test loading of datasets in non-Windows builds\" (#5080)"},{"Id":"612246446","IsPullRequest":true,"CreatedAt":"2020-05-05T00:08:02","Actor":"Lynx1820","Number":"5090","RawContent":null,"Title":"Adding vector tests for KeyToValue and ValueToKey","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/5090","RelatedDescription":"Open PR \"Adding vector tests for KeyToValue and ValueToKey\" (#5090)"},{"Id":"611089133","IsPullRequest":true,"CreatedAt":"2020-05-04T21:33:15","Actor":"frank-dong-ms","Number":"5081","RawContent":null,"Title":"fix x86 crash","State":"closed","Body":"fixes https://github.com/dotnet/machinelearning/issues/1216.\r\n\r\nTreeEnsembleCombiner has a bug that causing byte array out of range and corrupts heap\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5081","RelatedDescription":"Closed or merged PR \"fix x86 crash\" (#5081)"},{"Id":"611812327","IsPullRequest":false,"CreatedAt":"2020-05-04T11:46:30","Actor":"nsulikowski","Number":"5089","RawContent":null,"Title":"The future of ML.NET","State":"open","Body":"Back in 3/26/2020 I was surveyed by members of the ML.NET team, who were gathering feedback about uses of ML.NET. \r\nI'm wondering broadly what the future of ML.NET will look like? Will you continue to invest in making it a stand alone product for machine learning, extending the breath and depth of the library? Or perhaps it'll end up being more of a hosting environment for models and statistical studies built in other languages like python/R ?\r\nI personally would love to have ML.NET eventually be a one stop shop, with everything I need. But I wonder what the team is thinking? \r\nThanks! ","Url":"https://github.com/dotnet/machinelearning/issues/5089","RelatedDescription":"Open issue \"The future of ML.NET\" (#5089)"},{"Id":"611758370","IsPullRequest":false,"CreatedAt":"2020-05-04T10:13:11","Actor":"adriansd27","Number":"5088","RawContent":null,"Title":"Update ML.NET trained Model in ASP.NET Core without restarting the app","State":"open","Body":"### System information\r\nWindows 10\r\n- **OS version/distro**: Education\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.1\r\n\r\n### Issue\r\nUnable to update a ML.NET trained model in ASP.NET Core without restarting the web app\r\n- **What did you do?**\r\n\r\nLike the title says, I'm trying to retrain an existing ML.NET model in an ASP.NET Core web app. The setup: I have an existing model.zip file on the local disk. In Startup.cs I'm injecting the prediction engine pool service\r\n\r\n`services.AddPredictionEnginePool<ImageData, ImagePrediction>().FromFile(\r\n        \"ImageClassificationModel\", _modelPath, true);`\r\n\r\nby loading the existing model from the disk. The _modelPath variable indicates the path to the zip file, and the true parameter indicates that the Prediction Engine Pool should watch the model for changes. According to https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/serve-model-web-api-ml-net,\r\n\r\n> The PredictionEnginePool service provides a mechanism to reload an updated model without taking your application down.\r\n\r\nI've also created a service that takes the path to some image folders and trains a new model, then saves it to the same location _modelPath indicates. That service is exposed through an API Endpoint.\r\n\r\n- **What happened?**\r\n\r\nThe problem: When accessing the train endpoint, the app works fine. It retrains the model and saves it to the indicated path. I can do this several times. However, if I use the model to predict an image's label, I'm no longer able to retrain the model. If I try to call the train endpoint again, I'm getting an error that says the model file is already in use.\r\n\r\n> System.IO.IOException: 'The process cannot access the file '\\MLModel\\model.zip' because it is being used by another process.'\r\n\r\nThe only way to update the model so far would be to completely restart the web app and call the train endpoint first thing.\r\n\r\n- **What did you expect?**\r\n\r\nThe expected result would be able to retrain the model without restarting the web app.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5088","RelatedDescription":"Open issue \"Update ML.NET trained Model in ASP.NET Core without restarting the app\" (#5088)"},{"Id":"611694277","IsPullRequest":true,"CreatedAt":"2020-05-04T08:29:48","Actor":"mstfbl","Number":"5087","RawContent":null,"Title":"Debugging tests disabled on Linux and MacOS builds","State":"open","Body":"Debugging PR for diagnosing tests disabled on Linux and MacOS builds:\r\n\r\nDisabled tests - Disabled build(s):\r\n- `BinaryClassifierSymSgdTest()` - Linux, MacOS\r\n- `TextNormalizingOnnxConversionTest()` - Linux\r\n- `MatrixFactorizationSimpleTrainAndPredict()` - MacOS\r\n\r\nReport:\r\n- `BinaryClassifierSymSgdTest()`\r\n  - Fixed, added new baselines for Linux and MacOS builds with PR #5094 .\r\n- `MatrixFactorizationSimpleTrainAndPredict()`\r\n  - The baseline on MacOS varies greatly. In 10 consecutive tests, the calculated MSE ranged between 0.586040127051849 to 0.625339146273452. With these results, a tolerance of `Math.Pow(10, -1)` is required.\r\n- `TextNormalizingOnnxConversionTest()`\r\n  - Will be fixed when Issue #5093 is fixed.\r\n  - This test fails on the Linux Net CoreApp 2.1 builds on Linux with the following error:\r\n\r\n  - > System.InvalidOperationException : Error initializing model :Microsoft.ML.OnnxRuntime.OnnxRuntimeException: [ErrorCode:RuntimeException] Exception during initialization: /onnxruntime_src/onnxruntime/core/providers/cpu/nn/string_normalizer.cc:87 onnxruntime::string_normalizer::Locale::Locale(const string&) Failed to construct locale with name:en_US.UTF-8:locale::facet::_S_create_c_locale name not valid:Please, install necessary language-pack-XX and configure locales\r\n\r\n  - The issue being faced here may be different than before, as the error being faced is related to locales. As this test passes on MacOS Net Core App 2.1 and Linux Net Core App 3.1, this may be a Linux Net Core App 2.1 or more specifically Ubuntu Net Core App 2.1 issue.\r\n\r\n  - The ONNX team faced the exact same issue as this, and they have fixed it with [this PR](https://github.com/onnx/backend-scoreboard/pull/19), which installs the appropiate locales in their docker instance.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5087","RelatedDescription":"Open PR \"Debugging tests disabled on Linux and MacOS builds\" (#5087)"},{"Id":"611555591","IsPullRequest":false,"CreatedAt":"2020-05-04T01:24:10","Actor":"luisquintanilla","Number":"5086","RawContent":null,"Title":"Auto.ML.0.16.0 and System.Memory 4.0.1.0","State":"open","Body":"Moving issue raised by @ericdransfeldt in Docs repo since it's a product question.\r\n\r\nHi,\r\n\r\nI love the Microsoft.ML and AutoML platforms but am having an issue when I upgraded my AutoML version via NuGet. When I upgraded from Microsoft.ML.AutoML from version 0.15.0 to 0.16.0 I started getting an error when I ran my code. Nothing changed in my source code except to recompile. It seems like it can't find System.Memory 4.0.1.0.\r\n\r\nCould not load file or assembly 'System.Memory, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified., Stack: at Microsoft.ML.Data.InternalSchemaDefinition.GetVectorAndItemType(String name, Type rawType, IEnumerable1 attributes, Boolean& isVector, Type& itemType) at Microsoft.ML.Data.InternalSchemaDefinition.GetVectorAndItemType(MemberInfo memberInfo, Boolean& isVector, Type& itemType) at Microsoft.ML.Data.SchemaDefinition.Create(Type userType, Direction direction) at Microsoft.ML.Data.DataViewConstructionUtils.CreateFromEnumerable[TRow](IHostEnvironment env, IEnumerable1 data, SchemaDefinition schemaDefinition)\r\n\r\nI went back to the older version and it worked fine. No dependency issues.. Any ideas..?\r\n\r\nThanks for any help or ideas!\r\n\r\nCheers,\r\nEric","Url":"https://github.com/dotnet/machinelearning/issues/5086","RelatedDescription":"Open issue \"Auto.ML.0.16.0 and System.Memory 4.0.1.0\" (#5086)"},{"Id":"611465827","IsPullRequest":true,"CreatedAt":"2020-05-03T17:37:55","Actor":"jwood803","Number":"5085","RawContent":null,"Title":"Update OnnxTransformer Doc XML","State":"open","Body":"Update for #4707.\r\n\r\nUpdates the doc XML to use the latest dynamic API.","Url":"https://github.com/dotnet/machinelearning/pull/5085","RelatedDescription":"Open PR \"Update OnnxTransformer Doc XML\" (#5085)"},{"Id":"611269075","IsPullRequest":true,"CreatedAt":"2020-05-03T06:20:34","Actor":"mstfbl","Number":"5084","RawContent":null,"Title":"Added SciSharp.TensorFlow as a dependency to Microsoft.ML.TensorFlow","State":"closed","Body":"Fix #4065. Added package reference to `SciSharp.TensorFlow.Redist` in `Microsoft.ML.TensorFlow`, and removed this package reference from `Microsoft.ML.Tests`, as `Microsoft.ML.Tests` already has a reference to `Microsoft.ML.TensorFlow.`\r\n\r\n`Microsoft.ML.Tensorflow.csproj` did not include a package reference to `SciSharp.TensorFlow.Redist`, which resulted in users needing to manually install this NuGet package, as demonstrated in issue #4065. I confirmed that this fix works [here](https://github.com/dotnet/machinelearning/issues/4065#issuecomment-623009939).","Url":"https://github.com/dotnet/machinelearning/pull/5084","RelatedDescription":"Closed or merged PR \"Added SciSharp.TensorFlow as a dependency to Microsoft.ML.TensorFlow\" (#5084)"},{"Id":"611227166","IsPullRequest":false,"CreatedAt":"2020-05-02T16:37:29","Actor":"ddobric","Number":"5083","RawContent":null,"Title":"Docker issue with TensorFlow inception_v3.meta model","State":"open","Body":"### System information\r\n\r\n- Windows 10, Docker desktop Linux. v. 19.03.8, build afacb8b\r\n- .NET Core Version 3.1\r\n- ML.NET 1.4.0\r\n\r\n### Issue\r\nWhen working with image classification and TensorFlow model, the TensorFlowUtils tries to download the inception file.\r\nFirst of all the dockerfile already copies the inception file to the /tmp/MLNET location. As you can see on the picture the file is in there. It is trying to download it if the file already exists?\r\n\r\n![image](https://user-images.githubusercontent.com/1756871/80869999-ed7a6200-8ca3-11ea-8904-0b49822331e1.png)\r\n\r\nHow to prevent downloading of the inception file?\r\n\r\nThanks\r\nDamir","Url":"https://github.com/dotnet/machinelearning/issues/5083","RelatedDescription":"Open issue \"Docker issue with TensorFlow inception_v3.meta model\" (#5083)"},{"Id":"610968953","IsPullRequest":true,"CreatedAt":"2020-05-01T21:07:13","Actor":"michaelgsharp","Number":"5079","RawContent":null,"Title":"ColumnSelectingTransformer now infers ONNX shape","State":"open","Body":"ColumnSelectingTransformer wasn't inferring the ONNX shape during ONNX export. This was causing issues when the shape needed to be known. This PR adds in the shape inference step by removing the skip flag to skip it.","Url":"https://github.com/dotnet/machinelearning/pull/5079","RelatedDescription":"Open PR \"ColumnSelectingTransformer now infers ONNX shape\" (#5079)"},{"Id":"610195701","IsPullRequest":false,"CreatedAt":"2020-05-01T16:41:55","Actor":"luistelmocosta","Number":"5073","RawContent":null,"Title":"Run Evaluation on full test dataset","State":"closed","Body":"Hello, I would like to know how do I run the evaluation on the full test dataset instead of doing it in a single line.\r\n\r\nI noticed that in `Program.cs` we are only running the prediction for one single line:\r\n\r\n```\r\n// Here (ModelInput object) you could provide new test data, hardcoded or from the end-user application, instead of the row from the file.\r\n            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false)\r\n                                                                        .First();\r\n```\r\n\r\nIs there any other option to run on the full test set? \r\n\r\nKind regards","Url":"https://github.com/dotnet/machinelearning/issues/5073","RelatedDescription":"Closed issue \"Run Evaluation on full test dataset\" (#5073)"},{"Id":"610603350","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:36","Actor":"frank-dong-ms","Number":"5074","RawContent":null,"Title":"try replace DotProductDense","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5074","RelatedDescription":"Closed or merged PR \"try replace DotProductDense\" (#5074)"},{"Id":"610605549","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:33","Actor":"frank-dong-ms","Number":"5075","RawContent":null,"Title":"Test ensemble combiner add scale","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5075","RelatedDescription":"Closed or merged PR \"Test ensemble combiner add scale\" (#5075)"},{"Id":"610607981","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:30","Actor":"frank-dong-ms","Number":"5076","RawContent":null,"Title":"Test ensemble combiner max abs","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5076","RelatedDescription":"Closed or merged PR \"Test ensemble combiner max abs\" (#5076)"},{"Id":"610612188","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:27","Actor":"frank-dong-ms","Number":"5077","RawContent":null,"Title":"Test ensemble combiner scale","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5077","RelatedDescription":"Closed or merged PR \"Test ensemble combiner scale\" (#5077)"},{"Id":"610613408","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:24","Actor":"frank-dong-ms","Number":"5078","RawContent":null,"Title":"Test ensemble combiner sum sq","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5078","RelatedDescription":"Closed or merged PR \"Test ensemble combiner sum sq\" (#5078)"},{"Id":"608918711","IsPullRequest":false,"CreatedAt":"2020-04-30T16:56:13","Actor":"luistelmocosta","Number":"5070","RawContent":null,"Title":"Test dataset using the command line","State":"closed","Body":"Hello, I am using MLNET using the CLI and I have a doubt regarding the test dataset. \r\n\r\n`mlnet auto-train --task multiclass-classification --dataset \"xxxx.tsv\" --ignore-columns \"Id,Task,CreatedOn\" --test-dataset \"xxx.tsv\" --max-exploration-time 600 --label-column-name Type`\r\n\r\nThe training results look very optimistic and I was wondering if it is not tuning on the test dataset which would not be ideal. Is the test dataset being used only for \"inference\" after the training is complete? Do I need to pass an evaluation dataset also so the fine-tuning will be made on that or is none is given it is doing Cross Validation?\r\n\r\nKind regards\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5070","RelatedDescription":"Closed issue \"Test dataset using the command line\" (#5070)"},{"Id":"609396695","IsPullRequest":true,"CreatedAt":"2020-04-30T03:53:04","Actor":"mstfbl","Number":"5072","RawContent":null,"Title":"Test PR to view CI Generated baselines","State":"closed","Body":"The purpose of this test PR is to view the benchmarks generated on CI builds, and to verify that the results are exactly the same as the expected benchmarks.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5072","RelatedDescription":"Closed or merged PR \"Test PR to view CI Generated baselines\" (#5072)"},{"Id":"608757001","IsPullRequest":true,"CreatedAt":"2020-04-29T21:03:40","Actor":"mstfbl","Number":"5068","RawContent":null,"Title":"Fixed baselines between Debug and Release builds","State":"closed","Body":"Most baselines in SingleDebug and SingleRelease test baseline folders are differing in fields that are not actively compared. Remaining baselines are differing in certain log-loss reduction values at the 10^-5'th digit, due to how the Release compiler does not round up or down values. \r\n\r\nThis PR handles such baselines by removing them from SingleDebug and SingleRelease folders, and by adding to Common folder. This PR also removes the checking of SingleDebug and SingleRelease folders in `BaseTestBaseline.GetBaselinePath()`.","Url":"https://github.com/dotnet/machinelearning/pull/5068","RelatedDescription":"Closed or merged PR \"Fixed baselines between Debug and Release builds\" (#5068)"},{"Id":"609256989","IsPullRequest":true,"CreatedAt":"2020-04-29T18:13:48","Actor":"LittleLittleCloud","Number":"5071","RawContent":null,"Title":"Fix MatrixFactorization trainer's warning","State":"open","Body":"### Problem to fix\r\nMatrixFactorization's default options will throw a warning msg `Warning: insufficient blocks may slow down the trainingprocess (4*nr_threads^2+1 blocks is suggested)` when running on PC with more than 10 threads.\r\n\r\n### Cause\r\nThe warning msg is from libmf, which will check nr_bin and nr_thread, if nr_bin <= 2* nr_thread, it will show that warning. \r\n\r\nMatrixFactorization uses `max(20, 2*nr_thread)` to initialize nr_bin, when nr_thread < 10, it's fine because nr_bin will be 20, which is greater than 2\\*nr_thread, but if nr_thread is >= 10, nr_bin's value will be 2\\*nr_thread, which is less than 2*nr_thread + 1 and trigger warning.\r\n\r\n### Fix\r\ninitialize nr_bin with 2 * nr_threads + 1. \r\n\r\n### Related issue\r\n#5067 ","Url":"https://github.com/dotnet/machinelearning/pull/5071","RelatedDescription":"Open PR \"Fix MatrixFactorization trainer's warning\" (#5071)"},{"Id":"608794323","IsPullRequest":false,"CreatedAt":"2020-04-29T05:44:02","Actor":"strikene","Number":"5069","RawContent":null,"Title":"Microsoft.ML with onnx can not get Column","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: win10 1909\r\n- **.NET Version (eg., dotnet --info)**: Core 3.1\r\n\r\n### Issue\r\n\r\nAn exception occurred while getting the inference result \r\nException:\r\nSystem.ArgumentOutOfRangeException: 'Cannot map column (name: loss, type: Microsoft.ML.Transforms.Onnx.OnnxSequenceType) in data to the user-defined type, ConsoleApp1.OutPut. (Parameter 'column')'\r\n\r\n### Source code / logs\r\nPackage \r\n    Microsoft.ML1.5.0-preview2\r\n    Microsoft.ML.ImageAnalytics1.5.0-preview2\r\n    Microsoft.ML.OnnxRuntime1.2.0\r\n    Microsoft.ML.OnnxTransformer1.5.0-preview2\r\n\r\nCode \r\n    Console.WriteLine(\"Hello World!\");\r\n            MLContext mlContext = new MLContext();\r\n            var data = mlContext.Data.LoadFromEnumerable(new List<ApiInput>());\r\n            var PIL = mlContext.Transforms.LoadImages(outputColumnName: \"data\",\r\n                imageFolder: null,\r\n                inputColumnName: \"ImagePath\")\r\n                .Append(mlContext.Transforms.ResizeImages(outputColumnName: \"data\", imageWidth: 224, imageHeight: 224, inputColumnName: \"data\"))\r\n                .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"data\"))\r\n                .Append(mlContext.Transforms.ApplyOnnxModel(outputColumnName: \"loss\", inputColumnName:  \"data\" , modelFile: \"model.onnx\"));\r\n            var model = PIL.Fit(data);\r\n            var ss = new List<ApiInput>\r\n            {\r\n                new ApiInput() { ImagePath = \"C:\\\\1.png\" }\r\n            };\r\n            var data1 = mlContext.Data.LoadFromEnumerable(ss);\r\n            var reml = model.Transform(data1);\r\n            var re = reml.GetColumn<OutPut>(\"loss\");\r\n\r\n public class ApiInput\r\n    {\r\n        public string ImagePath { get; set; }\r\n    }\r\n\r\n  public class OutPut\r\n    {\r\n        [OnnxSequenceType(typeof(string))]\r\n        public string n;\r\n        [OnnxSequenceType(typeof(float))]\r\n        public float n1;\r\n\r\n    }\r\nThe input and output of the model is shown below\r\n![_(($TF0ZVX43WZD)O4E~WHX](https://user-images.githubusercontent.com/62022463/80564103-77fe5f80-8a1f-11ea-9c61-8d2e3ae1ec55.png)\r\n\r\nThere are two kinds of output in this model. I can get the result in classLabel normally, but for loss I have not found any method that can get it correctly  \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5069","RelatedDescription":"Open issue \"Microsoft.ML with onnx can not get Column\" (#5069)"},{"Id":"608562065","IsPullRequest":true,"CreatedAt":"2020-04-29T00:15:12","Actor":"LittleLittleCloud","Number":"5066","RawContent":null,"Title":"Update CodeGenerator's console project to netcoreapp3.1","State":"closed","Body":"Issues\r\n- https://github.com/dotnet/machinelearning-modelbuilder/issues/684\r\n\r\nAnd it also fix this bug\r\n- https://github.com/dotnet/machinelearning-modelbuilder/issues/714","Url":"https://github.com/dotnet/machinelearning/pull/5066","RelatedDescription":"Closed or merged PR \"Update CodeGenerator's console project to netcoreapp3.1\" (#5066)"},{"Id":"608636254","IsPullRequest":false,"CreatedAt":"2020-04-28T21:45:16","Actor":"LittleLittleCloud","Number":"5067","RawContent":null,"Title":"Update NumberOfThreads default value for MatrixFactorization trainer ","State":"open","Body":"The default value for MatrixFactorization will use all threads, which might trigger a warning in [libmf](https://github.com/cjlin1/libmf/blob/e70b9a32f7df32cce961bbbb997da074759a16fe/mf.cpp#L4024) when it exceeds two times of nr_bins.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5067","RelatedDescription":"Open issue \"Update NumberOfThreads default value for MatrixFactorization trainer \" (#5067)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-05-06T05:30:39.5027761Z","RunDurationInMilliseconds":983}