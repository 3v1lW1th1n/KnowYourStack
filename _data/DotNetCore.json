{"Data":{"Blog":{"FeedItems":[{"Title":"Update on .NET Core 3.0 and .NET Framework 4.8","PublishedOn":"2018-10-04T16:29:57+00:00","CommentsCount":57,"FacebookCount":0,"Summary":"In May, we announced .NET Core 3.0, the next major version of .NET Core that adds support for building desktop applications using WinForms, WPF, and Entity Framework 6. We also announced some exciting...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/","RawContent":null},{"Title":".NET Core October 2018 Update – NET Core 2.1.5 & SDK 2.1.403","PublishedOn":"2018-10-02T15:31:06+00:00","CommentsCount":9,"FacebookCount":0,"Summary":".NET Core October 2018 Update Today, we are releasing the .NET Core October 2018 Update. This update includes .NET Core 2.1.5 and .NET Core SDK 2.1.403 and contains important reliability fixes....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/02/net-core-october-2018-update/","RawContent":null},{"Title":".NET Framework September 2018 Preview of Quality Rollup","PublishedOn":"2018-09-25T19:36:58+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Late last week we released the September 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated code to prevent...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/25/net-framework-september-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing Cumulative Updates for .NET Framework for Windows 10 October 2018 Update","PublishedOn":"2018-09-19T22:30:19+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We deliver .NET Framework updates nearly every month, through Windows Update and other distribution channels. We are making changes to the way that we deliver those updates. We’ll soon start...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/19/announcing-cumulative-updates-for-net-framework-for-windows-10-october-2018-update/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3646","PublishedOn":"2018-09-18T02:38:06+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/17/announcing-net-framework-4-8-early-access-build-3646/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 2","PublishedOn":"2018-09-12T19:26:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 2. We have great improvements that we want to share and that we would love to get your feedback on, either in the comments or at dotnet/core #1938....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-net-core-2-2-preview-2/","RawContent":null},{"Title":"Announcing ‘Machine Learning .NET’ 0.5","PublishedOn":"2018-09-12T18:55:34+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, coinciding with the .NET Conf 2018, we&#8217;re announcing the release of ML.NET 0.5. It’s been a few months already since we released ML.NET 0.1 at //Build 2018, a cross-platform, open source...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-ml-net-0-5/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 2 and the preview of the Cosmos DB provider and spatial extensions for EF Core","PublishedOn":"2018-09-12T17:04:13+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 2 available, together with a preview of our data provider for Cosmos DB and new spatial extensions for our SQL Server and in-memory providers. Obtaining the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-entity-framework-core-2-2-preview-2/","RawContent":null},{"Title":"A (Belated) Welcome to C# 7.3","PublishedOn":"2018-09-12T17:00:52+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"A (Belated) Welcome to C# 7.3 Better late than never! Some of you may have noticed that C# 7.3 already shipped, back in Visual Studio 2017 update 15.7. Some of you may even be using the features...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/a-belated-welcome-to-c-7-3/","RawContent":null},{"Title":".NET Framework September 2018 Security and Quality Rollup","PublishedOn":"2018-09-11T18:36:50+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Updated: September 21, 2018 SharePoint workflows may stop working after installing this update.  See SharePoint workflows stop working after you install .NET security updates for CVE-2018-8421 for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8159331036","Type":"PullRequestEvent","CreatedAt":"2018-08-23T20:13:18","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Opened pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8147233541","Type":"PullRequestEvent","CreatedAt":"2018-08-21T22:39:06","Actor":"anthonychu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Opened pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8131503388","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:19:54","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Merged pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"8075734624","Type":"IssuesEvent","CreatedAt":"2018-08-07T07:06:40","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"},{"Id":"7951838452","Type":"IssuesEvent","CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/107","RelatedDescription":"Opened issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107) at dotnet/home","RelatedBody":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8377166566","Type":"IssuesEvent","CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Opened issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87) at dotnet/announcements","RelatedBody":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```"},{"Id":"8362210504","Type":"IssuesEvent","CreatedAt":"2018-10-03T16:11:10","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Opened issue \".NET Core 2.0 has reached end of life\" (#86) at dotnet/announcements","RelatedBody":"On October 1, 2018 .NET Core 2.0 reached end of life. This means the version channel is no longer supported and updates will no longer be provided. We recommend moving to a supported release. See our [support policy](https://www.microsoft.com/net/platform/support-policy) for more details.\r\n\r\nWe understand there will be needs to access end of life versions so downloads and Docker images will remain available. \r\n\r\n* 2.0 downloads will still be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). You will see notifications on the site indicating the end of life status. \r\n* 2.0 links have been removed from the [microsoft/donet Docker page](https://hub.docker.com/r/microsoft/dotnet/) though images will remain on the system.\r\n\r\n"},{"Id":"8279098039","Type":"IssuesEvent","CreatedAt":"2018-09-18T01:10:24","Actor":"spshant","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Opened issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85) at dotnet/announcements","RelatedBody":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n"},{"Id":"8247970519","Type":"IssuesEvent","CreatedAt":"2018-09-11T17:00:56","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](***TDB***).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n"},{"Id":"8220412616","Type":"IssuesEvent","CreatedAt":"2018-09-05T20:56:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Opened issue \".NET Core Runtime ARM64 Status\" (#82) at dotnet/announcements","RelatedBody":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\n## Current Status\r\n\r\nARM64 is currently broken in .NET Core 3.0 builds. See:\r\n\r\n* [dotnet/coreclr #19805](https://github.com/dotnet/coreclr/issues/19805)\r\n* [dotnet/coreclr #19822](https://github.com/dotnet/coreclr/issues/19822)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following operating systems:\r\n\r\n* Ubuntu 16.04\r\n* Windows 10\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)"},{"Id":"8152375982","Type":"IssuesEvent","CreatedAt":"2018-08-22T18:23:02","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80) at dotnet/announcements","RelatedBody":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8379394176","Type":"IssuesEvent","CreatedAt":"2018-10-07T01:10:22","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20244","RelatedDescription":"Reopened issue \"Async Code Leaks in 2.1 Runtime, but Not 2.0 Runtime\" (#20244) at dotnet/coreclr","RelatedBody":"I have encountered an issue a specific instance of my code leaks when the .NET Core runtime is upgraded from 2.0 to 2.1. While the original code is too complex to post, I was able to reproduce the issue with a distilled example. \r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace MemoryTester\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            List<Task<long>> tasks = new List<Task<long>>();\r\n\r\n            for (var i = 0; i < 2000; i++)\r\n            {\r\n                var task = MockWork(new byte[1024 * 1024]);\r\n                tasks.Add(task);\r\n                task.Wait();\r\n\r\n                GC.Collect(GC.MaxGeneration, GCCollectionMode.Forced, true);\r\n                GC.WaitForPendingFinalizers();\r\n            }\r\n\r\n            var all = Task.WhenAll(tasks).GetAwaiter().GetResult();\r\n\r\n            Console.WriteLine($\"Finished working on {all.Sum()} bytes.\");\r\n        }\r\n\r\n        static async Task<long> MockWork(byte[] bytes)\r\n        {\r\n            await Task.Delay(10);\r\n            await Task.Yield();\r\n            return bytes.Length;\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nI can see how it would leak, if `MockWork` is compiled into a state machine with a property representing `bytes`, then the fact that `Main` holds a reference to all the tasks would prevent it from garbage collecting those byte arrays. However, I find it curious that this style of code works in 2.0 which leads me to believe that it nulls out unused fields in the state machine when the task is complete. \r\n\r\nAll in all, my question is this leak expected behavior?\r\n\r\nFor what it's worth, I suspect that the change in behavior may be related to these two PRs for 2.1:\r\ndotnet/coreclr#13105, dotnet/coreclr#14178 \r\n"},{"Id":"8379393928","Type":"PullRequestEvent","CreatedAt":"2018-10-07T01:10:20","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20294","RelatedDescription":"Opened pull request \"Clear unnecessary state from completed Tasks\" (#20294) at dotnet/coreclr","RelatedBody":"When Tasks backed by delegates are created, an ExecutionContext is captured.  When the task completes, its delegate is being cleared, but its ExecutionContext is not, which means if the Task is subsequently kept alive (e.g. stored in a cache), so too is its ExecutionContext, which can capture an arbitrary amount of ambient state via async locals.  This commit augments the clearing of the delegate to similarly clear the ExecutionContext.\r\n\r\nRelated, async methods can also capture ExecutionContext when awaits yield, so this clears out that context as well.  And as long as we're doing that, we may as well also clear the state machine state, so that any hoisted locals in the state machine aren't kept alive if the resulting task is kept alive.  Not doing so previously was a conscious choice, in order to aid in debugging, but as we've heard of at least a couple of cases where it unexpectedly caused a leak, I'm going ahead and changing it.\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/20273\r\nFixes https://github.com/dotnet/coreclr/issues/20244\r\ncc: @kouvel, @tarekgh, @davidfowl, @benaadams "},{"Id":"8379237945","Type":"PullRequestEvent","CreatedAt":"2018-10-06T22:51:30","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20291","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,corert\" (#20291) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @github-john-doe"},{"Id":"8379082544","Type":"PullRequestEvent","CreatedAt":"2018-10-06T20:55:17","Actor":"janvorli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20116","RelatedDescription":"Merged pull request \"Port to release/2.1 - Fix hijack for ARM/ARM64/x86 on Unix\" (#20116) at dotnet/coreclr","RelatedBody":"**Description**\r\n\r\nWe were not checking the case when we have interrupted a thread inside\r\nof a function epilog for other architectures than amd64. When such an\r\ninterruption happens, GS cookie check in a stack walking has failed,\r\nsince we are unable to decode GS cookie location when the IP is in\r\nepilog.\r\n\r\n**Customer Impact**\r\n\r\nCustomer's application terminates on ARM, ARM64 or x86 Unix due to fail fast when a thread is suspended for GC while running in a function epilog.\r\n\r\n**Regression?**\r\nNo\r\n\r\n**Risk**\r\nNo\r\n\r\n**Original issue:** #20015\r\n"},{"Id":"8378982426","Type":"PullRequestEvent","CreatedAt":"2018-10-06T19:48:30","Actor":"edwinfrc","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20293","RelatedDescription":"Closed pull request \"Merge pull request #2 from dotnet/master\" (#20293) at dotnet/coreclr","RelatedBody":"merge"},{"Id":"8378982221","Type":"PullRequestEvent","CreatedAt":"2018-10-06T19:48:22","Actor":"edwinfrc","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20293","RelatedDescription":"Opened pull request \"Merge pull request #2 from dotnet/master\" (#20293) at dotnet/coreclr","RelatedBody":"merge"},{"Id":"8378816879","Type":"PullRequestEvent","CreatedAt":"2018-10-06T18:05:25","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20285","RelatedDescription":"Merged pull request \"JIT: make sure to use normalized type when retyping box temp\" (#20285) at dotnet/coreclr","RelatedBody":"Take advantage of the fact that `lvaSetStruct` figures out the right\r\ntype to use in the IR.\r\n\r\nFixes first part of #20260."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8378562172","Type":"IssuesEvent","CreatedAt":"2018-10-06T15:34:22","Actor":"bergmeister","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10117","RelatedDescription":"Opened issue \"dotnet-install.ps1 cannot install 2.2.100-preview2\" (#10117) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nUsing [dotnet-install.ps1](https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.ps1) on Windows PowerShell 5.1:\r\n```\r\n.\\dotnet-install.ps1 -Channel preview -Version 2.2.100-preview2\r\n```\r\n\r\n## Expected  behavior\r\n\r\nIt works\r\n\r\n\r\n## Actual behavior\r\n\r\nIt does not\r\n```\r\ndotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.100-preview2/dotnet-sdk-2.2.100-preview2-win-x64.zip\r\ndotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.100-preview2/dotnet-sdk-2.2.100-preview2-win-x64.zip\r\nVERBOSE: dotnet-install: Legacy zip path: C:\\Users\\cberg\\AppData\\Local\\Temp\\ufohhok2.ysw\r\ndotnet-install: Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.100-preview2/dotnet-dev-win-x64.2.2.100-preview2.zip\r\ndotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.100-preview2/dotnet-dev-win-x64.2.2.100-preview2.zip\r\nCould not find/download: \".NET Core SDK\" with version = 2.2.100-preview2\r\nRefer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support\r\nAt C:\\Users\\cberg\\git\\PowerShell\\tools\\dotnet-install.ps1:584 char:5\r\n+     throw \"Could not find/download: `\"$assetName`\" with version = $Sp ...\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (Could not find/...ET Core support:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : Could not find/download: \".NET Core SDK\" with version = 2.2.100-preview2\r\nRefer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support\r\n```\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\nA compatible SDK version for global.json version: [2.2.100-preview2] from [C:\\Users\\cberg\\git\\PowerShell\\global.json] was not found\r\n\r\nHost (useful for support):\r\n  Version: 2.1.4\r\n  Commit:  85255dde3e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-rc1-008673 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8377785929","Type":"PullRequestEvent","CreatedAt":"2018-10-06T05:56:09","Actor":"github-john-doe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10116","RelatedDescription":"Opened pull request \"Typos\" (#10116) at dotnet/cli","RelatedBody":""},{"Id":"8377411760","Type":"IssuesEvent","CreatedAt":"2018-10-06T00:53:47","Actor":"danielbarrios76","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10103","RelatedDescription":"Closed issue \"dotnet-sdk-2.1 fails to install Debian 9\" (#10103) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n$ sudo apt-get install dotnet-sdk-2.1\r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\nSome packages could not be installed. This may mean that you have\r\nrequested an impossible situation or if you are using the unstable\r\ndistribution that some required packages have not yet been created\r\nor been moved out of Incoming.\r\nThe following information may help to resolve the situation:\r\n\r\nThe following packages have unmet dependencies:\r\n dotnet-sdk-2.1 : Depends: dotnet-runtime-2.1 (>= 2.1.5) but it is not going to be installed\r\n                  Depends: aspnetcore-runtime-2.1 (>= 2.1.5) but it is not going to be installed\r\nE: Unable to correct problems, you have held broken packages.\r\n\r\nHow do I correct this problem?\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8378261915","Type":"PullRequestEvent","CreatedAt":"2018-10-06T12:20:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/892","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181005.7 of https://github.com/dotnet/arcade\" (#892) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18505.7.symbols.nupkg - 2.2.0-beta.18505.7\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18505.7.symbols.nupkg - 2.4.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18505.7\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18505.7\n- Microsoft.DotNet.Darc - 1.0.0-beta.18505.7\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18505.7\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18505.7"},{"Id":"8378234298","Type":"PullRequestEvent","CreatedAt":"2018-10-06T12:00:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/892","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181005.7 of https://github.com/dotnet/arcade\" (#892) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18505.7.symbols.nupkg - 2.2.0-beta.18505.7\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18505.7.symbols.nupkg - 2.4.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18505.7\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18505.7\n- Microsoft.DotNet.Darc - 1.0.0-beta.18505.7\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18505.7\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18505.7"},{"Id":"8374954993","Type":"IssuesEvent","CreatedAt":"2018-10-05T15:03:18","Actor":"GSPP","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/891","RelatedDescription":"Opened issue \"\"Could not load System.Net.Http, Version=4.2.0.0\" on .NET 4.7.1 together with \"System.Collections.Immutable\"\" (#891) at dotnet/standard","RelatedBody":"I will attach a repro solution that I have created as follows:\r\n\r\n1. New web application targeting 4.7.1 on WIndows 7 with .NET 4.7.1\r\n2. Add a class library\r\n3. Reference the library from the web app and call code in it\r\n4. Add a few packages to both projects\r\n5. Add the System.Net.Http package to both projects and use it (see Class1)\r\n\r\nWhen this application is started it immediately crashes:\r\n\r\n```\r\nCould not load file or assembly 'System.Net.Http, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n```\r\n\r\nFindings/bugs:\r\n1. System.Net.Http was not copied to the bin folder of the web app which is wrong.\r\n2. All projects are configured to reference version 4.1.1.2 from /packages. Yet the compiled class library DLL references 4.2.0.0. This appears wrong to me.\r\n\r\nIf you now uninstall the seemingly unrelated (and unused) package System.Collections.Immutable the project starts working!\r\n\r\nCurrently, on the latest Visual Studio and on .NET 4.7.1 it seems very easy to run into almost unfixable tooling bugs. It really is not very hard to trigger the conditions for these issues. I suspect many people are running into this and indeed, when you search the web or this issue tracker there are many reports of very strange issues around .NET 4.7.1 and System.Net.Http, System.Runtime and a few others.\r\n\r\nThese bugs are extremely hard to track down with no clear workaround. It took me two days now to investigate multiple such issues. Someone new to .NET couldn't fix these in 10 years.\r\n"},{"Id":"8373965824","Type":"PullRequestEvent","CreatedAt":"2018-10-05T12:15:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/890","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181004.6 of https://github.com/dotnet/arcade\" (#890) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18504.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18504.6.symbols.nupkg - 2.2.0-beta.18504.6\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18504.6.symbols.nupkg - 2.4.0-beta.18504.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18504.6\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18504.6\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18504.6\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18504.6\n- Microsoft.DotNet.Darc - 1.0.0-beta.18504.6\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18504.6\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18504.6\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18504.6\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18504.6"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8379629893","Type":"PullRequestEvent","CreatedAt":"2018-10-07T04:49:44","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32667","RelatedDescription":"Opened pull request \"Revert \"Update breaking change guidance re: adding interface to existing type (#31616)\"\" (#32667) at dotnet/corefx","RelatedBody":"This reverts commit 2340b22bacd991c9b5ff585bb6257229ec65b098."},{"Id":"8379498180","Type":"PullRequestEvent","CreatedAt":"2018-10-07T02:45:03","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32654","RelatedDescription":"Merged pull request \"Clean up dead code in System.IO*\" (#32654) at dotnet/corefx","RelatedBody":"Removed dead code in S.IO.C.Brotli, S.IO.FS.DriveInfo and S.IO.Pipes for issue #17905 to clean up the source."},{"Id":"8379489037","Type":"PullRequestEvent","CreatedAt":"2018-10-07T02:36:32","Actor":"vcsjones","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32666","RelatedDescription":"Opened pull request \"Added additional OIDs for CMS signatures.\" (#32666) at dotnet/corefx","RelatedBody":"This adds additional OIDs for RSA CMS validation when the OID is specific about which hash algorithm should be used.\r\n\r\nThis is a slightly different approach from the DSA / ECDsa approach. This allows for a null `HashAlgorithmName` and does not enforce the hash algorithm if one is not specified when using the \"1.2.840.113549.1.1.1\" OID. \r\n\r\nFixes 32639"},{"Id":"8379485276","Type":"IssuesEvent","CreatedAt":"2018-10-07T02:32:43","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32665","RelatedDescription":"Opened issue \"Proposal: Implement IAsyncDisposable on various BCL types\" (#32665) at dotnet/corefx","RelatedBody":"Related to #32640.\r\n\r\nNow that we’re adding `System.IAsyncDisposable` to the core libraries, we also want to implement the interface on a variety of types that currently do or have the potential to do asynchronous work as part of their disposal.  This is primarily focused on `System.IO` types that might flush or otherwise perform I/O as part of their clean up (e.g. flushing a buffer), though it is not limited to such types.\r\n\r\nThe following types would all implement IAsyncDisposable, and all gain a public member:\r\n```C#\r\npublic ValueTask DisposeAsync();\r\n```\r\nwith it being virtual on all of the non-sealed classes:\r\n```C#\r\npublic virtual ValueTask DisposeAsync();\r\n```\r\n\r\n- **System.IO.Stream**.  Its `DisposeAsync` will do the equivalent of Task.Run(Dispose).  Then, our various `Stream`-derived types will provide a more specialized implementation where appropriate.  For example, `MemoryStream`’s `Dispose` is a nop, so we’ll make its `DisposeAsync` a nop as well (unless the instance is actually of a type derived from `MemoryStream`, in which case we’ll delegate to the base implementation).  Conversely, `FileStream`’s `Dispose` does a flush, so its `DisposeAsync` will do an asynchronous flush.\r\n- **System.IO.BinaryWriter**.  Its implementation will check to see whether the instance is a concrete `BinaryWriter` or something derived from it.  If concrete, the `DisposeAsync` will effectively be a copy of the synchronous `Dispose`, except using async equivalents on the underlying `Stream`, e.g. where the synchronous implementation calls `Flush` or `Dispose`/`Close`, the asynchronous implementation would use `FlushAsync`/`DisposeAsync`.  If instead the type is derived from `BinaryWriter`, the implementation will simply do the equivalent of `Task.Run(Dispose)`, so as to pick up whatever `Dispose` implementation the derived class is providing, and the derived class may then choose to override `DisposeAsync` to provide a better implementation if applicable (the core libraries don’t provide any derived types).\r\n- **System.IO.TextWriter**.  Its implementations will do the equivalent of `Task.Run(Dispose)`.  Derived implementations can then do something better if appropriate.  For example, we’ll override on `StreamWriter` to asynchronously flush.\r\n- **System.Threading.Timer**.  `Timer` currently provides two `Dispose` methods, `Dispose()` and `Dispose(WaitHandle)`, the latter of which not only stops the timer, but also signals the provided `WaitHandle` when the timer guarantees that no more callbacks associated with that timer will be invoked.  A caller can then block on this `WaitHandle` to know when it’s safe to progress with any state that `Timer` may have interacted with.  As such, we’ll provide an equivalent `DisposeAsync`, where the returned `ValueTask` will complete when the timer appropriately guarantees the same thing, allowing a caller to wait asynchronously instead of synchronously.\r\n- **System.Threading.CancellationTokenRegistration**.  `CancellationTokenRegistration.Dispose` does two things: it unregisters the callback, and then it blocks until the callback has completed if the callback is currently running.  `DisposeAsync` will do the same thing, but allow for that waiting to be done asynchronously rather than synchronously.\r\n\r\n**Open issues:**\r\n-\tI listed `BinaryWriter` and `TextWriter`, but not `BinaryReader` and `TextReader`.  Do we want to implement `IAsyncDisposable` on those as well, as with their writing counterparts?  It’s rare for an implementation to actually need to do asynchronous work as part of closing a reader, as they generally don't need to flush.  We could add them now for completeness, or we could wait until there's a demonstrated need.\r\n\r\n**A few notes:**\r\n- **Shouldn’t every type that implements `IDisposable` also implement `IAsyncDisposable`?**  No.  The vast majority of IDisposable types do not perform asynchronous work as part of their disposal, with most dispose routines primarily focused on releasing native resources (often via calling Dispose on SafeHandles) and other such synchronous operations.  We only want to implement IAsyncDisposable when we know that the type has the strong potential to do asynchronous I/O that would otherwise force its synchronous Dispose to block or spin waiting for those operations to complete.\r\n- **Don’t we need a DisposeAsync(bool disposing)?**  No.  The synchronous pattern has this so that both Dispose and a finalizer can share a dispose implementation, with the former passing true and the latter passing false, and then the implementation generally not disposing other managed state in the case of it being a finalizer.  With DisposeAsync, the benefit of the method is to the caller being able to await for the disposal to complete rather than being blocked implicitly; this is not relevant to a finalizer, which will not wait for any such work, synchronously or asynchronously.\r\n"},{"Id":"8379476541","Type":"IssuesEvent","CreatedAt":"2018-10-07T02:24:54","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32664","RelatedDescription":"Opened issue \"Proposal: ManualResetValueTaskSource{Logic} types\" (#32664) at dotnet/corefx","RelatedBody":"**Background**\r\n\r\nIn .NET Core 2.1, we added the ability for a `ValueTask<T>` (and the non-generic `ValueTask`, which we also added) to be constructed not only from a `T` and `Task<T>`, but also from an `IValueTaskSource<T>`.  The primary benefit of this is that it allows the `ValueTask<T>` to be backed by an object that can be reused in order to amortize the cost of the allocation.  For example, also in .NET Core 2.1 we optimized the new `ValueTask<int>`-returning `Socket.ReceiveAsync` method, so that as long as it’s not used concurrently with itself on the same `Socket` instance, it won’t need to allocate a new promise instance to hand back, whether the operation completes synchronously (in which case it can just hand back a `ValueTask<T>` constructed from a `T`) or asynchronously (in which case it can hand back a `ValueTask<T>` constructed from a reusable object that implements `IValueTaskSource<T>`). However, `IValueTaskSource<T>` is an advanced interface that is not easy to implement, and the implementations we provided in .NET Core 2.1 were all internal as internal implementation details, e.g. in `Socket`, in `System.Threading.Channels`, and in `System.IO.Pipelines`.\r\n\r\nIn .NET Core 3.0, we’re adding support for `IAsyncEnumerable<T>`, and the C# compiler will be able to generate implementations for async iterators, just as it can for synchronous iterators today.  We’ve crafted the async enumerator interface such that the various asynchronous methods return `ValueTask`s, which allows the compiler to allocate a single object that can then be reused for all asynchronous operations on that enumerable.  In fact, that object can be the enumerable itself, which is also reused for the enumerator.  In other words, by providing an object that appropriately implements `IAsyncEnumerable<T>`, `IAsyncEnumerator<T>`, and `IValueTaskSource<bool>`, the compiler can generate an async iterator with only a very minimal allocation overhead.\r\n\r\nTo do that, though, the compiler needs to implement `IValueTaskSource<bool>`, and as noted earlier, doing so is challenging, requiring a non-trivial amount of code.  To make it easier on the compiler and on anyone else that wants to do similar things, we should provide an implementation of the core logic needed for this interface, such that implementing the interface is then as simple as delegating to the helpers provided.\r\n\r\n**Proposal**\r\n\r\nTo make this work, we first need to add an overload of `ExecutionContext.Run`.  The type already provides:\r\n```C#\r\npublic delegate void ContextCallback(object state);\r\n…\r\npublic static void Run(ExecutionContext executionContext, ContextCallback callback, object state);\r\n```\r\nand we now also need:\r\n```C#\r\npublic delegate void ActionRef<T>(ref T arg);\r\n...\r\npublic static void Run<TState>(ExecutionContext executionContext, ActionRef<ref T> callback, ref TState state);\r\n```\r\nThis is needed so that a mutable struct (like that about to be defined) can have a method invoked under an execution context and have any changes made in Run affect the original mutable struct.\r\n\r\nOpen questions:\r\n- Should we define such a `System.ActionRef` (with a better name?) or should we make another delegate like ContextCallbackRef that's specific to `ExecutionContext`?\r\n\r\nThen, we have the main type being proposed:\r\n```C#\r\nnamespace System.Threading.Tasks.Sources // same namespace as IValueTaskSource\r\n{\r\n    public struct ManualResetValueTaskSourceLogic<TResult>\r\n    {\r\n        // Named the same as TaskCreationOptions.RunContinuationsAsynchronously.  Controls whether calls to Set* will invoke\r\n        // continuations synchronously if possible, or whether continuations will always be forced to be queued to the thread pool.\r\n        public bool RunContinuationsAsynchronously { get; set; }\r\n\r\n        // Completes the instance.\r\n        public void SetResult(TResult result);\r\n        public void SetException(Exception error);\r\n        public void SetCanceled(CancellationToken cancellationToken);\r\n\r\n        // Resets the instance so that it can be used again.\r\n        public void Reset();\r\n\r\n        // Directly correspond to the IValueTaskSource interface, and as such an implementation of that interface can just delegate to these members.\r\n        public short Version { get; }\r\n        public ValueTaskSourceStatus GetStatus(short token);\r\n        public TResult GetResult(short token);\r\n        public void OnCompleted(Action<object> continuation, object state, short token, ValueTaskSourceOnCompletedFlags flags);\r\n    }\r\n}\r\n```\r\n\r\nThis mutable struct can then be used as a field on another object to help that object implement the `IValueTaskSource` interface.  The C# compiler, for example, will implement the interface on its single enumerable/enumerator object, and that implementation will just delegate to the corresponding members of this type on a field on the object.\r\n\r\nFor example, here’s the full implementation of what a class-based `ManualResetValueTaskSource<TResult>` would look like when using this `Logic` type to implement it.  I propose we also add this class-based type.  Developers that just want to be able to reuse an instance can use the friendly class-based version, and developers that want to take it a step further and reuse an existing object can use the mutable struct-based version.\r\n```C#\r\nnamespace System.Threading.Tasks.Sources\r\n{\r\n    public sealed class ManualResetValueTaskSource<T> : IValueTaskSource<T>, IValueTaskSource\r\n    {\r\n        private ManualResetValueTaskSourceLogic<T> _logic; // mutable struct; do not make this readonly\r\n\r\n        public bool RunContinuationsAsynchronously { get => _logic.RunContinuationsAsynchronously; set => _logic.RunContinuationsAsynchronously = value; }\r\n        public void Reset() => _logic.Reset();\r\n        public void SetResult(T result) => _logic.SetResult(result);\r\n        public void SetException(Exception error) => _logic.SetException(error);\r\n        public void SetCanceled(CancellationToken cancellationToken) => _logic.SetException(cancellationToken);\r\n\r\n        short IValueTaskSource.Version => _logic.Version;\r\n        short IValueTaskSource<T>.Version => _logic.Version;\r\n\r\n        void IValueTaskSource.GetResult(short token) => _logic.GetResult(token);\r\n        T IValueTaskSource<T>.GetResult(short token) => _logic.GetResult(token);\r\n\r\n        ValueTaskSourceStatus IValueTaskSource.GetStatus(short token) => _logic.GetStatus(token);\r\n        ValueTaskSourceStatus IValueTaskSource<T>.GetStatus(short token) => _logic.GetStatus(token);\r\n\r\n        void IValueTaskSource.OnCompleted(Action<object> continuation, object state, short token, ValueTaskSourceOnCompletedFlags flags) => _logic.OnCompleted(continuation, state, token, flags);\r\n        void IValueTaskSource<T>.OnCompleted(Action<object> continuation, object state, short token, ValueTaskSourceOnCompletedFlags flags) => _logic.OnCompleted(continuation, state, token, flags);\r\n    }\r\n}\r\n```\r\n\r\n**Variation**\r\n\r\nThe above proposal depends on adding an ExecutionContext.Run overload.  There’s another alternative that doesn’t require this, but that instead introduces a new interface and requires the type wrapping the struct to implement it.\r\n\r\n.NET already provides an System.Runtime.CompilerServices.IStrongBox interface, but it’s non-generic, with an `object Value { get; set; }` property.  To properly support this alternative, we first need a new generic variation of this interface, that’s not only generic but that has a `ref` getter:\r\n```C#\r\nnamespace System.Runtime.CompilerServices\r\n{\r\n    public interface IStrongBox<T>\r\n    {\r\n        ref T Value { get; }\r\n    }\r\n}\r\n```\r\nThis interface makes it possible for any object to have a field of type T, and via the interface, hand back a reference to that field.\r\n\r\nThen, we’d add this constructor to the struct:\r\n```C#\r\npublic ManualResetValueTaskSourceLogic(IStrongBox<ManualResetValueTaskSourceLogic<TResult>> parent);\r\n```\r\nand when the class with the ManualResetValueTaskSourceLogic as a field constructs the struct, it passes itself in.  That way, the MRVTSL can pass that parent object around, such as to the existing overload of ExecutionContext.Run, and then access itself by ref via the strong box, e.g.\r\n```C#\r\nExecutionContext.Run(\r\n    _executionContext,\r\n    s => ((IStrongBox<ManualResetValueTaskSourceLogic<TResult>>)s).Value.InvokeContinuation(),\r\n    _parent);\r\n```\r\n\r\nI prefer the proposed approach involving the `ExecutionContext.Run` method, in part because it’s simpler, and in part because it doesn’t involve the implementing object to expose part of its implementation via its interfaces.  For example, if the C# compiler just implements its enumerables to implement `IStrongBox<ManualResetValueTaskSourceLogic<bool>>`, then it’s effectively exposing part of its implementation details out, such that code could cast to that interface, call get_Value, and now have direct ref access to the enumerable’s underlying MRVTSL.  Code could defend against this by wrapping the MRVTSL in an externally unpronounceable type (e.g. a little wrapper struct internal to the assembly), but that’s yet another workaround and complication.\r\n\r\nThis approach has one main benefit, which is that the implementation can pass this object to other things that we can’t as easily control.  In particular, there are two places where the prototype at https://github.com/dotnet/corefx/blob/master/src/Common/tests/System/Threading/Tasks/Sources/ManualResetValueTaskSource.cs passes the parent: to the ExecutionContext, and to a SynchronizationContext if one was captured by an awaiter and used to invoke the continuation.  With the IStrongBox approach, that doesn’t involve additional allocations.  With the proposed approach, we’ll need to incur an additional allocation to pass the continuation delegate and state objects in the single state object parameter, though at the expense of an additional field on the MRVTSL, we could likely cache and reuse that object across all subsequent Posts.\r\n\r\n**Manual vs Auto**\r\n\r\nThis type is named `ManualReset` because it requires an explicit call to `Reset` to reset itself for additional use.  An alternative we might want to look to provide in the future is `AutoReset`.  That version would automatically reset itself when GetResult was called to retrieve the result.\r\n\r\nThe difficulty with this is that such an `AutoResetValueTaskSourceLogic` would often be used in situations where it’s possible for multiple concurrent operations to be happening.  For example, Socket supports ReceiveAsync being used concurrently by any number of callers, but that’s rare, with the vast majority case being there only being a single ReceiveAsync at a time. Thus, Socket.ReceiveAsync maintains a single reusable IValueTaskSource implementation, which it hands out to that single consumer; if other calls end up occurring while that one is being used, the more expensive path is taken of handing out a new object.  This means that ReceiveAsync needs to know whether the object is in use or not, and it’s not enough to just track whether the consumer of the object is done using it due to having called GetResult.  The same issue applies to System.Threading.Channel’s use of IValueTaskSource implementations.\r\n\r\nThus, for an `AutoResetValueTaskSourceLogic` to be really useful, it has to interact as well with some kind of ticketing system, whereby the instance can be checked out for exclusive use and then put back for someone else to consume when GetResult is called.  Getting that right requires additional design that we’ve not yet done."},{"Id":"8379311638","Type":"PullRequestEvent","CreatedAt":"2018-10-06T23:56:39","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32652","RelatedDescription":"Merged pull request \"Update BuildTools, CoreSetup to preview1-03305-01, preview1-27005-04, respectively (master)\" (#32652) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8379546624","Type":"PullRequestEvent","CreatedAt":"2018-10-07T03:29:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6389","RelatedDescription":"Merged pull request \"Add ILC architecture document\" (#6389) at dotnet/corert","RelatedBody":"I've been working on this on and off for a while - I think I have something ready for review.\r\n\r\nThis is a high level architectural overview of CoreRT's native compiler.\r\n\r\n@dotnet-bot skip ci please\r\n\r\nCc @nattress @trylek @zamont @mattwarren "},{"Id":"8379221832","Type":"PullRequestEvent","CreatedAt":"2018-10-06T22:38:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6431","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6431) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @github-john-doe @GrabYourPitchforks @GrabYourPitchforks"},{"Id":"8378782660","Type":"PullRequestEvent","CreatedAt":"2018-10-06T17:45:32","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6431","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6431) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8377427075","Type":"IssuesEvent","CreatedAt":"2018-10-06T01:03:43","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6412","RelatedDescription":"Closed issue \"wasm: indexing into arrays with value type elements of width 2 bytes, e.g. char is incorrect\" (#6412) at dotnet/corert","RelatedBody":"In the WASM Program.cs add\r\n```\r\n        var str = \"123456\";\r\n        char[] chars = str.ToCharArray();\r\n        for (var i = 0; i < chars.Length; i++)\r\n        {\r\n            PrintLine(chars[i].ToString());\r\n        }\r\n```\r\nand it outputs:\r\n```\r\n1\r\n3\r\n5\r\n\r\n\r\n\r\n```\r\nIt appears to be losing every other character.  WASM=0 produces the same output as WASM=1."},{"Id":"8377427037","Type":"PullRequestEvent","CreatedAt":"2018-10-06T01:03:29","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6430","RelatedDescription":"Merged pull request \"wasm: fix element addressing for value type array indexing.  Fixes #6412\" (#6430) at dotnet/corert","RelatedBody":"Use GetElementSize for value and non value types when creating element adressess\r\n\r\nCreate test for char[] indexing."},{"Id":"8375538674","Type":"PullRequestEvent","CreatedAt":"2018-10-05T16:44:01","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6430","RelatedDescription":"Opened pull request \"wasm: fix element addressing for value type array indexing.  Fixes #6412\" (#6430) at dotnet/corert","RelatedBody":"Use GetElementSize for value and non value types when creating element adressess\r\n\r\nCreate test for char[] indexing."},{"Id":"8374402947","Type":"IssuesEvent","CreatedAt":"2018-10-05T13:35:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4558","RelatedDescription":"Closed issue \"CppCodeGen: AV in Enum.ToString()\" (#4558) at dotnet/corert","RelatedBody":"The runtime transpiled code in C++ for ToString looks like this:\r\n\r\n```c++\r\nnamespace System_Private_CoreLib { namespace System { class Object {\r\n    public:\r\n        static MethodTable * __getMethodTable();\r\n        intptr_t m_pEEType;\r\n\t\t\t\r\n    typedef ::System_Private_CoreLib::System::String*(*__slot__ToString)(::System_Private_CoreLib::System::Object*);\r\n\r\n    static __slot__ToString __getslot__ToString(void * pThis)\r\n    {\r\n        return (__slot__ToString)*((void **)(*((RawEEType **)pThis) + 1) + 0);\r\n    };\r\n...\r\n...\r\n}\r\n```\r\n\r\nGiven the following code:\r\n\r\n```c#\r\nusing System;\r\ninternal class Program\r\n{\r\n    enum State { On, Off }\r\n    private static void Main(string[] args)\r\n        => Console.WriteLine(State.On.ToString());\r\n}\r\n```\r\n\r\nwe get access violation when the getslot function tries to dereference `((RawEEType **)pThis)`, this part: `(*((RawEEType **)pThis) + 1)`.\r\n\r\nStacktrace:\r\n\r\n```powershell\r\nreproNativeCpp.exe!System_Private_CoreLib::System::Object::__getslot__ToString(void * pThis=0xcccccccc00000000) Line 7776\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!repro::Program::Main(__Array_A_::System_Private_CoreLib::System::String_V_ * args=0x0000029ce23128c0) Line 11\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!repro::_Module_::MainMethodWrapper(__Array_A_::System_Private_CoreLib::System::String_V_ * _a0=0x0000029ce23128c0)\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!repro::_Module_::StartupCodeMain(int _a0=1, __int64 _a1=2872806503888)\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!__managed__Main(int _a0=1, __int64 _a1=2872806503888) Line 16707570\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!wmain(int argc=1, wchar_t * * argv=0x0000029ce09c75d0) Line 332\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!invoke_main() Line 91\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!__scrt_common_main_seh() Line 283\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!__scrt_common_main() Line 326\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!wmainCRTStartup() Line 17\tC++\tNon-user code. Symbols loaded.\r\nkernel32.dll!BaseThreadInitThunk()\tUnknown\tNon-user code. Symbols loaded.\r\nntdll.dll!RtlUserThreadStart()\tUnknown\tNon-user code. Symbols loaded.\r\n```"},{"Id":"8374376034","Type":"PullRequestEvent","CreatedAt":"2018-10-05T13:31:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6429","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#6429) at dotnet/corert","RelatedBody":"Picks up the new tiering-related `MethodImpl` option added in dotnet/coreclr#20009.\r\n\r\nI went ahead and also implemented the `NoOptimization` `MethodImpl` option because it's related and we need to have it to ship anyway."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1047894749867270145","CreatedAt":"2018-10-04T17:02:31+00:00","UserScreenname":"dotnet","Text":"Blogged -- Update on .NET Core 3.0 and .NET Framework 4.8 https://t.co/tBpJg3Eoc8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":317,"FavoriteCount":230,"RawContent":null},{"Id":"1047645317401735168","CreatedAt":"2018-10-04T00:31:22+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 has reached end of life https://t.co/FZTYietdMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":146,"FavoriteCount":173,"RawContent":null},{"Id":"1047579283579756544","CreatedAt":"2018-10-03T20:08:58+00:00","UserScreenname":"dotnet","Text":"https://t.co/Pt9ZGHYH8C","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":39,"FavoriteCount":26,"RawContent":null},{"Id":"1047257170482536454","CreatedAt":"2018-10-02T22:49:01+00:00","UserScreenname":"dotnet","Text":"Hey developers! Let us help you on your journey to Azure. Check out these resources, e-books, and apply for assista… https://t.co/1QzIe9tWvn","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":72,"FavoriteCount":41,"RawContent":null},{"Id":"1045845137627086848","CreatedAt":"2018-09-29T01:18:06+00:00","UserScreenname":"dotnet","Text":"POSTED: .NET Foundation September Update\nhttps://t.co/oflTRykrTK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2018-10-07T05:30:31.6693916Z","RunDurationInMilliseconds":7562}