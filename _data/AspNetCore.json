{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":105,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6671385730","Type":"IssuesEvent","CreatedAt":"2017-10-04T07:00:05","Actor":"VSDekar","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2223","RelatedDescription":"Opened issue \"ASP.NET Core 2 Jwt Auth with Azure B2C // IDX10500: Signature validation failed. No security keys were provided to validate the signature.\" (#2223) at aspnet/Home","RelatedBody":"\r\nI am facing an issue with Jwt Authentication.\r\n\r\nI have an ASP.NET Core 2 WepApi which also serves my SPA App (Its a Vue-App) The SPA App gets the Token from Azure B2C via the MSAL.js library from Microsoft.\r\n\r\nWhen i hit the WebApi where i need to Authorize i get the following error:\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[1]\r\n      Failed to validate the token [MyTokenHere]\r\nMicrosoft.IdentityModel.Tokens.SecurityTokenInvalidSignatureException: IDX10500: Signature validation failed. No security keys were provided to validate the signature.\r\n   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)\r\n   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.<HandleAuthenticateAsync>d__6.MoveNext()\r\ninfo: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[7]\r\n      Bearer was not authenticated. Failure message: IDX10500: Signature validation failed. No security keys were provided to validate the signature.\r\n```\r\n\r\nI face the very same issue with the sample Application provided here [An ASP.NET Core web API with Azure AD B2C](https://github.com/Azure-Samples/active-directory-b2c-dotnetcore-webapi) (with their tanant)\r\nMaybe its a general issue with the validation of Azure B2C Tokens.\r\n\r\nHere is my Startup.cs\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Authentication.JwtBearer;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.SpaServices.Webpack;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing VueTemplate.SignalR;\r\n\r\nnamespace VueTemplate\r\n{\r\n    public class Startup\r\n    {\r\n        public string Authority { get; set; } = \"https://login.microsoftonline.com/tfp/[MyB2CTenant]/[MyPolicy]/v2.0/\";\r\n        \r\n        public string ClientId { get; set; } = [MyApplicationId];\r\n\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc();\r\n            services.AddSignalR();\r\n            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\r\n            .AddJwtBearer(options => new JwtBearerOptions() {\r\n                Authority = Authority,\r\n                Audience = ClientId,\r\n                Events = new JwtBearerEvents() { OnAuthenticationFailed = AuthenticationFailed  }\r\n            });\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions() {\r\n                    HotModuleReplacement = true\r\n                });\r\n            }\r\n            else {\r\n                app.UseExceptionHandler(\"/Home/Error\");\r\n            }\r\n\r\n            app.UseAuthentication();\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseSignalR(routes => {\r\n                routes.MapHub<ChatHub>(\"Hub/Chat\");\r\n            });\r\n\r\n            app.UseMvc(routes => {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}\"\r\n                );\r\n\r\n                routes.MapSpaFallbackRoute(\r\n                    name: \"spa-fallback\",\r\n                    defaults: new { controller = \"Home\", action = \"Index\" }\r\n                );\r\n            });\r\n        }\r\n\r\n        private Task AuthenticationFailed(AuthenticationFailedContext arg)\r\n        {\r\n            // For debugging purposes only!\r\n            var s = $\"AuthenticationFailed: {arg.Exception.Message}\";\r\n            arg.Response.ContentLength = s.Length;\r\n            arg.Response.Body.Write(Encoding.UTF8.GetBytes(s), 0, s.Length);\r\n            return Task.FromResult(0);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nValuesController.cs\r\n```csharp\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace VueTemplate.Controllers\r\n{\r\n    [Authorize]\r\n    [Route(\"api/[controller]/\")]\r\n    public class ValuesController : Controller\r\n    {\r\n        [HttpGet]\r\n        public IActionResult Get() {\r\n            return Ok(new int[] { 1, 2, 3, 4 });\r\n        }\r\n    }\r\n}\r\n```\r\n"},{"Id":"6666161153","Type":"IssuesEvent","CreatedAt":"2017-10-03T06:52:19","Actor":"shahidwani","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2222","RelatedDescription":"Opened issue \"Separate bundleconfig.json for CSS and JS\" (#2222) at aspnet/Home","RelatedBody":"It would be nice to have separate bundleconfig json files for CSS and JS, maybe  something like bundleconfig.styles.json and bundleconfig.scripts.json."},{"Id":"6663821288","Type":"IssuesEvent","CreatedAt":"2017-10-02T17:49:59","Actor":"evil-shrike","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2221","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.Http.PathString.StartsWithSegments returns false unexpectedly\" (#2221) at aspnet/Home","RelatedBody":"I encountered a strange behavior of `PathString.StartsWithSegments` method.\r\nFor the url \"/api/_security/login_forms\" `Path.StartsWithSegments(\"/api/\")` return `false`.\r\nI believe it's bug, please confirm. \r\n\r\nfrom Immediate Window (request is `HttpRequest`):\r\n```\r\nrequest.Path.Value\r\n\"/api/_security/login_forms\"\r\n\r\nrequest.Path.StartsWithSegments(\"/api/\")\r\nfalse\r\n\r\nrequest.Path.Value.StartsWith(\"/api/\")\r\ntrue\r\n\r\nrequest.Path.Value[\"/api/\".Length]\r\n95 '_'\r\n```\r\n"},{"Id":"6662399652","Type":"IssuesEvent","CreatedAt":"2017-10-02T13:01:15","Actor":"amitsaini12345","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2220","RelatedDescription":"Opened issue \"Some Features are Disabled in online Demo Which i have seen earlier\" (#2220) at aspnet/Home","RelatedBody":"Hello everyOne,\r\n                                  I have seenn today so many features in online demo Like customizing the website like menus,like english titles, name titles, many more, like manage categories  etc.\r\n\r\nBut now these are disabled. anyone please help me. please restore the previous build"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6675665743","Type":"PullRequestEvent","CreatedAt":"2017-10-04T23:43:28","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/989","RelatedDescription":"Opened pull request \"Removing Connected event\" (#989) at aspnet/SignalR","RelatedBody":"Small PRs FTW\r\nHere's part 1 of https://github.com/aspnet/SignalR/issues/900"},{"Id":"6675512811","Type":"IssuesEvent","CreatedAt":"2017-10-04T22:49:51","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/988","RelatedDescription":"Opened issue \"Transport selection may not work correctly in TS client when the user is requesting WebSockets\" (#988) at aspnet/SignalR","RelatedBody":"The reason is that we [check](https://github.com/aspnet/SignalR/blob/ba1c210f036cdd29befb9a80b40e66ca257d17d1/client-ts/Microsoft.AspNetCore.SignalR.Client.TS/HttpConnection.ts#L93) if the transport was passed to the function incorrectly. The value of `TransportType.WebSocket` is 0 so the condition evaluates to be `falsy` and as a result we use the first transport returned by the server (even if it's not websockets)) instead of returning an error."},{"Id":"6674591963","Type":"PullRequestEvent","CreatedAt":"2017-10-04T19:04:10","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/980","RelatedDescription":"Merged pull request \"Fixing JS end-to-end tests\" (#980) at aspnet/SignalR","RelatedBody":"In one of the [previous commits](https://github.com/aspnet/SignalR/commit/70df19c8a27f88d1d68ef13a293e1b06abb25a9e#diff-fafe51a9878a334f3cd66cd770c3f9e7R19) I changed the contract resolver for JSON protocol to be the DefaultContractResolver (as opposed to the default CamelCasePropertyNamesContractResolver). This was done in the rel branch and broke some new tests in the dev branch after merging rel."},{"Id":"6674587047","Type":"IssuesEvent","CreatedAt":"2017-10-04T19:03:06","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/987","RelatedDescription":"Closed issue \"npm package file naming\" (#987) at aspnet/SignalR","RelatedBody":"When switching from the dev-repository version '1.0.0-alpha1-26997' to the npm-version '1.0.0-alpha1-final' the javascript bundles changed name, thereby breaking any references to the files. And given the naming of the file(s):\r\n```\r\nsignalr-client-1.0.0-alpha1-final.js\r\nsignalr-clientES5-1.0.0-alpha1-final.js\r\nsignalr-msgpackprotocol-1.0.0-alpha1-final.js\r\n```\r\nIt looks like it will keep breaking every time there's a change of version.\r\n\r\nSo a simple fix would be to call them\r\n```\r\nsignalr-client.js\r\nsignalr-clientES5.js\r\nsignalr-msgpackprotocol.js\r\n```\r\n### Functional impact\r\nBreaks references each time there's an update.\r\n\r\n"},{"Id":"6674533468","Type":"IssuesEvent","CreatedAt":"2017-10-04T18:51:22","Actor":"JonasMH","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/987","RelatedDescription":"Opened issue \"npm package file naming\" (#987) at aspnet/SignalR","RelatedBody":"When switching from the dev-repository version '1.0.0-alpha1-26997' to the npm-version '1.0.0-alpha1-final' the javascript bundles changed name, thereby breaking any references to the files. And given the naming of the file(s):\r\n```\r\nsignalr-client-1.0.0-alpha1-final.js\r\nsignalr-clientES5-1.0.0-alpha1-final.js\r\nsignalr-msgpackprotocol-1.0.0-alpha1-final.js\r\n```\r\nIt looks like it will keep breaking every time there's a change of version.\r\n\r\nSo a simple fix would be to call them\r\n```\r\nsignalr-client.js\r\nsignalr-clientES5.js\r\nsignalr-msgpackprotocol.js\r\n```\r\n### Functional impact\r\nBreaks references each time there's an update.\r\n\r\n"},{"Id":"6674465993","Type":"IssuesEvent","CreatedAt":"2017-10-04T18:36:38","Actor":"douglaswaights","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/986","RelatedDescription":"Opened issue \"SignalR ws authentication failure on full framework with Windows Authentication for alpha \" (#986) at aspnet/SignalR","RelatedBody":"Hi,\r\n\r\nSignalR doesnt work with Windows authentication on top of the full framework 4.6.2. I'm running on Windows 10 anniversary edition.\r\n\r\nI have created a simple sample to reproduce this\r\nhttps://github.com/douglaswaights/AspNetCoreSignalrWinAuth\r\n\r\nThe sample is based on the angular spa template.\r\n\r\nWhen the hub tries to connect from the spa with typescript client you get\r\nTransports.js:28 WebSocket connection to 'ws://localhost:65394/MyHub?id=b78ec818-fabb-4b75-9c3b-4676bd4c0a8a' failed: HTTP Authentication failed; no valid credentials available\r\n\r\nChange the launch settings to disable windows auth and enable anonymous and the sample works again as expected.\r\n\r\nHow to make signalr work with Windows authentication? \r\n\r\nThanks\r\nDoug\r\n\r\n\r\n<img width=\"1219\" alt=\"signalr_hub_connection_error_windows_auth\" src=\"https://user-images.githubusercontent.com/5701083/31193099-6b0c2d26-a943-11e7-949a-eb8535898823.PNG\">\r\n\r\n"},{"Id":"6674129992","Type":"PullRequestEvent","CreatedAt":"2017-10-04T17:23:47","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/981","RelatedDescription":"Merged pull request \"Changing version to final\" (#981) at aspnet/SignalR","RelatedBody":""},{"Id":"6674116907","Type":"IssuesEvent","CreatedAt":"2017-10-04T17:20:56","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/985","RelatedDescription":"Closed issue \"Will a SignalR Core server connect OK with 'traditional' Signalr 2 clients?\" (#985) at aspnet/SignalR","RelatedBody":"We have a system currently on netfx 4.6 which uses the SignalR C# client to connect numerous geographically distributed machines to a central server.\r\n\r\nWe would like to consider moving the server to ASP.NET Core, a prerequisite of which is that we have SignalR available on ASP.NET Core, hence our interest in the project.\r\n\r\nAre our existing 'traditional SignalR' clients going to be able to connect to the ASP.Net Core/SignalR Core server when it's available?   We wouldn't want to have to update every client and the central system all in one enormous 'big bang', so we are looking for a transitional strategy which would allow one side to be updated before the other."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6675353930","Type":"IssuesEvent","CreatedAt":"2017-10-04T22:02:47","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6908","RelatedDescription":"Closed issue \"TestServer + MVC + Razor = The type or namespace could not be found.\" (#6908) at aspnet/Mvc","RelatedBody":"I am using VS 2017 15.3.5.  I have an MVC project that was created with the .NET Core 2.0 template and targets netcoreapp2.0.  I have a test project that was created with the xUnit Test Project (.NET Core) template and targets netcoreapp2.0.  I am running on Windows.  When I hit the AccountController.Login() GET method and return the Login.cshtml view, I get the same error as described in #1731.\r\n\r\nThe type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\r\nPredefined type 'System.Object' is not defined or imported\r\nThe type or namespace name 'ViewFeatures' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\r\n\r\nThe work around described in #4818 resolves the issue, but is impractical for running on other machines or deploying to a server.\r\n\r\nAdditionally, I have a wrapper class, for an HttpClient.  It works supports Identity, IdentityServer, and Antiforgery.  If I run the MVC app in a separate instance of VS, without using TestServer, the test run, and succeed.  If I set my wrappers HttpClient, with TestServer.CreateClient(), the AccountControler.Login() POST method does not execute because of the Antiforgery token.  Does HttpServer not support Antiforgery?"},{"Id":"6675349331","Type":"PullRequestEvent","CreatedAt":"2017-10-04T22:01:36","Actor":"sebastienros","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6917","RelatedDescription":"Opened pull request \"Port fix for URL helper redirect\" (#6917) at aspnet/Mvc","RelatedBody":"Fixes #6910"},{"Id":"6675347964","Type":"PullRequestEvent","CreatedAt":"2017-10-04T22:01:14","Actor":"sebastienros","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6916","RelatedDescription":"Opened pull request \"Port fix for URL helper redirect\" (#6916) at aspnet/Mvc","RelatedBody":"Fixes #6910"},{"Id":"6675330141","Type":"IssuesEvent","CreatedAt":"2017-10-04T21:56:47","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6773","RelatedDescription":"Closed issue \"Manually rendering Razor precompiled views\" (#6773) at aspnet/Mvc","RelatedBody":"My ASP.NET Core 2.0 site uses some `.cshtml` files as e-mail templates. I have a custom service that uses the `IRazorViewEngine` service to render views to a string. This works completely fine in Dev where the View files are sourced from the `.cshtml` files at runtime. However, in Production, the view engine can't find the template views and throws an error when the site tries to render an e-mail.\r\n\r\nI am unsure if this is because the precompilation detects that the views are not used by any controllers and excludes them, or if `IRazorViewEngine.FindView` cannot load views that have been precompiled.\r\n\r\nI can't include the `.cshtml` files in Production because the hosting server runs CentOS, and apparently runtime view compilation is not supported on Linux (it throws an error about not finding the `Microsoft.Win32.Registry` module).\r\n\r\nIs there a way around this issue, or perhaps a better way of manually rendering a view? I considered just having a controller action that renders each template and having the e-mail service call the action, but I don't want users to have access to rendering the templates unless it's via an actual e-mail sent to them."},{"Id":"6675154655","Type":"PullRequestEvent","CreatedAt":"2017-10-04T21:12:46","Actor":"mikeharder","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6897","RelatedDescription":"Merged pull request \"Simplify collection initialization\" (#6897) at aspnet/Mvc","RelatedBody":"- Addresses VS message \"IDE0028 Collection initialization can be simplified\""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6673630439","Type":"IssuesEvent","CreatedAt":"2017-10-04T15:39:02","Actor":"thdotnet","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1451","RelatedDescription":"Opened issue \"Warning maximum key length for a clustered index\" (#1451) at aspnet/Identity","RelatedBody":"I'm running SQL script to create the aspnet identity tables, but I'm getting the following warnings on Management Studio:\r\n\r\n> \r\n> Warning! The maximum key length for a clustered index is 900 bytes. The index 'PK_AspNetUserLogins' has maximum length of 1800 bytes. For some combination of large values, the insert/update operation will fail.\r\n> Warning! The maximum key length for a clustered index is 900 bytes. The index 'PK_AspNetUserRoles' has maximum length of 1800 bytes. For some combination of large values, the insert/update operation will fail.\r\n> Warning! The maximum key length for a clustered index is 900 bytes. The index 'PK_AspNetUserTokens' has maximum length of 2700 bytes. For some combination of large values, the insert/update operation will fail.\r\n\r\n\r\nIs that right? Is there any fix for that?"},{"Id":"6666781011","Type":"IssuesEvent","CreatedAt":"2017-10-03T09:43:34","Actor":"mattthr","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1450","RelatedDescription":"Opened issue \"Allow 2FA challenges at random intervals\" (#1450) at aspnet/Identity","RelatedBody":"Some sites which use two factor authentication - Steam is a good example - do not challenge the user for the authentication code on every visit. This retains many of the advantages of increased security but is less inconvenient for the user.\r\n\r\nAs far as I can tell, Asp.Net identity does not support this out of the box. I tried to roll my own version:\r\n\r\n```\r\nvar result = await SignInManager.PasswordSignInAsync(model.Email, model.Password, model.RememberMe, shouldLockout: true);\r\nswitch (result)\r\n{\r\n    // other cases\r\n    case SignInStatus.RequiresVerification:\r\n        int challengeFrequency = Convert.ToInt16(ConfigurationManager.AppSettings[\"ChallengeFrequency\"]);\r\n        Random rnd = new Random();\r\n        if (rnd.Next(1, challengeFrequency + 1) == 1)\r\n        {\r\n            return RedirectToAction(\"SendCode\", new { returnUrl = returnUrl });\r\n        }\r\n        else\r\n        {\r\n            var token = await UserManager.GenerateTwoFactorTokenAsync(user.Id, \"Phone Code\");\r\n            await SignInManager.TwoFactorSignInAsync(\"Phone Code\", token, false, false);\r\n            return RedirectToLocal(returnUrl);\r\n        }\r\n}\r\n```\r\n\r\nBut this does not work, for reasons I've been unable to figure out - when triggered this code returns SignInStatus.Failure and puts the user back on the login screen, from where they will be logged on successfully if they submit a second time.\r\n\r\nRegardless of my failures, I still think this would be a useful feature to add to the Identity framework."},{"Id":"6663856943","Type":"PullRequestEvent","CreatedAt":"2017-10-02T17:57:59","Actor":"khellang","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1449","RelatedDescription":"Opened pull request \"Use AddHttpContextAccessor\" (#1449) at aspnet/Identity","RelatedBody":"From aspnet/HttpAbstractions#947 💄"},{"Id":"6662845005","Type":"IssuesEvent","CreatedAt":"2017-10-02T14:29:19","Actor":"yodasad","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1448","RelatedDescription":"Closed issue \"The proper way to extend UserManager\" (#1448) at aspnet/Identity","RelatedBody":"Assume I want to write a library that extends identity model with a new object called Organization.  It can look like this\r\n````\r\npublic class Organization\r\n{\r\n    public string Id { get; set; }\r\n    public string Name { get; set; }\r\n    public string Address { get; set; }\r\n\r\n    // Some other properties\r\n}\r\n````\r\nA user can be a member of many organization.\r\nThe next step is to extend `UserManager` with some methods\r\n````\r\nAddUserToOrganizationAsync\r\nRemoveUserFromOrganizationAsync\r\nGetUserOrganizationsAsync\r\n````\r\n\r\nMy question is: what is the proper way to implement these methods?\r\n1. Should I invent a new class `UserOgranizationInfo` (analogue of `UserLoginInfo`)?\r\n\r\nSo the methods will look like\r\n````\r\npublic class UserOgranizationInfo\r\n{\r\n    public string Id { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n\r\npublic class MyUserManager<TUser> : UserManager<TUser> where TUser : class\r\n{\r\n    public Task AddUserToOrganizationAsync(TUser user, UserOrganizationInfo org);\r\n    public Task RemoveUserFromOrganizationAsync(TUser user, UserOrganizationInfo org);\r\n    public Task<IEnumerable<UserOrganazationInfo>>GetUserOrganizationsAsync(TUser user);\r\n}\r\n````\r\n\r\n2. Or is it normal to use my entity type here?\r\n\r\nSo my UserManager will look like\r\n````\r\npublic MyUserManager<TUser, TOrganization> : UserManager<TUser>\r\n    where TUser : class, TOrganization : class\r\n{\r\n     // Other code\r\n\r\n    public Task AddUserToOrganizationAsync(TUser user, TOrganization org);\r\n    public Task RemoveUserFromOrganizationAsync(TUser user, TOrganization org);\r\n    public Task<IEnumerable<TOrganazation>>GetUserOrganizationsAsync(TUser user);\r\n\r\n    // Other code\r\n}\r\n````\r\n\r\nOr even more simpler\r\n````\r\npublic MyUserManager: UserManager<IdentityUser>\r\n{\r\n     // Other code\r\n\r\n    public Task AddUserToOrganizationAsync(IdentityUseruser, Organization org);\r\n    public Task RemoveUserFromOrganizationAsync(IdentityUseruser, Organization org);\r\n    public Task<IEnumerable<Organazation>>GetUserOrganizationsAsync(IdentityUser user);\r\n\r\n    // Other code\r\n}\r\n````\r\n\r\nI think that the only purpose for the first case (with `UserOrganizationInfo`) is to support store that doesn't support Organizations at all. In this case it will be quite inconvenient to add dependency on Organization.\r\nBut if I know that my stores and my UserManager will always support Organizations the second way is ok, is it? Because the second way is much more convenient: we can get full organization info directly from the UserManager rather than from additional `OrganizationManager` class.\r\n\r\nAm I right?\r\n\r\n"},{"Id":"6658674214","Type":"PullRequestEvent","CreatedAt":"2017-09-30T22:26:44","Actor":"mvas","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1305","RelatedDescription":"Closed pull request \"fixed typos, mostly in documentation comments.\" (#1305) at aspnet/Identity","RelatedBody":"fixed typos, mostly in documentation comments\r\n-mostly xml docs\r\n-some comments\r\n-log string"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6675702812","Type":"IssuesEvent","CreatedAt":"2017-10-04T23:57:53","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2095","RelatedDescription":"Closed issue \"Server returning `RequestTimeout` if the request stream is not read\" (#2095) at aspnet/KestrelHttpServer","RelatedBody":"If I implement a very simple ASP.NET Server, which returns a hardcoded dummy response without reading the request, and send a couple of larger (a couple kbytes) requests to it, the server responds to the second request with a `RequestTimeout` instead of `OK`. It only happens on Linux, it works properly on Windows.\r\n\r\nI uploaded a self-contained repro here: https://github.com/markvincze/KestrelRequestTimeout\r\n\r\nThe test works properly on Windows, but it fails on Linux (I tested with Ubuntu, and also with Docker on Windows).\r\n\r\nDoes this seem to be a bug, or am I doing something wrong in my code?\r\n\r\n(I've seen [this issue](https://github.com/dotnet/corefx/issues/17330), which seems to be similar, but that's supposed to be fixed in 2.0.)"},{"Id":"6675290631","Type":"PullRequestEvent","CreatedAt":"2017-10-04T21:46:54","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2097","RelatedDescription":"Opened pull request \"Improve TLS handshake\" (#2097) at aspnet/KestrelHttpServer","RelatedBody":"#2096 "},{"Id":"6675270873","Type":"IssuesEvent","CreatedAt":"2017-10-04T21:41:52","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2096","RelatedDescription":"Opened issue \"Improve TLS handshake\" (#2096) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6674830899","Type":"PullRequestEvent","CreatedAt":"2017-10-04T19:59:43","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2084","RelatedDescription":"Merged pull request \"HPACK fixes and improvements\" (#2084) at aspnet/KestrelHttpServer","RelatedBody":"* Tests for all header field representations and dynamic table updates (http://httpwg.org/specs/rfc7541.html#rfc.section.6)\r\n* Throw on error conditions\r\n  * Incomplete header block (http://httpwg.org/specs/rfc7540.html#rfc.section.4.3)\r\n  * Invalid header index\r\n  * String length larger than internal buffer\r\n  * Dynamic table update to a size larger than the maximum allowed by server settings (http://httpwg.org/specs/rfc7541.html#rfc.section.6.3)\r\n  * Huffman decoding errors (read last two paragraphs of http://httpwg.org/specs/rfc7541.html#rfc.section.5.2)\r\n    * Padding longer than 7 bits\r\n    * Incomplete symbols\r\n    * EOS"},{"Id":"6674737047","Type":"PullRequestEvent","CreatedAt":"2017-10-04T19:38:20","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2094","RelatedDescription":"Merged pull request \"Fix EOF handling of TlsStream.ReadAsync\" (#2094) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6674573728","Type":"PullRequestEvent","CreatedAt":"2017-10-04T19:00:14","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2094","RelatedDescription":null,"RelatedBody":""},{"Id":"6674573438","Type":"PullRequestEvent","CreatedAt":"2017-10-04T19:00:11","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2094","RelatedDescription":"Closed pull request \"Fix EOF handling of TlsStream.ReadAsync\" (#2094) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6675710863","Type":"IssuesEvent","CreatedAt":"2017-10-05T00:00:58","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1709","RelatedDescription":"Closed issue \"Uncomment does not work in Razor files\" (#1709) at aspnet/Razor","RelatedBody":"This is because when we cast `BlockKindInternal` to `BlockKind` [here](https://github.com/aspnet/Razor/blob/dev/src/Microsoft.CodeAnalysis.Razor.Workspaces/DefaultRazorSyntaxFactsService.cs#L42), `Comment` becomes `Markup`."},{"Id":"6675706080","Type":"PullRequestEvent","CreatedAt":"2017-10-04T23:59:12","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1710","RelatedDescription":"Merged pull request \"Match BlockKindInternal values with BlockKind\" (#1710) at aspnet/Razor","RelatedBody":"Fixes #1709 \r\n\r\n@NTaylorMullen @rynowak \r\n\r\nManually tested this with the latest d15prerel.\r\nI didn't do this for `SpanKindInternal` because it is not different from `SpanKind`."},{"Id":"6675323814","Type":"PullRequestEvent","CreatedAt":"2017-10-04T21:55:10","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1710","RelatedDescription":"Opened pull request \"Match BlockKindInternal values with BlockKind\" (#1710) at aspnet/Razor","RelatedBody":"Fixes #1709 \r\n\r\n@NTaylorMullen @rynowak \r\n\r\nManually tested this with the latest d15prerel.\r\nI didn't do this for `SpanKindInternal` because it is not different from `SpanKind`."},{"Id":"6675280355","Type":"IssuesEvent","CreatedAt":"2017-10-04T21:44:17","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1709","RelatedDescription":"Opened issue \"Uncomment does not work in Razor files\" (#1709) at aspnet/Razor","RelatedBody":"This is because when we cast `BlockKindInternal` to `BlockKind` [here](https://github.com/aspnet/Razor/blob/dev/src/Microsoft.CodeAnalysis.Razor.Workspaces/DefaultRazorSyntaxFactsService.cs#L42), `Comment` becomes `Markup`."},{"Id":"6674761499","Type":"IssuesEvent","CreatedAt":"2017-10-04T19:43:56","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1633","RelatedDescription":"Closed issue \"Flow ITextBuffer -> ITextView associations from RazorDocumentTracker to VisualStudioRazorParser\" (#1633) at aspnet/Razor","RelatedBody":"This is dependent on https://github.com/aspnet/Razor/issues/1632\r\n\r\nOnce we're tracking the ITextView associations with our Razor documents we'll be able to properly use`Microsoft.VisualStudio.Language.Intellisense.ICompletionBroker`."},{"Id":"6672450944","Type":"IssuesEvent","CreatedAt":"2017-10-04T11:42:20","Actor":"RandyBuchholz","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1707","RelatedDescription":"Closed issue \"Question - Razor Pages -  What is the CSS in Head?\" (#1707) at aspnet/Razor","RelatedBody":"I created a default Razor Pages project. When I run the page, there are two style tags in the head.\r\n`<style type=\"text/css\">embed[Height=\"175\"][Width=\"175\"],... `, `<style type=\"text/css\">.ggbox,...`. \r\n![image](https://user-images.githubusercontent.com/13967891/31093082-27f1360e-a776-11e7-8e72-684536d9de12.png)\r\n\r\nI've stripped out everything I could from the app (the Analyzers are left) and all of file contents but they are still there. What are they?\r\n![image](https://user-images.githubusercontent.com/13967891/31093036-0a7d8e6a-a776-11e7-8379-ca16e1561f42.png)\r\n\r\n"},{"Id":"6671100552","Type":"IssuesEvent","CreatedAt":"2017-10-04T04:53:09","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1704","RelatedDescription":"Closed issue \"Autocompletion removes code and does not commit on space\" (#1704) at aspnet/Razor","RelatedBody":"VS 15.4.0 Preview 3\r\n\r\nCreate a default ASP.NET Core app, and make one of the cshtml files contain the following:\r\n\r\n```C#\r\n@if (Model.HasText)\r\n{\r\n\t@if (Model.Count < 1)\r\n\t{\r\n\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (Model.IsHappy)\r\n\t\t{\r\n\t\t\t<table>\r\n\t\t\t|\r\n\t\t\t</table>\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t<table>\r\n\t\t\t@foreach (var group in Model.SadGroups)\r\n\t\t\t{\r\n\t\t\t\t<tr><td>@group.Key</td></tr>\r\n\t\t\t}\r\n\t\t\t</table>\r\n\t\t}\r\n\t}\r\n\r\n}\r\n```\r\n\r\nInside the first `<table>`, type `@fore` and hit space so that `@foreach` is committed.\r\n\r\nExpected:\r\n```C#\r\n...\r\n\t\tif (Model.IsHappy)\r\n\t\t{\r\n\t\t\t<table>\r\n\t\t\t@foreach |\r\n\t\t\t</table>\r\n\t\t}\r\n...\r\n```\r\n\r\nActual:\r\n```C#\r\n...\r\n\t\tif (Model.IsHappy)\r\n\t\t{\r\n\t\t\t<table>\r\n\t\t\t@fore  |\r\n\t\t\t</table>\r\n\t\t\t<table>\r\n\t\t\t@foreach (var group in Model.SadGroups)\r\n\t\t\t{\r\n\t\t\t\t<tr><td>@group.Key</td></tr>\r\n\t\t\t}\r\n\t\t\t</table>\r\n\t\t}\r\n...\r\n```\r\n\r\nHTML spacing is set to tabs, C# spacing is set to spaces.\r\n\r\nNote that this works as expected if the autocompletion is invoked manually using Ctrl+Space."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6670490782","Type":"IssuesEvent","CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments"},{"Id":"6670480267","Type":"IssuesEvent","CreatedAt":"2017-10-03T23:56:26","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Opened issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. "},{"Id":"6644367490","Type":"IssuesEvent","CreatedAt":"2017-09-27T14:32:40","Actor":"joeaudette","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Opened issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868) at aspnet/Templates","RelatedBody":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217"},{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"},{"Id":"6532477866","Type":"IssuesEvent","CreatedAt":"2017-08-30T23:19:06","Actor":"andyg8180","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Opened issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"},{"Id":"6626869082","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:30:36","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/431","RelatedDescription":"Closed issue \"Having multiple sites with the same IIS Express launch url causes VS to launch the wrong site\" (#431) at aspnet/Tooling","RelatedBody":"The Security repo has three sample sites with the same launch url. (It needs to be the same because that url is registered with a remote auth server).  This can cause VS / IIS Express to launch the wrong site.\n"},{"Id":"6598999142","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:09:01","Actor":"ctopher31","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059) at aspnet/Tooling","RelatedBody":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n"},{"Id":"6598993466","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:04:41","Actor":"ctopher31","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Opened issue \"How do I make file nesting for js broken again. File nesting is really lame. I want my files structured the way I want them. If some lame ass wants nesting let it be an opt-in.\" (#1059) at aspnet/Tooling","RelatedBody":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":54,"FavoriteCount":25,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":53,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-10-05T05:30:08.8315514Z","RunDurationInMilliseconds":7486}