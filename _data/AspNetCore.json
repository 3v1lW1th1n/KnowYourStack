{"Data":{"Blog":{"FeedItems":[{"Title":"Razor Improvements – Feedback Wanted","PublishedOn":"2018-07-11T17:42:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In recent releases of Visual Studio 2017, there has been a great focus on improving the experience of working with Razor files (*.cshtml). The improvements were aimed at addressing the most pressing...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/07/11/razor-improvements-feedback-wanted/","RawContent":null},{"Title":"Workaround for Bower Version Deprecation","PublishedOn":"2018-07-05T20:34:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"As of June 25, the version of Bower shipped with Visual Studio was deprecated, resulting in Bower operations failing when run in Visual Studio. If you use Bower, you will see an error something like:...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/07/05/workaround-for-bower-version-deprecation/","RawContent":null},{"Title":"Changes to script debugging in Visual Studio 15.7","PublishedOn":"2018-06-29T18:31:22+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We’re always looking for ways to make developing with Visual Studio faster.  One of the tasks developers do many times a day is launching debugging sessions.  We identified that script debugging added...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/06/29/changes-to-script-debugging-in-visual-studio-15-7/","RawContent":null},{"Title":"Blazor 0.4.0 experimental release now available","PublishedOn":"2018-06-07T21:28:56+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Blazor 0.4.0 is now available! This release includes important bug fixes and several new feature enhancements. New features in Blazor 0.4.0 (details below): Add event payloads for common event types...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/06/07/blazor-0-4-0-experimental-release-now-available/","RawContent":null},{"Title":"Use Dependency Injection In WebForms Application","PublishedOn":"2018-06-05T18:13:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dependency Injection design pattern is widely used in modern applications.  It decouples objects to the extent that no client code needs to be changed simply because an object it depends changes to a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/06/05/use-dependency-injection-in-webforms-application/","RawContent":null},{"Title":"ASP.NET Core 2.1.0 now available","PublishedOn":"2018-05-30T17:20:27+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today we&#039;re thrilled to announce the release of ASP.NET Core 2.1.0! This is the latest release of our open-source and cross-platform web framework for .NET and it&#039;s now ready for production...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/30/asp-net-core-2-1-0-now-available/","RawContent":null},{"Title":"Troubleshooting ASP.NET Core Performance Problems","PublishedOn":"2018-05-23T14:26:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos I recently had an opportunity to help a developer with an ASP.NET Core app that was functionally correct but slow when under a heavy user load. We found a few...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/23/asp-net-core-performance-improvements/","RawContent":null},{"Title":"Announcing ASP.NET Providers Connected Service Visual Studio Extension","PublishedOn":"2018-05-22T17:43:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Provider pattern was introduced in ASP.NET 2.0 and it gives the developers the flexibility of where to store the state of ASP.NET features (e.g. Session State, Membership, Output Cache etc.). In...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/22/announcing-asp-net-providers-connected-service-visual-studio-extension/","RawContent":null},{"Title":"A Penny Saved is a Ton of Serverless Compute Earned","PublishedOn":"2018-05-21T20:08:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Scott Guthrie recently shared one of my favorite anecdotes on his Azure Red Shirt Tour. A Microsoft customer regularly invokes 1 billion (yes, that’s with a “B”) Azure Functions per day. The customer...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/21/a-penny-saved-is-a-ton-of-serverless-compute-earned/","RawContent":null},{"Title":"Exploring Azure App Service – Web Apps and SQL Azure","PublishedOn":"2018-05-18T19:40:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is a good chance that your web app uses a database. In my previous post introducing Azure App Service, I showed some of the benefits of hosting apps in Azure App Service, and how easy it is to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/18/exploring-azure-app-service-web-apps-and-sql-azure/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7968528273","Type":"IssuesEvent","CreatedAt":"2018-07-16T03:46:33","Actor":"scottsauber","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3333","RelatedDescription":"Opened issue \"2.1.302 SDK, but AspNetCore.App only downloads 2.1.1 instead of 2.1.2\" (#3333) at aspnet/Home","RelatedBody":"Hello, not really sure where to put this so I'm starting here.\r\n\r\nOn two different machines, I'm unable to get the AspNetCore.App package with no explicit version number to download 2.1.1 instead of 2.1.2.\r\n\r\nThis is on a dotnet new and is happening on two different machines.  On one of them, I even uninstalled all older SDK's other than 2.1.302.\r\n\r\nAm I doing something wrong?\r\n\r\nScreenshots:\r\n![image](https://user-images.githubusercontent.com/10823939/42742518-ddcfc896-8880-11e8-99f0-73488fe5218e.png)\r\n![image](https://user-images.githubusercontent.com/10823939/42742524-e1562afa-8880-11e8-9751-c4f1eda0d112.png)\r\n"},{"Id":"7967197425","Type":"IssuesEvent","CreatedAt":"2018-07-15T11:07:48","Actor":"ygoe","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3332","RelatedDescription":"Opened issue \"Internal redirect for UseStatusCodePages\" (#3332) at aspnet/Home","RelatedBody":"The [documentation](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling?view=aspnetcore-2.1) explains how to use `app.UseStatusCodePages();` to show some content when a controller action returns `NotFound()` or something. This only shows very basic plain text. I could also redirect the user to another URL that has more content like /Error/404. But that would redirect the user away from the originating URL that caused the error. Redirecting the user away from the actual error page to a static page that always shows an error message is a bad thing. The user will not be able to verify the URL and probably find the problem. Also, reloading the page will not bring back the expected content when the error has been resolved meanwhile. Reloading the /Error/404 page will always show the error even if it doesn't exist anymore.\r\n\r\nSo what I need is an internal redirect to a more rich page that fits my site design, but doesn't change the visible URL.\r\n\r\nHow can I do that?"},{"Id":"7966875580","Type":"IssuesEvent","CreatedAt":"2018-07-15T06:09:58","Actor":"huazhenhz","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3331","RelatedDescription":"Opened issue \"Session OnStart and Session OnEnd\" (#3331) at aspnet/Home","RelatedBody":"To reopen the issue #3025 \r\nhttps://github.com/aspnet/Home/issues/3025\r\n\r\nI hope Session can have \"Session_Start\" and \"Session_End\" event mechanism.\r\n\r\nIf the mechanism is the same as Spring Session in Java Web, that's preferred.\r\n\r\nSpring Session has the similiar events such as \"SessionCreatedEvent\" and \"SessionDestroyedEvent\" (\"SessionDestroyedEvent\" includes \"SessionDeletedEvent\" and \"SessionExpiredEvent\".).\r\n\r\nThe relevant web sites about Spring Session below:\r\n\r\nSessionCreatedEvent:\r\nhttps://docs.spring.io/spring-session/docs/1.3.0.RELEASE/reference/html5/#api-redisoperationssessionrepository-sessioncreatedevent\r\n\r\nSessionDestroyedEvent:\r\nhttps://docs.spring.io/spring-session/docs/1.3.0.RELEASE/reference/html5/#api-redisoperationssessionrepository-sessiondestroyedevent\r\n\r\nI think the mechanism is important to .NET developers, and it can make ASP.NET Core more perfect.\r\n\r\nSo, \"Session_Start\" and \"Session_End\" events should be provided continuously in ASP.NET Core.\r\n\r\nThanks!\r\n"},{"Id":"7966744429","Type":"IssuesEvent","CreatedAt":"2018-07-15T03:41:23","Actor":"thammadi","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3330","RelatedDescription":"Opened issue \"Controllers declared in class library, returning 404 with AWS Lambda C#2.1\" (#3330) at aspnet/Home","RelatedBody":"I created an AWS Serverless solution with a Web API and Class Library projects (2.1.0). Class Library is referenced by the Web API project.\r\n\r\nController in Web API:\r\n```\r\n[Route(\"api/[controller]\")]\r\npublic class ValuesController : Controller\r\n{\r\n        [HttpGet]\r\n        public IEnumerable<string> Get()\r\n        {\r\n            return new string[] { \"value1\", \"value2\" };\r\n        }\r\n}\r\n```\r\nReferences: Microsoft.AspNetCore.App (2.1.0) and Microsoft.NETCore.App (2.1.0)\r\nCompatability version set in Startup.cs:\r\n```\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n}\r\n```\r\n\r\nController in Class Library: \r\n```\r\n[Route(\"api/[controller]\")]\r\npublic class ClassesController : Controller\r\n{\r\n        [HttpGet]\r\n        public IEnumerable<string> Get()\r\n        {\r\n            return new string[] { \"class1\", \"class2\" };\r\n        }\r\n}\r\n```\r\nReferences: Microsoft.AspNetCore.App (2.1.0) and Microsoft.NETCore.App (2.1.0)\r\nSDK reference in Class Library project file is updated from Microsoft.NET.Sdk to Microsoft.NET.Sdk.Web\r\n\r\nDeployed the above to AWS lambda (dotnet lambda package -c \"Release\")\r\n\r\nWhen tested, '/api/values' works as expected but '/api/classes' returns 404\r\nThis used to work with 2.0 version.\r\n\r\nDid I miss anything?"},{"Id":"7965089067","Type":"IssuesEvent","CreatedAt":"2018-07-14T02:53:17","Actor":"John0King","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3305","RelatedDescription":"Closed issue \"System.BadImageFormatException when use `TestServer.CreateClient()`\" (#3305) at aspnet/Home","RelatedBody":"Today all my test fall with this Exception\r\nhere's the exception code \r\n\r\n```C#\r\npublic class TestFixture\r\n    {\r\n\r\n        private static TestServer _server;\r\n        private static HttpClient _client;\r\n\r\n        private readonly static object _lock = new object();\r\n        public static TestServer Server\r\n        {\r\n            get\r\n            {\r\n                lock (_lock)\r\n                {\r\n                    if (_server == null)\r\n                    {\r\n                        var builder = WebHostBuilderFactory.CreateFromAssemblyEntryPoint(typeof(Startup).Assembly, null);\r\n                        builder.UseSolutionRelativeContentRoot(\"src/<my-api-project-directory>\");\r\n                        _server = new TestServer(builder); // no exception here\r\n                    }\r\n                    return _server;\r\n                }\r\n            }\r\n        }\r\n\r\n        public static HttpClient Client\r\n        {\r\n            get\r\n            {\r\n                if(_client == null)\r\n                {\r\n                    _client = Server.CreateClient();  // throw System.BadImageFormatException\r\n                }\r\n                return _client;\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nthe excption says could not load file or assembly : < my  api project assembly >  or one of it's dependency\r\n\r\n## environment\r\nsdk: 2.1.301\r\nasp.net core : 2.1.1\r\ntest sdk: 15.7.2\r\nxunit:2.3.1\r\n\r\napi-project :  `<TargetFramework>net461</TargetFramework>` `<RuntimeIdenitifier>win7-x64</RuntimeIdenitifier>`\r\ntest-project:  `<TargetFramework>net461</TargetFramework>` \r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7967874798","Type":"PullRequestEvent","CreatedAt":"2018-07-15T20:02:31","Actor":"dotnet-maestro-bot","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2634","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/2.2' => 'master'\" (#2634) at aspnet/SignalR","RelatedBody":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1."},{"Id":"7967533240","Type":"IssuesEvent","CreatedAt":"2018-07-15T15:30:32","Actor":"crocoM4","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2633","RelatedDescription":"Opened issue \"Question: Using SignalR with Bare Websockets\" (#2633) at aspnet/SignalR","RelatedBody":"Hi,\r\nI am trying to connect from a javascript client to a hub without using SignalR client.\r\nFor example using the [browser websocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket) :\r\n` var mSocket= new WebSocket(\"ws://www.example.com/myHubName\") `\r\n\r\nI tried to follow [this sample ](var exampleSocket = new WebSocket(\"ws://www.example.com/socketserver\", \"protocolOne\")) but i cannot connect or send messages to a hub like [this](https://github.com/aspnet/SignalR/blob/release/2.2/samples/SignalRSamples/Hubs/Chat.cs)\r\n\r\nThe only way that makes this work is by using an approach like this [ConnectionHandlers](https://github.com/aspnet/SignalR/blob/release/2.2/samples/SignalRSamples/ConnectionHandlers/MessagesConnectionHandler.cs) that doesn't seem to use SignalR but an implementation of a \"custom WebSocket\".\r\n\r\nSo, there is a way to connect to a SignalR server without using the dedicated client? Or i need to implement  a custom ConnectionHandler like one in the example. Am I missing something? \r\n\r\n"},{"Id":"7965702624","Type":"IssuesEvent","CreatedAt":"2018-07-14T12:22:04","Actor":"atresnjo","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2632","RelatedDescription":"Opened issue \"MessagePack serializes every DateTime to UTC. Is this expected behavior?\" (#2632) at aspnet/SignalR","RelatedBody":"Server version: 2.1.1\r\nClient Version: 1.0.2\r\nMessagePack: 1.0.2\r\n\r\nThe DateTime I send/receive gets always converted to UTC even if the Kind isn't UTC.  Is this expected behavior or am I missing something?"},{"Id":"7965349561","Type":"IssuesEvent","CreatedAt":"2018-07-14T07:00:48","Actor":"Biarity","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2631","RelatedDescription":"Closed issue \"Using Redis to store groups/connections\" (#2631) at aspnet/SignalR","RelatedBody":"From my understanding, the [DefaultHubLifetimeManager](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Core/DefaultHubLifetimeManager.cs) uses an [in-memory dictionary](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Core/Internal/HubGroupList.cs#L14) to store group info.  IMO this isn't very scalable, and since I'm already using a distributed Redis cache, I'd like to be able to also use that with SignalR.\r\n\r\nGoing through the source I found the [RedisHubLifetimeManager](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Redis/RedisHubLifetimeManager.cs), but I'm not sure what the best way to use it is.\r\n\r\n1) Do I have to manually inject all the services [here](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Core/SignalRDependencyInjectionExtensions.cs) just to be able to use Redis? Or is there a way of \"overriding\" an injected service? (So I won't have to manually update the list of core services if it changes)\r\n\r\n2) I have the following in my startup `ConfigureServices`:\r\n```C#\r\nservices.AddDistributedRedisCache(options => {...});\r\n```\r\nHow do I make sure SignalR is using the same Redis instance?\r\n"},{"Id":"7965185922","Type":"IssuesEvent","CreatedAt":"2018-07-14T04:23:45","Actor":"Biarity","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2631","RelatedDescription":"Opened issue \"Using Redis to store groups/connections\" (#2631) at aspnet/SignalR","RelatedBody":"From my understanding, the [DefaultHubLifetimeManager](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Core/DefaultHubLifetimeManager.cs) uses an [in-memory dictionary](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Core/Internal/HubGroupList.cs#L14) to store group info.  IMO this isn't very scalable, and since I'm already using a distributed Redis cache, I'd like to be able to also use that with SignalR.\r\n\r\nGoing through the source I found the [RedisHubLifetimeManager](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Redis/RedisHubLifetimeManager.cs), but I'm not sure what the best way to use it is.\r\n\r\n1) Do I have to manually inject all the services [here](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Core/SignalRDependencyInjectionExtensions.cs) just to be able to use Redis? Or is there a way of \"overriding\" an injected service? (So I won't have to manually update the list of core services if it changes)\r\n\r\n2) I have the following in my startup `ConfigureServices`:\r\n```C#\r\nservices.AddDistributedRedisCache(options => {...});\r\n```\r\nHow do I make sure SignalR is using the same Redis instance?\r\n"},{"Id":"7964613068","Type":"PullRequestEvent","CreatedAt":"2018-07-13T22:21:41","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2630","RelatedDescription":"Opened pull request \"Add partial handshake test\" (#2630) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/Coherence-Signed/issues/855"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7968065244","Type":"IssuesEvent","CreatedAt":"2018-07-15T22:28:32","Actor":"sgwatgit","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/8089","RelatedDescription":"Opened issue \"Customizing Route template token replacement without IApplicationModelProvider\" (#8089) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\n\r\nFeature request\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n\r\nCreating a `IApplicationModelProvider` that inherits from `DefaultApplicationModelProvider` in order to customize the token replacement in `RouteAttribute` templates.\r\n\r\n```csharp\r\npublic class CustomControllerNameApplicationModelProvider : DefaultApplicationModelProvider\r\n{\r\n    public CustomControllerNameApplicationModelProvider(IOptions<MvcOptions> mvcOptionsAccessor, IModelMetadataProvider modelMetadataProvider) \r\n        : base(mvcOptionsAccessor, modelMetadataProvider)\r\n    {\r\n\r\n    }\r\n\r\n    protected override ControllerModel CreateControllerModel(TypeInfo typeInfo)\r\n    {\r\n        var controllerModel = base.CreateControllerModel(typeInfo);\r\n\r\n        controllerModel.ControllerName = PascalToKebabCase(controllerModel.ControllerName);\r\n\r\n        return controllerModel;\r\n    }\r\n\r\n    private string PascalToKebabCase(string value)\r\n    {\r\n        if (string.IsNullOrEmpty(value))\r\n            return value;\r\n\r\n        return Regex.Replace(\r\n            value,\r\n            \"(?<!^)([A-Z][a-z]|(?<=[a-z])[A-Z])\",\r\n            \"-$1\",\r\n            RegexOptions.Compiled)\r\n            .Trim()\r\n            .ToLower();\r\n    }\r\n}\r\n```\r\nRegister in `Startup.cs`\r\n```csharp\r\nservices.AddTransient<IApplicationModelProvider, CustomControllerNameApplicationModelProvider>();\r\n```\r\n\r\n#### Description of the problem:\r\n\r\nWhen using the `RouteAttribute` on an Api controller, the `[controller]` token is a great way to automatically generate the route from the controller name.\r\n\r\nUnfortunately this only allows for a direct replacement of this token with the controller name minus the `Controller` suffix as seen [here](https://github.com/aspnet/Mvc/blob/a67d9363e22be8ef63a1a62539991e1da3a6e30e/src/Microsoft.AspNetCore.Mvc.Core/Internal/DefaultApplicationModelProvider.cs#L170).\r\n\r\nI can overcome this by modifying the `ControllerModel` created by the `DefaultApplicationModelProvider`, but this seems both heavy handed (overriding types in `Microsoft.AspNetCore.Mvc.Internal;`) and dangerous (other things could rely on `ControllerModel.ControllerName`.\r\n\r\nI would prefer to have a token replacement strategy that I could customize where the token is parsed out and the value is retrieved [here](https://github.com/aspnet/Mvc/blob/a67d9363e22be8ef63a1a62539991e1da3a6e30e/src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs#L374).\r\n\r\nAs it stands I end up not using `Route(\"api/[controller]\")` when my controller names are more than one word (eg `UserManagementController`, `ShoppingCartAdministrationController`) and hardcode the path instead. This isn't any different than what I did in Web Api 2, but I don't want some controllers to use the token and others to be hardcoded, so they're all hardcoded.\r\n\r\nI've tested this out and it works but I'm very very skeptical of my solution."},{"Id":"7967864981","Type":"PullRequestEvent","CreatedAt":"2018-07-15T19:55:29","Actor":"dotnet-maestro-bot","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/8088","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/2.2' => 'master'\" (#8088) at aspnet/Mvc","RelatedBody":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Mvc merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1."},{"Id":"7966952527","Type":"PullRequestEvent","CreatedAt":"2018-07-15T07:26:31","Actor":"kishanAnem","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/8087","RelatedDescription":"Opened pull request \"Custom error messages with validation message tag helper #8035\" (#8087) at aspnet/Mvc","RelatedBody":"Hi @dougbu \r\n\r\nI think I fixed this bug. Is this right way to fix?\r\nIf yes, I'll add test cases."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7967869060","Type":"IssuesEvent","CreatedAt":"2018-07-15T19:58:34","Actor":"dazinator","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1878","RelatedDescription":"Closed issue \"Custom IdentityUserLogin<int> and EF user store\" (#1878) at aspnet/Identity","RelatedBody":"I'm using the EF stores.\r\n\r\nThe only change I'd like to make is to add a column to the `AspNetUserLogins` table so that I can also store the refresh token associated with the external login. I think adding a column to an EF model should be fairly straightforward, and it was, but then getting identity to work with it is turning out to be a bit painful :-)\r\n\r\nI derived my own entity from `IdentityUserLogin<int>` and added the additional property:\r\n\r\n```\r\n   public class DennisUserLogin : IdentityUserLogin<int>\r\n   {\r\n        public string RefreshToken { get; set; }\r\n   }\r\n```\r\n\r\nAnd therefore had to derive my own `IdentityDbContext`, passing in that replacement type:\r\n\r\n```\r\n\r\n public class DennisContext : IdentityDbContext<DennisUser, IdentityRole<int>, int, IdentityUserClaim<int>, IdentityUserRole<int>, DennisUserLogin, IdentityRoleClaim<int>, IdentityUserToken<int>>\r\n    {\r\n        public DennisContext(DbContextOptions<DennisContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);         \r\n            \r\n        }\r\n    }\r\n```\r\n\r\nI was able to then add a new ef migration, and apply that, and I can see the additional column in the database - great.\r\n\r\nNext I needed to be able to set this new property. So I had to find the locations where a new `IdentityUserLogin` entity is created, so that I could also set my additional property before its saved.\r\n\r\nUnfortunately the `UserStore` seems to create this entity, and the there is nowhere in the existing API where I could pass an additional value to it (i.e referesh token). Therefore overriding any existing method on UserStore or UserManager wouldn't cater for my scenario. So I had to add some additional method to UserManager and UserStore that also took a \"refresh token\":\r\n\r\n```\r\n\r\n  public class DennisUserStore : UserStore<DennisUser, IdentityRole<int>, DennisContext, int>, IDennisUserStore\r\n    {\r\n\r\n        private readonly DennisContext _context;\r\n\r\n        public DennisUserStore(DennisContext context, IdentityErrorDescriber describer = null) : base(context, describer)\r\n        {\r\n            _context = context;\r\n        }\r\n        \r\n        \r\n        /// <summary>\r\n        /// Adds the <paramref name=\"login\"/> given to the specified <paramref name=\"user\"/>.\r\n        /// </summary>\r\n        /// <param name=\"user\">The user to add the login to.</param>\r\n        /// <param name=\"login\">The login to add to the user.</param>\r\n        /// <param name=\"cancellationToken\">The <see cref=\"CancellationToken\"/> used to propagate notifications that the operation should be canceled.</param>\r\n        /// <returns>The <see cref=\"Task\"/> that represents the asynchronous operation.</returns>\r\n        public Task AddLoginAsync(DennisUser user, UserLoginInfo login, string refreshToken,\r\n            CancellationToken cancellationToken = default(CancellationToken))\r\n        {\r\n            cancellationToken.ThrowIfCancellationRequested();\r\n            ThrowIfDisposed();\r\n            if (user == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(user));\r\n            }\r\n            if (login == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(login));\r\n            }\r\n            var userLogins = _context.UserLogins;\r\n            var newLogin = CreateDennisUserLogin(user, login);\r\n            newLogin.RefreshToken = refreshToken;\r\n            userLogins.Add(newLogin);\r\n            return Task.FromResult(false);\r\n        }\r\n\r\n        private DennisUserLogin CreateDennisUserLogin(DennisUser user, UserLoginInfo login)\r\n        {\r\n            var dennisUserLogin = new DennisUserLogin();\r\n            dennisUserLogin.LoginProvider = login.LoginProvider;\r\n            dennisUserLogin.ProviderDisplayName = login.ProviderDisplayName;\r\n            dennisUserLogin.ProviderKey = login.ProviderKey;\r\n            dennisUserLogin.UserId = user.Id;\r\n            return dennisUserLogin;\r\n        }\r\n\r\n    }\r\n\r\n```\r\n\r\nand `UserManager`:\r\n\r\n```\r\n\r\n\r\n   public class DennisUserManager : UserManager<DennisUser>\r\n    {\r\n        public DennisUserManager(IUserStore<DennisUser> store, IOptions<IdentityOptions> optionsAccessor, IPasswordHasher<DennisUser> passwordHasher, IEnumerable<IUserValidator<DennisUser>> userValidators, IEnumerable<IPasswordValidator<DennisUser>> passwordValidators, ILookupNormalizer keyNormalizer, IdentityErrorDescriber errors, IServiceProvider services, ILogger<UserManager<DennisUser>> logger) : base(store, optionsAccessor, passwordHasher, userValidators, passwordValidators, keyNormalizer, errors, services, logger)\r\n        {\r\n\r\n        }\r\n\r\n        // IUserLoginStore methods\r\n        private IDennisUserStore GetStore()\r\n        {\r\n\r\n            var cast = Store as IDennisUserStore;\r\n            if (cast == null)\r\n            {\r\n                throw new NotSupportedException(\"Store Not IUserLoginStore\");\r\n            }\r\n            return cast;\r\n        }     \r\n\r\n        public async Task<IdentityResult> AddLoginAsync(DennisUser user, UserLoginInfo login, string refreshToken)\r\n        {\r\n            ThrowIfDisposed();\r\n            var loginStore = GetStore();\r\n            if (login == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(login));\r\n            }\r\n            if (user == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(user));\r\n            }\r\n\r\n            var existingUser = await FindByLoginAsync(login.LoginProvider, login.ProviderKey);\r\n            if (existingUser != null)\r\n            {\r\n                Logger.LogWarning(4, \"AddLogin for user {userId} failed because it was already associated with another user.\", await GetUserIdAsync(user));\r\n                return IdentityResult.Failed(ErrorDescriber.LoginAlreadyAssociated());\r\n            }\r\n            await loginStore.AddLoginAsync(user, login, refreshToken, CancellationToken);\r\n            return await UpdateUserAsync(user);\r\n        }\r\n    }\r\n\r\n```\r\n\r\nSo far this is a lot of work in order to be able to add one property to this entity but I thought I was close.\r\n\r\nI changed the razor UI code to call the new method on my UserManager instead which takes the refresh token,\r\n\r\nNow when I run the app, when attempting an external login, I get the following error:\r\n\r\n> InvalidOperationException: Cannot create a DbSet for 'IdentityUserLogin<int>' because this type is not included in the model for the context.\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.get_EntityType()\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.get_EntityQueryable()\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.System.Linq.IQueryable.get_Provider()\r\nMicrosoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync<TSource, TResult>(MethodInfo operatorMethodInfo, IQueryable<TSource> source, Expression expression, CancellationToken cancellationToken)\r\nMicrosoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync<TSource, TResult>(MethodInfo operatorMethodInfo, IQueryable<TSource> source, LambdaExpression expression, CancellationToken cancellationToken)\r\nMicrosoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync(string loginProvider, string providerKey, bool isPersistent, bool bypassTwoFactor)\r\nDennis.Areas.Identity.Pages.Account.ExternalLoginModel.OnGetCallbackAsync(string returnUrl, string remoteError) in ExternalLogin.cshtml.cs\r\n-\r\n            {\r\n                ErrorMessage = \"Error loading external login information.\";\r\n                return RedirectToPage(\"./Login\", new { ReturnUrl = returnUrl });\r\n            }\r\n            // Sign in the user with this external login provider if the user already has a login.\r\n            var result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, info.ProviderKey, isPersistent: false, bypassTwoFactor : true);\r\n            if (result.Succeeded)\r\n            {\r\n                var tokens = info.AuthenticationTokens.ToArray();\r\n                // save the users \r\n                _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", info.Principal.Identity.Name, info.LoginProvider);\r\n                return LocalRedirect(returnUrl);\r\nMicrosoft.AspNetCore.Mvc.RazorPages.Internal.ExecutorFactory+GenericTaskHandlerMethod.Convert<T>(object taskAsObject)\r\n\r\n\r\nIt seems something about the store is still specifically looking for `IdentityUserLogin<int>` which isn't part of my model anymore - because I am using my own derived type `DennisUserLogin`. However it doesn't appear I can inform the user store of that.. What am I missing?"},{"Id":"7967859264","Type":"IssuesEvent","CreatedAt":"2018-07-15T19:50:52","Actor":"dazinator","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1878","RelatedDescription":"Opened issue \"Customise UserLogin ef entity\" (#1878) at aspnet/Identity","RelatedBody":"I'm using the EF stores.\r\n\r\nThe only change I'd like to make is to add a column to the `AspNetUserLogins` table so that I can also store the refresh token associated with the external login. I think adding a column to an EF model should be fairly straightforward, but it's turning out to be a pain :-)\r\n\r\nSo I derived my own entity from `IdentityUserLogin<int>` and added the additional property:\r\n\r\n```\r\n   public class DennisUserLogin : IdentityUserLogin<int>\r\n   {\r\n        public string RefreshToken { get; set; }\r\n   }\r\n```\r\n\r\nAnd therefore had to derive my own `IdentityDbContext`, passing in that replacement type:\r\n\r\n```\r\n\r\n public class DennisContext : IdentityDbContext<DennisUser, IdentityRole<int>, int, IdentityUserClaim<int>, IdentityUserRole<int>, DennisUserLogin, IdentityRoleClaim<int>, IdentityUserToken<int>>\r\n    {\r\n        public DennisContext(DbContextOptions<DennisContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);         \r\n            \r\n        }\r\n    }\r\n```\r\n\r\nI was able to then add a new ef migration, and apply that, and I can see the additional column in the database - great.\r\n\r\nNext I needed to be able to set this new property. So I had to find the locations where a new `IdentityUserLogin` entity is created, so that I could also set my additional property before its saved.\r\n\r\nUnfortunately the `UserStore` seems to create this entity, and the there is nowhere in the existing API where I could pass an additional value to it (i.e referesh token). Therefore overriding any existing method on UserStore or UserManager wouldn't cater for my scenario. So I had to add some additional method to UserManager and UserStore that also took a \"refresh token\":\r\n\r\n```\r\n\r\n  public class DennisUserStore : UserStore<DennisUser, IdentityRole<int>, DennisContext, int>, IDennisUserStore\r\n    {\r\n\r\n        private readonly DennisContext _context;\r\n\r\n        public DennisUserStore(DennisContext context, IdentityErrorDescriber describer = null) : base(context, describer)\r\n        {\r\n            _context = context;\r\n        }\r\n        \r\n        \r\n        /// <summary>\r\n        /// Adds the <paramref name=\"login\"/> given to the specified <paramref name=\"user\"/>.\r\n        /// </summary>\r\n        /// <param name=\"user\">The user to add the login to.</param>\r\n        /// <param name=\"login\">The login to add to the user.</param>\r\n        /// <param name=\"cancellationToken\">The <see cref=\"CancellationToken\"/> used to propagate notifications that the operation should be canceled.</param>\r\n        /// <returns>The <see cref=\"Task\"/> that represents the asynchronous operation.</returns>\r\n        public Task AddLoginAsync(DennisUser user, UserLoginInfo login, string refreshToken,\r\n            CancellationToken cancellationToken = default(CancellationToken))\r\n        {\r\n            cancellationToken.ThrowIfCancellationRequested();\r\n            ThrowIfDisposed();\r\n            if (user == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(user));\r\n            }\r\n            if (login == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(login));\r\n            }\r\n            var userLogins = _context.UserLogins;\r\n            var newLogin = CreateDennisUserLogin(user, login);\r\n            newLogin.RefreshToken = refreshToken;\r\n            userLogins.Add(newLogin);\r\n            return Task.FromResult(false);\r\n        }\r\n\r\n        private DennisUserLogin CreateDennisUserLogin(DennisUser user, UserLoginInfo login)\r\n        {\r\n            var dennisUserLogin = new DennisUserLogin();\r\n            dennisUserLogin.LoginProvider = login.LoginProvider;\r\n            dennisUserLogin.ProviderDisplayName = login.ProviderDisplayName;\r\n            dennisUserLogin.ProviderKey = login.ProviderKey;\r\n            dennisUserLogin.UserId = user.Id;\r\n            return dennisUserLogin;\r\n        }\r\n\r\n    }\r\n\r\n```\r\n\r\nand `UserManager`:\r\n\r\n```\r\n\r\n\r\n   public class DennisUserManager : UserManager<DennisUser>\r\n    {\r\n        public DennisUserManager(IUserStore<DennisUser> store, IOptions<IdentityOptions> optionsAccessor, IPasswordHasher<DennisUser> passwordHasher, IEnumerable<IUserValidator<DennisUser>> userValidators, IEnumerable<IPasswordValidator<DennisUser>> passwordValidators, ILookupNormalizer keyNormalizer, IdentityErrorDescriber errors, IServiceProvider services, ILogger<UserManager<DennisUser>> logger) : base(store, optionsAccessor, passwordHasher, userValidators, passwordValidators, keyNormalizer, errors, services, logger)\r\n        {\r\n\r\n        }\r\n\r\n        // IUserLoginStore methods\r\n        private IDennisUserStore GetStore()\r\n        {\r\n\r\n            var cast = Store as IDennisUserStore;\r\n            if (cast == null)\r\n            {\r\n                throw new NotSupportedException(\"Store Not IUserLoginStore\");\r\n            }\r\n            return cast;\r\n        }     \r\n\r\n        public async Task<IdentityResult> AddLoginAsync(DennisUser user, UserLoginInfo login, string refreshToken)\r\n        {\r\n            ThrowIfDisposed();\r\n            var loginStore = GetStore();\r\n            if (login == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(login));\r\n            }\r\n            if (user == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(user));\r\n            }\r\n\r\n            var existingUser = await FindByLoginAsync(login.LoginProvider, login.ProviderKey);\r\n            if (existingUser != null)\r\n            {\r\n                Logger.LogWarning(4, \"AddLogin for user {userId} failed because it was already associated with another user.\", await GetUserIdAsync(user));\r\n                return IdentityResult.Failed(ErrorDescriber.LoginAlreadyAssociated());\r\n            }\r\n            await loginStore.AddLoginAsync(user, login, refreshToken, CancellationToken);\r\n            return await UpdateUserAsync(user);\r\n        }\r\n    }\r\n\r\n```\r\n\r\nSo far this is a lot of work in order to be able to add one property to this entity but I thought I was close.\r\n\r\nI changed the razor UI code to call the new method on my UserManager instead which takes the refresh token,\r\n\r\nNow when I run the app, when attempting an external login, I get the following error:\r\n\r\n> InvalidOperationException: Cannot create a DbSet for 'IdentityUserLogin<int>' because this type is not included in the model for the context.\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.get_EntityType()\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.get_EntityQueryable()\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.System.Linq.IQueryable.get_Provider()\r\nMicrosoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync<TSource, TResult>(MethodInfo operatorMethodInfo, IQueryable<TSource> source, Expression expression, CancellationToken cancellationToken)\r\nMicrosoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync<TSource, TResult>(MethodInfo operatorMethodInfo, IQueryable<TSource> source, LambdaExpression expression, CancellationToken cancellationToken)\r\nMicrosoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync(string loginProvider, string providerKey, bool isPersistent, bool bypassTwoFactor)\r\nDennis.Areas.Identity.Pages.Account.ExternalLoginModel.OnGetCallbackAsync(string returnUrl, string remoteError) in ExternalLogin.cshtml.cs\r\n-\r\n            {\r\n                ErrorMessage = \"Error loading external login information.\";\r\n                return RedirectToPage(\"./Login\", new { ReturnUrl = returnUrl });\r\n            }\r\n            // Sign in the user with this external login provider if the user already has a login.\r\n            var result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, info.ProviderKey, isPersistent: false, bypassTwoFactor : true);\r\n            if (result.Succeeded)\r\n            {\r\n                var tokens = info.AuthenticationTokens.ToArray();\r\n                // save the users \r\n                _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", info.Principal.Identity.Name, info.LoginProvider);\r\n                return LocalRedirect(returnUrl);\r\nMicrosoft.AspNetCore.Mvc.RazorPages.Internal.ExecutorFactory+GenericTaskHandlerMethod.Convert<T>(object taskAsObject)\r\n\r\n\r\nIt seems something about the store is still specifically looking for `IdentityUserLogin<int>` which isn't part of my model anymore - because I am using my own derived type `DennisUserLogin`. However it doesn't appear I can inform the user store of that.. What am I missing?"},{"Id":"7967854986","Type":"PullRequestEvent","CreatedAt":"2018-07-15T19:47:26","Actor":"dotnet-maestro-bot","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1877","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/2.2' => 'master'\" (#1877) at aspnet/Identity","RelatedBody":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1."},{"Id":"7964450733","Type":"IssuesEvent","CreatedAt":"2018-07-13T21:32:18","Actor":"NinoFloris","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1876","RelatedDescription":"Opened issue \"Can PasswordValidator errors pretty please be merged with UserValidator errors on user create?\" (#1876) at aspnet/Identity","RelatedBody":"Talking about https://github.com/aspnet/Identity/blame/master/src/Core/UserManager.cs#L597\r\nCould instead of returning on `!succeeded` store them, run CreateAsync and merge them with those errors.\r\nThis is blocking a nice api where you get all errors of a registration in one go."},{"Id":"7959716527","Type":"PullRequestEvent","CreatedAt":"2018-07-13T02:40:44","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1875","RelatedDescription":"Merged pull request \"[2.1]: pin baseline package versions to 2.1.2\" (#1875) at aspnet/Identity","RelatedBody":"Part of https://github.com/aspnet/Home/issues/3316\n\nThis pins package versions to the 2.1.2 baseline. Universe will not override variables in the 'Pinned' section. This helps ensure that this repo does not upgrade its dependency versions for all future patches of 2.1."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7967859435","Type":"PullRequestEvent","CreatedAt":"2018-07-15T19:51:00","Actor":"dotnet-maestro-bot","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2726","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/2.2' => 'master'\" (#2726) at aspnet/KestrelHttpServer","RelatedBody":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1."},{"Id":"7966706419","Type":"IssuesEvent","CreatedAt":"2018-07-15T02:59:23","Actor":"VenkateshSrini","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2725","RelatedDescription":"Opened issue \"Unable to use HTTPS certificate with Kestrel indocker\" (#2725) at aspnet/KestrelHttpServer","RelatedBody":"Hi,\r\nI have been trying to dockerize a Simple ASP.NET core API app running Kestrel with Https enabled. I have followed all the instructions available but nothing seems to work. A detailed issue is created here\r\n[Docker with HTTPS ASP.NET Core 2.1](https://github.com/dotnet/dotnet-docker/issues/630#issuecomment-404865564). The link also provides the code and various methods that we are trying to get it working. \r\n\r\nPlease help us in this regard\r\n\r\n\r\n"},{"Id":"7964992484","Type":"PullRequestEvent","CreatedAt":"2018-07-14T01:31:57","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2724","RelatedDescription":"Opened pull request \"Fix deadlock in GOAWAY_Received_RelievesConnectionBackpressure\" (#2724) at aspnet/KestrelHttpServer","RelatedBody":"#2722\r\n\r\n@Tratcher "},{"Id":"7964824889","Type":"IssuesEvent","CreatedAt":"2018-07-13T23:48:30","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2684","RelatedDescription":"Closed issue \"Lowercase logic modifies non-letter characters in header names\" (#2684) at aspnet/KestrelHttpServer","RelatedBody":"The current logic applies the lowercase mask: https://github.com/aspnet/KestrelHttpServer/blob/dev/src/Kestrel.Core/Internal/Http2/HPack/HPackEncoder.cs#L144. But this logic does not check whether the character is a letter and can change non-letter symbols. For example, it would change `^` to `~` in header names. The fix would be to ensure that the lower case mask is only applied for upper case letters. We can also consider checking for invalid characters in the header here as well."},{"Id":"7964824282","Type":"PullRequestEvent","CreatedAt":"2018-07-13T23:48:14","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2719","RelatedDescription":"Merged pull request \"[automated] Merge branch 'release/2.2' => 'master'\" (#2719) at aspnet/KestrelHttpServer","RelatedBody":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @halter73\n* @natemcmaster\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit fetch --force https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1."},{"Id":"7964823558","Type":"PullRequestEvent","CreatedAt":"2018-07-13T23:47:52","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2707","RelatedDescription":"Merged pull request \"Consolidate HTTP charset validation logic\" (#2707) at aspnet/KestrelHttpServer","RelatedBody":"Addresses https://github.com/aspnet/KestrelHttpServer/issues/2684. The only functional change is to restrict the character set accepted for header names to `Token` characters. I'll add some tests to test for this difference."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7966548735","Type":"IssuesEvent","CreatedAt":"2018-07-15T00:01:09","Actor":"nfplee","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2481","RelatedDescription":"Opened issue \"Razor SDK view doesn't honour _ViewImports file provider\" (#2481) at aspnet/Razor","RelatedBody":"My application has the following file provider defined:\r\n\r\n`\r\npublic class ViewImportsFileProvider : IFileProvider {\r\n    public IDirectoryContents GetDirectoryContents(string subpath) {\r\n        return null;\r\n    }\r\n\r\n    public IFileInfo GetFileInfo(string subpath) {\r\n        if (subpath == \"/_ViewImports\" + RazorViewEngine.ViewExtension)\r\n            return new ContentFileInfo(\"_ViewImports\" + RazorViewEngine.ViewExtension, @\"@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers\");\r\n\r\n        return null;\r\n    }\r\n\r\n    public IChangeToken Watch(string filter) {\r\n        return null;\r\n    }\r\n}\r\n\r\npublic class ContentFileInfo : IFileInfo {\r\n    private readonly byte[] _content;\r\n\r\n    public ContentFileInfo(string name, string content) {\r\n        Name = name;\r\n        _content = Encoding.UTF8.GetBytes(content);\r\n    }\r\n\r\n    public bool Exists => true;\r\n\r\n    public long Length => _content.Length;\r\n\r\n    public string PhysicalPath => null;\r\n\r\n    public string Name { get; }\r\n\r\n    public DateTimeOffset LastModified => DateTimeOffset.MinValue;\r\n\r\n    public bool IsDirectory => false;\r\n\r\n    public Stream CreateReadStream() {\r\n        return new MemoryStream(_content);\r\n    }\r\n}\r\n`\r\n\r\nNow say I have a view with the following content:\r\n\r\n<a asp-action=\"Contact\">Contact</a>\r\n\r\nThe tag helper works fine in a regular view within my application but doesn't for any views within my class library (using the Razor SDK)."},{"Id":"7965946106","Type":"IssuesEvent","CreatedAt":"2018-07-14T15:32:48","Actor":"varghesep","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2480","RelatedDescription":"Opened issue \"Dynamically loaded Views can't load tag helpers\" (#2480) at aspnet/Razor","RelatedBody":"I posted this problem [here ](https://www.google.com/)in StackOverflow.\r\n\r\nDynamically loading the views from different dlls from a plugin folder works. But if any such view in a separate assembly/dll has a custom tag helper, it can't load them. The TagHelperFeatureProvider has the parts where these tag helpers are and the feature listing shows also that the customer tag helpers are present in them. But during the run time, the razor view ignore the tag helpers completely.\r\n\r\nIf I add the assemblies/dlls as dependencies to the main parent app, it works fine. But if I remove the dependencies and load the assemblies in assemblypart and during the run time, the tag helpers fail to execute.\r\n\r\nSetup: I'm using asp.net core 2.1.\r\n"},{"Id":"7964886693","Type":"IssuesEvent","CreatedAt":"2018-07-14T00:19:21","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2470","RelatedDescription":"Closed issue \"Certain Sequence of Text/HTML on Razor Page Results in Error \"rzc generate exited with code 1\" During Build\" (#2470) at aspnet/Razor","RelatedBody":"_From @karelz on July 4, 2018 2:37_\n\n_From @robinwilson16 on July 3, 2018 19:3_\n\nI have discovered a strange bug where certain text and HTML I add to a Razor page results in the following error and the project failing to build and this did not occur on 2.0 as I am migrating the existing pages:\r\n```\r\nrzc generate exited with code 1.\r\nWebApplication1\t\r\nC:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.design\\2.1.1\\build\\netstandard2.0\\Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets\t121\t\r\n```\r\n\r\nI can make the error go away by just changing the formatting slightly such as removing some of the blank line breaks, removing the emoticon or removing the img tag but either way the syntax is valid.\r\nAlso until I get rid of the error I cannot create any new razor pages either as get the same error.\r\n\r\nI did wonder if there was some special character but as changing any bits of the text cause it to work again it seems to just not like this exact sequence of text.\r\n\r\nI can replicate by creating a new .NET Core Web Application in VS.NET (latest build) and pasting the following into one of the Razor pages exactly as is:\r\n```\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-4\">\r\n            <img src=\"~/images/TroubleGettingFinanceWeCanHelp.jpg\" class=\"img-fluid mx-auto d-block\" alt=\"Trouble getting finance? We can help\">\r\n        </div>\r\n        <div class=\"col-sm-8\">\r\n            <p>Metro Centre Auto World is a family owned and run business.</p>\r\n\r\n            <p>We pride ourselves on the great service we provide to all of our customers.</p>\r\n\r\n            <p>Been turned down for finance? We can help with finance options tailored to suit your needs.</p>\r\n\r\n            <p>We understand that buying a car can be a daunting prospect, so we strive to make the buying process as simple and hassle-free as possible.</p>\r\n\r\n            <p>But don't just take our word for it, <a href=\"https://www.autotrader.co.uk/services/car-dealers/uk/north-east/tyne-and-wear/gateshead/mainline-uk-gateshead-dpp-27856/reviews/true\" target=\"_blank\" rel=\"noopener\">see what some of our customers have to say about us...</a></p>\r\n\r\n            <a class=\"btn btn-light\" href=\"https://www.autotrader.co.uk/services/car-dealers/uk/north-east/tyne-and-wear/gateshead/mainline-uk-gateshead-dpp-27856/reviews/true\" target=\"_blank\" rel=\"noopener\">\r\n                💬 See what people are saying\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n```\r\nI just need to remove a line break between any of the sets of P tags and the build is successful.\r\nThe page did have more content on it but I reduced it down to find which bit was triggering the error.\n\n_Copied from original issue: dotnet/corefx#30816_\n\n_Copied from original issue: aspnet/Home#3294_"},{"Id":"7964885959","Type":"PullRequestEvent","CreatedAt":"2018-07-14T00:18:58","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2477","RelatedDescription":"Merged pull request \"Change HTML splitting logic to not split on surrogate pairs.\" (#2477) at aspnet/Razor","RelatedBody":"- When a surrogate pair is about to be split down the middle we reduce the size of our split by 1 character. This way we split right before a surrogate pair. In the case of zero width joiners, if we split on a zero width joiner we still render valid bytes because the zero width joiner by itself can stand alone.\r\n- Added tests for the various split cases.\r\n\r\n#2470"},{"Id":"7964598178","Type":"IssuesEvent","CreatedAt":"2018-07-13T22:16:31","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2422","RelatedDescription":"Closed issue \"Asp.net core 2.1.0 RazorTemplateEngine not working\" (#2422) at aspnet/Razor","RelatedBody":"I am doing html minify on razortemplate engine on compiletime on asp.net core, but razortemplate engine does not work after updating project asp.net core 2.1.0.\r\n\r\nIt does not call CreateCodeDocument method. sample code below.\r\n\r\n```\r\npublic class CustomRazorTemplateEngine : RazorTemplateEngine\r\n{\r\nprivate HtmlMinifier _htmlMinifier = new HtmlMinifier();\r\n\r\npublic CustomRazorTemplateEngine(RazorEngine engine, RazorProject project) : base(engine, project)\r\n{\r\n    Options.ImportsFileName = \"_ViewImports.cshtml\";\r\n}\r\n\r\npublic override RazorCodeDocument CreateCodeDocument(RazorProjectItem projectItem)\r\n{\r\n    using (var inputStream = projectItem.Read())\r\n    {\r\n        using (var reader = new StreamReader(inputStream))\r\n        {\r\n            var text = reader.ReadToEnd();\r\n\r\n            var markupStart = text.IndexOf(\"<!DOCTYPE\");\r\n            var directives = text.Substring(0, markupStart);\r\n            var markup = text.Substring(markupStart);\r\n            text = directives + Minify(markup);\r\n            var byteArray = Encoding.UTF8.GetBytes(text);\r\n            var minifiedInputStream = new MemoryStream(byteArray);\r\n\r\n            var source = RazorSourceDocument.ReadFrom(minifiedInputStream, projectItem.PhysicalPath);\r\n            var imports = GetImports(projectItem);\r\n\r\n            return RazorCodeDocument.Create(source, imports);\r\n        }\r\n    }\r\n}\r\n\r\nprivate string Minify(string markup)\r\n{\r\n    MarkupMinificationResult result = _htmlMinifier.Minify(markup, string.Empty, Encoding.UTF8, true);\r\n\r\n    if (result.Errors.Count == 0)\r\n    {\r\n        MinificationStatistics statistics = result.Statistics;\r\n        if (statistics != null)\r\n        {\r\n            Console.WriteLine();\r\n            Console.WriteLine($\"Original size: {statistics.OriginalSize:N0} Bytes | Minified size: {statistics.MinifiedSize:N0} Bytes | Saved: {statistics.SavedInPercent:N2}%\");\r\n        }\r\n        //Console.WriteLine($\"{Environment.NewLine}Minified content:{Environment.NewLine}{Environment.NewLine}{result.MinifiedContent}\");\r\n\r\n        return result.MinifiedContent;\r\n    }\r\n    else\r\n    {\r\n        IList<MinificationErrorInfo> errors = result.Errors;\r\n\r\n        Console.WriteLine();\r\n        Console.WriteLine($\"Found {errors.Count:N0} error(s):\");\r\n\r\n        foreach (var error in errors)\r\n        {\r\n            Console.WriteLine($\" - Line {error.LineNumber}, Column {error.ColumnNumber}: {error.Message}\");\r\n        }\r\n\r\n        return markup;\r\n    }\r\n}\r\n}\r\n```\r\n\r\nstartup.cs\r\n`services.AddSingleton<RazorTemplateEngine, CustomRazorTemplateEngine>();`"},{"Id":"7964521281","Type":"IssuesEvent","CreatedAt":"2018-07-13T21:52:27","Actor":"jkotalik","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2479","RelatedDescription":"Opened issue \"Long path issues for ParserTests\" (#2479) at aspnet/Razor","RelatedBody":"Trying to pull master and it fails due to long path issues. Possible to shorten it?\r\n```\r\nerror: unable to create file test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/ParserTests/CSharpBlockTest/ParseBlockSkipsParenthesisedExpressionAndThenBalancesBracesIfFirstIdentifierIsIfKeywordWithNoElseBranches.syntaxtree.txt: Filename too long\r\n```"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"7879718396","Type":"IssuesEvent","CreatedAt":"2018-06-26T14:07:48","Actor":"zoidhddhdd","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/876","RelatedDescription":"Closed issue \"EADME\" (#876) at aspnet/Templates","RelatedBody":"This repo is OBSOLETE - please see the README file for information\r\n![01134d87a8218ca4a92147e6b3063fbbb394d975e1](https://user-images.githubusercontent.com/39866902/41505199-1db96088-720c-11e8-92f2-4e236659aefa.jpg)"},{"Id":"7835454530","Type":"IssuesEvent","CreatedAt":"2018-06-17T06:05:39","Actor":"zoidhddhdd","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/876","RelatedDescription":"Opened issue \"EADME\" (#876) at aspnet/Templates","RelatedBody":"This repo is OBSOLETE - please see the README file for information\r\n![01134d87a8218ca4a92147e6b3063fbbb394d975e1](https://user-images.githubusercontent.com/39866902/41505199-1db96088-720c-11e8-92f2-4e236659aefa.jpg)"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7957720314","Type":"IssuesEvent","CreatedAt":"2018-07-12T17:41:54","Actor":"abpiskunov","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/889","RelatedDescription":"Closed issue \"VS2017 - Please bring back file nesting in .NET Core projects\" (#889) at aspnet/Tooling","RelatedBody":"In Visual Studio 2015, we had file nesting via this amazing [extension](https://marketplace.visualstudio.com/items?itemName=MadsKristensen.FileNesting)\r\n\r\nHowever, in Visual Studio 2017 RC, that functionality no longer works outside of the built in file nesting for things like JavaScript/TypeScript.\r\n\r\nThis was a really valuable tool, and the author (@madskristensen) says that it can't be made to work in ASP.NET Core unless the tooling team makes changes. This was a very important part of my workflow for C# files, and I hope this is the right place to bring it up. I couldn't find another suggestion venue."},{"Id":"7885605120","Type":"IssuesEvent","CreatedAt":"2018-06-27T12:59:30","Actor":"Liero","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076) at aspnet/Tooling","RelatedBody":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details"},{"Id":"7875540891","Type":"IssuesEvent","CreatedAt":"2018-06-25T20:46:50","Actor":"jimmylewis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1057","RelatedDescription":"Closed issue \"Support for multi-line string values\" (#1057) at aspnet/Tooling","RelatedBody":"_From @alexvy86 on August 3, 2017 21:11_\n\nI'm using Akka.NET in a project and the way they do configuration is not-quite-JSON, but still a hierarchical structure, which I haven't been able to successfully integrate into `appsettings.json`. The only way I've been able to do it is to collapse all of their hierarchy into a single-line string value, which makes it a bit of a pain to work with.\r\n\r\nFor now I just put the whole thing as CDATA in an XML file and use the `AddXmlFile()` extension from `Microsoft.Extensions.Configuration.Xml` to read it, but it'd be preferable to have it in `appsetings.json`.\n\n_Copied from original issue: aspnet/Configuration#703_"},{"Id":"7844724634","Type":"IssuesEvent","CreatedAt":"2018-06-19T10:33:40","Actor":"Liero","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Opened issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076) at aspnet/Tooling","RelatedBody":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"341383119","IsPullRequest":false,"CreatedAt":"2018-07-16T03:46:33","Actor":"scottsauber","Number":"3333","RawContent":null,"Title":"2.1.302 SDK, but AspNetCore.App only downloads 2.1.1 instead of 2.1.2","State":"open","Body":"Hello, not really sure where to put this so I'm starting here.\r\n\r\nOn two different machines, I'm unable to get the AspNetCore.App package with no explicit version number to download 2.1.1 instead of 2.1.2.\r\n\r\nThis is on a dotnet new and is happening on two different machines.  On one of them, I even uninstalled all older SDK's other than 2.1.302.\r\n\r\nAm I doing something wrong?\r\n\r\nScreenshots:\r\n![image](https://user-images.githubusercontent.com/10823939/42742518-ddcfc896-8880-11e8-99f0-73488fe5218e.png)\r\n![image](https://user-images.githubusercontent.com/10823939/42742524-e1562afa-8880-11e8-9751-c4f1eda0d112.png)\r\n","Url":"https://github.com/aspnet/Home/issues/3333","RelatedDescription":"Open issue \"2.1.302 SDK, but AspNetCore.App only downloads 2.1.1 instead of 2.1.2\" (#3333)"},{"Id":"341312593","IsPullRequest":false,"CreatedAt":"2018-07-15T11:07:48","Actor":"ygoe","Number":"3332","RawContent":null,"Title":"Internal redirect for UseStatusCodePages","State":"open","Body":"The [documentation](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling?view=aspnetcore-2.1) explains how to use `app.UseStatusCodePages();` to show some content when a controller action returns `NotFound()` or something. This only shows very basic plain text. I could also redirect the user to another URL that has more content like /Error/404. But that would redirect the user away from the originating URL that caused the error. Redirecting the user away from the actual error page to a static page that always shows an error message is a bad thing. The user will not be able to verify the URL and probably find the problem. Also, reloading the page will not bring back the expected content when the error has been resolved meanwhile. Reloading the /Error/404 page will always show the error even if it doesn't exist anymore.\r\n\r\nSo what I need is an internal redirect to a more rich page that fits my site design, but doesn't change the visible URL.\r\n\r\nHow can I do that?","Url":"https://github.com/aspnet/Home/issues/3332","RelatedDescription":"Open issue \"Internal redirect for UseStatusCodePages\" (#3332)"},{"Id":"341295314","IsPullRequest":false,"CreatedAt":"2018-07-15T06:09:58","Actor":"huazhenhz","Number":"3331","RawContent":null,"Title":"Session OnStart and Session OnEnd","State":"open","Body":"To reopen the issue #3025 \r\nhttps://github.com/aspnet/Home/issues/3025\r\n\r\nI hope Session can have \"Session_Start\" and \"Session_End\" event mechanism.\r\n\r\nIf the mechanism is the same as Spring Session in Java Web, that's preferred.\r\n\r\nSpring Session has the similiar events such as \"SessionCreatedEvent\" and \"SessionDestroyedEvent\" (\"SessionDestroyedEvent\" includes \"SessionDeletedEvent\" and \"SessionExpiredEvent\".).\r\n\r\nThe relevant web sites about Spring Session below:\r\n\r\nSessionCreatedEvent:\r\nhttps://docs.spring.io/spring-session/docs/1.3.0.RELEASE/reference/html5/#api-redisoperationssessionrepository-sessioncreatedevent\r\n\r\nSessionDestroyedEvent:\r\nhttps://docs.spring.io/spring-session/docs/1.3.0.RELEASE/reference/html5/#api-redisoperationssessionrepository-sessiondestroyedevent\r\n\r\nI think the mechanism is important to .NET developers, and it can make ASP.NET Core more perfect.\r\n\r\nSo, \"Session_Start\" and \"Session_End\" events should be provided continuously in ASP.NET Core.\r\n\r\nThanks!\r\n","Url":"https://github.com/aspnet/Home/issues/3331","RelatedDescription":"Open issue \"Session OnStart and Session OnEnd\" (#3331)"},{"Id":"341289408","IsPullRequest":false,"CreatedAt":"2018-07-15T03:41:23","Actor":"thammadi","Number":"3330","RawContent":null,"Title":"Controllers declared in class library, returning 404 with AWS Lambda C#2.1","State":"open","Body":"I created an AWS Serverless solution with a Web API and Class Library projects (2.1.0). Class Library is referenced by the Web API project.\r\n\r\nController in Web API:\r\n```\r\n[Route(\"api/[controller]\")]\r\npublic class ValuesController : Controller\r\n{\r\n        [HttpGet]\r\n        public IEnumerable<string> Get()\r\n        {\r\n            return new string[] { \"value1\", \"value2\" };\r\n        }\r\n}\r\n```\r\nReferences: Microsoft.AspNetCore.App (2.1.0) and Microsoft.NETCore.App (2.1.0)\r\nCompatability version set in Startup.cs:\r\n```\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n}\r\n```\r\n\r\nController in Class Library: \r\n```\r\n[Route(\"api/[controller]\")]\r\npublic class ClassesController : Controller\r\n{\r\n        [HttpGet]\r\n        public IEnumerable<string> Get()\r\n        {\r\n            return new string[] { \"class1\", \"class2\" };\r\n        }\r\n}\r\n```\r\nReferences: Microsoft.AspNetCore.App (2.1.0) and Microsoft.NETCore.App (2.1.0)\r\nSDK reference in Class Library project file is updated from Microsoft.NET.Sdk to Microsoft.NET.Sdk.Web\r\n\r\nDeployed the above to AWS lambda (dotnet lambda package -c \"Release\")\r\n\r\nWhen tested, '/api/values' works as expected but '/api/classes' returns 404\r\nThis used to work with 2.0 version.\r\n\r\nDid I miss anything?","Url":"https://github.com/aspnet/Home/issues/3330","RelatedDescription":"Open issue \"Controllers declared in class library, returning 404 with AWS Lambda C#2.1\" (#3330)"},{"Id":"339126246","IsPullRequest":false,"CreatedAt":"2018-07-14T02:53:17","Actor":"John0King","Number":"3305","RawContent":null,"Title":"System.BadImageFormatException when use `TestServer.CreateClient()`","State":"closed","Body":"Today all my test fall with this Exception\r\nhere's the exception code \r\n\r\n```C#\r\npublic class TestFixture\r\n    {\r\n\r\n        private static TestServer _server;\r\n        private static HttpClient _client;\r\n\r\n        private readonly static object _lock = new object();\r\n        public static TestServer Server\r\n        {\r\n            get\r\n            {\r\n                lock (_lock)\r\n                {\r\n                    if (_server == null)\r\n                    {\r\n                        var builder = WebHostBuilderFactory.CreateFromAssemblyEntryPoint(typeof(Startup).Assembly, null);\r\n                        builder.UseSolutionRelativeContentRoot(\"src/<my-api-project-directory>\");\r\n                        _server = new TestServer(builder); // no exception here\r\n                    }\r\n                    return _server;\r\n                }\r\n            }\r\n        }\r\n\r\n        public static HttpClient Client\r\n        {\r\n            get\r\n            {\r\n                if(_client == null)\r\n                {\r\n                    _client = Server.CreateClient();  // throw System.BadImageFormatException\r\n                }\r\n                return _client;\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nthe excption says could not load file or assembly : < my  api project assembly >  or one of it's dependency\r\n\r\n## environment\r\nsdk: 2.1.301\r\nasp.net core : 2.1.1\r\ntest sdk: 15.7.2\r\nxunit:2.3.1\r\n\r\napi-project :  `<TargetFramework>net461</TargetFramework>` `<RuntimeIdenitifier>win7-x64</RuntimeIdenitifier>`\r\ntest-project:  `<TargetFramework>net461</TargetFramework>` \r\n","Url":"https://github.com/aspnet/Home/issues/3305","RelatedDescription":"Closed issue \"System.BadImageFormatException when use `TestServer.CreateClient()`\" (#3305)"},{"Id":"340336116","IsPullRequest":false,"CreatedAt":"2018-07-13T16:22:29","Actor":"natemcmaster","Number":"3316","RawContent":null,"Title":"Stop cascading version changes in servicing updates","State":"closed","Body":"Our policy since 1.0.0 has been to always cascade version updates in the packages we own. e.g. if Logging has a product change in 2.1.x, then Kestrel, EF Core, Mvc, etc also re-ship with the updated Logging dependency. This has been done for a variety of reasons:\r\n\r\n* NuGet does not show updates for transitive dependencies, only direct ones\r\n* NuGet does resolves the lowest compatible transitive dependencies\r\n* ASP.NET Core ships to both .NET Framework (where transitive dependency version matters) and .NET Core (where it matters less if you use the shared framework)\r\n\r\nWhile transitive dependencies is still an important scenario, this practice of always patching has led to bigger issues.\r\n\r\n* High probability users will unintentionally upgrade out of the shared framework: #3307 \r\n* Conflicts with metapackages that attempt to use exact version constraints: https://github.com/aspnet/Universe/issues/1180\r\n* A quality perception issue: the high volume of new versions in servicing updates with only metadata changes has created the impression that new versions of packages may not be very important. It's also made it appear like there are more issues product than there really are.\r\n* High volume of packages changing with only metadata changes. Of the last 301 packages published in a servicing update, only 11 contained actual changes to the implementation assemblies. (3.5%)\r\n\r\n## Proposal\r\n\r\n### Change 1\r\n\r\nStop cascading versions for every servicing patch. \r\n\r\nFor example, after 2.2.0 is finished, patching Logging to 2.2.1 would not necessarily mean Kestrel, Mvc, and SignalR need a 2.2.1 release. \r\n\r\n**Exceptions**\r\nThis is the general rule, but there may arise important scenarios when the transitive version matters. When these occur, we will make manual updates. Examples may include:\r\n\r\n* security issues\r\n* high-impact functional changes in patches\r\n* (unlikely to happen -- in theory) API additions or changes in a patch\r\n\r\n**Implementation plan**\r\nWe'll start by implementing this within ASP.NET Core on a repo by repo basis. Doing this from package to package within a repo is currently prohibitively expensive due to the way we use ProjectReference and nuspec generation.\r\n\r\n### Change 2\r\n\r\nWork with NuGet to provide better tooling for finding and updating out of date transitive references. Some proposals currently in the incubation: https://github.com/NuGet/Home/issues/5762, https://github.com/NuGet/Home/issues/2867 \r\n\r\n### Not changing\r\n\r\nMetapackages, such as Microsoft.AspNetCore, AspNetCore.App, and AspNetCore.All will continue to cascade versions. These provide the best way for users to get the latest set of things, without hoisting dozens of transitive dependencies to be direct dependencies.\r\n\r\ncc @DamianEdwards @davidfowl @Eilon @muratg ","Url":"https://github.com/aspnet/Home/issues/3316","RelatedDescription":"Closed issue \"Stop cascading version changes in servicing updates\" (#3316)"},{"Id":"340940743","IsPullRequest":false,"CreatedAt":"2018-07-13T16:00:14","Actor":"stap123","Number":"3326","RawContent":null,"Title":"Refactoring/Renaming Inside Razor Views","State":"closed","Body":"Is there a way to to have refactoring (specifically renaming things) work inside razor view files within VS2017? I thought I'd heard Damien mention that it was possible in a community stand up video a while ago but can't work out how to do it.\r\n\r\nIf it's not possible is it planned at all?\r\n","Url":"https://github.com/aspnet/Home/issues/3326","RelatedDescription":"Closed issue \"Refactoring/Renaming Inside Razor Views\" (#3326)"},{"Id":"341072710","IsPullRequest":false,"CreatedAt":"2018-07-13T15:57:05","Actor":"Eilon","Number":"3329","RawContent":null,"Title":"Suggest:The IOC resolves the relationship and displays the available implementation in the error message","State":"open","Body":"_From @hjkl950217 on May 8, 2018 8:28_\n\n.net environment：\r\nsdk:   .net core 2.1.104\r\nVS: 2017 Community\r\nsystem: windows 10 1709 pro N\r\n\r\nHopefully when ‘IOC’ parses an error, give some more detailed error information\r\n\r\nfor examples：\r\n\r\nIHttpContextAccessor interface，it injected when VS in debug mode。but release project，project does not contain the IHttpContextAccessor 。 this error message should show:\r\n\r\n“This interface is no corresponding implementation”\r\n\r\nbut However, sometimes this interface will be forcibly injected，This interface corresponding to the two to achieve。 this error message should show:\r\n\r\nThere are multiple implementations of this interface:\r\n{xxxx.xxxx.xxxx.IHttpContextAccessor }\r\n{bbbb.bbbb.bbbb.IHttpContextAccessor }\r\n\r\nThis can be more convenient positioning problem！\r\n\r\n##  about me project\r\n\r\nI am writing the company's basic class library，Use IHttpContextAccessor in the basic class library.\r\nBut,Other web api project Report this interface to resolve errors。\r\n\r\nPossible situations:\r\n1.Internal references to projects lead to。\r\n2.Used by other libraries referenced by the base class library。\r\n3.Library version issues\r\n4.other issues.\r\n\r\n\r\nI know that the official blog has described this issue，but it did not help me solve the problem.\r\nOccasionally, this problem will still occur, but it can hardly be solved.\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/core#1514_","Url":"https://github.com/aspnet/Home/issues/3329","RelatedDescription":"Open issue \"Suggest:The IOC resolves the relationship and displays the available implementation in the error message\" (#3329)"},{"Id":"341070392","IsPullRequest":false,"CreatedAt":"2018-07-13T15:50:04","Actor":"Eilon","Number":"3328","RawContent":null,"Title":"Not allowing to post huge data in AJAX call in ASP .net core 2","State":"open","Body":"_From @SattarMomin on May 16, 2018 9:52_\n\n# Issue Title\r\n\r\nNot allowing to post huge data in AJAX call in ASP .net core 2\r\n\r\n# General\r\n\r\nI have created 1 page in ASP .net core 2 MVC. Now I am posting data of form by AJAX call and calling Controller Action. But when data is huge on page it is giving error \"Failed to load resource: the server responded with a status of 500 (Internal Server Error)\", same is working fine when data is less.\r\n\r\nI am sure issue is due to exceeding data size limit. \r\n\r\nI have tried '[DisableRequestSizeLimit]' at action level and .UseKestrel(options => { options.Limits.MaxRequestBodySize = null; }) at global level, but giving same error.\r\n\r\nKindly suggest\r\n\n\n_Copied from original issue: dotnet/core#1566_","Url":"https://github.com/aspnet/Home/issues/3328","RelatedDescription":"Open issue \"Not allowing to post huge data in AJAX call in ASP .net core 2\" (#3328)"},{"Id":"340956108","IsPullRequest":false,"CreatedAt":"2018-07-13T09:55:00","Actor":"Edward-Zhou","Number":"3327","RawContent":null,"Title":"CORS did not add valid Origins to Response if Method is not Allowed","State":"open","Body":"I have configured CORS like below:\r\n```\r\nservices.AddCors(x =>\r\n            {\r\n                x.AddPolicy(CORS.AllowPostMethod,\r\n                    policyBuilder =>\r\n                    {\r\n                        policyBuilder\r\n                            .WithOrigins(\"https://localhost:44326\")\r\n                            .WithMethods(HttpMethods.Post)\r\n                            .AllowAnyHeader();\r\n                    });\r\n            });\r\n```\r\nAnd use it like this:   \r\n```\r\n[HttpPut(\"{id}\")]\r\n        [EnableCors(CORS.AllowPostMethod)] \r\n        public void Put(int id)\r\n        {\r\n        }\r\n```\r\nIf I send request like this:\r\n```\r\n$.ajax({\r\n    url: \"https://localhost:44329/api/User/12\",\r\n    type: \"PUT\",\r\n});\r\n```\r\nIt will throw error below instead of \"Method PUT is not allowed by Access-Control-Allow-Methods in preflight response\".\r\n\r\n> Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'https://localhost:44326' is therefore not allowed access.\r\n\r\nAfter checking the source code [EvaluatePreflightRequest](https://github.com/aspnet/CORS/blob/8e4d3aacb3153f2a1338e228f0ea096e242d746a/src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs#L111). It did not add the valid `Origin` to `CorsResult `.\r\n\r\nShould the `EvaluatePreflightRequest` like below?\r\n\r\n```\r\n                 public virtual void EvaluatePreflightRequest(HttpContext context, CorsPolicy policy, ref CorsResult result)\r\n        {\r\n            var origin = context.Request.Headers[CorsConstants.Origin];\r\n            if (!IsOriginAllowed(policy, origin))\r\n            {\r\n                return;\r\n            }\r\n            result.AllowedOrigin = origin;\r\n\r\n            var accessControlRequestMethod = context.Request.Headers[CorsConstants.AccessControlRequestMethod];\r\n            if (StringValues.IsNullOrEmpty(accessControlRequestMethod))\r\n            {\r\n                return;\r\n            }\r\n\r\n            var requestHeaders =\r\n                context.Request.Headers.GetCommaSeparatedValues(CorsConstants.AccessControlRequestHeaders);\r\n\r\n            if (!policy.AllowAnyMethod)\r\n            {\r\n                var found = false;\r\n                for (var i = 0; i < policy.Methods.Count; i++)\r\n                {\r\n                    var method = policy.Methods[i];\r\n                    result.AllowedMethods.Add(method);\r\n                    if (string.Equals(method, accessControlRequestMethod, StringComparison.OrdinalIgnoreCase))\r\n                    {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found)\r\n                {\r\n                    _logger?.PolicyFailure();\r\n                    _logger?.AccessControlMethodNotAllowed(accessControlRequestMethod);\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            if (!policy.AllowAnyHeader &&\r\n                requestHeaders != null)\r\n            {\r\n                foreach (var requestHeader in requestHeaders)\r\n                {\r\n                    if (!CorsConstants.SimpleRequestHeaders.Contains(requestHeader, StringComparer.OrdinalIgnoreCase) &&\r\n                                                  !policy.Headers.Contains(requestHeader, StringComparer.OrdinalIgnoreCase))\r\n                    {\r\n                        _logger?.PolicyFailure();\r\n                        _logger?.RequestHeaderNotAllowed(requestHeader);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            AddOriginToResult(origin, policy, result);\r\n            result.SupportsCredentials = policy.SupportsCredentials;\r\n            result.PreflightMaxAge = policy.PreflightMaxAge;\r\n            result.AllowedMethods.Add(accessControlRequestMethod);\r\n            AddHeaderValues(result.AllowedHeaders, requestHeaders);\r\n            _logger?.PolicySuccess();\r\n        }\r\n```","Url":"https://github.com/aspnet/Home/issues/3327","RelatedDescription":"Open issue \"CORS did not add valid Origins to Response if Method is not Allowed\" (#3327)"},{"Id":"340821013","IsPullRequest":false,"CreatedAt":"2018-07-12T22:32:12","Actor":"avechuche","Number":"3325","RawContent":null,"Title":"Cannot capture 405 error with CORS - CORE API","State":"open","Body":"Hi, I am trying to get a 405 method not allowed error but it is impossible and I do not know why. I have the following configuration.\r\n\r\n```\r\n//Startup.cs\r\nservicesCollection.AddCors(x =>\r\n{\r\n    x.AddPolicy(CORS.AllowPutMethod,\r\n        policyBuilder =>\r\n        {\r\n            policyBuilder.WithOrigins(\"http://localhost:4200\")\r\n                .WithMethods(HttpMethods.Put).AllowAnyHeader();\r\n        });\r\n    x.AddPolicy(CORS.AllowPostMethod,\r\n        policyBuilder =>\r\n        {\r\n            policyBuilder.WithOrigins(\"http://localhost:4200\")\r\n                .WithMethods(HttpMethods.Post).AllowAnyHeader();\r\n        });\r\n});\r\n\r\npublic static class CORS\r\n{\r\n    public const string AllowPutMethod = nameof(AllowPutMethod);\r\n\r\n    public const string AllowPostMethod = nameof(AllowPostMethod);\r\n}\r\n\r\n[ApiController]\r\n[Route(\"api/[controller]\")]\r\npublic class UserController : ControllerBase\r\n{\r\n    // PUT: api/User/5\r\n    [HttpPut(\"{id}\")]\r\n    [EnableCors(CORS.AllowPostMethod)]\r\n    public void Put(int id, UserDTO currentUser)\r\n    {\r\n    }\r\n\r\n}\r\n```\r\nMy intention is that this method only accepts a PUT request, to which I add [EnableCors (CORS.AllowPostMethod)] to force an error, but this does not generate any errors, it works perfectly, but if I comment that part // [EnableCors (CORS .AllowPostMethod)] method does not work and returns error 500. Its a ASP CORE bug or or i am the bug?","Url":"https://github.com/aspnet/Home/issues/3325","RelatedDescription":"Open issue \"Cannot capture 405 error with CORS - CORE API\" (#3325)"},{"Id":"340818690","IsPullRequest":false,"CreatedAt":"2018-07-12T22:21:39","Actor":"ryanbrandenburg","Number":"3324","RawContent":null,"Title":"Remove `ResourceManagerWithCultureStringLocalizer` and `WithCulture` interface member","State":"open","Body":"The [ResourceManagerWithCultureStringLocalizer](https://github.com/aspnet/Localization/blob/43b974482c7b703c92085c6f68b3b23d8fe32720/src/Microsoft.Extensions.Localization/ResourceManagerWithCultureStringLocalizer.cs#L18) and [WithCulture](https://github.com/aspnet/Localization/blob/master/src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizer.cs#L154-L170) interface member are often sources of confusion for users of Localization, especially if they want to create their own `IStringLocalizer` implementation. These items give the user the impression that we expect an `IStringLocalizer` instance to be \"per-language, per-resource\", when actually they should only be \"per-resource\", with the language searched for determined by the `CultureInfo.CurrentUICulture` at execution time.\r\n\r\nNeither of these has any usage that I was able to find with a cursory search, and it's difficult for me to imagine when they would be the correct option, so let's just get rid of them in 3.0.","Url":"https://github.com/aspnet/Home/issues/3324","RelatedDescription":"Open issue \"Remove `ResourceManagerWithCultureStringLocalizer` and `WithCulture` interface member\" (#3324)"},{"Id":"340728551","IsPullRequest":false,"CreatedAt":"2018-07-12T17:24:30","Actor":"karelz","Number":"3323","RawContent":null,"Title":"CORs in webapi not returning valid response","State":"open","Body":"_From @FlyingWraptor on July 12, 2018 15:18_\n\nHello there, so I've been migrating all API's to .net core but it's denying me from doing so with this issue.\r\nSo I've enabled CORs to provide access from `www.domain.tld` to my api at `api.domain.tld` using only specific methods. Angular requires the `Access-Control-Allow-Methods`  header to be returned but the build in CORs doesn't do that at all.\r\n\r\n.NET Core SDK: 2.1.301\r\n\r\nThe request contains the following:\r\n```\r\nOPTIONS /someuri HTTP/1.1\r\nOrigin: https://www.domain.tld\r\nHost: api.domain.tld\r\nAccess-Control-Request-Method: GET\r\nAccess-Control-Request-Headers: content-type\r\nCache-Control: no-cache\r\nPostman-Token: abdb2984-e399-44d1-8048-777c65dcec5e\r\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\r\n```\r\n\r\nThe response in postman:\r\n```\r\nAccess-Control-Allow-Headers →content-type\r\nAccess-Control-Allow-Origin →https://www.domain.tld\r\nDate →Thu, 12 Jul 2018 15:14:45 GMT\r\nServer →Kestrel\r\nVary →Origin\r\n```\r\n\r\nMy CORs configuration:\r\n```csharp\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n\tservices.AddCors();\r\n}\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n\t...\r\n\r\n\r\n\tapp.UseCors(builder => {\r\n\t\tbuilder.WithOrigins(\"http://localhost:4200\", \"https://www.domain.tld\")\r\n\t\t\t.WithMethods(\"POST\", \"GET\", \"OPTIONS\")\r\n\t\t\t.AllowAnyHeader();\r\n\t});\r\n\r\n\tapp.UseMvc();\r\n}\r\n```\r\n\r\nI've worked around this issue using the following code and commenting out `AddCors()` and `UseCors()`:\r\n```csharp\r\n[HttpOptions]\r\npublic void Options()\r\n{\r\n\tResponse.Headers.Add(\"Access-Control-Allow-Headers\", \"content-type\");\r\n\tResponse.Headers.Add(\"Access-Control-Allow-Origin\", \"https://www.domain.tld\");\r\n\tResponse.Headers.Add(\"Access-Control-Allow-Methods\", \"GET\");\r\n}\r\n```\r\n\r\nThis worked perfectly for now:\r\n```\r\nAccess-Control-Allow-Headers →content-type\r\nAccess-Control-Allow-Methods →GET\r\nAccess-Control-Allow-Origin →https://www.domain.tld\r\nContent-Length →0\r\nDate →Thu, 12 Jul 2018 15:16:11 GMT\r\nServer →Kestrel\r\n```\r\n\r\n\r\nIs this a bug or something I'm not known with yet?\r\n\r\n\n\n_Copied from original issue: dotnet/corefx#31024_","Url":"https://github.com/aspnet/Home/issues/3323","RelatedDescription":"Open issue \"CORs in webapi not returning valid response\" (#3323)"},{"Id":"340636816","IsPullRequest":false,"CreatedAt":"2018-07-12T16:34:24","Actor":"JohnGoldsmith","Number":"3320","RawContent":null,"Title":"Is there a way to add a default page convention that looks at the folder name","State":"closed","Body":"Hi,\r\n\r\nIs there a way to add a routing convention for Razor Pages that allows you to use the parent folder name as a default route?\r\n\r\nFor example, if I have `Pages/Products`, folder structure I'd prefer to have a default page named `Products.cshtml` and for `Pages/Services`, `Services.cshtml` (as opposed to having to use `Index.cshtml` in both cases).\r\n\r\nThis is just to make things clearer in code ie the model would then be name ProductsModel and all open tabs in Visual Studio wouldn't have to say \"Index..\"\r\n\r\nThanks\r\n\r\nJohn \r\n","Url":"https://github.com/aspnet/Home/issues/3320","RelatedDescription":"Closed issue \"Is there a way to add a default page convention that looks at the folder name\" (#3320)"},{"Id":"340591425","IsPullRequest":false,"CreatedAt":"2018-07-12T16:33:59","Actor":"NN---","Number":"3319","RawContent":null,"Title":"Microsoft.AspNet.WebApi.Core (5.2.6) is not compatible with .NET Core 2.1","State":"closed","Body":"After installing nuget Microsoft.AspNet.WebApi.Core I get the following message:\r\n \r\n```\r\nPackage 'Microsoft.AspNet.WebApi.Core 5.2.6' was restored using '.NETFramework,Version=v4.6.1' instead of the project target framework '.NETCoreApp,Version=v2.1'. This package may not be fully compatible with your project.\r\n```\r\n\r\n","Url":"https://github.com/aspnet/Home/issues/3319","RelatedDescription":"Closed issue \"Microsoft.AspNet.WebApi.Core (5.2.6) is not compatible with .NET Core 2.1\" (#3319)"},{"Id":"340577285","IsPullRequest":false,"CreatedAt":"2018-07-12T16:25:50","Actor":"ShiningRush","Number":"3318","RawContent":null,"Title":"Is there anyway to add dynamic proxy in DI?","State":"closed","Body":"My team is now work on dotnet2.1 and we use grpc instead of webapi,  so not use mvc(and its filter).\r\nMy issue is how to implement AOP in dotnet2.1?\r\nAs far as i know, i could use autofac and castle.dynamicproxy to implement AOP, but i really hope the DI of dotnet2.1 could do it natively.\r\n\r\nDid i miss someway to do it?","Url":"https://github.com/aspnet/Home/issues/3318","RelatedDescription":"Closed issue \"Is there anyway to add dynamic proxy in DI?\" (#3318)"},{"Id":"340694672","IsPullRequest":false,"CreatedAt":"2018-07-12T15:44:33","Actor":"simonpbond","Number":"3322","RawContent":null,"Title":"Where is Request.Content and ReadAsMultipartAsync","State":"open","Body":"I am currently trying to understand the handling of multipart form data and all the samples I can find contain:\r\n\r\nRequest.Content.ReadAsMultipartAsync(provider);\r\n\r\n**I'm using WebApi with .Net Core 2.1 and it's telling me:**\r\n\r\nHttpRequest does not contain a definition for Content.\r\nHave tried search MSDN etc. but cannot find any reference to it either.\r\n\r\nCan anyone point me in the right direction?\r\n\r\n","Url":"https://github.com/aspnet/Home/issues/3322","RelatedDescription":"Open issue \"Where is Request.Content and ReadAsMultipartAsync\" (#3322)"},{"Id":"340656509","IsPullRequest":false,"CreatedAt":"2018-07-12T14:13:44","Actor":"peacecwz","Number":"3321","RawContent":null,"Title":"Http.Internal.DefaultHttpRequest Get Query null exception","State":"open","Body":"I developed an API and It's working on Docker, Nginx and Kube. I tried load test and i got this exception in internal http\r\n\r\n## **StackTrace**\r\n\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.AspNetCore.Http.Internal.DefaultHttpRequest.get_Query()\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProviderFactory.CreateValueProviderAsync(ValueProviderFactoryContext context)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.<CreateAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.<CreateAsync>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider.<>c__DisplayClass0_0.<<CreateBinderDelegate>g__Bind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextExceptionFilterAsync>d__23.MoveNext()\r\n```\r\n\r\nI looked HttpAbstractions and i found QueryFeature and got null exception","Url":"https://github.com/aspnet/Home/issues/3321","RelatedDescription":"Open issue \"Http.Internal.DefaultHttpRequest Get Query null exception\" (#3321)"},{"Id":"339705820","IsPullRequest":false,"CreatedAt":"2018-07-12T02:51:10","Actor":"tker","Number":"3309","RawContent":null,"Title":"No XML encryptor configured warning ","State":"closed","Body":"When running ASP.Net Core 2.0 Web API endpoints which use JWT based authentication we always see the following error, despite not - as I understand matters - requiring Data Protection: \r\n\r\n`warn: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]       No XML encryptor configured. Key {GUID} may be persisted to storage in unencrypted form.`\r\n\r\nIs there some way of preventing this warning? Will this cause us any issues?\r\n\r\nOur system comprises of Web API HTTP endpoints running on Docker managed by Kubernetes with all JWTs issued by an authentication endpoint.","Url":"https://github.com/aspnet/Home/issues/3309","RelatedDescription":"Closed issue \"No XML encryptor configured warning \" (#3309)"},{"Id":"340409411","IsPullRequest":false,"CreatedAt":"2018-07-11T21:18:36","Actor":"dazinator","Number":"3317","RawContent":null,"Title":"IFileProvider - changetoken for glob pattern which file changed?","State":"open","Body":"How to know what files have caused a change token covering a glob pattern, to be signalled?\r\nCreated because #2549 was closed.","Url":"https://github.com/aspnet/Home/issues/3317","RelatedDescription":"Open issue \"IFileProvider - changetoken for glob pattern which file changed?\" (#3317)"},{"Id":"340321525","IsPullRequest":false,"CreatedAt":"2018-07-11T16:42:03","Actor":"weedkiller","Number":"3315","RawContent":null,"Title":"Ship with deployment installer script for Linux, and web publish profiles","State":"open","Body":"Hello,\r\n\r\nEven after 3 yrs of ASP-on-Linux, **Linux Webhosts support for ASP sites is non-existant/minimal**, For e.g.[ digital ocean has removed their .NET runtime scripts](https://www.digitalocean.com/community/questions/is-net-core-still-supported-in-do-or-was-it-deprecated), as a result the adoption is very low. \r\n\r\n1. In the release package a link to an installer for a develop to publish and run ASP sites on Linux hosts is desperately needed, in the pic. below you can see D.O. dropped support\r\n2. Enhance documentation on support/configuration for linux\r\n________________________________________________\r\n![image](https://user-images.githubusercontent.com/21086190/42587171-ebb9887e-8507-11e8-9bcb-ae5828fbedb6.png)\r\n\r\n\r\n\r\nThanks","Url":"https://github.com/aspnet/Home/issues/3315","RelatedDescription":"Open issue \"Ship with deployment installer script for Linux, and web publish profiles\" (#3315)"},{"Id":"340223650","IsPullRequest":false,"CreatedAt":"2018-07-11T16:41:01","Actor":"smithaitufe","Number":"3314","RawContent":null,"Title":"ASP.NET Core is slow","State":"closed","Body":"I am having a serious issue with ASPNET Core EF Queries. \r\n\r\nThey are very slow for me and it is worse when I include Include or ThenInclude in my code.\r\n\r\nI am using version 2.0\r\nPlease what is the solution to this?\r\n\r\n\r\n```c#\r\n            var sql = $\"SELECT b.* FROM FREETEXTTABLE(Books, Description, '{query}') as t JOIN    Books as b ON t.[Key] = b.id\";\r\n            var books = _context.Books.FromSql(sql);\r\n            \r\n            books = books\r\n            .Include(book => book.Publisher)\r\n            .Include(book => book.BookAuthors).ThenInclude(bookAuthor => bookAuthor.Author)\r\n            .Include(book => book.Cover)\r\n            .AsNoTracking();\r\n\r\n            var pagedBooks = await PaginatedList<Book>.CreateAsync(books, currentPage ?? 1, 5);\r\n            var model = new BookListViewModel() { PagedBooks = pagedBooks, Query = query };\r\n            return View(model);\r\n```\r\nI often get Timeout errors.\r\n\r\nPlease I need help. I can't upgrade to 2.1 at the moment\r\n","Url":"https://github.com/aspnet/Home/issues/3314","RelatedDescription":"Closed issue \"ASP.NET Core is slow\" (#3314)"},{"Id":"340100062","IsPullRequest":false,"CreatedAt":"2018-07-11T05:47:01","Actor":"h0useRus","Number":"3313","RawContent":null,"Title":"Move MVC content formatters to http abstraction level","State":"open","Body":"Hi guys,\r\n\r\nIs any plans to make content formatters as http shared part of Asp.Net Core. Very common situation when formatters used by MVC API also should be used for simple realization of HttpClient. \r\n\r\nCurrently for client side used System.Net.Http.Formatting from MVC5 which is not follow new architecture with splitting Input and Output formatters and  many other staff which I found very useful for clients. Using MVC packages required to download at least full MVC stack just to make request, which is also not good.\r\n\r\nAlso, it makes harder using Routing styled simple APIs to control content without adding MVC libraries.\r\n\r\nIt was very good benefit of old MVC5 where you using same libraries for server and client, why it was stopped in AspNet Core?\r\n\r\n","Url":"https://github.com/aspnet/Home/issues/3313","RelatedDescription":"Open issue \"Move MVC content formatters to http abstraction level\" (#3313)"},{"Id":"339956326","IsPullRequest":false,"CreatedAt":"2018-07-10T18:23:49","Actor":"vejandla","Number":"3312","RawContent":null,"Title":"Anti forgery token with angular SPA (CSRF)","State":"open","Body":"I have implemented `Anti forgery token with angular SPA` in the following way, \r\n\r\ndid this in the web api middle ware, for setting a cookie on clients browser, \r\nThis will set the cookie for every api call.\r\n\r\n```c#\r\nvar tokens = antiforgery.GetAndStoreTokens(context);\r\n                   context.Response.Cookies.Append(\"XSRF-TOKEN\", tokens.RequestToken,\r\n                        new CookieOptions {HttpOnly = false, Secure = context.Request.IsHttps});\r\n\r\nservices.AddAntiforgery(options => options.HeaderName = \"X-XSRF-TOKEN\");\r\n```\r\n\r\nIn spa, I am currently adding the cookie value to header manually in the request interceptor, as both are in different domains. \r\n\r\n```c#\r\nif (Cookies.get('XSRF-TOKEN')) {\r\n        config.headers['X-XSRF-TOKEN'] = Cookies.get('XSRF-TOKEN');\r\n }\r\n```\r\n\r\nThis seems to be working fine without any issues. \r\n\r\nBut, I was trying to understand this whole concept. So I have tried the following.\r\n\r\n1) Since the API sets cookie on every call, on display of login screen, the cookie exists on browser, So I manually grabbed the cookie value and kept it in notepad.\r\n2) Hard coded the cookie value in the request interceptor instead of getting it from cookie. \r\n3) Refreshed the entire webpage. api sets a new cookie with a different value.\r\n4) Now made a post call, Value in the header and cookie is different, I can see in the request headers in the browsers, but api treated that as valid antiforgery token.\r\n\r\n**at least, before I did this test, I assumed the header value and cookie value should be same and only so validateantiforgerytoken attribute treats it as right post request.**\r\n\r\nIf this assumption is wrong, \r\n1) what is this preventing here? \r\n2) why do i have to do this implementation in the first place.?\r\n3) what if anyone just access our login page and grabs cookie value and make a call from post man or any other place by adding this cookie value in the header?\r\n\r\n_Totally lost in different thoughts !! Hope someone ran into these thoughts or problems already and provide some help._ \r\n\r\nThanks\r\n","Url":"https://github.com/aspnet/Home/issues/3312","RelatedDescription":"Open issue \"Anti forgery token with angular SPA (CSRF)\" (#3312)"},{"Id":"339939903","IsPullRequest":true,"CreatedAt":"2018-07-10T18:19:37","Actor":"dougbu","Number":"3311","RawContent":null,"Title":"Remove references to the `dev` branch","State":"closed","Body":"","Url":"https://github.com/aspnet/Home/pull/3311","RelatedDescription":"Closed or merged PR \"Remove references to the `dev` branch\" (#3311)"},{"Id":"339717135","IsPullRequest":false,"CreatedAt":"2018-07-10T07:00:59","Actor":"Botldoiz","Number":"3310","RawContent":null,"Title":"\"dotnet publish\" with PublishWithAspNetCoreTargetManifest set to false does not publish with third party dependencies","State":"open","Body":"Trying to publish ASP .NET Core app with the dotnet CLI and its third party dependencies does not work, despite \"PublishWithAspNetCoreTargetManifest\" is set to false in the .csproj. Unfortunately, publishing the app as self contained is no option for us.\r\n\r\n**Repro steps:**\r\n* Create .NET core 2.1 application\r\n* add e.g. ASP .NET Core 2.1 nuget package\r\n* publish: **dotnet publish <YOUR .CSPROJ> --configuration Release --framework netcoreapp2.1**\r\n\r\nAs far as I have seen, \"dotnet publish\" for .NET Core 2.0 uses the \"PublishWithAspNetCoreTargetManifest.targets\" file -> there its stated how to handle \"PublishWithAspNetCoreTargetManifest=false\".\r\nLink: https://github.com/aspnet/MetaPackages/blob/rel/2.0.0/src/Microsoft.AspNetCore.All/build/PublishWithAspNetCoreTargetManifest.targets\r\n\r\nIn .NET Core 2.1 SDK this file is nonexistent.","Url":"https://github.com/aspnet/Home/issues/3310","RelatedDescription":"Open issue \"\"dotnet publish\" with PublishWithAspNetCoreTargetManifest set to false does not publish with third party dependencies\" (#3310)"},{"Id":"339633950","IsPullRequest":false,"CreatedAt":"2018-07-09T22:51:47","Actor":"Eilon","Number":"3308","RawContent":null,"Title":"CORS for CrossDomain is not working","State":"open","Body":"_From @skkanagaraj on June 12, 2018 11:6_\n\n OPTIONS https://xyz.co.uk/front/api/Eze/GetEcPrt?_=1528800677059 401 (Unauthorized)\r\n\r\n1. Automatically Converts 'Get' to 'Option' request.\r\n2. Failed to load.  https://xyz.co.uk/front/api/Eze/GetEcPrt?_=1528800677059: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'https://liontrust.sharepoint.com' is therefore not allowed access. The response had HTTP status code 401.\n\n_Copied from original issue: aspnet/Proxy#95_","Url":"https://github.com/aspnet/Home/issues/3308","RelatedDescription":"Open issue \"CORS for CrossDomain is not working\" (#3308)"},{"Id":"339596621","IsPullRequest":false,"CreatedAt":"2018-07-09T20:31:54","Actor":"natemcmaster","Number":"3307","RawContent":null,"Title":"Remove the PackageReference to Microsoft.AspNetCore.App/All from project files","State":"open","Body":"Most NuGet packages provide both compilation and runtime assets. Microsoft.**NETCore**.App, Microsoft.**AspNetCore**.App, and Microsoft.AspNetCore.All effectively only provide the first - compilation references. Users must install other runtime assets to make .NET Core apps work but this is not obvious or intuitive, and not always possible: for example, Azure Web Apps, AWS, Google Cloud, etc. This violates a reasonable expectation of using a NuGet package, and has been a continual source of grief for users. Microsoft.NETCore.App had the same issues, but these were largely resolved by (1) making the PackageReference implicit based on TargetFramework and (2) pinning the package version to the lowest stable release. We should follow this pattern in the Microsoft.AspNetCore.App and .All metapackages.\r\n\r\n## Proposal\r\n\r\n**These changes are currently open for discussion**. I may update this issue as we tweak this proposal.\r\n\r\n### Change 1\r\n\r\nRemove the PackageReference to Microsoft.AspNetCore.App/All from the .csproj file. Make it implicit when the RuntimeFrameworkName property is set. An ASP.NET Core web project would look like this.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <RuntimeFrameworkName>Microsoft.AspNetCore.App</RuntimeFrameworkName>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nWhen RuntimeFrameworkName is set, an implicit PackageReference is added to the project, but this will use the [IsImplicitlyDefined property](https://docs.microsoft.com/en-us/nuget/tools/package-manager-ui#updating-a-package), which hides updates from NuGet UI.\r\n\r\nThe default implicit package reference will stay pinned to version AspNetCore.App 2.1.1 to maximize compatibility with the most deployment environments.\r\n\r\nThis implicit version will also use the [self-contained rollforward](https://github.com/dotnet/designs/pull/36) mechanism used by Microsoft.NETCore.App today.\r\n\r\nIf users need to elevate the minimum version of the shared runtime, they can use RuntimeFrameworkVersion (which is already supported by Microsoft.NETCore.App).\r\n\r\n```xml\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <RuntimeFrameworkName>Microsoft.AspNetCore.App</RuntimeFrameworkName>\r\n    <!-- Less common, but available for users who want to ensure a minimum version. -->\r\n    <RuntimeFrameworkVersion>2.1.789</RuntimeFrameworkVersion>\r\n  </PropertyGroup>\r\n```\r\n\r\n### Change 2\r\n\r\n> **Update July 11:** this piece is moving forward in 2.1.3, regardless of the other changes. We believe it helps address some issues, even if we don't land Changes 1, 3, and 4 until later. See https://github.com/aspnet/Home/issues/3316\r\n\r\nAll packages which share a dependency with Microsoft.AspNetCore.App should target 2.1.0 unless there is an important reason to force a patched version. This applies to most ASP.NET Core packages, and should also apply to third-party libraries.\r\n\r\nWe'll start by implementing this within ASP.NET Core on a repo by repo basis. Doing this from package to package within a repo is currently prohibitively expensive. We'll re-evaluate this in 2.2 or 3.0.\r\n\r\n### Change 3 \r\n\r\nIssue warnings when Microsoft.AspNetCore.App/All are explicit references and encourage users to switch to the new implicit reference format. Wording might say something like:\r\n\r\n> warning: A PackageReference for 'Microsoft.AspNetCore.App' was included in your project.\r\n> We recommend removing this and adding the RuntimeFrameworkName property.\r\n> ```\r\n>  <PropertyGroup>\r\n>     <RuntimeFrameworkName>Microsoft.AspNetCore.App</RuntimeFrameworkName>\r\n>  </PropertyGroup>\r\n> ```\r\n> For more information, see https://aka.ms/sdkimplicitrefs\r\n\r\n### Change 4\r\nWhen both `RuntimeFrameworkName` and an explicit PackageReference are present, issue the same warning that currently exists for Microsoft.NETCore.App. It would look like this:\r\n\r\n> warning NETSDK1023: A PackageReference for 'Microsoft.AspNetCore.App' was included in your project. This package is implicitly referenced by the .NET SDK and you do not typically need to reference it from your project. For more information, see https://aka.ms/sdkimplicitrefs\r\n\r\n## Impact\r\n\r\n### Scenario: 2.1.x patch updates\r\n\r\n**Currently:** users need to update the PackageReference to ensure their packages and the shared runtime stay aligned. Users _must_ install the latest ASP.NET Core shared runtime on their servers.\r\n\r\n**Change:** no modification to the .csproj file would be necessary. Users _should_ install the latest ASP.NET Core shared runtime on their servers.\r\n\r\n### Scenario: patch updates for ASP.NET Core on .NET Framework\r\n\r\n**Currently:** we cascade version udpates and re-release packages to ensure updating PackageReference hoists all transitives to latest.\r\n\r\n**Change:** if there are changes in transitive dependencies which are important for users to consume, they may need to add new explicit references to get the latest patched versions.\r\n\r\n### Scenario: Minor releases\r\n\r\n**Currently**: users would need to update the TargetFramework property to `netcoreapp2.2` *and* the PackageReference to Microsoft.AspNetCore.App\r\n\r\n**Change:** users only need to update the TargetFramework property to `netcoreapp2.2`.\r\n\r\ncc @DamianEdwards @davidfowl @dsplaisted @nguerrera @JunTaoLuo  @mlorbetske @normj \r\n\r\n","Url":"https://github.com/aspnet/Home/issues/3307","RelatedDescription":"Open issue \"Remove the PackageReference to Microsoft.AspNetCore.App/All from project files\" (#3307)"},{"Id":"339232242","IsPullRequest":false,"CreatedAt":"2018-07-09T16:30:48","Actor":"Whathecode","Number":"3306","RawContent":null,"Title":"Partial Tag Helper 'for' attribute not forwarding model to controller correctly","State":"closed","Body":"While updating to .NET Core 2.1, I replaced my `@Html.Partial` loads to [the new partial tag helper](https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/built-in/partial-tag-helper?view=aspnetcore-2.1) as recommended by the compiler warnings.\r\n\r\nIn two cases, I could rely on the `for` syntax, rather than using the `model` attribute:\r\n\r\n> The `for` attribute assigns a ModelExpression to be evaluated against the current model. A `ModelExpression` infers the `@Model`. syntax. For example, `for=\"Product\"` can be used instead of `for=\"@Model.Product\"`. \r\n\r\nAt first, I had the impression this worked as my partials showed up correctly. However, I just found out my partial reloads stopped working due the the model not being transferred to my controllers correctly; something which worked just fine before.\r\n\r\nI use the following javascript to intercept a form submission and send/handle a post request:\r\n```\r\n$(addForm).on(\"submit\", function (e) {\r\n    e.preventDefault();\r\n\r\n    // Do not submit if form is invalid.\r\n    if (!$(this).valid()) {\r\n        return false;\r\n    }\r\n\r\n    $.ajax({\r\n        url: $(this).attr(\"action\"),\r\n        type: \"POST\",\r\n        data: $(this).serialize(),\r\n        complete: function () {\r\n            ...\r\n        }\r\n    }).done(function (result) {\r\n        partialView.html(result);\r\n        ...\r\n    });\r\n});\r\n```\r\n\r\nWhen I change my partials to use the `model` attribute instead, things work fine again: `<partial name=\"Details/_CommentsPartial\" model=\"@Model.Comments\" />`.\r\n\r\nThis seems like a bug to me? Possibly relevant, this is a nested partial (partial in partial).","Url":"https://github.com/aspnet/Home/issues/3306","RelatedDescription":"Closed issue \"Partial Tag Helper 'for' attribute not forwarding model to controller correctly\" (#3306)"},{"Id":"339111230","IsPullRequest":false,"CreatedAt":"2018-07-07T02:46:49","Actor":"karelz","Number":"3304","RawContent":null,"Title":"IFormFile bug","State":"open","Body":"_From @cristian1975 on July 5, 2018 9:21_\r\n\r\nIf you upload a excel file to a web api endpoint,  IFormFile object type from Request.Form.Files collection  has bigger size than the original excel file and if you try to open the uploaded file from the upload folder is in incorrect format. The method to upload a file is taken from .net core 2.1 documentation site:\r\n\r\n```c#\r\n           using (var stream = new FileStream(filePath, FileMode.Create))\r\n            {\r\n                await formFile.CopyToAsync(stream);\r\n            }\r\n```\r\n\r\nwhere fromFile is IFormFile type.\r\nThis bug is happen from .net core version 2.0.6 and above.\r\n\r\n_Copied from original issue: dotnet/corefx#30842_","Url":"https://github.com/aspnet/Home/issues/3304","RelatedDescription":"Open issue \"IFormFile bug\" (#3304)"}],"ResultType":"GitHubIssue"},"SignalR-Issues":{"Issues":[{"Id":"341347878","IsPullRequest":true,"CreatedAt":"2018-07-15T20:02:30","Actor":"dotnet-maestro-bot","Number":"2634","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"open","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/SignalR/pull/2634","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2634)"},{"Id":"341329049","IsPullRequest":false,"CreatedAt":"2018-07-15T15:30:31","Actor":"crocoM4","Number":"2633","RawContent":null,"Title":"Question: Using SignalR with Bare Websockets","State":"open","Body":"Hi,\r\nI am trying to connect from a javascript client to a hub without using SignalR client.\r\nFor example using the [browser websocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket) :\r\n` var mSocket= new WebSocket(\"ws://www.example.com/myHubName\") `\r\n\r\nI tried to follow [this sample ](https://github.com/aspnet/SignalR/tree/release/2.2/samples/SignalRSamples) but I cannot connect or send messages to a hub like [this](https://github.com/aspnet/SignalR/blob/release/2.2/samples/SignalRSamples/Hubs/Chat.cs)\r\n\r\nThe only way that makes this work is by using an approach like this [ConnectionHandlers](https://github.com/aspnet/SignalR/blob/release/2.2/samples/SignalRSamples/ConnectionHandlers/MessagesConnectionHandler.cs) that doesn't seem to use SignalR but an implementation of a \"custom WebSocket\".\r\n\r\nSo, there is a way to connect to a SignalR server without using the dedicated client? Or I need to implement a custom ConnectionHandler like one in the example. Am I missing something? \r\n\r\n","Url":"https://github.com/aspnet/SignalR/issues/2633","RelatedDescription":"Open issue \"Question: Using SignalR with Bare Websockets\" (#2633)"},{"Id":"341232631","IsPullRequest":false,"CreatedAt":"2018-07-14T12:22:04","Actor":"atresnjo","Number":"2632","RawContent":null,"Title":"MessagePack serializes every DateTime to UTC. Is this expected behavior?","State":"open","Body":"Server version: 2.1.1\r\nClient Version: 1.0.2\r\nMessagePack: 1.0.2\r\n\r\nThe DateTime I send/receive gets always converted to UTC even if the Kind isn't UTC.  Is this expected behavior or am I missing something?","Url":"https://github.com/aspnet/SignalR/issues/2632","RelatedDescription":"Open issue \"MessagePack serializes every DateTime to UTC. Is this expected behavior?\" (#2632)"},{"Id":"341207761","IsPullRequest":false,"CreatedAt":"2018-07-14T07:00:47","Actor":"Biarity","Number":"2631","RawContent":null,"Title":"Using Redis to store groups/connections","State":"closed","Body":"From my understanding, the [DefaultHubLifetimeManager](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Core/DefaultHubLifetimeManager.cs) uses an [in-memory dictionary](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Core/Internal/HubGroupList.cs#L14) to store group info.  IMO this isn't very scalable, and since I'm already using a distributed Redis cache, I'd like to be able to also use that with SignalR.\r\n\r\nGoing through the source I found the [RedisHubLifetimeManager](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Redis/RedisHubLifetimeManager.cs), but I'm not sure what the best way to use it is.\r\n\r\n1) Do I have to manually inject all the services [here](https://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Core/SignalRDependencyInjectionExtensions.cs) just to be able to use Redis? Or is there a way of \"overriding\" an injected service? (So I won't have to manually update the list of core services if it changes)\r\n\r\n2) I have the following in my startup `ConfigureServices`:\r\n```C#\r\nservices.AddDistributedRedisCache(options => {...});\r\n```\r\nHow do I make sure SignalR is using the same Redis instance?\r\n","Url":"https://github.com/aspnet/SignalR/issues/2631","RelatedDescription":"Closed issue \"Using Redis to store groups/connections\" (#2631)"},{"Id":"341175874","IsPullRequest":true,"CreatedAt":"2018-07-13T22:21:41","Actor":"BrennanConroy","Number":"2630","RawContent":null,"Title":"Add partial handshake test","State":"open","Body":"https://github.com/aspnet/Coherence-Signed/issues/855","Url":"https://github.com/aspnet/SignalR/pull/2630","RelatedDescription":"Open PR \"Add partial handshake test\" (#2630)"},{"Id":"340973308","IsPullRequest":false,"CreatedAt":"2018-07-13T10:50:46","Actor":"Caskia","Number":"2629","RawContent":null,"Title":"How to read or write data in ConnectionHandler?","State":"open","Body":"I use ConnectionHandler to implement my websocket server like [Social Wether Sample](https://github.com/aspnet/SignalR/blob/release/2.2/samples/SocialWeather/SocialWeatherConnectionHandler.cs). It can be seen that connection.Transport.Input or connection.Transport.Output use the pipeline, so when socket clients send message frequently Transport.Input.ReadAsync() will read \r\nsticky packet. Do you have some advises to separate these packages?\r\n```\r\nvar result = await connection.Transport.Input.ReadAsync();\r\n                var buffer = result.Buffer;\r\n                try\r\n                {\r\n                    if (!buffer.IsEmpty)\r\n                    {\r\n                        var stream = new MemoryStream();\r\n                        var data = buffer.ToArray();\r\n                        await stream.WriteAsync(data, 0, data.Length);\r\n                        stream.Position = 0;\r\n                        var weatherReport = await formatter.ReadAsync(stream);\r\n                        await _lifetimeManager.SendToAllAsync(weatherReport);\r\n                    }\r\n                    else if (result.IsCompleted)\r\n                    {\r\n                        break;\r\n                    }\r\n                }\r\n                finally\r\n                {\r\n                    connection.Transport.Input.AdvanceTo(buffer.End);\r\n                }\r\n\r\n```","Url":"https://github.com/aspnet/SignalR/issues/2629","RelatedDescription":"Open issue \"How to read or write data in ConnectionHandler?\" (#2629)"},{"Id":"340801627","IsPullRequest":true,"CreatedAt":"2018-07-13T03:30:41","Actor":"natemcmaster","Number":"2625","RawContent":null,"Title":"[2.1]: pin baseline package versions to 2.1.2","State":"closed","Body":"Part of https://github.com/aspnet/Home/issues/3316\n\nThis pins package versions to the 2.1.2 baseline. Universe will not override variables in the 'Pinned' section. This helps ensure that this repo does not upgrade its dependency versions for all future patches of 2.1.","Url":"https://github.com/aspnet/SignalR/pull/2625","RelatedDescription":"Closed or merged PR \"[2.1]: pin baseline package versions to 2.1.2\" (#2625)"},{"Id":"340846292","IsPullRequest":true,"CreatedAt":"2018-07-13T00:59:38","Actor":"mikaelm12","Number":"2628","RawContent":null,"Title":"Remove handlers from HubConnection","State":"open","Body":"This pr lets users remove all handlers from a HubConnection for a certain target. \r\nI'll add the ability to remove specific handlers with a `Subscription` type similar to what I added in the C# where where we dispose that object to remove the associated single handler.\r\nIssue: https://github.com/aspnet/SignalR/issues/2615","Url":"https://github.com/aspnet/SignalR/pull/2628","RelatedDescription":"Open PR \"Remove handlers from HubConnection\" (#2628)"},{"Id":"340837380","IsPullRequest":true,"CreatedAt":"2018-07-13T00:01:15","Actor":"mikaelm12","Number":"2627","RawContent":null,"Title":"HubConnection state enum","State":"open","Body":"Changing how we expose the HubConnection connection status from a bool to an enum","Url":"https://github.com/aspnet/SignalR/pull/2627","RelatedDescription":"Open PR \"HubConnection state enum\" (#2627)"},{"Id":"340820064","IsPullRequest":false,"CreatedAt":"2018-07-12T22:27:53","Actor":"mikaelm12","Number":"2626","RawContent":null,"Title":"Add the rest of the On overloads to the Java client","State":"open","Body":"Looks like the C# client goes all the way up to an 8 argument overload. Java only goes up to 5 at the moment.\r\n\r\nhttps://github.com/aspnet/SignalR/blob/2d4fb0af6fd2ef2e3a059a2a15a56484d8800d35/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnectionExtensions.cs#L202-L217","Url":"https://github.com/aspnet/SignalR/issues/2626","RelatedDescription":"Open issue \"Add the rest of the On overloads to the Java client\" (#2626)"},{"Id":"340497837","IsPullRequest":true,"CreatedAt":"2018-07-12T20:19:22","Actor":"natemcmaster","Number":"2622","RawContent":null,"Title":"Remove test dependency on Microsoft.Extensions.Buffers.Testing.Sources","State":"closed","Body":"This source code use to live in common. This puts a copy of the source code here instead of pulling it via package reference.\r\n\r\ncref https://github.com/aspnet/Common/pull/386","Url":"https://github.com/aspnet/SignalR/pull/2622","RelatedDescription":"Closed or merged PR \"Remove test dependency on Microsoft.Extensions.Buffers.Testing.Sources\" (#2622)"},{"Id":"340659168","IsPullRequest":false,"CreatedAt":"2018-07-12T16:46:58","Actor":"randhuck-kbmax","Number":"2624","RawContent":null,"Title":"signalr 1.0.2","State":"closed","Body":"We are using ASP.NET Core 2.1 with SignalR 1.0.2. The latest version of the npm package is 1.0.0-preview1-final which appears to be incompatible with ASP.NET Core 2.1. When trying to install the server side nuget package, it fails saying ASP.NET Core 2.1 only allows 1.0.1 or greater.\r\n\r\nThis is all in spite of the documentation https://docs.microsoft.com/en-us/aspnet/core/signalr/javascript-client?view=aspnetcore-2.1 having ASP.NET Core 2.1 all over it.\r\n\r\nAm I missing something? Why would there be a supported server-side version without an associated javascript client-side version?","Url":"https://github.com/aspnet/SignalR/issues/2624","RelatedDescription":"Closed issue \"signalr 1.0.2\" (#2624)"},{"Id":"340620171","IsPullRequest":false,"CreatedAt":"2018-07-12T12:39:10","Actor":"davidbirt","Number":"2623","RawContent":null,"Title":"DefaultMessageBufferSize ","State":"open","Body":"trying to set the DefaultMessageBufferSize in v 1.0.2 and having trouble finding a doc on it. my questions is how would one configure this in the new hotness? \r\n\r\n\r\n","Url":"https://github.com/aspnet/SignalR/issues/2623","RelatedDescription":"Open issue \"DefaultMessageBufferSize \" (#2623)"},{"Id":"340026550","IsPullRequest":false,"CreatedAt":"2018-07-12T05:56:28","Actor":"exztinct01","Number":"2616","RawContent":null,"Title":"How to authenticate token from AAD in an aspnet core web api passed through signalR?","State":"closed","Body":"First of all, I'm a bit new to web dev as a whole but I would like to ask this question since we''re using AAD authentication. I created an aspnet core React application and used the authentication scheme generated by aspnet core webapi on the backend and adal js on the frontend. So I added the code below in Startup.cs and `[Authorize]` in my controllers as well as my hubs.\r\n\r\n     services.AddAuthentication(AzureADDefaults.BearerAuthenticationScheme)\r\n                .AddAzureADBearer(options => Configuration.Bind(\"AzureAd\", options));\r\n\r\nFrom the client side, I attached the token to the headers of my ajax requests and they all work correctly. Below is the function I use to perform the fetch. The `adalApiFetch` function already adds the authorization inside it\r\n        \r\n         .......\r\n         let response = yield adalApiFetch(axios, \"api/securities\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=UTF-8\",\r\n                Accept: \"application/json\"\r\n            }\r\n        }).catch(function(error) {\r\n          throw error;\r\n        });\r\n        .........\r\n\r\nFor the hubs, I'm using the code below\r\n\r\n       const conn = new SignalR.HubConnectionBuilder().withUrl(\"/myhub\", {\r\n          accessTokenFactory: async () => {\r\n              return await getApiToken();\r\n          }\r\n      }).build();\r\n\r\nLike I said above, axios fetch and authentication works, but signalR does not. \r\nChrome has the following logs\r\n\r\n        WebSocketTransport.js:35 WebSocket connection to 'wss://localhost:5001/myhub id=................................&access_token=ey..........................\r\n        failed: HTTP Authentication failed; no valid credentials available\r\n        Error: Failed to start the transport 'WebSockets': undefined\r\n\r\nAnd this is from Edge\r\n\r\n        Error: Failed to start the transport 'WebSockets': undefined\r\n        SCRIPT12008: SCRIPT12008: WebSocket Error: Incorrect HTTP response. Status code 401, Unauthorized\r\n\r\nCan anyone please guide me on what I am missing?","Url":"https://github.com/aspnet/SignalR/issues/2616","RelatedDescription":"Closed issue \"How to authenticate token from AAD in an aspnet core web api passed through signalR?\" (#2616)"},{"Id":"339393855","IsPullRequest":false,"CreatedAt":"2018-07-12T05:46:36","Actor":"MarkSky","Number":"2608","RawContent":null,"Title":"Cannot Read Property 'HubConnectionBuilder' of Undefined.","State":"closed","Body":"I used SignalR in my javascript file:\r\n\r\n```\r\nimport signalR from '@aspnet/signalr';\r\n\r\nconst GameHubConnection = new signalR.HubConnectionBuilder()\r\n    .withUrl('url')\r\n    .build();\r\n```\r\n\r\nAnd when I ran it on Chrome, I got an error in Chrome developer tools:\r\n\r\n> Hub.js:9 Uncaught TypeError: Cannot read property 'HubConnectionBuilder' of undefined\r\n\r\nWebpack version: 4.15.1\r\n@aspnet/signalr version: 1.0.0\r\n\r\nHow could I solve it?","Url":"https://github.com/aspnet/SignalR/issues/2608","RelatedDescription":"Closed issue \"Cannot Read Property 'HubConnectionBuilder' of Undefined.\" (#2608)"},{"Id":"340440616","IsPullRequest":false,"CreatedAt":"2018-07-11T23:33:08","Actor":"mikaelm12","Number":"2621","RawContent":null,"Title":"Properly construct and parse Handshake request and response in the Java client","State":"open","Body":"Right now this is kind of hacked together. The client doesn't properly wait for the handshake response and there is no way to configure the handshake message. ","Url":"https://github.com/aspnet/SignalR/issues/2621","RelatedDescription":"Open issue \"Properly construct and parse Handshake request and response in the Java client\" (#2621)"},{"Id":"340328238","IsPullRequest":true,"CreatedAt":"2018-07-11T18:39:48","Actor":"mikaelm12","Number":"2618","RawContent":null,"Title":"[WIP] Handle different HubMessage Types","State":"closed","Body":"Issue: https://github.com/aspnet/SignalR/issues/2589\r\nI've added the `HubMessage `abstraction and Enums for the different message types.\r\nI need to rebase this pr first...","Url":"https://github.com/aspnet/SignalR/pull/2618","RelatedDescription":"Closed or merged PR \"[WIP] Handle different HubMessage Types\" (#2618)"},{"Id":"340358954","IsPullRequest":true,"CreatedAt":"2018-07-11T18:38:33","Actor":"mikaelm12","Number":"2620","RawContent":null,"Title":"Add HubMessage and parse messages from the server into different message types","State":"open","Body":"Issue: https://github.com/aspnet/SignalR/issues/2589\r\nI've added the `HubMessage `abstraction and Enums for the different message types.","Url":"https://github.com/aspnet/SignalR/pull/2620","RelatedDescription":"Open PR \"Add HubMessage and parse messages from the server into different message types\" (#2620)"},{"Id":"340341182","IsPullRequest":false,"CreatedAt":"2018-07-11T17:42:35","Actor":"mikaelm12","Number":"2619","RawContent":null,"Title":"Update HubProtocol spec with new message types and changes","State":"open","Body":"There are going to be some changes to our HubProtocol including changes to the `InvocationMessage` type and the addition of the new message type `StreamCompletionMessage`.\r\nSpec located here: https://github.com/aspnet/SignalR/blob/master/specs/HubProtocol.md\r\n\r\nNote: These changes are going into 3.0, not 2.2 so this PR should be done directly on the `master` branch","Url":"https://github.com/aspnet/SignalR/issues/2619","RelatedDescription":"Open issue \"Update HubProtocol spec with new message types and changes\" (#2619)"},{"Id":"339266110","IsPullRequest":false,"CreatedAt":"2018-07-11T15:04:23","Actor":"JakeSimmons89","Number":"2607","RawContent":null,"Title":"SignalR Core with Redis Backplane issues ","State":"closed","Body":"Hub is connecting to a local redis server but when I said messages from one hub Instance it does not make it to the 2nd hub instance. \r\n        \r\n\r\nMy understanding is that the hubs should be communicating through a redis subpub channel but I do not see either instance of my Hub subscribing to a channel. \r\n\r\nAny help would be great!\r\n\r\n```\r\n\tpublic void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddSignalR().AddRedis(\"localhost\");\r\n\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.UseFileServer();\r\n\r\n            app.UseSignalR(routes =>\r\n            {\r\n                routes.MapHub<ApplicationHub>(\"/app\");\r\n            });\r\n        }\r\n```\r\n","Url":"https://github.com/aspnet/SignalR/issues/2607","RelatedDescription":"Closed issue \"SignalR Core with Redis Backplane issues \" (#2607)"},{"Id":"340229841","IsPullRequest":true,"CreatedAt":"2018-07-11T12:55:55","Actor":"vpaulino","Number":"2617","RawContent":null,"Title":"HubConnection _pendingCalls Change to ConcurrentDictionary","State":"open","Body":"As the documentation says [here](https://msdn.microsoft.com/en-us/library/dd997373%28v=vs.110%29.aspx): \r\n\"\r\nIn general, use a System.Collections.Concurrent.ConcurrentDictionary in any scenario where you are adding and updating keys or values concurrently from multiple threads. In scenarios that involve frequent updates and relatively few reads, the ConcurrentDictionary generally offers modest benefits. In scenarios that involve many reads and many updates, the ConcurrentDictionary generally is significantly faster on computers that have any number of cores.\r\n\"\r\n ","Url":"https://github.com/aspnet/SignalR/pull/2617","RelatedDescription":"Open PR \"HubConnection _pendingCalls Change to ConcurrentDictionary\" (#2617)"},{"Id":"339939027","IsPullRequest":false,"CreatedAt":"2018-07-10T17:31:11","Actor":"mikaelm12","Number":"2615","RawContent":null,"Title":"Add ability to remove handlers from HubConnection","State":"open","Body":"The title pretty much says it all 😄 \r\nWe just need to add the functionality to the `CallbackMap` type and then add the API to the `HubConnection`\r\nThe equivalent in the C# client is \r\nhttps://github.com/aspnet/SignalR/blob/46c8ba5fdc881f19a0384613510e71290719503d/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs#L212-L221\r\n\r\n","Url":"https://github.com/aspnet/SignalR/issues/2615","RelatedDescription":"Open issue \"Add ability to remove handlers from HubConnection\" (#2615)"},{"Id":"339830560","IsPullRequest":false,"CreatedAt":"2018-07-10T12:57:34","Actor":"daoqiang","Number":"2614","RawContent":null,"Title":"How do I test my signalr service","State":"open","Body":"How do I test the signalr service load。How the client perceives the link state","Url":"https://github.com/aspnet/SignalR/issues/2614","RelatedDescription":"Open issue \"How do I test my signalr service\" (#2614)"},{"Id":"339636001","IsPullRequest":false,"CreatedAt":"2018-07-09T23:01:43","Actor":"darrenfurr","Number":"2613","RawContent":null,"Title":"Service Fabric: Client disconnects on WS/SSE","State":"open","Body":"Server:\r\nMicrosoft.AspNetCore - 2.1.1\r\nMicrosoft.AspNetCore.SignalR - 1.0.1\r\nMicrosoft.ServiceFabric - 6.2.301\r\nMicrosoft.ServiceFabric.AspNetCore.Kestrel - 3.1.301\r\n\r\nClient:\r\n\"@aspnet/signalr\": \"^1.0.0\"\r\n\r\nOperating Systems:\r\nWindows 10 Enterprise Version 1803\r\n\r\nBrowsers:\r\nChrome 67.0.3396.99 (Official Build) (64-bit)\r\n\r\nWhen utilizing SignalR with the latest version of ServiceFabric - our angular client disconnects after 30 seconds.\r\n\r\nError on the client:\r\n`Error: Connection disconnected with error 'Error: Server timeout elapsed without receiving a message from the server.'.`\r\n\r\nAttempted troubleshooting steps:\r\n\r\nAdded KeepAliveInternal & set to 5 seconds - still disconnects\r\n\r\n- Switched to SSE transport - still disconnects\r\n- Deployed a separate Kestrel server - works fine.\r\n- Switched to LongPolling for SignalR - works fine.\r\n\r\nAny help here would be appreciated.","Url":"https://github.com/aspnet/SignalR/issues/2613","RelatedDescription":"Open issue \"Service Fabric: Client disconnects on WS/SSE\" (#2613)"},{"Id":"339605199","IsPullRequest":true,"CreatedAt":"2018-07-09T22:02:18","Actor":"dotnet-maestro-bot","Number":"2612","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @mikaelm12\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit fetch --force https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/SignalR/pull/2612","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2612)"},{"Id":"339596391","IsPullRequest":true,"CreatedAt":"2018-07-09T22:02:18","Actor":"mikaelm12","Number":"2611","RawContent":null,"Title":"Merge Support for registering multiple On handlers","State":"closed","Body":"Hmm, seems  like the \"Update dependencies.props\" commit from the CI is also included in these changes. @natemcmaster  How should we go about merging 2.2 back into master in this case? ","Url":"https://github.com/aspnet/SignalR/pull/2611","RelatedDescription":"Closed or merged PR \"Merge Support for registering multiple On handlers\" (#2611)"},{"Id":"339559839","IsPullRequest":false,"CreatedAt":"2018-07-09T18:31:50","Actor":"mikaelm12","Number":"2610","RawContent":null,"Title":"Better Exception Handling in Java Client","State":"open","Body":"Currently the exception handling is minimal and general method signatures just declare that general exceptions could be thrown. Work needs to be done to make this more specific and catch these and fail at the right levels of the client. \r\n\r\nContext\r\nhttps://github.com/aspnet/SignalR/pull/2583#discussion_r200011358\r\nhttps://github.com/aspnet/SignalR/pull/2583#discussion_r200013217\r\n","Url":"https://github.com/aspnet/SignalR/issues/2610","RelatedDescription":"Open issue \"Better Exception Handling in Java Client\" (#2610)"},{"Id":"339530628","IsPullRequest":false,"CreatedAt":"2018-07-09T16:57:28","Actor":"Kikimora","Number":"2609","RawContent":null,"Title":"How to indicate errors with ChannelReader<T> ?","State":"open","Body":"SignalR does not report errors correctly with streaming methods. My code below throws error in 'GetOrAddObservable' with some message. I receive exception on client but it does not have my message, instead it has some generic error message like 'something went wrong on server'.\r\n\r\n```\r\npublic ChannelReader<ArraySegment<TradeInfo>> Trades(string instrument)\r\n{\r\n   return _tradeData.GetOrAddObservable(instrument).AsChannelReader();\r\n}\r\n```\r\n\r\nSo I tried this instead with same result.\r\n```\r\n        public ChannelReader<ArraySegment<TradeInfo>> Trades(string instrument)\r\n        {\r\n            try\r\n            {\r\n                return _tradeData.GetOrAddObservable(instrument).AsChannelReader();\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                var cr = Channel.CreateBounded<ArraySegment<TradeInfo>>(1);\r\n                var completed = cr.Writer.TryComplete(new ErrorException(new Error(\"instrument not found\")));\r\n                return cr;\r\n            }\r\n        }\r\n```\r\n\r\nThis is my client side code which receives this error.\r\n```\r\n        public static IObservable<T> AsObservable<T>(this ChannelReader<T> reader)\r\n        {\r\n            var subject = new Subject<T>();\r\n            Task.Run(async () =>\r\n            {\r\n                try\r\n                {\r\n                    Log.Debug(\"Waiting for WebSocket data\");\r\n                    while (await reader.WaitToReadAsync())\r\n                    {\r\n                        Log.Debug(\"Got WebSocket data\");\r\n                        while (reader.TryRead(out var item))\r\n                        {\r\n                            Log.Debug(\"Read item from WebSocket {item}\", item);\r\n                            subject.OnNext(item);\r\n                        }\r\n                    }\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    Log.Error(e, \"WebSocket read failed\");\r\n                    subject.OnError(e); //<-- I'd like to have more meaningful error message here\r\n                    throw;\r\n                }\r\n                finally\r\n                {\r\n                    subject.OnCompleted();\r\n                }\r\n            });\r\n            return subject;\r\n        }\r\n```\r\n\r\nAsChannelReader copied from here - https://github.com/aspnet/SignalR/blob/master/samples/SignalRSamples/ObservableExtensions.cs\r\n\r\n* Versions of Server-Side NuGet Packages: 1.0.1\r\n* Versions of Client-Side NuGet/NPM Packages: 1.0.1\r\n* Are you using the C# client or the JavaScript client: C#\r\n* The Server you are using (Kestrel/HttpSysServer/IIS/IIS Express/Azure Web App/etc.): TestServer\r\n* The Operating System on the Server (Windows/Linux/macOS): macOS\r\n* The Operating System on the Client (Windows/Linux/macOS): macOS\r\n\r\n","Url":"https://github.com/aspnet/SignalR/issues/2609","RelatedDescription":"Open issue \"How to indicate errors with ChannelReader<T> ?\" (#2609)"},{"Id":"339132950","IsPullRequest":false,"CreatedAt":"2018-07-07T09:43:24","Actor":"Hawthorn2013","Number":"2606","RawContent":null,"Title":"How to access Context.Items out of Hub","State":"open","Body":"Hi,\r\nI know I can save some key-value pairs in **Context.Items**, and they exist when the connection is opened.\r\nBut I want to access some key-value pairs out of Hub, for example in a controller.\r\nHow can I get Context.Items **out of** Hub class?\r\n\r\nThank you.","Url":"https://github.com/aspnet/SignalR/issues/2606","RelatedDescription":"Open issue \"How to access Context.Items out of Hub\" (#2606)"},{"Id":"339025261","IsPullRequest":true,"CreatedAt":"2018-07-06T17:57:08","Actor":"BrennanConroy","Number":"2605","RawContent":null,"Title":"Update TS docs for docs.microsoft.com generation","State":"open","Body":"","Url":"https://github.com/aspnet/SignalR/pull/2605","RelatedDescription":"Open PR \"Update TS docs for docs.microsoft.com generation\" (#2605)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"341347083","IsPullRequest":false,"CreatedAt":"2018-07-15T19:58:33","Actor":"dazinator","Number":"1878","RawContent":null,"Title":"Custom IdentityUserLogin<int> and EF user store","State":"closed","Body":"I'm using the EF stores.\r\n\r\nThe only change I'd like to make is to add a column to the `AspNetUserLogins` table so that I can also store the refresh token associated with the external login. I think adding a column to an EF model should be fairly straightforward, and it was, but then getting identity to work with it is turning out to be a bit painful :-)\r\n\r\nI derived my own entity from `IdentityUserLogin<int>` and added the additional property:\r\n\r\n```\r\n   public class DennisUserLogin : IdentityUserLogin<int>\r\n   {\r\n        public string RefreshToken { get; set; }\r\n   }\r\n```\r\n\r\nAnd therefore had to derive my own `IdentityDbContext`, passing in that replacement type:\r\n\r\n```\r\n\r\n public class DennisContext : IdentityDbContext<DennisUser, IdentityRole<int>, int, IdentityUserClaim<int>, IdentityUserRole<int>, DennisUserLogin, IdentityRoleClaim<int>, IdentityUserToken<int>>\r\n    {\r\n        public DennisContext(DbContextOptions<DennisContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);         \r\n            \r\n        }\r\n    }\r\n```\r\n\r\nI was able to then add a new ef migration, and apply that, and I can see the additional column in the database - great.\r\n\r\nNext I needed to be able to set this new property. So I had to find the locations where a new `IdentityUserLogin` entity is created, so that I could also set my additional property before its saved.\r\n\r\nUnfortunately the `UserStore` seems to create this entity, and the there is nowhere in the existing API where I could pass an additional value to it (i.e referesh token). Therefore overriding any existing method on UserStore or UserManager wouldn't cater for my scenario. So I had to add some additional method to UserManager and UserStore that also took a \"refresh token\":\r\n\r\n```\r\n\r\n  public class DennisUserStore : UserStore<DennisUser, IdentityRole<int>, DennisContext, int>, IDennisUserStore\r\n    {\r\n\r\n        private readonly DennisContext _context;\r\n\r\n        public DennisUserStore(DennisContext context, IdentityErrorDescriber describer = null) : base(context, describer)\r\n        {\r\n            _context = context;\r\n        }\r\n        \r\n        \r\n        /// <summary>\r\n        /// Adds the <paramref name=\"login\"/> given to the specified <paramref name=\"user\"/>.\r\n        /// </summary>\r\n        /// <param name=\"user\">The user to add the login to.</param>\r\n        /// <param name=\"login\">The login to add to the user.</param>\r\n        /// <param name=\"cancellationToken\">The <see cref=\"CancellationToken\"/> used to propagate notifications that the operation should be canceled.</param>\r\n        /// <returns>The <see cref=\"Task\"/> that represents the asynchronous operation.</returns>\r\n        public Task AddLoginAsync(DennisUser user, UserLoginInfo login, string refreshToken,\r\n            CancellationToken cancellationToken = default(CancellationToken))\r\n        {\r\n            cancellationToken.ThrowIfCancellationRequested();\r\n            ThrowIfDisposed();\r\n            if (user == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(user));\r\n            }\r\n            if (login == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(login));\r\n            }\r\n            var userLogins = _context.UserLogins;\r\n            var newLogin = CreateDennisUserLogin(user, login);\r\n            newLogin.RefreshToken = refreshToken;\r\n            userLogins.Add(newLogin);\r\n            return Task.FromResult(false);\r\n        }\r\n\r\n        private DennisUserLogin CreateDennisUserLogin(DennisUser user, UserLoginInfo login)\r\n        {\r\n            var dennisUserLogin = new DennisUserLogin();\r\n            dennisUserLogin.LoginProvider = login.LoginProvider;\r\n            dennisUserLogin.ProviderDisplayName = login.ProviderDisplayName;\r\n            dennisUserLogin.ProviderKey = login.ProviderKey;\r\n            dennisUserLogin.UserId = user.Id;\r\n            return dennisUserLogin;\r\n        }\r\n\r\n    }\r\n\r\n```\r\n\r\nand `UserManager`:\r\n\r\n```\r\n\r\n\r\n   public class DennisUserManager : UserManager<DennisUser>\r\n    {\r\n        public DennisUserManager(IUserStore<DennisUser> store, IOptions<IdentityOptions> optionsAccessor, IPasswordHasher<DennisUser> passwordHasher, IEnumerable<IUserValidator<DennisUser>> userValidators, IEnumerable<IPasswordValidator<DennisUser>> passwordValidators, ILookupNormalizer keyNormalizer, IdentityErrorDescriber errors, IServiceProvider services, ILogger<UserManager<DennisUser>> logger) : base(store, optionsAccessor, passwordHasher, userValidators, passwordValidators, keyNormalizer, errors, services, logger)\r\n        {\r\n\r\n        }\r\n\r\n        // IUserLoginStore methods\r\n        private IDennisUserStore GetStore()\r\n        {\r\n\r\n            var cast = Store as IDennisUserStore;\r\n            if (cast == null)\r\n            {\r\n                throw new NotSupportedException(\"Store Not IUserLoginStore\");\r\n            }\r\n            return cast;\r\n        }     \r\n\r\n        public async Task<IdentityResult> AddLoginAsync(DennisUser user, UserLoginInfo login, string refreshToken)\r\n        {\r\n            ThrowIfDisposed();\r\n            var loginStore = GetStore();\r\n            if (login == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(login));\r\n            }\r\n            if (user == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(user));\r\n            }\r\n\r\n            var existingUser = await FindByLoginAsync(login.LoginProvider, login.ProviderKey);\r\n            if (existingUser != null)\r\n            {\r\n                Logger.LogWarning(4, \"AddLogin for user {userId} failed because it was already associated with another user.\", await GetUserIdAsync(user));\r\n                return IdentityResult.Failed(ErrorDescriber.LoginAlreadyAssociated());\r\n            }\r\n            await loginStore.AddLoginAsync(user, login, refreshToken, CancellationToken);\r\n            return await UpdateUserAsync(user);\r\n        }\r\n    }\r\n\r\n```\r\n\r\nSo far this is a lot of work in order to be able to add one property to this entity but I thought I was close.\r\n\r\nI changed the razor UI code to call the new method on my UserManager instead which takes the refresh token,\r\n\r\nNow when I run the app, when attempting an external login, I get the following error:\r\n\r\n> InvalidOperationException: Cannot create a DbSet for 'IdentityUserLogin<int>' because this type is not included in the model for the context.\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.get_EntityType()\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.get_EntityQueryable()\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.System.Linq.IQueryable.get_Provider()\r\nMicrosoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync<TSource, TResult>(MethodInfo operatorMethodInfo, IQueryable<TSource> source, Expression expression, CancellationToken cancellationToken)\r\nMicrosoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync<TSource, TResult>(MethodInfo operatorMethodInfo, IQueryable<TSource> source, LambdaExpression expression, CancellationToken cancellationToken)\r\nMicrosoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync<TSource>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync(string loginProvider, string providerKey, bool isPersistent, bool bypassTwoFactor)\r\nDennis.Areas.Identity.Pages.Account.ExternalLoginModel.OnGetCallbackAsync(string returnUrl, string remoteError) in ExternalLogin.cshtml.cs\r\n-\r\n            {\r\n                ErrorMessage = \"Error loading external login information.\";\r\n                return RedirectToPage(\"./Login\", new { ReturnUrl = returnUrl });\r\n            }\r\n            // Sign in the user with this external login provider if the user already has a login.\r\n            var result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, info.ProviderKey, isPersistent: false, bypassTwoFactor : true);\r\n            if (result.Succeeded)\r\n            {\r\n                var tokens = info.AuthenticationTokens.ToArray();\r\n                // save the users \r\n                _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", info.Principal.Identity.Name, info.LoginProvider);\r\n                return LocalRedirect(returnUrl);\r\nMicrosoft.AspNetCore.Mvc.RazorPages.Internal.ExecutorFactory+GenericTaskHandlerMethod.Convert<T>(object taskAsObject)\r\n\r\n\r\nIt seems something about the store is still specifically looking for `IdentityUserLogin<int>` which isn't part of my model anymore - because I am using my own derived type `DennisUserLogin`. However it doesn't appear I can inform the user store of that.. What am I missing?","Url":"https://github.com/aspnet/Identity/issues/1878","RelatedDescription":"Closed issue \"Custom IdentityUserLogin<int> and EF user store\" (#1878)"},{"Id":"341346866","IsPullRequest":true,"CreatedAt":"2018-07-15T19:47:26","Actor":"dotnet-maestro-bot","Number":"1877","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"open","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/1877","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#1877)"},{"Id":"341165815","IsPullRequest":false,"CreatedAt":"2018-07-13T21:32:17","Actor":"NinoFloris","Number":"1876","RawContent":null,"Title":"Can PasswordValidator errors pretty please be merged with UserValidator errors on user create?","State":"open","Body":"Talking about https://github.com/aspnet/Identity/blame/master/src/Core/UserManager.cs#L597\r\nCould instead of returning on `!succeeded` store them, run CreateAsync and merge them with those errors.\r\nThis is blocking a nice api where you get all errors of a registration in one go.","Url":"https://github.com/aspnet/Identity/issues/1876","RelatedDescription":"Open issue \"Can PasswordValidator errors pretty please be merged with UserValidator errors on user create?\" (#1876)"},{"Id":"340801603","IsPullRequest":true,"CreatedAt":"2018-07-13T02:40:43","Actor":"natemcmaster","Number":"1875","RawContent":null,"Title":"[2.1]: pin baseline package versions to 2.1.2","State":"closed","Body":"Part of https://github.com/aspnet/Home/issues/3316\n\nThis pins package versions to the 2.1.2 baseline. Universe will not override variables in the 'Pinned' section. This helps ensure that this repo does not upgrade its dependency versions for all future patches of 2.1.","Url":"https://github.com/aspnet/Identity/pull/1875","RelatedDescription":"Closed or merged PR \"[2.1]: pin baseline package versions to 2.1.2\" (#1875)"},{"Id":"337865699","IsPullRequest":false,"CreatedAt":"2018-07-12T18:41:50","Actor":"egmfrs","Number":"1860","RawContent":null,"Title":"Determine if Confirmation Email link failed because Token expired","State":"closed","Body":"Is there a way to do this? Like an error code that will return when the email confirmation token has expired?\r\nFor example if the error code was \"TokenExpired\" I could use the following to return the user to a specific view which gives them advice on a process to follow if their token has expired:\r\n\r\n```\r\n        var result = await _userManager.ConfirmEmailAsync(user, code);\r\n        if (result.Succeeded) return View(\"ConfirmEmail\");\r\n\r\n        return View(result.Errors.Any(c => c.Code == \"TokenExpired\") ? \"TokenExpired\" : \"Error\");\r\n```","Url":"https://github.com/aspnet/Identity/issues/1860","RelatedDescription":"Closed issue \"Determine if Confirmation Email link failed because Token expired\" (#1860)"},{"Id":"337861200","IsPullRequest":false,"CreatedAt":"2018-07-12T18:41:34","Actor":"egmfrs","Number":"1858","RawContent":null,"Title":"What is considered best practice for disabling / deactivating users?","State":"closed","Body":"I would define disabling / deactivating a user as having a property held against that user which prevented them from being able to log into the application when the property had been set to a certain value.\r\n\r\nWe are building an admin section where admin members can disable / re-enable users as required.\r\n\r\nThe options I have identified:\r\n\r\n1. Set email confirmed to false. To re-activate a user, regenerate an email confirmation link for them.\r\nOr\r\n2. Set Lockout Enabled to True and Lockout End to DateTime.Max\r\nOr\r\n3. Add IsEnabled field to AspNetUsers (default to True) and override SignInManager to check value is True before returning a Success result.\r\n\r\nAre there any other options / which is the most recommended?","Url":"https://github.com/aspnet/Identity/issues/1858","RelatedDescription":"Closed issue \"What is considered best practice for disabling / deactivating users?\" (#1858)"},{"Id":"339455942","IsPullRequest":false,"CreatedAt":"2018-07-12T18:37:56","Actor":"flatproject","Number":"1867","RawContent":null,"Title":"Two factor authentication by Email","State":"closed","Body":"Is it possible to configure 2FA via email in a .net core 2.0 or 2.1 application? \r\n\r\nI can't find any information anywhere about it apart from SMS or QR code examples which are not usable in a PCI compliant environment.\r\n\r\nAre there any email 2FA examples anywhere?\r\n\r\nThank you","Url":"https://github.com/aspnet/Identity/issues/1867","RelatedDescription":"Closed issue \"Two factor authentication by Email\" (#1867)"},{"Id":"340309923","IsPullRequest":false,"CreatedAt":"2018-07-12T18:37:20","Actor":"Freakazoid182","Number":"1871","RawContent":null,"Title":"Wrong password logging with Warning level","State":"closed","Body":"In my opinion this should be an Information level warning. What is the reason behind a Warning level here?\r\n\r\nhttps://github.com/aspnet/Identity/blob/c7276ce2f76312ddd7fccad6e399da96b9f6fae1/src/Core/UserManager.cs#L711","Url":"https://github.com/aspnet/Identity/issues/1871","RelatedDescription":"Closed issue \"Wrong password logging with Warning level\" (#1871)"},{"Id":"340410768","IsPullRequest":false,"CreatedAt":"2018-07-11T21:23:15","Actor":"bigpodgurc","Number":"1874","RawContent":null,"Title":"using same ASP.net core identity for multiple web applicaitons","State":"open","Body":"Hello\r\n\r\nI want to have 3 different web applications but want to use same identity back end application so i have SSO. im using Individual user accounts\r\n\r\nthanks","Url":"https://github.com/aspnet/Identity/issues/1874","RelatedDescription":"Open issue \"using same ASP.net core identity for multiple web applicaitons\" (#1874)"},{"Id":"340388845","IsPullRequest":true,"CreatedAt":"2018-07-11T20:27:19","Actor":"dotnet-maestro-bot","Number":"1873","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @HaoK\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/1873","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#1873)"},{"Id":"340335156","IsPullRequest":false,"CreatedAt":"2018-07-11T17:23:47","Actor":"blowdart","Number":"1872","RawContent":null,"Title":"[bug].net core 2.1,Identity will throw exception while implement IdentityUser. But .net core 2.0 is Ok.","State":"open","Body":"_From @Caizhenyu on July 7, 2018 11:58_\n\nI am using asp net core Identity Framework on core 2.1, and I implement my  `ApplicationUser : IdentityUser` .Then there will throw Exception like the screenshot .\r\nBut I found that, the same code is Ok on core 2.0, or I just user IdentityUser not my own ApplicationUser is also ok while `services.AddIdentity<TUser, TRole>`.\r\n\r\nIs it's a core 2.1 bug?\r\n![tim 20180707194836](https://user-images.githubusercontent.com/19528235/42410678-1fcd9ff0-8220-11e8-9bf7-27d4c34b266a.png)\r\n\r\n\n\n_Copied from original issue: aspnet/Security#1804_","Url":"https://github.com/aspnet/Identity/issues/1872","RelatedDescription":"Open issue \"[bug].net core 2.1,Identity will throw exception while implement IdentityUser. But .net core 2.0 is Ok.\" (#1872)"},{"Id":"339303539","IsPullRequest":false,"CreatedAt":"2018-07-10T19:56:50","Actor":"tstivers1990","Number":"1866","RawContent":null,"Title":"ActivePage declarations missing on scaffolded Identity UI","State":"closed","Body":"Some of the ActivePage declarations are missing on the default scaffolded Identity UI. This causes some pages not to show an active item in the relevant nav section.\r\n\r\nSome pages also use an ActivePage declaration that doesn't have a corresponding item in the navigation section, resulting in those pages not showing an active navigation item.\r\n\r\nI've created a pull request that adds the missing ActivePage declarations, and changes the ones that don't have a corresponding nav element to use an ActivePage declaration with the most relevant nav element. For example, the DeletePersonalData page was using `ViewData[\"ActivePage\"] = ManageNavPages.DeletePersonalData;` There is no nav element for Delete Personal Data. I've changed it to use `ViewData[\"ActivePage\"] = ManageNavPages.PersonalData;` instead, as there is a nav element for Personal Data, and that is the most relevant nav element for the page.\r\n\r\nAny methods and variables within `ManageNavPages` that are no longer used after this changed were removed. For example, the `ManageNavPages.DeletePersonalData` variable is no longer used after the change, and neither is the `ManageNavPages.DeletePeronalDataNavClass` method. Therefore, both of them are removed.\r\n\r\nI've also made the `PageNavClass` method private, as it is never accessed outside of its class and, based on the class' design, should only be referenced by public methods in the class, and not directly outside of the class.\r\n\r\nPR: #1838 ","Url":"https://github.com/aspnet/Identity/issues/1866","RelatedDescription":"Closed issue \"ActivePage declarations missing on scaffolded Identity UI\" (#1866)"},{"Id":"339929777","IsPullRequest":false,"CreatedAt":"2018-07-10T17:02:34","Actor":"blowdart","Number":"1870","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass in ASP.NET Core when the number of incorrect login attempts is not validated. An attacker who successfully exploited this vulnerability could try an infinite number of authentication attempts.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core validates the number of incorrect login attempts.\r\n\r\n## Announcement\r\n\r\nThe original announcement can be found at https://github.com/aspnet/Announcements/issues/310\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application does not use ASP.NET Core's implementation of multi-factor authentication you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Identity with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Identity | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5 <br /> 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.1.5 <br /> 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 1.0.6 <br /> 1.1.6 <br /> 2.0.4 <br /> 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Identity` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET Core 1.0, 1.1 or 2.0 not targeting the metapackage.\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Identity` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Identity` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"Microsoft.AspNetCore.Identity\" : \"1.0.5\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `Microsoft.AspNetCore.Identity`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `Microsoft.AspNetCore.Identity` version 1.0.5.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `Microsoft.AspNetCore.Identity` to 1.0.6.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Identity \": \"1.0.6\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Identity/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Identity`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Identity` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Identity/1.0.1` is a reference to v1.0.1 of `Microsoft.AspNetCore.Identity`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of  `Microsoft.AspNetCore.Identity` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Identity` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Identity\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Martin Knafve](https://www.linkedin.com/in/martin-knafve-99187a2/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8171](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8171)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-07-10_","Url":"https://github.com/aspnet/Identity/issues/1870","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\" (#1870)"},{"Id":"339822774","IsPullRequest":true,"CreatedAt":"2018-07-10T12:35:55","Actor":"tincann","Number":"1869","RawContent":null,"Title":"Fix misleading exception message when adding a TokenProvider","State":"open","Body":"","Url":"https://github.com/aspnet/Identity/pull/1869","RelatedDescription":"Open PR \"Fix misleading exception message when adding a TokenProvider\" (#1869)"},{"Id":"339512611","IsPullRequest":false,"CreatedAt":"2018-07-09T16:03:47","Actor":"benm-eras","Number":"1868","RawContent":null,"Title":"Why are the `DbSet`s in `IdentityUserContext` non-virtual?","State":"open","Body":"In ASP.NET Core 2.x the `DbSet`s defined in the abstract classes `IdentityDbContext` and `IdentityUserContext` are all non-virtual making it much harder to effectively mock my database context that is built on them. It looks like they were virtual in ASP.NET Core 1.x, although the library was arranged differently then, so I am not 100% sure on that. \r\n\r\nIs there a reason that they cannot just be made virtual to facilitate unit testing? I really don't like having to resort to something drastic like Fakes when I could just use Moq etc.\r\n\r\nIf there is a reason they can't be made virtual I would really appreciate it if any one has any ideas on how  I can proceed with mocking my db context that implements `IdentityDbContext`! ","Url":"https://github.com/aspnet/Identity/issues/1868","RelatedDescription":"Open issue \"Why are the `DbSet`s in `IdentityUserContext` non-virtual?\" (#1868)"},{"Id":"339263894","IsPullRequest":false,"CreatedAt":"2018-07-08T22:31:57","Actor":"dm-CaT","Number":"1865","RawContent":null,"Title":"UserManager -> SetPasswordHashAsync is called before CreateAsync(user)","State":"open","Body":"Is there any reason why when the new user is created with password the password hash is set before user is saved?\r\nI'm trying to implement my own IUserStore/IUserPasswordStore (to use custom DAL). But I got an error because my store cannot set password hash (update record in DB) to non created user.\r\nHere is the code from UserManager which causes an error.\r\n```\r\n        public virtual async Task<IdentityResult> CreateAsync(TUser user, string password)\r\n        {\r\n            ThrowIfDisposed();\r\n            var passwordStore = GetPasswordStore();\r\n            if (user == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(user));\r\n            }\r\n            if (password == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(password));\r\n            }\r\n            // Here is the SetPasswordHashAsync occurs\r\n            var result = await UpdatePasswordHash(passwordStore, user, password);\r\n            if (!result.Succeeded)\r\n            {\r\n                return result;\r\n            }\r\n            // Only here I save user in DB\r\n            return await CreateAsync(user);\r\n        }\r\n```\r\n [Link on method](https://github.com/aspnet/Identity/blob/c60b4d8784550ea868af0c2d08cc14217ae2e940/src/Core/UserManager.cs#L585)\r\n","Url":"https://github.com/aspnet/Identity/issues/1865","RelatedDescription":"Open issue \"UserManager -> SetPasswordHashAsync is called before CreateAsync(user)\" (#1865)"},{"Id":"339141041","IsPullRequest":false,"CreatedAt":"2018-07-07T12:44:30","Actor":"CeelMarten","Number":"1864","RawContent":null,"Title":"Can't configure Identity","State":"closed","Body":"I have a class **ApplicationUser**  witch inherited from **IdentityUser<long>**\r\n```\r\n    public class ApplicationUser : IdentityUser<long>\r\n    {\r\n    }\r\n```\r\nand I want to use it in **ApplicationDbContext** \r\n```\r\n    public class ApplicationDbContext : IdentityDbContext<ApplicationUser>\r\n    {\r\n        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);\r\n        }\r\n    }\r\n```\r\n\r\nVisual Studio says that I can't use **ApplicationUser** because there is no implicit reference conversion from **ApplicationUser** to **IdentityUser**. I found this in github where \r\n\r\n```\r\n      services.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext, long>()\r\n                .AddDefaultTokenProviders();\r\n```\r\nthe solution is to change code from  \r\n`.AddEntityFrameworkStores<ApplicationDbContext>()` to `.AddEntityFrameworkStores<ApplicationDbContext, long>()`\r\nbut there is not overload for this method\r\n","Url":"https://github.com/aspnet/Identity/issues/1864","RelatedDescription":"Closed issue \"Can't configure Identity\" (#1864)"},{"Id":"339134116","IsPullRequest":false,"CreatedAt":"2018-07-07T10:03:39","Actor":"ckams","Number":"1863","RawContent":null,"Title":"Feature Request—Consider providing ACL in ASP.NET Core Identity","State":"open","Body":"To get some context about the request, see the issue https://github.com/aspnet/Identity/issues/1859\r\n\r\n## Consider providing ACL in Identity\r\nWell as in the title: consider providing ACL in ASP.NET Core though Identity.\r\n\r\n### Some arguments\r\n- ACL is not something too much complex for enterprise level app… \r\n- What Identity provides today, **about group management**, is out to date (again see the issue [1859](https://github.com/aspnet/Identity/issues/1859))…\r\n- Other frameworks oriented **enterprise level app/webapp**, provide, out of the box, ACL support. (See, Zend frameworks, Joomla, etc…)\r\n    - **With all due respect, In comparison, Identity looks like a back to the Past…(there is simply no ACL support at all)**\r\n- Nothing prevents to suggest some improvements, **[or do not mention community involvement](https://www.asp.net/open-source)**…\r\n- You should \"write\" [for customers, **not for simplicity sake**, nor without listening customers](https://github.com/aspnet/Identity/issues/1859#issuecomment-403067317)… And I used to think that ASP.NET Core was for writing enterprise level app, not to write simple blog CMS, **with simplistic group support**…\r\n- it will not cost so much for you, to add ACL support.\r\n\r\n### Design\r\nIt will be simple to integrate some ACL support to Identity, without breaking anything (simply by adding few line of codes, again, take a look at [1859](https://github.com/aspnet/Identity/issues/1859)).\r\n\r\nFor the sake of demonstration:\r\n- Add an Acl table like `IdentityAcl`\r\n- Add a many-to-many relationship table between `IdentityRoles` and `IdentityAcl`;\r\n- Add to `ClaimsIdentity` and `ClaimsPrincipal` … the adequat properties (to avoid having recourse to `Scope` and `IdentityDbContext` for `AuthorizationHandler`)…\r\n- Good doc…\r\n\r\n### Some thoughts\r\nWe do not ask you to write for us our apps, but to provide us with a good, up to date, and real world use framework (**like other frameworks in the market**).","Url":"https://github.com/aspnet/Identity/issues/1863","RelatedDescription":"Open issue \"Feature Request—Consider providing ACL in ASP.NET Core Identity\" (#1863)"},{"Id":"339040922","IsPullRequest":true,"CreatedAt":"2018-07-06T21:39:35","Actor":"wilsonrivera","Number":"1862","RawContent":null,"Title":"Fixed documentation typo","State":"closed","Body":"Corrected a typo on the XML documentation of the UserId property that made it read \"... sets the of the ...\"","Url":"https://github.com/aspnet/Identity/pull/1862","RelatedDescription":"Closed or merged PR \"Fixed documentation typo\" (#1862)"},{"Id":"337863779","IsPullRequest":false,"CreatedAt":"2018-07-06T15:04:21","Actor":"ckams","Number":"1859","RawContent":null,"Title":"RoleClaims: Usages Designs and Questions","State":"closed","Body":"**Maybe I am missing something**, but I find RoleClaims \"badly considered\", even neglected.\r\n\r\nWhereas Role Claims/Group Claims are **essential for intranet Apps (Windows authentication), and \"general\" group membership**—without them, it will lead to some repetitive code, **or to write custom Identity**— I find that they are not \"user friendly\".\r\n\r\nSo I have some questions, and will share some thoughts.\r\n\r\n## Usages of RoleClaims\r\nWhat is the purpose of RoleClaims in Identity?\r\n- How to use them **accordingly to you**?\r\n    - This subject is not documented.\r\n    - I find no sample on github;\r\n- Do you consider to remove them in the future?\r\n    - It seems—badly considered—and that it could be…\r\n    - if yes, how you will replace them? (How??? Knowing that, most of us cannot rely on something \"ephemeral\")\r\n\r\n## Design and limitations\r\nIf we want to use RoleClaims as it should (in a many-to-many relationship) like AspNetUserRoles table, we find that some pieces are missing…\r\n- No documentation…\r\n- No many-to-many relationship table between Roles and Claims, ready to use;\r\n- Weird property `public virtual TKey RoleId { get; set; }` in `IdentityRoleClaim`;\r\n- Not ready to use in `AuthorizationHandler` as\r\n    - Nothing ready to use in `ClaimsIdentity` and `ClaimsPrincipal` classes, to get RoleClaims;\r\n    - If we use DI in `AuthorizationHandler`, we have to register the `AuthorizationHandler` as `scope` to get access to RoleManager/UserManager, etc…\r\n\r\n## Consequences\r\n- We have to do some choice: singleton vs RoleClaims access;\r\n- Write many-to-many relationship table between Roles and RoleClaims;\r\n- Keeping useless property `public virtual TKey RoleId { get; set; }` in `IdentityRoleClaim`;\r\n\r\n**But If we want to get something nice and simple, particularly with `AuthorizationHandler`:**\r\n- With or without the current RoleClaims Api, we have to dive into Identity Customization, **because nothing is ready to use as it should be…**\r\n\r\n## Conclusion\r\nCan you reconsider the importance of RoleClaims in Identity, and provide us \"a better design\"?","Url":"https://github.com/aspnet/Identity/issues/1859","RelatedDescription":"Closed issue \"RoleClaims: Usages Designs and Questions\" (#1859)"},{"Id":"337135851","IsPullRequest":false,"CreatedAt":"2018-07-05T20:49:07","Actor":"ckams","Number":"1855","RawContent":null,"Title":"Many-to-many relationship between IdentityRoleClaim and IdentityRole and message: Only backing fields of types that are assignable from the property type can be used.","State":"closed","Body":"More information on the context can be found here:\r\n- https://github.com/aspnet/EntityFrameworkCore/issues/12458\r\n\r\nI get this:\r\n\r\n>The specified field '<Id>k__BackingField' of type 'Guid' cannot be used for the property 'ApplicationIdentityRoleClaim<Guid>.Id' of type 'int'. Only backing fields of types that are assignable from the property type can be used.\r\n\r\nHere a repo \r\n- https://github.com/ckams/-Buggy-__BackingField","Url":"https://github.com/aspnet/Identity/issues/1855","RelatedDescription":"Closed issue \"Many-to-many relationship between IdentityRoleClaim and IdentityRole and message: Only backing fields of types that are assignable from the property type can be used.\" (#1855)"},{"Id":"338215212","IsPullRequest":false,"CreatedAt":"2018-07-05T15:45:58","Actor":"zhulien-ivanov","Number":"1861","RawContent":null,"Title":"ConfirmEmailAsync in UserManager is not doing a check if the email is already confirmed","State":"closed","Body":"Hey. Shouldn't the **`ConfirmEmailAsync`** method in **`UserManager`** do a check if the email is already confirmed? Is it an adequate behaviour to successfully confirm an already confirmed email? It basically don't change the outcome in any way(and the operation can be considered as successful), because the email confirmation state stays the same, but shouldn't it be considered an exceptional behaviour and be accompanied with an error?","Url":"https://github.com/aspnet/Identity/issues/1861","RelatedDescription":"Closed issue \"ConfirmEmailAsync in UserManager is not doing a check if the email is already confirmed\" (#1861)"},{"Id":"337513265","IsPullRequest":false,"CreatedAt":"2018-07-05T15:17:51","Actor":"zhulien-ivanov","Number":"1856","RawContent":null,"Title":"ConfirmEmailAsync in UserManager does a ton of unrelated actions and validations","State":"closed","Body":"**`ConfirmEmailAsync`** in **`UserManager`** should validate a token and set the **`EmailConfirmed`** flag to true. However, in the current implementation, we save the context changes through invoking the **`UpdateUserAsync`** method. It re-sets the Normalized username and email and then calls the **`ValidateUserAsync`** method, which in turn runs the user validators. It is not that great of an overhead, but is this really necessary or is it just an architectural trade-off?","Url":"https://github.com/aspnet/Identity/issues/1856","RelatedDescription":"Closed issue \"ConfirmEmailAsync in UserManager does a ton of unrelated actions and validations\" (#1856)"},{"Id":"337714964","IsPullRequest":false,"CreatedAt":"2018-07-03T01:34:12","Actor":"natelaff","Number":"1857","RawContent":null,"Title":"Make ExternalLoginsPageFilter accessible","State":"open","Body":"Scaffold identity, but want to remove the \"Identity\" area folder. Have to add Razor page options to new area. Would be nice if we didn't have to duplicate ExternalLoginsPageFilter because its internal to UI. If we're scaffolding identity, one can assume we'd want this filter, too.","Url":"https://github.com/aspnet/Identity/issues/1857","RelatedDescription":"Open issue \"Make ExternalLoginsPageFilter accessible\" (#1857)"},{"Id":"336818612","IsPullRequest":true,"CreatedAt":"2018-06-29T00:45:45","Actor":"natemcmaster","Number":"1854","RawContent":null,"Title":"[automated] Update branding for 3.0","State":"closed","Body":"Part of https://github.com/aspnet/Home/issues/3278.\nThis should updates the branding to the next major version","Url":"https://github.com/aspnet/Identity/pull/1854","RelatedDescription":"Closed or merged PR \"[automated] Update branding for 3.0\" (#1854)"},{"Id":"336812782","IsPullRequest":true,"CreatedAt":"2018-06-29T00:45:33","Actor":"natemcmaster","Number":"1853","RawContent":null,"Title":"[automated] Infrastructure updates for release/2.2","State":"closed","Body":"Part of https://github.com/aspnet/Home/issues/3278.\nThis should update lineups, korebuild config, and CI devs to use the release/2.2 channel.","Url":"https://github.com/aspnet/Identity/pull/1853","RelatedDescription":"Closed or merged PR \"[automated] Infrastructure updates for release/2.2\" (#1853)"},{"Id":"336687922","IsPullRequest":false,"CreatedAt":"2018-06-28T16:13:32","Actor":"NinoFloris","Number":"1852","RawContent":null,"Title":"Consider changing AddIdentityCookies to be in line with other authentication builders by returning the AuthenticationBuilder instead of IdentityBuilder","State":"open","Body":"Consider changing AddIdentityCookies to be in line with other authentication builders by returning the AuthenticationBuilder instead of IdentityBuilder","Url":"https://github.com/aspnet/Identity/issues/1852","RelatedDescription":"Open issue \"Consider changing AddIdentityCookies to be in line with other authentication builders by returning the AuthenticationBuilder instead of IdentityBuilder\" (#1852)"},{"Id":"336117307","IsPullRequest":false,"CreatedAt":"2018-06-28T05:39:28","Actor":"Caizhenyu","Number":"1849","RawContent":null,"Title":"Can Web Api generate a _ValidationScriptsPartial","State":"closed","Body":"I want to create a Web Api project and i want to use Identity.\r\nI know in MVC' script, there is `@await Html.PartialAsync(\"_ValidationScriptsPartial\")`,\r\nbut in api project, can i get a  _ValidationScriptsPartial or other property the same use?","Url":"https://github.com/aspnet/Identity/issues/1849","RelatedDescription":"Closed issue \"Can Web Api generate a _ValidationScriptsPartial\" (#1849)"},{"Id":"336381517","IsPullRequest":true,"CreatedAt":"2018-06-27T21:46:46","Actor":"natemcmaster","Number":"1851","RawContent":null,"Title":"[2.1]: Updating branding for patch release","State":"closed","Body":null,"Url":"https://github.com/aspnet/Identity/pull/1851","RelatedDescription":"Closed or merged PR \"[2.1]: Updating branding for patch release\" (#1851)"},{"Id":"336159768","IsPullRequest":false,"CreatedAt":"2018-06-27T13:30:08","Actor":"skyflyer","Number":"1850","RawContent":null,"Title":"Documentation for two factor (2FA) TOTP support","State":"closed","Body":"ASP.NET Identity 2.x includes support for two factor TOTP authentication using an authenticator on the smartphone. I couldn't find it documented anywhere. All I could find is configuring two factor auth with SMS Code, even though the docs specifically refer to TOTP as more appropriate:\r\n\r\nFrom [docs](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes?view=aspnetcore-2.1):\r\n>  Two factor authentication (2FA) authenticator apps, using a Time-based One-time Password Algorithm (TOTP), are the industry recommended approach for 2FA. 2FA using TOTP is preferred to SMS 2FA.\r\n\r\nSince TOTP does not need to be configured separately and is included by default in identity razor class library, it is not a big issue, but I suppose it would make sense to document that:\r\n\r\n* it is enabled by default\r\n* how to disable it","Url":"https://github.com/aspnet/Identity/issues/1850","RelatedDescription":"Closed issue \"Documentation for two factor (2FA) TOTP support\" (#1850)"}],"ResultType":"GitHubIssue"},"Kestrel-Issues":{"Issues":[{"Id":"341347093","IsPullRequest":true,"CreatedAt":"2018-07-15T19:51:00","Actor":"dotnet-maestro-bot","Number":"2726","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"open","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2726","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2726)"},{"Id":"341287512","IsPullRequest":false,"CreatedAt":"2018-07-15T02:59:23","Actor":"VenkateshSrini","Number":"2725","RawContent":null,"Title":"Unable to use HTTPS certificate with Kestrel indocker","State":"open","Body":"Hi,\r\nI have been trying to dockerize a Simple ASP.NET core API app running Kestrel with Https enabled. I have followed all the instructions available but nothing seems to work. A detailed issue is created here\r\n[Docker with HTTPS ASP.NET Core 2.1](https://github.com/dotnet/dotnet-docker/issues/630#issuecomment-404865564). The link also provides the code and various methods that we are trying to get it working. \r\n\r\nPlease help us in this regard\r\n\r\n\r\n","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2725","RelatedDescription":"Open issue \"Unable to use HTTPS certificate with Kestrel indocker\" (#2725)"},{"Id":"341198133","IsPullRequest":true,"CreatedAt":"2018-07-14T01:31:56","Actor":"halter73","Number":"2724","RawContent":null,"Title":"Fix deadlock in GOAWAY_Received_RelievesConnectionBackpressure","State":"open","Body":"#2722\r\n\r\n@Tratcher ","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2724","RelatedDescription":"Open PR \"Fix deadlock in GOAWAY_Received_RelievesConnectionBackpressure\" (#2724)"},{"Id":"340756936","IsPullRequest":true,"CreatedAt":"2018-07-13T23:48:14","Actor":"dotnet-maestro-bot","Number":"2719","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @halter73\n* @natemcmaster\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit fetch --force https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2719","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2719)"},{"Id":"339644238","IsPullRequest":true,"CreatedAt":"2018-07-13T23:47:52","Actor":"JunTaoLuo","Number":"2707","RawContent":null,"Title":"Consolidate HTTP charset validation logic","State":"closed","Body":"Addresses https://github.com/aspnet/KestrelHttpServer/issues/2684. The only functional change is to restrict the character set accepted for header names to `Token` characters. I'll add some tests to test for this difference.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2707","RelatedDescription":"Closed or merged PR \"Consolidate HTTP charset validation logic\" (#2707)"},{"Id":"341116186","IsPullRequest":false,"CreatedAt":"2018-07-13T18:25:45","Actor":"Eilon","Number":"2723","RawContent":null,"Title":"Need a better error message when kestrel cannot get the requested port","State":"open","Body":"_From @richlander on May 4, 2018 0:14_\n\n#This is what I see when Kestrel cannot get the port I asked for. This is on .NET Core 2.1 RC1 (with a 2.0 app).\r\n\r\n```console\r\npi@raspberrypi:~/dotnet-docker/samples/aspnetapp/aspnetapp $ export ASPNETCORE_URLS=http://+:80\r\npi@raspberrypi:~/dotnet-docker/samples/aspnetapp/aspnetapp $ dotnet run\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -13 EACCES permission denied\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowIfErrored(Int32 statusCode)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.tcp_bind(UvTcpHandle handle, SockAddr\r\n```\n\n_Copied from original issue: aspnet/Home#3114_","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2723","RelatedDescription":"Open issue \"Need a better error message when kestrel cannot get the requested port\" (#2723)"},{"Id":"341099998","IsPullRequest":false,"CreatedAt":"2018-07-13T17:30:12","Actor":"Tratcher","Number":"2722","RawContent":null,"Title":"Kestrel test hangs (Control flow?)","State":"open","Body":"I've seen several kestrel test CI hangs in the last week. E.g.:\r\nhttp://aspnetci/viewLog.html?buildId=504305&buildTypeId=Lite_KestrelStressTest&tab=buildLog\r\nhttp://aspnetci/viewLog.html?buildId=503757&buildTypeId=Lite_KestrelStressTest&tab=buildLog\r\nhttp://aspnetci/viewLog.html?buildId=503644&buildTypeId=Lite_KestrelStressTest&tab=buildLog\r\nhttp://aspnetci/viewLog.html?buildId=503531&buildTypeId=Lite_KestrelStressTest&tab=buildLog\r\n\r\nHere are some stacks that look like a new flow control deadlock. @halter73 \r\nGOAWAY_Received_RelievesConnectionBackpressure\r\n```\r\nThread id=4204\r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2OutputProducer.Dispose() \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2OutputProducer.Abort(Microsoft.AspNetCore.Connections.ConnectionAbortedException abortReason) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Abort(Microsoft.AspNetCore.Connections.ConnectionAbortedException abortReason) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Stream.Abort(Microsoft.AspNetCore.Connections.ConnectionAbortedException abortReason) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection+<ProcessRequestsAsync>d__41<Microsoft.AspNetCore.Http.HttpContext>.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object stateMachine) \r\nat System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run() \r\nat System.Runtime.CompilerServices.ValueTaskAwaiter+<>c.<.cctor>b__9_0(System.Object state) \r\nat System.IO.Pipelines.InlineScheduler.Schedule(System.Action<System.Object> action, System.Object state) \r\nat System.IO.Pipelines.Pipe.TrySchedule(System.IO.Pipelines.PipeScheduler scheduler, System.IO.Pipelines.CompletionData& completionData) \r\nat System.IO.Pipelines.Pipe.FlushAsync(System.Threading.CancellationToken cancellationToken) \r\nat System.IO.Pipelines.Pipe+DefaultPipeWriter.FlushAsync(System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<FlushAsync>d__166.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<FlushAsync>d__166>(Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<FlushAsync>d__166& stateMachine) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests.FlushAsync(System.IO.Pipelines.PipeWriter writableBuffer) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests.SendAsync(System.ReadOnlySpan<System.Byte> span) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests.SendGoAwayAsync() \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<GOAWAY_Received_RelievesConnectionBackpressure>d__130.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object stateMachine) \r\nat System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run() \r\nat System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action action, System.Boolean allowInlining, System.Threading.Tasks.Task& currentTask) \r\nat System.Threading.Tasks.Task.FinishContinuations() \r\nat System.Threading.Tasks.Task.FinishStageThree() \r\nat System.Threading.Tasks.Task<System.__Canon>.TrySetResult(System.__Canon result) \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Frame>.SetResult(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Frame result) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<ExpectAsync>d__199.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object stateMachine) \r\nat System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run() \r\nat System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action action, System.Boolean allowInlining, System.Threading.Tasks.Task& currentTask) \r\nat System.Threading.Tasks.Task.FinishContinuations() \r\nat System.Threading.Tasks.Task.FinishStageThree() \r\nat System.Threading.Tasks.Task<System.__Canon>.TrySetResult(System.__Canon result) \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Frame>.SetResult(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Frame result) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<ReceiveFrameAsync>d__197.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object stateMachine) \r\nat System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run() \r\nat System.Runtime.CompilerServices.ValueTaskAwaiter+<>c.<.cctor>b__9_0(System.Object state) \r\nat System.IO.Pipelines.InlineScheduler.Schedule(System.Action<System.Object> action, System.Object state) \r\nat System.IO.Pipelines.Pipe.TrySchedule(System.IO.Pipelines.PipeScheduler scheduler, System.IO.Pipelines.CompletionData& completionData) \r\nat System.IO.Pipelines.Pipe.FlushAsync(System.Threading.CancellationToken cancellationToken) \r\nat System.IO.Pipelines.Pipe+DefaultPipeWriter.FlushAsync(System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.StreamSafePipeFlusher.FlushAsync(System.Int64 count, Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputProducer outputProducer, System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2FrameWriter.FlushAsync(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputProducer outputProducer, System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2OutputProducer.FlushAsync(System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.FlushAsync(System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.FlushAsync(System.Threading.CancellationToken cancellationToken) \r\nat System.IO.Stream.FlushAsync() \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<>c__DisplayClass130_0+<<GOAWAY_Received_RelievesConnectionBackpressure>b__0>d.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<>c__DisplayClass130_0+<<GOAWAY_Received_RelievesConnectionBackpressure>b__0>d>(Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<>c__DisplayClass130_0+<<GOAWAY_Received_RelievesConnectionBackpressure>b__0>d& stateMachine) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<>c__DisplayClass130_0.<GOAWAY_Received_RelievesConnectionBackpressure>b__0(Microsoft.AspNetCore.Http.HttpContext context) \r\nat Microsoft.AspNetCore.Testing.DummyApplication+<ProcessRequestAsync>d__7.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.AspNetCore.Testing.DummyApplication+<ProcessRequestAsync>d__7>(Microsoft.AspNetCore.Testing.DummyApplication+<ProcessRequestAsync>d__7& stateMachine) \r\nat Microsoft.AspNetCore.Testing.DummyApplication.ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext context) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequests>d__188<Microsoft.AspNetCore.Http.HttpContext>.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequests>d__188<Microsoft.AspNetCore.Http.HttpContext>>(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequests>d__188<Microsoft.AspNetCore.Http.HttpContext>& stateMachine) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests<Microsoft.AspNetCore.Http.HttpContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Http.HttpContext> application) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequestsAsync>d__187<Microsoft.AspNetCore.Http.HttpContext>.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequestsAsync>d__187<Microsoft.AspNetCore.Http.HttpContext>>(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequestsAsync>d__187<Microsoft.AspNetCore.Http.HttpContext>& stateMachine) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync<Microsoft.AspNetCore.Http.HttpContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Http.HttpContext> application) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection+<>c__58<Microsoft.AspNetCore.Http.HttpContext>.<StartStream>b__58_0(System.Object state) \r\nat System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem() \r\nat System.Threading.ThreadPoolWorkQueue.Dispatch() \r\nat System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() \r\nU-->M\r\n```\r\n```\r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2FrameWriter.WriteDataAsync(System.Int32 streamId, Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2StreamOutputFlowControl flowControl, System.Buffers.ReadOnlySequence<System.Byte> data, System.Boolean endStream) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2OutputProducer+<ProcessDataWrites>d__19.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object stateMachine) \r\nat System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) \r\nat System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run() \r\nat System.Runtime.CompilerServices.ValueTaskAwaiter+<>c.<.cctor>b__9_0(System.Object state) \r\nat System.IO.Pipelines.InlineScheduler.Schedule(System.Action<System.Object> action, System.Object state) \r\nat System.IO.Pipelines.Pipe.TrySchedule(System.IO.Pipelines.PipeScheduler scheduler, System.IO.Pipelines.CompletionData& completionData) \r\nat System.IO.Pipelines.Pipe.FlushAsync(System.Threading.CancellationToken cancellationToken) \r\nat System.IO.Pipelines.Pipe+DefaultPipeWriter.FlushAsync(System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.StreamSafePipeFlusher.FlushAsync(System.Int64 count, Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputProducer outputProducer, System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2OutputProducer.WriteDataAsync(System.ReadOnlySpan<System.Byte> data, System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.WriteAsync(System.ReadOnlyMemory<System.Byte> data, System.Threading.CancellationToken cancellationToken) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken) \r\nat System.IO.Stream.WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<>c__DisplayClass130_0+<<GOAWAY_Received_RelievesConnectionBackpressure>b__0>d.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<>c__DisplayClass130_0+<<GOAWAY_Received_RelievesConnectionBackpressure>b__0>d>(Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<>c__DisplayClass130_0+<<GOAWAY_Received_RelievesConnectionBackpressure>b__0>d& stateMachine) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests+<>c__DisplayClass130_0.<GOAWAY_Received_RelievesConnectionBackpressure>b__0(Microsoft.AspNetCore.Http.HttpContext context) \r\nat Microsoft.AspNetCore.Testing.DummyApplication+<ProcessRequestAsync>d__7.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.AspNetCore.Testing.DummyApplication+<ProcessRequestAsync>d__7>(Microsoft.AspNetCore.Testing.DummyApplication+<ProcessRequestAsync>d__7& stateMachine) \r\nat Microsoft.AspNetCore.Testing.DummyApplication.ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext context) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequests>d__188<Microsoft.AspNetCore.Http.HttpContext>.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequests>d__188<Microsoft.AspNetCore.Http.HttpContext>>(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequests>d__188<Microsoft.AspNetCore.Http.HttpContext>& stateMachine) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests<Microsoft.AspNetCore.Http.HttpContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Http.HttpContext> application) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequestsAsync>d__187<Microsoft.AspNetCore.Http.HttpContext>.MoveNext() \r\nat System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequestsAsync>d__187<Microsoft.AspNetCore.Http.HttpContext>>(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol+<ProcessRequestsAsync>d__187<Microsoft.AspNetCore.Http.HttpContext>& stateMachine) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync<Microsoft.AspNetCore.Http.HttpContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Http.HttpContext> application) \r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection+<>c__58<Microsoft.AspNetCore.Http.HttpContext>.<StartStream>b__58_0(System.Object state) \r\nat System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem() \r\nat System.Threading.ThreadPoolWorkQueue.Dispatch() \r\nat System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() \r\nU-->M\r\n```","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2722","RelatedDescription":"Open issue \"Kestrel test hangs (Control flow?)\" (#2722)"},{"Id":"340801614","IsPullRequest":true,"CreatedAt":"2018-07-13T03:34:13","Actor":"natemcmaster","Number":"2721","RawContent":null,"Title":"[2.1]: pin baseline package versions to 2.1.2","State":"closed","Body":"Part of https://github.com/aspnet/Home/issues/3316\n\nThis pins package versions to the 2.1.2 baseline. Universe will not override variables in the 'Pinned' section. This helps ensure that this repo does not upgrade its dependency versions for all future patches of 2.1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2721","RelatedDescription":"Closed or merged PR \"[2.1]: pin baseline package versions to 2.1.2\" (#2721)"},{"Id":"340494645","IsPullRequest":true,"CreatedAt":"2018-07-13T00:21:40","Actor":"natemcmaster","Number":"2717","RawContent":null,"Title":"[2.1] Remove usage of the Microsoft.Extensions.Buffers.Sources package","State":"closed","Body":"This moves source code that used to be in aspnet/Common. It was only used here, so this simplifies the process of working with these internal-only APIs.\r\n\r\ncref https://github.com/aspnet/Common/pull/386","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2717","RelatedDescription":"Closed or merged PR \"[2.1] Remove usage of the Microsoft.Extensions.Buffers.Sources package\" (#2717)"},{"Id":"340788716","IsPullRequest":false,"CreatedAt":"2018-07-12T20:36:09","Actor":"Tratcher","Number":"2720","RawContent":null,"Title":"Enable Http/2 by default for TLS connections","State":"open","Body":"This is an ask from @DamianEdwards and @shirhatti. \r\n\r\nPreferably this will be enabled for preview1 so we can get feedback. ","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2720","RelatedDescription":"Open issue \"Enable Http/2 by default for TLS connections\" (#2720)"},{"Id":"339981524","IsPullRequest":false,"CreatedAt":"2018-07-12T19:27:11","Actor":"natemcmaster","Number":"2709","RawContent":null,"Title":"Merge release/2.1 into 2.2","State":"closed","Body":"Will require manual effort to bring in the 2.1.2 changes into 2.2 correctly","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2709","RelatedDescription":"Closed issue \"Merge release/2.1 into 2.2\" (#2709)"},{"Id":"340393218","IsPullRequest":true,"CreatedAt":"2018-07-12T18:20:49","Actor":"halter73","Number":"2715","RawContent":null,"Title":" Merge branch 'release/2.1' into release/2.2","State":"closed","Body":"#2709","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2715","RelatedDescription":"Closed or merged PR \" Merge branch 'release/2.1' into release/2.2\" (#2715)"},{"Id":"340728308","IsPullRequest":true,"CreatedAt":"2018-07-12T17:46:28","Actor":"dotnet-maestro-bot","Number":"2718","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit fetch --force https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2718","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2718)"},{"Id":"339632066","IsPullRequest":false,"CreatedAt":"2018-07-12T16:52:14","Actor":"Tratcher","Number":"2706","RawContent":null,"Title":"PortSupportedCondition is unreliable","State":"closed","Body":"PortSupportedConditionAttribute is defined in AddressRegistrationTests and used to skip some test cases if a designated port is not available. Several of the tests that use it are flaky and fail with port already in use exceptions.\r\n\r\nProblem: skip conditions are evaluated once at the start of a test pass when the list of tests is built. The port may be available at that point, but can become unavailable before conditional test actually runs.\r\n\r\nThis is a strong contributor to https://github.com/aspnet/KestrelHttpServer/issues/2685, especailly these tests:\r\nAddressRegistrationTests.RegisterAddresses_IPv4Port5000Default_Success(addressInput: null, testUrl: \"http://127.0.0.1:5000/\") \r\nAddressRegistrationTests.RegisterAddresses_IPv6Port5000Default_Succes…Input: \"\", testUrls: [\"http://127.0.0.1:5000/\", \"http://[::1]:5000/\"])\r\nhttp://aspnetci/viewType.html?buildTypeId=XPlat_Windows_Win10Universe&branch_XPlat=%3Cdefault%3E&tab=buildTypeStatusDiv\r\n\r\nAll of the recent failures have been for the Sockets version of these tests, not Libuv. It's not clear what other tests these are conflicting with. It's not a libuv conflict since those run independently. It must be a test in one of the other projects since Libuv never experiences the same conflict.\r\n\r\nSecondary problem: PortSupportedConditionAttribute only checks if the IPv4 port is available, it doesn't check IPv6 even though some of the tests are specifically for IPv6. I haven't seen any test failures yet for this case, likely because IPv4 fails first.\r\n\r\n@ryanbrandenburg ","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2706","RelatedDescription":"Closed issue \"PortSupportedCondition is unreliable\" (#2706)"},{"Id":"340379447","IsPullRequest":true,"CreatedAt":"2018-07-12T16:51:39","Actor":"Tratcher","Number":"2714","RawContent":null,"Title":"Replace PortSupportedCondition","State":"closed","Body":" #2706 The PortSupportedCondition is unreliable because it runs when the tests are first discovered, not when they're executed. Move the check into the test.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2714","RelatedDescription":"Closed or merged PR \"Replace PortSupportedCondition\" (#2714)"},{"Id":"340477675","IsPullRequest":false,"CreatedAt":"2018-07-12T03:35:33","Actor":"FZ14","Number":"2716","RawContent":null,"Title":"Windows Authentication (Kerberos/NTLM) in asp.net core linux","State":"open","Body":"Hello.\r\nEnterprise Application Development still requires Windows Authentication (via NTLM/Kerberos).\r\nIt perhaps in asp.net core development model on kestrel server in Linux?","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2716","RelatedDescription":"Open issue \"Windows Authentication (Kerberos/NTLM) in asp.net core linux\" (#2716)"},{"Id":"340320380","IsPullRequest":true,"CreatedAt":"2018-07-11T16:40:39","Actor":"dotnet-maestro-bot","Number":"2713","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit fetch --force https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2713","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2713)"},{"Id":"340009270","IsPullRequest":true,"CreatedAt":"2018-07-10T21:59:20","Actor":"Tratcher","Number":"2712","RawContent":null,"Title":"Implement HTTP/2 output flow control (#2690)","State":"closed","Body":"Cherry picked https://github.com/aspnet/KestrelHttpServer/pull/2690 from Master back to release/2.2.\r\n\r\nCreating the PR just to make sure it still builds. We'll have to re-merge to master when we're done.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2712","RelatedDescription":"Closed or merged PR \"Implement HTTP/2 output flow control (#2690)\" (#2712)"},{"Id":"339988360","IsPullRequest":false,"CreatedAt":"2018-07-10T20:07:59","Actor":"halter73","Number":"2711","RawContent":null,"Title":"http/2: Rate Limiting","State":"open","Body":"Currently, no rate limits are enforced for HTTP/2 at either the connection or stream level.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2711","RelatedDescription":"Open issue \"http/2: Rate Limiting\" (#2711)"},{"Id":"339987914","IsPullRequest":false,"CreatedAt":"2018-07-10T20:06:29","Actor":"halter73","Number":"2710","RawContent":null,"Title":"http/2: Input Flow Control","State":"open","Body":"Implement the input half of #2629","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2710","RelatedDescription":"Open issue \"http/2: Input Flow Control\" (#2710)"},{"Id":"339930450","IsPullRequest":false,"CreatedAt":"2018-07-10T17:04:28","Actor":"blowdart","Number":"2708","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0 and 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core handles such requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/aspnet/Announcements/issues/311\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application is behind a forwarding proxy such is Internet Information Server, Azure Application Gateway or nginx you will not be affected.\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application is behind a forwarding proxy such is Internet Information Server, Azure Application Gateway or nginx you will not be affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Server.Kestrel.Core with a vulnerable version listed below and not hosted behind a forwarding proxy.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 2.0.4 <br /> 2.1.2\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.0.8 <br /> 2.1.0, 2.1.1  | 2.0.9 <br /> 2.1.2\r\nMicrosoft.AspNetCore.App | 2.1.0, 2.1.1 | 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Server.Kestrel.Core` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET 2.0 & 2.1 not targeting the meta-packages\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects.\r\n\r\nThe `project.assets.json`files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.8\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.All` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.9\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) .\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Server.Kestrel.Core/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Server.Kestrel.Core`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.34 />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.1 (July 10, 2018): Added .App meta-package details.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-07-10_\r\n","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2708","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\" (#2708)"},{"Id":"339572588","IsPullRequest":false,"CreatedAt":"2018-07-09T19:12:35","Actor":"Tratcher","Number":"2705","RawContent":null,"Title":"Add connection handshake perf scenario","State":"open","Body":"One scenario that's not covered today is the cost of creating new connections, especially over Tls. This will be even more relevant for Http/2 where Tls is defacto and there's also a settings handshake.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2705","RelatedDescription":"Open issue \"Add connection handshake perf scenario\" (#2705)"},{"Id":"339571018","IsPullRequest":false,"CreatedAt":"2018-07-09T19:07:13","Actor":"Tratcher","Number":"2704","RawContent":null,"Title":"Http2 perf setup","State":"open","Body":"Scenarios:\r\n- Most of the exiting 1.1 scenarios should translate with a few modifications\r\n  - Pipelining is the default (Multiplexing)\r\n  - Fewer connections, more requests per connections?\r\n  - Flow control tweaks?\r\n- Http & Https\r\n\r\nWe need to get Flow Control up and running before we can run any stress or perf scenarios.\r\n","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2704","RelatedDescription":"Open issue \"Http2 perf setup\" (#2704)"},{"Id":"339056015","IsPullRequest":false,"CreatedAt":"2018-07-06T23:20:09","Actor":"muratg","Number":"2702","RawContent":null,"Title":"Consider running Mac OS tests serially instead of in parallel","State":"closed","Body":"Tests are flaky on Mac -- a lot more than Windows or Linux.\r\n\r\nOur current thinking is that we may be hitting some resource limit on Mac and not other OSes. If this is true, running tests serially may help.\r\n\r\ncc @halter73 @Tratcher @JunTaoLuo ","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2702","RelatedDescription":"Closed issue \"Consider running Mac OS tests serially instead of in parallel\" (#2702)"},{"Id":"339086414","IsPullRequest":false,"CreatedAt":"2018-07-06T22:20:45","Actor":"Tratcher","Number":"2703","RawContent":null,"Title":"Re-implement received GOAWAY support","State":"open","Body":"https://tools.ietf.org/html/rfc7540#section-6.8\r\n\r\nThere's a rudimentary implementation for processing received GOAWAY frames that immediately aborts all streams and then closes the connection. GOAWAY is supposed to indicate a graceful shutdown, not an immediate abort. After a GOAWAY you're only guaranteed that the client will not open any new streams. They may continue to send you Window Updates, Pings, Data frames, etc., and the server may continue to send responses. Once all responses are complete then the server can send its own GOAWAY and close the connection. If the client really wants to abort the connection they will send a GOAWAY and then close the socket.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2703","RelatedDescription":"Open issue \"Re-implement received GOAWAY support\" (#2703)"},{"Id":"339035613","IsPullRequest":false,"CreatedAt":"2018-07-06T18:37:04","Actor":"ryanbrandenburg","Number":"2701","RawContent":null,"Title":"Flaky test: CanReadAndWriteWithHttpsConnectionAdapter","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=498343&buildTypeId=XPlat_Windows_Win10Universe) occasionally with the following error:\r\n```\r\nSystem.IO.IOException : Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..\r\n---- System.Net.Sockets.SocketException : The I/O operation has been aborted because of either a thread exit or an application request.\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error)\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.GetResult(Int16 token)\r\n   at System.Net.Security.SslStreamInternal.<FillBufferAsync>g__InternalFillBufferAsync|38_0[TReadAdapter](TReadAdapter adap, ValueTask`1 task, Int32 min, Int32 initial)\r\n   at System.Net.Security.SslStreamInternal.ReadAsyncInternal[TReadAdapter](TReadAdapter adapter, Memory`1 buffer)\r\n   at System.IO.StreamReader.ReadBufferAsync()\r\n   at System.IO.StreamReader.ReadToEndAsyncInternal()\r\n   at Microsoft.AspNetCore.Testing.HttpClientSlim.ReadResponse(Stream stream)\r\n   at Microsoft.AspNetCore.Testing.HttpClientSlim.PostAsync(Uri requestUri, HttpContent content, Boolean validateCertificate)\r\n   at Microsoft.AspNetCore.Testing.HttpClientSlim.PostAsync(String requestUri, HttpContent content, Boolean validateCertificate)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.HttpsConnectionAdapterTests.CanReadAndWriteWithHttpsConnectionAdapter() in /_/test/Kestrel.FunctionalTests/HttpsConnectionAdapterTests.cs:line 47\r\n--- End of stack trace from previous location where exception was thrown ---\r\n----- Inner Stack Trace -----\r\n------- Stdout: -------\r\n| [0.002s] TestLifetime Information: Starting test CanReadAndWriteWithHttpsConnectionAdapter at 2018-07-06T03:07:01\r\n| [0.010s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting starting\r\n| [0.011s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting started\r\n| [0.011s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Loaded hosting startup assembly Sockets.FunctionalTests, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\r\n| [1.185s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLF2TM3SL8AI\" started.\r\n| [1.200s] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.0 POST https://localhost:55865/ application/x-www-form-urlencoded 22\r\n| [1.200s] Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLF2TM3SL8AI\" received FIN.\r\n| [1.200s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLF2TM3SL8AI\" disconnecting.\r\n| [1.200s] Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLF2TM3SL8AI\" sending FIN.\r\n| [1.204s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting shutdown\r\n| [1.205s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLF2TM3SL8AI\", Request id \"0HLF2TM3SL8AI:00000001\": started reading request body.\r\n| [1.205s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLF2TM3SL8AI\", Request id \"0HLF2TM3SL8AI:00000001\": done reading request body.\r\n| [1.205s] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 5.1166ms 200 \r\n| [1.205s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLF2TM3SL8AI\" stopped.\r\n| [1.298s] TestLifetime Information: Finished test CanReadAndWriteWithHttpsConnectionAdapter in 1.2952046s\r\n```","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2701","RelatedDescription":"Open issue \"Flaky test: CanReadAndWriteWithHttpsConnectionAdapter\" (#2701)"},{"Id":"339003877","IsPullRequest":false,"CreatedAt":"2018-07-06T16:44:45","Actor":"Tratcher","Number":"2700","RawContent":null,"Title":"Convert Write100ContinueAsync to sync","State":"open","Body":"IHttpOutputProducer.Write100ContinueAsync is only ever called synchronously from HttpProtocol.ProduceContinue. It can and should be reimplemented synchronously.\r\n\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/2191327b59f87f23f69fff2ac0dba9e58b67141b/src/Kestrel.Core/Internal/Http/HttpProtocol.cs#L969","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2700","RelatedDescription":"Open issue \"Convert Write100ContinueAsync to sync\" (#2700)"},{"Id":"338087811","IsPullRequest":false,"CreatedAt":"2018-07-05T17:12:08","Actor":"WasserEsser","Number":"2697","RawContent":null,"Title":"AuthenticationException with Client Cert Auth, only in Chrome","State":"closed","Body":"Hi,\r\n\r\nI'm not quite sure if this is the right repository for this, excuse me if it isn't.\r\n\r\nI'm having issues implementing client certificate authentication in ASP.NET Core using Kestrel.\r\nMore specifically, I'm getting an exception (System.Security.Authentication.AuthenticationException) when connecting to the server via Chrome with a client certificate. Using Firefox or Edge/IE with the same client certificate works fine. \r\nWhen digging into it using Wireshark, the only real difference I can find is that Firefox and Edge are using ecdsa_secp256r1_sha256 as the signature algorithm in the Certificate Verify message while Chrome uses ecdsa_secp384r1_sha384.\r\n\r\nThis is the stack trace when connecting via Chrome:\r\n\r\n> Microsoft.AspNetCore.Server.Kestrel[0]\r\n>       Uncaught exception from the OnConnectionAsync method of an IConnectionAdapter.\r\n> System.Security.Authentication.AuthenticationException: A call to SSPI failed, see inner exception. ---> System.ComponentModel.Win32Exception: The token supplied to the function is invalid\r\n>    --- End of inner exception stack trace ---\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n>    at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n>    at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n>    at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n>    at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n>    at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n>    at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n>    at System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)\r\n>    at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter.<InnerOnConnectionAsync>d__12.MoveNext()\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.FrameConnection.<ApplyConnectionAdaptersAsync>d__50.MoveNext()\r\n\r\nIs the signature algorithm supported here? \r\n\r\nAny other ideas what could cause this? \r\n\r\nChrome is not really helping in debugging this as the only thing it is reporting is ERR_CONNECTION_CLOSED. ","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2697","RelatedDescription":"Closed issue \"AuthenticationException with Client Cert Auth, only in Chrome\" (#2697)"},{"Id":"338419723","IsPullRequest":false,"CreatedAt":"2018-07-05T03:55:17","Actor":"1amirjalai","Number":"2699","RawContent":null,"Title":"kesterl An existing connection was forcibly closed by the remote host","State":"open","Body":"asp.net core 2.1 \r\n\r\nSystem.IO.IOException: An existing connection was forcibly closed by the remote host ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketAwaitable.GetResult() at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.ProcessSends() at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.DoSend() --- End of inner exception stack trace --- at System.IO.Pipelines.PipeCompletion.ThrowLatchedException() at System.IO.Pipelines.Pipe.GetFlushResult(FlushResult& result) at System.IO.Pipelines.Pipe.FlushAsync(CancellationToken cancellationToken) at System.IO.Pipelines.Pipe.DefaultPipeWriter.FlushAsync(CancellationToken cancellationToken) at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1OutputProducer.WriteAsync(ReadOnlySpan`1 buffer, CancellationToken cancellationToken) at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1OutputProducer.FlushAsync(CancellationToken cancellationToken) at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1OutputProducer.WriteAsync[T](Func`3 callback, T state) at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.WriteChunkedAsync(ReadOnlyMemory`1 data, CancellationToken cancellationToken) at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.WriteAsync(ReadOnlyMemory`1 data, CancellationToken cancellationToken) at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken) at System.IO.Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count) at Microsoft.AspNetCore.WebUtilities.HttpResponseStreamWriter.FlushInternalAsync(Boolean flushEncoder) at Microsoft.AspNetCore.WebUtilities.HttpResponseStreamWriter.WriteAsync(String value) at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PagedBufferedTextWriter.WriteAsync(String value) at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewBuffer.WriteToAsync(TextWriter writer, HtmlEncoder encoder) at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderLayoutAsync(ViewContext context, ViewBufferTextWriter bodyWriter) at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context) at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode) at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode) at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result) at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context) at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result) at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]() at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context) at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted) at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters() at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter() at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context) at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted) at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync() at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync() at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext) at x.xi.Startup.<>c.<<Configure>b__7_0>d.MoveNext() in x:\\x\\Startup.cs:line 357 --- End of stack trace from previous location where exception was thrown --- at NWebsec.AspNetCore.Middleware.Middleware.MiddlewareBase.Invoke(HttpContext context) at NWebsec.AspNetCore.Middleware.Middleware.MiddlewareBase.Invoke(HttpContext context) at NWebsec.AspNetCore.Middleware.Middleware.MiddlewareBase.Invoke(HttpContext context) at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context) at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context) at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context) at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context) at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext) at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context) at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context) at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context) at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext) at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\n\r\nline 357 is :\r\n\r\n                app.Use(async (context, next) =>\r\n                {\r\n                    if (context.Request.Scheme == \"http\")\r\n                    {\r\n                        context.Request.Scheme = \"https\";\r\n                    }\r\n                    await next.Invoke();  =====>   **this is line 357**\r\n                });\r\n\r\nmy app is heavily dependent on redis and rabbitmq after this error i got lots of rabbitmq error\r\n\r\nRabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable ---> System.IO.IOException: Unable to write data to the transport connection: An existing connection was forcibly closed by the remote host. ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host ","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2699","RelatedDescription":"Open issue \"kesterl An existing connection was forcibly closed by the remote host\" (#2699)"},{"Id":"338208938","IsPullRequest":false,"CreatedAt":"2018-07-04T09:54:57","Actor":"borland","Number":"2698","RawContent":null,"Title":"Microsoft.AspNetCore.Server.Kestrel.Core depends simultaneously on both System.Numerics.Vectors nuget package version 4.4.0 and 4.5.0 - the wrong one can end up in the bin dir causing programs not to start","State":"open","Body":"`Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1` depends on nuget package `System.Numerics.Vectors 4.5.0` (assembly is actually System.Numerics.Vectors 4.1.4.0)\r\n*aside: I wish microsoft would please stop mismatching nuget and assembly versions, it makes dependency issues incredibly hard to track down and is super confusing*\r\n\r\n`Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1` also depends on package `System.Memory 4.5.1` which in turn depends on `System.Numerics.Vectors 4.4.0` (assembly version 4.1.3.0)\r\n\r\nReference: https://www.fuget.org/packages/Microsoft.AspNetCore.Server.Kestrel.Core/2.1.1\r\n\r\nNote: aspnetcore 2.1.0 also has this same issue.\r\n\r\nThis manifests itself in our product (running on desktop framework 4.6.1 targeting netstandard2.0) as randomly sometimes getting different versions of `System.Numerics.Vectors` copied into our debug\\bin or release\\bin directory. We have an assembly binding redirect to target `System.Numerics.Vectors 4.1.4.0`, which mostly works, but sometimes visual studio/msbuild decides to drop 4.1.3.0 into the bin directory instead and our app crashes on startup with an assembly version mismatch exception.\r\n\r\nI haven't been able to determine why exactly sometimes S.N.V 4.1.4.0 is copied and why other times 4.1.3.0 is copied.\r\nI tried putting an explict dependency on the S.N.V 4.5.0 nuget package into our application, to try and force 4.1.4.0 to get put there, however it didn't solve the problem and 4.1.3.0 would sometimes get put there.\r\n\r\nSo - Could the versions of `System.Numerics.Vectors` please be aligned so that kestrel only depends on a single version?\r\n\r\nAlso, is there any workaround or something we can do to reliably control which version ends up in the bin dir? I don't mind which version it is, but it needs to be consistent or the assembly binding redirect in our app config will be wrong :-(","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2698","RelatedDescription":"Open issue \"Microsoft.AspNetCore.Server.Kestrel.Core depends simultaneously on both System.Numerics.Vectors nuget package version 4.4.0 and 4.5.0 - the wrong one can end up in the bin dir causing programs not to start\" (#2698)"}],"ResultType":"GitHubIssue"},"Razor-Issues":{"Issues":[{"Id":"341279771","IsPullRequest":false,"CreatedAt":"2018-07-15T00:01:09","Actor":"nfplee","Number":"2481","RawContent":null,"Title":"Razor SDK view doesn't honour _ViewImports file provider","State":"open","Body":"My application has the following file provider defined:\r\n\r\n```\r\npublic class ViewImportsFileProvider : IFileProvider {\r\n    public IDirectoryContents GetDirectoryContents(string subpath) {\r\n        return null;\r\n    }\r\n\r\n    public IFileInfo GetFileInfo(string subpath) {\r\n        if (subpath == \"/_ViewImports\" + RazorViewEngine.ViewExtension)\r\n            return new ContentFileInfo(\"_ViewImports\" + RazorViewEngine.ViewExtension, \r\n                \"@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers\");\r\n\r\n        return null;\r\n    }\r\n\r\n    public IChangeToken Watch(string filter) {\r\n        return null;\r\n    }\r\n}\r\n\r\npublic class ContentFileInfo : IFileInfo {\r\n    private readonly byte[] _content;\r\n\r\n    public ContentFileInfo(string name, string content) {\r\n        Name = name;\r\n        _content = Encoding.UTF8.GetBytes(content);\r\n    }\r\n\r\n    public bool Exists => true;\r\n\r\n    public long Length => _content.Length;\r\n\r\n    public string PhysicalPath => null;\r\n\r\n    public string Name { get; }\r\n\r\n    public DateTimeOffset LastModified => DateTimeOffset.MinValue;\r\n\r\n    public bool IsDirectory => false;\r\n\r\n    public Stream CreateReadStream() {\r\n        return new MemoryStream(_content);\r\n    }\r\n}\r\n```\r\n\r\nNow say I have a view with the following content:\r\n\r\n```\r\n<a asp-action=\"Contact\">Contact</a>\r\n```\r\n\r\nThe tag helper works fine if the view is within my application but doesn't if it is within a class library (using the Razor SDK).","Url":"https://github.com/aspnet/Razor/issues/2481","RelatedDescription":"Open issue \"Razor SDK view doesn't honour _ViewImports file provider\" (#2481)"},{"Id":"341244507","IsPullRequest":false,"CreatedAt":"2018-07-14T15:32:48","Actor":"varghesep","Number":"2480","RawContent":null,"Title":"Dynamically loaded Views can't load tag helpers","State":"open","Body":"I posted this problem [here ](https://stackoverflow.com/questions/51334671/taghelpers-not-working-when-assembly-is-dynamically-loaded-in-asp-net-core-2-1)in StackOverflow.\r\n\r\nDynamically loading the views from different dlls from a **plugin** folder works, but the tag helpers in those views are not working. The **TagHelperFeatureProvider** has the parts where these tag helpers are in and the **TagHelperFeature** listing shows that the customer tag helpers are present in them. But during the run time, the razor view ignore the tag helpers completely.\r\n\r\nIf I add the assemblies/dlls as dependencies to the main parent app, it works fine. But if I remove the dependencies and load the assemblies in assemblypart and during the run time, the tag helpers fail to execute.\r\n\r\nSetup: I'm using asp.net core 2.1.\r\n","Url":"https://github.com/aspnet/Razor/issues/2480","RelatedDescription":"Open issue \"Dynamically loaded Views can't load tag helpers\" (#2480)"},{"Id":"340343266","IsPullRequest":false,"CreatedAt":"2018-07-14T00:19:20","Actor":"NTaylorMullen","Number":"2470","RawContent":null,"Title":"Certain Sequence of Text/HTML on Razor Page Results in Error \"rzc generate exited with code 1\" During Build","State":"closed","Body":"_From @karelz on July 4, 2018 2:37_\n\n_From @robinwilson16 on July 3, 2018 19:3_\n\nI have discovered a strange bug where certain text and HTML I add to a Razor page results in the following error and the project failing to build and this did not occur on 2.0 as I am migrating the existing pages:\r\n```\r\nrzc generate exited with code 1.\r\nWebApplication1\t\r\nC:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.design\\2.1.1\\build\\netstandard2.0\\Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets\t121\t\r\n```\r\n\r\nI can make the error go away by just changing the formatting slightly such as removing some of the blank line breaks, removing the emoticon or removing the img tag but either way the syntax is valid.\r\nAlso until I get rid of the error I cannot create any new razor pages either as get the same error.\r\n\r\nI did wonder if there was some special character but as changing any bits of the text cause it to work again it seems to just not like this exact sequence of text.\r\n\r\nI can replicate by creating a new .NET Core Web Application in VS.NET (latest build) and pasting the following into one of the Razor pages exactly as is:\r\n```\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-4\">\r\n            <img src=\"~/images/TroubleGettingFinanceWeCanHelp.jpg\" class=\"img-fluid mx-auto d-block\" alt=\"Trouble getting finance? We can help\">\r\n        </div>\r\n        <div class=\"col-sm-8\">\r\n            <p>Metro Centre Auto World is a family owned and run business.</p>\r\n\r\n            <p>We pride ourselves on the great service we provide to all of our customers.</p>\r\n\r\n            <p>Been turned down for finance? We can help with finance options tailored to suit your needs.</p>\r\n\r\n            <p>We understand that buying a car can be a daunting prospect, so we strive to make the buying process as simple and hassle-free as possible.</p>\r\n\r\n            <p>But don't just take our word for it, <a href=\"https://www.autotrader.co.uk/services/car-dealers/uk/north-east/tyne-and-wear/gateshead/mainline-uk-gateshead-dpp-27856/reviews/true\" target=\"_blank\" rel=\"noopener\">see what some of our customers have to say about us...</a></p>\r\n\r\n            <a class=\"btn btn-light\" href=\"https://www.autotrader.co.uk/services/car-dealers/uk/north-east/tyne-and-wear/gateshead/mainline-uk-gateshead-dpp-27856/reviews/true\" target=\"_blank\" rel=\"noopener\">\r\n                💬 See what people are saying\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n```\r\nI just need to remove a line break between any of the sets of P tags and the build is successful.\r\nThe page did have more content on it but I reduced it down to find which bit was triggering the error.\n\n_Copied from original issue: dotnet/corefx#30816_\n\n_Copied from original issue: aspnet/Home#3294_","Url":"https://github.com/aspnet/Razor/issues/2470","RelatedDescription":"Closed issue \"Certain Sequence of Text/HTML on Razor Page Results in Error \"rzc generate exited with code 1\" During Build\" (#2470)"},{"Id":"341136330","IsPullRequest":true,"CreatedAt":"2018-07-14T00:18:57","Actor":"NTaylorMullen","Number":"2477","RawContent":null,"Title":"Change HTML splitting logic to not split on surrogate pairs.","State":"closed","Body":"- When a surrogate pair is about to be split down the middle we reduce the size of our split by 1 character. This way we split right before a surrogate pair. In the case of zero width joiners, if we split on a zero width joiner we still render valid bytes because the zero width joiner by itself can stand alone.\r\n- Added tests for the various split cases.\r\n\r\n#2470","Url":"https://github.com/aspnet/Razor/pull/2477","RelatedDescription":"Closed or merged PR \"Change HTML splitting logic to not split on surrogate pairs.\" (#2477)"},{"Id":"341170193","IsPullRequest":false,"CreatedAt":"2018-07-13T21:52:27","Actor":"jkotalik","Number":"2479","RawContent":null,"Title":"Long path issues for ParserTests","State":"open","Body":"Trying to pull master and it fails due to long path issues. Possible to shorten it?\r\n```\r\nerror: unable to create file test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/ParserTests/CSharpBlockTest/ParseBlockSkipsParenthesisedExpressionAndThenBalancesBracesIfFirstIdentifierIsIfKeywordWithNoElseBranches.syntaxtree.txt: Filename too long\r\n```","Url":"https://github.com/aspnet/Razor/issues/2479","RelatedDescription":"Open issue \"Long path issues for ParserTests\" (#2479)"},{"Id":"341148833","IsPullRequest":false,"CreatedAt":"2018-07-13T20:24:26","Actor":"shoe788","Number":"2478","RawContent":null,"Title":"Automatic view compilation isn't happening in asp.net core 2.1.2","State":"open","Body":"When I upgraded my project to asp.net core 2.1.2 and the ViewCompilation package to 2.1.1 the automatic view compilation doesn't appear to be working when I publish\r\n\r\nTo test I created two new projects from the asp.net core templates targeting .net framework 4.6.2. In one of them I upgrade it to asp.net core 2.1.2 and the other is default asp.net core 2.0.4 with ViewCompilation 2.0.4.\r\n\r\nThe resulting output is below\r\n\r\nViewCompilation 2.0.4\r\n\r\n![ViewCompilation 2.0.4](https://i.imgur.com/1p8PYnc.png)\r\n\r\nViewCompilation 2.1.1\r\n\r\n![ViewCompilation 2.1.1](https://i.imgur.com/GaV7uKs.png)\r\n\r\ncsProj for 2.0.4\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.ViewCompilation\" Version=\"2.0.4\" PrivateAssets=\"All\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.BrowserLink\" Version=\"2.0.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\ncsProj for 2.1.2\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.1.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.ViewCompilation\" Version=\"2.1.1\" PrivateAssets=\"All\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.BrowserLink\" Version=\"2.1.1\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n\r\n","Url":"https://github.com/aspnet/Razor/issues/2478","RelatedDescription":"Open issue \"Automatic view compilation isn't happening in asp.net core 2.1.2\" (#2478)"},{"Id":"341073770","IsPullRequest":false,"CreatedAt":"2018-07-13T16:00:13","Actor":"Eilon","Number":"2476","RawContent":null,"Title":"Refactoring/Renaming Inside Razor Views","State":"open","Body":"_From @stap123 on July 13, 2018 9:9_\n\nIs there a way to to have refactoring (specifically renaming things) work inside razor view files within VS2017? I thought I'd heard Damien mention that it was possible in a community stand up video a while ago but can't work out how to do it.\r\n\r\nIf it's not possible is it planned at all?\r\n\n\n_Copied from original issue: aspnet/Home#3326_","Url":"https://github.com/aspnet/Razor/issues/2476","RelatedDescription":"Open issue \"Refactoring/Renaming Inside Razor Views\" (#2476)"},{"Id":"340801622","IsPullRequest":true,"CreatedAt":"2018-07-13T01:30:25","Actor":"natemcmaster","Number":"2475","RawContent":null,"Title":"[2.1]: pin baseline package versions to 2.1.2","State":"closed","Body":"Part of https://github.com/aspnet/Home/issues/3316\n\nThis pins package versions to the 2.1.2 baseline. Universe will not override variables in the 'Pinned' section. This helps ensure that this repo does not upgrade its dependency versions for all future patches of 2.1.","Url":"https://github.com/aspnet/Razor/pull/2475","RelatedDescription":"Closed or merged PR \"[2.1]: pin baseline package versions to 2.1.2\" (#2475)"},{"Id":"340791473","IsPullRequest":true,"CreatedAt":"2018-07-12T20:44:28","Actor":"dotnet-maestro-bot","Number":"2474","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"open","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @pranavkm\n* @aspnetci\n* @ajaybhargavb\n* @NTaylorMullen\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Razor merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Razor/pull/2474","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2474)"},{"Id":"340282143","IsPullRequest":false,"CreatedAt":"2018-07-12T16:34:36","Actor":"nfplee","Number":"2469","RawContent":null,"Title":"Razor SDK - View.dll file not generated if \"Microsoft.AspNetCore.Mvc\" reference within dependent project","State":"closed","Body":"If a project (e.g. MyLibrary) using the \"Microsoft.NET.Sdk.Razor\" SDK has a package reference to \"Microsoft.AspNetCore.Mvc\" then it will generate the MyLibrary.Views.dll on build.\r\n\r\nHowever if the MyLibrary project doesn't reference \"Microsoft.AspNetCore.Mvc\" directly but instead has a reference to another project which itself has a package reference to \"Microsoft.AspNetCore.Mvc\" then it doesn't generate the MyLibrary.Views.dll on build.\r\n\r\nI was wondering if this is a potential bug or is there a solution?","Url":"https://github.com/aspnet/Razor/issues/2469","RelatedDescription":"Closed issue \"Razor SDK - View.dll file not generated if \"Microsoft.AspNetCore.Mvc\" reference within dependent project\" (#2469)"},{"Id":"340674798","IsPullRequest":false,"CreatedAt":"2018-07-12T16:16:49","Actor":"rainersigwald","Number":"2473","RawContent":null,"Title":"MSBuild Don't Care Razor Page Has Error","State":"closed","Body":"_From @SoheilAlizade on July 12, 2018 13:2_\n\n[ Sample Project](https://github.com/SoheilAlizade/MSBuildRazorIssue)\r\n[Visual Studio 2017 Build log](https://gist.github.com/SoheilAlizade/8055f7eedb7d1265fb010ba59bfecc30)\r\n[Rider Build log](https://gist.github.com/SoheilAlizade/cae3a53a1070523fe3eca048a7e77a4e)\r\n[YouTrack Issue](https://youtrack.jetbrains.com/issue/RIDER-17255)\r\n\r\nProject file\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"4.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"..\\packages\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.1.0.8\\build\\net45\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.props\" Condition=\"Exists('..\\packages\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.1.0.8\\build\\net45\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.props')\" />\r\n  <Import Project=\"..\\packages\\Microsoft.Net.Compilers.1.3.2\\build\\Microsoft.Net.Compilers.props\" Condition=\"Exists('..\\packages\\Microsoft.Net.Compilers.1.3.2\\build\\Microsoft.Net.Compilers.props')\" />\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\r\n  <PropertyGroup>\r\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\r\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\r\n    <ProjectGuid>{173928F0-6FAA-492A-89AF-909ADAE24DDE}</ProjectGuid>\r\n    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>\r\n    <OutputType>Library</OutputType>\r\n    <AppDesignerFolder>Properties</AppDesignerFolder>\r\n    <RootNamespace>MSBuildRazorIssue</RootNamespace>\r\n    <AssemblyName>MSBuildRazorIssue</AssemblyName>\r\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\r\n    <MvcBuildViews>false</MvcBuildViews>\r\n    <UseIISExpress>true</UseIISExpress>\r\n    <Use64BitIISExpress />\r\n    <IISExpressSSLPort />\r\n    <IISExpressAnonymousAuthentication />\r\n    <IISExpressWindowsAuthentication />\r\n    <IISExpressUseClassicPipelineMode />\r\n    <UseGlobalApplicationHostFile />\r\n    <NuGetPackageImportStamp />\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <Optimize>false</Optimize>\r\n    <OutputPath>bin\\</OutputPath>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\</OutputPath>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"Microsoft.CSharp\" />\r\n    <Reference Include=\"System\" />\r\n    <Reference Include=\"System.Core\" />\r\n    <Reference Include=\"System.Configuration\" />\r\n    <Reference Include=\"System.ComponentModel.DataAnnotations\" />\r\n    <Reference Include=\"System.Data\" />\r\n    <Reference Include=\"System.Data.DataSetExtensions\" />\r\n    <Reference Include=\"System.Drawing\" />\r\n    <Reference Include=\"System.EnterpriseServices\" />\r\n    <Reference Include=\"System.Web.DynamicData\" />\r\n    <Reference Include=\"System.Web.ApplicationServices\" />\r\n    <Reference Include=\"System.Web\" />\r\n    <Reference Include=\"System.Web.Extensions\" />\r\n    <Reference Include=\"System.Web.Abstractions\" />\r\n    <Reference Include=\"System.Web.Routing\" />\r\n    <Reference Include=\"System.Web.Services\" />\r\n    <Reference Include=\"System.Net.Http\" />\r\n    <Reference Include=\"System.Net.Http.WebRequest\" />\r\n    <Reference Include=\"System.Xml\" />\r\n    <Reference Include=\"System.Xml.Linq\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.8.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.1.0.8\\lib\\net45\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.Web.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <Private>True</Private>\r\n      <HintPath>..\\packages\\Microsoft.Web.Infrastructure.1.0.0.0\\lib\\net40\\Microsoft.Web.Infrastructure.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Web.Helpers, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <Private>True</Private>\r\n      <HintPath>..\\packages\\Microsoft.AspNet.WebPages.3.2.3\\lib\\net45\\System.Web.Helpers.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <Private>True</Private>\r\n      <HintPath>..\\packages\\Microsoft.AspNet.Mvc.5.2.3\\lib\\net45\\System.Web.Mvc.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Web.Optimization\">\r\n      <HintPath>..\\packages\\Microsoft.AspNet.Web.Optimization.1.1.3\\lib\\net40\\System.Web.Optimization.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Web.Razor, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <Private>True</Private>\r\n      <HintPath>..\\packages\\Microsoft.AspNet.Razor.3.2.3\\lib\\net45\\System.Web.Razor.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Web.WebPages, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <Private>True</Private>\r\n      <HintPath>..\\packages\\Microsoft.AspNet.WebPages.3.2.3\\lib\\net45\\System.Web.WebPages.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Web.WebPages.Deployment, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <Private>True</Private>\r\n      <HintPath>..\\packages\\Microsoft.AspNet.WebPages.3.2.3\\lib\\net45\\System.Web.WebPages.Deployment.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Web.WebPages.Razor, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <Private>True</Private>\r\n      <HintPath>..\\packages\\Microsoft.AspNet.WebPages.3.2.3\\lib\\net45\\System.Web.WebPages.Razor.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"WebGrease\">\r\n      <Private>True</Private>\r\n      <HintPath>..\\packages\\WebGrease.1.5.2\\lib\\WebGrease.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Antlr3.Runtime\">\r\n      <Private>True</Private>\r\n      <HintPath>..\\packages\\Antlr.3.4.1.9004\\lib\\Antlr3.Runtime.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Newtonsoft.Json\">\r\n      <HintPath>..\\packages\\Newtonsoft.Json.6.0.4\\lib\\net45\\Newtonsoft.Json.dll</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"App_Start\\BundleConfig.cs\" />\r\n    <Compile Include=\"App_Start\\FilterConfig.cs\" />\r\n    <Compile Include=\"App_Start\\RouteConfig.cs\" />\r\n    <Compile Include=\"Controllers\\HomeController.cs\" />\r\n    <Compile Include=\"Global.asax.cs\">\r\n      <DependentUpon>Global.asax</DependentUpon>\r\n    </Compile>\r\n    <Compile Include=\"Models\\CreateModel.cs\" />\r\n    <Compile Include=\"Properties\\AssemblyInfo.cs\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"Content\\bootstrap.css\" />\r\n    <Content Include=\"Content\\bootstrap.min.css\" />\r\n    <Content Include=\"favicon.ico\" />\r\n    <Content Include=\"fonts\\glyphicons-halflings-regular.svg\" />\r\n    <Content Include=\"Global.asax\" />\r\n    <Content Include=\"Content\\Site.css\" />\r\n    <Content Include=\"Scripts\\bootstrap.js\" />\r\n    <Content Include=\"Scripts\\bootstrap.min.js\" />\r\n    <None Include=\"Scripts\\jquery-1.10.2.intellisense.js\" />\r\n    <Content Include=\"Scripts\\jquery-1.10.2.js\" />\r\n    <Content Include=\"Scripts\\jquery-1.10.2.min.js\" />\r\n    <Content Include=\"Scripts\\jquery-1.10.2.min.map\" />\r\n    <None Include=\"Scripts\\jquery.validate-vsdoc.js\" />\r\n    <Content Include=\"Scripts\\jquery.validate.js\" />\r\n    <Content Include=\"Scripts\\jquery.validate.min.js\" />\r\n    <Content Include=\"Scripts\\jquery.validate.unobtrusive.js\" />\r\n    <Content Include=\"Scripts\\jquery.validate.unobtrusive.min.js\" />\r\n    <Content Include=\"Scripts\\modernizr-2.6.2.js\" />\r\n    <Content Include=\"Scripts\\respond.js\" />\r\n    <Content Include=\"Scripts\\respond.min.js\" />\r\n    <Content Include=\"Views\\Home\\Create.cshtml\" />\r\n    <Content Include=\"Web.config\" />\r\n    <Content Include=\"Web.Debug.config\">\r\n      <DependentUpon>Web.config</DependentUpon>\r\n    </Content>\r\n    <Content Include=\"Web.Release.config\">\r\n      <DependentUpon>Web.config</DependentUpon>\r\n    </Content>\r\n    <Content Include=\"Views\\Web.config\" />\r\n    <Content Include=\"Views\\_ViewStart.cshtml\" />\r\n    <Content Include=\"Views\\Shared\\Error.cshtml\" />\r\n    <Content Include=\"Views\\Shared\\_Layout.cshtml\" />\r\n    <Content Include=\"Views\\Home\\About.cshtml\" />\r\n    <Content Include=\"Views\\Home\\Contact.cshtml\" />\r\n    <Content Include=\"Views\\Home\\Index.cshtml\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"App_Data\\\" />\r\n    <Folder Include=\"Models\\\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"fonts\\glyphicons-halflings-regular.woff\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"fonts\\glyphicons-halflings-regular.ttf\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"fonts\\glyphicons-halflings-regular.eot\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Include=\"packages.config\" />\r\n  </ItemGroup>\r\n  <PropertyGroup>\r\n    <VisualStudioVersion Condition=\"'$(VisualStudioVersion)' == ''\">10.0</VisualStudioVersion>\r\n    <VSToolsPath Condition=\"'$(VSToolsPath)' == ''\">$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)</VSToolsPath>\r\n  </PropertyGroup>\r\n  <Import Project=\"$(MSBuildBinPath)\\Microsoft.CSharp.targets\" />\r\n  <Import Project=\"$(VSToolsPath)\\WebApplications\\Microsoft.WebApplication.targets\" Condition=\"Exists('$(VSToolsPath)\\WebApplications\\Microsoft.WebApplication.targets')\" />\r\n  <PropertyGroup>\r\n    <WebProjectOutputDir Condition=\"'$(WebProjectOutputDir)' == ''\">$(MSBuildProjectDirectory)</WebProjectOutputDir>\r\n  </PropertyGroup>\r\n  <Target Name=\"MvcBuildViews\" AfterTargets=\"AfterBuild\" Condition=\"'$(MvcBuildViews)'=='true'\">\r\n    <AspNetCompiler VirtualPath=\"temp\" PhysicalPath=\"$(WebProjectOutputDir)\" />\r\n  </Target>\r\n  <ProjectExtensions>\r\n    <VisualStudio>\r\n      <FlavorProperties GUID=\"{349c5851-65df-11da-9384-00065b846f21}\">\r\n        <WebProjectProperties>\r\n          <UseIIS>True</UseIIS>\r\n          <AutoAssignPort>True</AutoAssignPort>\r\n          <DevelopmentServerPort>5000</DevelopmentServerPort>\r\n          <DevelopmentServerVPath>/</DevelopmentServerVPath>\r\n          <IISUrl>http://localhost:5000/</IISUrl>\r\n          <NTLMAuthentication>False</NTLMAuthentication>\r\n          <UseCustomServer>False</UseCustomServer>\r\n          <CustomServerUrl />\r\n          <SaveServerSettingsInUserFile>False</SaveServerSettingsInUserFile>\r\n        </WebProjectProperties>\r\n      </FlavorProperties>\r\n    </VisualStudio>\r\n  </ProjectExtensions>\r\n  <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\r\n    <PropertyGroup>\r\n      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them. For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>\r\n    </PropertyGroup>\r\n    <Error Condition=\"!Exists('..\\packages\\Microsoft.Net.Compilers.1.3.2\\build\\Microsoft.Net.Compilers.props')\" Text=\"$([System.String]::Format('$(ErrorText)', '..\\packages\\Microsoft.Net.Compilers.1.3.2\\build\\Microsoft.Net.Compilers.props'))\" />\r\n    <Error Condition=\"!Exists('..\\packages\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.1.0.8\\build\\net45\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.props')\" Text=\"$([System.String]::Format('$(ErrorText)', '..\\packages\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.1.0.8\\build\\net45\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.props'))\" />\r\n  </Target>\r\n  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.\r\n         Other similar extension points exist, see Microsoft.Common.targets.\r\n    <Target Name=\"BeforeBuild\">\r\n    </Target>\r\n    <Target Name=\"AfterBuild\">\r\n    </Target> -->\r\n</Project>\r\n```\r\n\r\nCommand line\r\n```\r\nmsbuild /bl\r\n\r\nBuild started 7/12/2018 5:15:33 PM.\r\nProject \"C:\\Users\\Soheil Alizadeh\\RiderProjects\\MSBuildRazorIssue\\MSBuildRazorIssue\\MSBuildRazorIssue.csproj\" on node 1 (default targets).\r\nGenerateTargetFrameworkMonikerAttribute:\r\nSkipping target \"GenerateTargetFrameworkMonikerAttribute\" because all output files are up-to-date with respect to the input files.\r\nCoreCompile:\r\nSkipping target \"CoreCompile\" because all output files are up-to-date with respect to the input files.\r\n_CopyFilesMarkedCopyLocal:\r\n  Touching \"C:\\Users\\Soheil Alizadeh\\RiderProjects\\MSBuildRazorIssue\\MSBuildRazorIssue\\obj\\Debug\\MSBuildRazorIssue.csproj.CopyComplete\".\r\n_CopyAppConfigFile:\r\nSkipping target \"_CopyAppConfigFile\" because all output files are up-to-date with respect to the input files.\r\nCopyFilesToOutputDirectory:\r\n  MSBuildRazorIssue -> C:\\Users\\Soheil Alizadeh\\RiderProjects\\MSBuildRazorIssue\\MSBuildRazorIssue\\bin\\MSBuildRazorIssue.dll\r\nDone Building Project \"C:\\Users\\Soheil Alizadeh\\RiderProjects\\MSBuildRazorIssue\\MSBuildRazorIssue\\MSBuildRazorIssue.csproj\" (default targets).\r\n\r\nDeferred Messages\r\n\r\n  Detailed Build Summary\r\n  ======================\r\n\r\n\r\n  ============================== Build Hierarchy (IDs represent configurations) =====================================================\r\n  Id                  : Exclusive Time   Total Time   Path (Targets)\r\n  -----------------------------------------------------------------------------------------------------------------------------------\r\n  0                   : 0.443s           0.443s       C:\\Users\\Soheil Alizadeh\\RiderProjects\\MSBuildRazorIssue\\MSBuildRazorIssue\\MSBuildRazorIssue.csproj ()\r\n\r\n  ============================== Node Utilization (IDs represent configurations) ====================================================\r\n  Timestamp:            1        Duration   Cumulative\r\n  -----------------------------------------------------------------------------------------------------------------------------------\r\n  636669963335079783:   0        0.443s     0.443s ########\r\n  -----------------------------------------------------------------------------------------------------------------------------------\r\n  Utilization:          100.0    Average Utilization: 100.0\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.47\r\n```\r\n### Expected  behavior\r\nWhen Razor Page (cshtml) file has error and invalid code, MSBuild show the error message and build fail\r\n\r\n### Actual behavior\r\nBut When I have error in Razor Page MSBuild don't care that the razor codes is valid or not and it says build is success !\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n```\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.7.179.6572\r\n```\r\nOS info:\r\n\r\n```\r\nOS Name:     Microsoft Windows 10 Pro\r\nOS Version:   10.0.17134 Build 17134\r\n\r\nIDEs: Visual Studio 2017 15.7.4  && Rider 2018.2 EAP 2\r\n```\r\n\n\n_Copied from original issue: Microsoft/msbuild#3508_","Url":"https://github.com/aspnet/Razor/issues/2473","RelatedDescription":"Closed issue \"MSBuild Don't Care Razor Page Has Error\" (#2473)"},{"Id":"340440680","IsPullRequest":false,"CreatedAt":"2018-07-11T23:33:32","Actor":"NTaylorMullen","Number":"2472","RawContent":null,"Title":"Add support for foreach await","State":"open","Body":"C# 8 is considering adding a `foreach await` syntax. Right now our understanding of `@foreach` doesn't support having an `await` identifier after it.\r\n\r\nMarking this as blocked until the C# 8 plans are more locked down on. ","Url":"https://github.com/aspnet/Razor/issues/2472","RelatedDescription":"Open issue \"Add support for foreach await\" (#2472)"},{"Id":"340429904","IsPullRequest":true,"CreatedAt":"2018-07-11T22:38:28","Actor":"ajaybhargavb","Number":"2471","RawContent":null,"Title":" Generate deterministic id for tag helpers","State":"open","Body":"#2449 \r\n\r\n- Using the hash of file checksum along with the absolute position in the generated code to create the unique id.\r\n- Regenerated baselines","Url":"https://github.com/aspnet/Razor/pull/2471","RelatedDescription":"Open PR \" Generate deterministic id for tag helpers\" (#2471)"},{"Id":"337692399","IsPullRequest":false,"CreatedAt":"2018-07-10T17:25:16","Actor":"pushqrdx","Number":"2458","RawContent":null,"Title":"Syntax highlighting flickers inside .cshtml files.","State":"closed","Body":"Will, Recently i have had this issue where any keystroke inside a `.cshtml` file will cause Syntax highlighting of Classes to flicker for some reason, and it's so annoying. Here is a gif demo of the problem as i find it a little bit difficult to explain.\r\n\r\n![Demo](http://g.recordit.co/ABxd2VObzW.gif)\r\n\r\nIt happens every keystroke which isn't visible in the gif due to the fps.\r\nIf this is the wrong repo to report this please suggest the right place.","Url":"https://github.com/aspnet/Razor/issues/2458","RelatedDescription":"Closed issue \"Syntax highlighting flickers inside .cshtml files.\" (#2458)"},{"Id":"339926308","IsPullRequest":true,"CreatedAt":"2018-07-10T16:52:31","Actor":"rynowak","Number":"2468","RawContent":null,"Title":"Make master build a 16.0 VSIX","State":"open","Body":"This change updates the master branch of Razor to start producing a VS16\r\nbranded VSIX.\r\n\r\nI haven't updated any package dependencies at this time, just changed the\r\nversion number and make our version range dependencies more flexible.","Url":"https://github.com/aspnet/Razor/pull/2468","RelatedDescription":"Open PR \"Make master build a 16.0 VSIX\" (#2468)"},{"Id":"339609871","IsPullRequest":false,"CreatedAt":"2018-07-10T02:32:40","Actor":"salzersoftware","Number":"2466","RawContent":null,"Title":"Razor views seem to always pre-compile (even in build) in ASP.NET Core v2.1","State":"closed","Body":"During development, I'd like my Razor views to not be precompiled, so that I can quickly make changes and see them, without having to rebuild. (i.e. have the .cshtml views available).\r\n\r\nI've been able to reproduce this behavior, where compilation of Razor views happens by default, on simple File->New projects using the ASP.NET Core template, where the csproj file looks like this:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nI [reached out to David Fowler via Twitter](https://twitter.com/matt_salzer/status/1015336522172780544) with some additional information and screenshots on the issue.\r\n\r\nI also tried playing around with the `MvcRazorCompileOnPublish` as talked about [here](https://docs.microsoft.com/en-us/aspnet/core/mvc/views/view-compilation?view=aspnetcore-2.1).\r\n\r\nScanning [several articles,](https://scottsauber.com/2017/03/10/pre-compiling-razor-views-in-asp-net-core-with-csprojs/) it makes seem like this precompilation of views shouldn't be happening when building (especially in debug mode), so I'm not sure what I'm missing.","Url":"https://github.com/aspnet/Razor/issues/2466","RelatedDescription":"Closed issue \"Razor views seem to always pre-compile (even in build) in ASP.NET Core v2.1\" (#2466)"},{"Id":"339659985","IsPullRequest":true,"CreatedAt":"2018-07-10T01:21:15","Actor":"ajaybhargavb","Number":"2467","RawContent":null,"Title":" Generate and verify baselines for ClassifiedSpans","State":"open","Body":"We want to have a set of baselines that shouldn't change in any way as we iterate on our syntax tree. This would help guarantee we don't break any existing scenario.\r\n\r\nGenerated only a few baselines for ease of review. I'll generate baselines for everything else once approved. ","Url":"https://github.com/aspnet/Razor/pull/2467","RelatedDescription":"Open PR \" Generate and verify baselines for ClassifiedSpans\" (#2467)"},{"Id":"339100324","IsPullRequest":true,"CreatedAt":"2018-07-07T00:11:18","Actor":"ajaybhargavb","Number":"2465","RawContent":null,"Title":"Renamed symbol to token everywhere","State":"closed","Body":"- Updated Resources\r\n- Updated test code\r\n- Regenerated baselines\r\n- Added exclusions for apicheck (See https://github.com/aspnet/BuildTools/issues/704)\r\n\r\nMerging back to master\r\n\r\nFYI only","Url":"https://github.com/aspnet/Razor/pull/2465","RelatedDescription":"Closed or merged PR \"Renamed symbol to token everywhere\" (#2465)"},{"Id":"339088450","IsPullRequest":true,"CreatedAt":"2018-07-07T00:03:12","Actor":"ajaybhargavb","Number":"2463","RawContent":null,"Title":"Renamed symbol to token everywhere","State":"closed","Body":"Because reasons.\r\n\r\n","Url":"https://github.com/aspnet/Razor/pull/2463","RelatedDescription":"Closed or merged PR \"Renamed symbol to token everywhere\" (#2463)"},{"Id":"339096122","IsPullRequest":true,"CreatedAt":"2018-07-06T23:27:51","Actor":"ajaybhargavb","Number":"2464","RawContent":null,"Title":"Parser tests clean up","State":"closed","Body":"Merging back to master\r\n\r\nFYI only","Url":"https://github.com/aspnet/Razor/pull/2464","RelatedDescription":"Closed or merged PR \"Parser tests clean up\" (#2464)"},{"Id":"337681620","IsPullRequest":true,"CreatedAt":"2018-07-06T23:25:14","Actor":"ajaybhargavb","Number":"2457","RawContent":null,"Title":"Parser tests clean up","State":"closed","Body":"#2263 \r\n\r\nSome final clean up","Url":"https://github.com/aspnet/Razor/pull/2457","RelatedDescription":"Closed or merged PR \"Parser tests clean up\" (#2457)"},{"Id":"338090253","IsPullRequest":true,"CreatedAt":"2018-07-06T18:01:07","Actor":"ajaybhargavb","Number":"2460","RawContent":null,"Title":"[Port] Handle pipe name with whitespace properly","State":"closed","Body":"#2406 \r\n\r\nThis is the port of the pipe name fix we made to master.\r\n\r\nFYI @mkArtakMSFT ","Url":"https://github.com/aspnet/Razor/pull/2460","RelatedDescription":"Closed or merged PR \"[Port] Handle pipe name with whitespace properly\" (#2460)"},{"Id":"338956892","IsPullRequest":false,"CreatedAt":"2018-07-06T16:42:47","Actor":"Johanneshn","Number":"2462","RawContent":null,"Title":"Use Razor pages under Microsoft.NET.Sdk","State":"closed","Body":"I've been trying to implement razor pages in a console application, that's running under `Project Sdk=\"Microsoft.NET.Sdk\"`. \r\n\r\nThe controllers work fine, but the Views are never found:\r\n`System.InvalidOperationException: The view 'Index' was not found. The following locations were searched:\r\n   /Views/Home/Index.cshtml\r\n   /Views/Shared/Index.cshtml\r\n   /Pages/Shared/Index.cshtml`\r\n\r\nSwitching to `<Project Sdk=\"Microsoft.NET.Sdk.Web\">` and everything works. \r\nIs it possible to use Razor pages under `Project Sdk=\"Microsoft.NET.Sdk\"`?\r\n\r\n","Url":"https://github.com/aspnet/Razor/issues/2462","RelatedDescription":"Closed issue \"Use Razor pages under Microsoft.NET.Sdk\" (#2462)"},{"Id":"338868142","IsPullRequest":false,"CreatedAt":"2018-07-06T09:24:16","Actor":"metoule","Number":"2461","RawContent":null,"Title":"Token replacement in @page directive?","State":"open","Body":"I'm trying to create a custom route for my Razor page, via the `@page` directive.\r\nWhen using the `RouteAttribute` on a controller, we have access to the following [token replacements](https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/routing?view=aspnetcore-2.1#token-replacement-in-route-templates-controller-action-area): \r\n\r\n> The tokens [action], [area], and [controller] will be replaced with the values of the action name, area name, and controller name from the action where the route is defined.\r\n\r\nHowever, such replacement doesn't seem to occur with the `@page` directive:\r\n\r\n`@page \"/[area]/{name}\"` \r\n\r\ndoesn't work.\r\n\r\nIs there anything approaching this for Razor pages?\r\n\r\n__Background__\r\n\r\nI'm trying to migrate the following controller to Razor pages:\r\n```\r\n[Route(\"[controller]\")]\r\npublic class MyFeatureController : Controller\r\n{\r\n\t[HttpGet(\"\")]\r\n\tpublic IActionResult Index()\r\n\t{\r\n\t\treturn View();\r\n\t}\r\n\t\r\n\t[HttpGet(\"{name}\")]\r\n\tpublic IActionResult GetProduct(string name)\r\n\t{\r\n\t\treturn View(\"Product\", name);\r\n\t}\r\n}\r\n```\r\n","Url":"https://github.com/aspnet/Razor/issues/2461","RelatedDescription":"Open issue \"Token replacement in @page directive?\" (#2461)"},{"Id":"338032750","IsPullRequest":false,"CreatedAt":"2018-07-03T19:49:28","Actor":"reima","Number":"2459","RawContent":null,"Title":"Generated code references MVC's HelperResult","State":"open","Body":"**Description:**\r\n\r\nI want to use Razor as a standalone templating component (outside of ASP.NET Core). This is working really well so far, with one minor problem: when an HTML attribute contains Razor code, the generated code references `Microsoft.AspNetCore.Mvc.Razor.HelperResult` by default. The source of this reference is in the default value of `Microsoft.AspNetCore.Razor.Language.CodeGeneration.RuntimeNodeWriter.TemplateTypeName`.\r\n\r\nI would like to change this to my own template type, but there seems to be no straightforward way to accomplish this (e.g. with the `RazorProjectEngineBuilder`). Right now I have a rather clumsy workaround involving a custom `IRazorEnginePhase` that sets a custom `CodeTarget` on the `DocumentIntermediateNode`, which in turn sets the desired template type in `CreateNodeWriter`.\r\n\r\nI propose to set the default value of `RuntimeNodeWriter.TemplateTypeName` to something neutral like `\"Template\"` (like in #952, a similar issue with `TemplateTargetExtension`) and allow some mechanism for easy customization.\r\n\r\n**Steps to reproduce:**\r\n\r\n* Create a .NET console app\r\n* Reference Microsoft.AspNetCore.Razor.Language 2.1.1\r\n* Add this code to `Program.cs`\r\n    ```csharp\r\n    using System;\r\n    using Microsoft.AspNetCore.Razor.Language;\r\n\r\n    namespace RazorStandalone\r\n    {\r\n        public class Program\r\n        {\r\n            public static void Main(string[] args)\r\n            {\r\n                var razorEngine = RazorProjectEngine.Create(\r\n                    RazorConfiguration.Default,\r\n                    RazorProjectFileSystem.Create(\"Views\"));\r\n\r\n                var item = razorEngine.FileSystem.GetItem(\"Test.cshtml\");\r\n                var cSharpDocument = razorEngine.Process(item).GetCSharpDocument();\r\n\r\n                Console.WriteLine(cSharpDocument.GeneratedCode);\r\n            }\r\n        }\r\n    }\r\n    ```\r\n* Add `Views/Test.cshtml`, set \"Copy to Output Directory\" to \"Copy if newer\"\r\n    ```html\r\n    <test attr=\"@if (@Model) {}\"></test>\r\n    ```\r\n* Run the program. The output reads:\r\n    ```\r\n    #pragma checksum \"C:\\Users\\reima\\Documents\\Visual Studio 2017\\Projects\\RazorStandalone\\bin\\Debug\\Views\\Test.cshtml\" \"{ff1816ec-aa5e-4d10-87f7-6f4963833460}\" \"9734701e05be2ab9082d029532e0b68293680ed2\"\r\n    // <auto-generated/>\r\n    #pragma warning disable 1591\r\n    [assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Razor.Template), @\"default\", @\"/rs/reima/Documents/Visual Studio 2017/Projects/RazorStandalone/bin/Debug/Views/Test.cshtml\")]\r\n    namespace Razor\r\n    {\r\n        #line hidden\r\n        [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@\"SHA1\", @\"9734701e05be2ab9082d029532e0b68293680ed2\", @\"/rs/reima/Documents/Visual Studio 2017/Projects/RazorStandalone/bin/Debug/Views/Test.cshtml\")]\r\n        public class Template\r\n        {\r\n            #pragma warning disable 1998\r\n            public async override global::System.Threading.Tasks.Task ExecuteAsync()\r\n            {\r\n                WriteLiteral(\"<test\");\r\n                BeginWriteAttribute(\"attr\", \" attr=\\\"\", 5, \"\\\"\", 27, 1);\r\n                WriteAttributeValue(\"\", 12, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {\r\n                    PushWriter(__razor_attribute_value_writer);\r\n    #line 1 \"C:\\Users\\reima\\Documents\\Visual Studio 2017\\Projects\\RazorStandalone\\bin\\Debug\\Views\\Test.cshtml\"\r\n                 if (@Model) {}\r\n\r\n    #line default\r\n    #line hidden\r\n                    PopWriter();\r\n                }\r\n                ), 12, 15, false);\r\n                EndWriteAttribute();\r\n                WriteLiteral(\"></test>\");\r\n            }\r\n            #pragma warning restore 1998\r\n        }\r\n    }\r\n    #pragma warning restore 1591\r\n    ```","Url":"https://github.com/aspnet/Razor/issues/2459","RelatedDescription":"Open issue \"Generated code references MVC's HelperResult\" (#2459)"},{"Id":"337111061","IsPullRequest":true,"CreatedAt":"2018-06-29T22:57:02","Actor":"ajaybhargavb","Number":"2455","RawContent":null,"Title":"Converted TagHelperParseTreeRewriterTest","State":"closed","Body":"#2263 \r\n\r\nBiggest convert till now.","Url":"https://github.com/aspnet/Razor/pull/2455","RelatedDescription":"Closed or merged PR \"Converted TagHelperParseTreeRewriterTest\" (#2455)"},{"Id":"337155944","IsPullRequest":true,"CreatedAt":"2018-06-29T22:56:25","Actor":"ajaybhargavb","Number":"2456","RawContent":null,"Title":"Converted TagHelperBlockRewriterTest","State":"closed","Body":"#2263 \r\n\r\nBiggest for last","Url":"https://github.com/aspnet/Razor/pull/2456","RelatedDescription":"Closed or merged PR \"Converted TagHelperBlockRewriterTest\" (#2456)"},{"Id":"337109469","IsPullRequest":true,"CreatedAt":"2018-06-29T19:20:47","Actor":"ajaybhargavb","Number":"2454","RawContent":null,"Title":"Prereq for converting tag helper tests","State":"closed","Body":"Merging back to dev\r\n\r\nFYI only\r\n\r\n@NTaylorMullen ","Url":"https://github.com/aspnet/Razor/pull/2454","RelatedDescription":"Closed or merged PR \"Prereq for converting tag helper tests\" (#2454)"},{"Id":"337108819","IsPullRequest":true,"CreatedAt":"2018-06-29T19:17:31","Actor":"ajaybhargavb","Number":"2453","RawContent":null,"Title":"Prereq for converting tag helper tests","State":"closed","Body":"FYI only\r\n\r\nThis was merged to dev without merging to release/2.2.\r\n\r\n@NTaylorMullen ","Url":"https://github.com/aspnet/Razor/pull/2453","RelatedDescription":"Closed or merged PR \"Prereq for converting tag helper tests\" (#2453)"},{"Id":"336818858","IsPullRequest":true,"CreatedAt":"2018-06-29T01:03:23","Actor":"natemcmaster","Number":"2452","RawContent":null,"Title":"[automated] Update branding for 3.0","State":"closed","Body":"Part of https://github.com/aspnet/Home/issues/3278.\nThis should updates the branding to the next major version","Url":"https://github.com/aspnet/Razor/pull/2452","RelatedDescription":"Closed or merged PR \"[automated] Update branding for 3.0\" (#2452)"}],"ResultType":"GitHubIssue"},"Templates-Issues":{"Issues":[{"Id":"266880667","IsPullRequest":true,"CreatedAt":"2017-10-24T21:42:12","Actor":"s-whaley","Number":"873","RawContent":null,"Title":"Account AccessDenied View Razor Syntax Bug Fix","State":"closed","Body":"views/account/accessdenied ViewData[title] missing @ symbol","Url":"https://github.com/aspnet/Templates/pull/873","RelatedDescription":"Closed or merged PR \"Account AccessDenied View Razor Syntax Bug Fix\" (#873)"},{"Id":"267855162","IsPullRequest":false,"CreatedAt":"2017-10-24T19:00:48","Actor":"ezeasharma","Number":"874","RawContent":null,"Title":"The project file could not be loaded for csproj","State":"closed","Body":"I migrated my .netcore 1.1 proj to 2.0 using this link https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/\r\n\r\nbut when i perform \"dotnet restore -v d\" i get the following error:\r\n\r\n```\r\nBuild started 10/23/2017 19:57:01.\r\n     1>Project \"someproj.csproj\" on node 1 (Restore target(s)).\r\n     1>Building with tools version \"15.0\".\r\n     1>someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n     1>Done Building Project \"someproj.csproj\" (Restore target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"/someproj/someproj.csproj\" (Restore target) (1) ->\r\n         /someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nHere is the output for dotnet --info\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\nThis is my csproj file\r\n```\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n    <Folder Include=\"swagger_static\\\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Serilog\" Version=\"2.4.0\" />\r\n    <PackageReference Include=\"Serilog.Extensions.Logging\" Version=\"1.4.0\" />\r\n    <PackageReference Include=\"Serilog.Sinks.Console\" Version=\"2.1.0\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"1.0.0\" />\r\n    <PackageReference Include=\"Dapper\" Version=\"1.50.2\" />\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"System.Threading\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n  <DotNetCliToolReference Include=\"Microsoft.EntityFrameworkCore.Tools.DotNet\" Version=\"2.0.0\" />\r\n  <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"2.0.0\" />\r\n  <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n</ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\..\\..\\..\\recon.curator.common\\recon.curator.common.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\..\\..\\recon.curator.service\\recon.curator.service.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```","Url":"https://github.com/aspnet/Templates/issues/874","RelatedDescription":"Closed issue \"The project file could not be loaded for csproj\" (#874)"},{"Id":"232879172","IsPullRequest":false,"CreatedAt":"2017-10-24T16:37:14","Actor":"a-elnajjar","Number":"847","RawContent":null,"Title":"Post test ","State":"closed","Body":"Hi asp.net Team;\r\nI see your Templates/test/Microsoft.Web.Templates.Web.Tests/WebAPITests.cs only have tow test methods for testing and verify GET Web API is working. I want to ask can I add testing and verify methods for POST Web API?","Url":"https://github.com/aspnet/Templates/issues/847","RelatedDescription":"Closed issue \"Post test \" (#847)"},{"Id":"252192148","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:47","Actor":"Dave3of5","Number":"864","RawContent":null,"Title":"Authentication on SPA apps","State":"closed","Body":"There seems to be no template for authentication on the SPA templates.\r\n\r\nI've been looking up various blog post and third party articles on how to add Jwt Authentication but they are scattered and most are for dotnet core 1.1. It would be nice if there was a template that showed the \"correct\" way to do this in dotnet core 2.0.","Url":"https://github.com/aspnet/Templates/issues/864","RelatedDescription":"Closed issue \"Authentication on SPA apps\" (#864)"},{"Id":"252376700","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:23","Actor":"pejta2207","Number":"865","RawContent":null,"Title":"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token","State":"closed","Body":"**Description**\r\nThe issue is related to Individual Accounts Authentication template. It seems that providing incorrect authentication code for ConfirmEmail action in AccountController (e.g. token which already expired) should result in displaying error page. However, Razor throws an exception while generating the default error view:\r\n\r\n```\r\nNullReferenceException: Object reference not set to an instance of an object.\r\nAspNetCore._Views_Shared_Error_cshtml+<ExecuteAsync>d__0.MoveNext() in Error.cshtml, line 9\r\n```\r\n\r\n**Steps to reproduce**\r\n1. Create new project with Individual Accounts Authentication template.\r\n2. Run the application.\r\n3. Register any user via the registration form.\r\n4. Retrieve UserId of the registered user.\r\n5. Try to confirm email with incorrect token, e.g. http://localhost:PORT/Account/ConfirmEmail?UserId={UserId}&Code=INVALID_CODE\r\n\r\n**Further technical details**\r\nIt's probably caused by the last line in ConfirmEmail action in AccountController:\r\n```\r\nvar result = await _userManager.ConfirmEmailAsync(user, code);\r\nreturn View(result.Succeeded ? \"ConfirmEmail\" : \"Error\");\r\n```\r\n\r\nWhen invalid token is passed, Error view is not provided with `ErrorViewModel`. When `Model` is accessed in 9th line of Error.cshtml (`@if (Model.ShowRequestId)`), it throws NullReferenceException.","Url":"https://github.com/aspnet/Templates/issues/865","RelatedDescription":"Closed issue \"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token\" (#865)"},{"Id":"260997320","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:05","Actor":"joeaudette","Number":"868","RawContent":null,"Title":"IEmailSender should have explicitly named parameters for html vs plain text","State":"closed","Body":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217","Url":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Closed issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868)"},{"Id":"268102418","IsPullRequest":false,"CreatedAt":"2017-10-24T16:35:17","Actor":"Eilon","Number":"875","RawContent":null,"Title":"This repo is OBSOLETE - please see the README file for information","State":"open","Body":"Please refer to the README at https://github.com/aspnet/Templates for information.","Url":"https://github.com/aspnet/Templates/issues/875","RelatedDescription":"Open issue \"This repo is OBSOLETE - please see the README file for information\" (#875)"},{"Id":"266114525","IsPullRequest":false,"CreatedAt":"2017-10-21T00:03:24","Actor":"tverboon","Number":"872","RawContent":null,"Title":"Unnecessary User.Id provided in password reset link?","State":"closed","Body":"The user Id is provided in the callback link:\r\n\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L424\r\n\r\nBut in the controller action only code is used:\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L443\r\n\r\nIn my opinion it's better not to provide more information than necessary.","Url":"https://github.com/aspnet/Templates/issues/872","RelatedDescription":"Closed issue \"Unnecessary User.Id provided in password reset link?\" (#872)"},{"Id":"265394026","IsPullRequest":false,"CreatedAt":"2017-10-13T20:09:16","Actor":"jkotalik","Number":"871","RawContent":null,"Title":"Add HttpsRedirection and HSTS middleware template","State":"closed","Body":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher ","Url":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Closed issue \"Add HttpsRedirection and HSTS middleware template\" (#871)"},{"Id":"264318035","IsPullRequest":true,"CreatedAt":"2017-10-10T17:47:02","Actor":"scottsauber","Number":"870","RawContent":null,"Title":"Change Lockout wording of comment","State":"open","Body":"The Razor Pages Identity template turns on Lockout by default, unlike the MVC one.  This comment is left over from the MVC one and it no longer lines up with what is configured in the template.  I've reworded it to be accurate.  I can change it to just remove the comment all together if you want.","Url":"https://github.com/aspnet/Templates/pull/870","RelatedDescription":"Open PR \"Change Lockout wording of comment\" (#870)"},{"Id":"262627101","IsPullRequest":false,"CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Number":"869","RawContent":null,"Title":"QR Codes should be supported in templates","State":"closed","Body":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments","Url":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869)"},{"Id":"254163608","IsPullRequest":false,"CreatedAt":"2017-09-07T12:16:42","Actor":"elAndyG","Number":"866","RawContent":null,"Title":"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)","State":"closed","Body":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n","Url":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866)"},{"Id":"255851740","IsPullRequest":false,"CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Number":"867","RawContent":null,"Title":"Cannot force version of the template to install","State":"open","Body":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version","Url":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Open issue \"Cannot force version of the template to install\" (#867)"},{"Id":"251697737","IsPullRequest":true,"CreatedAt":"2017-08-22T14:57:33","Actor":"phenning","Number":"862","RawContent":null,"Title":"Use template engine templates","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/pull/862","RelatedDescription":"Closed or merged PR \"Use template engine templates\" (#862)"},{"Id":"251783689","IsPullRequest":false,"CreatedAt":"2017-08-21T22:59:07","Actor":"GoshaFighten","Number":"863","RawContent":null,"Title":"Can't compile the devextreme-angular package in the Production mode using the ASP.NET Core 2.0 Angular template","State":"closed","Body":"This issue relates to the [one](https://github.com/DevExpress/devextreme-angular/issues/534). I've created an Angular application using .NET Core 2.0. The issue is reproducible regardless if I use Visual Studio 2017 15.3 or `dotnet new angular`. Everything works fine in the Development mode. But, once I publish my application with the [DevExtreme Angular](https://github.com/DevExpress/devextreme-angular) package using `dotnet publish -c Release`, I'm getting the following error:\r\n\r\n```\r\n      ERROR in ./$$_gendir/~/devextreme-angular/ui/data-grid.ngfactory.ts\r\n      Module parse failed: D:\\FromCustomers\\GH534\\NGCore\\NGCore\\$$_gendir\\node_modules\\devextreme-angular\\ui\\data-grid.ngfactory.ts Unexpected token (63:38)\r\n      You may need an appropriate loader to handle this file type.\r\n      | import * as i52 from 'devextreme-angular/core/iterable-differ-helper';\r\n      | import * as i53 from 'devextreme-angular/core/nested-option';\r\n      | export const DxDataGridModuleNgFactory:i0.NgModuleFactory<i1.DxDataGridModule> = i0.╔╡cmf(i1.DxDataGridModule,\r\n      |     ([] as any[]),(_l:any) => {\r\n      |       return i0.╔╡mod([i0.╔╡mpd(512,i0.ComponentFactoryResolver,i0.╔╡CodegenComponentFactoryResolver,\r\n       @ ./$$_gendir/ClientApp/app/components/fetchdata/fetchdata.component.ngfactory.ts 8:0-102\r\n       @ ./$$_gendir/ClientApp/app/app.module.server.ngfactory.ts\r\n       @ ./ClientApp/boot.server.ts\r\nD:\\FromCustomers\\GH534\\NGCore\\NGCore\\NGCore.csproj(41,5): error MSB3073: The command \"node node_modules/webpack/bin/webpack.js --env.prod\" exited with code 2.\r\n```\r\n\r\nI added\r\n\r\n```\r\n\"devextreme\": \"^17.1.5\",\r\n\"devextreme-angular\": \"^17.1.5\",\r\n```\r\n\r\nto the `package.json` file. Then, I added DevExtreme CSS files to the `webpack.config.vendor.js` as\r\n\r\n```\r\nconst nonTreeShakableModules = [\r\n    'bootstrap',\r\n    'bootstrap/dist/css/bootstrap.css',\r\n    'es6-promise',\r\n    'es6-shim',\r\n    'event-source-polyfill',\r\n    'jquery',\r\n    'devextreme/dist/css/dx.common.css',\r\n    'devextreme/dist/css/dx.light.css'\r\n];\r\n```\r\n\r\nIf instead of the following line in the webpack.config.js file\r\n\r\n```\r\n{ test: /\\.ts$/, include: /ClientApp/, use: isDevBuild ? ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] : '@ngtools/webpack' },\r\n```\r\n\r\nI use\r\n\r\n```\r\n{ test: /\\.ts$/, use: isDevBuild ? ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] : '@ngtools/webpack' },\r\n```\r\n\r\nor\r\n\r\n```\r\n{ test: /\\.ts$/, include: /ClientApp/, use: ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] },\r\n```\r\n\r\neverything works fine. A similar configuration in a project created using Angular CLI works fine as well.\r\n\r\nThe attached `NGCore` project illustrates the issue and `test-app` created with Angular CLI illustrates that this works in a standard Angular CLI project after I call `ng eject`.\r\n\r\nWhat can be the problem here? Is it in DevExtreme modules or in your webpack configuration?\r\n[test-app.zip](https://github.com/aspnet/Templates/files/1240256/test-app.zip)\r\n[NGCore.zip](https://github.com/aspnet/Templates/files/1240259/NGCore.zip)\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/863","RelatedDescription":"Closed issue \"Can't compile the devextreme-angular package in the Production mode using the ASP.NET Core 2.0 Angular template\" (#863)"},{"Id":"248880384","IsPullRequest":false,"CreatedAt":"2017-08-09T00:05:00","Actor":"Rick-Anderson","Number":"861","RawContent":null,"Title":"Razor Page scaffolder should add `@page \"{id:int}\"` directive","State":"closed","Body":"The RP scaffolder should add `@page \"{id:int}\"` directive so generated links pass the ID as route data, not query strings.\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/861","RelatedDescription":"Closed issue \"Razor Page scaffolder should add `@page \"{id:int}\"` directive\" (#861)"},{"Id":"248842171","IsPullRequest":false,"CreatedAt":"2017-08-08T20:59:26","Actor":"Rick-Anderson","Number":"860","RawContent":null,"Title":"Razor Pages scaffolder eats    DbUpdateConcurrencyException","State":"closed","Body":"Expected behavior:\r\nScaffolder should correctly handle `DbUpdateConcurrencyException`\r\n\r\nActual behavior:\r\n`DbUpdateConcurrencyException` is caught and ignored.\r\n\r\nTo repro: \r\n\r\n* Create a RP project and add a model.\r\n* [Scaffold the model](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model#add-scaffold-tooling-and-perform-initial-migration)\r\n\r\nThe *Edit.cshtml.cs* file contains the following code:\r\n\r\n```cs\r\npublic async Task<IActionResult> OnPostAsync()\r\n{\r\n    if (!ModelState.IsValid)\r\n    {\r\n        return Page();\r\n    }\r\n\r\n    _context.Attach(Movie).State = EntityState.Modified;\r\n\r\n    try\r\n    {\r\n        await _context.SaveChangesAsync();\r\n    }\r\n    catch (DbUpdateConcurrencyException)\r\n    {\r\n        \r\n    }\r\n\r\n    return RedirectToPage(\"./Index\");\r\n}\r\n```\r\nIt should be\r\n\r\n```cs\r\ncatch (DbUpdateConcurrencyException)\r\n        {\r\n            if (!MovieExists(movie.ID))\r\n            {\r\n                return NotFound();\r\n            }\r\n            else\r\n            {\r\n                throw;\r\n            }\r\n        }\r\n```\r\n","Url":"https://github.com/aspnet/Templates/issues/860","RelatedDescription":"Closed issue \"Razor Pages scaffolder eats    DbUpdateConcurrencyException\" (#860)"},{"Id":"248139089","IsPullRequest":false,"CreatedAt":"2017-08-08T04:05:18","Actor":"alexavrutin","Number":"859","RawContent":null,"Title":"r1","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/issues/859","RelatedDescription":"Closed issue \"r1\" (#859)"},{"Id":"238353055","IsPullRequest":false,"CreatedAt":"2017-08-03T18:01:57","Actor":"stevedesmond-ca","Number":"851","RawContent":null,"Title":"Why do non-sentence headers end in a period?","State":"closed","Body":"See https://github.com/aspnet/Templates/blob/dev/src/Rules/StarterWeb/IndividualAuth/Views/Account/ResetPasswordConfirmation.cshtml as an example -- almost all the `<h1>`s have periods after them, when they should more likely be Title Case with no period.","Url":"https://github.com/aspnet/Templates/issues/851","RelatedDescription":"Closed issue \"Why do non-sentence headers end in a period?\" (#851)"},{"Id":"247185643","IsPullRequest":false,"CreatedAt":"2017-08-03T17:58:29","Actor":"Rick-Anderson","Number":"858","RawContent":null,"Title":"Razor Page templates use fully qualified name ","State":"closed","Body":"The constructor uses the FQN when it's not necessary. For example:\r\n\r\nSee [Pages/Movie/Index.cshtml.cs](https://github.com/aspnet/Docs/blob/master/aspnetcore/tutorials/razor-pages/razor-pages-start/sample/RazorPagesMovie/Pages/Movie/Index.cshtml.cs#L14-L16)\r\n\r\n`using RazorPagesMovie.Models;` is in the template.\r\n\r\nTo repro - follow the [Razor Pages tutorial](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model)\r\n","Url":"https://github.com/aspnet/Templates/issues/858","RelatedDescription":"Closed issue \"Razor Page templates use fully qualified name \" (#858)"},{"Id":"246217674","IsPullRequest":false,"CreatedAt":"2017-08-03T17:56:43","Actor":"Rick-Anderson","Number":"857","RawContent":null,"Title":"Templates should use app.UseMvcWithDefaultRoute();","State":"closed","Body":"I recommend the templates use `app.UseMvcWithDefaultRoute();` rather than\r\n\r\n```csharp\r\napp.UseMvc(routes =>\r\n{\r\n    routes.MapRoute(\r\n        name: \"default\",\r\n        template: \"{controller}/{action=Index}/{id?}\");\r\n});\r\n```\r\n\r\nThe more complex code is a barrier to entry for new users who don't need this flexibility. Advanced users will have no problem adding the above code when they need it. The code above doesn't make much sense to Razor Pages developers. Recommend this change for all templates but especially for the Razor Pages template.\r\n\r\ncc @DamianEdwards  - part of the lower the barrier to entry effort.","Url":"https://github.com/aspnet/Templates/issues/857","RelatedDescription":"Closed issue \"Templates should use app.UseMvcWithDefaultRoute();\" (#857)"},{"Id":"244917331","IsPullRequest":false,"CreatedAt":"2017-08-03T17:55:35","Actor":"RehanSaeed","Number":"856","RawContent":null,"Title":"Sharing Common Files Between Templates","State":"closed","Body":"I have a ReadMe.html file which I'd like to share between my project templates. The file is mostly the same for all three templates, except that it contains a few symbols common to all my templates. I'd like to keep one copy of this file and use symbols to define template specific sections.\r\n```\r\n<html>\r\n<p>Common paragraph...</p>\r\n<!--#if MyTemplate1-->\r\n<p>MyTemplate1 paragraph...</p>\r\n<!--#endif-->\r\n<!--#if MyTemplate2-->\r\n<p>MyTemplate2 paragraph...</p>\r\n<!--#endif-->\r\n</html>\r\n```\r\n\r\nI can think of a way this might work without any help from the templating engine: Keep a common copy of the file, then copy the file into the template folders as a pre-packaging step in my build script. The disadvantage is that now I have three copies of my file unless I use a .gitignores file but then I have the extra step of having to remove the .gitignores file from the template output.\r\n\r\nI propose that you should be able to add a file as a link, then mark that file as common in your template.json file. Finally, when generating the project, the file is converted from a linked file, into a real one.\r\n","Url":"https://github.com/aspnet/Templates/issues/856","RelatedDescription":"Closed issue \"Sharing Common Files Between Templates\" (#856)"},{"Id":"244134597","IsPullRequest":false,"CreatedAt":"2017-08-03T17:30:02","Actor":"jkotalik","Number":"855","RawContent":null,"Title":"File new template error for Windows 8.1 32 bit for individual auth.","State":"closed","Body":"Steps:\r\n\r\n1. Download VS2017 Int Preview and dotnet preview3 on Windows 8.1 32 bit.\r\n2. File new... ASP.NET Core app, Web Application with Individual User Accounts Authorization\r\n3. Run application, try to register a new user\r\n\r\nExpected Results: A page would show up saying to apply migrations to the database or the user is registered.\r\nActual Results: SqlException on the SQL Server not being found. \r\n![4fce5f97](https://user-images.githubusercontent.com/8302101/28383504-3b7bf12c-6c76-11e7-91d0-5fe2675924a2.PNG)\r\n\r\n\r\nThe fix I had to do was change the ConnectionStrings' DefaultConnection from mssqllocaldb to ProjectsV12. \r\n\r\nMost likely, we would need to change https://github.com/aspnet/Templates/blob/a594b47c417593d43141d3b4eb2bc41d6ad85f20/src/Rules/StarterWeb/IndividualAuth/appsettings.json#L3 to use a variable for the database.","Url":"https://github.com/aspnet/Templates/issues/855","RelatedDescription":"Closed issue \"File new template error for Windows 8.1 32 bit for individual auth.\" (#855)"},{"Id":"244047453","IsPullRequest":false,"CreatedAt":"2017-07-20T08:45:31","Actor":"dazinator","Number":"854","RawContent":null,"Title":"typescript confiugration file item template","State":"closed","Body":"When the typescript configuration file is added to a project, by default it is \"content\" which also by default means it ends up being included in the nuget package when you do a `dotnet pack`. Given that the typescript configuration file is used primarily at build time, I don't think it should be included in a resulting nuget pack by default. Can it be changed to create this in the `csproj`:\r\n\r\n```\r\n <ItemGroup>\r\n    <Content Update=\"Scripts\\tsconfig.json\">\r\n      <Pack>false</Pack>\r\n    </Content>\r\n  </ItemGroup>\r\n```\r\n\r\nWithout this, if another project takes a dependency on this nuget package, you get build errors like this:\r\n\r\n```\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tTS18003\tBuild:No inputs were found in config file 'C:/Users/darrell.tunnell/.nuget/packages/gluon.module.themeswitcher/2.0.0/contentFiles/any/net452/Scripts/tsconfig.json'. Specified 'include' paths were '[\"**/*\"]' and 'exclude' paths were '[\"node_modules\",\"wwwroot\"]'.\tReach.GCv3.Mvc.Module.CompanyLogo\tC:\\Users\\darrell.tunnell\\Source\\Repos\\gc3-website\\src\\Reach.GCv3.Mvc.Module.CompanyLogo\\tsc\t1\t\r\n\r\n\r\n```\r\n\r\ni.e VS is doscovering the typescript configuration files within referenced nuget packages!","Url":"https://github.com/aspnet/Templates/issues/854","RelatedDescription":"Closed issue \"typescript confiugration file item template\" (#854)"},{"Id":"240276652","IsPullRequest":true,"CreatedAt":"2017-07-05T16:50:58","Actor":"ryanbrandenburg","Number":"853","RawContent":null,"Title":"Remove PackageTargetFallback","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/pull/853","RelatedDescription":"Closed or merged PR \"Remove PackageTargetFallback\" (#853)"},{"Id":"239518221","IsPullRequest":true,"CreatedAt":"2017-07-05T14:09:36","Actor":"scottaddie","Number":"852","RawContent":null,"Title":"Clarify password reset sentence in ForgotPassword view","State":"closed","Body":"The `ForgotPassword.cshtml` view includes a sentence which was missing a comma and reversed the words \"reset\" and \"password\".\r\n\r\n/cc: @phenning @mlorbetske ","Url":"https://github.com/aspnet/Templates/pull/852","RelatedDescription":"Closed or merged PR \"Clarify password reset sentence in ForgotPassword view\" (#852)"},{"Id":"233959214","IsPullRequest":false,"CreatedAt":"2017-06-06T16:59:43","Actor":"mlorbetske","Number":"850","RawContent":null,"Title":"File new default names inconsistency.","State":"open","Body":"_From @Bartmax on July 24, 2015 2:48_\n\nAll items in the file new dialog (client side) default names kind of follows a pattern but it's not consistent:\n\nStyleSheet.css\nJavaScript.js\nhtmlpage.html (all lowercase)\nCoffeeScript.coffee\njson-schema.json\npackage.json\netc.\n\nSome must have a specific name (like package.json) while others just reflect the file type. \n\nI see 2 inconsistencies here:\n\n1) casing is inconsistent.\n2) TypeScript it suggest file.ts instead of TypeScript.ts\n\n\n_Copied from original issue: aspnet/Tooling#118_","Url":"https://github.com/aspnet/Templates/issues/850","RelatedDescription":"Open issue \"File new default names inconsistency.\" (#850)"},{"Id":"233568569","IsPullRequest":false,"CreatedAt":"2017-06-05T12:14:20","Actor":"neman","Number":"849","RawContent":null,"Title":"Unable to install nuget template","State":"closed","Body":"I created nuget template. When I try to install it, I got the following error at the end\r\n\r\n```C:\\Program Files\\dotnet\\sdk\\1.0.4\\NuGet.targets(97,5): error : Unable to resolve 'Test.Templates' for '.NETCoreApp,Version=v1.0'. [C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj]\r\n\r\nGenerating MSBuild file C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\restore.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\restore.csproj.nuget.g.targets.\r\n  Writing lock file to disk. Path: C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\project.assets.json\r\n  Restore failed in 13,16 sec for C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj.\r\n\r\n  Errors in C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj\r\n      Unable to resolve 'BIB.Templates' for '.NETCoreApp,Version=v1.0'.\r\n\r\n  NuGet Config files used:\r\n      C:\\Users\\nemke\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n      C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n\r\n  Feeds used:\r\n      https://api.nuget.org/v3/index.json\r\n      C:\\local-nuget\r\n      C:\\Users\\nemke\\.dotnet\\NuGetFallbackFolder\r\n      C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n```\r\n\r\n#### dotnetinfo\r\n\r\n```\r\nC:\\Temp> dotnet --info\r\n.NET Command Line Tools (1.0.4)\r\n\r\nProduct Information:\r\n Version:            1.0.4\r\n Commit SHA-1 hash:  af1e6684fd\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\1.0.4\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0-preview1-002111-00\r\n  Build    : 1ff021936263d492539399688f46fd3827169983\r\n``` \r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/849","RelatedDescription":"Closed issue \"Unable to install nuget template\" (#849)"},{"Id":"233555569","IsPullRequest":false,"CreatedAt":"2017-06-05T12:13:42","Actor":"neman","Number":"848","RawContent":null,"Title":"Wrong CLI command for template installation at nuget.org","State":"closed","Body":"When I go tu nuget.org to search for some template I got the following page for link https://www.nuget.org/packages/NetEscapades.Templates/\r\n\r\n![image](https://cloud.githubusercontent.com/assets/350314/26781234/bf4cc98c-49ed-11e7-9e4a-08bb168b6c62.png)\r\n\r\nThe command instruct to use `Install-Package NetEscapades.Templates` which does not work. \r\n\r\n```\r\nInstall-Package NetEscapades.Templates\r\nInstall-Package : No match was found for the specified search criteria and package name 'NetEscapades.Templates'. Try Get-PackageSource to see all available registered p ackage sources.\r\nAt line:1 char:1\r\n+ Install-Package NetEscapades.Templates\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Microsoft.Power....InstallPackage:InstallPackage) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NoMatchFoundForCriteria,Microsoft.PowerShell.PackageManagement.Cmdlets.InstallPackage\r\n```\r\nThe correct command is `dotnet new --install \"NetEscapades.Templates::*\"`\r\n\r\nWill this be fixed in future release?  Which will be the correct CLI command?\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/848","RelatedDescription":"Closed issue \"Wrong CLI command for template installation at nuget.org\" (#848)"},{"Id":"226082169","IsPullRequest":true,"CreatedAt":"2017-05-03T18:58:53","Actor":"phenning","Number":"846","RawContent":null,"Title":"Revert \"Add MVC precompilation package for 1.1\"","State":"closed","Body":"This reverts commit 461cd822646505fb53c6b0ac416af3780e32578f.\r\n\r\n# Conflicts:\r\n#\tsrc/BaseTemplates/StarterWeb/StarterWeb.csproj\r\n#\tsrc/Templates.xml","Url":"https://github.com/aspnet/Templates/pull/846","RelatedDescription":"Closed or merged PR \"Revert \"Add MVC precompilation package for 1.1\"\" (#846)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"257171895","IsPullRequest":false,"CreatedAt":"2018-06-25T20:46:49","Actor":"shirhatti","Number":"1057","RawContent":null,"Title":"Support for multi-line string values","State":"closed","Body":"_From @alexvy86 on August 3, 2017 21:11_\n\nI'm using Akka.NET in a project and the way they do configuration is not-quite-JSON, but still a hierarchical structure, which I haven't been able to successfully integrate into `appsettings.json`. The only way I've been able to do it is to collapse all of their hierarchy into a single-line string value, which makes it a bit of a pain to work with.\r\n\r\nFor now I just put the whole thing as CDATA in an XML file and use the `AddXmlFile()` extension from `Microsoft.Extensions.Configuration.Xml` to read it, but it'd be preferable to have it in `appsetings.json`.\n\n_Copied from original issue: aspnet/Configuration#703_","Url":"https://github.com/aspnet/Tooling/issues/1057","RelatedDescription":"Closed issue \"Support for multi-line string values\" (#1057)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"268293817","IsPullRequest":false,"CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Number":"1060","RawContent":null,"Title":"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. ","State":"closed","Body":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"TheConservativeCoder","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"},{"Id":"273994049","IsPullRequest":true,"CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Number":"1062","RawContent":null,"Title":"Update migrate-sql-server.md","State":"closed","Body":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top.","Url":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed or merged PR \"Update migrate-sql-server.md\" (#1062)"},{"Id":"274003770","IsPullRequest":true,"CreatedAt":"2017-11-15T02:15:11","Actor":"cristy","Number":"1064","RawContent":null,"Title":"Re adding","State":"closed","Body":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end...","Url":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Closed or merged PR \"Re adding\" (#1064)"},{"Id":"273996633","IsPullRequest":true,"CreatedAt":"2017-11-15T01:03:12","Actor":"cristy","Number":"1063","RawContent":null,"Title":"Webapp landing page","State":"closed","Body":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make.","Url":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Closed or merged PR \"Webapp landing page\" (#1063)"},{"Id":"273873058","IsPullRequest":true,"CreatedAt":"2017-11-14T17:26:42","Actor":"cartermp","Number":"1061","RawContent":null,"Title":"Create migrate-sql-server.md","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1061","RelatedDescription":"Closed or merged PR \"Create migrate-sql-server.md\" (#1061)"},{"Id":"258233429","IsPullRequest":false,"CreatedAt":"2017-09-16T14:09:00","Actor":"ctopher31","Number":"1059","RawContent":null,"Title":"Turn off file nesting in Visual Studio 2017","State":"closed","Body":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n","Url":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059)"},{"Id":"257312054","IsPullRequest":false,"CreatedAt":"2017-09-14T00:50:29","Actor":"svallis","Number":"1058","RawContent":null,"Title":"Views in class libraries removed from embedded resources under certain circumstances","State":"closed","Body":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views.","Url":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Closed issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058)"},{"Id":"254062749","IsPullRequest":false,"CreatedAt":"2017-08-31T04:38:52","Actor":"matthewDDennis","Number":"1056","RawContent":null,"Title":"Docker tools fail if multiple TFMs in project file","State":"closed","Body":"If you modify your projects to have multiple frameworks with the `<TargetFrameworks>` tag, then the Docker tools does not know which framework to use as there is no `<TargetFramework>` tag.\r\n\r\nAdding the `<TargetFramework>`netcoreapp1.1`<...>` fixes the problem in Visual Studio and all the frameworks build and can debug with Docker.\r\n\r\nHowever, if you try and build a framework other than the netcoreapp1.1 with the DotNet CLI, it fails as it, as the documentation states, will ignore the `<TargetFrameworks>` tag if the `<TargetFramework>` tag is present \r\n","Url":"https://github.com/aspnet/Tooling/issues/1056","RelatedDescription":"Closed issue \"Docker tools fail if multiple TFMs in project file\" (#1056)"},{"Id":"249781859","IsPullRequest":true,"CreatedAt":"2017-08-14T15:57:44","Actor":"balachir","Number":"1055","RawContent":null,"Title":"Update known-issues-vs2017.md for VS 15.3 RTW","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1055","RelatedDescription":"Closed or merged PR \"Update known-issues-vs2017.md for VS 15.3 RTW\" (#1055)"},{"Id":"247941709","IsPullRequest":false,"CreatedAt":"2017-08-05T03:07:41","Actor":"snebjorn","Number":"1054","RawContent":null,"Title":"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime","State":"closed","Body":"Hi, I'm curious about how you made Browser Link inject a custom script into the page body at runtime.\r\nI have to do something similar (ritterim/stuntman#158) so wondering if you've willing to share the implementation :)\r\n\r\nI also made a [stackoverflow post](https://stackoverflow.com/questions/45501245/programmatically-inject-custom-script-into-page-body-at-runtime-like-browser-l)\r\n\r\nThanks","Url":"https://github.com/aspnet/Tooling/issues/1054","RelatedDescription":"Closed issue \"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime\" (#1054)"},{"Id":"247229183","IsPullRequest":false,"CreatedAt":"2017-08-02T06:18:35","Actor":"halter73","Number":"1053","RawContent":null,"Title":"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly","State":"closed","Body":"Given the launchSettings.json and Program.cs below, it seems that the ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly when launching both the \"IIS Express\" or \"WebApplication1\" profiles from VS 2017 26730.0.d15rel and dotnet sdk 2.0.0-preview3-006889.\r\n\r\n\r\n#### Expected output for \"IIS Express\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"IIS Express\" profile launched from VS (App Insights is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration'\r\n```\r\n\r\n#### Expected output for \"WebApplication1\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched from VS (HostingStartup1 is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched using \"dotnet run\" (Behaves as expected)\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1'\r\n```\r\n\r\n#### launchSettings.json\r\n```json\r\n{\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:61008/\",\r\n      \"sslPort\": 0\r\n    }\r\n  },\r\n  \"profiles\": {\r\n    \"IIS Express\": {\r\n      \"commandName\": \"IISExpress\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      }\r\n    },\r\n    \"WebApplication1\": {\r\n      \"commandName\": \"Project\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      },\r\n      \"applicationUrl\": \"http://localhost:61010/\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### Program.cs\r\n```C#\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing System;\r\n\r\nnamespace WebApplication1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args)\r\n        {\r\n            Console.WriteLine(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES: '{0}'\", Environment.GetEnvironmentVariable(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\"));\r\n\r\n            return WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1053","RelatedDescription":"Closed issue \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly\" (#1053)"},{"Id":"245422589","IsPullRequest":false,"CreatedAt":"2017-07-28T17:44:59","Actor":"varora1406","Number":"1052","RawContent":null,"Title":"Add-Migration command not working.","State":"closed","Body":"IDE : visual studio 15.3 preview 5.0\r\n.net core 2.0\r\nProject : .Net core web application (Angular template) including (Angular v4)\r\n\r\nSteps to reproduce:\r\n* Create a new project and all required nuget packages.\r\n![image](https://user-images.githubusercontent.com/24986539/28577409-559354a8-7174-11e7-9dfb-26cc7efc1228.png)\r\n\r\n* Try to use Add-Migration command. (Don't worry, context classes and rest have been done)\r\n- Result : The term 'Add-Migration' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\n![image](https://user-images.githubusercontent.com/24986539/28577463-81e914c0-7174-11e7-97eb-5cd2a5fb3e28.png)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1052","RelatedDescription":"Closed issue \"Add-Migration command not working.\" (#1052)"},{"Id":"241453336","IsPullRequest":false,"CreatedAt":"2017-07-08T14:19:58","Actor":"RandyBuchholz","Number":"1051","RawContent":null,"Title":"Outdated Reference in ...CodeGeneration.Design\" Version=\"2.0.0-preview2-final\"","State":"open","Body":"There was a compatibility error with Microsoft.Composition. This is being addressed https://github.com/dotnet/corefx/issues/18452.\r\n\r\nCodeGeneration.Design is still referencing the old version and gives:\r\nPackage 'Microsoft.Composition 1.0.27' was restored using '.NETFramework,Version=v4.6.1' instead the project target framework...\r\n\r\nThe correct version is 1.0.31.\r\n\r\n![image](https://user-images.githubusercontent.com/13967891/27986052-85abdeee-63be-11e7-9b53-ec7a6199d628.png)\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1051","RelatedDescription":"Open issue \"Outdated Reference in ...CodeGeneration.Design\" Version=\"2.0.0-preview2-final\"\" (#1051)"},{"Id":"237065229","IsPullRequest":false,"CreatedAt":"2017-07-05T16:21:28","Actor":"Jerajo","Number":"1047","RawContent":null,"Title":"Tooling Preview 2 don't recognize VS 2015 Update 3","State":"closed","Body":"Here is my VS 2015.\r\n\r\n![image](https://user-images.githubusercontent.com/26252994/27312048-4fe10f30-5533-11e7-8319-e09f99059615.png)\r\n\r\nHere is the Error.\r\n\r\n![image](https://user-images.githubusercontent.com/26252994/27312066-8be0e6ea-5533-11e7-9f9e-ada4da2187e4.png)\r\n\r\nLook the Log File.\r\n\r\netc...\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: WebToolsAzureVWD14_trk, state: Absent, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: DotNetToolsVS14_trk, state: Absent, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: DotNetToolsVWD14_trk, state: Absent, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: Preparation_ASPNET, state: Absent, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: SetupBlocked_Uninstall, state: Present, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i052: Condition 'WixBundleInstalled OR NOT(NetFx45Release < 378675) OR (WixBundleAction=2)' evaluates to true.\r\n[0DBC:1AB0][2017-06-19T21:09:04]i052: Condition 'WixBundleInstalled OR VS2015DevEnvExists OR VS2015WebExpressExists OR (WixBundleAction=2)' evaluates to true.\r\n[0DBC:1AB0][2017-06-19T21:09:04]i052: Condition 'WixBundleInstalled OR (((VS2015CommunityUpdateVersion >= v14.0.25420) OR (VS2015ProfessionalUpdateVersion >= v14.0.25420) OR (VS2015EnterpriseUpdateVersion >= v14.0.25420)) OR (VS2015WebExpressUpdateVersion >= v14.0.25420)) OR (SKIP_VSU_CHECK=1) OR (WixBundleAction=2)' evaluates to false.\r\n[0DBC:1AB0][2017-06-19T21:09:04]e000: \r\n### This product requires Visual Studio 2015 Update 3 or later. Please install Visual Studio 2015 Update 3 or later, then install this product again.\r\n[0DBC:1AB0][2017-06-19T21:09:04]e000: Error 0x81f40001: Bundle condition evaluated to false: WixBundleInstalled OR (((VS2015CommunityUpdateVersion >= v14.0.25420) OR (VS2015ProfessionalUpdateVersion >= v14.0.25420) OR (VS2015EnterpriseUpdateVersion >= v14.0.25420)) OR (VS2015WebExpressUpdateVersion >= v14.0.25420)) OR (SKIP_VSU_CHECK=1) OR (WixBundleAction=2)\r\n[0DBC:1AB0][2017-06-19T21:09:04]i199: Detect complete, result: 0x0","Url":"https://github.com/aspnet/Tooling/issues/1047","RelatedDescription":"Closed issue \"Tooling Preview 2 don't recognize VS 2015 Update 3\" (#1047)"},{"Id":"238392758","IsPullRequest":false,"CreatedAt":"2017-07-04T19:13:11","Actor":"miloush","Number":"1048","RawContent":null,"Title":"Adding application manifest ","State":"closed","Body":"The project properties designer asks me to add manifest to the project first before it can be selected:\r\n![untitled](https://user-images.githubusercontent.com/10546952/27518138-8a52e322-59d0-11e7-99b8-78a31d72e1a3.png)\r\n\r\nHowever, there does not seem to be a manifest template in the Add New Item list for ASP.NET Core projects.\r\n\r\nEither add the manifest template, or let the properties designer generate it, or change the \"default settings\" to declare newer OS support.","Url":"https://github.com/aspnet/Tooling/issues/1048","RelatedDescription":"Closed issue \"Adding application manifest \" (#1048)"},{"Id":"239635705","IsPullRequest":true,"CreatedAt":"2017-06-29T23:09:22","Actor":"anangaur","Number":"1050","RawContent":null,"Title":"Update known-issues-vs2017-preview.md","State":"open","Body":"Removed \"No workaround...\" as there is a workaround","Url":"https://github.com/aspnet/Tooling/pull/1050","RelatedDescription":"Open PR \"Update known-issues-vs2017-preview.md\" (#1050)"},{"Id":"239016783","IsPullRequest":true,"CreatedAt":"2017-06-28T20:04:41","Actor":"balachir","Number":"1049","RawContent":null,"Title":"Updates for VS 2017 15.3 Preview 3 / .NET Core 2.0 Preview 2","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1049","RelatedDescription":"Closed or merged PR \"Updates for VS 2017 15.3 Preview 3 / .NET Core 2.0 Preview 2\" (#1049)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"339929062","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:26","Actor":"blowdart","Number":"311","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0 and 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core handles such requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2708\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application is behind a forwarding proxy such is Internet Information Server, Azure Application Gateway or nginx you will not be affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Server.Kestrel.Core with a vulnerable version listed below and not hosted behind a forwarding proxy.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 2.0.4 <br /> 2.1.2\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.0.8 <br /> 2.1.0, 2.1.1  | 2.0.9 <br /> 2.1.2\r\nMicrosoft.AspNetCore.App | 2.1.0, 2.1.1 | 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Server.Kestrel.Core` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET 2.0 & 2.1 not targeting the meta-packages\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects.\r\n\r\nThe `project.assets.json`files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.8\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.All` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.9\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) .\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Server.Kestrel.Core/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Server.Kestrel.Core`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.34 />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.1 (July 10, 2018): Added .App meta-package details.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/311","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\" (#311)"},{"Id":"339928979","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:13","Actor":"blowdart","Number":"310","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass in ASP.NET Core when the number of incorrect login attempts is not validated. An attacker who successfully exploited this vulnerability could try an infinite number of authentication attempts.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core validates the number of incorrect login attempts.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Identity/issues/1870\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application does not use ASP.NET Core's implementation of multi-factor authentication you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Identity with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Identity | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5 <br /> 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.1.5 <br /> 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 1.0.6 <br /> 1.1.6 <br /> 2.0.4 <br /> 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Identity` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET Core 1.0, 1.1 or 2.0 not targeting the metapackage.\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Identity` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Identity` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"Microsoft.AspNetCore.Identity\" : \"1.0.5\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `Microsoft.AspNetCore.Identity`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `Microsoft.AspNetCore.Identity` version 1.0.5.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `Microsoft.AspNetCore.Identity` to 1.0.6.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Identity \": \"1.0.6\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Identity/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Identity`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Identity` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Identity/1.0.1` is a reference to v1.0.1 of `Microsoft.AspNetCore.Identity`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of  `Microsoft.AspNetCore.Identity` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Identity` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Identity\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Martin Knafve](https://www.linkedin.com/in/martin-knafve-99187a2/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8171](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8171)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-07-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/310","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\" (#310)"},{"Id":"336797507","IsPullRequest":false,"CreatedAt":"2018-06-28T22:10:48","Actor":"natemcmaster","Number":"309","RawContent":null,"Title":"For contributors: branch name changes in ASP.NET Core repos","State":"open","Body":"Over the coming weeks, we are planning on making the following changes to most projects in https://github.com/aspnet that are used to build ASP.NET Core.\r\n\r\n* We will create a branch named \"release/2.2\". Work on this branch will be part of [ASP.NET Core 2.2](https://github.com/aspnet/Announcements/issues/307)\r\n* We will rename the \"dev\" branch to \"master\". This is part of aligning aspnet repos with the branch naming used by other Microsoft teams.\r\n* We will change the default branch to \"master\" on GitHub.\r\n* Update the product branding on \"master\" to 3.0. Work on this branch will eventually become part of [ASP.NET Core 3.0](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/)\r\n\r\nTo help us prevent too much drift between release/2.2 and master, we will enable some automation to merge all changes from release/2.2 into master (3.0).\r\n\r\n## FAQ\r\nThis change may affect the way you help contribute to ASP.NET Core. As a result of this change and dicussion within our team, we've anticipated at least two questions you may have.\r\n\r\n#### Which branch should I use for my work?\r\n<img src=\"https://user-images.githubusercontent.com/2696087/42063035-b5fc9e42-7ae4-11e8-9916-a708fcc8e0e6.png\" width=\"500\" />\r\n\r\n#### I opened my PR to the wrong branch. What should I do?\r\n \r\nYou can edit a PR’s target branch.\r\n\r\n<img width=\"700\" alt=\"one\" src=\"https://user-images.githubusercontent.com/2696087/42063074-eb3060a8-7ae4-11e8-8ec2-d569f8e07f78.png\">\r\n<img width=\"700\" alt=\"two\" src=\"https://user-images.githubusercontent.com/2696087/42063083-f8a9564a-7ae4-11e8-91f0-f57e039085f8.png\">\r\n\r\n\r\n## Questions? Comments?\r\n\r\nThis issue is locked to reduce noise on this repo. Please use https://github.com/aspnet/Home/issues/3278 for questions and comments.\r\n\r\nThanks,\r\nNate","Url":"https://github.com/aspnet/Announcements/issues/309","RelatedDescription":"Open issue \"For contributors: branch name changes in ASP.NET Core repos\" (#309)"},{"Id":"335579239","IsPullRequest":false,"CreatedAt":"2018-06-25T21:44:22","Actor":"divega","Number":"308","RawContent":null,"Title":"EF Core 2.2 Roadmap","State":"open","Body":"## EF Core 2.2 is a small release\r\n\r\nUnlike EF Core 2.1, the 2.2 release will include a small number of new features. We are concentrating most of our efforts to add new functionality on the 3.0 release. Still, you can expect 2.2 to include lots of bugs fixes, community contributions and small improvements.\r\n\r\nYou can access the list of issues currently assigned to the 2.2 milestone using [this query](https://github.com/aspnet/EntityFrameworkCore/issues?q=is%3Aopen+is%3Aissue+milestone%3A2.2.0+sort%3Areactions-%2B1-desc) on our issue tracking system.  \r\n\r\n## Schedule\r\nThe schedule of EF Core 2.2 will align with the schedule of .NET Core and ASP.NET Core 2.2. See [the ASP.NET Core 2.2 Roadmap announcement](https://github.com/aspnet/Announcements/issues/307).\r\n\r\nOur current plan is to have three previews before we ship RTM near the end of 2018:\r\n\r\n- August – Preview 1\r\n- September - Preview 2\r\n- October - Preview 3\r\n- Before end-of-year – RTM\r\n\r\n As usual, this post reflects our current plan, but things may change as we make progress. \r\n\r\n## New features\r\n\r\n### Reverse engineering of database views into query types\r\n\r\nIn EF Core 2.1 we added query types, which allow mapping .NET objects to views and tables without keys. In 2.2, we plan to leverage this new capability to automatically map existing database views to query types. \r\n\r\nYou can track the progress of this at https://github.com/aspnet/EntityFrameworkCore/issues/1679.\r\n\r\n###  Support for collections of owned entities\r\n\r\nIn EF Core 2.0 we added the concept of owned entity types, which allows modeling ownership relationship that are common between entities that are part of the same document in document-oriented databases or the same aggregate if you use Domain-Driven Design concepts in your model.\r\n\r\nUntil now, we only support reference navigation properties to owned entities. In EF Core 2.2, we plan to enhance this functionality to map collection navigation properties to owned entities. \r\n\r\nYou can track the progress of this at https://github.com/aspnet/EntityFrameworkCore/issues/8172.\r\n\r\n## Other work\r\n\r\nThere are some additional work items that are not strictly EF Core 2.2 features, but we still track as part of the 2.2 milestone because we are doing the work in the same timeframe:\r\n\r\n### Cosmos DB provider\r\n\r\nA lot of our efforts are going into productizing an EF Core provider for the SQL API in Cosmos DB.\r\nWe have already created a prototype, which we have shown in demos such as in this [this EF Core 2.1 talk](https://www.youtube.com/watch?v=k55kDH_ixrQ) we did at the Microsoft Build conference.\r\n\r\nDue to competing priorities, releasing a preview of this provider has taken more than what we originally planned, but we are working on it now, and the current plan is to release a stable version by the end of this calendar year.\r\n\r\nYou can track our progress on this issue: https://github.com/aspnet/EntityFrameworkCore/issues/12086. \r\n\r\n### Preview of spatial support for SQL Server\r\n\r\nWe are also focusing on adding spatial support as an extension to the SQL Server provider for EF Core. \r\nNote that the PostgreSQL provider (Npgsql) already added support in EF Core 2.1. Beside implementing this functionality for SQL Server, we are working closely with the developers of Npgsql to try to achieve a consistent and hopefully improved experience across providers.\r\n\r\nNote that we aren't committing to having a final version of the spatial support for the end of the current calendar year. But we are actively working on this now, and as we make progress, we should be able to provide a more precise estimate.   \r\n\r\nYou can track our progress on this issue: https://github.com/aspnet/EntityFrameworkCore/issues/1100.\r\n\r\n### Improve test coverage for LINQ and reduce query regressions in future releases\r\n\r\nIn the last few releases, we have seen that when we commit improvements to our LINQ implementation, we often break queries that were previously working. The main challenge is that LINQ defines a huge space of possible queries to test, and it is very complex to measure what level of test coverage we have, even for a specific query operator. In the 2.2 timeframe, we will be investing on improving test coverage for this huge space. We also plan to experiment with new approaches to add appropriate coverage, and to reduce the likelihood of introducing regressions in future releases.\r\n\r\nYou can track our progress on this at https://github.com/aspnet/EntityFrameworkCore/issues/12046. \r\n\r\nFor discussion on this roadmap, please use https://github.com/aspnet/EntityFrameworkCore/issues/12465. ","Url":"https://github.com/aspnet/Announcements/issues/308","RelatedDescription":"Open issue \"EF Core 2.2 Roadmap\" (#308)"},{"Id":"335571873","IsPullRequest":false,"CreatedAt":"2018-06-25T21:19:36","Actor":"glennc","Number":"307","RawContent":null,"Title":"ASP.NET Core 2.2 Roadmap","State":"open","Body":"We have grouped the ASP.NET Core 2.2 release into a few themes:\r\n\r\n- APIs & Services\r\n- Server improvements\r\n- SignalR\r\n\r\n## Rough Schedule\r\nWe are currently planning to have 3 previews before RTM:\r\n - August – Preview 1\r\n - September - Preview 2\r\n - October - Preview 3\r\n - Before End-of-year – RTM\r\n\r\nAs with our previous roadmap posts this is what we intend right now, but it's subject to change as we continue development.\r\n\r\n## APIs and Services\r\n\r\nThe 'north star' for this version is to generate better metadata about your app and use that data to make your dev experience better and more productive. This is the main focus for 2.2.\r\n\r\n### API Controller conventions\r\nIn 2.1 we added controller specific conventions that make Web API development more convenient with the [ApiController attribute](https://docs.microsoft.com/en-us/aspnet/core/web-api/index?view=aspnetcore-2.1#annotate-class-with-apicontrollerattribute). In 2.2 we want to expand on this concept to provide metadata for API Explorer and provide a better end-to-end API documentation experience.\r\n\r\nWe want to make it possible for all MVC Core applications to have a good Swagger/OpenAPI definition by default. By following common patterns, your actions will produce rich metadata without falling into 'attribute soup' where you list every possible status code that every action in your app could return. We will include a default set of conventions that match what ASP.NET Core scaffolding generations. It will also be possible to write and share your own conventions to reflect your desired contracts. \r\n\r\nWe will include a set of analyzers that will help you find cases where code that doesn't match the API Explorer metadata, and a code-fix that provides options to explicitly specify the response type metadata, create a new convention with a different pattern, or just let you write code to satisfy the convention.\r\n\r\nAs a concrete example, you could write a convention that says \"every action method that starts with 'Create' will return an HTTP 201\". If you wrote the following code, then you would receive a warning.\r\n\r\n```csharp\r\n[HttpPost(\"/orders\")]\r\npublic ActionResult<Order> CreateOrder(OrderData orderData)\r\n{\r\n    ....\r\n    return Ok(new Order() {...});\r\n}\r\n```\r\n\r\nThis code doesn't match your Swagger/OpenAPI metadata (from the convention) - which says that this action returns a 201. Once you see this, you could `ctrl + .` to add the attributes for what we do know about this method, opting out of conventions, or you could change the code.\r\n\r\nThe analyzer will also be able to 'check your work' if you are being explicit about status codes and results using the existing attributes - it does not require you to use the conventions. Details for how this will all work can be discussed here: https://github.com/aspnet/Mvc/issues/7802\r\n\r\nLet's look at a more fleshed-out out example. The following code snippet is what is required to generate a reasonable Open API document for an action method that will get an item by ID or return a 404:\r\n\r\n```csharp\r\n[ApiController]\r\npublic class CatalogController : ControllerBase\r\n{\r\n    [HttpGet]\r\n    [Route(\"items/{id:int}\")]\r\n    [ProducesResponseType((int)HttpStatusCode.NotFound)]\r\n    [ProducesResponseType(typeof(CatalogItem),(int)HttpStatusCode.OK)]\r\n    public async Task<ActionResult<CatalogItem>> GetItemById(int id)\r\n    {\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\nIn 2.2 with the default conventions the following code should generate the same Open API document that the above code sample does, and this shipped analyzers will give you hints when you do something that doesn't match so you know to go and add attributes or change the conventions:\r\n\r\n```csharp\r\n[ApiController]\r\npublic class CatalogController : ControllerBase\r\n{\r\n    [HttpGet]\r\n    [Route(\"items/{id:int}\")]\r\n    public async Task<ActionResult<CatalogItem>> GetItemById(int id)\r\n    {\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\n### OpenAPI generation\r\nWith the conventions described above it will be possible for code that uses the API Explorer to generate Open API documents to be better by default, since the code you write will either follow the conventions or have attributes allowing generators to create better documents.\r\n\r\n### Dispatcher\r\nIn 2.2 we will introduce a new routing system that will expand the set of scenarios where routing is useful – tentatively called Dispatcher. \r\n\r\nThe current routing system was designed to support MVC’s historical scenarios without much thought to how routing and the composable middleware pipeline will work together. The Dispatcher is designed to run the URL matching step very early in the pipeline so that middleware can see the Endpoint that was selected as well as metadata that is associated with that endpoint. Like existing routing, the dispatcher will branch and call the actual endpoint at the end of the pipeline.\r\n\r\nA concrete example of how this helps us is with CORS. Today there is both a CORS middleware AND a CORS feature of MVC (https://docs.microsoft.com/en-us/aspnet/core/security/cors?view=aspnetcore-2.1). Because routing information is deeply integrated with MVC we can't apply CORS policies that only apply to specific controllers until after we know what controller has been selected. However, if you also want CORS policies to apply to other parts of your pipeline then you need the middleware. This has been a source of confusion for many and we can simplify it if all of the middleware pipeline can have as much information about routing as MVC does today.\r\n\r\nWe’re also using this opportunity to make improvements to the performance of routing and dispatching for MVC and other scenarios.\r\n\r\n### HTTP API REPL tooling\r\nToday there are no tools built into Visual Studio or the dotnet CLI to help you execute HTTP verbs against your API. We have a great language, debugger, and framework but they are somewhat limited when it's difficult to send a POST to my app to see what happens. In 2.2 we want to build a CLI experience for exploring HTTP APIs to imcrease your API inner loop productivity. The CLI builds on all the features we've talked about above as some of its advanced features, like listing all routes in your app, are enabled by consuming the metadata we have about your app via Open API documents. That means the CLI should be useful for executing any HTTP verb, but really shines when you feed it more data like Open API docs. We intend to start by shipping this as a standalone global tool while we explore its feature set and potential.\r\n\r\nYou can see a demo and description of this in Scott Hunter and Scott Hanselman's BUILD talk here: https://youtu.be/KAIJ3ezQb3c?t=18m\r\n\r\n### API client generation (C# & TypeScript)\r\nOnce you have an API with rich metadata and done exploring and testing it, then you need to go and write some client code to call and make use of your API. We are going to build an experience for generating this code based on the same data and documentation described above. We envision a few pieces for this story, one part is a dotnet tool that can generate code from an Open API document, the other is MSBuild SDK work to allow a `ServiceReference` to another project in a solution. That reference will cause build time client code generation to happen via the tool that can generate code. We expect this to work in a similar way to the EF Core tooling experience, where your application is built and most of your startup code executed but instead of running it we use the data we have about your code to generate a client.\r\n\r\n### Authorization Server\r\nOne of the largest gaps we’ve had has been around authorization for applications beyond a simple forms based login. We plan to fill that gap with a simple to use OpenID Connect based authorization server, which will allow your ASP.NET application to act as an authentication point for your projects, be they web site to API, SPA to API, native application to an API or, for distributed applications API to API. As we are concentrating on first party applications we can make the code you need to plumb in trivial, getting as close to zero configuration as you can,  we’re not aiming to replace the excellent third-party solutions out there which enable richer scenarios like third-party applications or which provide a flexibility in configuration and authentication flow.\r\n\r\n## Server Improvements\r\n\r\n### Health Checks\r\nThis feature is a way to trivially setup an endpoint in your application that can be used to check the health of your application, potentially taking into account things like memory consumption or database availability as well as just \"can I accept a HTTP request\".\r\n\r\n### HTTP/2 in Kestrel & HttpClient\r\nThe title says it all in this case. HTTP/2 support for all. We started this work some time ago, and have had the protocol mostly implemented for a while but not compiled into the product since it wasn't ready. This version we will finish that work and implement the missing features.\r\n\r\n### In-proc ANCM\r\nRunning ASP.NET Core applications in-process in IIS, giving a significant performance boost.\r\n\r\n## SignalR\r\n\r\n### Add Java & C++ clients\r\nAllow customers using Java or C++ to connect to SignalR servers, and the [Azure SignalR Service](https://azure.microsoft.com/en-us/blog/azure-signalr-service-a-fully-managed-service-to-add-real-time-functionality/).\r\n\r\n## Other\r\nAs with all releases there is a large tail of bug fixes, performance improvements, small features, and community PRs that we will also work on. You can see the full list of work by browsing the 2.2 milestones on the various [repositories](https://github.com/aspnet/).\r\n\r\nFor discussion on the roadmap in general, use https://github.com/aspnet/Home/issues/3265","Url":"https://github.com/aspnet/Announcements/issues/307","RelatedDescription":"Open issue \"ASP.NET Core 2.2 Roadmap\" (#307)"},{"Id":"333804954","IsPullRequest":false,"CreatedAt":"2018-06-19T19:21:13","Actor":"anurse","Number":"306","RawContent":null,"Title":"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR Client from UWP applications where the minimum version is set to \"Windows 10, version 1803\". However, these fixes also require some additional dependencies.\r\n\r\n**NOTE**: UWP Applcations with a minimum version set **below** \"Windows 10, version 1803\" (for example, if the minimum version is set to \"Fall Creators Update\") are **not** affected by this issue and **do not require** these steps.\r\n\r\nIn order to use the SignalR Client in UWP applications where the minimum version is set to \"Windows 10, version 1803\" you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Add the following **additional** package references to your project. These are referenced transitively by the SignalR Client, but newer versions are required to resolve this issue. We are planning to improve this in a future patch.\r\n    * `System.Threading.Tasks.Extensions` version `4.5.1`\r\n    * `System.Runtime.CompilerServices.Unsafe` version `4.5.1`\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/2406","Url":"https://github.com/aspnet/Announcements/issues/306","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803\" (#306)"},{"Id":"333802959","IsPullRequest":false,"CreatedAt":"2018-06-19T19:15:05","Actor":"anurse","Number":"305","RawContent":null,"Title":"SignalR Client 2.1.1 in Xamarin","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR **Client** from Xamarin. However, these fixes also require an updated build of Xamarin.iOS and Xamarin.Android, as well as some additional dependencies.\r\n\r\nIn order to use the SignalR Client in Xamarin applications you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Upgrade Xamarin to the appropriate version:\r\n    * Xamarin.Android `8.4.0.1`\r\n    * Xamarin.iOS `11.14.0.4`\r\n    * These will be included in:\r\n      * Visual Studio 15.8 **Preview 3** (not released at the time of publishing, but coming soon)\r\n      * Visual Studio for Mac 7.6 **Preview 3** (not released at the time of publishing, but coming soon)\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/1886","Url":"https://github.com/aspnet/Announcements/issues/305","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in Xamarin\" (#305)"},{"Id":"329851587","IsPullRequest":false,"CreatedAt":"2018-06-06T13:30:30","Actor":"ToLearnMoe","Number":"304","RawContent":null,"Title":"怎么找工作啊","State":"closed","Body":"我学spirng的同学都上班两个月了我实习都没找到，学了给asp告诉我现在不能用了要什么点apsnet。你们行不行啊\r\n\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/Home/issues and create a new issue.\r\n","Url":"https://github.com/aspnet/Announcements/issues/304","RelatedDescription":"Closed issue \"怎么找工作啊\" (#304)"},{"Id":"329603099","IsPullRequest":false,"CreatedAt":"2018-06-05T20:11:55","Actor":"AngelosP","Number":"303","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","State":"closed","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\r\n\r\nFor discussion, use https://github.com/aspnet/Tooling/issues/1075","Url":"https://github.com/aspnet/Announcements/issues/303","RelatedDescription":"Closed issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\" (#303)"},{"Id":"327435771","IsPullRequest":false,"CreatedAt":"2018-05-29T18:26:40","Actor":"shirhatti","Number":"302","RawContent":null,"Title":"IIS in-process hosting moved out of ASP.NET Core 2.1","State":"open","Body":"We are moving IIS in-process hosting out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will ship IIS in-process hosting as part of the ASP.NET Core 2.2 release.\r\n\r\n### Why?\r\n\r\nIIS in-process hosting  is a brand new server implementation and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n\r\nFor discussion, use https://github.com/aspnet/IISIntegration/issues/878","Url":"https://github.com/aspnet/Announcements/issues/302","RelatedDescription":"Open issue \"IIS in-process hosting moved out of ASP.NET Core 2.1\" (#302)"},{"Id":"322891671","IsPullRequest":false,"CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Number":"301","RawContent":null,"Title":"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available","State":"open","Body":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*","Url":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Open issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301)"},{"Id":"321270218","IsPullRequest":false,"CreatedAt":"2018-05-08T17:07:04","Actor":"blowdart","Number":"300","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2553\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_","Url":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300)"},{"Id":"320441265","IsPullRequest":false,"CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Number":"299","RawContent":null,"Title":"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1","State":"open","Body":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n\r\nFor discussion, use https://github.com/aspnet/WebHooks/issues/296","Url":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Open issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299)"},{"Id":"309862672","IsPullRequest":false,"CreatedAt":"2018-03-29T18:44:48","Actor":"glennc","Number":"298","RawContent":null,"Title":"Migrating from aspnetcore docker repos to dotnet","State":"open","Body":"Starting with .NET Core 2.1-preview2, we intend to migrate from using the microsoft/aspnetcore-build and microsoft/aspnetcore Docker repos to the microsoft/dotnet Docker repo.  We will continue to ship patches and security fixes for the existing aspnetcore images but any new images for 2.1 and higher will be pushed to microsoft/dotnet.\r\n\r\nDockerfiles using `microsoft/aspnetcore:<version>` should change to `microsoft/dotnet:<version>-aspnetcore-runtime`.\r\n\r\nDockerfiles using `microsoft/aspnetcore-build` that do not require Node should just change to `microsoft/dotnet:<version>-sdk`.\r\n\r\nDockerfiles using Node from the `microsoft/aspnetcore-build` image will either need to install Node into their own image or use mult-stage builds as described in the Dockerfile examples at the end of this announcement.\r\n\r\nThe `ASPNETCORE_URLS` env var that allows ASP.NET Core apps to accept traffic from outside the container will be set in all the `dotnet` images, which was a common early stumbling block for people getting started with ASP.NET Core and Docker. PR is [here](https://github.com/dotnet/dotnet-docker/pull/450)\r\n\r\n### Why the merge?\r\n\r\nFor some time we have been seeing people search for and find the `microsoft/dotnet` images and never realise that there are aspnetcore ones. This could be problematic in the past as the dotnet images were not optimised for ASP.NET Core, making things a little harder or slower. But with changes in the way ASP.NET Core works in 2.1 it was going to be much more impactful, in that ASP.NET Core applications were not likely to run on the base dotnet image. Given that we also thought it made more sense to have a single repository for all images, as ASP.NET is just part of .NET, we are taking this opportunity to remove the potential source of confusion and wasted time for our customers.\r\n\r\n### Why no Node?\r\nThere are two main reasons for this:\r\n\r\n  1. Multi-stage build now makes it easier to pull in the Node image for purely build concerns.\r\n  2. The ASP.NET Core templates no longer have a hard dependency on Node.\r\n\r\n\r\nFor discussion and feedback on this decision you can go here: [https://github.com/aspnet/aspnet-docker/issues/403](https://github.com/aspnet/aspnet-docker/issues/403)\r\n\r\n### Dockerfile examples\r\n\r\nIf you need Node then you will need to add it in your own Dockerfile, like this:\r\n\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.1-sdk as build-env\r\nWORKDIR /app\r\n#setup node\r\nENV NODE_VERSION 8.9.4\r\nENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc\r\n\r\nRUN curl -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\r\n    && echo \"$NODE_DOWNLOAD_SHA nodejs.tar.gz\" | sha256sum -c - \\\r\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\r\n    && rm nodejs.tar.gz \\\r\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\r\n\r\n# copy csproj and restore as distinct layers\r\nCOPY *.csproj ./\r\nRUN dotnet restore\r\n\r\n# copy everything else and build\r\nCOPY . ./\r\nRUN dotnet publish -c Release -o out\r\n\r\n# build runtime image\r\nFROM microsoft/dotnet:2.1-aspnetcore-runtime\r\nWORKDIR /app\r\n#setup node, this is only needed if you use Node both at runtime and build time. Some people may only need the build part.\r\nENV NODE_VERSION 8.9.4\r\nENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc\r\n\r\nRUN curl -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\r\n    && echo \"$NODE_DOWNLOAD_SHA nodejs.tar.gz\" | sha256sum -c - \\\r\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\r\n    && rm nodejs.tar.gz \\\r\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\r\n\r\nCOPY --from=build-env /app/out .\r\nENTRYPOINT [\"dotnet\", \"aspnetapp.dll\"]\r\n```\r\n\r\nIf you only need Node at build then you may also be able to take advantage of multi-stage build like the following:\r\n\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.1-sdk as build-env\r\nWORKDIR /app\r\n\r\n# copy csproj and restore as distinct layers\r\nCOPY *.csproj ./\r\nRUN dotnet restore\r\n\r\nFROM node as clientBuild\r\n#Do npm restore and other Node stuff.\r\n\r\n#Merge the contents of your .NET build env and your clientBuild and publish.\r\nFROM build-env as publish\r\n# copy everything else and build\r\nCOPY --from=clientBuild . .\r\nRUN dotnet publish -c Release -o out\r\n\r\n# build runtime image\r\nFROM microsoft/dotnet:2.1-aspnetcore-runtime\r\nWORKDIR /app\r\n\r\nCOPY --from=publish /app/out .\r\nENTRYPOINT [\"dotnet\", \"aspnetapp.dll\"]\r\n```\r\n\r\nFor discussion and feedback on this decision you can go here: [https://github.com/aspnet/aspnet-docker/issues/403](https://github.com/aspnet/aspnet-docker/issues/403)\r\n","Url":"https://github.com/aspnet/Announcements/issues/298","RelatedDescription":"Open issue \"Migrating from aspnetcore docker repos to dotnet\" (#298)"},{"Id":"305936138","IsPullRequest":false,"CreatedAt":"2018-03-16T14:09:54","Actor":"mnmr","Number":"297","RawContent":null,"Title":"Model binding accesses read-only properties in post-back","State":"closed","Body":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355.","Url":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297)"},{"Id":"305310538","IsPullRequest":false,"CreatedAt":"2018-03-14T20:08:36","Actor":"halter73","Number":"296","RawContent":null,"Title":"Managed sockets will replace libuv as Kestrel's default transport","State":"open","Body":"Starting in ASP.NET Core 2.1.0, managed sockets will be replacing libuv as Kestrel's default transport.\r\n\r\nThis change should only break applications that bind to non-TCP endpoints or explicitly call `IWebHostBuilder.UseLibuv()` and reference the libuv transport transitively through the Microsoft.AspNetCore.App and/or Microsoft.AspNetCore.Server.Kestrel NuGet packages.\r\n\r\nTo fix the break simply add a reference to Microsoft.AspNetCore.All and/or Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.\r\n\r\nWhile switching to the managed socket transport should be seamless<sup>1</sup>, if you want to continue using the libuv transport in 2.1.0 you will need to explicitly call `UseLibuv()` and reference the libuv transport either directly or through the \"All\" metapackage.\r\n\r\n<sup>1</sup> Unless you are trying to bind to a Unix domain socket or use systemd socket activation. As of 2.1, only the libuv transport supports binding to these kinds of endpoints.\r\n\r\n---\r\n\r\n*Please use aspnet/KestrelHttpServer#2360 for further discussion.*","Url":"https://github.com/aspnet/Announcements/issues/296","RelatedDescription":"Open issue \"Managed sockets will replace libuv as Kestrel's default transport\" (#296)"},{"Id":"304854672","IsPullRequest":false,"CreatedAt":"2018-03-13T17:07:23","Actor":"blowdart","Number":"295","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability\r\n\r\n## Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core versions 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where an elevation of privilege vulnerability exists when a ASP.NET Core web application fails to validate web requests correctly.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Home/issues/2954\r\n\r\n### Mitigation factors\r\n\r\nSites are not vulnerable to this elevation of privilege when:\r\n\r\n* The site is hosted behind a proxy, such as Internet Information Services (IIS), NGINX, or Apache, where:\r\n\r\n  * The proxy validates the host header, and\r\n  * The proxy is configured to listen on fully qualified domain names or\r\n  * The proxy is configured with a wildcard subdomain where the root domain is fully controlled by the site owner.\r\n\r\nFor example, if IIS is configured to respond to requests for `contoso.com` or `*.contoso.com` hosts, the application is protected.\r\n\r\nIf IIS is configured to respond to any request from any host, the application is vulnerable.\r\n\r\nKestrel does not have the capability to validate host headers and is vulnerable if not placed behind a proxy that performs the host header validation.\r\n\r\nApps hosted in Azure Web Apps are not susceptible to this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core hosted application which is directly exposed to the internet, or hosted behind a proxy which does not validate or restict host headers to known good values.\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.HttpOverrides | 2.0.0, 2.0.1 |  2.0.2 and later\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1 |  2.0.2 and later\r\n\r\n*No patches are available for ASP.NET Core 1.0.x or ASP.NET Core 1.1.x. Microsoft requires that you place your 1.x ASP.NET Core application behind a proxy.\r\nYou must address the configuration of your proxy to protect your application. If you're not running ASP.NET Core 1.x behind a proxy, you must either place a proxy in front of your application or upgrade to ASP.NET Core 2.0.\r\nand add the host validating middleware provided at https://github.com/aspnet/BasicMiddleware/blob/release/2.0/samples/HostFilteringSample/.*\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected?\r\n\r\nReview the server and proxy configuration [instructions](#configuration) below to see if your system is configured correctly, and adjust the configuration if necessary.\r\n\r\n### How do I fix the issue?\r\n\r\nYou must address the [configuration](#configuration) of your server or proxy to protect your application to limit requests to known hosts.\r\n\r\nIf you're not running Kestrel 1.x behind a proxy, you must either place a proxy in front of your application or upgrade to ASP.NET Core 2.0 and follow the 2.0 instructions below.\r\n\r\nASP.NET Core 2.0.x applications must [update your code](#app-update) to fully protect your application.\r\n\r\n#### <a name=\"configuration\"></a> Server and Proxy configuration\r\n\r\nYou must examine your externally facing server or proxy configuration and ensure it requires host headers with fully qualified domain names, or known sub-domains if you are using sub-domain wild cards.\r\n\r\n##### ASP.NET Core applications behind [IIS](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/)\r\n\r\nTo configure IIS to only respond to know hosts:\r\n\r\n* Open IIS Manager.\r\n* Expand the **Sites** node for the machine you want to configure.\r\n* Select the site by clicking on the site.\r\n* In the **Actions** list on the right-hand side of IIS Manager, click **Bindings**.\r\n* Edit any bindings that do not have a host name to specify one. Do not use a `*` wildcard unless it's against a domain under your control. For example, `*.contoso.com` is safe, `*.com` is not.\r\n\r\n##### ASP.NET Core applications running publicly on [Kestrel](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel)\r\n\r\nKestrel does not have the capability to validate host headers. It must either be placed behind a proxy that performs the host header validation or the validation must be performed within the application by adding  host filtering middleware provided at https://github.com/aspnet/BasicMiddleware/blob/release/2.0/samples/HostFilteringSample/. You must also [update your dependencies](#app-update) to fully protect your application.\r\n\r\n##### ASP.NET Core applications running on [HTTP.SYS](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/httpsys)\r\n\r\nTo configure URL prefixes and ports, you can use the `UseUrls` extension method, the `urls` command-line argument, the ASPNETCORE_URLS environment variable, or the `UrlPrefixes` property on [HttpSysOptions](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.httpsys.httpsysoptions). The following code example uses `UrlPrefixes`.\r\n\r\n```c#\r\npublic static IWebHost BuildWebHost(string[] args) =>\r\n    WebHost.CreateDefaultBuilder(args)\r\n        .UseStartup<Startup>()\r\n        .UseHttpSys(options =>\r\n        {\r\n            // The following options are set to default values.\r\n            options.Authentication.Schemes = AuthenticationSchemes.None;\r\n            options.Authentication.AllowAnonymous = true;\r\n            options.MaxConnections = null;\r\n            options.MaxRequestBodySize = 30000000;\r\n            options.UrlPrefixes.Add(\"http://localhost:5000\");\r\n        })\r\n        .Build();\r\n```\r\n\r\n##### ASP.NET Core applications behind [NGINX](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx)\r\n\r\nTo configure NGINX as a reverse proxy to forward requests to your ASP.NET Core app, replace the contents */etc/nginx/sites-available/default* with the following:\r\n\r\n```NGINX\r\nserver {\r\n    listen        80;\r\n    server_name   example.com *.example.com;\r\n    location / {\r\n        proxy_pass         http://localhost:5000;\r\n        proxy_http_version 1.1;\r\n        proxy_set_header   Upgrade $http_upgrade;\r\n        proxy_set_header   Connection keep-alive;\r\n        proxy_set_header   Host $host;\r\n        proxy_cache_bypass $http_upgrade;\r\n    }\r\n}\r\n```\r\n\r\nNote that with NGINX, when there is no match for `server_name`, NGINX will pick the default server. If no default server has been defined, the first server in the conf file is the default server. Best practice is to add a specific default server which returns a status code of 444 in the conf file. An example default server configuration would be as follows:\r\n\r\n```NGINX\r\nserver {\r\n    listen   80 default_server;\r\n    # listen [::]:80 default_server deferred;\r\n    return   444;\r\n}\r\n```\r\n\r\nWith the preceding configuration file and default server, NGINX accepts public traffic on port 80 with host header `example.com` or `*.example.com`. Requests not matching these hosts won't get forwarded to Kestrel. NGINX forwards the matching requests to Kestrel at `http://localhost:5000`. See [How nginx processes a request](https://nginx.org/docs/http/request_processing.html) for more information.\r\n\r\nOnce the NGINX configuration is established, run `sudo nginx -t` to verify the syntax of the configuration files. If the configuration file test is successful, force NGINX to pick up the changes by running `sudo nginx -s reload`.\r\n\r\n##### ASP.NET Core applications behind [Apache](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-apache)\r\n\r\nConfiguration files for Apache are located within the `/etc/httpd/conf.d/` directory. Any file with the `*.conf*` extension:\r\n\r\n* Is processed in alphabetical order, and\r\n* The module configuration files in `/etc/httpd/conf.modules.d/` are processed. The module configuration files in `/etc/httpd/conf.modules.d/` contain any configuration files necessary to load modules.\r\n\r\n\r\n```\r\n<VirtualHost *:80>\r\n    ProxyPreserveHost On\r\n    ProxyPass / http://127.0.0.1:5000/\r\n    ProxyPassReverse / http://127.0.0.1:5000/\r\n    ServerName www.example.com\r\n    ServerAlias *.example.com\r\n</VirtualHost>\r\n```\r\n\r\nThe `VirtualHost` block can appear multiple times, in one or more files on a server. In the preceding configuration file, Apache accepts public traffic on port 80. The domain `www.example.com` is being served, and the `*.example.com` alias resolves to the same website. See [Name-based virtual host support](https://httpd.apache.org/docs/current/vhosts/name-based.html) for more information. Requests are proxied at the root to port 5000 of the server at 127.0.0.1. For bi-directional communication, `ProxyPass` and `ProxyPassReverse` are required.\r\n\r\nSave the file and test the configuration. If everything passes, the response is `Syntax [OK]`.\r\n\r\n```bash\r\nsudo service httpd configtest\r\n```\r\n\r\nRestart Apache:\r\n\r\n```bash\r\nsudo systemctl restart httpd\r\nsudo systemctl enable httpd\r\n```\r\n\r\n\r\n#### <a name=\"app-update\"></a> ASP.NET Core 2.0 application code updates\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.6 or later.\r\n* Updating will pull in the fixed packages listed above.\r\n\r\nIf you're targeting .NET Framework, update the packages listed above to their safe version or later.\r\n\r\nIf your application is using Kestrel without a proxy or the HttpOverrides functionality (UseForwardedHeaders with ForwardedHost) you must also add the host filtering middleware provided at https://github.com/aspnet/BasicMiddleware/tree/release/2.0/samples/HostFilteringSample/.\r\n\r\n---\r\n\r\n.NET Core and ASP.NET Core have two types of dependencies: direct and transitive. You must follow the update instructions below to address both types of dependency.\r\n\r\n### Direct dependencies\r\n\r\nDirect dependencies are dependencies where you specifically add a package to your project. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project then you have taken a direct dependency on `Microsoft.AspNetCore.Mvc`.\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file.\r\n\r\n### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project it depends on the `Microsoft.AspNetCore.Mvc.Core` package (among others). Your project has a direct dependency on `Microsoft.AspNetCore.Mvc` and a transitive dependency on the `Microsoft.AspNetCore.Mvc.Core` package.\r\nTransitive dependencies are reviewable:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n\r\n##### Fixing direct dependencies – Projects targeting .NET Core\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.5\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the vulnerable metapackage, as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute. The package version number is in the `Version` attribute. The example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.5.\r\n\r\nTo update the version to the secure package, change the version number to a secure package version. In this example, update `Microsoft.AspNetCore.All` to 2.0.6 or later. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.6\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and save your updated *csproj* file, Visual Studio will restore the new package version. You can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\n##### Fixing direct dependencies – Projects targeting .NET Framework\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverrides\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe example has a reference to a single package, as seen by the `PackageReference` element. The name of the package is in the `Include` attribute. The package version number is in the `Version` attribute. The example shows a direct dependency on one of the vulnerable packages from the table above, `Microsoft.AspNetCore.HttpOverrides` version 2.0.1.\r\n\r\nTo update to the secure package, change the version number to the updated package version. In the example, this would be updating `Microsoft.AspNetCore.HttpOverrides` to 2.0.2 and later. Save the *csproj* file. The updated and secure *csproj* look as follows:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverrides\" Version=\"2.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and save your updated *csproj* file, Visual Studio will restore the new package version. You can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependency version.\r\n\r\n##### After updating your direct dependencies\r\n\r\nRecompile your application.\r\n\r\nIf after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to a compatible version. \r\n\r\nFor example if your project refers directly to `Microsoft.AspNetCore.Mvc.Cors` with a version number of `2.0.0`, when you update your `Microsoft.AspNetCore.Mvc` package to 2.0.1, compilation will throw:\r\n\r\n`NU1012      Dependency conflict. Microsoft.AspNetCore.Mvc 2.0.1 expected Microsoft.AspNetCore.Mvc.Cors >= 2.0.1 but received 2.0.0`\r\n\r\nTo fix this, edit the version for the expected package to be the version expected by updating your *project.json* in the same way that you used to update the vulnerable package versions.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n###### Reviewing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either use Visual Studio’s Solution Explorer, or you can review the *project.assets.json* file.\r\n\r\n###### Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the vulnerable package names above and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![vs2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In these results, you can see a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions. In this example, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions. In the example, the `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a vulnerable version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n###### Manually reviewing project.assets.json (VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file. Visual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for each of the vulnerable packages, using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the vulnerable versions table above.\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Mvc.Cors/1.1.0` is a reference to v1.1.0 of `Microsoft.AspNetCore.Mvc.Cors`.   If your *project.assets.json* file includes references to any of the vulnerable packages shown above, then you need to fix the transitive dependencies.\r\n\r\n###### Overriding transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages this means:\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nFor each of the vulnerable packages your search returned, you must add a direct dependency to the updated version by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referring the fixed version.\r\nFor example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.HttpOverrides` version 2.0.0 you would add a reference to the fixed version, that is, 2.0.2 or later.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverride\" Version=\"2.0.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you have added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n###### Rebuilding your application\r\n\r\nRebuild your application. Test and deploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Mikhail Shcherbakov](https://www.linkedin.com/in/mikhailshcherbakov/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0787)\r\n\r\n### Revisions\r\n\r\nV1.1 (Mar 15, 2018): NGINX configuration instructions updated, thanks to @buglloc\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n_Last Updated 2018-03-15_","Url":"https://github.com/aspnet/Announcements/issues/295","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability\" (#295)"},{"Id":"304853568","IsPullRequest":false,"CreatedAt":"2018-03-13T17:04:23","Actor":"blowdart","Number":"294","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where, if an application is hosted behind Internet Information Server (IIS) a remote unauthenticated attacker can use a specially crafted request can cause a Denial of Service.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/IISIntegration/issues/658\r\n\r\n### Mitigation Factors\r\nAny site hosted behind a different proxy, such as nginx or an application hosted in Azure, which uses Application Request Routing (ARR) as a proxy is not affected. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft ASP.NET Core project if it is hosted behind an IIS server running AspNetCoreModule (ANCM) prior to 7.1.1990.0.\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected? \r\n\r\nOpen a PowerShell prompt and run the following command\r\n\r\n```powershell\r\n(Get-Item $env:SystemDrive\\Windows\\System32\\inetsrv\\aspnetcore.dll).VersionInfo\r\n```\r\n\r\nor use the Windows file properties dialog to check the version on `C:\\Windows\\System32\\inetsrv\\aspnetcore.dll`, where C: is your OS install drive.\r\n\r\nIf the file version is less than 7.1.1990.0 you are affected.\r\n\r\n### How do I fix the issue? \r\nInstall the latest version of the ASP.NET Core Hosting Bundle \r\n(You need only install a single version, i.e. installing Version 2.0 will protect Version 1.0/1.1 .NET Core applications and vice versa. Choose the one that corresponds to the highest runtime version on your server).\r\n\r\n* [Hosting Bundle for ASP.NET Core 1.0/1.1](https://go.microsoft.com/fwlink/?linkid=869677)\r\n* [Hosting Bundle for ASP.NET Core 2.0](https://go.microsoft.com/fwlink/?linkid=869674)\r\n\r\nThen restart IIS by running \r\n\r\n```\r\nnet stop was /y\r\nnet start w3svc\r\n```\r\n\r\nfrom an elevated command line.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\t\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\nAndrei Gorlov\r\n\r\n### External Links\r\n\r\n[CVE-2018-0808](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0808)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_","Url":"https://github.com/aspnet/Announcements/issues/294","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\" (#294)"},{"Id":"303604146","IsPullRequest":false,"CreatedAt":"2018-03-08T19:36:01","Actor":"natemcmaster","Number":"293","RawContent":null,"Title":"Moving official daily builds to the dotnet-core MyGet feed ","State":"open","Body":"As part of ongoing infrastructural changes, we will be moving official daily of ASP.NET Core to the dotnet-core myget feed. This transition will happen over the next few weeks.\r\n\r\n**Old feed:** https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json\r\n**New feed:** https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\r\n\r\nWe recommend updating to use the dotnet-core feed to continue getting the latest daily builds of ASP.NET Core.\r\n\r\nWe are making this change to make it easier for you to pull daily builds that align with the .NET Core CLI and .NET Core runtime. Some of our existing MyGet feeds will continue to exist, but will not be used for official daily builds. Instead, those feeds will only be used for builds of experimental branches of aspnetcore.\r\n\r\nOther useful links:\r\nGallery: https://dotnet.myget.org/gallery/dotnet-core\r\nNuGet v2 source: https://dotnet.myget.org/F/dotnet-core/api/v2\r\nNPM feed: https://dotnet.myget.org/F/dotnet-core/npm/\r\n\r\nPlease use https://github.com/aspnet/Home/issues/2937 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/293","RelatedDescription":"Open issue \"Moving official daily builds to the dotnet-core MyGet feed \" (#293)"},{"Id":"302846756","IsPullRequest":false,"CreatedAt":"2018-03-06T20:07:15","Actor":"natemcmaster","Number":"292","RawContent":null,"Title":"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image","State":"open","Body":"We will be deprecating the following Docker images\r\n \r\n- microsoft/aspnetcore-build:1.0-1.1\r\n- microsoft/aspnetcore-build:1.0-2.0\r\n\r\nWe will not delete these images. These images will continue to receive patch update whenever a 1.0.x, 1.1.x, or 2.0.x update ships, however, we will not produce a new version which contains the 2.1 runtime.\r\n\r\n### Why?\r\n \r\nThese images existed to support CI/CD pipelines that run apps on multiple versions for .NET Core in the same container. With each release, these images have grown in size. The 1.0-2.0 image is already about 1GB, and would continue to grow with runtime updates. \r\n \r\nFortunately, recent improvements to .NET Core (such as minor version roll-forward) and Docker (multi-stage builds) have reduced the need to use an image with multiple versions of .NET Core. We have seen usage of these multi-version images declining over time, and today, they are a small percentage of our Docker image usage.\r\n\r\nRather than maintaining a single, large image with all possible .NET Core runtimes, we encourage users to use multi-stage builds. Docker's multi-stage feature allows you to compose a single Dockerfile, but still use multiple .NET Core runtimes. Also, starting in 2.1, .NET Core supports rolling forward the runtime version within the major version, which will further reduce the need to have multiple 2.x runtimes side-by-side.\r\n \r\nFor discussion, use https://github.com/aspnet/aspnet-docker/issues/349","Url":"https://github.com/aspnet/Announcements/issues/292","RelatedDescription":"Open issue \"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image\" (#292)"},{"Id":"301939059","IsPullRequest":false,"CreatedAt":"2018-03-02T23:33:38","Actor":"blowdart","Number":"291","RawContent":null,"Title":"Statement on ASP.NET susceptibility to the recent DuoLabs SAML vulnerability announcement.","State":"open","Body":"This week saw an announcement of vulnerabilities in  SAML parsing libraries by [DUO Labs](https://duo.com/blog/duo-finds-saml-vulnerabilities-affecting-multiple-implementations). Whilst no Microsoft implementations were listed we've seen a number of customer questions about this, especially given the recent WS-Fed support added to ASP.NET Core. \r\n\r\nASP.NET and ASP.NET Core rely on libraries from the Windows Identity team. Their investigation shows [their libraries are not vulnerable](https://cloudblogs.microsoft.com/enterprisemobility/2018/03/02/latest-saml-vulnerability-not-present-in-azure-ad-and-adfs/) to this parsing vulnerability, thus any ASP.NET or ASP.NET Core application which uses the default Microsoft SAML libraries or authentication handlers are safe from this exploit.\r\n","Url":"https://github.com/aspnet/Announcements/issues/291","RelatedDescription":"Open issue \"Statement on ASP.NET susceptibility to the recent DuoLabs SAML vulnerability announcement.\" (#291)"},{"Id":"300752371","IsPullRequest":false,"CreatedAt":"2018-02-27T18:58:59","Actor":"natemcmaster","Number":"290","RawContent":null,"Title":"dotnet-watch, dotnet-ef, and dotnet-user-secrets will move into the .NET Core CLI in 2.1.300","State":"open","Body":"Starting in .NET Core CLI 2.1.300-preview2, the following tools were added as bundled, top-level commands. These tools previously shipped as NuGet packages.\r\n\r\n - Microsoft.DotNet.Watcher.Tools (aka dotnet-watch)\r\n - Microsoft.EntityFrameworkCore.Tools.DotNet (aka dotnet-ef)\r\n - Microsoft.Extensions.SecretManager.Tools (aka dotnet-user-secrets)\r\n - Microsoft.Extensions.Caching.SqlConfig.Tools (aka dotnet-sql-cache)\r\n\r\nCommands like `dotnet watch`, `dotnet ef`, and `dotnet user-secrets` can be executed on any project without needing to install the command via \"dotnet restore\" or \"dotnet install tool\". The commands are available by default in all projects.\r\n\r\n### Upgrading from stable releases of .NET Core CLI (e.g. 2.1.5)\r\n\r\nUsing these tools as a DotNetCliToolReference will no longer work. If your .csproj file has the following lines, they can be removed.\r\n```xml\r\n<ItemGroup>\r\n   <DotNetCliToolReference Include=\"Microsoft.DotNet.Watcher.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.EntityFrameworkCore.Tools.DotNet\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.Caching.SqlConfig.Tools\" Version=\"(all versions)\" />\r\n</ItemGroup>\r\n```\r\n\r\n### Upgrading from .NET Core CLI 2.1.300-preview1\r\nFor early-adopters who tried the 2.1.300-preview1 release, you will no longer need to run `dotnet install tool -g` to acquire the following tools:\r\n - dotnet-watch\r\n - dotnet-user-secrets\r\n - dotnet-dev-certs\r\n - dotnet-sql-cache\r\n - dotnet-ef\r\n\r\nIf you had installed these tools in 2.1.300-preview1, you can uninstall them manually by deleting corresponding files from `%USERPROFILE%\\.dotnet\\tools\\` (Windows) or `$HOME/.dotnet/tools` (macOS/Linux).\r\n\r\n**For discussion use https://github.com/aspnet/DotNetTools/issues/399**","Url":"https://github.com/aspnet/Announcements/issues/290","RelatedDescription":"Open issue \"dotnet-watch, dotnet-ef, and dotnet-user-secrets will move into the .NET Core CLI in 2.1.300\" (#290)"},{"Id":"295436695","IsPullRequest":false,"CreatedAt":"2018-02-08T09:18:21","Actor":"SteveSandersonMS","Number":"289","RawContent":null,"Title":"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)","State":"open","Body":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available.\r\n\r\nDiscussion for this issue is at https://github.com/aspnet/JavaScriptServices/issues/1522","Url":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Open issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289)"},{"Id":"294037619","IsPullRequest":false,"CreatedAt":"2018-02-02T22:04:23","Actor":"danroth27","Number":"288","RawContent":null,"Title":"ASP.NET Core 2.1 high-level planning","State":"open","Body":"*This is high-level only and doesn't include all issues, bugs, etc. from every repo, just intended to give a general idea of release scope and direction.*\r\n\r\nThe following high-level features are planned for the ASP.NET Core 2.1 release:\r\n- **SignalR** - Real-time web framework on ASP.NET Core (https://github.com/aspnet/SignalR/issues/394)\r\n- **HTTPS** - On by default and easy to configure (https://github.com/aspnet/Home/issues/2308)\r\n- **GDPR compliance** - Templates updated with new privacy features (https://github.com/aspnet/Security/issues/1561, https://github.com/aspnet/Identity/issues/1341)\r\n- **Web API conventions** - Rich Swagger support without attributes (https://github.com/aspnet/Mvc/issues/6870, https://github.com/aspnet/Mvc/issues/6784)\r\n- **IHttpClientFactory** - HttpClient as a service, handle cross-cutting concerns like caching, retry logic, timeouts and circuit breakers (https://github.com/aspnet/HttpClientFactory/issues/42)\r\n- **ASP.NET Core Module in-proc hosting** - 6x the throughput on IIS! Better startup error handling (https://github.com/aspnet/AspNetCoreModule/issues/265)\r\n- **Razor pages improvements** - Support for areas, ~/Pages/Shared (https://github.com/aspnet/Mvc/issues/6926, https://github.com/aspnet/Mvc/issues/6604)\r\n- **MVC functional test fixture** - Easily test your MVC apps end-to-end (https://github.com/aspnet/Mvc/issues/6233)\r\n- **Build-time Razor** - Compile Razor pages and views as part of your build, improved startup performance (https://github.com/aspnet/Razor/issues/1809)\r\n- **UI as a library** - Package Razor pages and views as reusable libraries (https://github.com/aspnet/Razor/issues/1809)\r\n- **Identity UI package and scaffolder** - Add identity to any application (https://github.com/aspnet/Home/issues/2311)\r\n- **WebHooks** - Handle WebHook notifications from ASP.NET Core apps (https://github.com/aspnet/WebHooks/issues/5)\r\n\r\nFor more details on each of these features see the [ASP.NET Core 2.1 roadmap](https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/) post on the ASP.NET team blog.\r\n\r\nDiscussion for this issue is at aspnet/Home#2846","Url":"https://github.com/aspnet/Announcements/issues/288","RelatedDescription":"Open issue \"ASP.NET Core 2.1 high-level planning\" (#288)"},{"Id":"292632569","IsPullRequest":false,"CreatedAt":"2018-01-30T02:33:11","Actor":"DamianEdwards","Number":"287","RawContent":null,"Title":"Introduction of new meta-package \"Microsoft.AspNetCore.App\"","State":"open","Body":"## Overview\r\nASP.NET Core 2.1 will introduce a new meta-package for use by applications: *Microsoft.AspNetCore.App*. Additionally, new projects created that target 2.1 will use this meta-package by default, rather than the existing meta-package *Microsoft.AspNetCore.All*.\r\n\r\nThe new meta-package differs from the existing meta-package in that it reduces the number of dependencies of packages not owned or supported by the ASP.NET or .NET teams to just those deemed necessary to ensure the major frameworks features function. The full list of packages being removed compared to *Microsoft.AspNetCore.All* can be seen below.\r\n\r\nThe existing *Microsoft.AspNetCore.All* meta-package will continue to be made available throughout the 2.x lifecycle, but we recommend customers move to the new *Microsoft.AspNetCore.App* meta-pacakge and then add individual references to any of the removed packages if their app requires it.\r\n\r\n## Package references not in \"Microsoft.AspNetCore.App\", compared to \"Microsoft.AspNetCore.All\"\r\nThe following packages are direct dependencies of *Microsoft.AspNetCore.All* but **not** of *Microsoft.AspNetCore.App*. Note that any dependencies of these packages that otherwise aren't dependencies of *Microsoft.AspNetCore.App* will now **not** be included implicitly, e.g. *StackExchange.Redis* as a dependency of *Microsoft.Extensions.Caching.Redis*, *Microsoft.ApplicationInsights* as a dependency of *Microsoft.AspNetCore.ApplicationInsights.HostingStartup*:\r\n- Microsoft.Data.Sqlite\r\n- Microsoft.Data.Sqlite.Core\r\n- Microsoft.EntityFrameworkCore.Sqlite\r\n- Microsoft.EntityFrameworkCore.Sqlite.Core\r\n- Microsoft.Extensions.Caching.Redis\r\n- Microsoft.AspNetCore.DataProtection.AzureStorage\r\n- Microsoft.Extensions.Configuration.AzureKeyVault\r\n- Microsoft.AspNetCore.DataProtection.AzureKeyVault\r\n- Microsoft.AspNetCore.Identity.Service.AzureKeyVault\r\n- Microsoft.AspNetCore.AzureKeyVault.HostingStartup\r\n- Microsoft.AspNetCore.ApplicationInsights.HostingStartup\r\n\r\nWhen moving from *Microsoft.AspNetCore.All* to *Microsoft.AspNetCore.App*, if your application uses any APIs from the above packages, or packages brought in by those packages, you'll now need to add references to those packages in your project manually.\r\n\r\nDiscussion for this issue at https://github.com/aspnet/MetaPackages/issues/255","Url":"https://github.com/aspnet/Announcements/issues/287","RelatedDescription":"Open issue \"Introduction of new meta-package \"Microsoft.AspNetCore.App\"\" (#287)"},{"Id":"287579430","IsPullRequest":false,"CreatedAt":"2018-01-10T21:14:16","Actor":"dougbu","Number":"286","RawContent":null,"Title":"Remove project file elements added for WebApiCompatShim in 2.0","State":"open","Body":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim package now depends on the latest (5.2.4-preview1) Microsoft.AspNet.WebApi.Client package. That dependency includes a new .NET Standard 2.0 assembly. This assembly supports all platforms the Microsoft.AspNetCore.Mvc.WebApiCompatShim package supports and includes the full Web API Client feature set.\r\n\r\nWhen upgrading projects using the Microsoft.AspNetCore.Mvc.WebApiCompatShim package to our nightly builds or the forthcoming 2.1.0-preview1 release, we recommend removing the following elements from the project file. (Of course, some projects may need the elements for other reasons.)\r\n``` xml\r\n<PackageTargetFallback>$(PackageTargetFallback);portable-net451+win8</PackageTargetFallback>\r\n<DisableImplicitAssetTargetFallback>true</DisableImplicitAssetTargetFallback>\r\n```\r\n\r\nFYI the `<PackageTargetFallback>` element caused the application to build and run against the Portable Class Library (PCL) assembly from the Microsoft.AspNet.WebApi.Client package.\r\n\r\nFor discussion of this change, see aspnet/Mvc#7229.","Url":"https://github.com/aspnet/Announcements/issues/286","RelatedDescription":"Open issue \"Remove project file elements added for WebApiCompatShim in 2.0\" (#286)"},{"Id":"287180286","IsPullRequest":false,"CreatedAt":"2018-01-09T18:08:18","Actor":"blowdart","Number":"285","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0784 - ASP.NET Core Templates enable Elevation Of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0784\r\n##  ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of an elevation of privilege vulnerability exists when a ASP.NET Core web application, created using vulnerable project templates, fails to properly sanitize web requests. An attacker who successfully exploited this vulnerability could perform content injection attacks and run script in the security context of the logged-on user.\r\n\r\nTo exploit the vulnerability, an attacker could send a specially crafted email, containing a malicious link, to a user. Alternatively, an attacker could use a chat client to social engineer a user into clicking the malicious link. However, in all cases to exploit this vulnerability a user must click a maliciously crafted link from an attacker.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  [CVE-2018-0785](https://github.com/aspnet/Announcements/issues/284), which is in the same templates. Finally installing the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ will update the templates to correct the issue for any new applications created.\r\n\r\n### Discussion\r\n\r\nPlease use https://github.com/aspnet/templating/issues/225 for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method and search for the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nReplace this line with the following code, removing the call to `Html.Raw()`\r\n\r\n```C#\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` and search for the following line, inside the `OnGetAsync()` method;\r\n\r\n```C#\r\nawait LoadSharedKeyAndQrCodeUriAsync(user);\r\n```\r\n\r\nRemove the code shown below which follows the call to `LoadSharedKeyAndQrCodeUriAsync(user);`\r\n\r\n```C#\r\nif (string.IsNullOrEmpty(SharedKey))\t\t\r\n{\t\t\r\n    await _userManager.ResetAuthenticatorKeyAsync(user);\t\t\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\t\t\r\n}\r\n```\r\n\r\nThe `OnGetAsync()` method should now look like\r\n\r\n```C#\r\npublic async Task<IActionResult> OnGetAsync()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\r\n\r\n    return Page();\r\n}\r\n```\r\n\r\n3. Still in the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` file  and search for the `LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user) function` and replace it with \r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user)\r\n{\r\n    // Load the authenticator key & QR code URI to display on the form\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n     }\r\n\r\n    SharedKey = FormatKey(unformattedKey);\r\n    AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n }\r\n```\r\n\r\n4. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find the declaration for `private const string AuthenticatorUriFormat`. Add the following new const declaration below it;\r\n\r\n```C#\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator()` function. Replace its contents with\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> EnableAuthenticator()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    var model = new EnableAuthenticatorViewModel();\r\n    await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n\r\n    return View(model);\r\n}\r\n```\r\n\r\n3. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. Replace its contents with\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> EnableAuthenticator(EnableAuthenticatorViewModel model)\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!ModelState.IsValid)\r\n    {\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n     }\r\n\r\n    // Strip spaces and hypens\r\n    var verificationCode = model.Code.Replace(\" \", string.Empty).Replace(\"-\", string.Empty);\r\n\r\n    var is2faTokenValid = await _userManager.VerifyTwoFactorTokenAsync(\r\n        user, _userManager.Options.Tokens.AuthenticatorTokenProvider, verificationCode);\r\n\r\n    if (!is2faTokenValid)\r\n    {\r\n        ModelState.AddModelError(\"Code\", \"Verification code is invalid.\");\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n    }\r\n\r\n    await _userManager.SetTwoFactorEnabledAsync(user, true);\r\n    _logger.LogInformation(\"User with ID {UserId} has enabled 2FA with an authenticator app.\", user.Id);\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    TempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\n\r\n    return RedirectToAction(nameof(ShowRecoveryCodes));\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` file create the following method after `EnableAuthenticator(EnableAuthenticatorViewModel model)`;\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file create the following method after the `GenerateQrCodeUri(string email, string unformattedKey)` method\r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user, EnableAuthenticatorViewModel model)\r\n{\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    }\r\n\r\n    model.SharedKey = FormatKey(unformattedKey);\r\n    model.AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n}\r\n```\r\n\r\n6. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n7. Open the `Models\\ManageViewModels\\EnableAuthenticatorViewModel.cs` file and add the following `using` reference;\r\n\r\n```C#\r\nusing Microsoft.AspNetCore.Mvc.ModelBinding;\r\n```\r\n\r\nthen replace the class declaration with \r\n\r\n```C# \r\npublic class EnableAuthenticatorViewModel\r\n{\r\n    [Required]\r\n    [StringLength(7, ErrorMessage = \"The {0} must be at least {2} and at max {1} characters long.\", MinimumLength = 6)]\r\n    [DataType(DataType.Text)]\r\n    [Display(Name = \"Verification Code\")]\r\n    public string Code { get; set; }\r\n\r\n    [BindNever]\r\n    public string SharedKey { get; set; }\r\n\r\n    [BindNever]\r\n    public string AuthenticatorUri { get; set; }\r\n}\r\n```\r\n\r\n8. Open the `Views\\Manage\\EnableAuthenticator.cshtml` file and replace the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nwith\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\nremove the call to `Html.Raw()`.\r\n\r\n9. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0784](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0784)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Corrected text in link to CVE-2018-0785.\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n_Last Updated 2018-01-10_","Url":"https://github.com/aspnet/Announcements/issues/285","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0784 - ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\" (#285)"},{"Id":"287180045","IsPullRequest":false,"CreatedAt":"2018-01-09T18:07:26","Actor":"blowdart","Number":"284","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0785 - ASP.NET Core Templates enable Cross Site Request Forgery","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0785\r\n## ASP.NET Core Templates enable Cross Site Request Forgery\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Cross Site Request Forgery vulnerability in the individual authentication templates for ASP.NET Core 2.0. An attacker who successfully exploited this vulnerability could change the recovery codes associated with the victim's user account without his/her consent. As a result, a victim of this attack may be permanently locked out of his/her account after loosing access to his/her 2FA device, as the initial recovery codes would be no longer valid.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  [CVE-2018-0784](https://github.com/aspnet/Announcements/issues/284), which is in the same templates.\r\n\r\nYou should also install the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ as will update the templates to correct the issue for any _new_ applications created after its installation. Existing applications must be manually updated using the instructions below.\r\n\r\n### Discussion\r\n\r\nPlease use https://github.com/aspnet/templating/issues/224 for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method. The last line of this file should be\r\n\r\n```C#\r\nreturn RedirectToPage(\"./GenerateRecoveryCodes\");\r\n```\r\n\r\nReplace this line with the following code\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\nreturn RedirectToPage(\"./ShowRecoveryCodes\");\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml` and replace its contents with \r\n\r\n```C#\r\n@page\r\n@model GenerateRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-page=\"./ResetAuthenticator\">reset your authenticator keys</a>.\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n3. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs` file. Replace its contents with\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\nusing Microsoft.Extensions.Logging;\r\nusing Company.WebApplication1.Data;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class GenerateRecoveryCodesModel : PageModel\r\n    {\r\n        private readonly UserManager<ApplicationUser> _userManager;\r\n        private readonly ILogger<GenerateRecoveryCodesModel> _logger;\r\n\r\n        public GenerateRecoveryCodesModel(\r\n            UserManager<ApplicationUser> userManager,\r\n            ILogger<GenerateRecoveryCodesModel> logger)\r\n        {\r\n            _userManager = userManager;\r\n            _logger = logger;\r\n        }\r\n\r\n        public async Task<IActionResult> OnGetAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n\r\n        public async Task<IActionResult> OnPostAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n            }\r\n\r\n            var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n            TempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\n\r\n            _logger.LogInformation(\"User with ID '{UserId}' has generated new 2FA recovery codes.\", user.Id);\r\n\r\n            return RedirectToPage(\"./ShowRecoveryCodes\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n4. Create a new file, `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml` with the following contents \r\n\r\n```C#\r\n@page\r\n@model ShowRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n5. Create a new file `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs` with the following contents\r\n\r\n```C#\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class ShowRecoveryCodesModel : PageModel\r\n    {\r\n        public string[] RecoveryCodes { get; private set; }\r\n\r\n        public IActionResult OnGet()\r\n        {\r\n            RecoveryCodes = (string[])TempData[\"RecoveryCodes\"];\r\n            if (RecoveryCodes == null)\r\n            {\r\n                return RedirectToPage(\"TwoFactorAuthentication\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n6. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find \r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\n```\r\n  and add a new declaration underneath,\r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. The last line in this method should be\r\n\r\n```C#\r\nreturn RedirectToAction(nameof(GenerateRecoveryCodes));\r\n```\r\n\r\nReplace this final line with\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\nreturn RedirectToAction(nameof(ShowRecoveryCodes));\r\n```\r\n\r\n3. Create a new method in `Controllers\\ManageController.cs` called `ShowRecoveryCodes()` with the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file and find the `GenerateRecoveryCodes()` method. The code should look as follows\r\n\r\n```C# \r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    ...\r\n}\r\n```\r\nReplace the method with the following\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n    }\r\n\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    _logger.LogInformation(\"User with ID {UserId} has generated new 2FA recovery codes.\", user.Id);\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes.ToArray() };\r\n\r\n    return View(nameof(ShowRecoveryCodes), model);\r\n}\r\n```\r\n\r\n6. Create a new View in `Views\\Manage\\ShowRecoveryCodes.cshtml` with the following content\r\n\r\n```\r\n@model ShowRecoveryCodesViewModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n7. Create a new `ShowRecoveryCodesViewModel` class in the `Models\\ManageViewModels` folder and create the class as follows\r\n\r\n```c#\r\npublic class ShowRecoveryCodesViewModel\r\n{\r\n    public string[] RecoveryCodes { get; set; }\r\n}\r\n``` \r\n\r\n8.  Delete the `Models\\ManageViewModels\\generateRecoveryCodesViewModel.cs` file.\r\n\r\n9. Open the `Views\\Manage\\GenerateRecoveryCodes.cshtml` file. Replace the contents with \r\n\r\n```\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h2>@ViewData[\"Title\"]</h2>\r\n\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form asp-action=\"GenerateRecoveryCodes\" method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n\r\n10. Edit `Views\\Manage\\TwoFactorAuthentication.cshtml` to change `<a asp-action=\"GenerateRecoveryCodes\" class=\"btn btn-default\">Reset recovery codes</a>` to ` <a asp-action=\"GenerateRecoveryCodesWarning\" class=\"btn btn-default\">Reset recovery codes</a>`.\r\n\r\n11. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0785](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0785)\r\n\r\n### Revisions\r\n\r\nV1.1 (Jan 9, 2018): Updated Razor Pages fix to be correct. Note that [new generated applications will have the incorrect link](https://github.com/aspnet/templating/issues/226).  Thanks @scottsauber.\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n_Last Updated 2018-01-09_\r\n\r\n  \r\n  \r\n  \r\n  \r\n  ","Url":"https://github.com/aspnet/Announcements/issues/284","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0785 - ASP.NET Core Templates enable Cross Site Request Forgery\" (#284)"},{"Id":"285489159","IsPullRequest":false,"CreatedAt":"2018-01-02T17:28:55","Actor":"Eilon","Number":"283","RawContent":null,"Title":"Using the \"Home\" repo for issue management of other repos","State":"open","Body":"Hi all,\r\n\r\nWe are experimenting to try and use the [Home repo's issue tracker](https://github.com/aspnet/Home/issues) to manage issues for multiple repos. To start with, we have moved the bugs from several other repos to the Home repo, and we will retire the issue trackers of those other repos.\r\n\r\nWe are doing this to try to improve the experience of logging issues for ASP.NET Core.\r\n\r\n* Labels in the form of `repo:RepoName` are used to associate the bug with a product/feature area\r\n* For issue trackers that moved to the Home repo, please log new issues in the Home repo. If a bug is logged in a moved issue tracker, it will be closed.\r\n* Over time, we plan to consolidate more issue trackers into the Home repo\r\n\r\nFor discussions on this topic, please go to https://github.com/aspnet/Home/issues/2736.\r\n\r\nThanks,\r\nEilon\r\n","Url":"https://github.com/aspnet/Announcements/issues/283","RelatedDescription":"Open issue \"Using the \"Home\" repo for issue management of other repos\" (#283)"},{"Id":"277159697","IsPullRequest":false,"CreatedAt":"2017-11-27T20:34:07","Actor":"pranavkm","Number":"282","RawContent":null,"Title":"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated","State":"open","Body":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. ","Url":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Open issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1014286989200199681","CreatedAt":"2018-07-03T23:17:17+00:00","UserScreenname":"aspnet","Text":"It's the #ASPNET Community Standup! Starting now - join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":12,"RawContent":null},{"Id":"1011656002049961985","CreatedAt":"2018-06-26T17:02:41+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup on the HTTP REPL is live now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":9,"RawContent":null},{"Id":"1011342296866930688","CreatedAt":"2018-06-25T20:16:08+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nHTTP REPL with @condrong\n&amp; @mlorbetske… https://t.co/uMuA6yE9Mm","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":19,"RawContent":null},{"Id":"1009783243632185350","CreatedAt":"2018-06-21T13:01:00+00:00","UserScreenname":"aspnet","Text":"These two are always great to learn from separately, and today they're working together.  You won't want to miss… https://t.co/YwBVhQxJxt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1007012288455479302","CreatedAt":"2018-06-13T21:30:13+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz tomorrow to learn how to use @AppInsights with your #ASP.NET Core project. https://t.co/xecbDbFNkT","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":6,"RawContent":null},{"Id":"1006685262536105984","CreatedAt":"2018-06-12T23:50:44+00:00","UserScreenname":"aspnet","Text":"Watch the recording from today's #ASPNET Community Standup with the #Blazor team, including new Electron and server… https://t.co/c261fjZK3k","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":19,"RawContent":null},{"Id":"1006582492004925441","CreatedAt":"2018-06-12T17:02:22+00:00","UserScreenname":"aspnet","Text":"And we're live on the #ASPNET Community Standup! Join the whole #Blazor team, see some exciting new demos!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":21,"RawContent":null},{"Id":"1006309084402995205","CreatedAt":"2018-06-11T22:55:56+00:00","UserScreenname":"aspnet","Text":"Don't miss this week's #ASPNET Community Standup with THE WHOLE BLAZOR TEAM!!!\n\nTuesday at 10 Pacific / 18 GMT… https://t.co/rwDAHrIXMu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":78,"FavoriteCount":45,"RawContent":null},{"Id":"1005426223554662400","CreatedAt":"2018-06-09T12:27:46+00:00","UserScreenname":"aspnet","Text":"Tune in today at 10a ET / 7a PT / 14:00 UTC / 8p IST and learn about global tools along with Jeff. https://t.co/J9tTYva6s6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2018-07-16T05:30:23.6419191Z","RunDurationInMilliseconds":17620}