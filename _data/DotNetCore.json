{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Framework 4.8 Early Access Build 3745","PublishedOn":"2019-02-21T19:27:54+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"As we get closer to the final version, our efforts are focused on stabilizing the release over the coming weeks. Please keep up the support by trying out our latest preview 3745 and provide any...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-framework-4-8-early-access-build-3745/","RawContent":null},{"Title":".NET Framework February 2019 Preview of Quality Rollup","PublishedOn":"2019-02-19T15:19:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the February 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nCLR\n\nAddresses an issue in...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-february-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019","PublishedOn":"2019-02-19T15:00:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":".NET Core 1.0 was released on June 27, 2016 and .NET Core 1.1 was released on November 16, 2016. As an LTS release, .NET Core 1.0 is supported for three years. .NET Core 1.1 fits into the same support...","Href":"https://devblogs.microsoft.com/dotnet/net-core-1-0-and-1-1-will-reach-end-of-life-on-june-27-2019/","RawContent":null},{"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","PublishedOn":"2019-02-15T13:03:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Final Update 2/19/19 @1:30 PM (PST): This advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no...","Href":"https://devblogs.microsoft.com/dotnet/advisory-on-february-2019-security-update-for-windows-10-update-1809/","RawContent":null},{"Title":"Microsoft’s Developer Blogs are Getting an Update","PublishedOn":"2019-02-13T18:49:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the coming days, we’ll be moving our developer blogs to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. This...","Href":"https://devblogs.microsoft.com/dotnet/microsofts-developer-blogs-are-getting-an-update/","RawContent":null},{"Title":"Help us make the .NET Architecture guides better for you!","PublishedOn":"2019-02-13T15:47:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the last couple of years, we worked with experts to create some incredible architecture guides &#38; reference samples for .NET developers. We focused on Microservices Architecture, Modernizing...","Href":"https://devblogs.microsoft.com/dotnet/help-us-make-the-net-architecture-guides-better-for-you/","RawContent":null},{"Title":".NET Framework February 2019 Security and Quality Rollup","PublishedOn":"2019-02-13T13:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated: February 15, 2019\n\nA new Advisory on February 2019 Security update for Windows 10 update 1809 has been released today for issues customers have reported with .NET 4.8 Preview and this...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-february-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core February 2019 Updates – 1.0.14, 1.1.11, 2.1.8 and 2.2.2","PublishedOn":"2019-02-12T18:30:20+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core February 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes.\n\n.NET Core...","Href":"https://devblogs.microsoft.com/dotnet/net-core-february-2019/","RawContent":null},{"Title":"Announcing ML.NET 0.10 – Machine Learning for .NET","PublishedOn":"2019-02-08T07:07:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-0-10-machine-learning-for-net/","RawContent":null},{"Title":"Submit to the Applied F# Challenge!","PublishedOn":"2019-02-05T15:17:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Lena Hall, a Senior Cloud Developer Advocate at Microsoft.\nF# Software Foundation has recently announced their new initiative — Applied F# Challenge! We encourage you to...","Href":"https://devblogs.microsoft.com/dotnet/submit-to-the-applied-f-challenge/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9089021734","Type":"PullRequestEvent","CreatedAt":"2019-02-18T17:45:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Merged pull request \"Update MVVM project logo\" (#132) at dotnet/foundation","RelatedBody":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125"},{"Id":"9089021716","Type":"IssuesEvent","CreatedAt":"2019-02-18T17:45:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125) at dotnet/foundation","RelatedBody":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139"},{"Id":"9089015890","Type":"PullRequestEvent","CreatedAt":"2019-02-18T17:44:39","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Merged pull request \"Update links\" (#131) at dotnet/foundation","RelatedBody":"Replace http links with https where possible - both returned 200 OK."},{"Id":"9018375188","Type":"PullRequestEvent","CreatedAt":"2019-02-06T14:07:17","Actor":"Potapy4","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Opened pull request \"Update MVVM project logo\" (#132) at dotnet/foundation","RelatedBody":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125"},{"Id":"9001989260","Type":"PullRequestEvent","CreatedAt":"2019-02-04T07:33:23","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Opened pull request \"Update links\" (#131) at dotnet/foundation","RelatedBody":"Replace http links with https where possible - both returned 200 OK."},{"Id":"8997330482","Type":"PullRequestEvent","CreatedAt":"2019-02-02T11:04:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Merged pull request \"Update links\" (#130) at dotnet/foundation","RelatedBody":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com."},{"Id":"8887340703","Type":"PullRequestEvent","CreatedAt":"2019-01-15T05:16:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Opened pull request \"Update links\" (#130) at dotnet/foundation","RelatedBody":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9078417647","Type":"IssuesEvent","CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Opened issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101) at dotnet/announcements","RelatedBody":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition."},{"Id":"9075495754","Type":"IssuesEvent","CreatedAt":"2019-02-15T14:06:30","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Opened issue \"Advisory on February 2019 Security update for Windows 10 update 1809\" (#100) at dotnet/announcements","RelatedBody":"<span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.\r\n\r\nWe are actively working on fixing and re-shipping a correction for this issue. If you installed the February 2019 security update and have not yet seen any negative behavior, we recommend that you leave your system as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We are working to improve our testing infrastructure to prevent these type of issues in the future. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this <a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/15/advisory-on-february-2019-security-update-for-windows-10-update-1809/\" rel=\"nofollow\">post</a> as we have new information.\r\n<h2>Guidance</h2>\r\nWe are working on guidance and will update this pose and as we have new information.\r\n<h2>Workaround</h2>\r\nThere are no known workarounds at this time.\r\n<h2>Symptoms</h2>\r\nAfter installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:\r\n<p class=\"xxxxxmsonormal\"><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></p>\r\n"},{"Id":"9070407129","Type":"IssuesEvent","CreatedAt":"2019-02-14T19:28:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Opened issue \"Supporting new Alpine versions (for containers)\" (#99) at dotnet/announcements","RelatedBody":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread."},{"Id":"9060710562","Type":"IssuesEvent","CreatedAt":"2019-02-13T14:48:22","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Opened issue \"February 2019 .NET Updates\" (#98) at dotnet/announcements","RelatedBody":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework January 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9135683924","Type":"PullRequestEvent","CreatedAt":"2019-02-26T05:22:34","Actor":"ArtBlnd","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22848","RelatedDescription":"Opened pull request \"[WIP] Remove extra bound checks for explicit range checks\" (#22848) at dotnet/coreclr","RelatedBody":"Currently removing bound checks for explicit array range check on some major patterns.\r\nRelated to https://github.com/dotnet/coreclr/issues/19620"},{"Id":"9135253826","Type":"PullRequestEvent","CreatedAt":"2019-02-26T03:17:21","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22825","RelatedDescription":"Merged pull request \"Special-case 1 module per assembly in Assembly.GetTypes/DefinedTypes\" (#22825) at dotnet/coreclr","RelatedBody":"It's very common for an assembly to have only one module, in which case we can avoid unnecessary allocations and copies in Assembly.GetTypes() and Assembly.DefinedTypes.\r\n\r\nBefore\r\n```\r\n       Method |      Mean |     Error |    StdDev | Gen 0/1k Op | Allocated Memory/Op |\r\n------------- |----------:|----------:|----------:|------------:|--------------------:|\r\n     GetTypes |  93.62 us | 0.6061 us | 0.5373 us |     14.4043 |            59.03 KB |\r\n DefinedTypes | 114.03 us | 1.1998 us | 1.0019 us |     21.6064 |            88.55 KB |\r\n```\r\n\r\nAfter\r\n```\r\n       Method |      Mean |     Error |    StdDev | Gen 0/1k Op | Allocated Memory/Op |\r\n------------- |----------:|----------:|----------:|------------:|--------------------:|\r\n     GetTypes |  90.07 us | 1.7718 us | 1.8958 us |      7.2021 |            29.55 KB |\r\n DefinedTypes | 106.83 us | 0.8118 us | 0.6779 us |      7.2021 |            29.73 KB |\r\n```\r\n\r\nBenchmark:\r\n```C#\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\nusing System;\r\nusing System.Collections;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Net.Http;\r\nusing System.Net.Sockets;\r\nusing System.Reflection;\r\n\r\n[InProcess]\r\n[MemoryDiagnoser]\r\npublic class Test\r\n{\r\n    public static void Main() => BenchmarkRunner.Run<Test>();\r\n\r\n    private static readonly Assembly[] s_assemblies = new[]\r\n    {\r\n        typeof(object).Assembly,\r\n        typeof(HttpClient).Assembly,\r\n        typeof(Socket).Assembly,\r\n        typeof(BitArray).Assembly,\r\n        typeof(File).Assembly,\r\n        typeof(InProcessAttribute).Assembly\r\n    };\r\n\r\n    [Benchmark]\r\n    public int GetTypes()\r\n    {\r\n        int count = 0;\r\n        foreach (Assembly asm in s_assemblies) count += asm.GetTypes().Length;\r\n        return count;\r\n    }\r\n\r\n    [Benchmark]\r\n    public int DefinedTypes()\r\n    {\r\n        int count = 0;\r\n        foreach (Assembly asm in s_assemblies)\r\n            foreach (TypeInfo ti in asm.DefinedTypes)\r\n                count++;\r\n        return count;\r\n    }\r\n}\r\n```"},{"Id":"9135055881","Type":"IssuesEvent","CreatedAt":"2019-02-26T02:27:25","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22847","RelatedDescription":"Opened issue \"Remove remnants of native activation for managed COM servers\" (#22847) at dotnet/coreclr","RelatedBody":"Cruft:\r\nhttps://github.com/dotnet/coreclr/blob/master/src/vm/appdomain.hpp#L2453\r\n\r\nhttps://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/src/System/Runtime/InteropServices/Marshal.CoreCLR.cs#L747-L751\r\n\r\nWill have to update RCW activation as well.\r\n\r\nRemove entirely:\r\nhttps://github.com/dotnet/coreclr/blob/master/src/vm/classfactory.cpp"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9134550473","Type":"IssuesEvent","CreatedAt":"2019-02-26T00:20:12","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10879","RelatedDescription":"Opened issue \"Re-enable latest runtime for self-contained publish tests.\" (#10879) at dotnet/cli","RelatedBody":"This issue is tracking the re-enabling of the tests in `test/EndToEnd/GivenSelfContainedAppsRollForward.cs`.\r\n\r\nThese are being disabled so that orchestrated servicing builds can bump these versions without having to order the builds so that they produce the unreleased shared frameworks for the previous versions and publish them to a place discoverable by the tests.\r\n\r\nWe need to figure out how to replicate these checks in an automated fashion.  Until then, we'll be increasing the priority of this test scenario with the test team."},{"Id":"9131814824","Type":"IssuesEvent","CreatedAt":"2019-02-25T16:47:35","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10707","RelatedDescription":"Closed issue \"When i am running dotnet publish -r win-x86 i am getting following error\" (#10707) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\ndotnet publish -r win-x86\r\n\r\n## Expected  behavior\r\n\r\nShould publish and code and generate the project folder with all dlls\r\n\r\n## Actual behavior\r\n\r\ngiving this error\r\n\r\n Nothing to do. None of the projects specified contain packages to restore.\r\nC:\\Program Files\\dotnet\\sdk\\2.1.502\\Microsoft.Common.CurrentVersion.targets(3049,5): error MSB4216: Could not run the \"GenerateResource\" task because MSBuild could not create or connect to a task host with runtime \"CLR4\" and architecture \"x86\".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable \"C:\\Program Files\\dotnet\\sdk\\2.1.502\\MSBuild.exe\" exists and can be run. [C:\\Users\\jainnank\\Documents\\Visual Studio 2013\\Projects\\ConsoleApplication1\\ConsoleApplication1\\ConsoleApplication1.vbproj]\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.502\r\n Commit:    c74ce8f29f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.10240\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.502\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"9131811035","Type":"PullRequestEvent","CreatedAt":"2019-02-25T16:47:04","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10870","RelatedDescription":"Merged pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#10870) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9131800704","Type":"PullRequestEvent","CreatedAt":"2019-02-25T16:45:45","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10869","RelatedDescription":"Merged pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#10869) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9134985478","Type":"PullRequestEvent","CreatedAt":"2019-02-26T02:10:06","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1087","RelatedDescription":"Merged pull request \"Remove windows row\" (#1087) at dotnet/standard","RelatedBody":"After talking to @ptorr-msft it seems we can update this table and simplify the confusing Windows rows by combining *Windows* with *UWP* and removing *Windows Phone* and *Windows Phone Silverlight* entirely.\r\n\r\n/cc @mairaw @richlander "},{"Id":"9134981607","Type":"PullRequestEvent","CreatedAt":"2019-02-26T02:09:06","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1088","RelatedDescription":"Merged pull request \"Update .NET Standard 2.1 API delta\" (#1088) at dotnet/standard","RelatedBody":""},{"Id":"9134980789","Type":"PullRequestEvent","CreatedAt":"2019-02-26T02:08:53","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1088","RelatedDescription":"Opened pull request \"Update .NET Standard 2.1 API delta\" (#1088) at dotnet/standard","RelatedBody":""},{"Id":"9134483785","Type":"PullRequestEvent","CreatedAt":"2019-02-26T00:03:49","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1087","RelatedDescription":"Opened pull request \"Remove windows row\" (#1087) at dotnet/standard","RelatedBody":"After talking to @ptorr-msft it seems we can update this table and simplify the confusing Windows rows by combining *Windows* with *UWP* and removing *Windows Phone* and *Windows Phone Silverlight* entirely.\r\n\r\n/cc @mairaw @richlander "},{"Id":"9130150867","Type":"PullRequestEvent","CreatedAt":"2019-02-25T13:10:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1086","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1086) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19124.1\r\n\r\n"},{"Id":"9130087597","Type":"PullRequestEvent","CreatedAt":"2019-02-25T13:00:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1086","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1086) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19124.1\r\n\r\n"},{"Id":"9125365594","Type":"PullRequestEvent","CreatedAt":"2019-02-24T13:10:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1085","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1085) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19123.1\r\n\r\n"},{"Id":"9125346135","Type":"PullRequestEvent","CreatedAt":"2019-02-24T13:00:42","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1085","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1085) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19123.1\r\n\r\n"},{"Id":"9122937974","Type":"PullRequestEvent","CreatedAt":"2019-02-23T13:10:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1084","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1084) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19122.3\r\n\r\n"},{"Id":"9122920355","Type":"PullRequestEvent","CreatedAt":"2019-02-23T13:00:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1084","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1084) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19122.3\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9135703631","Type":"PullRequestEvent","CreatedAt":"2019-02-26T05:28:19","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/35575","RelatedDescription":"Merged pull request \"disable AllSubscriberStress test on ARM64 \" (#35575) at dotnet/corefx","RelatedBody":"related to #35539\r\n\r\nIt seems like it takes very long time to run it with current container configuration. This change disables this test so we can get complete runs.  "},{"Id":"9135266398","Type":"PullRequestEvent","CreatedAt":"2019-02-26T03:20:33","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/35579","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#35579) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9135207034","Type":"PullRequestEvent","CreatedAt":"2019-02-26T03:05:08","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/35568","RelatedDescription":"Merged pull request \"Removed GetRootLength Helper Function from PathInternalWindows.cs\" (#35568) at dotnet/corefx","RelatedBody":"Pretty sure this is safe to be removed.  Tested under netcoreapp and netfx builds."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9135266960","Type":"PullRequestEvent","CreatedAt":"2019-02-26T03:20:42","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7081","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7081) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9135233578","Type":"PullRequestEvent","CreatedAt":"2019-02-26T03:12:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7079","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7079) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @ericstj @marek-safar @filipnavara"},{"Id":"9134377755","Type":"PullRequestEvent","CreatedAt":"2019-02-25T23:39:31","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7002","RelatedDescription":"Merged pull request \"Additional changes to make CPAOT getCallInfo more similar to Crossgen\" (#7002) at dotnet/corert","RelatedBody":"After Simon forked away getCallInfo for CPAOT, we landed in a\r\nbetter position to steer further away from the RyuJit version.\r\nI have split the method getCallInfo into two parts corresponding\r\nto CoreCLR CEEInfo::getCallInfo vs. ZapInfo::getCallInfo and\r\nI refactored the methods to be as similar to their Crossgen\r\ncounterparts as possible.\r\n\r\nI have also forked embedGenericHandle because its implementation\r\nis differs somewhat between CoreRT and Crossgen. Similarly I had\r\nto provide a separate implementation for\r\nTryResolveConstraintMethodApprox and\r\nComputeRuntimeLookupForSharedGenericToken.\r\n\r\nAs part of this effort I had to generalize local method imports\r\nto distinguish between the actual compiled method and its logical\r\nview in the import cell as a shareable instantiated or generic\r\nmethod may end up in multiple import cells corresponding to\r\ndifferent type parameters or to different values of the\r\nisInstantiatingStub flag.\r\n\r\nAs a slight cleanup I have also unified parameter ordering such\r\nthat, for methods accepting the unboxing / instantiating stub flags\r\nand the signature context, the signature context always goes last.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. There seems to be a bit of an overlap between Simon's most\r\nrecent PR and mine. I assume Simon's change should go in first\r\nand I'll rebase my change after resolving the conflict.\r\n\r\nP.P.S. Based on Michal's advice I have also removed the method\r\nShadowConcreteMethod that is no longer used in CPAOT.\r\n\r\nP.P.P.S. This change seems to be fixing about 200 Pri#1 tests."},{"Id":"9134135748","Type":"PullRequestEvent","CreatedAt":"2019-02-25T22:48:52","Actor":"sbomer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7080","RelatedDescription":"Opened pull request \"Set up CI with Azure Pipelines\" (#7080) at dotnet/corert","RelatedBody":""},{"Id":"9134024380","Type":"PullRequestEvent","CreatedAt":"2019-02-25T22:28:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7054","RelatedDescription":null,"RelatedBody":"The final expression type for binary ops like `add` and shift ops `<<` was incorrectly set to `byte` when the operand was of type `byte`.  These operations act on ints (or int64 - which was ok), and they were incorrectly being truncated back to `byte`.  E.g.\r\n\r\n```\r\n        byte aByte = 2;\r\n        short aShort = 0x100;\r\n        short byteAndShortResult = (short)(aByte + aShort);\r\n```\r\nwas resulting in `2`."},{"Id":"9134024230","Type":"PullRequestEvent","CreatedAt":"2019-02-25T22:28:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7054","RelatedDescription":"Closed pull request \"Wasm: fix operations on bytes that are stored in shorts\" (#7054) at dotnet/corert","RelatedBody":"The final expression type for binary ops like `add` and shift ops `<<` was incorrectly set to `byte` when the operand was of type `byte`.  These operations act on ints (or int64 - which was ok), and they were incorrectly being truncated back to `byte`.  E.g.\r\n\r\n```\r\n        byte aByte = 2;\r\n        short aShort = 0x100;\r\n        short byteAndShortResult = (short)(aByte + aShort);\r\n```\r\nwas resulting in `2`."},{"Id":"9134021113","Type":"PullRequestEvent","CreatedAt":"2019-02-25T22:27:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7041","RelatedDescription":"Closed pull request \"WIP: Move WaitHandle to shared CoreLib\" (#7041) at dotnet/corert","RelatedBody":"Counter-part to https://github.com/dotnet/coreclr/pull/22634."},{"Id":"9133742561","Type":"PullRequestEvent","CreatedAt":"2019-02-25T21:41:17","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7079","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7079) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9133713692","Type":"PullRequestEvent","CreatedAt":"2019-02-25T21:36:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7074","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7074) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"9132875552","Type":"PullRequestEvent","CreatedAt":"2019-02-25T19:24:39","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/6987","RelatedDescription":null,"RelatedBody":"When rooting generic types for reflection, try to pregenerate code for the type instantiated over a suitable type.\r\n\r\nThis makes more reflection just work at the cost of sacrificing more size and compilation speed. ASP.NET WebApi sample goes from 29.4 MB to 30.6 MB, but we can delete 75% of its RD.XML.\r\n\r\nThe size regression can be recovered by using the [documented](http://aka.ms/OptimizeCoreRT) switches. The RD.XML needs to come back in that case, obviously."},{"Id":"9132875275","Type":"PullRequestEvent","CreatedAt":"2019-02-25T19:24:37","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6987","RelatedDescription":"Closed pull request \"Instantiate generic types over something if possible\" (#6987) at dotnet/corert","RelatedBody":"When rooting generic types for reflection, try to pregenerate code for the type instantiated over a suitable type.\r\n\r\nThis makes more reflection just work at the cost of sacrificing more size and compilation speed. ASP.NET WebApi sample goes from 29.4 MB to 30.6 MB, but we can delete 75% of its RD.XML.\r\n\r\nThe size regression can be recovered by using the [documented](http://aka.ms/OptimizeCoreRT) switches. The RD.XML needs to come back in that case, obviously."},{"Id":"9132872483","Type":"PullRequestEvent","CreatedAt":"2019-02-25T19:24:12","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7075","RelatedDescription":"Merged pull request \"Make binary serialization work\" (#7075) at dotnet/corert","RelatedBody":"Three parts:\r\n\r\n* Expose serialization-related metadata in the type system.\r\n* Poke holes into reflection blocking to make binary serialization work for FX types\r\n* Update the usage based metadata analyzer to scan for binary serialization.\r\n\r\nThis fixes about 300 failing tests newly exposed in #6987."},{"Id":"9132862469","Type":"PullRequestEvent","CreatedAt":"2019-02-25T19:22:40","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7074","RelatedDescription":null,"RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"9132862291","Type":"PullRequestEvent","CreatedAt":"2019-02-25T19:22:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7074","RelatedDescription":"Closed pull request \"Mirror changes from dotnet/coreclr\" (#7074) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9134097854","Type":"PullRequestEvent","CreatedAt":"2019-02-25T22:41:44","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2990","RelatedDescription":"Opened pull request \"Add hook to redirect common props import\" (#2990) at dotnet/sdk","RelatedBody":"Introduce $(AlternateCommonProps) to redirect the Sdk common props import to a user-defined location. This is morally equivalent to $(LanguageTargets) being customizable on the targets side.\r\n\r\nHaving full control over both of these imports makes it much easier to integrate the SDK into existing heavily-customized builds. The current use case is to get some internal builds over to netcoreapp3.0.\r\n\r\nThis greatly facilitates moving some internal builds to netcoreapp3.0 as they are heavily customized"},{"Id":"9130653073","Type":"PullRequestEvent","CreatedAt":"2019-02-25T14:21:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2988","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#2988) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19124.1\r\n\r\n"},{"Id":"9130512057","Type":"IssuesEvent","CreatedAt":"2019-02-25T14:02:53","Actor":"loop-evgeny","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2989","RelatedDescription":"Opened issue \"Error running self-contained Linux EXE: \"This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\"\" (#2989) at dotnet/sdk","RelatedBody":"I created a new console application in VS 2017 using .NET Core 2.1. Published it as a self-contained linux-x64 app without any changes and tried to run it on an Ubuntu 18.04 VM. Got this error:\r\n\r\n```\r\n ./LinuxTest \r\nThis executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\r\nA fatal error was encountered. This executable was not bound to load a managed DLL.\r\n```\r\n\r\nc3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2 is apparently the SHA256 hash of \"foobar\", so whatever the real problem is, this is a very weird error message, too!\r\n\r\nLinuxTest.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nProgram.cs:\r\n```\r\nusing System;\r\n\r\nnamespace LinuxTest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nResulting self-contained binary: [LinuxTest.zip](https://github.com/dotnet/sdk/files/2900841/LinuxTest.zip)\r\n\r\nIf I install dotnet-runtime-2.1 on the Linux VM and run `dotnet LinuxTest.dll` it works."},{"Id":"9130090041","Type":"PullRequestEvent","CreatedAt":"2019-02-25T13:01:09","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2988","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#2988) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19124.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Update links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Update links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"414436469","IsPullRequest":true,"CreatedAt":"2019-02-26T05:22:34","Actor":"ArtBlnd","Number":"22848","RawContent":null,"Title":"[WIP] Remove extra bound checks for explicit range checks","State":"open","Body":"Currently removing bound checks for explicit array range check on some major patterns.\r\nRelated to https://github.com/dotnet/coreclr/issues/19620","Url":"https://github.com/dotnet/coreclr/pull/22848","RelatedDescription":"Open PR \"[WIP] Remove extra bound checks for explicit range checks\" (#22848)"},{"Id":"413902582","IsPullRequest":true,"CreatedAt":"2019-02-26T03:17:20","Actor":"stephentoub","Number":"22825","RawContent":null,"Title":"Special-case 1 module per assembly in Assembly.GetTypes/DefinedTypes","State":"closed","Body":"It's very common for an assembly to have only one module, in which case we can avoid unnecessary allocations and copies in Assembly.GetTypes() and Assembly.DefinedTypes.\r\n\r\nBefore\r\n```\r\n       Method |      Mean |     Error |    StdDev | Gen 0/1k Op | Allocated Memory/Op |\r\n------------- |----------:|----------:|----------:|------------:|--------------------:|\r\n     GetTypes |  93.62 us | 0.6061 us | 0.5373 us |     14.4043 |            59.03 KB |\r\n DefinedTypes | 114.03 us | 1.1998 us | 1.0019 us |     21.6064 |            88.55 KB |\r\n```\r\n\r\nAfter\r\n```\r\n       Method |      Mean |     Error |    StdDev | Gen 0/1k Op | Allocated Memory/Op |\r\n------------- |----------:|----------:|----------:|------------:|--------------------:|\r\n     GetTypes |  90.07 us | 1.7718 us | 1.8958 us |      7.2021 |            29.55 KB |\r\n DefinedTypes | 106.83 us | 0.8118 us | 0.6779 us |      7.2021 |            29.73 KB |\r\n```\r\n\r\nBenchmark:\r\n```C#\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\nusing System;\r\nusing System.Collections;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Net.Http;\r\nusing System.Net.Sockets;\r\nusing System.Reflection;\r\n\r\n[InProcess]\r\n[MemoryDiagnoser]\r\npublic class Test\r\n{\r\n    public static void Main() => BenchmarkRunner.Run<Test>();\r\n\r\n    private static readonly Assembly[] s_assemblies = new[]\r\n    {\r\n        typeof(object).Assembly,\r\n        typeof(HttpClient).Assembly,\r\n        typeof(Socket).Assembly,\r\n        typeof(BitArray).Assembly,\r\n        typeof(File).Assembly,\r\n        typeof(InProcessAttribute).Assembly\r\n    };\r\n\r\n    [Benchmark]\r\n    public int GetTypes()\r\n    {\r\n        int count = 0;\r\n        foreach (Assembly asm in s_assemblies) count += asm.GetTypes().Length;\r\n        return count;\r\n    }\r\n\r\n    [Benchmark]\r\n    public int DefinedTypes()\r\n    {\r\n        int count = 0;\r\n        foreach (Assembly asm in s_assemblies)\r\n            foreach (TypeInfo ti in asm.DefinedTypes)\r\n                count++;\r\n        return count;\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/pull/22825","RelatedDescription":"Closed or merged PR \"Special-case 1 module per assembly in Assembly.GetTypes/DefinedTypes\" (#22825)"},{"Id":"414400119","IsPullRequest":false,"CreatedAt":"2019-02-26T02:27:25","Actor":"AaronRobinsonMSFT","Number":"22847","RawContent":null,"Title":"Remove remnants of native activation for managed COM servers","State":"open","Body":"Cruft:\r\nhttps://github.com/dotnet/coreclr/blob/master/src/vm/appdomain.hpp#L2453\r\n\r\nhttps://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/src/System/Runtime/InteropServices/Marshal.CoreCLR.cs#L747-L751\r\n\r\nWill have to update RCW activation as well.\r\n\r\nRemove entirely:\r\nhttps://github.com/dotnet/coreclr/blob/master/src/vm/classfactory.cpp","Url":"https://github.com/dotnet/coreclr/issues/22847","RelatedDescription":"Open issue \"Remove remnants of native activation for managed COM servers\" (#22847)"},{"Id":"414399064","IsPullRequest":true,"CreatedAt":"2019-02-26T02:23:06","Actor":"AaronRobinsonMSFT","Number":"22846","RawContent":null,"Title":"Support IClassFactory2 - LicenseManager use in COM activation","State":"open","Body":"Properly implement IClassFactory2 for licensing. Adds basic tests for IClassFactory2 activation.\r\n\r\nThis PR requires work in CoreFX as well https://github.com/dotnet/corefx/pull/35577.\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/20563\r\n\r\ncc @jeffschwMSFT ","Url":"https://github.com/dotnet/coreclr/pull/22846","RelatedDescription":"Open PR \"Support IClassFactory2 - LicenseManager use in COM activation\" (#22846)"},{"Id":"414395399","IsPullRequest":false,"CreatedAt":"2019-02-26T02:07:49","Actor":"iskiselev","Number":"22845","RawContent":null,"Title":"CoreCLR version in profiler API","State":"open","Body":"Profiler API already exposed method that expect to be used to resolve version, ICorProfilerInfo3::GetRuntimeInformation.\r\nUnfortunately there is no documentation that will map results from it to marketing CoreCLR releases.\r\nPer my tests it returns on Windows:\r\n4.0.22220 for CoreCLR 2.0.9\r\n4.0.30319 for  CoreCLR 2.1.8, 2.2.0\r\n\r\nShould it return value unique for each CoreCLR release? Should there be another API to resolve coreclr version (if we are talking about profiler, it will be some version associated with coreclr.dll)? Is there any existing way to resolve this version cross-platform? coreclr.dll on windows has File Version and Product version, are there something similar on other OS?\r\n\r\nWill #22844 fix version resolution in profiler API?\r\n\r\ncc: @noahfalk","Url":"https://github.com/dotnet/coreclr/issues/22845","RelatedDescription":"Open issue \"CoreCLR version in profiler API\" (#22845)"},{"Id":"414239151","IsPullRequest":true,"CreatedAt":"2019-02-26T01:57:46","Actor":"sdmaclea","Number":"22835","RawContent":null,"Title":"Remove buildpipelines","State":"closed","Body":"It is not clear to me why these files are still present.\r\n\r\nThe easiest way to find out is to try to remove them","Url":"https://github.com/dotnet/coreclr/pull/22835","RelatedDescription":"Closed or merged PR \"Remove buildpipelines\" (#22835)"},{"Id":"414327201","IsPullRequest":true,"CreatedAt":"2019-02-25T23:51:00","Actor":"jashook","Number":"22840","RawContent":null,"Title":"For linux-musl-arm64 use OutputRid","State":"closed","Body":"This variable was added for linux-musl-x64 in our old official builds,\r\nbecause our current logic in src/.nuget/dirs.props incorrectly parses\r\nthe __DistroRid passed.\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/22833. We need a todo issue as well to either remove or standardize all our distrorid logic. The tendrils are apparently larger than build.sh/build-test.sh/runtest.sh/build-packages.sh","Url":"https://github.com/dotnet/coreclr/pull/22840","RelatedDescription":"Closed or merged PR \"For linux-musl-arm64 use OutputRid\" (#22840)"},{"Id":"414232423","IsPullRequest":false,"CreatedAt":"2019-02-25T23:51:00","Actor":"robertborr","Number":"22833","RawContent":null,"Title":"ToolsError build failures in 'official/dotnet/coreclr/refs/heads/master' - '20190222.73'","State":"closed","Body":"@dotnet-mc-bot commented on [Fri Feb 22 2019](https://github.com/dotnet/core-eng/issues/5311)\n\nThere were a set of failures during this build. Here is a summary of these:\r\n* https://dnceng.visualstudio.com/internal/_build/results?buildId=104623\r\n  - **Agent:** Hosted Mac Internal 3\r\n  - **Error log:** /Users/vsts/.nuget/packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19115.1/tools/azure-pipelines/AzurePipelines.MultiQueue.targets(0,0): error : Test run 2332430 has one or more failing tests. [/Users/vsts/agent/2.147.1/work/0/s/te...\r\n\r\n@robertborr\r\n\n\n---\n\n@robertborr commented on [Mon Feb 25 2019](https://github.com/dotnet/core-eng/issues/5311#issuecomment-467111015)\n\n/__w/3/s/.packages/microsoft.dotnet.arcade.sdk/1.0.0-beta.19115.1/tools/DefaultVersions.props(17,3): error MSB4011: \"/__w/3/s/eng/Versions.props\" cannot be imported again. It was already imported at \"/__w/3/s/dependencies.props (13,3)\". This is most likely a build authoring error. This subsequent import will be ignored. [/__w/3/s/src/publishwitharcade.proj]\r\n\r\n\r\n\n\n---\n\n@robertborr commented on [Mon Feb 25 2019](https://github.com/dotnet/core-eng/issues/5311#issuecomment-467111172)\n\n/__w/3/s/src/publishwitharcade.proj(62,5): error : Package already exists: runtime.linux-arm64.Microsoft.NETCore.ILAsm 3.0.0-preview4-27422-73.\r\n  Uploading 6 items:\r\n  Async uploading /__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.ILAsm.3.0.0-preview4-27422-73.symbols.nupkg\r\n  Async uploading /__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.ILDAsm.3.0.0-preview4-27422-73.symbols.nupkg\r\n  Async uploading /__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.Jit.3.0.0-preview4-27422-73.symbols.nupkg\r\n  Async uploading /__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.Native.3.0.0-preview4-27422-73.symbols.nupkg\r\n  Async uploading /__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.Runtime.CoreCLR.3.0.0-preview4-27422-73.symbols.nupkg\r\n  Async uploading /__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.TestHost.3.0.0-preview4-27422-73.symbols.nupkg\r\n/__w/3/s/src/publishwitharcade.proj(62,5): error : Item '/__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.Native.3.0.0-preview4-27422-73.symbols.nupkg' already exists at 'assets/symbols/runtime.linux-arm64.Microsoft.NETCore.Native.3.0.0-preview4-27422-73.symbols.nupkg'\r\n/__w/3/s/src/publishwitharcade.proj(62,5): error : Item '/__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.ILDAsm.3.0.0-preview4-27422-73.symbols.nupkg' already exists at 'assets/symbols/runtime.linux-arm64.Microsoft.NETCore.ILDAsm.3.0.0-preview4-27422-73.symbols.nupkg'\r\n/__w/3/s/src/publishwitharcade.proj(62,5): error : Item '/__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.ILAsm.3.0.0-preview4-27422-73.symbols.nupkg' already exists at 'assets/symbols/runtime.linux-arm64.Microsoft.NETCore.ILAsm.3.0.0-preview4-27422-73.symbols.nupkg'\r\n/__w/3/s/src/publishwitharcade.proj(62,5): error : Item '/__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.Jit.3.0.0-preview4-27422-73.symbols.nupkg' already exists at 'assets/symbols/runtime.linux-arm64.Microsoft.NETCore.Jit.3.0.0-preview4-27422-73.symbols.nupkg'\r\n/__w/3/s/src/publishwitharcade.proj(62,5): error : Item '/__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.TestHost.3.0.0-preview4-27422-73.symbols.nupkg' already exists at 'assets/symbols/runtime.linux-arm64.Microsoft.NETCore.TestHost.3.0.0-preview4-27422-73.symbols.nupkg'\r\n/__w/3/s/src/publishwitharcade.proj(62,5): error : Item '/__w/3/s/bin/Product/Linux.arm64.Release/.nuget/symbolpkg/runtime.linux-arm64.Microsoft.NETCore.Runtime.CoreCLR.3.0.0-preview4-27422-73.symbols.nupkg' already exists at 'assets/symbols/runtime.linux-arm64.Microsoft.NETCore.Runtime.CoreCLR.3.0.0-preview4-27422-73.symbols.nupkg'\r\n  Creating build manifest file '/__w/3/s/artifacts/log/Release/AssetManifest/Linux_musl-arm64'...\r\n\n\n---\n\n@robertborr commented on [Mon Feb 25 2019](https://github.com/dotnet/core-eng/issues/5311#issuecomment-467111664)\n\n@russkeldorph - shall I move this to coreclr repo? looks like a build authoring or sourcecode issue.\n\n---\n\n@RussKeldorph commented on [Mon Feb 25 2019](https://github.com/dotnet/core-eng/issues/5311#issuecomment-467112696)\n\n@robertborr Yes, that's fine.   @jashook \n\n","Url":"https://github.com/dotnet/coreclr/issues/22833","RelatedDescription":"Closed issue \"ToolsError build failures in 'official/dotnet/coreclr/refs/heads/master' - '20190222.73'\" (#22833)"},{"Id":"414232949","IsPullRequest":true,"CreatedAt":"2019-02-25T23:38:55","Actor":"filipnavara","Number":"22834","RawContent":null,"Title":"Remove support for ICLRExecutionManager and pause/resume code for waits","State":"closed","Body":"Follow-up to #22634 based on https://github.com/dotnet/coreclr/pull/22634#discussion_r259626969.\r\n\r\n/cc @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/22834","RelatedDescription":"Closed or merged PR \"Remove support for ICLRExecutionManager and pause/resume code for waits\" (#22834)"},{"Id":"414359273","IsPullRequest":false,"CreatedAt":"2019-02-25T23:36:44","Actor":"richlander","Number":"22844","RawContent":null,"Title":"[Breaking Change] Improving .NET Core Version APIs","State":"open","Body":"# [Breaking Change] Improving .NET Core Version APIs\r\n\r\nWe are improving the .NET Core version APIs in .NET Core 3.0. The particular changes we made are technically breaking. The changes are currently only in the master branch, so will be part of .NET Core 3.0 Preview 4, modulo feedback.\r\n\r\nAlso posted at [dotnet/corefx #35573](https://github.com/dotnet/corefx/issues/35573)\r\n\r\nRelated:\r\n\r\n* [Improve .NET Core version APIs dotnet/corefx #35361](https://github.com/dotnet/corefx/issues/35361)\r\n* [Make Environment.Version return the actual runtime version dotnet/corefx #31099](https://github.com/dotnet/corefx/issues/31099)\r\n* [Use product version in RuntimeInformation.FrameworkDescription dotnet/corefx #35516](https://github.com/dotnet/corefx/pull/35516)\r\n* [Change Environment.Version to return product version dotnet/coreclr #22664](https://github.com/dotnet/coreclr/pull/22664)\r\n\r\n## Goal\r\n\r\nThe goal of the improvement is to enable access to accurate and precise product version information, like is displayed in the following example:\r\n\r\n```console\r\nC:\\testapps\\versioninfo>dotnet run\r\n.NET Core version:\r\nEnvironment.Version: 3.0.0\r\nRuntimeInformation.FrameworkDescription: .NET Core 3.0.0-preview4.19113.15\r\nCoreFX Build: 3.0.0-preview4.19113.15\r\nCoreFX Hash: add4cacbfb7f7d3f5f07630d10b24e38da4ad027\r\n```\r\n\r\nCode: https://gist.github.com/richlander/f5849c6967c66d699301f75101906f99\r\n\r\n## Existing Behavior\r\n\r\nThe product (as of .NET Core 3.0 Preview 3) does not provide the version information displayed above, but seemingly arbitrary values, as displayed in the following example (using the same code):\r\n\r\nC:\\testapps\\versioninfo>dotnet run\r\n.NET Core version:\r\nEnvironment.Version: 4.0.30319.42000\r\nRuntimeInformation.FrameworkDescription: .NET Core 4.6.27415.71\r\nCoreFX Build: 4.7.0-preview4.19113.15\r\nCoreFX Hash: add4cacbfb7f7d3f5f07630d10b24e38da4ad027\r\n\r\nNote: These version strings are based on the .NET Framework heritage of the product.\r\n\r\n## Breaking Change\r\n\r\nThe change is technically breaking because it resets the versioning scheme of the product as reported by these APIs. Some code somewhere will break, however, we do not expect that to be pervasive. Unfortunately, it will be hard to write code that works with both the new behavior and old behavior given how close the values are.\r\n\r\nWe should never have shipped .NET Core 1.0 with this behavior to avoid this problem now. We decided that .NET Core 3.0 is likely our last chance to fix these APIs, so decided to take the opportunity now.\r\n\r\n## Feedback\r\n\r\nWe would love your feedback.","Url":"https://github.com/dotnet/coreclr/issues/22844","RelatedDescription":"Open issue \"[Breaking Change] Improving .NET Core Version APIs\" (#22844)"},{"Id":"414355638","IsPullRequest":true,"CreatedAt":"2019-02-25T23:23:19","Actor":"jkoritzinsky","Number":"22843","RawContent":null,"Title":"Turn on IBC and enforce PGO in official and release builds.","State":"open","Body":"- Turn on the `-ibcoptimize` flag on official builds.\r\n- Add the `-enforcepgo` flag to Windows non-arm release builds (same as Jenkins implementation).\r\n\r\nAdditionally, fix the pgocheck script to work on both python2 and python3 for local builds with `-enforcepgo` turned on and python3 installed.","Url":"https://github.com/dotnet/coreclr/pull/22843","RelatedDescription":"Open PR \"Turn on IBC and enforce PGO in official and release builds.\" (#22843)"},{"Id":"414353068","IsPullRequest":false,"CreatedAt":"2019-02-25T23:14:52","Actor":"jashook","Number":"22842","RawContent":null,"Title":"[Official Build] Re-work our distro rid logic to standardize in one location","State":"open","Body":"Currently src/.nuget/dirs.props parses the __DistroRid to re-create a RID it will use to build the packages. This logic has been changed over time to be specific per arch and os, it should be consolidated into one place and shared with init-distro-rid.sh in some way.","Url":"https://github.com/dotnet/coreclr/issues/22842","RelatedDescription":"Open issue \"[Official Build] Re-work our distro rid logic to standardize in one location\" (#22842)"},{"Id":"414351133","IsPullRequest":true,"CreatedAt":"2019-02-25T23:08:31","Actor":"josalem","Number":"22841","RawContent":null,"Title":"Make StackTrace Aware of Collectible Types (Phase 1)","State":"open","Body":"Adds collection of `Assembly` objects while walking the stack in `DebugStackTrace::GetStackFrameInternal`\r\n* new field in `StackFrameHelper` in both managed and native (plus mscorlib macro definition)\r\n* retrieved via `methodDesc->GetAssembly()->GetDomainAssembly()->GetExposedAssemblyObject()`\r\n\r\nCalls `GetSourceLineInfo` with delegate signature that *does not* consume an `Assembly`.  As a result, this there will be a follow up change to call the updated version after it exists in CoreFX.\r\n\r\n#20179 \r\n\r\nCC- @janvorli @sergiy-k ","Url":"https://github.com/dotnet/coreclr/pull/22841","RelatedDescription":"Open PR \"Make StackTrace Aware of Collectible Types (Phase 1)\" (#22841)"},{"Id":"413824554","IsPullRequest":true,"CreatedAt":"2019-02-25T22:34:36","Actor":"dotnet-maestro[bot]","Number":"22819","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview4-27423-3\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview4-27424-2\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/22819","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#22819)"},{"Id":"414316215","IsPullRequest":true,"CreatedAt":"2019-02-25T21:30:53","Actor":"jkoritzinsky","Number":"22839","RawContent":null,"Title":"Add the coreclr blob feed as a restore source for test builds.","State":"open","Body":"The test projects didn't have the dotnet-coreclr blob feed. As a result, #22691 is failing to build when upgrading packages used by `build_against_pkg_dependencies.csproj` to versions only available on the dotnet-coreclr blob feed. This should allow #22691 to pass CI and be merged in.","Url":"https://github.com/dotnet/coreclr/pull/22839","RelatedDescription":"Open PR \"Add the coreclr blob feed as a restore source for test builds.\" (#22839)"},{"Id":"414277776","IsPullRequest":false,"CreatedAt":"2019-02-25T19:52:39","Actor":"AndyAyersMS","Number":"22838","RawContent":null,"Title":"JIT: consider phase to clean up mixed byref/native int uses","State":"open","Body":"There are a number of examples of cases now where the jit has difficulty with mixed byref/native int uses of some resource. These come about from pointer reinterpretation methods like `Unsafe.AsRef` and other places.\r\n\r\nSome examples: #19257, #21051\r\n\r\nThe idea here is to run a phase after inlining to build a globally consistent view of the type of a local, possibly introducing casts where appropriate (like morph's \"cast out of gc\") so that later phases can reason about type correctness in a strictly local fashion.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/22838","RelatedDescription":"Open issue \"JIT: consider phase to clean up mixed byref/native int uses\" (#22838)"},{"Id":"414274845","IsPullRequest":false,"CreatedAt":"2019-02-25T19:45:57","Actor":"AndyAyersMS","Number":"22837","RawContent":null,"Title":"JIT: implement type checker","State":"open","Body":"There are a couple categories of issues in the JIT IR that could have been caught earlier if we ran some kind of type checking phase:\r\n* unexpected appearance of short integer types (#22666)\r\n* mismatched uses of byrefs/native ints (#19257)\r\n\r\nWe might also want to restructure the early part of the jit so we can run checks sooner...\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/22837","RelatedDescription":"Open issue \"JIT: implement type checker\" (#22837)"},{"Id":"414243265","IsPullRequest":false,"CreatedAt":"2019-02-25T18:27:50","Actor":"cshung","Number":"22836","RawContent":null,"Title":"ICorDebugRegisterSet2 does not support register with more than 64 bits.","State":"open","Body":"In [cordebug.idl](https://github.com/dotnet/coreclr/blob/cf85f56e473b6cdc4a68e9758f57dc571e14c9cb/src/inc/cordebug.idl#L3987), the GetRegisters API is defined as:\r\n```\r\n    typedef ULONG64 CORDB_REGISTER;\r\n    ...\r\n    HRESULT GetRegisters([in] ULONG32 maskCount,\r\n                         [in, size_is(maskCount)] BYTE mask[],\r\n                         [in] ULONG32 regCount,\r\n                         [out, size_is(regCount)] CORDB_REGISTER regBuffer[]);\r\n```\r\nAs such, if a register has more than 64 bits, it would either be unsupported or truncated, we need a new API to support retrieving those registers.","Url":"https://github.com/dotnet/coreclr/issues/22836","RelatedDescription":"Open issue \"ICorDebugRegisterSet2 does not support register with more than 64 bits.\" (#22836)"},{"Id":"414195536","IsPullRequest":true,"CreatedAt":"2019-02-25T16:36:55","Actor":"MarcoRossignoli","Number":"22832","RawContent":null,"Title":"DictionarySlim backport improvements, retaining more entropy and remove _freeCount","State":"open","Body":"contributes to https://github.com/dotnet/corefx/issues/33392\r\n\r\nUse uint hashcode to retain more entropy\r\n\r\nbefore \r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.3.1003-nightly, OS=Windows 10.0.17134.590 (1803/April2018Update/Redstone4)\r\nIntel Core i7 CPU 860 2.80GHz (Nehalem), 1 CPU, 8 logical and 4 physical cores\r\nFrequency=2727535 Hz, Resolution=366.6314 ns, Timer=TSC\r\n.NET Core SDK=3.0.100-preview-010184\r\n  [Host]     : .NET Core 3.0.0-preview-27324-5 (CoreCLR 4.6.27322.0, CoreFX 4.7.19.7311), 64bit RyuJIT\r\n  Job-SOCKON : .NET Core f01bf9f8-609f-443f-b1f9-73654bd6fdd8 (CoreCLR 4.6.27523.0, CoreFX 4.7.19.12501), 64bit RyuJIT\r\n  Job-LPCBGO : .NET Core f01bf9f8-609f-443f-b1f9-73654bd6fdd8 (CoreCLR 4.6.27523.0, CoreFX 4.7.19.12501), 64bit RyuJIT\r\n\r\nRuntime=Core  Toolchain=CoreRun  IterationTime=250.0000 ms  \r\nMaxIterationCount=20  MinIterationCount=15  WarmupCount=1  \r\n\r\n```\r\n|                     Namespace |                             Type |        Method | InvocationCount | UnrollFactor | Size |   Items | Count |                 Mean |             Error |            StdDev |               Median |                  Min |                  Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|------------------------------ |--------------------------------- |-------------- |---------------- |------------- |----- |-------- |------ |---------------------:|------------------:|------------------:|---------------------:|---------------------:|---------------------:|------------:|------------:|------------:|--------------------:|\r\n|            **System.Collections** |           **CtorDefaultSize&lt;Int32&gt;** |    **Dictionary** |               **1** |           **16** |    **?** |       **?** |     **?** |            **21.138 ns** |         **0.5386 ns** |         **0.4498 ns** |            **21.034 ns** |            **20.602 ns** |            **22.054 ns** |      **0.0171** |           **-** |           **-** |                **72 B** |\r\n|            System.Collections |          CtorDefaultSize&lt;String&gt; |    Dictionary |               1 |           16 |    ? |       ? |     ? |           115.775 ns |         2.1777 ns |         2.0370 ns |           115.759 ns |           112.713 ns |           119.546 ns |      0.0169 |           - |           - |                72 B |\r\n| **System.Collections.Concurrent** |                   **IsEmpty&lt;Int32&gt;** |    **Dictionary** |               **1** |           **16** |    **0** |       **?** |     **?** |           **167.668 ns** |         **1.7925 ns** |         **1.6767 ns** |           **167.952 ns** |           **164.903 ns** |           **171.290 ns** |           **-** |           **-** |           **-** |                   **-** |\r\n| System.Collections.Concurrent |                  IsEmpty&lt;String&gt; |    Dictionary |               1 |           16 |    0 |       ? |     ? |           175.245 ns |         3.1680 ns |         2.9634 ns |           175.101 ns |           170.252 ns |           181.164 ns |           - |           - |           - |                   - |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** |     **500** |     **?** |        **85,153.309 ns** |       **967.4673 ns** |       **904.9695 ns** |        **85,026.696 ns** |        **84,090.283 ns** |        **87,115.608 ns** |     **17.1371** |      **0.3360** |           **-** |             **73160 B** |\r\n|            **System.Collections** |         **TryAddDefaultSize&lt;Int32&gt;** |    **Dictionary** |               **1** |           **16** |    **?** |       **?** |  **2048** |       **151,853.548 ns** |     **1,614.4616 ns** |     **1,510.1684 ns** |       **152,020.658 ns** |       **149,280.358 ns** |       **154,742.987 ns** |     **24.5098** |     **12.2549** |           **-** |            **154192 B** |\r\n|            System.Collections |        TryAddDefaultSize&lt;String&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |       260,378.396 ns |     3,333.4320 ns |     3,118.0943 ns |       260,265.627 ns |       254,684.640 ns |       266,279.359 ns |     46.1066 |     40.9836 |     26.6393 |            215717 B |\r\n|            System.Collections |          TryAddGiventSize&lt;Int32&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |        62,035.232 ns |       625.4011 ns |       554.4018 ns |        61,999.683 ns |        61,072.372 ns |        63,033.053 ns |      7.4111 |      3.7055 |           - |             46784 B |\r\n|            System.Collections |         TryAddGiventSize&lt;String&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |       147,364.413 ns |     2,351.7824 ns |     2,084.7938 ns |       146,609.444 ns |       145,433.525 ns |       152,536.152 ns |     10.5140 |      5.2570 |           - |             65448 B |\r\n|            System.Collections |            AddDefaultSize&lt;Int32&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |       151,457.558 ns |     2,898.9032 ns |     2,711.6358 ns |       150,197.879 ns |       148,626.916 ns |       156,803.193 ns |     24.0385 |     12.0192 |           - |            154192 B |\r\n|            System.Collections |           AddDefaultSize&lt;String&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |       258,826.523 ns |     1,935.8032 ns |     1,810.7515 ns |       258,518.343 ns |       255,039.852 ns |       261,568.971 ns |     46.1066 |     44.0574 |     26.6393 |            215722 B |\r\n|            **System.Collections** |                    **Remove&lt;Int32&gt;** |    **Dictionary** |            **1000** |            **1** | **2048** |       **?** |     **?** |        **62,786.129 ns** |       **834.9818 ns** |       **740.1896 ns** |        **62,748.654 ns** |        **61,766.815 ns** |        **64,588.044 ns** |           **-** |           **-** |           **-** |                   **-** |\r\n|            System.Collections |                   Remove&lt;String&gt; |    Dictionary |            1000 |            1 | 2048 |       ? |     ? |       133,691.245 ns |     2,540.5734 ns |     2,376.4540 ns |       132,631.167 ns |       130,215.066 ns |       137,910.659 ns |           - |           - |           - |                   - |\r\n|            System.Collections |                     Clear&lt;Int32&gt; |    Dictionary |            1000 |            1 | 2048 |       ? |     ? |         8,307.190 ns |       192.6903 ns |       214.1748 ns |         8,305.994 ns |         7,901.233 ns |         8,650.261 ns |           - |           - |           - |                   - |\r\n|            System.Collections |                    Clear&lt;String&gt; |    Dictionary |            1000 |            1 | 2048 |       ? |     ? |        10,672.075 ns |       140.5965 ns |       117.4045 ns |        10,662.063 ns |        10,496.712 ns |        10,923.105 ns |           - |           - |           - |                   - |\r\n|            System.Collections |   ContainsKeyFalse&lt;Int32, Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        46,885.587 ns |       552.1149 ns |       516.4486 ns |        46,941.644 ns |        45,685.077 ns |        47,682.228 ns |           - |           - |           - |                   - |\r\n|            System.Collections | ContainsKeyFalse&lt;String, String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       109,510.313 ns |       851.8671 ns |       796.8370 ns |       109,437.392 ns |       108,226.451 ns |       110,776.526 ns |           - |           - |           - |                   - |\r\n|            System.Collections |    ContainsKeyTrue&lt;Int32, Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        42,012.134 ns |       350.9807 ns |       328.3075 ns |        42,010.042 ns |        41,423.956 ns |        42,699.365 ns |           - |           - |           - |                   - |\r\n|            System.Collections |  ContainsKeyTrue&lt;String, String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       109,269.743 ns |     1,116.3895 ns |     1,044.2715 ns |       109,322.904 ns |       108,074.619 ns |       111,986.671 ns |           - |           - |           - |                   - |\r\n| System.Collections.Concurrent |                     Count&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        21,219.886 ns |       640.3695 ns |       737.4505 ns |        21,284.655 ns |        19,958.709 ns |        22,553.940 ns |           - |           - |           - |                   - |\r\n| System.Collections.Concurrent |                    Count&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        20,212.199 ns |       175.6823 ns |       164.3333 ns |        20,235.303 ns |        19,916.917 ns |        20,478.918 ns |           - |           - |           - |                   - |\r\n| System.Collections.Concurrent |                   IsEmpty&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |             2.983 ns |         0.1841 ns |         0.1722 ns |             2.970 ns |             2.709 ns |             3.323 ns |           - |           - |           - |                   - |\r\n| System.Collections.Concurrent |                  IsEmpty&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |             3.017 ns |         0.1457 ns |         0.1291 ns |             2.981 ns |             2.854 ns |             3.276 ns |           - |           - |           - |                   - |\r\n|            System.Collections |              AddGivenSize&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        63,489.339 ns |     1,488.1789 ns |     1,713.7890 ns |        63,791.385 ns |        60,512.448 ns |        66,618.257 ns |      7.4588 |      3.6008 |           - |             46784 B |\r\n|            System.Collections |             AddGivenSize&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       145,403.806 ns |     1,692.4725 ns |     1,583.1399 ns |       145,222.810 ns |       143,469.853 ns |       149,133.757 ns |     10.4167 |      5.2083 |           - |             65448 B |\r\n|            System.Collections |        CtorFromCollection&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        64,083.569 ns |       707.7096 ns |       661.9920 ns |        64,151.889 ns |        63,065.820 ns |        65,028.320 ns |      7.4897 |      3.6157 |           - |             46784 B |\r\n|            System.Collections |       CtorFromCollection&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       150,999.660 ns |     2,020.8942 ns |     1,890.3456 ns |       150,848.377 ns |       147,695.729 ns |       155,176.823 ns |     10.4167 |      5.2083 |           - |             65448 B |\r\n|            System.Collections |             CtorGivenSize&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        12,027.516 ns |       209.0856 ns |       195.5788 ns |        12,082.695 ns |        11,642.689 ns |        12,331.592 ns |      7.4472 |      3.7236 |           - |             46784 B |\r\n|            System.Collections |            CtorGivenSize&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        23,727.781 ns |       369.4205 ns |       345.5561 ns |        23,688.431 ns |        23,077.184 ns |        24,386.122 ns |     10.3855 |      5.1460 |           - |             65448 B |\r\n|            System.Collections |                IndexerSet&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        50,974.114 ns |       941.5698 ns |       880.7450 ns |        50,592.549 ns |        49,743.466 ns |        52,757.452 ns |           - |           - |           - |                   - |\r\n|            System.Collections |               IndexerSet&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       124,769.958 ns |     1,494.9546 ns |     1,398.3814 ns |       124,507.891 ns |       122,417.082 ns |       127,556.236 ns |           - |           - |           - |                   - |\r\n|            System.Collections |            IterateForEach&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        18,215.827 ns |       203.7896 ns |       190.6249 ns |        18,195.956 ns |        17,896.050 ns |        18,554.976 ns |           - |           - |           - |                   - |\r\n|            System.Collections |           IterateForEach&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        18,497.016 ns |       190.6483 ns |       178.3325 ns |        18,461.196 ns |        18,305.749 ns |        18,943.396 ns |           - |           - |           - |                   - |\r\n|      **System.Collections.Tests** |                  **Perf_Dictionary** | **ContainsValue** |               **1** |           **16** |    **?** |    **3000** |     **?** |     **7,479,647.883 ns** |    **84,846.0839 ns** |    **79,365.0796 ns** |     **7,503,163.724 ns** |     **7,335,345.834 ns** |     **7,575,527.598 ns** |           **-** |           **-** |           **-** |                   **-** |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** |    **5000** |     **?** |     **1,047,806.953 ns** |    **12,991.8550 ns** |    **12,152.5892 ns** |     **1,049,529.001 ns** |     **1,028,935.009 ns** |     **1,069,438.614 ns** |    **120.8333** |    **120.8333** |    **120.8333** |            **673056 B** |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** |   **50000** |     **?** |     **8,611,516.872 ns** |   **160,790.0849 ns** |   **157,917.3629 ns** |     **8,648,810.877 ns** |     **8,290,096.415 ns** |     **8,892,345.790 ns** |   **1062.5000** |   **1031.2500** |   **1031.2500** |           **6037793 B** |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** |  **500000** |     **?** |   **115,474,366.049 ns** | **2,256,936.6814 ns** | **2,216,613.6005 ns** |   **115,663,043.738 ns** |   **111,832,845.410 ns** |   **118,933,395.905 ns** |   **2500.0000** |   **2500.0000** |   **2500.0000** |          **53888568 B** |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** | **5000000** |     **?** | **1,060,218,842.288 ns** | **6,433,913.8710 ns** | **6,018,287.0268 ns** | **1,058,696,955.310 ns** | **1,048,741,079.400 ns** | **1,071,752,699.780 ns** |   **4000.0000** |   **4000.0000** |   **4000.0000** |         **471722104 B** |\r\n\r\nAfter \r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.3.1003-nightly, OS=Windows 10.0.17134.590 (1803/April2018Update/Redstone4)\r\nIntel Core i7 CPU 860 2.80GHz (Nehalem), 1 CPU, 8 logical and 4 physical cores\r\nFrequency=2727535 Hz, Resolution=366.6314 ns, Timer=TSC\r\n.NET Core SDK=3.0.100-preview-010184\r\n  [Host]     : .NET Core 3.0.0-preview-27324-5 (CoreCLR 4.6.27322.0, CoreFX 4.7.19.7311), 64bit RyuJIT\r\n  Job-BXGUAA : .NET Core 87f9cb2e-5075-4cbd-ab6c-b5da46079c94 (CoreCLR 4.6.27523.0, CoreFX 4.7.19.12501), 64bit RyuJIT\r\n  Job-KJQYMZ : .NET Core 87f9cb2e-5075-4cbd-ab6c-b5da46079c94 (CoreCLR 4.6.27523.0, CoreFX 4.7.19.12501), 64bit RyuJIT\r\n\r\nRuntime=Core  Toolchain=CoreRun  IterationTime=250.0000 ms  \r\nMaxIterationCount=20  MinIterationCount=15  WarmupCount=1  \r\n\r\n```\r\n|                     Namespace |                             Type |        Method | InvocationCount | UnrollFactor | Size |   Items | Count |                 Mean |             Error |            StdDev |               Median |                  Min |                  Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|------------------------------ |--------------------------------- |-------------- |---------------- |------------- |----- |-------- |------ |---------------------:|------------------:|------------------:|---------------------:|---------------------:|---------------------:|------------:|------------:|------------:|--------------------:|\r\n|            **System.Collections** |           **CtorDefaultSize&lt;Int32&gt;** |    **Dictionary** |               **1** |           **16** |    **?** |       **?** |     **?** |            **23.805 ns** |         **0.2385 ns** |         **0.2231 ns** |            **23.704 ns** |            **23.541 ns** |            **24.239 ns** |      **0.0171** |           **-** |           **-** |                **72 B** |\r\n|            System.Collections |          CtorDefaultSize&lt;String&gt; |    Dictionary |               1 |           16 |    ? |       ? |     ? |           113.941 ns |         0.9883 ns |         0.9245 ns |           113.855 ns |           112.458 ns |           115.495 ns |      0.0170 |           - |           - |                72 B |\r\n| **System.Collections.Concurrent** |                   **IsEmpty&lt;Int32&gt;** |    **Dictionary** |               **1** |           **16** |    **0** |       **?** |     **?** |           **170.869 ns** |         **1.9216 ns** |         **1.7975 ns** |           **170.418 ns** |           **166.628 ns** |           **173.358 ns** |           **-** |           **-** |           **-** |                   **-** |\r\n| System.Collections.Concurrent |                  IsEmpty&lt;String&gt; |    Dictionary |               1 |           16 |    0 |       ? |     ? |           179.837 ns |         1.7561 ns |         1.6427 ns |           180.384 ns |           176.214 ns |           181.830 ns |           - |           - |           - |                   - |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** |     **500** |     **?** |        **82,340.128 ns** |       **978.2604 ns** |       **915.0654 ns** |        **82,026.180 ns** |        **81,309.353 ns** |        **83,891.009 ns** |     **17.3429** |      **0.3272** |           **-** |             **73160 B** |\r\n|            **System.Collections** |         **TryAddDefaultSize&lt;Int32&gt;** |    **Dictionary** |               **1** |           **16** |    **?** |       **?** |  **2048** |       **150,153.371 ns** |     **1,618.9973 ns** |     **1,514.4110 ns** |       **150,124.634 ns** |       **147,893.717 ns** |       **152,240.763 ns** |     **24.1745** |     **11.7925** |           **-** |            **154192 B** |\r\n|            System.Collections |        TryAddDefaultSize&lt;String&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |       261,100.120 ns |     1,934.8411 ns |     1,809.8516 ns |       261,193.832 ns |       257,340.070 ns |       264,332.737 ns |     46.1066 |     39.9590 |     26.6393 |            215717 B |\r\n|            System.Collections |          TryAddGiventSize&lt;Int32&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |        63,706.533 ns |     2,213.4287 ns |     2,548.9878 ns |        63,218.560 ns |        60,307.853 ns |        67,743.168 ns |      7.2614 |      3.6307 |           - |             46784 B |\r\n|            System.Collections |         TryAddGiventSize&lt;String&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |       142,825.956 ns |       868.1599 ns |       724.9528 ns |       142,806.871 ns |       141,892.376 ns |       144,623.363 ns |     10.2273 |      5.1136 |           - |             65448 B |\r\n|            System.Collections |            AddDefaultSize&lt;Int32&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |       151,037.858 ns |     2,873.2948 ns |     3,074.3933 ns |       150,303.520 ns |       146,159.005 ns |       155,900.099 ns |     24.2718 |     12.1359 |           - |            154192 B |\r\n|            System.Collections |           AddDefaultSize&lt;String&gt; |    Dictionary |               1 |           16 |    ? |       ? |  2048 |       267,313.615 ns |     4,137.9096 ns |     3,668.1491 ns |       268,283.291 ns |       259,293.248 ns |       271,946.692 ns |     45.5508 |     40.2542 |     26.4831 |            215720 B |\r\n|            **System.Collections** |                    **Remove&lt;Int32&gt;** |    **Dictionary** |            **1000** |            **1** | **2048** |       **?** |     **?** |        **62,601.610 ns** |     **1,216.2933 ns** |     **1,137.7215 ns** |        **62,405.854 ns** |        **60,909.264 ns** |        **65,463.193 ns** |           **-** |           **-** |           **-** |                   **-** |\r\n|            System.Collections |                   Remove&lt;String&gt; |    Dictionary |            1000 |            1 | 2048 |       ? |     ? |       128,512.905 ns |     1,917.1579 ns |     1,600.9137 ns |       128,483.997 ns |       126,116.292 ns |       132,111.082 ns |           - |           - |           - |                   - |\r\n|            System.Collections |                     Clear&lt;Int32&gt; |    Dictionary |            1000 |            1 | 2048 |       ? |     ? |         8,145.743 ns |       170.3186 ns |       182.2390 ns |         8,082.011 ns |         7,897.778 ns |         8,482.189 ns |           - |           - |           - |                   - |\r\n|            System.Collections |                    Clear&lt;String&gt; |    Dictionary |            1000 |            1 | 2048 |       ? |     ? |        10,767.409 ns |       131.9702 ns |       110.2011 ns |        10,776.067 ns |        10,551.322 ns |        10,956.083 ns |           - |           - |           - |                   - |\r\n|            System.Collections |   ContainsKeyFalse&lt;Int32, Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        44,879.415 ns |       333.7097 ns |       278.6627 ns |        44,902.335 ns |        44,395.467 ns |        45,463.019 ns |           - |           - |           - |                   - |\r\n|            System.Collections | ContainsKeyFalse&lt;String, String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       110,064.587 ns |     1,119.4218 ns |     1,047.1078 ns |       110,064.819 ns |       107,313.029 ns |       111,583.653 ns |           - |           - |           - |                   - |\r\n|            System.Collections |    ContainsKeyTrue&lt;Int32, Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        41,055.418 ns |       778.8534 ns |       728.5399 ns |        40,913.175 ns |        40,131.967 ns |        42,263.798 ns |           - |           - |           - |                   - |\r\n|            System.Collections |  ContainsKeyTrue&lt;String, String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       109,705.450 ns |       997.1031 ns |       932.6908 ns |       109,501.575 ns |       108,489.520 ns |       111,074.399 ns |           - |           - |           - |                   - |\r\n| System.Collections.Concurrent |                     Count&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        20,438.584 ns |       196.3024 ns |       183.6214 ns |        20,467.289 ns |        20,101.198 ns |        20,709.797 ns |           - |           - |           - |                   - |\r\n| System.Collections.Concurrent |                    Count&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        20,203.623 ns |       205.4737 ns |       192.2002 ns |        20,219.996 ns |        19,945.734 ns |        20,448.163 ns |           - |           - |           - |                   - |\r\n| System.Collections.Concurrent |                   IsEmpty&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |             2.866 ns |         0.1173 ns |         0.1097 ns |             2.858 ns |             2.676 ns |             3.075 ns |           - |           - |           - |                   - |\r\n| System.Collections.Concurrent |                  IsEmpty&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |             3.092 ns |         0.1544 ns |         0.1445 ns |             3.113 ns |             2.887 ns |             3.399 ns |           - |           - |           - |                   - |\r\n|            System.Collections |              AddGivenSize&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        60,760.020 ns |       894.4473 ns |       836.6666 ns |        60,721.554 ns |        59,326.054 ns |        62,369.815 ns |      7.4234 |      3.5920 |           - |             46784 B |\r\n|            System.Collections |             AddGivenSize&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       143,719.715 ns |     1,504.3490 ns |     1,407.1690 ns |       143,787.977 ns |       141,109.049 ns |       146,574.665 ns |     10.1351 |      5.0676 |           - |             65448 B |\r\n|            System.Collections |        CtorFromCollection&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        62,795.952 ns |       444.3428 ns |       415.6385 ns |        62,860.373 ns |        61,932.473 ns |        63,377.986 ns |      7.4111 |      3.7055 |           - |             46784 B |\r\n|            System.Collections |       CtorFromCollection&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       152,208.271 ns |     1,459.9787 ns |     1,365.6649 ns |       152,484.915 ns |       149,151.577 ns |       154,605.696 ns |     10.4167 |      5.2083 |           - |             65448 B |\r\n|            System.Collections |             CtorGivenSize&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        11,921.263 ns |       178.5901 ns |       167.0533 ns |        11,967.958 ns |        11,558.556 ns |        12,132.757 ns |      7.4494 |      3.7013 |           - |             46784 B |\r\n|            System.Collections |            CtorGivenSize&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        23,713.601 ns |       199.5404 ns |       186.6502 ns |        23,718.992 ns |        23,359.783 ns |        24,099.413 ns |     10.3083 |      5.1077 |           - |             65448 B |\r\n|            System.Collections |                IndexerSet&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        51,615.680 ns |       457.0949 ns |       427.5669 ns |        51,389.743 ns |        51,137.684 ns |        52,246.152 ns |           - |           - |           - |                   - |\r\n|            System.Collections |               IndexerSet&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |       121,926.922 ns |     1,032.9373 ns |       862.5494 ns |       121,878.959 ns |       120,175.949 ns |       123,460.236 ns |           - |           - |           - |                   - |\r\n|            System.Collections |            IterateForEach&lt;Int32&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        18,384.410 ns |       128.4349 ns |       120.1381 ns |        18,416.393 ns |        18,183.731 ns |        18,545.727 ns |           - |           - |           - |                   - |\r\n|            System.Collections |           IterateForEach&lt;String&gt; |    Dictionary |               1 |           16 | 2048 |       ? |     ? |        18,341.761 ns |       195.1433 ns |       172.9895 ns |        18,307.120 ns |        18,026.805 ns |        18,753.731 ns |           - |           - |           - |                   - |\r\n|      **System.Collections.Tests** |                  **Perf_Dictionary** | **ContainsValue** |               **1** |           **16** |    **?** |    **3000** |     **?** |     **7,975,044.826 ns** |   **105,824.8983 ns** |    **98,988.6755 ns** |     **7,981,264.829 ns** |     **7,840,340.882 ns** |     **8,226,755.110 ns** |           **-** |           **-** |           **-** |                   **-** |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** |    **5000** |     **?** |     **1,031,586.157 ns** |    **20,160.3601 ns** |    **21,571.3594 ns** |     **1,033,572.395 ns** |       **989,414.793 ns** |     **1,075,720.686 ns** |    **121.0938** |    **121.0938** |    **121.0938** |            **673056 B** |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** |   **50000** |     **?** |     **8,016,221.116 ns** |   **105,045.7129 ns** |    **93,120.2884 ns** |     **8,006,054.459 ns** |     **7,824,377.139 ns** |     **8,183,526.976 ns** |   **1062.5000** |   **1031.2500** |   **1031.2500** |           **6037793 B** |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** |  **500000** |     **?** |   **112,127,287.093 ns** | **1,208,900.5710 ns** | **1,130,806.3442 ns** |   **111,575,103.530 ns** |   **110,162,839.340 ns** |   **114,698,069.870 ns** |   **2500.0000** |   **2500.0000** |   **2500.0000** |          **53888568 B** |\r\n|            **System.Collections** |        **DictionaryMappingFunction** |       **Entropy** |               **1** |           **16** |    **?** | **5000000** |     **?** | **1,030,821,064.930 ns** | **8,349,924.7036 ns** | **7,810,524.7484 ns** | **1,028,937,483.850 ns** | **1,020,771,502.470 ns** | **1,045,766,965.410 ns** |   **4000.0000** |   **4000.0000** |   **4000.0000** |         **471722104 B** |\r\n\r\nComparer\r\n\r\n| Slower                                                              | diff/base | Base Median (ns) | Diff Median (ns) | Modality|\r\n| ------------------------------------------------------------------- | ---------:| ----------------:| ----------------:| --------:|\r\n| System.Collections.CtorDefaultSize<Int32>.Dictionary                |      1.13 |            21.03 |            23.70 |         |\r\n| System.Collections.Tests.Perf_Dictionary.ContainsValue(Items: 3000) |      1.06 |       7503163.72 |       7981264.83 |         |\r\n| System.Collections.AddDefaultSize<String>.Dictionary(Count: 2048)   |      1.04 |        258518.34 |        268283.29 |         |\r\n\r\n| Faster                                                                   | base/diff | Base Median (ns) | Diff Median (ns) | Modality|\r\n| ------------------------------------------------------------------------ | ---------:| ----------------:| ----------------:| --------:|\r\n| System.Collections.DictionaryMappingFunction.Entropy(Items: 50000)       |      1.08 |       8648810.88 |       8006054.46 |         |\r\n| System.Collections.AddGivenSize<Int32>.Dictionary(Size: 2048)            |      1.05 |         63791.39 |         60721.55 |         |\r\n| System.Collections.ContainsKeyFalse<Int32, Int32>.Dictionary(Size: 2048) |      1.05 |         46941.64 |         44902.33 |         |\r\n| System.Collections.Concurrent.Count<Int32>.Dictionary(Size: 2048)        |      1.04 |         21284.66 |         20467.29 |         |\r\n| System.Collections.DictionaryMappingFunction.Entropy(Items: 500)         |      1.04 |         85026.70 |         82026.18 |         |\r\n| System.Collections.Remove<String>.Dictionary(Size: 2048)                 |      1.03 |        132631.17 |        128484.00 |         |\r\n| System.Collections.DictionaryMappingFunction.Entropy(Items: 5000000)     |      1.03 |    1058696955.31 |    1028937483.85 |         |\r\n| System.Collections.TryAddGiventSize<String>.Dictionary(Count: 2048)      |      1.03 |        146609.44 |        142806.87 |         |\r\n\r\nMore interesting tests is custom test for entropy https://github.com/dotnet/performance/compare/master...MarcoRossignoli:newbenchdic , ctor diff seems an outlier no code changed there.\r\nMy thoughts, better entropy on mapping function, code is not so different, the difference is not so great also in case of frequent buckets collision(my test is not \"perfect\" I tested only chain with max 2 item for every inserted item)\r\n\r\nI did also some tests with different mapping functions and \"and\" perform better than \"div\" as expected(I don't know if this test have been already done in past), maybe on other PR we could try to measure better inside actual dic if it makes sense.\r\n```cs\r\n   public class Bench\r\n    {\r\n        int[] _buckets;\r\n\r\n        [Params(10, 100, 1_000, 10_000, 50_000, 100_000, 1_000_000)]\r\n        public int Size;\r\n\r\n        [GlobalSetup]\r\n        public void Setup()\r\n        {\r\n            _buckets = new int[Size];\r\n        }\r\n\r\n\r\n        [Benchmark(Baseline = true)]\r\n        public ref int RemainderOp()\r\n        {\r\n            uint hashCode = (uint)Guid.NewGuid().GetHashCode();\r\n            return ref _buckets[hashCode % _buckets.Length];\r\n        }\r\n\r\n        [Benchmark]\r\n        public ref int AndOp()\r\n        {\r\n            uint hashCode = (uint)Guid.NewGuid().GetHashCode();\r\n            return ref _buckets[hashCode & (uint)(_buckets.Length - 1)];\r\n        }\r\n    }\r\n```\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.4, OS=Windows 10.0.17134.590 (1803/April2018Update/Redstone4)\r\nIntel Core i7-3740QM CPU 2.70GHz (Ivy Bridge), 1 CPU, 8 logical and 4 physical cores\r\nFrequency=2628192 Hz, Resolution=380.4897 ns, Timer=TSC\r\n.NET Core SDK=3.0.100-preview-010184\r\n  [Host]     : .NET Core 3.0.0-preview-27324-5 (CoreCLR 4.6.27322.0, CoreFX 4.7.19.7311), 64bit RyuJIT\r\n  DefaultJob : .NET Core 3.0.0-preview-27324-5 (CoreCLR 4.6.27322.0, CoreFX 4.7.19.7311), 64bit RyuJIT\r\n\r\n\r\n```\r\n|      Method |    Size |      Mean |     Error |    StdDev | Ratio | RatioSD |\r\n|------------ |-------- |----------:|----------:|----------:|------:|--------:|\r\n| **RemainderOp** |      **10** | **108.73 ns** | **0.2949 ns** | **0.2759 ns** |  **1.00** |    **0.00** |\r\n|       AndOp |      10 |  96.15 ns | 0.2909 ns | 0.2721 ns |  0.88 |    0.00 |\r\n|             |         |           |           |           |       |         |\r\n| **RemainderOp** |     **100** | **108.29 ns** | **0.1940 ns** | **0.1720 ns** |  **1.00** |    **0.00** |\r\n|       AndOp |     100 |  95.78 ns | 0.3034 ns | 0.2689 ns |  0.88 |    0.00 |\r\n|             |         |           |           |           |       |         |\r\n| **RemainderOp** |    **1000** | **108.89 ns** | **1.0818 ns** | **1.0120 ns** |  **1.00** |    **0.00** |\r\n|       AndOp |    1000 |  96.96 ns | 1.4925 ns | 1.3231 ns |  0.89 |    0.02 |\r\n|             |         |           |           |           |       |         |\r\n| **RemainderOp** |   **10000** | **109.44 ns** | **0.2673 ns** | **0.2369 ns** |  **1.00** |    **0.00** |\r\n|       AndOp |   10000 |  97.62 ns | 1.9298 ns | 1.8051 ns |  0.89 |    0.02 |\r\n|             |         |           |           |           |       |         |\r\n| **RemainderOp** |   **50000** | **110.83 ns** | **0.2706 ns** | **0.2532 ns** |  **1.00** |    **0.00** |\r\n|       AndOp |   50000 |  97.67 ns | 1.9822 ns | 1.8542 ns |  0.88 |    0.02 |\r\n|             |         |           |           |           |       |         |\r\n| **RemainderOp** |  **100000** | **113.69 ns** | **0.7799 ns** | **0.6914 ns** |  **1.00** |    **0.00** |\r\n|       AndOp |  100000 |  96.78 ns | 0.3589 ns | 0.3357 ns |  0.85 |    0.01 |\r\n|             |         |           |           |           |       |         |\r\n| **RemainderOp** | **1000000** | **158.42 ns** | **3.1855 ns** | **6.2879 ns** |  **1.00** |    **0.00** |\r\n|       AndOp | 1000000 | 100.77 ns | 0.5143 ns | 0.4295 ns |  0.66 |    0.02 |\r\n\r\n\r\nI did also work on last point of list \r\n* Eliminate the `_freeCount` field and use `_freeList == -1` as a sentinel instead`\r\n\r\nand the result are not so great, we remove the local var freeCount but after that we use count as a \"real item count\" and it's no more aligned with entries count. This lead to change every piece of code that iterate throught entries using a local `count = _count` (to decrement after every \"valid item\" found, next > -1) . Another issue is that DictionarySlim doesn't support \"versioning\" so I had to change also every enumerator to support current dictionary behaviour(support remove during enumeration). We need also to change code for features like Trim(), EnsureCapacity() that slim one doesn't have.\r\nI'll show result if you want, but the complexity of change it's not worth to me.\r\nSome preview code(not optimized but to understand the complexity) https://github.com/MarcoRossignoli/marcorossignoli.github.io/blob/dicbackporting/src/DicBackportingBenchmark/Dic/Dic/Dictionary.cs#L107 https://github.com/MarcoRossignoli/marcorossignoli.github.io/blob/dicbackporting/src/DicBackportingBenchmark/Dic/Dic/Dictionary.cs#L1610\r\n\r\nThank's for chance to explore dictionary so deeply, very interesting and funny!\r\nI hope I was helpful.\r\n\r\n/cc @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/22832","RelatedDescription":"Open PR \"DictionarySlim backport improvements, retaining more entropy and remove _freeCount\" (#22832)"},{"Id":"414156188","IsPullRequest":true,"CreatedAt":"2019-02-25T15:18:42","Actor":"tannergooding","Number":"22831","RawContent":null,"Title":"Fixing hwintrinsicArm64 to return nullptr for the Base_As intrinsics if featureSimd is false","State":"open","Body":"This resolves https://github.com/dotnet/coreclr/issues/22824\r\n\r\nIt was introduced in https://github.com/dotnet/coreclr/pull/22705 when the base intrinsic support was split into the ARM64/X86 specific files.\r\n\r\nCC. @CarolEidt","Url":"https://github.com/dotnet/coreclr/pull/22831","RelatedDescription":"Open PR \"Fixing hwintrinsicArm64 to return nullptr for the Base_As intrinsics if featureSimd is false\" (#22831)"},{"Id":"414095116","IsPullRequest":true,"CreatedAt":"2019-02-25T13:05:27","Actor":"MichalStrehovsky","Number":"22830","RawContent":null,"Title":"Delete suspicious code in delegate construction","State":"open","Body":"Marking no merge because I would like to at first find out if this breaks anything.\r\n\r\nDelegate construction is trying to do some weird special casing around closed delegates to interface methods that is breaking non-virtual delegates to default interface methods (#22728). The special casing has suspicious comments indicating people didn't know why it's needed in the first place, so I'm going with a theory that it's a cargo cult (e.g. why the reasons specified in the comments don't apply to normal virtual methods?).\r\n\r\nIf this doesn't break anything, I'll add a regression test for the non-virtual DIM and call it good. If it breaks something, the fix is going to be... interesting.","Url":"https://github.com/dotnet/coreclr/pull/22830","RelatedDescription":"Open PR \"Delete suspicious code in delegate construction\" (#22830)"},{"Id":"413975922","IsPullRequest":true,"CreatedAt":"2019-02-25T07:55:05","Actor":"GrabYourPitchforks","Number":"22829","RawContent":null,"Title":"[WIP] Further improve performance of Memory<T>.Span property getter","State":"open","Body":"Working through further experiments with minimizing the overhead of the `{ReadOnly}Memory<T>.Span` property getter. Trying to minimize the number of comparisons performed, minimize the stack space required, and utilize register allocations more effectively.\r\n\r\nResults from an x64 run are below. I didn't perform an x86 run yet.\r\n\r\n|                       Method |     Toolchain |       Mean |     Error |    StdDev | Ratio | RatioSD |\r\n|----------------------------- |-------------- |-----------:|----------:|----------:|------:|--------:|\r\n|  GetSpan_MemOfBytesFromArray |  3.0-preview3 | 1,955.4 us | 26.541 us | 23.528 us |  1.00 |    0.00 |\r\n|  GetSpan_MemOfBytesFromArray | exp. 27423-58 | 1,708.6 us | 12.064 us | 10.074 us |  0.87 |    0.01 |\r\n|                              |               |            |           |           |       |         |\r\n| GetSpan_MemOfBytesFromMemMgr |  3.0-preview3 | 3,132.1 us | 38.245 us | 31.937 us |  1.00 |    0.00 |\r\n| GetSpan_MemOfBytesFromMemMgr | exp. 27423-58 | 4,304.9 us | 50.077 us | 46.842 us |  1.38 |    0.02 |\r\n|                              |               |            |           |           |       |         |\r\n|      GetSpan_MemOfBytesEmpty |  3.0-preview3 | 1,128.9 us |  7.760 us |  6.879 us |  1.00 |    0.00 |\r\n|      GetSpan_MemOfBytesEmpty | exp. 27423-58 |   860.6 us |  5.582 us |  5.222 us |  0.76 |    0.01 |\r\n|                              |               |            |           |           |       |         |\r\n|  GetSpan_MemOfCharsFromArray |  3.0-preview3 | 2,364.8 us | 36.351 us | 32.225 us |  1.00 |    0.00 |\r\n|  GetSpan_MemOfCharsFromArray | exp. 27423-58 | 1,788.2 us | 32.345 us | 27.010 us |  0.76 |    0.02 |\r\n|                              |               |            |           |           |       |         |\r\n| GetSpan_MemOfCharsFromString |  3.0-preview3 | 1,791.3 us | 24.862 us | 23.256 us |  1.00 |    0.00 |\r\n| GetSpan_MemOfCharsFromString | exp. 27423-58 | 1,642.9 us | 12.501 us | 11.694 us |  0.92 |    0.01 |\r\n|                              |               |            |           |           |       |         |\r\n| GetSpan_MemOfCharsFromMemMgr |  3.0-preview3 | 3,152.8 us | 23.027 us | 21.540 us |  1.00 |    0.00 |\r\n| GetSpan_MemOfCharsFromMemMgr | exp. 27423-58 | 4,573.2 us | 64.132 us | 59.989 us |  1.45 |    0.02 |\r\n|                              |               |            |           |           |       |         |\r\n|      GetSpan_MemOfCharsEmpty |  3.0-preview3 | 1,427.8 us | 11.145 us |  8.701 us |  1.00 |    0.00 |\r\n|      GetSpan_MemOfCharsEmpty | exp. 27423-58 |   923.9 us | 18.260 us | 16.187 us |  0.65 |    0.01 |\r\n\r\nCodegen for the x64 implementation of the `ReadOnlyMemory<char>.Span` property getter is also around 20% smaller: 118 bytes before, 95 bytes after.\r\n\r\nThe regression in the _from `MemoryManager<T>`_ runs isn't surprising due to the extra call now required here. This was a deliberate trade-off: if `MemoryManager<T>` usage is expected to be rare, deprioritize it and optimize the codegen for the more common cases. Since we already made improvements in this code path between 2.1 and 3.0 (see https://github.com/dotnet/coreclr/pull/20386), we're still within around 5% of the 2.1 performance numbers.\r\n\r\nMarked WIP because it's not fully implemented (haven't touched `Memory<T>.Span` yet) or tested.","Url":"https://github.com/dotnet/coreclr/pull/22829","RelatedDescription":"Open PR \"[WIP] Further improve performance of Memory<T>.Span property getter\" (#22829)"},{"Id":"413949964","IsPullRequest":false,"CreatedAt":"2019-02-25T06:17:04","Actor":"sunnycase","Number":"22828","RawContent":null,"Title":"Segmentation fault on Linux with .Net Core 3.0 preview2","State":"open","Body":"Reference: https://github.com/SixLabors/ImageSharp/issues/844\r\n\r\n### Description\r\nResize a image from 320x240 to 128x128 cause segmentation fault on Ubuntu. It runs fine on Windows.\r\nAnd I have tested it using .Net Core 2.0, it runs fine on Ubuntu and Windows.\r\n\r\n### Steps to Reproduce\r\n1. Clone this repo: https://github.com/sunnycase/imagesharp-issue\r\n2. Run dotnet publish -c Release -r linux-x64\r\n3. cd to bin/Release/linux-x64/publish\r\n4. Run `./imagesharp-issue`\r\n\r\n### System Configuration\r\nUbuntu 18.04 on WSL\r\n\r\n- ImageSharp version: 1.0.0-beta0006\r\n- Other ImageSharp packages and versions: N/A\r\n- Environment (Operating system, version and so on): Ubuntu 18.04 on WSL\r\n- .NET Framework version: dotnet core 3.0 preview2\r\n- Additional information:\r\n\r\nCode backup\r\n```c#\r\nusing (var image = Image.Load<Rgb24>(typeof(Program).Assembly.GetManifestResourceStream(\"imagesharp_issue.0.jpg\")))\r\n{\r\n    image.Mutate(x =>\r\n        x.Resize(128, 128));\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22828","RelatedDescription":"Open issue \"Segmentation fault on Linux with .Net Core 3.0 preview2\" (#22828)"},{"Id":"413907333","IsPullRequest":false,"CreatedAt":"2019-02-25T02:31:47","Actor":"VincentBu","Number":"22827","RawContent":null,"Title":"[arm64] System.TypeLoadException","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_corefx_jitstressregs0x10_tst/23/\r\n\r\n**Log:**\r\n```\r\nDiscovering: System.Diagnostics.EventLog.Tests (method display = ClassAndMethod, method display options = None)\r\nSystem.TypeLoadException: Could not load type 'System.Diagnostics.Tests.Helpers' from assembly 'System.Diagnostics.EventLog.Tests, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22827","RelatedDescription":"Open issue \"[arm64] System.TypeLoadException\" (#22827)"},{"Id":"413903116","IsPullRequest":false,"CreatedAt":"2019-02-25T02:07:42","Actor":"VincentBu","Number":"22826","RawContent":null,"Title":"[arm64] Test failed: tracing_eventsource._eventpipeandetw_eventpipeandetw_eventpipeandetw_._eventpipeandetw_eventpipeandetw_eventpipeandetw_cmd","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_gcstress0xc_minopts_heapverify1_tst/53/\r\n\r\n**Failed tests:**\r\ntracing_eventsource._eventpipeandetw_eventpipeandetw_eventpipeandetw_._eventpipeandetw_eventpipeandetw_eventpipeandetw_cmd\r\n\r\n**Log:**\r\n```\r\ntracing_eventsource._eventpipeandetw_eventpipeandetw_eventpipeandetw_._eventpipeandetw_eventpipeandetw_eventpipeandetw_cmd [FAIL]\r\n        \r\n  Unhandled Exception: System.InvalidOperationException: Bad PE Header.\r\n           at PEFile.PEHeader..ctor(Void* startOfPEFile)\r\n           at PEFile.PEFile..ctor(String filePath)\r\n           at Microsoft.Diagnostics.Tracing.Session.TraceEventProviderOptions.get_FilteringSupported()\r\n           at Microsoft.Diagnostics.Tracing.Session.TraceEventSession.EnableProvider(Guid providerGuid, TraceEventLevel providerLevel, UInt64 matchAnyKeywords, TraceEventProviderOptions options)\r\n           at Microsoft.Diagnostics.Tracing.Session.TraceEventSession.EnableProvider(String providerName, TraceEventLevel providerLevel, UInt64 matchAnyKeywords, TraceEventProviderOptions options)\r\n           at Tracing.Tests.EventPipeAndEtw.EnableETW(EventSource eventSource, EventKeywords keywords, String outputFile) in D:\\j\\workspace\\arm64_cross_c---0aaef436\\tests\\src\\tracing\\eventsource\\eventpipeandetw\\EventPipeAndEtw.cs:line 116\r\n           at Tracing.Tests.EventPipeAndEtw.RoundOne(String[] args) in D:\\j\\workspace\\arm64_cross_c---0aaef436\\tests\\src\\tracing\\eventsource\\eventpipeandetw\\EventPipeAndEtw.cs:line 148\r\n           at Tracing.Tests.EventPipeAndEtw.Main(String[] args) in D:\\j\\workspace\\arm64_cross_c---0aaef436\\tests\\src\\tracing\\eventsource\\eventpipeandetw\\EventPipeAndEtw.cs:line 290\r\n  \r\n  Return code:      1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22826","RelatedDescription":"Open issue \"[arm64] Test failed: tracing_eventsource._eventpipeandetw_eventpipeandetw_eventpipeandetw_._eventpipeandetw_eventpipeandetw_eventpipeandetw_cmd\" (#22826)"},{"Id":"413902477","IsPullRequest":false,"CreatedAt":"2019-02-25T02:03:02","Actor":"VincentBu","Number":"22824","RawContent":null,"Title":"Assertion failed 'featureSIMD' ","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_jitnosimd_tst/59/\r\n\r\n**Failed tests:**\r\nbaseservices_compilerservices._modulector_runmoduleconstructor_runmoduleconstructor_._modulector_runmoduleconstructor_runmoduleconstructor_cmd\r\n\r\n**Log:**\r\n```\r\nbaseservices_compilerservices._modulector_runmoduleconstructor_runmoduleconstructor_._modulector_runmoduleconstructor_runmoduleconstructor_cmd [FAIL]\r\n        \r\n        Assert failure(PID 12496 [0x000030d0], Thread: 7956 [0x1f14]): Assertion failed 'featureSIMD' in 'System.SpanHelpers:IndexOf(byref,ubyte,int):int' (IL size 1166)\r\n        \r\n            File: d:\\j\\workspace\\arm64_cross_c---0aaef436\\src\\jit\\simd.cpp Line: 124\r\n            Image: C:\\j\\workspace\\arm64_cross_c---5ab754b1\\bin\\tests\\Windows_NT.arm64.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n  Return code:      1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22824","RelatedDescription":"Open issue \"Assertion failed 'featureSIMD' \" (#22824)"},{"Id":"413901930","IsPullRequest":false,"CreatedAt":"2019-02-25T01:59:38","Actor":"AriNuer","Number":"22823","RawContent":null,"Title":"[arm64\\linux] error : setlocale: LC_ALL: cannot change locale (en_US.UTF-8)","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_baseline/151/\r\n\r\n**Failed log:**\r\n```\r\nbash : error : setlocale: LC_ALL: cannot change locale (en_US.UTF-8) [/mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/tempHome/.nuget/packages/microsoft.dotnet.arcade.sdk/1.0.0-beta.19121.4/tools/Tools.proj]\r\nbash : error : setlocale: LC_ALL: cannot change locale (en_US.UTF-8) [/mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/Native/build-native.proj]\r\nbash : error : setlocale: LC_ALL: cannot change locale (en_US.UTF-8) [/mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/Native/build-native.proj]\r\nbash : error : setlocale: LC_ALL: cannot change locale (en_US.UTF-8) [/mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/Native/build-native.proj]\r\n/bin/bash : error : setlocale: LC_ALL: cannot change locale (en_US.UTF-8) [/mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/Native/build-native.proj]\r\n    0 Warning(s)\r\n    5 Error(s)\r\n\r\nTime Elapsed 00:09:11.12\r\nBuild failed (exit code '1').\r\n[/mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/tests/scripts/run-corefx-tests.py]: Error: exit code 256\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22823","RelatedDescription":"Open issue \"[arm64\\linux] error : setlocale: LC_ALL: cannot change locale (en_US.UTF-8)\" (#22823)"},{"Id":"413882672","IsPullRequest":true,"CreatedAt":"2019-02-24T23:26:04","Actor":"marek-safar","Number":"22822","RawContent":null,"Title":"Yield Assembly::DefinedTypes without additional array cache","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22822","RelatedDescription":"Open PR \"Yield Assembly::DefinedTypes without additional array cache\" (#22822)"},{"Id":"413867059","IsPullRequest":true,"CreatedAt":"2019-02-24T20:56:10","Actor":"am11","Number":"22821","RawContent":null,"Title":"Fix comparison and narrowing errors reported by GCC","State":"open","Body":"Contributes to: #22684","Url":"https://github.com/dotnet/coreclr/pull/22821","RelatedDescription":"Open PR \"Fix comparison and narrowing errors reported by GCC\" (#22821)"},{"Id":"413836649","IsPullRequest":false,"CreatedAt":"2019-02-24T16:00:07","Actor":"ayende","Number":"22820","RawContent":null,"Title":"Access Violation on x86","State":"open","Body":"We have a scenario in which we are getting an access violation exception during a particular load in our system.\r\nI have a full dump of the process when the crash happened, available here:\r\nhttps://drive.google.com/file/d/11oqZaegxKcoNT8Xj1u9YDIcH7LcmMBsW/view?usp=sharing\r\n\r\nThe scenario we have is a few servers running and communicating with one another on the same process.\r\nThis is part of our test setup. We recently started seeing hard failures, such as this one: `(d2c.3390): Access violation - code c0000005 (first chance)`\r\n\r\nThe event log reports:\r\n\r\n```\r\nApplication: dotnet.exe\r\nCoreCLR Version: 4.6.27317.3\r\nDescription: The process was terminated due to an internal error in the .NET Runtime at IP 5A29AA9B (5A230000) with exit code 80131506.\r\n\r\n\r\nFaulting application name: dotnet.exe, version: 2.1.27130.1, time stamp: 0x5c007ea0\r\nFaulting module name: coreclr.dll, version: 4.6.27317.3, time stamp: 0x5c40c18e\r\nException code: 0xc0000005\r\nFault offset: 0x0006aa9b\r\nFaulting process id: 0x52d4\r\nFaulting application start time: 0x01d4cc3f7d83fa59\r\nFaulting application path: C:\\Program Files (x86)\\dotnet\\dotnet.exe\r\nFaulting module path: C:\\Users\\ayende\\.nuget\\packages\\runtime.win-x86.microsoft.netcore.app\\2.1.8\\runtimes\\win-x86\\native\\coreclr.dll\r\nReport Id: ff99edfe-baf1-431a-9ce3-06e987219e6c\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n\r\nThis machine has the following hot fixes applies:\r\n\r\n```\r\nPS C:\\Windows\\SysWOW64> Get-HotFix\r\n\r\nSource        Description      HotFixID      InstalledBy          InstalledOn\r\n------        -----------      --------      -----------          -----------\r\nOREN-PC       Update           KB4100347     NT AUTHORITY\\SYSTEM  2/18/2019 12:00:00 AM\r\nOREN-PC       Update           KB4343669     NT AUTHORITY\\SYSTEM  7/11/2018 12:00:00 AM\r\nOREN-PC       Update           KB4456655     NT AUTHORITY\\SYSTEM  9/13/2018 12:00:00 AM\r\nOREN-PC       Security Update  KB4465663     NT AUTHORITY\\SYSTEM  11/14/2018 12:00:00 AM\r\nOREN-PC       Security Update  KB4471331     NT AUTHORITY\\SYSTEM  12/6/2018 12:00:00 AM\r\nOREN-PC       Security Update  KB4477137     NT AUTHORITY\\SYSTEM  12/12/2018 12:00:00 AM\r\nOREN-PC       Security Update  KB4480979     NT AUTHORITY\\SYSTEM  1/9/2019 12:00:00 AM\r\nOREN-PC       Security Update  KB4485449     NT AUTHORITY\\SYSTEM  2/19/2019 12:00:00 AM\r\nOREN-PC       Security Update  KB4487038     NT AUTHORITY\\SYSTEM  2/19/2019 12:00:00 AM\r\nOREN-PC       Security Update  KB4480966     HRHINOS\\Ayende       2/21/2019 12:00:00 AM\r\nOREN-PC       Security Update  KB4487017\r\n```\r\n\r\nThe actual stack we are seeing is always something similar to:\r\n\r\n```\r\n0:043> kp\r\n # ChildEBP RetAddr  \r\n00 (Inline) -------- coreclr!VolatileLoad+0x3 [e:\\a\\_work\\335\\s\\src\\inc\\volatile.h @ 153] \r\n01 (Inline) -------- coreclr!Volatile<unsigned long>::Load+0x3 [e:\\a\\_work\\335\\s\\src\\inc\\volatile.h @ 292] \r\n02 (Inline) -------- coreclr!Volatile<unsigned long>::operator unsigned long+0x3 [e:\\a\\_work\\335\\s\\src\\inc\\volatile.h @ 346] \r\n03 (Inline) -------- coreclr!RelativePointer<Module *>::GetValue+0x3 [e:\\a\\_work\\335\\s\\src\\inc\\fixuppointer.h @ 68] \r\n04 (Inline) -------- coreclr!RelativePointer<Module *>::GetValueAtPtr+0x3 [e:\\a\\_work\\335\\s\\src\\inc\\fixuppointer.h @ 85] \r\n05 (Inline) -------- coreclr!ReadPointer+0x3 [e:\\a\\_work\\335\\s\\src\\inc\\fixuppointer.h @ 954] \r\n06 (Inline) -------- coreclr!ReadPointer+0x3 [e:\\a\\_work\\335\\s\\src\\inc\\fixuppointer.h @ 954] \r\n07 (Inline) -------- coreclr!MethodTable::GetLoaderModule+0x3 [e:\\a\\_work\\335\\s\\src\\vm\\methodtable.inl @ 176] \r\n08 (Inline) -------- coreclr!MethodTable::GetLoaderAllocator+0x3 [e:\\a\\_work\\335\\s\\src\\vm\\methodtable.inl @ 182] \r\n09 0e60d0a0 5a299c42 coreclr!VirtualCallStubManager::ResolveWorker(struct StubCallSite * pCallSite = 0x0e60d13c, class Object ** protectedObj = 0x0e60d180, struct DispatchToken token = struct DispatchToken, VirtualCallStubManager::StubKind stubKind = SK_DISPATCH (0n2))+0x6b [e:\\a\\_work\\335\\s\\src\\vm\\virtualcallstub.cpp @ 1719] \r\n0a 0e60d168 5a34a26b coreclr!VSD_ResolveWorker(struct TransitionBlock * pTransitionBlock = 0x0e60d17c, unsigned long siteAddrForRegisterIndirect = 0, unsigned int token = 0xa0000)+0x24f [e:\\a\\_work\\335\\s\\src\\vm\\virtualcallstub.cpp @ 1611] \r\n0b 0e60d190 0e995fca coreclr!ResolveWorkerAsmStub(void)+0x1b [e:\\a\\_work\\335\\s\\src\\vm\\i386\\virtualcallstubcpu.hpp @ 525] \r\nWARNING: Frame IP not in any known module. Following frames may be wrong.\r\n0c 0e60d194 5a33afeb 0xe995fca\r\n0d 0e60d1a8 5a47fc7f coreclr!CallJitEHFinallyHelper(void)+0x28 [E:\\A\\_work\\335\\s\\src\\vm\\i386\\asmhelpers.asm @ 390] \r\n0e 0e60d200 5a3a2acc coreclr!CallJitEHFinally(class CrawlFrame * pCf = 0x43a07fdc, unsigned char * startPC = <Value unavailable error>, struct EE_ILEXCEPTION_CLAUSE * EHClausePtr = 0x0e60d260, unsigned long nestingLevel = 0)+0xb8 [e:\\a\\_work\\335\\s\\src\\vm\\i386\\excepx86.cpp @ 3385] \r\n0f 0e60d2d0 5a249cf5 coreclr!COMPlusUnwindCallback+0x15a70c [e:\\a\\_work\\335\\s\\src\\vm\\i386\\excepx86.cpp @ 2996] \r\n10 (Inline) -------- coreclr!Thread::MakeStackwalkerCallback+0x151 [e:\\a\\_work\\335\\s\\src\\vm\\stackwalk.cpp @ 877] \r\n11 0e60d59c 5a2525c1 coreclr!Thread::StackWalkFramesEx(struct REGDISPLAY * pRD = 0x0e60d5c8, <function> * pCallback = 0x0ddb401c, void * pData = 0x0e60d954, unsigned int flags = 4, class Frame * pStartFrame = 0x00000000)+0x1d4 [e:\\a\\_work\\335\\s\\src\\vm\\stackwalk.cpp @ 958] \r\n12 0e60d8d0 5a251f60 coreclr!Thread::StackWalkFrames(<function> * pCallback = 0x5a2483c0, void * pData = 0x0e60d954, unsigned int flags = 4, class Frame * pStartFrame = 0x00000000)+0xa1 [e:\\a\\_work\\335\\s\\src\\vm\\stackwalk.cpp @ 1042] \r\n13 0e60d8f0 5a252a52 coreclr!UnwindFrames(class Thread * pThread = 0x0ddb3ea8, struct ThrowCallbackType * tct = 0x0e60d954)+0x3e [e:\\a\\_work\\335\\s\\src\\vm\\excep.cpp @ 2228] \r\n14 (Inline) -------- coreclr!COMPlusAfterUnwind+0x98 [e:\\a\\_work\\335\\s\\src\\vm\\i386\\excepx86.cpp @ 482] \r\n15 0e60db48 5a2512fa coreclr!CPFH_RealFirstPassHandler(struct _EXCEPTION_RECORD * pExceptionRecord = 0x0e60dcb0, struct _EXCEPTION_REGISTRATION_RECORD * pEstablisherFrame = <Value unavailable error>, struct _CONTEXT * pContext = 0x0e60dd00, int bAsynchronousThreadStop = 0n0)+0x459 [e:\\a\\_work\\335\\s\\src\\vm\\i386\\excepx86.cpp @ 1263] \r\n16 0e60db88 5a250ef3 coreclr!CPFH_FirstPassHandler(struct _EXCEPTION_RECORD * pExceptionRecord = 0x0e60dcb0, struct _EXCEPTION_REGISTRATION_RECORD * pEstablisherFrame = 0x0e60e650, struct _CONTEXT * pContext = 0x0e60dd00)+0xc3 [e:\\a\\_work\\335\\s\\src\\vm\\i386\\excepx86.cpp @ 1401] \r\n17 0e60dbac 7772f1a2 coreclr!COMPlusFrameHandler(struct _EXCEPTION_RECORD * pExceptionRecord = 0x0e60dcb0, struct _EXCEPTION_REGISTRATION_RECORD * pEstablisherFrame = 0x0e60e650, struct _CONTEXT * pContext = 0x0e60dd00, struct _DISPATCHER_CONTEXT * pDispatcherContext = 0x0e60dc38)+0x83 [e:\\a\\_work\\335\\s\\src\\vm\\i386\\excepx86.cpp @ 1821] \r\n18 0e60dbd0 7772f174 ntdll!ExecuteHandler2+0x26\r\n19 0e60dc98 7771cd86 ntdll!ExecuteHandler+0x24\r\n1a 0e60dc98 76f21812 ntdll!KiUserExceptionDispatcher+0x26\r\n1b 0e60e1bc 5a252d94 KERNELBASE!RaiseException+0x62\r\n1c 0e60e264 5a3248fb coreclr!RaiseTheExceptionInternalOnly(class Object * throwable = <Value unavailable error>, int rethrow = <Value unavailable error>, int fForStackOverflow = 0n0)+0x11d [e:\\a\\_work\\335\\s\\src\\vm\\excep.cpp @ 3039] \r\n1d 0e60e32c 2ed2b3e4 coreclr!IL_Throw(class Object * obj = <Value unavailable error>)+0x11b [e:\\a\\_work\\335\\s\\src\\vm\\jithelpers.cpp @ 4860] \r\n1e 0e60e33c 0e3bd604 0x2ed2b3e4\r\n1f 0e60e354 0e99a747 0xe3bd604\r\n20 0e60e384 0e999f92 0xe99a747\r\n21 0e60e3b0 0eecd3c9 0xe999f92\r\n22 0e60e400 0e995ad1 0xeecd3c9\r\n23 0e60e578 0e9934e6 0xe995ad1\r\n24 0e60e5b0 0c3c7770 0xe9934e6\r\n25 0e60e5d8 593868dd 0xc3c7770\r\n26 0e60e5f4 59cfa31d System_Threading_Thread+0x68dd\r\n27 0e60e624 59cfc0cc System_Private_CoreLib+0x4ca31d\r\n28 0e60e638 5a33b0ef System_Private_CoreLib+0x4cc0cc\r\n29 0e60e644 5a26fbf1 coreclr!CallDescrWorkerInternal(unsigned long pParams = 0xe60e6b8)+0x34 [E:\\A\\_work\\335\\s\\src\\vm\\i386\\asmhelpers.asm @ 618] \r\n2a (Inline) -------- coreclr!CallDescrWorkerWithHandler+0x52 [e:\\a\\_work\\335\\s\\src\\vm\\callhelpers.cpp @ 78] \r\n2b 0e60e6e4 5a32d4e4 coreclr!MethodDescCallSite::CallTargetWorker(unsigned int64 * pArguments = 0x0e60e730, unsigned int64 * pReturnValue = 0x00000000, int cbReturnValue = 0n0)+0x235 [e:\\a\\_work\\335\\s\\src\\vm\\callhelpers.cpp @ 620] \r\n2c 0e60e7bc 5a342b06 coreclr!ThreadNative::KickOffThread_Worker(void * ptr = 0x0e60e948)+0x104 [e:\\a\\_work\\335\\s\\src\\vm\\comsynchronizable.cpp @ 260] \r\n2d 0e60e7d4 5a26f86a coreclr!ManagedThreadBase_DispatchInner(struct ManagedThreadCallState * pCallState = <Value unavailable error>)+0x70 [e:\\a\\_work\\335\\s\\src\\vm\\threads.cpp @ 8852] \r\n2e 0e60e880 5a26f7bb coreclr!ManagedThreadBase_DispatchMiddle(struct ManagedThreadCallState * pCallState = <Value unavailable error>)+0x65 [e:\\a\\_work\\335\\s\\src\\vm\\threads.cpp @ 8902] \r\n2f 0e60e8e4 5a3352b9 coreclr!ManagedThreadBase_DispatchOuter(struct ManagedThreadCallState * pCallState = 0x0e60e8ec)+0x78 [e:\\a\\_work\\335\\s\\src\\vm\\threads.cpp @ 9161] \r\n30 0e60e908 5a2d9e7c coreclr!ManagedThreadBase_FullTransitionWithAD(struct ADID pAppDomain = struct ADID, <function> * pTarget = <Value unavailable error>, void * args = <Value unavailable error>, UnhandledExceptionLocation filterType = ManagedThread (0n2))+0x2f [e:\\a\\_work\\335\\s\\src\\vm\\threads.cpp @ 9200] \r\n31 (Inline) -------- coreclr!ManagedThreadBase::KickOff+0x15 [e:\\a\\_work\\335\\s\\src\\vm\\threads.cpp @ 9234] \r\n32 0e60e984 5a2d9d90 coreclr!ThreadNative::KickOffThread(void * pass = 0x0ad364d0)+0xcc [e:\\a\\_work\\335\\s\\src\\vm\\comsynchronizable.cpp @ 380] \r\n33 0e60f824 76388484 coreclr!Thread::intermediateThreadProc(void * arg = 0x0abac020)+0x50 [e:\\a\\_work\\335\\s\\src\\vm\\threads.cpp @ 2255] \r\n34 0e60f838 77713ab8 KERNEL32!BaseThreadInitThunk+0x24\r\n35 0e60f880 77713a88 ntdll!__RtlUserThreadStart+0x2f\r\n36 0e60f890 00000000 ntdll!_RtlUserThreadStart+0x1b\r\n```\r\n\r\nThe managed stack, FWIW, is:\r\n\r\n```\r\n0:043> !clrstack\r\nOS Thread Id: 0x3390 (43)\r\nChild SP       IP Call Site\r\n0e60d0d8 5a29aa9b [GCFrame: 0e60d0d8] \r\n0e60d118 5a29aa9b [StubDispatchFrame: 0e60d118] System.IDisposable.Dispose()\r\n0e60d198 0e995fca Raven.Server.Rachis.FollowerAmbassador.Run()\r\n0e60e580 0e9934e6 Raven.Server.Rachis.FollowerAmbassador.b__58_0(System.Object)\r\n0e60e584 0c3c8000 Raven.Server.Utils.PoolOfThreads+PooledThread.DoWork()\r\n0e60e5b8 0c3c7770 Raven.Server.Utils.PoolOfThreads+PooledThread.Run()\r\n0e60e5e0 593868dd System.Threading.Thread.ThreadMain_ThreadStart() [E:\\A\\_work\\321\\s\\corefx\\src\\System.Threading.Thread\\src\\System\\Threading\\Thread.cs @ 93]\r\n0e60e5e8 59cfc00c System.Threading.ThreadHelper.ThreadStart_Context(System.Object) [E:\\A\\_work\\335\\s\\src\\mscorlib\\src\\System\\Threading\\Thread.cs @ 62]\r\n0e60e5fc 59cfa31d System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object) [E:\\A\\_work\\335\\s\\src\\mscorlib\\shared\\System\\Threading\\ExecutionContext.cs @ 167]\r\n0e60e630 59cfc0cc System.Threading.ThreadHelper.ThreadStart() [E:\\A\\_work\\335\\s\\src\\mscorlib\\src\\System\\Threading\\Thread.cs @ 91]\r\n0e60e718 5a33b0ef [GCFrame: 0e60e718] \r\n0e60e8a8 5a33b0ef [DebuggerU2MCatchHandlerFrame: 0e60e8a8] \r\n```\r\n\r\nWe are using unsafe code, but we are pretty sure that we aren't corrupting the heap in any manner (lots of tests cover that) and if we were, I would expect to see the failure in different locations.\r\n\r\nFrom trying to figure out what is going on, a few really strange things seem to be happening here:\r\n\r\nHere is the actual failure:\r\n\r\n```\r\nFAULTING_IP: \r\nKERNELBASE!RaiseException+62\r\n76f21812 8b4c2454        mov     ecx,dword ptr [esp+54h]\r\n```\r\n\r\nAnd the full register usage is:\r\n\r\n```\r\n(d2c.3390): Access violation - code c0000005 (first chance)\r\nFirst chance exceptions are reported before any exception handling.\r\nThis exception may be expected and handled.\r\neax=00000000 ebx=00e527a0 ecx=00000010 edx=15554140 esi=5a339280 edi=00e527a0\r\neip=5a29aa9b esp=0e60ce44 ebp=0e60d0a0 iopl=0         nv up ei pl zr na pe nc\r\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246\r\n```\r\n\r\nAs you can see, the `esp` value has a non null value, but checking the memory location with the offset provided to the instruction shows just zeros.\r\n\r\nWhile troubleshooting this, we found a `NullReferenceException` in our code. We fixed it, but that made the problem go away. \r\nWe suspect that this is some issue related to error handling inside the CoreCLR during JIT generation.\r\nWe have run into a different issue with KB4487017 (See: https://github.com/dotnet/coreclr/issues/22597), but we are reproducing this on different versions of Windows and without the KB in question.\r\n\r\nWe aren't able to reproduce this issue in 64 bits.\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/22820","RelatedDescription":"Open issue \"Access Violation on x86\" (#22820)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"414370629","IsPullRequest":false,"CreatedAt":"2019-02-26T00:20:11","Actor":"peterhuene","Number":"10879","RawContent":null,"Title":"Re-enable latest runtime for self-contained publish tests.","State":"open","Body":"This issue is tracking the re-enabling of the tests in `test/EndToEnd/GivenSelfContainedAppsRollForward.cs`.\r\n\r\nThese are being disabled so that orchestrated servicing builds can bump these versions without having to order the builds so that they produce the unreleased shared frameworks for the previous versions and publish them to a place discoverable by the tests.\r\n\r\nWe need to figure out how to replicate these checks in an automated fashion.  Until then, we'll be increasing the priority of this test scenario with the test team.","Url":"https://github.com/dotnet/cli/issues/10879","RelatedDescription":"Open issue \"Re-enable latest runtime for self-contained publish tests.\" (#10879)"},{"Id":"413624894","IsPullRequest":true,"CreatedAt":"2019-02-25T16:47:03","Actor":"dotnet-bot","Number":"10870","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10870","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#10870)"},{"Id":"413624882","IsPullRequest":true,"CreatedAt":"2019-02-25T16:45:45","Actor":"dotnet-bot","Number":"10869","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10869","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10869)"},{"Id":"413820347","IsPullRequest":true,"CreatedAt":"2019-02-25T13:46:08","Actor":"dotnet-maestro[bot]","Number":"10874","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19124.1\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19125.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10874","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser\" (#10874)"},{"Id":"414110202","IsPullRequest":true,"CreatedAt":"2019-02-25T13:41:35","Actor":"dotnet-maestro[bot]","Number":"10878","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19124.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10878","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#10878)"},{"Id":"414080549","IsPullRequest":false,"CreatedAt":"2019-02-25T12:26:28","Actor":"loop-evgeny","Number":"10877","RawContent":null,"Title":"Creating a self-contained executable with dotnet publish -r ignores umask and marks libraries as executable (chmod +x)","State":"open","Body":"## Steps to reproduce\r\n\r\n```\r\numask 0022\r\ndotnet publish -r linux-x64 -o test-publish\r\n```\r\n\r\n## Expected  behavior\r\n1. The libraries copied to the publish output directories are not executable (don't have the +x mode set). Only executable files (e.g. createdump and the project executable) have +x set.\r\n2. File permissions follow the user's umask. E.g.\r\n\r\n-rwxr-xr-x  1 root    root       82152 Jun 14  2018 createdump*\r\n-rw-r--r--  1 root    root      221184 Mar  8  2017 log4net.dll*\r\n-rw-r--r--  1 root    root        6656 Jun 14  2018 System.Security.dll*\r\n\r\n## Actual behavior\r\n1. Both .NET Core runtime and NuGet package DLLs and .so files are executable.\r\n2. All these files are also other-writable. Eg.\r\n\r\n-rwxrw-rw-  1 root    root       82152 Jun 14  2018 createdump*\r\n-rwxrw-rw-  1 root    root      221184 Mar  8  2017 log4net.dll*\r\n-rwxrw-rw-  1 root    root        6656 Jun 14  2018 System.Security.dll*\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.504\r\n Commit:    91e160c7f0\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.504/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.8\r\n  Commit:  209f8aa25c\r\n\r\n.NET Core SDKs installed:\r\n  2.1.504 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/cli/issues/10877","RelatedDescription":"Open issue \"Creating a self-contained executable with dotnet publish -r ignores umask and marks libraries as executable (chmod +x)\" (#10877)"},{"Id":"413882032","IsPullRequest":true,"CreatedAt":"2019-02-24T23:55:16","Actor":"dotnet-maestro[bot]","Number":"10876","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview3.19124.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10876","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#10876)"},{"Id":"413479291","IsPullRequest":false,"CreatedAt":"2019-02-24T19:21:24","Actor":"aateeque","Number":"10865","RawContent":null,"Title":"Incorrect sdk selected","State":"closed","Body":"## Steps to reproduce\r\nCreate a new dotnet app from CLI\r\n\r\n```\r\nD:\\>mkdir a & cd a\r\n\r\nD:\\a>dotnet new webapp\r\nThe template \"ASP.NET Core Web App\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on D:\\a\\a.csproj...\r\nC:\\Program Files\\dotnet\\sdk\\2.1.104\\sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(135,5): error : The current .NET SDK d\r\noes not support targeting .NET Core 2.2.  Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.2. [D:\\a\\a.\r\ncsproj]\r\n\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n```\r\n\r\n## Expected  behavior\r\nShould work just fine; there is __no__ _global.json_ in D:\\\r\n\r\n\r\n## Actual behavior\r\nReports missing SDK\r\n\r\n\r\n## Environment data\r\n```\r\n`dotnet --info` output:\r\nD:\\>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.104\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10865","RelatedDescription":"Closed issue \"Incorrect sdk selected\" (#10865)"},{"Id":"412906588","IsPullRequest":false,"CreatedAt":"2019-02-24T18:37:44","Actor":"shai-glat","Number":"10861","RawContent":null,"Title":"Creating nuget package using dotnet pack command and <NuspecFile> tag creates a package targeting .Net Framework","State":"closed","Body":"## Steps to reproduce\r\n1. Create a csproj and generated a nuget package from it - works as expected\r\n2. Open the package and take out the generated nuspec file.\r\n3. Add the following tag to csproj:\r\n`\t<PropertyGroup>\r\n\t\t<NuspecFile>nuspec\\MyProj.nuspec</NuspecFile>\r\n\t</PropertyGroup>\r\n`\r\n4. Add the `files` tag to nuspec file as follows:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n..... (unmodified)\r\n  </metadata>\r\n\t<files>\r\n\t\t<file src=\"<Path>/MyProj.dll\" target=\"lib\" />\r\n\t\t<file src=\"<Path>/OtherFile.dll\" target=\"lib\" />\r\n\t</files>\r\n</package>\r\n```\r\n5. run `dotnet pack MyProj.csproj -o out /p:Version=1.0.1`\r\n## Expected  behavior\r\nGenerated package is a valid .NET Core package\r\n\r\n## Actual behavior\r\nPackage contents are all .NET Core dlls, but when adding the package visual studio it states the package was restored using .NetFramework 4.6 instead of .Net Core 2.1\r\n\r\n## Environment data\r\n`dotnet --info` output: \r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n## Additional notes\r\nI had the same problem when adding NuspecFile via dotnet CLI, as well as when i started with an empty nuspec file and simply added the files tag as stated above","Url":"https://github.com/dotnet/cli/issues/10861","RelatedDescription":"Closed issue \"Creating nuget package using dotnet pack command and <NuspecFile> tag creates a package targeting .Net Framework\" (#10861)"},{"Id":"413823025","IsPullRequest":true,"CreatedAt":"2019-02-24T14:10:25","Actor":"dotnet-maestro[bot]","Number":"10875","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19123.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10875","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#10875)"},{"Id":"413760631","IsPullRequest":true,"CreatedAt":"2019-02-24T00:16:06","Actor":"thomasgassmann","Number":"10873","RawContent":null,"Title":"add --no-solution-folders flag to dotnet sln add","State":"open","Body":"Closes #10427\r\n\r\nAdds the `--no-solution-folders` flag to the `dotnet sln add` command. ","Url":"https://github.com/dotnet/cli/pull/10873","RelatedDescription":"Open PR \"add --no-solution-folders flag to dotnet sln add\" (#10873)"},{"Id":"413694802","IsPullRequest":true,"CreatedAt":"2019-02-23T16:11:51","Actor":"dotnet-maestro[bot]","Number":"10872","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19123.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10872","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser\" (#10872)"},{"Id":"413628582","IsPullRequest":true,"CreatedAt":"2019-02-23T01:01:54","Actor":"dotnet-maestro[bot]","Number":"10871","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview3.19121.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10871","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#10871)"},{"Id":"413546931","IsPullRequest":true,"CreatedAt":"2019-02-23T00:45:12","Actor":"peterhuene","Number":"10866","RawContent":null,"Title":"[WIP] Bump the patch versions for 1.x.","State":"closed","Body":"This is a test PR for now.","Url":"https://github.com/dotnet/cli/pull/10866","RelatedDescription":"Closed or merged PR \"[WIP] Bump the patch versions for 1.x.\" (#10866)"},{"Id":"413274666","IsPullRequest":false,"CreatedAt":"2019-02-22T23:52:43","Actor":"KevinRansom","Number":"10864","RawContent":null,"Title":"Build behavior change between 2.1.403 and 3.0.100-preview-010000","State":"closed","Body":"On version: 2.1.403\r\n\r\nThis project builds correctly:  https://github.com/Microsoft/visualfsharp/blob/master/src/buildtools/buildtools.proj\r\n\r\nc:\\kevinransom\\visualfsharp\\fcs>dotnet build ..\\src\\buildtools\\buildtools.proj\r\nMicrosoft (R) Build Engine version 15.8.169+g1ccb72aefa for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 19.05 ms for c:\\kevinransom\\visualfsharp\\src\\buildtools\\fslex\\fslex.fsproj.\r\n  Restore completed in 1.76 ms for c:\\kevinransom\\visualfsharp\\src\\buildtools\\fsyacc\\fsyacc.fsproj.\r\n  fslex -> c:\\kevinransom\\visualfsharp\\artifacts\\bin\\fslex\\Debug\\netcoreapp2.0\\fslex.dll\r\n  fsyacc -> c:\\kevinransom\\visualfsharp\\artifacts\\bin\\fsyacc\\Debug\\netcoreapp2.0\\fsyacc.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.64\r\n\r\nWith version 3.0.100-preview-010000 installed the behavior has changed:\r\n\r\nc:\\kevinransom\\visualfsharp\\fcs>dotnet build ..\\src\\buildtools\\buildtools.proj\r\nMicrosoft (R) Build Engine version 16.0.284-preview+g7905402dc6 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for c:\\kevinransom\\visualfsharp\\src\\buildtools\\fslex\\fslex.fsproj...\r\n  Generating MSBuild file c:\\kevinransom\\visualfsharp\\artifacts\\obj\\fslex\\fslex.fsproj.nuget.g.props.\r\n  Restore completed in 125.12 ms for c:\\kevinransom\\visualfsharp\\src\\buildtools\\fslex\\fslex.fsproj.\r\n  Restoring packages for c:\\kevinransom\\visualfsharp\\src\\buildtools\\fsyacc\\fsyacc.fsproj...\r\n  Generating MSBuild file c:\\kevinransom\\visualfsharp\\artifacts\\obj\\fsyacc\\fsyacc.fsproj.nuget.g.props.\r\n  Restore completed in 59.86 ms for c:\\kevinransom\\visualfsharp\\src\\buildtools\\fsyacc\\fsyacc.fsproj.\r\nc:\\kevinransom\\visualfsharp\\src\\src\\buildtools\\buildtools.proj : error MSB4025: The project file could not be loaded. Could not find a part of the path 'c:\\kevinransom\\visualfsharp\\src\\src\\buildtools\\buildtools.proj'.\r\n\r\nBuild FAILED.\r\n\r\nc:\\kevinransom\\visualfsharp\\src\\src\\buildtools\\buildtools.proj : error MSB4025: The project file could not be loaded. Could not find a part of the path 'c:\\kevinransom\\visualfsharp\\src\\src\\buildtools\\buildtools.proj'.\r\n   0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.80\r\n\r\nI assume this is a bug.\r\n\r\nKevin\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10864","RelatedDescription":"Closed issue \"Build behavior change between 2.1.403 and 3.0.100-preview-010000\" (#10864)"},{"Id":"413619331","IsPullRequest":false,"CreatedAt":"2019-02-22T23:31:58","Actor":"peterhuene","Number":"10868","RawContent":null,"Title":"Replace MIT License with .NET Library EULA in Windows installer","State":"open","Body":"## Steps to reproduce\r\n\r\n1. Install a 3.0.100 SDK preview for Windows using the installer.\r\n\r\n## Expected  behavior\r\n\r\nThe link for \"MIT License\" should be replaced with \".NET Library EULA\".\r\n\r\n## Actual behavior\r\n\r\nThe link for the \"MIT License\" remains.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10868","RelatedDescription":"Open issue \"Replace MIT License with .NET Library EULA in Windows installer\" (#10868)"},{"Id":"412919223","IsPullRequest":true,"CreatedAt":"2019-02-22T21:19:26","Actor":"dotnet-maestro[bot]","Number":"10862","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19121.1\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19122.1\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19122.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10862","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser\" (#10862)"},{"Id":"413552689","IsPullRequest":true,"CreatedAt":"2019-02-22T19:48:36","Actor":"peterhuene","Number":"10867","RawContent":null,"Title":"Add properties to control shared framework versions for servicing releases.","State":"open","Body":"This PR adds properties to control the shared framework versions for the 2.1 and 1.x servicing releases.\r\n\r\nThis will be used when building the servicing releases to bump the versions to what is forthcoming.","Url":"https://github.com/dotnet/cli/pull/10867","RelatedDescription":"Open PR \"Add properties to control shared framework versions for servicing releases.\" (#10867)"},{"Id":"412716639","IsPullRequest":true,"CreatedAt":"2019-02-22T17:16:47","Actor":"tmat","Number":"10856","RawContent":null,"Title":"Set copyright and package license","State":"closed","Body":"Prepares repo for change https://github.com/dotnet/arcade/pull/2003 by setting `Copyright` and `PackageLicenseExpression` properties. These values will be required to be set by each repository once https://github.com/dotnet/arcade/pull/2003 is merged.\r\n\r\nIn order to not break the current builds this change sets the properties conditionally. This condition can be removed once all repos switch to Arcade that has https://github.com/dotnet/arcade/pull/2003.\r\n\r\n@markwilkie\r\n","Url":"https://github.com/dotnet/cli/pull/10856","RelatedDescription":"Closed or merged PR \"Set copyright and package license\" (#10856)"},{"Id":"413037854","IsPullRequest":false,"CreatedAt":"2019-02-21T17:23:31","Actor":"KathleenDollard","Number":"10863","RawContent":null,"Title":"Nicer message for `dotnet tool install` failure","State":"open","Body":"## Steps to reproduce\r\n\r\nIn a directory that does not have a manifest file, enter\r\n\r\n```\r\n$ dotnet tool install dotnet-format\r\n```\r\n\r\nNote, I neglected to enter `-g`\r\n\r\n## Expected  behavior\r\n\r\nSomething nice, and not a list of places searched. Suggestion below.\r\n\r\n(Note: Since this is a common mistake, I think we made the right decision not to create a manifest automatically). \r\n\r\n## Actual behavior\r\n\r\n```\r\n$ dotnet tool install dotnet-format\r\nCannot find any manifests file. Searched:\r\n/Users/kathleen/repos/designs-microsoft/designs-microsoft/.config/dotnet-tools.json\r\n/Users/kathleen/repos/designs-microsoft/designs-microsoft/dotnet-tools.json\r\n/Users/kathleen/repos/designs-microsoft/.config/dotnet-tools.json\r\n/Users/kathleen/repos/designs-microsoft/dotnet-tools.json\r\n/Users/kathleen/repos/.config/dotnet-tools.json\r\n/Users/kathleen/repos/dotnet-tools.json\r\n/Users/kathleen/.config/dotnet-tools.json\r\n/Users/kathleen/dotnet-tools.json\r\n/Users/.config/dotnet-tools.json\r\n/Users/dotnet-tools.json\r\n/.config/dotnet-tools.json\r\n/dotnet-tools.json\r\n```\r\n\r\n## Suggested message \r\n\r\n```\r\nCannot find a manifest file. \r\nIf you intended to install a global tool, add `--global` to the command.\r\nIf you would like to create a manifest, use `dotnet new tool-manifest` first, usually in the repo root directory\r\nFor a list of locations searched, use `dotnet tool install <toolname> -v`\r\n```\r\n\r\n-v would add the places searched before or after this message. \r\n\r\n## Environment data\r\n```\r\ndotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009988\r\n Commit:    8d071f3d19\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview-009988/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27218-01\r\n  Commit:  d40b87f29d\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview-009812 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009988 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27218-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10863","RelatedDescription":"Open issue \"Nicer message for `dotnet tool install` failure\" (#10863)"},{"Id":"412864127","IsPullRequest":false,"CreatedAt":"2019-02-21T10:54:52","Actor":"couven92","Number":"10860","RawContent":null,"Title":"Add `dotnet tool update --all` option","State":"open","Body":"## Request\r\n\r\nWhen multiple tools are installed, either globally or locally, it becomes hard to keep track of which tools are outdated and which are not, and updating all outdated tools is time-consuming and boring copy-paste work, since the package id of each installed package needs to be provided to the `dotnet tool update` command.\r\n\r\nI propose to add the `--all` (alias: `-a`) option to the `dotnet tool update` command. This option would simply run `dotnet tool list` internally and use the results obtained from that command to get the package ids that are installed. Then the `dotnet tool update` command could be called with each of these package ids.\r\n\r\n## Background\r\n\r\nUpdating all installed programs is very usual operation for package maintance application to do. `apt upgrade` on Debian/Ubuntu, `npm upgrade` for NPM, etc.\r\n\r\nI have encountered the same problem in Python, however, there one can (semi-)easily write a Windows CMD `FOR` command that uses the `pip list --outdated --format=freeze` command.\r\n\r\nCurrently, the only way to update all packages installed with `dotnet tool` is to parse the output of `dotnet tool list`. That means I now have to write a PowerShell script that ignores the first two lines (the header and header-splitter) and parses the package id from the start of the line to the first whitespace. Yes, it's doable, but it would be much more convenient to have a command that just does all that for you. Also, adding an option in the actual executable means that `dotnet` can use it's own data representation of the information on the installed packages, and thus does not have to be subject to changes in the output format, invalid characters when printed to the console, and all that stuff.\r\n\r\n## Environment data\r\n\r\n`dotnet --info` output:\r\n``` txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.1 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009335 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009497 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100-preview1-009349 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-preview1-35029 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-preview1-35029 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview-26820-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/10860","RelatedDescription":"Open issue \"Add `dotnet tool update --all` option\" (#10860)"},{"Id":"412721216","IsPullRequest":true,"CreatedAt":"2019-02-21T08:10:17","Actor":"livarcocc","Number":"10857","RawContent":null,"Title":"SDK 1.1.1-svc-20190221-1","State":"closed","Body":"@peterhuene once this gets merged you should be good to merge cli into the closed source and build with the runtime.","Url":"https://github.com/dotnet/cli/pull/10857","RelatedDescription":"Closed or merged PR \"SDK 1.1.1-svc-20190221-1\" (#10857)"},{"Id":"412779633","IsPullRequest":true,"CreatedAt":"2019-02-21T07:56:41","Actor":"livarcocc","Number":"10858","RawContent":null,"Title":"SDK 2.2.200-preview-63821-01","State":"closed","Body":"This SDK contains a matching NuGet.\r\n","Url":"https://github.com/dotnet/cli/pull/10858","RelatedDescription":"Closed or merged PR \"SDK 2.2.200-preview-63821-01\" (#10858)"},{"Id":"412780084","IsPullRequest":true,"CreatedAt":"2019-02-21T07:53:47","Actor":"livarcocc","Number":"10859","RawContent":null,"Title":"SDK 2.1.600-preview-63821-02","State":"closed","Body":"This contains a matching NuGet version.\r\n","Url":"https://github.com/dotnet/cli/pull/10859","RelatedDescription":"Closed or merged PR \"SDK 2.1.600-preview-63821-02\" (#10859)"},{"Id":"412709325","IsPullRequest":true,"CreatedAt":"2019-02-21T05:14:27","Actor":"dotnet-maestro[bot]","Number":"10855","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview3.19120.3\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview3.19120.4\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10855","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#10855)"},{"Id":"412700735","IsPullRequest":true,"CreatedAt":"2019-02-21T02:23:24","Actor":"livarcocc","Number":"10853","RawContent":null,"Title":"Roslyn 3.0.0-beta4-19120-05","State":"closed","Body":"We need one more for Loc.","Url":"https://github.com/dotnet/cli/pull/10853","RelatedDescription":"Closed or merged PR \"Roslyn 3.0.0-beta4-19120-05\" (#10853)"},{"Id":"412685392","IsPullRequest":true,"CreatedAt":"2019-02-21T02:22:58","Actor":"nugetlurker","Number":"10851","RawContent":null,"Title":"Insert NuGet Build 5.0.0-rtm.5856 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-rtm.5856 into cli release/2.2.2xx branch","Url":"https://github.com/dotnet/cli/pull/10851","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-rtm.5856 into cli\" (#10851)"},{"Id":"412685402","IsPullRequest":true,"CreatedAt":"2019-02-21T02:14:07","Actor":"nugetlurker","Number":"10852","RawContent":null,"Title":"Insert NuGet Build 5.0.0-rtm.5856 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-rtm.5856 into cli release/2.1.6xx branch","Url":"https://github.com/dotnet/cli/pull/10852","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-rtm.5856 into cli\" (#10852)"},{"Id":"412700934","IsPullRequest":true,"CreatedAt":"2019-02-21T02:11:16","Actor":"livarcocc","Number":"10854","RawContent":null,"Title":"Roslyn 3.0.0-beta4-19120-05","State":"closed","Body":"One more for loc.\r\n","Url":"https://github.com/dotnet/cli/pull/10854","RelatedDescription":"Closed or merged PR \"Roslyn 3.0.0-beta4-19120-05\" (#10854)"},{"Id":"412677022","IsPullRequest":true,"CreatedAt":"2019-02-21T00:32:42","Actor":"livarcocc","Number":"10850","RawContent":null,"Title":"Porting a change we already have in 2.x where we skip tests for native installers.","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/10850","RelatedDescription":"Closed or merged PR \"Porting a change we already have in 2.x where we skip tests for native installers.\" (#10850)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"414366560","IsPullRequest":true,"CreatedAt":"2019-02-26T02:10:06","Actor":"terrajobst","Number":"1087","RawContent":null,"Title":"Remove windows row","State":"closed","Body":"After talking to @ptorr-msft it seems we can update this table and simplify the confusing Windows rows by combining *Windows* with *UWP* and removing *Windows Phone* and *Windows Phone Silverlight* entirely.\r\n\r\n/cc @mairaw @richlander ","Url":"https://github.com/dotnet/standard/pull/1087","RelatedDescription":"Closed or merged PR \"Remove windows row\" (#1087)"},{"Id":"414395637","IsPullRequest":true,"CreatedAt":"2019-02-26T02:09:06","Actor":"terrajobst","Number":"1088","RawContent":null,"Title":"Update .NET Standard 2.1 API delta","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1088","RelatedDescription":"Closed or merged PR \"Update .NET Standard 2.1 API delta\" (#1088)"},{"Id":"414093373","IsPullRequest":true,"CreatedAt":"2019-02-25T13:10:50","Actor":"dotnet-maestro[bot]","Number":"1086","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19124.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1086","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1086)"},{"Id":"413818940","IsPullRequest":true,"CreatedAt":"2019-02-24T13:10:46","Actor":"dotnet-maestro[bot]","Number":"1085","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19123.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1085","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1085)"},{"Id":"413693365","IsPullRequest":true,"CreatedAt":"2019-02-23T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1084","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19122.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1084","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1084)"},{"Id":"413628435","IsPullRequest":true,"CreatedAt":"2019-02-23T00:53:44","Actor":"terrajobst","Number":"1083","RawContent":null,"Title":"Add \"generated by a tool\"-header","State":"closed","Body":"This adds a header to all the Markdown files provided in the docs folder that\r\nshow the API set of .NET Standard. The header indicates that these are\r\ngenerated by a tool and PRs are generally not accepted.\r\n\r\nFixes #1053.","Url":"https://github.com/dotnet/standard/pull/1083","RelatedDescription":"Closed or merged PR \"Add \"generated by a tool\"-header\" (#1083)"},{"Id":"408526522","IsPullRequest":false,"CreatedAt":"2019-02-23T00:00:14","Actor":"jmroyb","Number":"1066","RawContent":null,"Title":"Will be supported System.Web.Services.Discovery and System.Web.Services.Description?","State":"closed","Body":"Hi folks,\r\n\r\nI need make portability from .NET FW 4.5 to .NET Standard. My lib uses System.Web.Services.Discovery and System.Web.Services.Description. Do you plan to migrate them to .NET Standard?\r\n\r\nCheers","Url":"https://github.com/dotnet/standard/issues/1066","RelatedDescription":"Closed issue \"Will be supported System.Web.Services.Discovery and System.Web.Services.Description?\" (#1066)"},{"Id":"413393938","IsPullRequest":true,"CreatedAt":"2019-02-22T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1082","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1082","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1082)"},{"Id":"413086694","IsPullRequest":true,"CreatedAt":"2019-02-22T07:09:05","Actor":"terrajobst","Number":"1080","RawContent":null,"Title":"Add SwitchExpressionException","State":"closed","Body":"Fixes #1077\r\n\r\nThis adds `SwitchExpressionException` that was added for supporting C#'s [`switch` expression construct](https://github.com/dotnet/csharplang/blob/master/proposals/patterns.md#switch-expression). The exception type was discussed in CoreFX in [this API request](https://github.com/dotnet/corefx/issues/33284).","Url":"https://github.com/dotnet/standard/pull/1080","RelatedDescription":"Closed or merged PR \"Add SwitchExpressionException\" (#1080)"},{"Id":"412707494","IsPullRequest":false,"CreatedAt":"2019-02-22T07:09:05","Actor":"terrajobst","Number":"1077","RawContent":null,"Title":"Include SwitchExpression added for C# 8","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1077","RelatedDescription":"Closed issue \"Include SwitchExpression added for C# 8\" (#1077)"},{"Id":"413148623","IsPullRequest":false,"CreatedAt":"2019-02-21T22:14:20","Actor":"wtgodbe","Number":"1081","RawContent":null,"Title":"Use Arcade defaults for DebugType, etc","State":"open","Body":"https://github.com/dotnet/standard/blob/4a006e962fc5c5651b7712028e0e352b1e011a58/Directory.Build.props#L86-L104\r\n\r\nCC @tmat ","Url":"https://github.com/dotnet/standard/issues/1081","RelatedDescription":"Open issue \"Use Arcade defaults for DebugType, etc\" (#1081)"},{"Id":"412718646","IsPullRequest":true,"CreatedAt":"2019-02-21T22:12:16","Actor":"tmat","Number":"1078","RawContent":null,"Title":"Set copyright and package license","State":"closed","Body":"Prepares repo for change https://github.com/dotnet/arcade/pull/2003 by setting `Copyright` and `PackageLicenseExpression` properties. These values will be required to be set by each repository once https://github.com/dotnet/arcade/pull/2003 is merged.\r\n\r\nIn order to not break the current builds this change sets the properties conditionally. This condition can be removed once all repos switch to Arcade that has https://github.com/dotnet/arcade/pull/2003.\r\n\r\n@markwilkie\r\n","Url":"https://github.com/dotnet/standard/pull/1078","RelatedDescription":"Closed or merged PR \"Set copyright and package license\" (#1078)"},{"Id":"411583193","IsPullRequest":true,"CreatedAt":"2019-02-21T19:39:58","Actor":"akoeplinger","Number":"1074","RawContent":null,"Title":"Fix link to build logs in build status badge","State":"closed","Body":"The PR which added the build status badges used the status from the public project but linked to the internal project: https://github.com/dotnet/standard/pull/1062\r\nUpdated to link to point to the public project.\r\n\r\nFixes https://github.com/dotnet/standard/issues/1065\r\n\r\n/cc @wtgodbe ","Url":"https://github.com/dotnet/standard/pull/1074","RelatedDescription":"Closed or merged PR \"Fix link to build logs in build status badge\" (#1074)"},{"Id":"408429514","IsPullRequest":false,"CreatedAt":"2019-02-21T19:39:58","Actor":"kaby76","Number":"1065","RawContent":null,"Title":"CI build status log is not public","State":"closed","Body":"Readme.md now includes a CI build status (https://github.com/dotnet/standard/commit/1e445e1f69f0fe37a7562bc59c054e7d0e15761f#diff-04c6e90faac2675aa89e2176d2eec7d8). This is good, but when I click on it, I get a \"401\" page because I am not an MS employee. Status of the build should not be opaque, and generally, if you go around to other projects on the web, the links are to the output of the build, not to 401. The badge links in the .../standard/readme.md page should to a public build so I can understand what is going on here. Roslyn does it correctly (https://github.com/dotnet/roslyn/blob/master/README.md); others, such as Corefx do not. Coreclr doesn't even have a badge for build status. Mono's readme.md page has them, and the links work.","Url":"https://github.com/dotnet/standard/issues/1065","RelatedDescription":"Closed issue \"CI build status log is not public\" (#1065)"},{"Id":"412912955","IsPullRequest":true,"CreatedAt":"2019-02-21T13:10:49","Actor":"dotnet-maestro[bot]","Number":"1079","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1079","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1079)"},{"Id":"410901729","IsPullRequest":false,"CreatedAt":"2019-02-20T21:32:22","Actor":"mpetrinidev","Number":"1071","RawContent":null,"Title":"Cannot use linq in MatchCollection regex with .NET Standard 2.0","State":"closed","Body":"Hi everyone,\r\n\r\nI have the following problem with a .NET Standard 2.0 class library\r\n\r\n'MatchCollection' does not contain a definition for 'Select' and no accessible extension method 'Select' accepting a first argument of type 'MatchCollection' could be found (are you missing a using directive or an assembly reference?)\r\n\r\n**Code**\r\n\r\n`IEnumerable<string> words = Regex.Matches(text, @\"([\\w]+\\.)+[\\w]+(?=[\\s]|$)\").Select(p => p.Value);`\r\n\r\nI had to move this code from a project that is develope with .NET Core 2.1.\r\n\r\nHow do I solve this problem? I read [https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.matchcollection?view=netstandard-2.0](url) but I cannot find what the problem is\r\n\r\nThanks in advance","Url":"https://github.com/dotnet/standard/issues/1071","RelatedDescription":"Closed issue \"Cannot use linq in MatchCollection regex with .NET Standard 2.0\" (#1071)"},{"Id":"412413302","IsPullRequest":true,"CreatedAt":"2019-02-20T13:10:57","Actor":"dotnet-maestro[bot]","Number":"1076","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19119.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1076","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1076)"},{"Id":"412032685","IsPullRequest":false,"CreatedAt":"2019-02-19T17:11:56","Actor":"YairHalberstadt","Number":"1075","RawContent":null,"Title":"A number of APIs still exist in both .NetCore and .NetFramework, but are missing in the .NetStandard 2.0 version of System.Reflection.Emit","State":"closed","Body":"I'm currently looking into targeting .Net Standard for Iron Python: https://github.com/IronLanguages/dlr/issues/175\r\n\r\nSome of the required Reflection.Emit APIs are missing from the System.Reflection.Emit nuget package when targeting .Net Standard 2.0, such as `DynamicMethod` and `TypeBuilder.CreateType()`. However they exist in both .Net Core and .Net Framework, and I believe it was decided in https://github.com/dotnet/corefx/issues/29365 (specifically from https://github.com/dotnet/corefx/issues/29365#issuecomment-398256162  and onwards) that such APIs should be included in the Nuget Package, and should throw when used from an AOT runtime.\r\n\r\nThe work to do that was completed in https://github.com/dotnet/corefx/pull/30741.\r\n\r\nIs there any reason why the Nuget package doesn't seem to reflect this?\r\n\r\nThanks","Url":"https://github.com/dotnet/standard/issues/1075","RelatedDescription":"Closed issue \"A number of APIs still exist in both .NetCore and .NetFramework, but are missing in the .NetStandard 2.0 version of System.Reflection.Emit\" (#1075)"},{"Id":"411518831","IsPullRequest":false,"CreatedAt":"2019-02-18T15:04:17","Actor":"kjpou1","Number":"1073","RawContent":null,"Title":".NET Standard for WebAssembly","State":"open","Body":"### Rationale and Usage\r\n\r\nAs WebAssembly support in Mono is being worked on there is a need to consider it as a platform for NS2.1.  `PlatformID.WebAssembly`\r\n \r\n### Proposed API\r\n\r\n#### PlatformID\r\n\r\nThis adds WebAssembly enum to `PlatformID`\r\n\r\n```\r\n    public enum PlatformID\r\n    {\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Win32S = 0,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Win32Windows = 1,\r\n        Win32NT = 2,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] WinCE = 3,\r\n        Unix = 4,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Xbox = 5,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] MacOSX = 6\r\n        [EditorBrowsable(EditorBrowsableState.Never)] WebAssembly = 7\r\n    }\r\n```\r\n\r\n#### OSPlatform\r\n\r\nThis adds `OSPlatform.WebAssembly`.\r\n\r\n```\r\nnamespace System.Runtime.InteropServices\r\n{\r\n    public readonly struct OSPlatform : IEquatable<OSPlatform>\r\n    {\r\n        private readonly string _osPlatform;\r\n\r\n        public static OSPlatform WebAssembly { get; } = new OSPlatform(\"WEBASSEMBLY\");\r\n\r\n        public static OSPlatform FreeBSD { get; } = new OSPlatform(\"FREEBSD\");\r\n\r\n        public static OSPlatform Linux { get; } = new OSPlatform(\"LINUX\");\r\n\r\n        public static OSPlatform OSX { get; } = new OSPlatform(\"OSX\");\r\n\r\n        public static OSPlatform Windows { get; } = new OSPlatform(\"WINDOWS\");\r\n\r\n```\r\n\r\nIssue from Blazor: https://github.com/mono/mono/issues/13002\r\n\r\n@terrajobst @marek-safar @lewing\r\n","Url":"https://github.com/dotnet/standard/issues/1073","RelatedDescription":"Open issue \".NET Standard for WebAssembly\" (#1073)"},{"Id":"411070793","IsPullRequest":true,"CreatedAt":"2019-02-16T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1072","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19115.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1072","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1072)"},{"Id":"410533703","IsPullRequest":true,"CreatedAt":"2019-02-15T20:32:52","Actor":"wtgodbe","Number":"1069","RawContent":null,"Title":"Label package as 'preview3'","State":"closed","Body":"Change label from `preview1` to `preview3` for upcoming release\r\n\r\nCC @danmosemsft @terrajobst","Url":"https://github.com/dotnet/standard/pull/1069","RelatedDescription":"Closed or merged PR \"Label package as 'preview3'\" (#1069)"},{"Id":"410527393","IsPullRequest":true,"CreatedAt":"2019-02-15T20:32:45","Actor":"wtgodbe","Number":"1067","RawContent":null,"Title":"Add netstandard.xml Intellisense file back to NetStandard.Library","State":"closed","Body":"The SDK expects `XmlDocFileRoot` to be defined by the repo so that it can find the intellisense file to binplace into the package - redefining this property makes it so we get `netstandard.xml` in the package again for 2.1.\r\n\r\nCC @dsplaisted @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1067","RelatedDescription":"Closed or merged PR \"Add netstandard.xml Intellisense file back to NetStandard.Library\" (#1067)"},{"Id":"410759394","IsPullRequest":true,"CreatedAt":"2019-02-15T13:10:55","Actor":"dotnet-maestro[bot]","Number":"1070","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19114.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1070","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1070)"},{"Id":"410528981","IsPullRequest":true,"CreatedAt":"2019-02-14T23:12:42","Actor":"dotnet-maestro[bot]","Number":"1068","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19113.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1068","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#1068)"},{"Id":"405434278","IsPullRequest":false,"CreatedAt":"2019-01-31T20:48:53","Actor":"botrif","Number":"1064","RawContent":null,"Title":"NETStandard, T4 templates, and System.Numerics.Vectors","State":"open","Body":"We have a T4 template to generate code based on reflection of another project. The template project and the other project are SDK style, multitargeted: &lt;TargetFrameworks&gt;net46;netstandard2.0;uap10.0.14393&lt;/TargetFramework&gt;\r\nThe assembly to reflect on is loaded with &lt;#@ assembly name=…\r\nIf the first target in the list is net46, reflection works fine: typeof(MyClass).Assembly.GetTypes()\r\nBut with netstandard first in the list, we get ReflectionTypeLoadException containing the following:\r\n\r\nCould not load file or assembly 'System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\n(the reflected-on assembly uses System.Vector.Numerics: &lt;PackageReference Include=\"System.Numerics.Vectors\" Version=\"4.5.0\" Condition=\" '$(TargetFramework)' == 'netstandard2.0' \" /&gt;\r\nOur previous workaround was to do the design-time code generation on net46, but we want to move to netstandard builds soon. How can this error be dealt with?","Url":"https://github.com/dotnet/standard/issues/1064","RelatedDescription":"Open issue \"NETStandard, T4 templates, and System.Numerics.Vectors\" (#1064)"},{"Id":"403988291","IsPullRequest":true,"CreatedAt":"2019-01-28T22:28:27","Actor":"wtgodbe","Number":"1062","RawContent":null,"Title":"Add build status badge to Repo home page","State":"closed","Body":"CC @danmosemsft @terrajobst @safern @ViktorHofer ","Url":"https://github.com/dotnet/standard/pull/1062","RelatedDescription":"Closed or merged PR \"Add build status badge to Repo home page\" (#1062)"},{"Id":"404008513","IsPullRequest":false,"CreatedAt":"2019-01-28T21:10:37","Actor":"wtgodbe","Number":"1063","RawContent":null,"Title":"Create shims for new netstandard2.1 assemblies","State":"open","Body":"We need to create Shims for the assemblies added to netstandard2.1 that weren't in netstandard2.0 - This means (as far as I know):\r\n\r\n- System.Memory\r\n- System.Threading.Tasks.Extensions\r\n- System.Reflection.DispatchProxy\r\n- System.Reflection.Emit\r\n- System.Reflection.Emit.ILGeneration\r\n- System.Reflection.Emit.Lightweight\r\n- System.Numerics.Vectors\r\n- System.Buffers\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1063","RelatedDescription":"Open issue \"Create shims for new netstandard2.1 assemblies\" (#1063)"},{"Id":"402932649","IsPullRequest":true,"CreatedAt":"2019-01-24T23:21:33","Actor":"wtgodbe","Number":"1060","RawContent":null,"Title":"Set StrongNameKeyID after import sdk.props","State":"closed","Body":"This allows us to set our own default for `StrongNameKeyID` rather than relying on the one from the SDK.\r\n\r\nCC @ericstj ","Url":"https://github.com/dotnet/standard/pull/1060","RelatedDescription":"Closed or merged PR \"Set StrongNameKeyID after import sdk.props\" (#1060)"},{"Id":"402860962","IsPullRequest":true,"CreatedAt":"2019-01-24T21:43:12","Actor":"terrajobst","Number":"1059","RawContent":null,"Title":"Add missing dummy fields","State":"closed","Body":"In ced9376c, we've added dummy fields for structs. Apparently, I missed these two in the diff.","Url":"https://github.com/dotnet/standard/pull/1059","RelatedDescription":"Closed or merged PR \"Add missing dummy fields\" (#1059)"},{"Id":"402847550","IsPullRequest":true,"CreatedAt":"2019-01-24T19:39:46","Actor":"wtgodbe","Number":"1058","RawContent":null,"Title":"Re-enable APICompat for netstandard1.x/2.0","State":"closed","Body":"This causes netstandard1.x/2.0 assets to be binplaced at `artifacts\\obj\\CompatShims\\ref` again, which will re-enable the APICompat runs for those TFMs. @ViktorHofer I noticed you removed this line here: https://github.com/dotnet/standard/pull/1040/files#diff-1fea8681058f11db0ecbfc2fc8a5be52L7 - was that intentional?","Url":"https://github.com/dotnet/standard/pull/1058","RelatedDescription":"Closed or merged PR \"Re-enable APICompat for netstandard1.x/2.0\" (#1058)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"414392277","IsPullRequest":true,"CreatedAt":"2019-02-26T05:28:18","Actor":"wfurt","Number":"35575","RawContent":null,"Title":"disable AllSubscriberStress test on ARM64 ","State":"closed","Body":"related to #35539\r\n\r\nIt seems like it takes very long time to run it with current container configuration. This change disables this test so we can get complete runs.  ","Url":"https://github.com/dotnet/corefx/pull/35575","RelatedDescription":"Closed or merged PR \"disable AllSubscriberStress test on ARM64 \" (#35575)"},{"Id":"414411988","IsPullRequest":true,"CreatedAt":"2019-02-26T03:20:33","Actor":"Dotnet-GitSync-Bot","Number":"35579","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/35579","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#35579)"},{"Id":"414301508","IsPullRequest":true,"CreatedAt":"2019-02-26T03:05:08","Actor":"eanova","Number":"35568","RawContent":null,"Title":"Removed GetRootLength Helper Function from PathInternalWindows.cs","State":"closed","Body":"Pretty sure this is safe to be removed.  Tested under netcoreapp and netfx builds.","Url":"https://github.com/dotnet/corefx/pull/35568","RelatedDescription":"Closed or merged PR \"Removed GetRootLength Helper Function from PathInternalWindows.cs\" (#35568)"},{"Id":"413843836","IsPullRequest":true,"CreatedAt":"2019-02-26T02:47:19","Actor":"filipnavara","Number":"35553","RawContent":null,"Title":"Add temporary resources and copy of Thread implementation to unblock merge of shared CoreLib","State":"closed","Body":"Counter-part to https://github.com/dotnet/coreclr/pull/22744 and https://github.com/dotnet/corert/pull/7067 once the shared partition code is updated. This makes CoreFX buildable. It is temporary step until dependencies are picked up and the CoreCLR/CoreRT types can be used.","Url":"https://github.com/dotnet/corefx/pull/35553","RelatedDescription":"Closed or merged PR \"Add temporary resources and copy of Thread implementation to unblock merge of shared CoreLib\" (#35553)"},{"Id":"414399308","IsPullRequest":true,"CreatedAt":"2019-02-26T02:24:08","Actor":"yujayee","Number":"35578","RawContent":null,"Title":"Create a msbuild \"SgenParameters\" Task to allow users change values of sgen parameters from their project file.","State":"open","Body":"Currently, Microsoft.XmlSerializer.Generator command is kind of \"hard coded\" in our target file, users cannot add/change switches to the command or modify their values. With this fix, users can create a Target in their project file which call \"SgenParameters\" Task to modify the switches. \r\nA Target may look like the following:\r\n```\r\n  <Target Name=\"MyTarget\" BeforeTargets=\"GenerateSerializationAssembly\">\r\n    <SgenParameters \r\n        Types=\"SgenTestProgram.MyType1;SgenTestProgram.MyType2\"\r\n        References=\"C:\\myfolder\\abc.dll;C:\\myfolder\\def.dll\"\r\n        Verbose=\"true\" \r\n        KeyFile=\"testkey1.snk\"\r\n        DelaySign=\"true\">\r\n    </SgenParameters>\r\n  </Target>\r\n```\r\nRelated to #32145 #32142 #31507 #34670 #34899\r\n","Url":"https://github.com/dotnet/corefx/pull/35578","RelatedDescription":"Open PR \"Create a msbuild \"SgenParameters\" Task to allow users change values of sgen parameters from their project file.\" (#35578)"},{"Id":"414397041","IsPullRequest":true,"CreatedAt":"2019-02-26T02:15:01","Actor":"AaronRobinsonMSFT","Number":"35577","RawContent":null,"Title":"Update LicenseInterop API","State":"open","Body":"Adding support in coreclr for ClassFactory2 requires a small API update to the LicenseInterop API. This change will enable testing and provider a saner API surface.\r\n\r\nSee https://github.com/dotnet/coreclr/issues/20563\r\nSee https://github.com/dotnet/corefx/issues/32999","Url":"https://github.com/dotnet/corefx/pull/35577","RelatedDescription":"Open PR \"Update LicenseInterop API\" (#35577)"},{"Id":"414397028","IsPullRequest":true,"CreatedAt":"2019-02-26T02:14:59","Actor":"grant-d","Number":"35576","RawContent":null,"Title":"[WIP] Ref Assemby and Units for Span.Trim","State":"open","Body":"See https://github.com/dotnet/coreclr/pull/22798\r\nAll units pass (in a private repo)\r\n\r\n**WIP**: This build is expected to fail until the PR from `coreclr` is sync'd","Url":"https://github.com/dotnet/corefx/pull/35576","RelatedDescription":"Open PR \"[WIP] Ref Assemby and Units for Span.Trim\" (#35576)"},{"Id":"414381654","IsPullRequest":true,"CreatedAt":"2019-02-26T01:08:11","Actor":"wfurt","Number":"35574","RawContent":null,"Title":"improve Ssl3 detection","State":"open","Body":"fixes #35537\r\nIt seems like recent Windows images have registry keys to disable SSLv3. This change updates detection to deal with is properly. It was verified on image created via reproTool. \r\n\r\nNote, that this does not seems directly related to discussion about defaulting SSLv3 when registry keys are missing. \r\n","Url":"https://github.com/dotnet/corefx/pull/35574","RelatedDescription":"Open PR \"improve Ssl3 detection\" (#35574)"},{"Id":"414358529","IsPullRequest":false,"CreatedAt":"2019-02-25T23:34:02","Actor":"richlander","Number":"35573","RawContent":null,"Title":"[Breaking Change] Improving .NET Core Version APIs","State":"open","Body":"# [Breaking Change] Improving .NET Core Version APIs\r\n\r\nWe are improving the .NET Core version APIs in .NET Core 3.0. The particular changes we made are technically breaking. The changes are currently only in the master branch, so will be part of .NET Core 3.0 Preview 4, modulo feedback.\r\n\r\nAlso posted at [dotnet/coreclr #22844](https://github.com/dotnet/coreclr/issues/22844)\r\n\r\nRelated:\r\n\r\n* [Improve .NET Core version APIs dotnet/corefx #35361](https://github.com/dotnet/corefx/issues/35361)\r\n* [Make Environment.Version return the actual runtime version dotnet/corefx #31099](https://github.com/dotnet/corefx/issues/31099)\r\n* [Use product version in RuntimeInformation.FrameworkDescription dotnet/corefx #35516](https://github.com/dotnet/corefx/pull/35516)\r\n* [Change Environment.Version to return product version dotnet/coreclr #22664](https://github.com/dotnet/coreclr/pull/22664)\r\n\r\n## Goal\r\n\r\nThe goal of the improvement is to enable access to accurate and precise product version information, like is displayed in the following example:\r\n\r\n```console\r\nC:\\testapps\\versioninfo>dotnet run\r\n.NET Core version:\r\nEnvironment.Version: 3.0.0\r\nRuntimeInformation.FrameworkDescription: .NET Core 3.0.0-preview4.19113.15\r\nCoreFX Build: 3.0.0-preview4.19113.15\r\nCoreFX Hash: add4cacbfb7f7d3f5f07630d10b24e38da4ad027\r\n```\r\n\r\nCode: https://gist.github.com/richlander/f5849c6967c66d699301f75101906f99\r\n\r\n## Existing Behavior\r\n\r\nThe product (as of .NET Core 3.0 Preview 3) does not provide the version information displayed above, but seemingly arbitrary values, as displayed in the following example (using the same code):\r\n\r\nC:\\testapps\\versioninfo>dotnet run\r\n.NET Core version:\r\nEnvironment.Version: 4.0.30319.42000\r\nRuntimeInformation.FrameworkDescription: .NET Core 4.6.27415.71\r\nCoreFX Build: 4.7.0-preview4.19113.15\r\nCoreFX Hash: add4cacbfb7f7d3f5f07630d10b24e38da4ad027\r\n\r\nNote: These version strings are based on the .NET Framework heritage of the product.\r\n\r\n## Breaking Change\r\n\r\nThe change is technically breaking because it resets the versioning scheme of the product as reported by these APIs. Some code somewhere will break, however, we do not expect that to be pervasive. Unfortunately, it will be hard to write code that works with both the new behavior and old behavior given how close the values are.\r\n\r\nWe should never have shipped .NET Core 1.0 with this behavior to avoid this problem now. We decided that .NET Core 3.0 is likely our last chance to fix these APIs, so decided to take the opportunity now.\r\n\r\n## Feedback\r\n\r\nWe would love your feedback.","Url":"https://github.com/dotnet/corefx/issues/35573","RelatedDescription":"Open issue \"[Breaking Change] Improving .NET Core Version APIs\" (#35573)"},{"Id":"414342659","IsPullRequest":true,"CreatedAt":"2019-02-25T22:42:06","Actor":"wtgodbe","Number":"35572","RawContent":null,"Title":"Trigger manual DARC update","State":"open","Body":"This is the result of triggering a manual DARC update, which we'll need since we were previously missing a subscription from dotnet/standard - this means the netstandard.dll we publish to Core-Sdk doesn't have the new ns2.1 types from the past ~1 month, e.g. `IAsyncEnumerable`. I added the subscription, so this should flow automatically from now on.\r\n\r\nCC @mmitche @terrajobst @dsplaisted @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/35572","RelatedDescription":"Open PR \"Trigger manual DARC update\" (#35572)"},{"Id":"414342300","IsPullRequest":true,"CreatedAt":"2019-02-25T22:41:02","Actor":"wtgodbe","Number":"35571","RawContent":null,"Title":"Trigger manual DARC update","State":"open","Body":"This is the result of triggering a manual DARC update, which we'll need since we were previously missing a subscription from dotnet/standard - this means the netstandard.dll we publish to Core-Sdk doesn't have the new ns2.1 types from the past ~1 month, e.g. `IAsyncEnumerable`. I added the subscription, so this should flow automatically from now on.\r\n\r\nCC @mmitche @terrajobst @dsplaisted @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/35571","RelatedDescription":"Open PR \"Trigger manual DARC update\" (#35571)"},{"Id":"414330820","IsPullRequest":true,"CreatedAt":"2019-02-25T22:08:44","Actor":"dotnet-maestro-bot","Number":"35570","RawContent":null,"Title":"Update BuildTools, CoreFxOptimizationData, ProjectNTfs, ProjectNTfsTestILC to preview1-03723-01, master-20190224.1, beta-27425-01, beta-27425-01, respectively (release/3.0)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/35570","RelatedDescription":"Open PR \"Update BuildTools, CoreFxOptimizationData, ProjectNTfs, ProjectNTfsTestILC to preview1-03723-01, master-20190224.1, beta-27425-01, beta-27425-01, respectively (release/3.0)\" (#35570)"},{"Id":"414320657","IsPullRequest":false,"CreatedAt":"2019-02-25T21:42:28","Actor":"robertborr","Number":"35569","RawContent":null,"Title":"Network build failures in 'official/dotnet/corefx/refs/heads/master' - '20190224.1'","State":"open","Body":"@dotnet-mc-bot commented on [Sun Feb 24 2019](https://github.com/dotnet/core-eng/issues/5318)\n\nThere were a set of failures during this build. Here is a summary of these:\r\n* https://dnceng.visualstudio.com/internal/_build/results?buildId=105552\r\n  - **Agent:** Hosted Ubuntu 1604 4\r\n  - **Error log:** /__w/1/s/eng/publish.proj(0,0): error : Unable to upload to corefx-tests/4.6.0-preview4.19124.1/Linux.x64/netcoreapp/tests/Unix.AnyCPU.platform/System.IO.Pipes.Tests.zip due to System.Net.Http.HttpRequestException: Connection refu...\r\n\r\n@robertborr\r\n\n\n---\n\n@robertborr commented on [Mon Feb 25 2019](https://github.com/dotnet/core-eng/issues/5318#issuecomment-467135656)\n\n/__w/1/s/eng/publish.proj(129,5): warning : Connection refused\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at System.Threading.Tasks.ValueTask`1.get_Result()\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at System.Threading.Tasks.ValueTask`1.get_Result()\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at System.Threading.Tasks.ValueTask`1.get_Result()\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n/__w/1/s/eng/publish.proj(129,5): warning :    at Microsoft.DotNet.Build.CloudTestTasks.AzureHelper.RequestWithRetry(TaskLoggingHelper loggingHelper, HttpClient client, Func`1 createRequest, Func`2 validationCallback, Int32 retryCount, Int32 retryDelaySeconds) in /_/src/Microsoft.DotNet.Build.Tasks.Feed/src/common/AzureHelper.cs:line 240\r\n/__w/1/s/eng/publish.proj(129,5): error : Unable to upload to corefx-tests/4.6.0-preview4.19124.1/Linux.x64/netcoreapp/tests/Unix.AnyCPU.Release/System.IO.Pipes.Tests.zip due to System.Net.Http.HttpRequestException: Connection refused ---> System.Net.Sockets.SocketException: Connection refused\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): error :    --- End of inner exception stack trace ---\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Threading.Tasks.ValueTask`1.get_Result()\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Threading.Tasks.ValueTask`1.get_Result()\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Threading.Tasks.ValueTask`1.get_Result()\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at Microsoft.DotNet.Build.Tasks.Feed.BlobFeed.CheckIfBlobExistsAsync(String blobPath) in /_/src/Microsoft.DotNet.Build.Tasks.Feed/src/BlobFeed.cs:line 51\r\n/__w/1/s/eng/publish.proj(129,5): error :    at Microsoft.DotNet.Build.Tasks.Feed.BlobFeedAction.UploadAssetAsync(ITaskItem item, SemaphoreSlim clientThrottle, Int32 uploadTimeout, PushOptions options) in /_/src/Microsoft.DotNet.Build.Tasks.Feed/src/BlobFeedAction.cs:line 171.\r\n/__w/1/s/eng/publish.proj(129,5): error : Connection refused\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Threading.Tasks.ValueTask`1.get_Result()\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Threading.Tasks.ValueTask`1.get_Result()\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Threading.Tasks.ValueTask`1.get_Result()\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n/__w/1/s/eng/publish.proj(129,5): error :    at Microsoft.DotNet.Build.Tasks.Feed.BlobFeed.CheckIfBlobExistsAsync(String blobPath) in /_/src/Microsoft.DotNet.Build.Tasks.Feed/src/BlobFeed.cs:line 51\r\n/__w/1/s/eng/publish.proj(129,5): error :    at Microsoft.DotNet.Build.Tasks.Feed.BlobFeedAction.UploadAssetAsync(ITaskItem item, SemaphoreSlim clientThrottle, Int32 uploadTimeout, PushOptions options) in /_/src/Microsoft.DotNet.Build.Tasks.Feed/src/BlobFeedAction.cs:line 171\r\n/__w/1/s/eng/publish.proj(129,5): error :    at Microsoft.DotNet.Build.Tasks.Feed.BlobFeedAction.PublishToFlatContainerAsync(IEnumerable`1 taskItems, Int32 maxClients, Int32 uploadTimeoutInMinutes, PushOptions pushOptions) in /_/src/Microsoft.DotNet.Build.Tasks.Feed/src/BlobFeedAction.cs:line 121\r\n/__w/1/s/eng/publish.proj(129,5): error :    at Microsoft.DotNet.Build.Tasks.Feed.PushToBlobFeed.ExecuteAsync() in /_/src/Microsoft.DotNet.Build.Tasks.Feed/src/PushToBlobFeed.cs:line 118\r\n    1 Warning(s)\r\n    2 Error(s)\r\n\n\n---\n\n@robertborr commented on [Mon Feb 25 2019](https://github.com/dotnet/core-eng/issues/5318#issuecomment-467194458)\n\n@danmosemsft - moving to corefx repo\n\n","Url":"https://github.com/dotnet/corefx/issues/35569","RelatedDescription":"Open issue \"Network build failures in 'official/dotnet/corefx/refs/heads/master' - '20190224.1'\" (#35569)"},{"Id":"414269320","IsPullRequest":true,"CreatedAt":"2019-02-25T21:36:24","Actor":"Dotnet-GitSync-Bot","Number":"35565","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corefx/pull/35565","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35565)"},{"Id":"413823484","IsPullRequest":true,"CreatedAt":"2019-02-25T20:18:58","Actor":"dotnet-maestro[bot]","Number":"35551","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview4.19123.2\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview4.19123.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35551","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#35551)"},{"Id":"414287510","IsPullRequest":true,"CreatedAt":"2019-02-25T20:17:11","Actor":"tannergooding","Number":"35567","RawContent":null,"Title":"Adding some formatter tests validating the updated float/double behavior","State":"open","Body":"CC. @stephentoub, @GrabYourPitchforks, @ahsonkhan\r\n\r\nSorry for the delay in getting these up.","Url":"https://github.com/dotnet/corefx/pull/35567","RelatedDescription":"Open PR \"Adding some formatter tests validating the updated float/double behavior\" (#35567)"},{"Id":"414285787","IsPullRequest":false,"CreatedAt":"2019-02-25T20:13:07","Actor":"tannergooding","Number":"35566","RawContent":null,"Title":"Utf8Formatter returns the wrong result for double/float when using the currency format","State":"open","Body":"The `Utf8Formatter.TryFormat(double value, Span<byte> destination, out int bytesWritten, StandardFormat format = default(StandardFormat))` code currently returns an incorrect value for `StandardFormat.Parse(\"C\")`.\r\n\r\nThis failure is because `TryFormatFloatingPoint` currently assumes the string returned only contains ASCII data: https://source.dot.net/#System.Private.CoreLib/shared/System/Buffers/Text/Utf8Formatter/Utf8Formatter.Float.cs,110\r\n\r\nThis assumption is generally correct, except for the currency format when the invariant currency symbol is `¤` (`U+00A4` - Currency Sign).","Url":"https://github.com/dotnet/corefx/issues/35566","RelatedDescription":"Open issue \"Utf8Formatter returns the wrong result for double/float when using the currency format\" (#35566)"},{"Id":"414251156","IsPullRequest":false,"CreatedAt":"2019-02-25T18:47:23","Actor":"roji","Number":"35564","RawContent":null,"Title":"Add missing feature detection properties to DbProviderFactory","State":"open","Body":"Following up on #35535, we should add feature detection properties on DbProviderFactory for features which are optional, similar to the existing `CanCreateDataSourceEnumerator`. This would include:\r\n\r\n```c#\r\nclass DbProviderFactory\r\n{\r\n    public virtual bool CanCreateDataAdapter { get; }\r\n    public virtual bool CanCreateCommandBuilder { get; }\r\n}\r\n```\r\n\r\nThe default implementation would call the corresponding Create method and check if the result is null or not.\r\n\r\n/cc @divega @ajcvickers @bricelam","Url":"https://github.com/dotnet/corefx/issues/35564","RelatedDescription":"Open issue \"Add missing feature detection properties to DbProviderFactory\" (#35564)"},{"Id":"413784741","IsPullRequest":false,"CreatedAt":"2019-02-25T17:55:48","Actor":"krwq","Number":"35550","RawContent":null,"Title":"stackalloc initializer loses value during initialization","State":"closed","Body":"Not sure which part of the stack is broken - perhaps I'm missing something obvious but feels like my value should not get lost\r\n\r\n```csharp\r\nusing System;\r\nusing System.Linq;\r\n\r\npublic class Program\r\n{\r\n  public static void Main()\r\n  {\r\n    byte foo = 8;\r\n    Span<byte> outArray = stackalloc byte[8] { foo, 0, 0, 0, 0, 0, 0, 0 };\r\n    Console.WriteLine(string.Join(\"\", outArray.ToArray().Select(x => x.ToString(\"X2\"))));\r\n  }\r\n}\r\n```\r\n\r\nExpected output:\r\n\r\n```\r\n0800000000000000\r\n```\r\n\r\nActual output:\r\n\r\n```\r\n0000000000000000\r\n```\r\n\r\nSeems like repros for length 4-8 (perhaps larger range)\r\n\r\nThis works as expected:\r\n\r\n```csharp\r\n   byte foo = 8;\r\n   Span<byte> outArray = stackalloc byte[3] { foo, 0, 0 };\r\n   Console.WriteLine(string.Join(\"\", outArray.ToArray().Select(x => x.ToString(\"X2\"))));\r\n```\r\n\r\nRepros on https://try.dot.net/ also my local box with sdk 2.1.403\r\n\r\nAlso repros when foo is not on the stack (i.e. a property in the class)\r\n\r\ncc: @ahsonkhan @stephentoub \r\n","Url":"https://github.com/dotnet/corefx/issues/35550","RelatedDescription":"Closed issue \"stackalloc initializer loses value during initialization\" (#35550)"},{"Id":"414225570","IsPullRequest":false,"CreatedAt":"2019-02-25T17:43:46","Actor":"Gnbrkm41","Number":"35563","RawContent":null,"Title":"'build -test' fails with the message 'It was not possible to find any installed dotnet SDKs'","State":"open","Body":"Tools used:\r\n* Windows 10 Pro 1809 (Build 17763.316) x64. I also had similar problem on another Windows 10 Home 1809 (build unknown).\r\n* VS Enterprise 2019 Preview 3.0 with the followings installed:\r\n```\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.0.0 Preview 3.0\r\nVisualStudio.16.Preview/16.0.0-pre.3.0+28608.199\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Enterprise\r\n\r\nVisual C++ 2019   00435-10000-00000-AA929\r\nMicrosoft Visual C++ 2019\r\n\r\nApplication Insights Tools for Visual Studio Package   9.0.20206.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2019   16.0.12185.18740\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.0.12185.18740\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.0.12185.18740\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   16.0.12185.18740\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   3.0.0-beta3-19105-04+f9fc5ea40f861ac30e7ad1a322b7517d4af5d47b\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nGitHub.VisualStudio   2.8.0.6762\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Extension\r\n\r\nJetBrains ReSharper Ultimate 2018.3.2   Build 183.0.20190124.112722\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2019 JetBrains, Inc.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 0x10 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nNuGet Package Manager   5.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.61901.26130\r\nMicrosoft SQL Server Data Tools\r\n\r\nSyntax Visualizer   1.0\r\nAn extension for visualizing Roslyn SyntaxTrees.\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   16.0.10206.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.0.0-beta3-19105-04+f9fc5ea40f861ac30e7ad1a322b7517d4af5d47b\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.0.0.0.  Commit Hash: b5c01b8cc65af6381d2dd558ee63a4aa9e0e98d5.\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n```\r\n\r\n* CMake 3.14.0-rc2 x64\r\n* .NET Core SDKs (x86)\r\n```\r\n2.2.104 [C:\\Program Files (x86)\\dotnet\\sdk]\r\n3.0.100-preview-010184 [C:\\Program Files (x86)\\dotnet\\sdk]\r\n```\r\n* .NET Core Runtimes (x86)\r\n```\r\nMicrosoft.AspNetCore.All 2.2.2 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.2.2 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.0.0-preview-19075-0444 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.2.2 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.0.0-preview-27324-5 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.0.0-preview-27325-3 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n* .NET Core SDKs (x64)\r\n```\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.600-preview-009497 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.100-preview-010184 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n* .NET Core Runtimes (x64)\r\n```\r\nMicrosoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.0.0-preview-19075-0444 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.0.0-preview-27324-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 3.0.0-preview-27325-3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\nI've cloned directly from the dotnet/corefx repo when [this commit was at the top of the master branch](https://github.com/dotnet/corefx/commit/327def063eb5eddb723edcee84815d9495b4021c) , and using Developer Command Prompt for VS2017/2019, I ran `build -restore`, `build` prior to running `build -test`. the former two scripts ran with no problem, however trying `build -test` gave me hundreds of following errors before failing with 465 errors.\r\n\r\n```  C:\\Users\\gotos\\.nuget\\packages\\microsoft.dotnet.corefxtesting\\1.0.0-beta.19121.4\\build\\core\\Core.targets(189,5): error MSB3073: The command \"C:\\Users\\gotos\\source\\repos\\corefx\\artifacts\\bin\\tests\\System.DirectoryServices.Protocols.Tests\\netcoreapp-Windows_NT-Debug-x64\\RunTests.cmd C:\\Users\\gotos\\source\\repos\\corefx\\artifacts\\bin\\testhost/netcoreapp-Windows_NT-Debug-x64/ C:\\Users\\gotos\\source\\repos\\corefx\\.dotnet\\ C:\\Users\\gotos\\source\\repos\\corefx\\artifacts\\tools\\\" exited with code -2147450735. [C:\\Users\\gotos\\source\\repos\\corefx\\src\\System.DirectoryServices.Protocols\\test\r\ns\\System.DirectoryServices.Protocols.Tests.csproj]\r\nC:\\Users\\gotos\\.nuget\\packages\\microsoft.dotnet.corefxtesting\\1.0.0-beta.19121.4\\build\\core\\Core.targets(200,5): error : One or more tests failed while running tests from 'System.DirectoryServices.Protocols.Tests'. [C:\\Users\\gotos\\source\\repos\\corefx\\src\\System.DirectoryServices.Protocols\\tests\\System.DirectoryServices.Protocols.Tests.csproj]\r\n    It was not possible to find any installed dotnet SDKs\r\n    Did you mean to run dotnet SDK commands? Please install dotnet SDK from:\r\n        https://aka.ms/dotnet-download\r\n  ----- end 17:35:58.33 ----- exit code -2147450735 ----------------------------------------------------------\r\n```\r\n\r\nI do have a `build.binlog` file from the `build -test` run, but GitHub seems to refuse it due to its size (34,577KB). Should I submit it somewhere and leave a link here?","Url":"https://github.com/dotnet/corefx/issues/35563","RelatedDescription":"Open issue \"'build -test' fails with the message 'It was not possible to find any installed dotnet SDKs'\" (#35563)"},{"Id":"414216283","IsPullRequest":false,"CreatedAt":"2019-02-25T17:31:50","Actor":"robertborr","Number":"35562","RawContent":null,"Title":"error GC97D5F25: implicit declaration of function 'X509_STORE_CTX_get0_store' is invalid in C99","State":"closed","Body":"build: https://dnceng.visualstudio.com/internal/_build/results?buildId=104405&view=logs   (logs attached)\r\nRedHat6_x64_Release leg, the following errors occurred:\r\n\r\n/__w/1/s/src/Native/Unix/System.Security.Cryptography.Native/pal_x509.c(311,25): error GC97D5F25: implicit declaration of function 'X509_STORE_CTX_get0_store' is invalid in C99 [-Werror,-Wimplicit-function-declaration] [/__w/1/s/src/Native/build-native.proj]\r\n      X509_STORE* store = X509_STORE_CTX_get0_store(ctx);\r\n                          ^\r\n/__w/1/s/src/Native/Unix/System.Security.Cryptography.Native/pal_x509.c(311,17): error G5F2A7227: incompatible integer to pointer conversion initializing 'X509_STORE *' (aka 'struct x509_store_st *') with an expression of type 'int' [-Werror,-Wint-conversion] [/__w/1/s/src/Native/build-native.proj]\r\n      X509_STORE* store = X509_STORE_CTX_get0_store(ctx);\r\n                  ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/1/s/src/Native/Unix/System.Security.Cryptography.Native/pal_x509.c(758,21): error G5F2A7227: incompatible integer to pointer conversion initializing 'X509_STORE *' (aka 'struct x509_store_st *') with an expression of type 'int' [-Werror,-Wint-conversion] [/__w/1/s/src/Native/build-native.proj]\r\n          X509_STORE* store = X509_STORE_CTX_get0_store(storeCtx);\r\n                      ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  3 errors generated.\r\n  make[2]: *** [System.Security.Cryptography.Native/CMakeFiles/objlib.dir/pal_x509.c.o] Error 1\r\n  make[1]: *** [System.Security.Cryptography.Native/CMakeFiles/objlib.dir/all] Error 2\r\n  make: *** [all] Error 2\r\n  Failed to build corefx native components.\r\n/__w/1/s/src/Native/build-native.proj(37,5): error MSB3073: The command \"\"/__w/1/s/src/Native/build-native.sh\" x64 Release Linux outconfig netcoreapp-Linux-Release-x64 stripsymbols\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\n/__w/1/s/src/Native/Unix/System.Security.Cryptography.Native/pal_x509.c(311,25): error GC97D5F25: implicit declaration of function 'X509_STORE_CTX_get0_store' is invalid in C99 [-Werror,-Wimplicit-function-declaration] [/__w/1/s/src/Native/build-native.proj]\r\n/__w/1/s/src/Native/Unix/System.Security.Cryptography.Native/pal_x509.c(311,17): error G5F2A7227: incompatible integer to pointer conversion initializing 'X509_STORE *' (aka 'struct x509_store_st *') with an expression of type 'int' [-Werror,-Wint-conversion] [/__w/1/s/src/Native/build-native.proj]\r\n/__w/1/s/src/Native/Unix/System.Security.Cryptography.Native/pal_x509.c(758,21): error G5F2A7227: incompatible integer to pointer conversion initializing 'X509_STORE *' (aka 'struct x509_store_st *') with an expression of type 'int' [-Werror,-Wint-conversion] [/__w/1/s/src/Native/build-native.proj]\r\n/__w/1/s/src/Native/build-native.proj(37,5): error MSB3073: The command \"\"/__w/1/s/src/Native/build-native.sh\" x64 Release Linux outconfig netcoreapp-Linux-Release-x64 stripsymbols\" exited with code 1.\r\n    0 Warning(s)\r\n    4 Error(s)\r\n\r\n**Logfiles, in case the build is deleted:**\r\n[5310-corefx-20190222.5-logs_104405.zip](https://github.com/dotnet/corefx/files/2901676/5310-corefx-20190222.5-logs_104405.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/35562","RelatedDescription":"Closed issue \"error GC97D5F25: implicit declaration of function 'X509_STORE_CTX_get0_store' is invalid in C99\" (#35562)"},{"Id":"414216176","IsPullRequest":false,"CreatedAt":"2019-02-25T17:21:19","Actor":"bartonjs","Number":"35561","RawContent":null,"Title":"Should GenAPI be removing the XML Serialization attributes?","State":"open","Body":"Currently the automatic generation of reference assemblies excludes some of the XML Serialization attributes\r\n\r\nhttps://github.com/dotnet/corefx/blob/26b932e3c56702382d13ece010b300d3181d2891/eng/DefaultGenApiDocIds.txt#L44-L47\r\n\r\nThis feels like (but is currently unverified) it would create a problem for `sgen.exe`; in that the `sgen`-generated serializer/deserializer would behave differently than the runtime-generated serialization assembly; so it seems like they should be left as part of the ref.cs\r\n\r\nAlternatively, it seems like all of the attributes in https://docs.microsoft.com/en-us/dotnet/standard/serialization/attributes-that-control-xml-serialization?view=netframework-4.7.2 would be removed.\r\n\r\nNo matter what, the inconsistency seems weird.\r\n\r\ncc: @ericstj ","Url":"https://github.com/dotnet/corefx/issues/35561","RelatedDescription":"Open issue \"Should GenAPI be removing the XML Serialization attributes?\" (#35561)"},{"Id":"414188407","IsPullRequest":false,"CreatedAt":"2019-02-25T16:22:18","Actor":"tannergooding","Number":"35560","RawContent":null,"Title":"Remove some unnecessary HWIntrinsic API overloads","State":"open","Body":"There are currently several HWIntrinsic API overloads exposed that are largely unnecessary. These APIs could be removed and have the same functionality be supported internally by the JIT, as is done with the majority of the other HWIntrinsic APIs.\r\n\r\n### InsertVector128\r\n\r\nThese APIs were exposed to have them mirror the `ExtractVector128` APIs. However, in practice, they make the APIs harder to consume and more difficult to support in the JIT. These APIs would instead be supported by the JIT supporting containment on the second operand via the overload that takes `Vector128<T> data`.\r\n\r\n```diff\r\nnamespace System.Runtime.Intrinsics.X86\r\n{\r\n    public abstract partial class Avx\r\n    {\r\n-        public static unsafe Vector256<sbyte> InsertVector128(Vector256<sbyte> value, sbyte* address, byte index);\r\n-        public static unsafe Vector256<byte> InsertVector128(Vector256<byte> value, byte* address, byte index);\r\n-        public static unsafe Vector256<short> InsertVector128(Vector256<short> value, short* address, byte index);\r\n-        public static unsafe Vector256<ushort> InsertVector128(Vector256<ushort> value, ushort* address, byte index);\r\n-        public static unsafe Vector256<int> InsertVector128(Vector256<int> value, int* address, byte index);\r\n-        public static unsafe Vector256<uint> InsertVector128(Vector256<uint> value, uint* address, byte index);\r\n-        public static unsafe Vector256<long> InsertVector128(Vector256<long> value, long* address, byte index);\r\n-        public static unsafe Vector256<ulong> InsertVector128(Vector256<ulong> value, ulong* address, byte index);\r\n-        public static unsafe Vector256<float> InsertVector128(Vector256<float> value, float* address, byte index);\r\n-        public static unsafe Vector256<double> InsertVector128(Vector256<double> value, double* address, byte index);\r\n    }\r\n\r\n    public abstract partial class Avx2\r\n    {\r\n-        public new static unsafe Vector256<sbyte> InsertVector128(Vector256<sbyte> value, sbyte* address, byte index);\r\n-        public new static unsafe Vector256<byte> InsertVector128(Vector256<byte> value, byte* address, byte index);\r\n-        public new static unsafe Vector256<short> InsertVector128(Vector256<short> value, short* address, byte index);\r\n-        public new static unsafe Vector256<ushort> InsertVector128(Vector256<ushort> value, ushort* address, byte index);\r\n-        public new static unsafe Vector256<int> InsertVector128(Vector256<int> value, int* address, byte index);\r\n-        public new static unsafe Vector256<uint> InsertVector128(Vector256<uint> value, uint* address, byte index);\r\n-        public new static unsafe Vector256<long> InsertVector128(Vector256<long> value, long* address, byte index);\r\n-        public new static unsafe Vector256<ulong> InsertVector128(Vector256<ulong> value, ulong* address, byte index);\r\n    }\r\n}\r\n```\r\n\r\n### ExtractVector128\r\n\r\nThese APIs were exposed because of percieved difficulty in efficiently supporting containment for `Store(address, ExtractVector128(...))`. The split API makes these harder to consume and supporting containment for stores (at a basic level) looks to be fairly simple (prototype here: https://github.com/mikedn/coreclr/commit/a00b42e9442ceeeacda7981bbb462bb8ec7a8a21).\r\n\r\n```diff\r\nnamespace System.Runtime.Intrinsics.X86\r\n{\r\n    public abstract partial class Avx\r\n    {\r\n-        public static unsafe void ExtractVector128(byte* address, Vector256<byte> value, byte index);\r\n-        public static unsafe void ExtractVector128(sbyte* address, Vector256<sbyte> value, byte index);\r\n-        public static unsafe void ExtractVector128(short* address, Vector256<short> value, byte index);\r\n-        public static unsafe void ExtractVector128(ushort* address, Vector256<ushort> value, byte index);\r\n-        public static unsafe void ExtractVector128(int* address, Vector256<int> value, byte index);\r\n-        public static unsafe void ExtractVector128(uint* address, Vector256<uint> value, byte index);\r\n-        public static unsafe void ExtractVector128(long* address, Vector256<long> value, byte index);\r\n-        public static unsafe void ExtractVector128(ulong* address, Vector256<ulong> value, byte index);\r\n-        public static unsafe void ExtractVector128(float* address, Vector256<float> value, byte index);\r\n-        public static unsafe void ExtractVector128(double* address, Vector256<double> value, byte index);\r\n    }\r\n\r\n    public abstract partial class Avx2\r\n    {\r\n-        public new static unsafe void ExtractVector128(byte* address, Vector256<byte> value, byte index);\r\n-        public new static unsafe void ExtractVector128(sbyte* address, Vector256<sbyte> value, byte index);\r\n-        public new static unsafe void ExtractVector128(short* address, Vector256<short> value, byte index);\r\n-        public new static unsafe void ExtractVector128(ushort* address, Vector256<ushort> value, byte index);\r\n-        public new static unsafe void ExtractVector128(int* address, Vector256<int> value, byte index);\r\n-        public new static unsafe void ExtractVector128(uint* address, Vector256<uint> value, byte index);\r\n-        public new static unsafe void ExtractVector128(long* address, Vector256<long> value, byte index);\r\n-        public new static unsafe void ExtractVector128(ulong* address, Vector256<ulong> value, byte index);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/35560","RelatedDescription":"Open issue \"Remove some unnecessary HWIntrinsic API overloads\" (#35560)"},{"Id":"414127525","IsPullRequest":false,"CreatedAt":"2019-02-25T14:20:14","Actor":"danielmeza","Number":"35559","RawContent":null,"Title":"Validation attribute with custom resource manager should support GetString from ResouceManager implementations","State":"open","Body":"If we get a custom ResourceManager created at runtime, from enbebed assembly on just from remote resources, we should be able to get the string from the GetString method like this:\r\n\r\nThe resource manager implementation\r\n```csharp\r\n   using System.Globalization;\r\nusing System.Resources;\r\nusing System.ComponentModel.DataAnnotations;\r\nusing System.Collections.Generic;\r\n\r\nnamespace Test\r\n{\r\n    class MainClass\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var mc = new MyClass();\r\n            mc.Name = \"\";\r\n            var vc = new ValidationContext(mc, null, null);\r\n            vc.MemberName = \"Name\";\r\n            var res = new List<ValidationResult>();\r\n            var result = Validator.TryValidateProperty(mc.Name, vc, res);\r\n        }\r\n    }\r\n\r\n    public class MyClass\r\n    {\r\n        [Required(ErrorMessageResourceType = typeof(RemoteResourceManager), ErrorMessageResourceName = \"fake\")]\r\n        public virtual string Name { get; set; }\r\n    }\r\n\r\n    public class RemoteResourceManager : ResourceManager\r\n    {\r\n        public override string GetString(string name) => \"somethingFromTranslationService\"; \r\n\r\n        public override string GetString(string name, CultureInfo culture)\r\n        {\r\n            return \"somethingFromTranslationService\";\r\n        }\r\n    }\r\n}\r\n```\r\nThe application throw the followin [exception ](https://github.com/mono/mono/blob/c5b88ec4f323f2bdb7c7d0a595ece28dae66579c/mcs/class/referencesource/System.ComponentModel.DataAnnotations/DataAnnotations/ValidationAttribute.cs#L259)\r\n\r\n<!--\r\nYou may drag & drop the attachment (repro code/solution, screenshot, etc.) onto the issue.\r\n-->\r\n\r\n### Current Behavior\r\nThe current behavior is to [get an static property](https://github.com/mono/mono/blob/c5b88ec4f323f2bdb7c7d0a595ece28dae66579c/mcs/class/referencesource/System.ComponentModel.DataAnnotations/DataAnnotations/ValidationAttribute.cs#L240) with the name stored in the _errorMessageResourceName field, if this property is not found the app chrash \r\n<!--\r\nWhat is the current behavior?\r\n-->\r\n\r\n### Expected Behavior\r\nThe expected behavior should fallback to GetString method if the static property is not found and try to invoke GetString method from the ResourceManager.\r\n\r\nto get the GetString method we shall check if the Type of the resources is assignable from ResourceManager if not we can check if the class has ResourceManager internal static property for the case when the resources are auto generated from the resx files. This way we can archive the funcionality wihout breack the existing applications. \r\n\r\n<!--\r\nPlease describe the behavior you are expecting\r\n-->\r\nSee https://github.com/mono/mono/issues/13121\r\n","Url":"https://github.com/dotnet/corefx/issues/35559","RelatedDescription":"Open issue \"Validation attribute with custom resource manager should support GetString from ResouceManager implementations\" (#35559)"},{"Id":"414111465","IsPullRequest":false,"CreatedAt":"2019-02-25T13:44:21","Actor":"RobSwDev","Number":"35558","RawContent":null,"Title":"How do I get the same string comparison behaviour on linux as on Windows?","State":"open","Body":"We're trying to port our .net product to Linux. We've been reasonably successful, but cannot reproduce the string comparison behaviour we had on Windows. \r\nWe are using `CurrentCultureIgnoreCase`, which considers `\"ß\"` and `\"ss\"` equal. On Linux, these are considered not equal. \r\nIf we include CompareOptions.IgnoreNonSpace as suggested [here](https://github.com/dotnet/corefx/issues/17052), then `\"héllo\"` and `\"hello\"` become equal.\r\n\r\nWhat are our options for getting the same behaviour on both platforms? Is it possible to same behaviour on Linux as Windows behaviour for CurrentCultureIgnoreCase?","Url":"https://github.com/dotnet/corefx/issues/35558","RelatedDescription":"Open issue \"How do I get the same string comparison behaviour on linux as on Windows?\" (#35558)"},{"Id":"414045981","IsPullRequest":true,"CreatedAt":"2019-02-25T10:54:43","Actor":"ahsonkhan","Number":"35557","RawContent":null,"Title":"Auto-generate the reference assemblies and separate type forwards","State":"open","Body":"Context from https://github.com/dotnet/corefx/pull/35474#issuecomment-466667459\r\n\r\n> * One big PR that just fixes the formatting and that is verified to be zero-diff in generated binaries. This PR does not need reviewing.\r\n\r\nAuto-generated the reference assemblies using `/t:GenerateReferenceSource` on all projects that already contained a `/ref/` directory.\r\nhttps://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/updating-ref-source.md\r\n\r\n**The goal is to normalize the reference assembly, so that subsequent \"real\" changes are easier to review.**\r\n\r\n- Sorting alphabetically to be consistent.\r\n- Remove using directives and fully qualify the types.\r\n- Remove unnecessary attributes (according to https://github.com/dotnet/corefx/blob/master/eng/DefaultGenApiDocIds.txt)\r\n- Moving all type forwards to `.Forwards.cs` file to adhere to a convention and to keep future auto-generated refs less noisy.\r\n\r\nPartially addresses https://github.com/dotnet/corefx/issues/29737\r\n\r\n**There is no additional/removal of APIs in this change. The diff between this PR and master is empty.**\r\n\r\ncc @jkotas, @stephentoub, @ericstj, @danmosemsft, @bartonjs  ","Url":"https://github.com/dotnet/corefx/pull/35557","RelatedDescription":"Open PR \"Auto-generate the reference assemblies and separate type forwards\" (#35557)"},{"Id":"414022430","IsPullRequest":false,"CreatedAt":"2019-02-25T09:59:56","Actor":"moien007","Number":"35556","RawContent":null,"Title":"System.IO.Pipelines .NET Framework 4.5 support.","State":"open","Body":"Currently, I'm using [this](https://www.nuget.org/packages/Unofficial.System.IO.Pipelines.NET45/) package to add System.IO.Pipelines to my .NET 4.5 projects. <br/> Why [System.IO.Pipelines](https://www.nuget.org/packages/System.IO.Pipelines/) package doesn't support .NET 4.5?","Url":"https://github.com/dotnet/corefx/issues/35556","RelatedDescription":"Open issue \"System.IO.Pipelines .NET Framework 4.5 support.\" (#35556)"},{"Id":"413997272","IsPullRequest":false,"CreatedAt":"2019-02-25T09:00:32","Actor":"Metalnem","Number":"35555","RawContent":null,"Title":"Environment.GetEnvironmentVariable throws MethodAccessException when using local CoreFX build","State":"open","Body":"I've been using local CoreFX build successfully with .NET Core 2.2 for some time using instructions from the [dogfooding.md](https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/dogfooding.md#more-advanced-scenario---using-your-local-corefx-build) document. Now I'm trying to do the same with the .NET Core 3.0, but I'm running into problems. I'm using the latest .NET Core 3.0 preview on Mac OS:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010184\r\n Commit:    c57bde4593\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /Users/Metalnem/Temp/dotnet-sdk-3.0.100-preview-010184-osx-x64/sdk/3.0.100-preview-010184/\r\n```\r\n\r\nI have created a local CoreFX build in the DEBUG configuration from the latest master (it was 26b932e3c56702382d13ece010b300d3181d2891 when I was writing this). The build number was **4.6.0-dev.19125.1**, so I created the following project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Private.CoreFx.NETCoreApp\" Version=\"4.6.0-dev.19125.1\" />\r\n  </ItemGroup>\r\n\r\n  <PropertyGroup>\r\n    <PackageConflictPreferredPackages>Microsoft.Private.CoreFx.NETCoreApp;runtime.osx-x64.Microsoft.Private.CoreFx.NETCoreApp;$(PackageConflictPreferredPackages)</PackageConflictPreferredPackages>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nMy NuGet.Config looks like this:\r\n\r\n```xml\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"local coreclr\" value=\"/Users/Metalnem/Temp/corefx/artifacts/packages/Debug\" />\r\n    <add key=\"dotnet-core\" value=\"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" />\r\n  </packageSources>\r\n</configuration>\r\n```\r\n\r\nAnd this is the **Main** function of my project:\r\n\r\n```csharp\r\npublic static void Main(string[] args)\r\n{\r\n  Console.WriteLine(\"Hello World!\");\r\n}\r\n```\r\n\r\nAfter publishing the project with the ```dotnet publish -r osx-x64``` command, running the binary results in the following exception:\r\n\r\n```\r\nUnhandled Exception: System.MethodAccessException: Attempt by method 'System.Text.EncodingHelper.GetCharset()' to access method 'System.Environment.GetEnvironmentVariable(System.String)' failed.\r\n   at System.Text.EncodingHelper.GetCharset()\r\n   at System.Text.EncodingHelper.GetEncodingFromCharset()\r\n   at System.ConsolePal.GetConsoleEncoding()\r\n   at System.ConsolePal.get_OutputEncoding()\r\n   at System.Console.<>c.<get_OutputEncoding>b__18_0()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Object& syncLock, Func`1 valueFactory)\r\n   at System.Threading.LazyInitializer.EnsureInitialized[T](T& target, Object& syncLock, Func`1 valueFactory)\r\n   at System.Console.EnsureInitialized[T](T& field, Func`1 initializer)\r\n   at System.Console.get_OutputEncoding()\r\n   at System.Console.CreateOutputWriter(Stream outputStream)\r\n   at System.Console.<>c.<get_Out>b__25_0()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Object& syncLock, Func`1 valueFactory)\r\n   at System.Threading.LazyInitializer.EnsureInitialized[T](T& target, Object& syncLock, Func`1 valueFactory)\r\n   at System.Console.EnsureInitialized[T](T& field, Func`1 initializer)\r\n   at System.Console.get_Out()\r\n   at System.Console.WriteLine(String value)\r\n   at Test.Program.Main(String[] args)\r\n```\r\n\r\nBut if I write my **Main** function like this, everything works fine:\r\n\r\n```csharp\r\npublic static void Main(string[] args)\r\n{\r\n  File.WriteAllText(\"Out.txt\", \"Hello World!\");\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/35555","RelatedDescription":"Open issue \"Environment.GetEnvironmentVariable throws MethodAccessException when using local CoreFX build\" (#35555)"},{"Id":"413923968","IsPullRequest":true,"CreatedAt":"2019-02-25T04:06:17","Actor":"ahsonkhan","Number":"35554","RawContent":null,"Title":"Update the IBufferWriter contract definition documentation to be clearer","State":"open","Body":"Based on recent discussions:\r\n- https://github.com/dotnet/corefx/issues/34259\r\n- https://github.com/dotnet/corefx/pull/35186\r\n\r\ncc @pakrym, @stephentoub, @davidfowl, @AArnott, @benaadams, @KrzysztofCwalina, @terrajobst ","Url":"https://github.com/dotnet/corefx/pull/35554","RelatedDescription":"Open PR \"Update the IBufferWriter contract definition documentation to be clearer\" (#35554)"},{"Id":"413836756","IsPullRequest":false,"CreatedAt":"2019-02-24T16:01:06","Actor":"Dixin","Number":"35552","RawContent":null,"Title":"Proposal (& implementation): LINQ APIs to enable C# 8.0 index and range for IEnumerable<T>","State":"open","Body":"C# 8.0 introduces index and range features for array. It is natural and convenient to support index and range in LINQ, so they can work with any type that implements `IEnumerable<T>`. I searched the [API review notes](https://github.com/dotnet/apireviews), didn't find such APIs, so propose it here.\r\n\r\n# Rationale and usage\r\n\r\nCurrently (v3.0.0-preview2/SDK 3.0.100-preview-010184), the index and range work with array, and do not work with other types, like `List<T>`. The goals of these LINQ APIs are:\r\n\r\n- Use index to locate an element in sequence, use range to slice sequence. The usage is the same as index/range for array, but with deferred execution for slice with range.\r\n- Use range to start fluent LINQ query.\r\n\r\nThis enables the index and range to work with any type that implements `IEnumerable<T>`.\r\n\r\nLINQ already has `ElementAt(int index)` and `ElementAtOrDefault(int index)` query operator. It would be natural to have a overload for `System.Index`: `ElementAt(Index index)` and `ElementAtOrDefault(Index index)`, and a new method `ElementsIn(Range range)`, so that LINQ can seamlessly work with C# 8.0:\r\n```cs\r\nIndex index = ...;\r\nvar element1 = source1.ElementAt(index);\r\nvar element2 = source2.ElementAtOrDefault(^5);\r\nRange range = ...;\r\nvar slice1 = source3.ElementsIn(range);\r\nvar slice2 = source4.ElementsIn(2..^2)\r\nvar slice2 = source5.ElementsIn(^10..);\r\n```\r\n\r\nThe following `Range` overload and `AsEnumerable` overload for `System.Range` convert it to a sequence, so that LINQ query can be started fluently from c# range:\r\n```cs\r\nvar query1 = Enumerable.Range(10..).Select(...);\r\nRange range = ...;\r\nvar query1 = range.AsEnumerable().Select(...);\r\nvar query2 = (10..20).AsEnumerable().Where(...);\r\n```\r\n\r\n# Proposed APIs\r\n\r\nFor LINQ to Objects:\r\n```cs\r\nnamespace System.Linq\r\n{\r\n    public static partial class Queryable\r\n    {\r\n        public static TSource ElementAt<TSource>(this IEnumerable<TSource> source, Index index) { throw null; }\r\n\r\n        public static TSource ElementAtOrDefault<TSource>(this IEnumerable<TSource> source, Index index) { throw null; }\r\n\r\n        public static IEnumerable<TSource> ElementsIn<TSource>(this IEnumerable<TSource> source, Range range) { throw null; }\r\n\r\n        public static IEnumerable<TSource> Range<TSource>(Range range) { throw null; }\r\n\r\n        public static IEnumerable<TSource> AsEnumerable<TSource>(this Range source) { throw null; }\r\n}\r\n```\r\nFor remote LINQ:\r\n```cs\r\nnamespace System.Linq\r\n{\r\n    public static partial class Queryable\r\n    {\r\n        public static TSource ElementAt<TSource>(this IQueryable<TSource> source, Index index) { throw null; }\r\n\r\n        public static TSource ElementAtOrDefault<TSource>(this IQueryable<TSource> source, Index index) { throw null; }\r\n\r\n        public static IQueryable<TSource> ElementsIn<TSource>(this IQueryable<TSource> source, Range range) { throw null; }\r\n}\r\n```\r\n\r\n# Implementation details (and pull request)\r\n\r\nThe [API review process](https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/api-review-process.md) says PR should not be submitted before the API proposal is approved. So currently I implemented these APIs separately:\r\n- `Enumerable`: [`ElementAt(Index)`, `ElementAtOrDefault(Index)`](https://github.com/Dixin/CodeSnippets/blob/master/Linq.Range/Linq.Range/ElementAt.cs)\r\n- `Enumerable`: [`ElementsIn(Range)`](https://github.com/Dixin/CodeSnippets/blob/master/Linq.Range/Linq.Range/ElementsIn.cs)\r\n- `Enumerable`: [`Range(Range)`](https://github.com/Dixin/CodeSnippets/blob/master/Linq.Range/Linq.Range/Range.cs) and [`AsEnumerable(Range)`](https://github.com/Dixin/CodeSnippets/blob/master/Linq.Range/Linq.Range/AsEnumerable.cs). They are the same conversion.\r\n- `Queryable`: [`ElementAt(Index)`, `ElementAtOrDefault(Index)`, `ElementsIn(Range)`](https://github.com/Dixin/CodeSnippets/blob/master/Linq.Range/Linq.Range/QueryableExtensions.cs).\r\n\r\nThese APIs' implementation is self-contained so that the code can be just copied to use. If this proposal is doable, I can submit a PR quickly.\r\n\r\nThe implementation of `ElementAt(Index)`, `ElementAtOrDefault(Index)` and `ElementsIn(Range)` for `IQueryable<T>` is straightforward. They just create an expression tree. These methods for `IEnumerable<T>` are straightforward as well, I just followed the behavior and exceptions of array with range (See unit tests [here](https://github.com/Dixin/CodeSnippets/blob/master/Linq.Range/Linq.Range.Tests/ElementsInTests.cs)).\r\n\r\n# Open questions\r\n\r\nFor `Range(Range)` and `AsEnumerable(Range)`, the question is: what does `Range`'s start `Index` and end `Index` mean when the index is from the end? For example, `10..20` can be easily converted to a sequence of 10, 11,12, ... 19, but how about `^20...^10`? In my current implementation, regarding `Index`'s value can be from `0` to `int.MaxValue`, I assume a virtual \"full range\" `0..2147483648`, and any `Range` instance is a slice of that \"full range\". So:\r\n\r\n- Ranges `..` and `0..` and `..^0` and `0..^0` are converted to \"full sequence\" 0, 1, .. 2147483647\r\n- Range `100..^47` is converted to sequence 100, 101, .. 2147483600\r\n- Range `^48..^40` is converted to sequence 2147483600, 2147483601 .. 2147483607\r\n- Range `10..10` is converted to empty sequence\r\n\r\netc. See unit tests of `AsEnumerable(Range)` [here](https://github.com/Dixin/CodeSnippets/blob/master/Linq.Range/Linq.Range.Tests/AsEnumerableTests.cs).","Url":"https://github.com/dotnet/corefx/issues/35552","RelatedDescription":"Open issue \"Proposal (& implementation): LINQ APIs to enable C# 8.0 index and range for IEnumerable<T>\" (#35552)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"414070933","IsPullRequest":true,"CreatedAt":"2019-02-26T02:00:10","Actor":"dotnet-bot","Number":"33655","RawContent":null,"Title":"Merge dev16.0 to master","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-to-master\ngit reset --hard upstream/master\ngit merge upstream/dev16.0\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33655","RelatedDescription":"Closed or merged PR \"Merge dev16.0 to master\" (#33655)"},{"Id":"414365579","IsPullRequest":true,"CreatedAt":"2019-02-26T02:00:05","Actor":"dotnet-bot","Number":"33677","RawContent":null,"Title":"Merge dev16.0 to dev16.0-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0 into dev16.0-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-to-dev16.0-vs-deps\ngit reset --hard upstream/dev16.0-vs-deps\ngit merge upstream/dev16.0\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-to-dev16.0-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33677","RelatedDescription":"Closed or merged PR \"Merge dev16.0 to dev16.0-vs-deps\" (#33677)"},{"Id":"414393449","IsPullRequest":false,"CreatedAt":"2019-02-26T01:59:26","Actor":"gafter","Number":"33683","RawContent":null,"Title":"Quadratic copying of nullable states","State":"open","Body":"In the nullable walker, we copy the states from the elements of one variable to another on assignment.  However, in order to do so we scan all of the elements of the entire state to see if any of them are members of the right-hand-side.  Then, if we find one, we again scan the entire state to see if any of them are members of the that.  And so on.  This process is quadratic in the number of variables.","Url":"https://github.com/dotnet/roslyn/issues/33683","RelatedDescription":"Open issue \"Quadratic copying of nullable states\" (#33683)"},{"Id":"414388655","IsPullRequest":true,"CreatedAt":"2019-02-26T01:38:45","Actor":"ivanbasov","Number":"33682","RawContent":null,"Title":"Roslyn recommends hard selection in async completion, breaking suggetion mode","State":"open","Body":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/787151","Url":"https://github.com/dotnet/roslyn/pull/33682","RelatedDescription":"Open PR \"Roslyn recommends hard selection in async completion, breaking suggetion mode\" (#33682)"},{"Id":"414365605","IsPullRequest":true,"CreatedAt":"2019-02-26T01:30:04","Actor":"dotnet-bot","Number":"33678","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33678","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#33678)"},{"Id":"414385432","IsPullRequest":false,"CreatedAt":"2019-02-26T01:24:14","Actor":"gafter","Number":"33681","RawContent":null,"Title":"Improve nullable analysis of unassigned variables","State":"open","Body":"I would like to improve the way we handle unassigned variables in the nullable walker.  All locals should be set to unassigned when their scope is entered (except for certain kinds that are initialized, such as `foreach` and `catch` variables).\r\n\r\nThis will allow us to simplify `private NullableFlowState GetDefaultState(ref LocalState state, int slot)` and will get rid of some cascaded diagnostics.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33681","RelatedDescription":"Open issue \"Improve nullable analysis of unassigned variables\" (#33681)"},{"Id":"414289997","IsPullRequest":true,"CreatedAt":"2019-02-26T01:23:27","Actor":"sharwell","Number":"33663","RawContent":null,"Title":"Fix failure to validate caret position","State":"closed","Body":"The tests were updated to reflect the current behavior. Two of the assertions reveal product bugs, and #33672 has been filed to address them.","Url":"https://github.com/dotnet/roslyn/pull/33663","RelatedDescription":"Closed or merged PR \"Fix failure to validate caret position\" (#33663)"},{"Id":"414371633","IsPullRequest":true,"CreatedAt":"2019-02-26T00:24:30","Actor":"lillo42","Number":"33680","RawContent":null,"Title":"Poor diagnostic when conversion from double to int? overflows","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/961","Url":"https://github.com/dotnet/roslyn/pull/33680","RelatedDescription":"Open PR \"Poor diagnostic when conversion from double to int? overflows\" (#33680)"},{"Id":"414370795","IsPullRequest":true,"CreatedAt":"2019-02-26T00:20:58","Actor":"agocke","Number":"33679","RawContent":null,"Title":"Implement full spec changes for Index/Range","State":"open","Body":"Reflects the changes described in https://github.com/dotnet/csharplang/pull/2214.\r\n\r\nRange now looks optimistically for some special members with optional\r\nparameters, but will fall back to the Range constructor if they aren't\r\npresent.\r\n\r\nThis change also removes all of the specialized codegen that was going\r\non with arrays and strings in favor of expected helpers or real members.","Url":"https://github.com/dotnet/roslyn/pull/33679","RelatedDescription":"Open PR \"Implement full spec changes for Index/Range\" (#33679)"},{"Id":"414365530","IsPullRequest":true,"CreatedAt":"2019-02-26T00:00:17","Actor":"dotnet-bot","Number":"33676","RawContent":null,"Title":"Merge dev16.0-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from dev16.0-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33676","RelatedDescription":"Open PR \"Merge dev16.0-vs-deps to master-vs-deps\" (#33676)"},{"Id":"414273251","IsPullRequest":true,"CreatedAt":"2019-02-25T23:19:54","Actor":"sharwell","Number":"33662","RawContent":null,"Title":"Enable tests expected to pass with recent stabilization work","State":"closed","Body":"Closes #19816\r\nCloses #20868\r\nCloses #20979\r\nCloses #20991\r\nCloses #21925\r\nCloses #33103\r\n\r\nMitigates the test gap created by #30599 by creating a second set of tests that passes.","Url":"https://github.com/dotnet/roslyn/pull/33662","RelatedDescription":"Closed or merged PR \"Enable tests expected to pass with recent stabilization work\" (#33662)"},{"Id":"414353357","IsPullRequest":false,"CreatedAt":"2019-02-25T23:15:47","Actor":"controlflow","Number":"33675","RawContent":null,"Title":"Wrong parsing of parenthesized constant pattern expression in switch expression arm","State":"open","Body":"**Version Used**: \r\n\r\nmaster branch from feb 26\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code:\r\n```c#\r\nclass C {\r\n  bool M(object o) {\r\n    const int X = 42;\r\n    return o switch { (X) => true, _ => false };\r\n  }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nCompile fine, do constant pattern matching at runtime.\r\n\r\n**Actual Behavior**:\r\n\r\n> CS0118: 'X' is a variable but is used like a type\r\n> CS1525: Invalid expression term '=>'\r\n\r\ncc @gafter ","Url":"https://github.com/dotnet/roslyn/issues/33675","RelatedDescription":"Open issue \"Wrong parsing of parenthesized constant pattern expression in switch expression arm\" (#33675)"},{"Id":"414351986","IsPullRequest":true,"CreatedAt":"2019-02-25T23:11:27","Actor":"sharwell","Number":"33674","RawContent":null,"Title":"Integration test cleanup","State":"open","Body":"Non-essential code polish items observed during other integration test work. Will be rebased after other changes merge forward.","Url":"https://github.com/dotnet/roslyn/pull/33674","RelatedDescription":"Open PR \"Integration test cleanup\" (#33674)"},{"Id":"414349899","IsPullRequest":false,"CreatedAt":"2019-02-25T23:04:24","Actor":"chborl","Number":"33673","RawContent":null,"Title":"Trim known prefixes to get parameter name from argument","State":"open","Body":"💡 Would be good to trim the same set of prefixes implemented in #32549 (`_`, `m_`, `s_`, `t_`) \r\n\r\n_Originally posted by @sharwell in https://github.com/dotnet/roslyn/pull/33185_","Url":"https://github.com/dotnet/roslyn/issues/33673","RelatedDescription":"Open issue \"Trim known prefixes to get parameter name from argument\" (#33673)"},{"Id":"414348514","IsPullRequest":false,"CreatedAt":"2019-02-25T22:59:51","Actor":"sharwell","Number":"33672","RawContent":null,"Title":"Caret position after undo is incorrect","State":"open","Body":"#33663 revealed a bug in the caret placement following two undo operations in the following code:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/28ef94d8b150a1767e7a128ff6fd07f34678aa73/src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpAutomaticBraceCompletion.cs#L222-L228\r\n\r\nIn both cases, the caret should be placed *inside* the quotes.","Url":"https://github.com/dotnet/roslyn/issues/33672","RelatedDescription":"Open issue \"Caret position after undo is incorrect\" (#33672)"},{"Id":"414346673","IsPullRequest":false,"CreatedAt":"2019-02-25T22:54:19","Actor":"vsfeedback","Number":"33671","RawContent":null,"Title":"Faulty compiler error message CS0165","State":"open","Body":"A compiler error  message CS0165 appears even though the code is correct.\n\n\n\n private static void MicrosoftFehler()\n {\n      MsFehler msf = new MsFehler();\n\n      //  It works - no message appears\n      if (msf != null &amp;&amp;  msf.Fkt(out int n) == true)\n      {\n        Console.WriteLine(n);\n      }\n\n      // Here a message appears, although the code is correct:\n      // Error CS0165 Use of unassigned local variable  &quot;m&quot;\n      //------------------------------------------------------------------------------\n      if (msf?.Fkt(out int m) == true)\n      {\n---&gt;        Console.WriteLine(m);                &lt;----------------------------------------------------------------------------\n      }\n\n\n    }\n\n\n    \n    class MsFehler\n    {\n      public bool Fkt(out int i)\n      {\n        i = 100;\n\n        return true;\n      }\n    }\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/47334/faulty-compiler-error-message-cs0165.html\nVSTS ticketId: 421730_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/33671","RelatedDescription":"Open issue \"Faulty compiler error message CS0165\" (#33671)"},{"Id":"414344892","IsPullRequest":false,"CreatedAt":"2019-02-25T22:49:01","Actor":"sharwell","Number":"33670","RawContent":null,"Title":"Integration tests should correctly wait for workspace operations","State":"open","Body":"Currently, waits for `FeatureAttribute.Workspace` only wait for operations tracked by Roslyn. These waits should first wait for asynchronous operations to be processed by the underlying project system(s), and then wait for remaining operations tracked by Roslyn.\r\n\r\n> This code is not correct, but cannot be made correct today. The project systems do (or will do soon in the case of csproj) design time builds asynchronously, and there is no strict guarantee that states that the design time build must be complete after the rename has been applied from the perspective of DTE. There might be code today that happens to force a synchronization but that's not in the contract. What is required *prior* to the WaitForAsyncOperation is a wait on the project system that it's pushed the work to the workspace, but the API to do didn't get completed in time for 16.0.\r\n\r\n_Originally posted by @jasonmalinowski in https://github.com/dotnet/roslyn/pull/33662#discussion_r260043995_","Url":"https://github.com/dotnet/roslyn/issues/33670","RelatedDescription":"Open issue \"Integration tests should correctly wait for workspace operations\" (#33670)"},{"Id":"414343681","IsPullRequest":true,"CreatedAt":"2019-02-25T22:45:12","Actor":"chsienki","Number":"33669","RawContent":null,"Title":"Use threestate to track generated state in CSharpSyntaxTree","State":"open","Body":"Fixes #33207","Url":"https://github.com/dotnet/roslyn/pull/33669","RelatedDescription":"Open PR \"Use threestate to track generated state in CSharpSyntaxTree\" (#33669)"},{"Id":"414341519","IsPullRequest":true,"CreatedAt":"2019-02-25T22:38:46","Actor":"chsienki","Number":"33668","RawContent":null,"Title":"Store nullable attribute constructor params in a field:","State":"open","Body":"- Add a derived nullable attribute symbol\r\n- Add a constructor symbol that allows assignment to a field\r\n- Generate the appropriate constructors for byte and byte[] versions of the attribute\r\n- Add tests\r\n\r\nCloses #30143","Url":"https://github.com/dotnet/roslyn/pull/33668","RelatedDescription":"Open PR \"Store nullable attribute constructor params in a field:\" (#33668)"},{"Id":"414329184","IsPullRequest":false,"CreatedAt":"2019-02-25T22:04:33","Actor":"ivanbasov","Number":"33667","RawContent":null,"Title":"Writing code to call a function using identifiers that don’t exist yet.","State":"open","Body":"Source: Scenario 1 at https://developercommunity.visualstudio.com/content/problem/465732/vs-2019-preview-3-intellisense-auto-selecting-para.html\r\n\r\nWriting code to call a function using identifiers that don’t exist yet.\r\n\r\n```\r\nclass Program\r\n{\r\n    static void Main ( string[] args )\r\n    {\r\n        var mySvc = new MyService(10, otherSvc, $$);\r\n    }        \r\n}\r\n\r\nclass MyService\r\n{\r\n    public MyService (int id, OtherService otherService, string name)\r\n    {\r\n    }\r\n}\r\n\r\nclass OtherService\r\n{\r\n}\r\n```\r\n\r\nIn this scenario I’ve just put the comma in the call to new MyService in Main. I now enter a variable name name that doesn’t exist yet. As soon as you hit space or a dot (because this is an object) then IS autocompletes to the name: parameter name. This isn’t what I wanted so I have to stop my typing, go back and correct to the variable (I haven’t defined yet) and then continue typing. In VS 2017 it doesn’t autocomplete to the parameter name. It does recognize that the parameter name is the best choice, it just doesn’t auto complete it.\r\n\r\n**Expected by user**\r\n`        var mySvc = new MyService(10, otherSvc, name);`\r\n**Actual**\r\n`        var mySvc = new MyService(10, otherSvc, name:);`\r\nThe behavior is the same with the old completion and the new completion. It seems it is caused by https://github.com/dotnet/roslyn/pull/26764","Url":"https://github.com/dotnet/roslyn/issues/33667","RelatedDescription":"Open issue \"Writing code to call a function using identifiers that don’t exist yet.\" (#33667)"},{"Id":"414320242","IsPullRequest":true,"CreatedAt":"2019-02-25T21:41:26","Actor":"ivanbasov","Number":"33666","RawContent":null,"Title":"async completion: eats existing code on commit","State":"open","Body":"Fixes #33626","Url":"https://github.com/dotnet/roslyn/pull/33666","RelatedDescription":"Open PR \"async completion: eats existing code on commit\" (#33666)"},{"Id":"414319358","IsPullRequest":true,"CreatedAt":"2019-02-25T21:39:07","Actor":"jaredpar","Number":"33665","RawContent":null,"Title":"Create single NuPkg for the entire compiler toolset","State":"open","Body":"This creates a NuPgk that contains both the desktop and coreclr compiler toolsets. Consumers can now use this single package instead of having to condition between the two versions. \r\n\r\nIn the long term we will delete the desktop / coreclr specific packages For the time being though we will keep producing them to give teams a period to transition off of them. \r\n\r\ncloses #33219","Url":"https://github.com/dotnet/roslyn/pull/33665","RelatedDescription":"Open PR \"Create single NuPkg for the entire compiler toolset\" (#33665)"},{"Id":"414253243","IsPullRequest":false,"CreatedAt":"2019-02-25T21:01:04","Actor":"lpavel","Number":"33661","RawContent":null,"Title":"Namespace required when extension function has same name as return type","State":"closed","Body":"**Version Used**: VS 15.9.4\r\n\r\nI got across this behavior today which seemed surprising.\r\n\r\nFor the following code:\r\n```\r\nnamespace Authentication\r\n{\r\n    public static class RestrictedClaimTypes\r\n    {\r\n        public const string AppIdAcr = \"appidacr\";\r\n    }\r\n\r\n    public enum AppAuthType\r\n    {\r\n        None = -1,\r\n        PublicClient = 0,\r\n        ClientIdAndSecret = 1,\r\n        ClientCertificate = 2\r\n    }\r\n\r\n    public static AppAuthType AppAuthType(this ClaimsPrincipal user)\r\n    {\r\n        string appIdAcr = user.FindFirst(RestrictedClaimTypes.AppIdAcr)?.Value;\r\n        if (!Enum.TryParse<AppAuthType>(appIdAcr, out var authType))\r\n        {\r\n            return AppAuthType.None;\r\n        }\r\n        return authType;\r\n    }\r\n}\r\n```\r\n\r\nThis fails to build with the following error: \r\nerror CS0119: 'ClaimsPrincipalExtensions.AppAuthType(ClaimsPrincipal)' is a method, which is not valid in the given context \r\n\r\nHowever, adding the namespace of the AppAuthType fixes it: \r\n`return AppAuthType.None;` -> `return Authentication.AppAuthType.None;`\r\n\r\nBasically, it looks like without the `Authentication.`, it is trying to match AppAuthType with the extension function. I find it a bit confusing to why it does that and was expecting it to work without the namespace. Is this behavior expected?","Url":"https://github.com/dotnet/roslyn/issues/33661","RelatedDescription":"Closed issue \"Namespace required when extension function has same name as return type\" (#33661)"},{"Id":"414298313","IsPullRequest":false,"CreatedAt":"2019-02-25T20:44:03","Actor":"gafter","Number":"33664","RawContent":null,"Title":"Conditional ref operator should require same nullability","State":"open","Body":"The conditional ref expression should give a warning if the nullability of its operands differ.  No warning is produced today.\r\n\r\n``` c#\r\nvoid M(bool c, ref string x, ref string? y)\r\n{\r\n    (c ? ref x : ref y) = null; // no warning, but might assign null to x\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/33664","RelatedDescription":"Open issue \"Conditional ref operator should require same nullability\" (#33664)"},{"Id":"414223783","IsPullRequest":true,"CreatedAt":"2019-02-25T19:20:00","Actor":"sharwell","Number":"33659","RawContent":null,"Title":"Disable settings synchronization for integration testing","State":"closed","Body":"Resolves one source of local test discrepancies relative to CI builds.","Url":"https://github.com/dotnet/roslyn/pull/33659","RelatedDescription":"Closed or merged PR \"Disable settings synchronization for integration testing\" (#33659)"},{"Id":"414245641","IsPullRequest":false,"CreatedAt":"2019-02-25T18:33:52","Actor":"kendrahavens","Number":"33660","RawContent":null,"Title":"Quick action for Add to local/global resource strings","State":"open","Body":"Migrated from [developer community](https://developercommunity.visualstudio.com/content/idea/460166/add-add-to-localglobal-ressource-strings-if-quick.html).\r\n\r\n**Steps to Reproduce**\r\n1. Type (Ctrl+.) on a string.\r\n\r\n**Expected Behavior**:\r\n1. Context menu: \"add to local resource strings\" and \"add to global resource strings\" to speed up localization dramatically.\r\n\r\n**Additionally:** If string contains variables like \r\n```csharp\r\n\"Konvertiere Tabelle \" + tabelle + \"...\"\r\n```\r\nReformat it to:\r\n```csharp\r\nstring.Format(Resources.KonvertiereTabelle, tabelle);\r\n```\r\nand create resource string KonvertiereTabelle with value \"Konvertiere Tabelle {0}...\"\r\n\r\n**Additionally 2:** Choose to change \"this string\" or \"all strings like xyz in project\" for both commands.\r\n\r\n![image](https://user-images.githubusercontent.com/8293542/53359726-a0a13b80-38e8-11e9-9cf2-b4eab86cb3ca.png)\r\n\r\n**Actual Behavior**:\r\nNo quick action for adding string to local resource available.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33660","RelatedDescription":"Open issue \"Quick action for Add to local/global resource strings\" (#33660)"},{"Id":"414203977","IsPullRequest":true,"CreatedAt":"2019-02-25T16:54:38","Actor":"fekberg","Number":"33658","RawContent":null,"Title":"Documentation for Ranges returns a 404","State":"open","Body":"Pointing to the proposal in the csharplang repository instead.","Url":"https://github.com/dotnet/roslyn/pull/33658","RelatedDescription":"Open PR \"Documentation for Ranges returns a 404\" (#33658)"},{"Id":"414002108","IsPullRequest":true,"CreatedAt":"2019-02-25T16:45:02","Actor":"ashmind","Number":"33654","RawContent":null,"Title":"Added features/* and demos/* to the list of branches that trigger build on commit","State":"closed","Body":"This will allow SharpLab (and any other tools) to keep up with Roslyn feature branches,\r\nThe idea was discussed and confirmed with @jaredpar at https://github.com/ashmind/SharpLab/issues/362#issuecomment-466814473.","Url":"https://github.com/dotnet/roslyn/pull/33654","RelatedDescription":"Closed or merged PR \"Added features/* and demos/* to the list of branches that trigger build on commit\" (#33654)"},{"Id":"414070979","IsPullRequest":true,"CreatedAt":"2019-02-25T13:30:10","Actor":"dotnet-bot","Number":"33656","RawContent":null,"Title":"Merge dev16.0-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33656","RelatedDescription":"Closed or merged PR \"Merge dev16.0-vs-deps to master-vs-deps\" (#33656)"},{"Id":"414071041","IsPullRequest":true,"CreatedAt":"2019-02-25T13:30:06","Actor":"dotnet-bot","Number":"33657","RawContent":null,"Title":"Merge dev16.0 to dev16.0-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0 into dev16.0-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-to-dev16.0-vs-deps\ngit reset --hard upstream/dev16.0-vs-deps\ngit merge upstream/dev16.0\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-to-dev16.0-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33657","RelatedDescription":"Closed or merged PR \"Merge dev16.0 to dev16.0-vs-deps\" (#33657)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"414412013","IsPullRequest":true,"CreatedAt":"2019-02-26T03:20:42","Actor":"Dotnet-GitSync-Bot","Number":"7081","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7081","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7081)"},{"Id":"414320190","IsPullRequest":true,"CreatedAt":"2019-02-26T03:12:11","Actor":"Dotnet-GitSync-Bot","Number":"7079","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @ericstj @marek-safar @filipnavara","Url":"https://github.com/dotnet/corert/pull/7079","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7079)"},{"Id":"414344841","IsPullRequest":true,"CreatedAt":"2019-02-25T22:48:52","Actor":"sbomer","Number":"7080","RawContent":null,"Title":"Set up CI with Azure Pipelines","State":"open","Body":"","Url":"https://github.com/dotnet/corert/pull/7080","RelatedDescription":"Open PR \"Set up CI with Azure Pipelines\" (#7080)"},{"Id":"413641865","IsPullRequest":true,"CreatedAt":"2019-02-25T21:36:37","Actor":"Dotnet-GitSync-Bot","Number":"7074","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7074","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7074)"},{"Id":"413695008","IsPullRequest":true,"CreatedAt":"2019-02-25T19:24:12","Actor":"MichalStrehovsky","Number":"7075","RawContent":null,"Title":"Make binary serialization work","State":"closed","Body":"Three parts:\r\n\r\n* Expose serialization-related metadata in the type system.\r\n* Poke holes into reflection blocking to make binary serialization work for FX types\r\n* Update the usage based metadata analyzer to scan for binary serialization.\r\n\r\nThis fixes about 300 failing tests newly exposed in #6987.","Url":"https://github.com/dotnet/corert/pull/7075","RelatedDescription":"Closed or merged PR \"Make binary serialization work\" (#7075)"},{"Id":"413877055","IsPullRequest":true,"CreatedAt":"2019-02-24T22:33:06","Actor":"MichalStrehovsky","Number":"7078","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"git merge 617d11b313ebdf83cd4e697dd0b04c290472d4ad\r\n\r\nNot picking up the header change that messed up Redhawk.","Url":"https://github.com/dotnet/corert/pull/7078","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7078)"},{"Id":"413695028","IsPullRequest":true,"CreatedAt":"2019-02-24T16:08:12","Actor":"MichalStrehovsky","Number":"7076","RawContent":null,"Title":"Fix generation of type forwarder metadata","State":"closed","Body":"We were not setting the public key/token for the reference.","Url":"https://github.com/dotnet/corert/pull/7076","RelatedDescription":"Closed or merged PR \"Fix generation of type forwarder metadata\" (#7076)"},{"Id":"413711302","IsPullRequest":true,"CreatedAt":"2019-02-23T16:23:04","Actor":"yowl","Number":"7077","RawContent":null,"Title":"WIP: wasm: fix for incorrect use of VirtualMethodUseNode for generic method","State":"open","Body":"fixes #7073 .  Generic virtual methods were creating a `VirtualMethodUseNode` which I understand to be incorrect.  This PR adds a test for this type of call and calls `NodeFactory.MethodEntrypoint` instead.  I'd welcome feedback on how correct that is, it passes the simple test here, but possibly I'm not understanding the full implication.  Also I've not changed the processing for the `Ldvirtftn` opcode, would that suffer the same problem and if so, how would that be exercised?","Url":"https://github.com/dotnet/corert/pull/7077","RelatedDescription":"Open PR \"WIP: wasm: fix for incorrect use of VirtualMethodUseNode for generic method\" (#7077)"},{"Id":"413631372","IsPullRequest":false,"CreatedAt":"2019-02-23T00:38:11","Actor":"yowl","Number":"7073","RawContent":null,"Title":"wasm: A generic method on an interface fails to compile","State":"open","Body":"The following code fails to compile as it hits an assert:\r\n```\r\n    private static void TestVirtualMethodUse()\r\n    {\r\n        TestGenItf implInt = new TestGenItf();\r\n        implInt.Log<object>(new object());\r\n    }\r\n\r\n    public interface ITestGenItf\r\n    {\r\n        bool Log<TState>(TState state);\r\n    }\r\n\r\n    public class TestGenItf : ITestGenItf\r\n    {\r\n        public bool Log<TState>(TState state)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n```\r\n\r\nHits the assert at \r\nhttps://github.com/dotnet/corert/blob/a99bac8c410b9cbb2b5f6583105ea53db372e61d/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/VirtualMethodUseNode.cs#L39\r\nwhen compiling the method `{[HelloWasm]Program+TestGenItf.Log<TState>(!!0)}`\r\n\r\nStack is\r\n```\r\n \tSystem.Private.CoreLib.dll!System.Diagnostics.Debug.Assert(bool condition, string message, string detailMessage) Line 107\tC#\r\n>\tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.VirtualMethodUseNode.VirtualMethodUseNode(Internal.TypeSystem.MethodDesc decl) Line 39\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.NodeFactory.CreateNodeCaches.AnonymousMethod__36_19(Internal.TypeSystem.MethodDesc method) Line 303\tC#\r\n \tSystem.Collections.Concurrent.dll!System.Collections.Concurrent.ConcurrentDictionary<Internal.TypeSystem.MethodDesc, ILCompiler.DependencyAnalysis.VirtualMethodUseNode>.GetOrAdd(Internal.TypeSystem.MethodDesc key, System.Func<Internal.TypeSystem.MethodDesc, ILCompiler.DependencyAnalysis.VirtualMethodUseNode> valueFactory) Line 989\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.NodeFactory.NodeCache<Internal.TypeSystem.MethodDesc, ILCompiler.DependencyAnalysis.VirtualMethodUseNode>.GetOrAdd(Internal.TypeSystem.MethodDesc key) Line 150\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.NodeFactory.VirtualMethodUse(Internal.TypeSystem.MethodDesc decl) Line 885\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.AddVirtualMethodReference(Internal.TypeSystem.MethodDesc method) Line 2330\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.HandleCall(Internal.TypeSystem.MethodDesc callee, Internal.TypeSystem.MethodSignature signature, Internal.IL.StackEntry[] argumentValues, Internal.IL.ILOpcode opcode, Internal.TypeSystem.TypeDesc constrainedType, LLVMSharp.LLVMValueRef calliTarget, Internal.TypeSystem.TypeDesc forcedReturnType) Line 2037\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.HandleCall(Internal.TypeSystem.MethodDesc callee, Internal.TypeSystem.MethodSignature signature, Internal.IL.ILOpcode opcode, Internal.TypeSystem.TypeDesc constrainedType, LLVMSharp.LLVMValueRef calliTarget) Line 2029\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.ImportCall(Internal.IL.ILOpcode opcode, int token) Line 1688\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.ImportBasicBlock(Internal.IL.ILImporter.BasicBlock basicBlock) Line 581\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.ImportBasicBlocks() Line 304\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.Import() Line 163\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.CompileMethod(ILCompiler.WebAssemblyCodegenCompilation compilation, ILCompiler.DependencyAnalysis.WebAssemblyMethodCodeNode methodCodeNodeNeedingCode) Line 86\tC#\r\n \tILCompiler.WebAssembly.dll!ILCompiler.WebAssemblyCodegenCompilation.ComputeDependencyNodeDependencies(System.Collections.Generic.List<ILCompiler.DependencyAnalysisFramework.DependencyNodeCore<ILCompiler.DependencyAnalysis.NodeFactory>> obj) Line 62\tC#\r\n \tILCompiler.DependencyAnalysisFramework.dll!ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer<ILCompiler.DependencyAnalysisFramework.NoLogStrategy<ILCompiler.DependencyAnalysis.NodeFactory>, ILCompiler.DependencyAnalysis.NodeFactory>.ComputeDependencies(System.Collections.Generic.List<ILCompiler.DependencyAnalysisFramework.DependencyNodeCore<ILCompiler.DependencyAnalysis.NodeFactory>> deferredStaticDependencies) Line 139\tC#\r\n \tILCompiler.DependencyAnalysisFramework.dll!ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer<ILCompiler.DependencyAnalysisFramework.NoLogStrategy<ILCompiler.DependencyAnalysis.NodeFactory>, ILCompiler.DependencyAnalysis.NodeFactory>.ComputeMarkedNodes() Line 262\tC#\r\n \tILCompiler.WebAssembly.dll!ILCompiler.WebAssemblyCodegenCompilation.CompileInternal(string outputFile, ILCompiler.ObjectDumper dumper) Line 51\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.Compilation.ILCompiler.ICompilation.Compile(string outputFile, ILCompiler.ObjectDumper dumper) Line 382\tC#\r\n \tilc.dll!ILCompiler.Program.Run(string[] args) Line 574\tC#\r\n \tilc.dll!ILCompiler.Program.Main(string[] args) Line 730\tC#\r\n```","Url":"https://github.com/dotnet/corert/issues/7073","RelatedDescription":"Open issue \"wasm: A generic method on an interface fails to compile\" (#7073)"},{"Id":"413582574","IsPullRequest":true,"CreatedAt":"2019-02-22T22:28:10","Actor":"Dotnet-GitSync-Bot","Number":"7072","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7072","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7072)"},{"Id":"413511611","IsPullRequest":true,"CreatedAt":"2019-02-22T17:51:48","Actor":"kouvel","Number":"7071","RawContent":null,"Title":"Change Timer implementation on Unixes to use only one scheduling thread","State":"open","Body":"- Separated from https://github.com/dotnet/corert/pull/7066\r\n\r\nCC @filipnavara ","Url":"https://github.com/dotnet/corert/pull/7071","RelatedDescription":"Open PR \"Change Timer implementation on Unixes to use only one scheduling thread\" (#7071)"},{"Id":"413336838","IsPullRequest":true,"CreatedAt":"2019-02-22T17:41:03","Actor":"filipnavara","Number":"7069","RawContent":null,"Title":"Fix timer firing bug introduced in commit e652d4d (#6905 / #6898)","State":"closed","Body":"This is minimal fix for the problem described in https://github.com/dotnet/corert/pull/7066. I took the liberty to also include the accompanying test from that PR. I fully anticipate that this fix will eventually get superseded by the fix from #7066, but I would like to fix the regression as fast as possible for the master builds without waiting for unrelated changes to diagnostic counters.\r\n\r\n/cc @kouvel @jkotas ","Url":"https://github.com/dotnet/corert/pull/7069","RelatedDescription":"Closed or merged PR \"Fix timer firing bug introduced in commit e652d4d (#6905 / #6898)\" (#7069)"},{"Id":"413341138","IsPullRequest":true,"CreatedAt":"2019-02-22T14:03:16","Actor":"MichalStrehovsky","Number":"7070","RawContent":null,"Title":"Fix ProjectN build break","State":"closed","Body":"We need to specify SkipImportRoslynProps because we don't want to include the props file from a bogus file path below, but we do want the 8.0 LangVersion treatment in ProjectN. Since this line is temporary until Roslyn decides that 8.0 is in fact the latest version, I don't feel too bad about this.","Url":"https://github.com/dotnet/corert/pull/7070","RelatedDescription":"Closed or merged PR \"Fix ProjectN build break\" (#7070)"},{"Id":"413316220","IsPullRequest":true,"CreatedAt":"2019-02-22T10:33:17","Actor":"Dotnet-GitSync-Bot","Number":"7068","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7068","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7068)"},{"Id":"412787041","IsPullRequest":true,"CreatedAt":"2019-02-22T09:26:35","Actor":"Dotnet-GitSync-Bot","Number":"7065","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/7065","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7065)"},{"Id":"413152043","IsPullRequest":true,"CreatedAt":"2019-02-21T22:24:05","Actor":"filipnavara","Number":"7067","RawContent":null,"Title":"WIP: Move Thread to shared CoreLib","State":"open","Body":"Counter-part to https://github.com/dotnet/coreclr/pull/22744.","Url":"https://github.com/dotnet/corert/pull/7067","RelatedDescription":"Open PR \"WIP: Move Thread to shared CoreLib\" (#7067)"},{"Id":"413116684","IsPullRequest":true,"CreatedAt":"2019-02-21T20:47:42","Actor":"kouvel","Number":"7066","RawContent":null,"Title":"Implement APIs for some threading metrics (CoreRT), fix `Timer` on Unixes","State":"open","Body":"- API review: https://github.com/dotnet/corefx/issues/35500\r\n- May depend on https://github.com/dotnet/coreclr/pull/22754\r\n- Fixed `Timer` implementation on Unixes. Previously there was only ever one timer request from the upper-level implementation and that is not the case anymore, so the lower-level \"app domain timer\" implementation needed to handle multiple timer requests.","Url":"https://github.com/dotnet/corert/pull/7066","RelatedDescription":"Open PR \"Implement APIs for some threading metrics (CoreRT), fix `Timer` on Unixes\" (#7066)"},{"Id":"412674876","IsPullRequest":true,"CreatedAt":"2019-02-21T07:38:10","Actor":"yowl","Number":"7062","RawContent":null,"Title":"Wasm: fix to enable multidimensional array get and set operations","State":"closed","Body":"Enables get and set operations on multidimensional arrays.  Fixes https://github.com/dotnet/corert/issues/6263","Url":"https://github.com/dotnet/corert/pull/7062","RelatedDescription":"Closed or merged PR \"Wasm: fix to enable multidimensional array get and set operations\" (#7062)"},{"Id":"412680770","IsPullRequest":true,"CreatedAt":"2019-02-21T07:37:14","Actor":"yowl","Number":"7063","RawContent":null,"Title":"wasm: Add test for using","State":"closed","Body":"Fixes https://github.com/dotnet/corert/issues/6474.  Or rather just adds a test for it as it was already working.  There was a test for `try/finally`, but not explicitly `using`.  That test is added here.","Url":"https://github.com/dotnet/corert/pull/7063","RelatedDescription":"Closed or merged PR \"wasm: Add test for using\" (#7063)"},{"Id":"412718852","IsPullRequest":true,"CreatedAt":"2019-02-21T07:36:24","Actor":"Dotnet-GitSync-Bot","Number":"7064","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corert/pull/7064","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7064)"},{"Id":"412594199","IsPullRequest":true,"CreatedAt":"2019-02-20T23:39:35","Actor":"Dotnet-GitSync-Bot","Number":"7059","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @benaadams @stephentoub @stephentoub","Url":"https://github.com/dotnet/corert/pull/7059","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7059)"},{"Id":"412664296","IsPullRequest":false,"CreatedAt":"2019-02-20T22:44:41","Actor":"Danl2620","Number":"7061","RawContent":null,"Title":"Q: Is there any mechanism to generate C++ header files from C#/F#?","State":"open","Body":"Is there a way to build a native static library from a C# project and also generate C++ header files corresponding to certain (potentially attributed) types in the C#/F#?  I'm trying to embed a native .NET project in a C++ project but need a way to get the type declarations correct.","Url":"https://github.com/dotnet/corert/issues/7061","RelatedDescription":"Open issue \"Q: Is there any mechanism to generate C++ header files from C#/F#?\" (#7061)"},{"Id":"412634026","IsPullRequest":true,"CreatedAt":"2019-02-20T21:21:10","Actor":"yowl","Number":"7060","RawContent":null,"Title":"WIP: Wasm: fix unaligned memory access for asm.js target","State":"open","Body":"This is a resubmit of https://github.com/dotnet/corert/pull/6432.  His initial description:\r\n\r\n> Asm.js does aligned memory accesses unless forced to do otherwise. This causes occasional memory corruption on various structures that aren't 4-byte aligned (two of which get used in interface dispatch). To handle that, this change:\r\n> \r\n>     1. Changes the LLVM representation of managed structs to approximately match the managed representation. This fixes DispatchMapEntry, which is 3 uint16s that can be 2-byte aligned.\r\n> \r\n>     2. Annotates an unaligned read used by OptionalFields so the compiler can handle it.\r\n\r\nI've added a few more fixes to get the `-s WASM=0` passing the tests (which the CI doesn't do).  You'll notice a few things which you may want to comment on:\r\n\r\n1. Use of `WASM && DEBUG` to mark sections where the output may go to asm.js, depending on `-s WASM=0`.  Maybe a different directive to `DEBUG` would be more descriptive?  I'm introducing the idea that for release mode the output will always be `-s WASM=1`, i.e. wasm.  This means that it wont be able to produce release mode for asm.js for IE for example.\r\n2. Only code paths that I hit are updated, so e.g. in `src\\Common\\src\\Internal\\NativeFormat\\NativeFormatReader.Primitives.cs` I did `ReadUInt32` and `ReadUInt16` but not the 8 and 64 bit variants.\r\n3. I've not done anything for https://github.com/dotnet/corert/pull/6432#discussion_r226932894 .  Is it suggested to do another section for `#if _MSC_VER`  with the `UNALIGNED` prefix back in?  I could try putting it in unconditionally, I'm not sure what happens to these lines, will they get converted to `unaligned ldind...` ?","Url":"https://github.com/dotnet/corert/pull/7060","RelatedDescription":"Open PR \"WIP: Wasm: fix unaligned memory access for asm.js target\" (#7060)"},{"Id":"412242850","IsPullRequest":true,"CreatedAt":"2019-02-20T19:34:10","Actor":"Dotnet-GitSync-Bot","Number":"7055","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7055","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7055)"},{"Id":"412463521","IsPullRequest":true,"CreatedAt":"2019-02-20T19:33:58","Actor":"kbaladurin","Number":"7057","RawContent":null,"Title":"Include eetype.inl in gcwks.cpp","State":"closed","Body":"Without it we have following error when link against release libRuntime.a:\r\n```\r\nlibRuntime.a(gcwks.cpp.o): In function `EEType::RequiresAlign8()':\r\neetype.h:546: undefined reference to `EEType::get_RareFlags()'\r\n...\r\n```","Url":"https://github.com/dotnet/corert/pull/7057","RelatedDescription":"Closed or merged PR \"Include eetype.inl in gcwks.cpp\" (#7057)"},{"Id":"412457741","IsPullRequest":true,"CreatedAt":"2019-02-20T16:58:27","Actor":"kbaladurin","Number":"7056","RawContent":null,"Title":"Fix objwriter build","State":"closed","Body":"Add include directories for LLVM build.","Url":"https://github.com/dotnet/corert/pull/7056","RelatedDescription":"Closed or merged PR \"Fix objwriter build\" (#7056)"},{"Id":"412475420","IsPullRequest":true,"CreatedAt":"2019-02-20T16:26:16","Actor":"kbaladurin","Number":"7058","RawContent":null,"Title":"Fix tizen rootfs building","State":"closed","Body":"Move tizen-release package from base to unified repo.","Url":"https://github.com/dotnet/corert/pull/7058","RelatedDescription":"Closed or merged PR \"Fix tizen rootfs building\" (#7058)"},{"Id":"412158659","IsPullRequest":true,"CreatedAt":"2019-02-20T04:38:50","Actor":"Dotnet-GitSync-Bot","Number":"7053","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @hughbe @stephentoub","Url":"https://github.com/dotnet/corert/pull/7053","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7053)"},{"Id":"412180530","IsPullRequest":true,"CreatedAt":"2019-02-19T23:57:12","Actor":"yowl","Number":"7054","RawContent":null,"Title":"Wasm: fix operations on bytes that are stored in shorts","State":"open","Body":"The final expression type for binary ops like `add` and shift ops `<<` was incorrectly set to `byte` when the operand was of type `byte`.  These operations act on ints (or int64 - which was ok), and they were incorrectly being truncated back to `byte`.  E.g.\r\n\r\n```\r\n        byte aByte = 2;\r\n        short aShort = 0x100;\r\n        short byteAndShortResult = (short)(aByte + aShort);\r\n```\r\nwas resulting in `2`.","Url":"https://github.com/dotnet/corert/pull/7054","RelatedDescription":"Open PR \"Wasm: fix operations on bytes that are stored in shorts\" (#7054)"},{"Id":"411994564","IsPullRequest":true,"CreatedAt":"2019-02-19T17:28:30","Actor":"Dotnet-GitSync-Bot","Number":"7052","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @fiigii","Url":"https://github.com/dotnet/corert/pull/7052","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7052)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"414342537","IsPullRequest":true,"CreatedAt":"2019-02-25T22:41:43","Actor":"nguerrera","Number":"2990","RawContent":null,"Title":"Add hook to redirect common props import","State":"open","Body":"Introduce $(AlternateCommonProps) to redirect the Sdk common props import to a user-defined location. This is morally equivalent to $(LanguageTargets) being customizable on the targets side.\r\n\r\nHaving full control over both of these imports makes it much easier to integrate the SDK into existing heavily-customized builds. The current use case is to get some internal builds over to netcoreapp3.0.\r\n\r\nThis greatly facilitates moving some internal builds to netcoreapp3.0 as they are heavily customized","Url":"https://github.com/dotnet/sdk/pull/2990","RelatedDescription":"Open PR \"Add hook to redirect common props import\" (#2990)"},{"Id":"414093522","IsPullRequest":true,"CreatedAt":"2019-02-25T14:21:40","Actor":"dotnet-maestro[bot]","Number":"2988","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19124.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2988","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2988)"},{"Id":"414119637","IsPullRequest":false,"CreatedAt":"2019-02-25T14:02:53","Actor":"loop-evgeny","Number":"2989","RawContent":null,"Title":"Error running self-contained Linux EXE: \"This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\"","State":"open","Body":"I created a new console application in VS 2017 using .NET Core 2.1. Published it as a self-contained linux-x64 app without any changes and tried to run it on an Ubuntu 18.04 VM. Got this error:\r\n\r\n```\r\n ./LinuxTest \r\nThis executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\r\nA fatal error was encountered. This executable was not bound to load a managed DLL.\r\n```\r\n\r\nc3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2 is apparently the SHA256 hash of \"foobar\", so whatever the real problem is, this is a very weird error message, too!\r\n\r\nLinuxTest.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nProgram.cs:\r\n```\r\nusing System;\r\n\r\nnamespace LinuxTest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nResulting self-contained binary: [LinuxTest.zip](https://github.com/dotnet/sdk/files/2900841/LinuxTest.zip)\r\n\r\nIf I install dotnet-runtime-2.1 on the Linux VM and run `dotnet LinuxTest.dll` it works.","Url":"https://github.com/dotnet/sdk/issues/2989","RelatedDescription":"Open issue \"Error running self-contained Linux EXE: \"This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\"\" (#2989)"},{"Id":"413818973","IsPullRequest":true,"CreatedAt":"2019-02-25T13:00:49","Actor":"dotnet-maestro[bot]","Number":"2985","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19123.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2985","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2985)"},{"Id":"413197636","IsPullRequest":false,"CreatedAt":"2019-02-25T02:30:23","Actor":"natemcmaster","Number":"2976","RawContent":null,"Title":"All packages targeting netcoreapp3.0 have a 'Microsoft.NETCore.Platforms' dependency in nuspec","State":"closed","Body":"https://github.com/dotnet/sdk/blob/0690b28e426f5b7e6dfe7ab4200b83ce3c96bc95/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.DefaultItems.props#L81-L87\r\n\r\nThis should probably have been 'PrivateAssets=All'. \r\n\r\nAll aspnet 3.0 Preview 3 packages which target netcoreapp3.0 have this dependency in their nuspec. cc @Eilon @livarcocc \r\n\r\n![image](https://user-images.githubusercontent.com/2696087/53213059-4e1c0280-35fc-11e9-9591-32f81f33502c.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/2976","RelatedDescription":"Closed issue \"All packages targeting netcoreapp3.0 have a 'Microsoft.NETCore.Platforms' dependency in nuspec\" (#2976)"},{"Id":"413886149","IsPullRequest":true,"CreatedAt":"2019-02-25T02:30:21","Actor":"dotnet-bot","Number":"2987","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2987","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#2987)"},{"Id":"413843026","IsPullRequest":true,"CreatedAt":"2019-02-24T21:53:25","Actor":"dsplaisted","Number":"2986","RawContent":null,"Title":"Mark implicit platforms package reference as PrivateAssets","State":"closed","Body":"Fixes #2976","Url":"https://github.com/dotnet/sdk/pull/2986","RelatedDescription":"Closed or merged PR \"Mark implicit platforms package reference as PrivateAssets\" (#2986)"},{"Id":"413641877","IsPullRequest":false,"CreatedAt":"2019-02-24T18:29:59","Actor":"SergeyKhutornoy","Number":"2982","RawContent":null,"Title":"donet publish always publishes web.Release.config","State":"closed","Body":"When you run dotnet publish command for a Microsoft.NET.Sdk.Web project targeting **net462**, the tool always publishes web.*.config files (web.debug.config and web.release.config in addition to the transformed web.config).\r\n\r\nProject file (.csproj):\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <ProductVersion>8.0.30703</ProductVersion>\r\n    <ProjectGuid>{842f247f-8658-4b47-b9cf-5582f7c1e26e}</ProjectGuid>\r\n    <RootNamespace>Service</RootNamespace>\r\n    <AssemblyName>Service</AssemblyName>\r\n    <TargetFramework>net462</TargetFramework>\r\n    <AssemblyTitle>Service</AssemblyTitle>\r\n    <OutputPath>bin\\$(Configuration)\\</OutputPath>\r\n    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>\r\n    <OutputType>Library</OutputType>\r\n    <AppDesignerFolder>Properties</AppDesignerFolder>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System.configuration\" />\r\n    <Reference Include=\"System.Runtime.Serialization\" />\r\n    <Reference Include=\"System.ServiceModel\" />\r\n    <Reference Include=\"System\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n## Steps to reproduce\r\n1. Create web.config, web.Debug.config, web.Release.config files in the project root folder.\r\n2. Run `dotnet publish /p:Configuration=Release`\r\n\r\nor\r\n\r\n1. Create web.config, web.Debug.config, web.Release.config files in the project root folder.\r\n2. Run `msbuild Service.csproj /p:DeployOnBuild=true /p:Configuration=Release /p:PublishProfile=FolderProfile`\r\n\r\n## Expected behavior\r\nThere is only transformed web.config file in the publish folder.\r\n\r\n## Actual behavior\r\nweb.config, web.release.config, web.debug.config files are in the publish folder.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.103\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]","Url":"https://github.com/dotnet/sdk/issues/2982","RelatedDescription":"Closed issue \"donet publish always publishes web.Release.config\" (#2982)"},{"Id":"413639072","IsPullRequest":false,"CreatedAt":"2019-02-24T18:29:13","Actor":"YankdaCode","Number":"2981","RawContent":null,"Title":"Error on implementing custom FileProvider - Cannot find compilation library location for package 'projectCLB'","State":"closed","Body":"So, I am designing a very customized solution from scratch wherein I have asp.net mvc core app as the main web app. Then I create separate class libraries and update the SDK to Microsoft.NET.Sdk.Razor and use:\r\n    `<PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />`\r\nThis allows me to create MVC type class library, lets say \"projectCLB\" and then at startup I scan the folder that is located outside of the project main directory and load the assemblies for my project:\r\nprojectCLB.dll\r\nprojectCLB.Views.dll\r\n\r\nThis was working fine by the following code:\r\n`\r\n```\r\nAssembly assembly;\r\n                try\r\n                {\r\n                    assembly = AssemblyLoadContext.Default.LoadFromAssemblyPath(file.FullName);\r\n                }\r\n                catch (FileLoadException ex)\r\n                {\r\n                    // If assembly is already loaded, we'll just catch it and continue to the next one, plugins can have same dependencies:\r\n                    if (ex.Message == \"Assembly with same name is already loaded\")\r\n                    {\r\n                        continue;\r\n                    }\r\n                    throw;\r\n                }\r\n\r\n// Check if the assembly has already been loaded:\r\n                if (!(mvcBuilder.PartManager.ApplicationParts.Any(x => x.Name == assembly.GetName().Name)))\r\n                {\r\n                    //Load the pre-compiled Views:\r\n                    if (assembly.ManifestModule.Name.Contains(\".Views.dll\"))\r\n                    {\r\n                        mvcBuilder.ConfigureApplicationPartManager(mgr =>\r\n                        {\r\n                            foreach (var b in CompiledRazorAssemblyApplicationPartFactory.GetDefaultApplicationParts(assembly))\r\n                            {\r\n                                mvcBuilder.ConfigureApplicationPartManager(apm => apm.ApplicationParts.Add(b));\r\n                            }\r\n\r\n                        });\r\n\r\n                    }\r\n                    // Load the plug in assemblies:\r\n                    else\r\n                    {\r\n                        \r\n                        mvcBuilder.AddApplicationPart(assembly);\r\n                     \r\n                       \r\n\r\n                    }\r\n\r\n                }\r\n```\r\n`\r\n\r\n\r\nThis is how my class library project file looks:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Razor\">\r\n\r\n\r\n  <PropertyGroup Label=\"Globals\">\r\n    <SccProjectName>SAK</SccProjectName>\r\n    <SccProvider>SAK</SccProvider>\r\n    <SccAuxPath>SAK</SccAuxPath>\r\n    <SccLocalPath>SAK</SccLocalPath>\r\n  </PropertyGroup>\r\n\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    \r\n  </PropertyGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    \r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Relational\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.2.1\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"Content\\\" />\r\n    <Folder Include=\"Infrastructure\\Data\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n\r\n    <ProjectReference Include=\"..\\..\\<baseapp project>.Common\\baseapp project.Common.csproj\" />\r\n\r\n    <ProjectReference Include=\"..\\..\\baseapp project.Data\\baseapp project.Data.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\baseapp project.Repositories\\baseapp project.Repositories.csproj\" />\r\n  </ItemGroup>\r\n  <Target Name=\"UpdateTargetPath\" BeforeTargets=\"AssignRazorGenerateTargetPaths\">\r\n    <ItemGroup>\r\n      <RazorGenerate Include=\"@(RazorGenerate)\" Link=\"$(TargetName)\\plugin\\%(RazorGenerate.RelativeDir)%(RazorGenerate.FileName)%(RazorGenerate.Extension)\" />\r\n\r\n    </ItemGroup>\r\n  </Target>\r\n \r\n\r\n</Project>\r\n\r\n```\r\n\r\nIt was working all fine until I implemented a File Provider so that we can use cshtml files at development time instead of precompiled views since I was having to copy the dlls/ rebuild after a cshtml change. \r\nReason being that PhysicalFileProvider doesn't look outside of the webroot. Now I get this error and there are other posts that I saw but none of the workarounds actually work for me.\r\n\r\n\r\n`System.InvalidOperationException: Cannot find compilation library location for package 'projectCLB'\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n   at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n   at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.Process(RazorProjectItem projectItem)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.OnCacheMiss(String normalizedPath)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.OnCacheMiss(ViewLocationExpanderContext expanderContext, ViewLocationCacheKey cacheKey)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromViewLocations(ActionContext actionContext, String pageName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)`","Url":"https://github.com/dotnet/sdk/issues/2981","RelatedDescription":"Closed issue \"Error on implementing custom FileProvider - Cannot find compilation library location for package 'projectCLB'\" (#2981)"},{"Id":"413780813","IsPullRequest":true,"CreatedAt":"2019-02-24T04:32:29","Actor":"dsplaisted","Number":"2984","RawContent":null,"Title":"Add CI legs to run tests as tools","State":"open","Body":"Eventually I'd like to use the tests from this repo in other repos such as dotnet/core-sdk.  This PR adds CI legs which runs the tests as tools, in order to make sure they run correctly as tools.","Url":"https://github.com/dotnet/sdk/pull/2984","RelatedDescription":"Open PR \"Add CI legs to run tests as tools\" (#2984)"},{"Id":"413693389","IsPullRequest":true,"CreatedAt":"2019-02-23T14:21:28","Actor":"dotnet-maestro[bot]","Number":"2983","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19122.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2983","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2983)"},{"Id":"413638871","IsPullRequest":true,"CreatedAt":"2019-02-23T01:33:35","Actor":"natemcmaster","Number":"2980","RawContent":null,"Title":"Change publish feed to workaround 'Waiting to obtain an exclusive lock on the feed.'","State":"open","Body":"We're getting consistent build timeouts. Changing to a unique feed instead. \n\nNote!!! Each upstream repo will need to add this to restore sources.","Url":"https://github.com/dotnet/sdk/pull/2980","RelatedDescription":"Open PR \"Change publish feed to workaround 'Waiting to obtain an exclusive lock on the feed.'\" (#2980)"},{"Id":"413617702","IsPullRequest":true,"CreatedAt":"2019-02-22T23:24:14","Actor":"wli3","Number":"2979","RawContent":null,"Title":"Fix 1.0 project tools missing dll in runtime","State":"open","Body":"By Disabling targeting pack reference in generate deps.json\r\n\r\nIn short, since generating deps.json in 2.x.xxx SDK does not have Microsoft.NETCore.App reference. We need to do the same for 2.x.xxx.\r\n\r\nDetail:\r\n\r\nProject Tools deps.json generator is not ideal. When restore, since we don’t know what is the tool’s TFM before restoring it, we will always restore with SDK’s TFM, which is netcoreapp3.0.\r\n\r\nIn 2.x.xxx time due to special restore logic, there is no reference to Microsoft.NETCore.App in asset.json file. So when generate deps.son, assets from the packages will be in deps.json instead of being removed by conflict resolution. This is important since when invoke the command, 1.0 runtime will be used (due to the tool is targeting 1.0), and 1.0 runtime will not have all the dlls restored in netcoreapp2.0 TFM available to load these dll need dep.json.\r\n\r\nAnd now in 3.0, ImplicitFrameworkReferences need to be disabled to match existing “no reference to Microsoft.NETCore.App” behavior.","Url":"https://github.com/dotnet/sdk/pull/2979","RelatedDescription":"Open PR \"Fix 1.0 project tools missing dll in runtime\" (#2979)"},{"Id":"413284966","IsPullRequest":false,"CreatedAt":"2019-02-22T21:29:36","Actor":"jimmylewis","Number":"2977","RawContent":null,"Title":"Installing 3.0 Preview 3 SDK broke build for 3.0 Preview 2 Razor Components app","State":"closed","Body":"I created an app with the Preview 2 SDK (released bits).  Today I installed the latest available Preview 3 bits (https://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/dotnet-sdk-latest-win-x64.exe) and now I get build errors for the Razor Components cshtml files.  I'm not sure if this is expected, since there have been a lot of changes in this area between Preview 2 and Preview 3.\r\n\r\nInstallation reported these bits, for context:\r\n>The following were installed at: 'C:\\Program Files\\dotnet'\r\n>    • .NET Core SDK 3.0.100-preview3-010343\r\n>    • .NET Core Runtime 3.0.0-preview3-27421-7\r\n>    • ASP.NET Core Runtime 3.0.0-preview3-19121-17\r\n>    • .NET Core Windows Desktop Runtime 3.0.0-preview3-27420-40\r\n\r\nThe build errors I get are like this one (note, it's in a generated file for the .cshtml):\r\n> obj\\Debug\\netstandard2.0\\Razor\\Pages\\Counter.cshtml.g.cs(35,48): error CS0234: The type or namespace name 'EventCallback' does not exist in the namespace 'Microsoft.AspNetCore.Components' (are you missing an assembly reference?) [D:\\src\\AppBuilding\\src\\OrderSite.App\\OrderSite.App.csproj]\r\n\r\nThe generated line of code is:\r\n```\r\nbuilder.AddAttribute(7, \"onclick\", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, IncrementCount));\r\n```\r\n\r\nWith the Preview 2 SDK, the generated line of code was:\r\n\r\n```\r\nbuilder.AddAttribute(7, \"onclick\", Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Components.UIMouseEventArgs>(IncrementCount));\r\n```\r\n\r\nNote: if I create a new Razor Components project with the Preview 3 SDK installed, it builds fine.  The project created is very different from the Preview 2 template however.","Url":"https://github.com/dotnet/sdk/issues/2977","RelatedDescription":"Closed issue \"Installing 3.0 Preview 3 SDK broke build for 3.0 Preview 2 Razor Components app\" (#2977)"},{"Id":"412718584","IsPullRequest":true,"CreatedAt":"2019-02-22T19:32:40","Actor":"tmat","Number":"2971","RawContent":null,"Title":"Set copyright and package license","State":"closed","Body":"Prepares repo for change https://github.com/dotnet/arcade/pull/2003 by setting `Copyright` and `PackageLicenseExpression` properties. These values will be required to be set by each repository once https://github.com/dotnet/arcade/pull/2003 is merged.\r\n\r\nIn order to not break the current builds this change sets the properties conditionally. This condition can be removed once all repos switch to Arcade that has https://github.com/dotnet/arcade/pull/2003.\r\n\r\n@markwilkie\r\n","Url":"https://github.com/dotnet/sdk/pull/2971","RelatedDescription":"Closed or merged PR \"Set copyright and package license\" (#2971)"},{"Id":"413394061","IsPullRequest":true,"CreatedAt":"2019-02-22T14:46:46","Actor":"dotnet-maestro[bot]","Number":"2978","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19121.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2978","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2978)"},{"Id":"413180902","IsPullRequest":true,"CreatedAt":"2019-02-22T02:00:20","Actor":"dotnet-bot","Number":"2975","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2975","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#2975)"},{"Id":"412792797","IsPullRequest":true,"CreatedAt":"2019-02-21T19:16:46","Actor":"dsplaisted","Number":"2972","RawContent":null,"Title":"Add test and fix self-contained app using ASP.NET Core","State":"closed","Body":"Test scenario for https://github.com/aspnet/AspNetCore/issues/7782","Url":"https://github.com/dotnet/sdk/pull/2972","RelatedDescription":"Closed or merged PR \"Add test and fix self-contained app using ASP.NET Core\" (#2972)"},{"Id":"412890450","IsPullRequest":true,"CreatedAt":"2019-02-21T15:00:25","Actor":"dotnet-bot","Number":"2973","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2973","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#2973)"},{"Id":"412913042","IsPullRequest":true,"CreatedAt":"2019-02-21T14:16:41","Actor":"dotnet-maestro[bot]","Number":"2974","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19121.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2974","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2974)"},{"Id":"412680563","IsPullRequest":true,"CreatedAt":"2019-02-21T06:42:17","Actor":"nugetlurker","Number":"2970","RawContent":null,"Title":"Insert NuGet Build 5.0.0-rtm.5856 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-rtm.5856 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/2970","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-rtm.5856 into sdk\" (#2970)"},{"Id":"412680549","IsPullRequest":true,"CreatedAt":"2019-02-21T06:41:58","Actor":"nugetlurker","Number":"2969","RawContent":null,"Title":"Insert NuGet Build 5.0.0-rtm.5856 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-rtm.5856 into sdk release/2.2.2xx branch","Url":"https://github.com/dotnet/sdk/pull/2969","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-rtm.5856 into sdk\" (#2969)"},{"Id":"412603209","IsPullRequest":true,"CreatedAt":"2019-02-21T00:12:52","Actor":"dsplaisted","Number":"2965","RawContent":null,"Title":"Update stage 0, Fix .NET Standard 2.1","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2965","RelatedDescription":"Closed or merged PR \"Update stage 0, Fix .NET Standard 2.1\" (#2965)"},{"Id":"412613270","IsPullRequest":true,"CreatedAt":"2019-02-20T21:40:19","Actor":"wli3","Number":"2967","RawContent":null,"Title":"WIP Update stage0 and nuget","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2967","RelatedDescription":"Closed or merged PR \"WIP Update stage0 and nuget\" (#2967)"},{"Id":"412641119","IsPullRequest":true,"CreatedAt":"2019-02-20T21:39:36","Actor":"wli3","Number":"2968","RawContent":null,"Title":"WIP merge release/2.2.2xx to release/release/3.0.1xx","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/2968","RelatedDescription":"Open PR \"WIP merge release/2.2.2xx to release/release/3.0.1xx\" (#2968)"},{"Id":"412604385","IsPullRequest":false,"CreatedAt":"2019-02-20T20:03:26","Actor":"tmat","Number":"2966","RawContent":null,"Title":"Global tool shims: Store package version in Win32 version resource ","State":"open","Body":"**Issue**\r\n\r\nCurrently the tool shim embeds a relative path to the target .dll in a `.data` section that includes package version:\r\n\r\nFor example:\r\n```\r\n.store\\microsoft.dotnet.darc\\1.1.0-beta.19081.1\\microsoft.dotnet.darc\\1.1.0-beta.19081.1\\tools\\netcoreapp2.1\\any\\Microsoft.DotNet.Darc.dll\r\n```\r\n\r\nThis design makes it very difficult to change the version number in a post-build step. \r\nThis approach is not compatible with some of our build tools and deterministic build tools that build artifacts without versions and stamp them with the version afterwards.\r\n\r\n**Proposal**\r\n\r\nInstead of embedding relative path, store the package version in a version resource, read the version and construct the path in the shim.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2966","RelatedDescription":"Open issue \"Global tool shims: Store package version in Win32 version resource \" (#2966)"},{"Id":"412390668","IsPullRequest":true,"CreatedAt":"2019-02-20T15:00:53","Actor":"dotnet-bot","Number":"2963","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2963","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#2963)"},{"Id":"412413417","IsPullRequest":true,"CreatedAt":"2019-02-20T14:26:53","Actor":"dotnet-maestro[bot]","Number":"2964","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19119.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2964","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2964)"},{"Id":"411889557","IsPullRequest":true,"CreatedAt":"2019-02-20T03:00:31","Actor":"dotnet-bot","Number":"2961","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2961","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#2961)"},{"Id":"412091091","IsPullRequest":false,"CreatedAt":"2019-02-19T19:39:26","Actor":"dsplaisted","Number":"2962","RawContent":null,"Title":"Remove UseRefTargetingPacks once SDK round-trips through core-sdk","State":"open","Body":"#2919 added a `UseRefTargetingPacks` flag to enable using the new .Ref targeting packs instead of the ones in the bundled versions file.  Once that PR has flowed into core-sdk, we should update the stage 0 in dotnet/sdk and remove the flag.","Url":"https://github.com/dotnet/sdk/issues/2962","RelatedDescription":"Open issue \"Remove UseRefTargetingPacks once SDK round-trips through core-sdk\" (#2962)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1098610296367841282","CreatedAt":"2019-02-21T15:48:00+00:00","UserScreenname":"dotnet","Text":"The #dotnet blog just got a makeover!\n\nDiscover and share great content while enjoying the modern, clean design of… https://t.co/b0rdirHuPF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":49,"FavoriteCount":15,"RawContent":null},{"Id":"1098594189313363968","CreatedAt":"2019-02-21T14:44:00+00:00","UserScreenname":"dotnet","Text":". @ChristosMatskas joins #OnDotNet to share the story of an application he built using the Azure SDKs for .NET and… https://t.co/TR4ua9BnvV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"1098337450924040194","CreatedAt":"2019-02-20T21:43:49+00:00","UserScreenname":"dotnet","Text":"Check out the February updates for .NET. https://t.co/8Fz51sPyod","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"1097924819415326720","CreatedAt":"2019-02-19T18:24:10+00:00","UserScreenname":"dotnet","Text":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019 https://t.co/45GssRCrZk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":128,"FavoriteCount":133,"RawContent":null},{"Id":"1095786421221240833","CreatedAt":"2019-02-13T20:46:56+00:00","UserScreenname":"dotnet","Text":"The #DotNet blog is getting a major update! Find more details and get a sneak peek of our new and improved blog des… https://t.co/cIC92TS7qA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":100,"FavoriteCount":37,"RawContent":null}]}},"RunOn":"2019-02-26T05:30:55.5339752Z","RunDurationInMilliseconds":25478}