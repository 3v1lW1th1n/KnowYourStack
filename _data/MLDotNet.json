{"Data":{"GitHub":{"Issues":[{"Id":"455987251","IsPullRequest":false,"CreatedAt":"2019-06-13T22:54:47","Actor":"marcmm","Number":"3870","RawContent":null,"Title":"Need a way to predict a batch of examples in one call to Tensorflow","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .Net Core 2.1\r\n\r\n### Issue\r\n\r\n- **What did you do?** Using Tensorflow extension, there's no support to predict a batch of examples in one call to Tensorflow.\r\n- **What happened?** This functionality is not supported at this time.\r\n- **What did you expect?** It would be good to support this functionality to improve efficiency in model prediction.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3870","RelatedDescription":"Open issue \"Need a way to predict a batch of examples in one call to Tensorflow\" (#3870)"},{"Id":"455973386","IsPullRequest":false,"CreatedAt":"2019-06-13T22:06:36","Actor":"prathyusha12345","Number":"3869","RawContent":null,"Title":"Getting OutOfMemory exception while training model on large datasets in file","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows\r\n\r\n\r\n### Issue\r\n\r\nI am trying to create a sample  https://github.com/dotnet/machinelearning-samples/pull/520 to train a model on large datasets that are stored in a **file**. I am using BinaryClassification trainer. While training the model I am getting the OutOfMemory exception at the Fit() method as shown below.\r\n\r\n var model = trainingPipeLine.Fit(trainTestData.TrainSet);           \r\n\r\n![image](https://user-images.githubusercontent.com/22335043/59470767-99496380-8ded-11e9-9adb-3eb9d1d3ea43.png)\r\n\r\ncomplete details of error \r\n\r\n```\r\nSystem.FormatException\r\n  HResult=0x80131537\r\n  Message=Parsing failed with an exception: Stream reading encountered exception\r\n  Source=Microsoft.ML.Data\r\n  StackTrace:\r\n   at Microsoft.ML.Data.TextLoader.Cursor.<ParseParallel>d__33.MoveNext()\r\n   at Microsoft.ML.Data.TextLoader.Cursor.MoveNextCore()\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext()\r\n   at Microsoft.ML.Data.LinkedRowFilterCursorBase.MoveNextCore()\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext()\r\n   at Microsoft.ML.Transforms.ValueToKeyMappingTransformer.Train(IHostEnvironment env, IChannel ch, ColInfo[] infos, IDataView keyData, ColumnOptionsBase[] columns, IDataView trainingData, Boolean autoConvert)\r\n   at Microsoft.ML.Transforms.ValueToKeyMappingTransformer..ctor(IHostEnvironment env, IDataView input, ColumnOptionsBase[] columns, IDataView keyData, Boolean autoConvert)\r\n   at Microsoft.ML.Transforms.ValueToKeyMappingEstimator.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Transforms.OneHotEncodingTransformer..ctor(ValueToKeyMappingEstimator term, IEstimator`1 toVector, IDataView input)\r\n   at Microsoft.ML.Transforms.OneHotEncodingEstimator.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at LargeDatasetsInSqlServer.Program.Main() in C:\\GitRepos\\Fork\\ML-samples\\ML-samples-LargeDataInFile\\samples\\csharp\\getting-started\\LargeDatasetsInFile\\LargeDatasetsInFile\\Program.cs:line 107\r\n\r\nInner Exception 1:\r\nFormatException: Stream reading encountered exception\r\n\r\nInner Exception 2:\r\nOutOfMemoryException: Insufficient memory to continue the execution of the program.\r\n\r\n\r\n```\r\nThe data set is copied from shared folder **\\\\ct01\\data\\Criteo\\Spark\\day_0_withHeader.tsv**.\r\n\r\n### Source code / logs\r\n\r\nPlease find the entire source code from the PR  https://github.com/dotnet/machinelearning-samples/pull/520\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3869","RelatedDescription":"Open issue \"Getting OutOfMemory exception while training model on large datasets in file\" (#3869)"},{"Id":"455967713","IsPullRequest":false,"CreatedAt":"2019-06-13T21:54:59","Actor":"prathyusha12345","Number":"3868","RawContent":null,"Title":"Training 10gb of data in local SQL database is taking more than 14 hours","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows\r\n\r\n\r\n### Issue\r\n\r\nI tried to create  a sample  https://github.com/dotnet/machinelearning-samples/pull/498 to train data stored in local sql database. I tried to execute the sample . The training is not at all completing. I have started executing the sample since **14 hours** back. The model sis till showing as training.\r\n\r\nI wonder how long this training takes to execute 10gb of data. The data base contains 32 millions of records.\r\n\r\nI have copied the file from shared location \\\\ct01\\data\\Criteo\\Spark\\day_0_withHeader.tsv. The actual file size is of **42 gb**. I imported the file manually into local SQL database which can have around **10gb** of data.\r\n\r\nCould anyone please let me know how long do I/user need to wait to train 10gb of data? I wanted to see when it will complete training.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3868","RelatedDescription":"Closed issue \"Training 10gb of data in local SQL database is taking more than 14 hours\" (#3868)"},{"Id":"455945890","IsPullRequest":false,"CreatedAt":"2019-06-13T20:48:27","Actor":"benavidezb","Number":"3867","RawContent":null,"Title":"Nonlinear Regression with Custom Target Function","State":"open","Body":"Is there a nonlinear regression or curve fitting class that supports custom functions of at least two independent variables and at least 5 parameters?\r\n\r\nI have a nonlinear regression problem that I need to solve using C#. I have a transfer function defined as:\r\n\r\nZ = A+1/(1/(X/256*B+3*C)+1/(Y/1024*D+2*E))\r\n\r\nWhere X and Y are my independent variables, Z is the output data I have to train from, and A-E are the parameters I need to the regression technique to solve. I have initial guesses for these parameters:\r\n\r\nA = 20\r\n\r\nB = 10000\r\n\r\nC = 50\r\n\r\nD = 50000\r\n\r\nE = 60\r\n\r\nI don't want to use generic regression models to estimate Z as I am specifically using the estimated parameters later on in the program. Any help would be greatly appreciated.","Url":"https://github.com/dotnet/machinelearning/issues/3867","RelatedDescription":"Open issue \"Nonlinear Regression with Custom Target Function\" (#3867)"},{"Id":"455509069","IsPullRequest":true,"CreatedAt":"2019-06-13T20:40:27","Actor":"Dmitry-A","Number":"3860","RawContent":null,"Title":"[AutoML] add task agnostic wrappers for autofit calls","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3860","RelatedDescription":"Closed or merged PR \"[AutoML] add task agnostic wrappers for autofit calls\" (#3860)"},{"Id":"455876099","IsPullRequest":false,"CreatedAt":"2019-06-13T17:55:55","Actor":"CESARDELATORRE","Number":"3866","RawContent":null,"Title":"Document what's supported in \"ONNX-ML.NET\"","State":"open","Body":"@wschin, @codemzs \r\nRelated to ONNX. Can we have documented what is supported when using ONNX from ML.NET? - Either for both scenarios: 1. Export/convert model scenario and 2. Load ONNX model scenario.\r\n\r\nFor instance:\r\n\r\n- 1. When exporting ML.NET models to ONNX with [ConvertToOnnx()](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.onnxexportextensions.converttoonnx?view=ml-dotnet-preview), will any type of ML.NET model work as ONNX model executed later on by the ONNX runtime from any other framework? **In ML.NET preview versions only certain ML.NET models could be exported to the ONNX-ML format. Is that still the case?** \r\n\r\n- 2. Can any type of loaded ONNX model run on ML.NET?\r\n\r\nFor instance, in the reference for [ConvertToOnnx()](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.onnxexportextensions.converttoonnx?view=ml-dotnet-preview) it doesn't say what's supported and what's not.\r\n\r\n**Do we have any documentation stating what's supported and what's not supported in \"ONNX-ML.NET\"?**\r\n\r\nIn addition to that, performance/accuracy comparison should also be covered due to issues like this:\r\n[ONNX Exports are Lossy](https://github.com/dotnet/machinelearning/issues/3206)","Url":"https://github.com/dotnet/machinelearning/issues/3866","RelatedDescription":"Open issue \"Document what's supported in \"ONNX-ML.NET\"\" (#3866)"},{"Id":"455846204","IsPullRequest":false,"CreatedAt":"2019-06-13T16:47:08","Actor":"codemzs","Number":"3865","RawContent":null,"Title":"Sanity check APIs from Microsoft.ML.OnnxTransfomer nuget","State":"open","Body":"We plan to GA Microsoft.ML.OnnxTransfomer nuget in 1.2 release. We must do a final pass over the public API surface and ensure we only exposing relevant APIs.","Url":"https://github.com/dotnet/machinelearning/issues/3865","RelatedDescription":"Open issue \"Sanity check APIs from Microsoft.ML.OnnxTransfomer nuget\" (#3865)"},{"Id":"455844908","IsPullRequest":false,"CreatedAt":"2019-06-13T16:43:58","Actor":"codemzs","Number":"3864","RawContent":null,"Title":"Sanity check APIs from Microsoft.ML.TimeSeries nuget","State":"open","Body":"We plan to GA Microsoft.ML.TimeSeries nuget in 1.2 release. We must do a final pass over the public API surface and ensure we only exposing relevant APIs.","Url":"https://github.com/dotnet/machinelearning/issues/3864","RelatedDescription":"Open issue \"Sanity check APIs from Microsoft.ML.TimeSeries nuget\" (#3864)"},{"Id":"455843842","IsPullRequest":false,"CreatedAt":"2019-06-13T16:41:26","Actor":"codemzs","Number":"3863","RawContent":null,"Title":"Sanity check APIs from Microsoft.ML.Tensorflow nuget","State":"open","Body":"We plan to GA Microsoft.ML.Tensorflow nuget in 1.2 release. Lets do a final pass on the binary and make sure we are only exposing relevant API.","Url":"https://github.com/dotnet/machinelearning/issues/3863","RelatedDescription":"Open issue \"Sanity check APIs from Microsoft.ML.Tensorflow nuget\" (#3863)"},{"Id":"455842337","IsPullRequest":false,"CreatedAt":"2019-06-13T16:38:02","Actor":"codemzs","Number":"3862","RawContent":null,"Title":"Conform time series forecasting API to estimator standards","State":"open","Body":"Currently time series forecasting framework and API is a standalone entity. We must change that to be an estimator so that it fit seamlessly into the training pipeline. Do the following:\r\n\r\n1) Make SSA forecasting an estimator API.\r\n2) Create a fit(Idataview) that is used for training the forecasting model.\r\n3) Create a fit(IDataView, SSAModel) that is used for updating the forecasting model from a column in the IDataView\r\n4) Create a Transform(IDataView) that forecasts values up a horizon that is read from a column-row in the IDataView. Here forecasted values are represented as a variable sized vector in the column.\r\n5) Create a Transform() that forecasts values as a new IDataView where each forecasted value is its own row.\r\n\r\nCC: @ganik @artidoro @yaeldekel @CESARDELATORRE @eerhardt ","Url":"https://github.com/dotnet/machinelearning/issues/3862","RelatedDescription":"Open issue \"Conform time series forecasting API to estimator standards\" (#3862)"},{"Id":"454789414","IsPullRequest":true,"CreatedAt":"2019-06-13T16:29:00","Actor":"codemzs","Number":"3853","RawContent":null,"Title":"Update roadmap.","State":"closed","Body":"fixes #2074\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3853","RelatedDescription":"Closed or merged PR \"Update roadmap.\" (#3853)"},{"Id":"455830927","IsPullRequest":false,"CreatedAt":"2019-06-13T16:12:13","Actor":"ebizupnorth","Number":"3861","RawContent":null,"Title":"Feature: A dropdown list to choose what OptimizingMetric to use in AutoML GUI","State":"open","Body":"It would be better if there is an option to choose what OptimizingMetric to use when using the AutoML GUI during training.\r\n\r\nThanks for this amazing AutoML.","Url":"https://github.com/dotnet/machinelearning/issues/3861","RelatedDescription":"Open issue \"Feature: A dropdown list to choose what OptimizingMetric to use in AutoML GUI\" (#3861)"},{"Id":"455446582","IsPullRequest":false,"CreatedAt":"2019-06-13T09:48:42","Actor":"ebizupnorth","Number":"3858","RawContent":null,"Title":"AutoML 0.3.0 does not generate namespace properly when solution name contains space","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: \r\nOS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n- **.NET Version (eg., dotnet --info)**: \r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nFollowed the tutorial on using AutoML from https://dotnet.microsoft.com/learn/machinelearning-ai/ml-dotnet-get-started-tutorial/scenario but used a project name as \"AutoML Sentiment\". Note: It contains a space.\r\n- **What happened?**\r\nAutoML did not consider the space in the project name. Generated code below gives a compile error.\r\n```\r\n//*****************************************************************************************\r\n//*                                                                                       *\r\n//* This is an auto-generated file by Microsoft ML.NET CLI (Command-Line Interface) tool. *\r\n//*                                                                                       *\r\n//*****************************************************************************************\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing AutoML SentimentML.Model.DataModels;\r\nusing Microsoft.ML.Trainers;\r\n\r\nnamespace AutoML SentimentML.ConsoleApp\r\n{\r\n    public static class ModelBuilder\r\n    {\r\n............\r\n    }\r\n}\r\n```\r\n- **What did you expect?**\r\nI expected that AutoML should replace the space with \"_\" in order to compile as shown below:\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing AutoML_SentimentML.Model.DataModels;\r\nusing Microsoft.ML.Trainers;\r\n\r\nnamespace AutoML_SentimentML.ConsoleApp\r\n{\r\n    public static class ModelBuilder\r\n    {\r\n............\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3858","RelatedDescription":"Closed issue \"AutoML 0.3.0 does not generate namespace properly when solution name contains space\" (#3858)"},{"Id":"455483823","IsPullRequest":true,"CreatedAt":"2019-06-13T00:38:42","Actor":"najeeb-kazmi","Number":"3859","RawContent":null,"Title":"Change default EvaluationMetric for LightGbm trainers to conform to d…","State":"open","Body":"…efault metric in standalone LightGbm\r\n\r\nFixes #3822 \r\n\r\nIn ML.NET, the default `EvaluationMetric` for LightGbm is set to `EvaluateMetricType.Error` for multiclass, `EvaluationMetricType.LogLoss` for binary, and so on. This leads to inconsistent behavior from the user's perspective: If a user specified `EvaluationMetric = EvaluateMetricType.Default`, the parameter passed to LightGbm would be the empty string \"\", which is the LightGbm default and means that the metric is selected based on the objective. However, if they do not specify `EvaluationMetric` at all, the parameter passed to LightGbm would be Error for multiclass, LogLoss for binary, and so on. \r\n\r\nWe should make the experience for LightGbm in ML.NET consistent with what a user of standalone LightGbm experiences, and not expect them to dig through LightGbm docs and ML.NET docs to find this out.\r\n\r\nThis PR makes the user experience consistent with standalone LightGbm by by changing the default `EvaluationMetric` in ML.NET to `EvaluationMetricType.Default`.\r\n\r\n[LightGbm metric parameters docs](https://lightgbm.readthedocs.io/en/latest/Parameters.html#metric-parameters)","Url":"https://github.com/dotnet/machinelearning/pull/3859","RelatedDescription":"Open PR \"Change default EvaluationMetric for LightGbm trainers to conform to d…\" (#3859)"},{"Id":"455380977","IsPullRequest":true,"CreatedAt":"2019-06-12T19:17:58","Actor":"CESARDELATORRE","Number":"3857","RawContent":null,"Title":"Early Draft specs doc for DatabaseLoader in ML.NET","State":"open","Body":"Early Draft specs doc for a `DatabaseLoader` component in ML.NET. \r\nFeel free to provide feedback. This specs document will be evolving significantly since it is in a very early draft state.\r\n\r\nMain objective is to load data into an IDataView from relational databases (such as SQL Server, Azure SQL Database, PostgreSQL, MySQL, Oracle, etc.) in a very easy way, one line of code in most cases by simply specifying the connection string, the database `table/view/sql-sentence` and what database provider/connection type it is using.\r\n\r\nCurrently in ML.NET 1.0 or 1.1 we can only do the following:\r\n\r\n- Load data from files by using `MLContext.Data.LoadFromTextFile()`, etc.\r\n- Load data from an IEnumerable collection with `MLContext.Data.LoadFromEnumerable()`, usually coming from a database, but the developer/user is responsible for how to load/query the database. It is not straightforward such as when reading from a file.\r\n\r\n**High level design goal:**\r\nThe intention of the new component is to make a lot easier to implement _'model training scenarios  pulling/streaming data from large database tables'_ while transparently solving complicated cases such as 'transient errors' in the cloud (database connections broken as a result) when using Azure SQL Database.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3857","RelatedDescription":"Open PR \"Early Draft specs doc for DatabaseLoader in ML.NET\" (#3857)"},{"Id":"455352795","IsPullRequest":false,"CreatedAt":"2019-06-12T18:09:13","Actor":"yaeldekel","Number":"3856","RawContent":null,"Title":"Multi class LR behaves differently on .NetCore 3.0","State":"open","Body":"Four tests are failing on the .NetCore 3.0 builds:\r\n`EnsemblesMultiAveragerTest`\r\n`EnsemblesMultiClassBootstrapSelectorTest`\r\n`EnsemblesMultiVotingCombinerTest`\r\n`EnsemblesMultiStackCombinerTest`\r\n\r\nThe difference in the baselines is something like this:\r\n`L1 regularization selected 13 of 15 weights.` vs.\r\n`L1 regularization selected 11 of 15 weights.`\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3856","RelatedDescription":"Open issue \"Multi class LR behaves differently on .NetCore 3.0\" (#3856)"},{"Id":"455317777","IsPullRequest":false,"CreatedAt":"2019-06-12T16:43:13","Actor":"mungojam","Number":"3855","RawContent":null,"Title":"ARIMA with linear regressors time series modelling","State":"open","Body":"This was mentioned in some other issues that have now been closed following the first release of time series functionality.\r\n\r\nWe currently use ARIMA with linear regressors. There may be better algorithms but it works well for us and is fairly simple to understand and implement.\r\n\r\nIf you can add basic models like this and somebody produces a C#/F# equivalent of the [Forecasting Principles and Practices e-book](https://otexts.com/fpp2/intro.html) then you might be able to support quite a few people who are just getting started with time series forecasting.","Url":"https://github.com/dotnet/machinelearning/issues/3855","RelatedDescription":"Open issue \"ARIMA with linear regressors time series modelling\" (#3855)"},{"Id":"454315853","IsPullRequest":true,"CreatedAt":"2019-06-12T16:01:19","Actor":"michaelgsharp","Number":"3850","RawContent":null,"Title":"Bugfix/hardwired sigmoid","State":"closed","Body":"Fixes #1422 \r\n\r\nFixes the Hardcoded Sigmoid value from -.5 to the value specified during training.\r\n\r\nLet Microsoft.ML.Tests see internals of Microsoft.ML.Standard trainers to access trained model parameters for testing verification.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3850","RelatedDescription":"Closed or merged PR \"Bugfix/hardwired sigmoid\" (#3850)"},{"Id":"454791564","IsPullRequest":true,"CreatedAt":"2019-06-12T15:58:32","Actor":"codemzs","Number":"3854","RawContent":null,"Title":"CustomGains should allow multiple values in argument attribute.","State":"closed","Body":"fixes #3710\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3854","RelatedDescription":"Closed or merged PR \"CustomGains should allow multiple values in argument attribute.\" (#3854)"},{"Id":"454424547","IsPullRequest":true,"CreatedAt":"2019-06-11T00:10:26","Actor":"harishsk","Number":"3852","RawContent":null,"Title":"Fixes #3207. Prevent usage of KeyType without parameter.","State":"open","Body":"Added an exception to the parameterless constructor for KeyType because it doesn't make sense to use it without a parameter\r\n\r\nWhen KeyType is called without a constructor, the Count member remains uninitialized and when that remains null, it is set to uint.MaxValue which fails the overflow check. \r\n\r\nSince the value that a particular KeyType takes on represents an index into a 1 based vector, it cannot be set to zero by zero by default. It always needs to have a valid max value and that needs to be determined by the use case. Therefore, the best approach is to prevents its usage without the parameter. \r\n\r\nThere seems to be a different but related doc bug that this fix does not address:\r\n\r\nThe documentation for [KeyTypeAttribute](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.keytypeattribute?view=ml-dotnet) says it can be used with uint and ulong.  However, during mapping there is an overflow check performed and an exception is thrown if the value is greater than int.MaxValue - 1. \r\n\r\nThat means, we don't actually support the full range of uint and ulong. \r\n\r\n@codemzs / @artidoro Any thoughts on whether we should fix the docs or remove the overflow check?\r\n\r\n\r\n- [X] There's a descriptive title that will make sense to other developers some time from now. \r\n- [X] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [X] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nfixes #3207\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3852","RelatedDescription":"Open PR \"Fixes #3207. Prevent usage of KeyType without parameter.\" (#3852)"},{"Id":"453740725","IsPullRequest":false,"CreatedAt":"2019-06-10T22:40:07","Actor":"deepakkumar1984","Number":"3846","RawContent":null,"Title":"ML.NET support for CNTK","State":"closed","Body":"Does ML.NET support CNTK? I see support for Tensorflow, what about the MS initiative for CNTK. Is that abandon now?","Url":"https://github.com/dotnet/machinelearning/issues/3846","RelatedDescription":"Closed issue \"ML.NET support for CNTK\" (#3846)"},{"Id":"454374167","IsPullRequest":true,"CreatedAt":"2019-06-10T21:08:48","Actor":"wschin","Number":"3851","RawContent":null,"Title":"Add example for applying ONNX model to in-memory images","State":"open","Body":"Fix #3562 by adding an sample.","Url":"https://github.com/dotnet/machinelearning/pull/3851","RelatedDescription":"Open PR \"Add example for applying ONNX model to in-memory images\" (#3851)"},{"Id":"454287849","IsPullRequest":false,"CreatedAt":"2019-06-10T17:48:26","Actor":"yaeldekel","Number":"3849","RawContent":null,"Title":"MlNetCookBook is not up to date with latest API","State":"open","Body":"For example, here:\r\nhttps://github.com/dotnet/machinelearning/blob/master/docs/code/MlNetCookBook.md#i-want-to-look-at-my-models-coefficients\r\n\r\nit has this line\r\n```\r\nmlContext.MulticlassClassification.Trainers.SdcaCalibrated()\r\n```\r\nbut `SdcaCalibrated` has been renamed to `SdcaMaximumEntropy`.\r\n\r\n(related to issue #3847).","Url":"https://github.com/dotnet/machinelearning/issues/3849","RelatedDescription":"Open issue \"MlNetCookBook is not up to date with latest API\" (#3849)"},{"Id":"454276445","IsPullRequest":false,"CreatedAt":"2019-06-10T17:20:01","Actor":"codemzs","Number":"3848","RawContent":null,"Title":"Integration of time series nuget with NimbusML","State":"open","Body":"This will require creation of missing entry points and testing, including, time series prediction engine and forecasting API.","Url":"https://github.com/dotnet/machinelearning/issues/3848","RelatedDescription":"Open issue \"Integration of time series nuget with NimbusML\" (#3848)"},{"Id":"453651267","IsPullRequest":true,"CreatedAt":"2019-06-10T16:45:10","Actor":"shmoradims","Number":"3842","RawContent":null,"Title":"Revert \"Publish nugets to temporary myget feed (#3400)\"","State":"closed","Body":"This reverts commit 0a90bbb49da69765c2ff870078fdabfb20783a58.\r\n\r\nshmoradi myget feed is downgraded to 200MB of space after a month and needs to be replaced with a permanent solution. It was created as a workaround before //build. Disabling it for now to prevent the failure in publishing step.","Url":"https://github.com/dotnet/machinelearning/pull/3842","RelatedDescription":"Closed or merged PR \"Revert \"Publish nugets to temporary myget feed (#3400)\"\" (#3842)"},{"Id":"453959866","IsPullRequest":false,"CreatedAt":"2019-06-10T01:00:17","Actor":"jonataspc","Number":"3847","RawContent":null,"Title":"Question: Feature weights (importance) for LightGBM","State":"open","Body":"The documentation https://github.com/dotnet/machinelearning/blob/master/docs/code/MlNetCookBook.md#i-want-to-look-at-my-models-coefficients shows a way to get the feature importance, but when I try to use the code samples I got an error in the \"LastTransformer\" saying it was not found in the TTransformer class. \r\n\r\nI looked at the samples but I could not find a code example. I am using LightGBM.   \r\nThe issue https://github.com/dotnet/machinelearning/issues/576 is related but the replies did not helped as well.\r\n\r\nAny hints? \r\n","Url":"https://github.com/dotnet/machinelearning/issues/3847","RelatedDescription":"Open issue \"Question: Feature weights (importance) for LightGBM\" (#3847)"},{"Id":"453664353","IsPullRequest":false,"CreatedAt":"2019-06-07T19:37:37","Actor":"writetokavitha","Number":"3845","RawContent":null,"Title":"Equivalent of SVM.SVC of slkearn","State":"open","Body":"We use the following from sklearn for training our model for multi-class text classification\r\nWhat would be the equivalent in ML.Net ?\r\n\r\nclfsvm = Pipeline([('vect', CountVectorizer(tokenizer=tokenize, lowercase=True, stop_words=stop_words, ngram_range=(2,2))),\r\n                          ('tfidf', TfidfTransformer(use_idf = False)),\r\n                             ('clf', SVC(kernel = 'linear', probability = True)),])\r\nclfsvm.fit(df_train, df_label)\r\n\r\nhttps://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3845","RelatedDescription":"Open issue \"Equivalent of SVM.SVC of slkearn\" (#3845)"},{"Id":"453661554","IsPullRequest":false,"CreatedAt":"2019-06-07T19:29:07","Actor":"writetokavitha","Number":"3844","RawContent":null,"Title":"Porting algorithm - Multinomial NB","State":"open","Body":"\r\n@codemzs Not finding multinomial NB as part of the ML.Net algorithms which we use for intent detection.\r\n\r\n\r\nFrom nb sci kit learn libraries:\r\nhttps://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.MultinomialNB.html\r\n\r\nclfnb = Pipeline([('vect', CountVectorizer(tokenizer=None, lowercase=True, stop_words=None, ngram_range=(1,2))), \r\n                  ('tfidf', TfidfTransformer(use_idf = True)),\r\n                  ('clf', MultinomialNB()),])\r\nclfnb.fit(df_train, df_label)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3844","RelatedDescription":"Open issue \"Porting algorithm - Multinomial NB\" (#3844)"},{"Id":"453654650","IsPullRequest":false,"CreatedAt":"2019-06-07T19:08:22","Actor":"writetokavitha","Number":"3843","RawContent":null,"Title":"Missing algorithms - SGD modified_huber","State":"open","Body":"@codemzs \r\nI am from the marketing automation team at MSFT and doing intent detection on lead emails. We use the SGD and SVM in sci-kit learn in production and find it missing in ML.Net. Could you look into adding\r\nSGD with following loss function:\r\nloss=\"hinge\": (soft-margin) linear Support Vector Machine,\r\nloss=\"modified_huber\": smoothed hinge loss,\r\nloss=\"log\": logistic regression,\r\n\r\nWe are getting 10%+ points increase in accuracy using modified_huber rather than hinge or log loss function. All the loss functions would be important for us priority would be\r\n1. Modified_huber\r\n2. hinge\r\n3. log\r\n\r\nhttps://scikit-learn.org/stable/modules/sgd.html#classification\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3843","RelatedDescription":"Open issue \"Missing algorithms - SGD modified_huber\" (#3843)"},{"Id":"453624657","IsPullRequest":false,"CreatedAt":"2019-06-07T17:45:41","Actor":"shmoradims","Number":"3841","RawContent":null,"Title":"CreateTextLoader documentation is missing details","State":"open","Body":"The following parameters of CreateTextLoader API are missing detailed explanation and proper example:\r\n\r\n* allowSparse: what is the sparse format?  + example\r\n* allowQuoting: what does this exactly mean? does quoting cause the separator within quotes to be skipped? Is it single quotes or double quotes?\r\n* hasHeader: seems like hasHeader only causes the header line to be skipped, but it doesn't help with automatic detection of column names. Is that the case?\r\n * dataSample: needs sample\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: a745f3b1-1356-0888-4804-f6141496da18\r\n* Version Independent ID: 0a2d7c9e-9319-8393-bb4a-058bf72450ba\r\n* Content: [TextLoaderSaverCatalog.CreateTextLoader Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.textloadersavercatalog.createtextloader?view=ml-dotnet#Microsoft_ML_TextLoaderSaverCatalog_CreateTextLoader_Microsoft_ML_DataOperationsCatalog_Microsoft_ML_Data_TextLoader_Column___System_Char_System_Boolean_Microsoft_ML_Data_IMultiStreamSource_System_Boolean_System_Boolean_System_Boolean_)\r\n* Content Source: [dotnet/xml/Microsoft.ML/TextLoaderSaverCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TextLoaderSaverCatalog.xml)","Url":"https://github.com/dotnet/machinelearning/issues/3841","RelatedDescription":"Open issue \"CreateTextLoader documentation is missing details\" (#3841)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-14T05:30:43.9906225Z","RunDurationInMilliseconds":902}