{"Data":{"GitHubIssues":{"Issues":[{"Id":"348007751","IsPullRequest":false,"CreatedAt":"2018-08-07T05:16:04","Actor":"simonziegler","Number":"1268","RawContent":null,"Title":"Unable to use Microsoft.AspNetCore.Identity.SignInManager with Blazor Server Side","State":"closed","Body":"Hi,\r\n\r\nI have a Client/Server Blazor project that, among other things, authenticates users using Microsoft.AspNetCore.Identity. The relevant controller uses the SignInManager class from identity.\r\n\r\nI am experimenting with migrating this project to Blazor Server Side so that I can improve performance. Calls to a SignInManager object fail however. What I have (unsuccessfully) attempted to do is to make the pre-existing controller a service that is consumed by the App project. Referencing it is fine however I get an exception on calling SignInManager.PasswordSignInAsync. Is this because there is no HttpClient access from the App project, and if so is there a way that I can make this work?\r\n\r\nThank you.","Url":"https://github.com/aspnet/Blazor/issues/1268","RelatedDescription":"Closed issue \"Unable to use Microsoft.AspNetCore.Identity.SignInManager with Blazor Server Side\" (#1268)"},{"Id":"348135680","IsPullRequest":false,"CreatedAt":"2018-08-07T01:39:44","Actor":"gfkeogh","Number":"1272","RawContent":null,"Title":"Azure Storage operation not supported","State":"open","Body":"I modified the Visual Studio 2017 standard template generated project by adding the WindowsAzure.Storage 9.3.0 package and some basic code to do a TableOperation Retrieve of a single table row. The ExecuteAsync call fails with\r\n\r\n`System.PlatformNotSupportedException: Operation is not supported on this platform.`\r\n\r\nWeb searches don't produce anything helpful on this so far, so I'm not sure which link in the chain is the breaking one. It would be wonderfully convenient to directly access Azure Storage from Blazor as I do in other environments like Xamarin, full ASP.NET, etc. Any advice on this would be most welcome -- *Greg* ","Url":"https://github.com/aspnet/Blazor/issues/1272","RelatedDescription":"Open issue \"Azure Storage operation not supported\" (#1272)"},{"Id":"348115330","IsPullRequest":true,"CreatedAt":"2018-08-07T00:05:03","Actor":"natemcmaster","Number":"1271","RawContent":null,"Title":"Use $(TargetDir) instead of $(ProjectDir)$(OutputPath)","State":"closed","Body":"Resolves https://github.com/aspnet/Blazor/issues/1179\r\n\r\nPrevents errors when `$(OutputPath)` is an absolute path.","Url":"https://github.com/aspnet/Blazor/pull/1271","RelatedDescription":"Closed or merged PR \"Use $(TargetDir) instead of $(ProjectDir)$(OutputPath)\" (#1271)"},{"Id":"348082759","IsPullRequest":false,"CreatedAt":"2018-08-06T21:08:32","Actor":"MarkStega","Number":"1270","RawContent":null,"Title":"Compile time warning for unknown tags/components","State":"open","Body":"I missed putting\r\n```\r\n@addTagHelper *, BlazorStrap\r\n```\r\nin one of my cshtml source files. Of course, all of the BlazorStrap components in that source file failed to render. It would be helpful if the compilation process gave at least a warning if an opening element that doesn't match an html tag or component such as\r\n```\r\n<UnknownComponentOrTag...\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/1270","RelatedDescription":"Open issue \"Compile time warning for unknown tags/components\" (#1270)"},{"Id":"347567939","IsPullRequest":true,"CreatedAt":"2018-08-06T20:53:07","Actor":"natemcmaster","Number":"1256","RawContent":null,"Title":"Fix for CI building as 15.7.999999 on VSTS","State":"closed","Body":"Detect the build number in the VSTS environment.","Url":"https://github.com/aspnet/Blazor/pull/1256","RelatedDescription":"Closed or merged PR \"Fix for CI building as 15.7.999999 on VSTS\" (#1256)"},{"Id":"348016108","IsPullRequest":false,"CreatedAt":"2018-08-06T17:32:23","Actor":"natemcmaster","Number":"1269","RawContent":null,"Title":"Enable code-signing for VSTS builds","State":"open","Body":"Follow-up to #1251. Blocked on https://dotnet.visualstudio.com/internal/_workitems/edit/61\r\n\r\nWe should enable code-signing to run automatically on VSTS builds. One less thing to hand-crank.","Url":"https://github.com/aspnet/Blazor/issues/1269","RelatedDescription":"Open issue \"Enable code-signing for VSTS builds\" (#1269)"},{"Id":"347609948","IsPullRequest":false,"CreatedAt":"2018-08-06T17:02:42","Actor":"mrpmorris","Number":"1257","RawContent":null,"Title":"Browser disappears when app is run","State":"closed","Body":"I'm migrating Fluxor to the newest version of Blazor. Three of the sample projects work, but two do not (04 and 05).\r\n\r\nWhen I run them the Browser (Chrome Version 68.0.3440.84 - 64 bit) opens and then immediately closes.  Looking in Fiddler it doesn't even get as far as downloading my assemblies.\r\n\r\nI've checked and the startup.cs and program.cs in 04 are the same as in 01. Can anyone help?\r\n\r\nhttps://github.com/mrpmorris/blazor-fluxor/tree/feature/UpgradeToBlazor.0.5","Url":"https://github.com/aspnet/Blazor/issues/1257","RelatedDescription":"Closed issue \"Browser disappears when app is run\" (#1257)"},{"Id":"348002767","IsPullRequest":false,"CreatedAt":"2018-08-06T16:55:19","Actor":"xperiandri","Number":"1267","RawContent":null,"Title":"Blazor breaks Orchard Core CMS middleware pipeline","State":"open","Body":"If I just reference `Blazor.Server` it breaks Orchard Core CMS middleware I CSS is not served\r\n\r\nTry repro in https://github.com/msproadshow/Orchard/tree/blazor-conference\r\n\r\nTheConferenceTheme references `Blazor.Server`\r\nOrchard.CMS.Web references TheConferenceTheme and runs.\r\nImmediately setup screen is displayed broken.","Url":"https://github.com/aspnet/Blazor/issues/1267","RelatedDescription":"Open issue \"Blazor breaks Orchard Core CMS middleware pipeline\" (#1267)"},{"Id":"347984884","IsPullRequest":false,"CreatedAt":"2018-08-06T16:33:19","Actor":"StevenTCramer","Number":"1266","RawContent":null,"Title":"Hosted in Single dll","State":"closed","Body":"Currently the the hosted solution gives us 3 projects.\r\n\r\nI prefer to use \"Feature Folders\" Jimmy Bogard Style.\r\n\r\na Feature contains:\r\n* Controller\r\n* Request\r\n* Response\r\n* DTOs \r\n* Handler\r\n* Validator\r\n* Mapper \r\n* Presentation \r\n* Entity\r\n\r\nGiven the 3 projects my folder has to be split up. something like:\r\n\r\nServer:\r\n* Controller\r\n* Handler \r\n* Mapper\r\n* Entity\r\n\r\nShared:\r\n* Request\r\n* Response\r\n* Validator\r\n* DTOs\r\n\r\nClient:\r\n* Presentation\r\n\r\nCould we get Blazor to build a hosted version with server side API and client as single project and dll?\r\n\r\nThen my feature folder would be united once again.  And things would be easier to reason about.\r\n\r\nAnd deployment becomes easier.  1 dll.  \r\n\r\nI am sure there are downsides also :)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1266","RelatedDescription":"Closed issue \"Hosted in Single dll\" (#1266)"},{"Id":"347977773","IsPullRequest":false,"CreatedAt":"2018-08-06T15:42:44","Actor":"SteveSandersonMS","Number":"1265","RawContent":null,"Title":"Re-enable markup frames in compiler","State":"open","Body":"This involves ensuring we've fixed the underlying causes for all the issues with label `htmlblock` (https://github.com/aspnet/Blazor/issues?utf8=%E2%9C%93&q=label%3Ahtmlblock).","Url":"https://github.com/aspnet/Blazor/issues/1265","RelatedDescription":"Open issue \"Re-enable markup frames in compiler\" (#1265)"},{"Id":"346973007","IsPullRequest":false,"CreatedAt":"2018-08-06T12:22:43","Actor":"simonziegler","Number":"1246","RawContent":null,"Title":"Question: Entityframework CRUD with Blazor Server Side","State":"closed","Body":"I have an existing Client/Server Blazor project, that I have just updated to Blazor 0.5.1. The client side runs quite slow, principally due to the time taken to decode JSON (I raised a couple of issues here to see if MessagePack could be used - it cannot because .Net Standard 2.0 does not support System.Reflection.Emit).\r\n\r\nI am keen to attempt a port to Blazor ServerSide, which clearly has substantial performance benefits. I am however using EntityFramework Core and SignalR. My question is where I should locate the EntityFramework code: in the Server or App project? So far I attempted to place it in the App, but cannot install for instance the Microsoft.AspNetCore.App Nuget package because it is incompatible with .Net Standard 2.0. Any thoughts please?\r\n\r\nI guess that if I do need to use the Server (and I am happy to try), I will again need a Shared Project. This is not a problem because I already have one of these!\r\n\r\nThanks again to the Blazor team for a stunning product. Like many here I hope that Microsoft commits to it and that it can stop being \"experimental\"...","Url":"https://github.com/aspnet/Blazor/issues/1246","RelatedDescription":"Closed issue \"Question: Entityframework CRUD with Blazor Server Side\" (#1246)"},{"Id":"347060225","IsPullRequest":false,"CreatedAt":"2018-08-06T12:07:44","Actor":"wanton7","Number":"1248","RawContent":null,"Title":"Many websocket frames send and received when using server side rendering","State":"closed","Body":"I used default Blazor 0.5.1 server side rendering solution template and used Chrome browsers network tab. When I clicked Counter tab 2 frames was sent and 6 received with websocket.\r\nDoes it really need to send and receive that many frames or is it a bug? I would have thought sending one and receiving one frame would have been enough.","Url":"https://github.com/aspnet/Blazor/issues/1248","RelatedDescription":"Closed issue \"Many websocket frames send and received when using server side rendering\" (#1248)"},{"Id":"347727049","IsPullRequest":false,"CreatedAt":"2018-08-06T11:54:02","Actor":"Mitch528","Number":"1261","RawContent":null,"Title":"Invoking JS on Dispose throws NullReferenceException","State":"closed","Body":"I'm trying to invoke a js function on disposal of a component, but I'm getting a NullReferenceException exception when doing so.\r\n\r\n```\r\nHello World!\r\nblazor.webassembly.js:1 Uncaught (in promise) Error: System.NullReferenceException: Object reference not set to an instance of an object.\r\n  at Microsoft.JSInterop.DotNetDispatcher.InvokeSynchronously (:61620/System.String assemblyName, System.String methodIdentifier, System.Object targetInstance, System.String argsJson) <0x1d092f8 + 0x001c8> in <ff5eb2f6181945399a105e92b16da25a>:0 \r\n  at Microsoft.JSInterop.DotNetDispatcher.BeginInvoke (:61620/System.String callId, System.String assemblyName, System.String methodIdentifier, System.Int64 dotNetObjectId, System.String argsJson) <0x1d0f3e0 + 0x00088> in <ff5eb2f6181945399a105e92b16da25a>:0 \r\n  at Microsoft.JSInterop.DotNetDispatcher.InvokeSynchronously (:61620/System.String assemblyName, System.String methodIdentifier, System.Object targetInstance, System.String argsJson) <0x1d092f8 + 0x001c8> in <ff5eb2f6181945399a105e92b16da25a>:0 \r\n  at Microsoft.JSInterop.DotNetDispatcher.BeginInvoke (:61620/System.String callId, System.String assemblyName, System.String methodIdentifier, System.Int64 dotNetObjectId, System.String argsJson) <0x1d0f3e0 + 0x00088> in <ff5eb2f6181945399a105e92b16da25a>:0 \r\n    at endInvokeDotNetFromJS (blazor.webassembly.js:1)\r\n    at Object.invokeJSFromDotNet (blazor.webassembly.js:1)\r\n    at Array.<anonymous> (mono.js:1)\r\n    at _emscripten_asm_const_iiiii (mono.js:1)\r\n    at :61620/wasm-function[5423]:36\r\n    at :61620/wasm-function[3671]:39\r\n    at :61620/wasm-function[3677]:386\r\n    at :61620/wasm-function[3678]:224\r\n    at :61620/wasm-function[3790]:189\r\n    at :61620/wasm-function[739]:15952\r\n```\r\n\r\nRepro:\r\n\r\n```cshtml\r\n@page \"/\"\r\n@implements IDisposable\r\n\r\n@functions {\r\n    public void Dispose()\r\n    {\r\n        ((IJSInProcessRuntime)JSRuntime.Current).Invoke<bool>(\"test.hello\");\r\n    }\r\n}\r\n```\r\n\r\n```js\r\nvar test = {\r\n        hello: function () {\r\n            console.log(\"Hello World!\");\r\n        }\r\n    }\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1261","RelatedDescription":"Closed issue \"Invoking JS on Dispose throws NullReferenceException\" (#1261)"},{"Id":"347827700","IsPullRequest":false,"CreatedAt":"2018-08-06T11:52:35","Actor":"Amine-Smahi","Number":"1264","RawContent":null,"Title":"Blazor 0.5.0 is heavy","State":"closed","Body":"Since the new update of blazor, the standard blazor project size changed from 2.1mb to 4.48 wich is the double size. the community wont use a ui framework that eats 4mb from the user bandwidth.\r\n\r\n![image](https://user-images.githubusercontent.com/24621701/43705762-69fedde4-995b-11e8-852d-26d585bdedc6.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1264","RelatedDescription":"Closed issue \"Blazor 0.5.0 is heavy\" (#1264)"},{"Id":"347734375","IsPullRequest":false,"CreatedAt":"2018-08-06T07:00:00","Actor":"skyne98","Number":"1262","RawContent":null,"Title":"Stripped-down Blazor ","State":"closed","Body":"Hello everyone!\n\nRight now, Blazor feels like the most convenient way of using cutting edge mono wasm compilation toolchain. However, to me it's very unfortunate, that a Blazor project is so tightly integrated into it's ASP-like infrastructure, as well as Razor templates.\n\nIt would be nice to have a stripped-down version of Blazor (something like Console App template for .NET Core) which looks like a Rust STDWEB project and allows to either create a wasm library, which can be integrated via the generated convenience .js file, or avoid everything else all together, allowing your program main function to be an entry point to the whole app, allowing access to HTML5 apis.\n\nIn my opinion, such a template will allow to greatly increase the amount of use cases for Blazor and C# as a web language all together.\n\nFurther integration with bundlers like Parcel will allow to make lightweight mixed projects possible.\n\nHowever, maybe I am missing something and there is an undocumented way of using CoreRT or Mono tools to do it. If that's true, I will strongly ask to provide some information. Thanks!","Url":"https://github.com/aspnet/Blazor/issues/1262","RelatedDescription":"Closed issue \"Stripped-down Blazor \" (#1262)"},{"Id":"347740605","IsPullRequest":false,"CreatedAt":"2018-08-05T23:31:27","Actor":"Lupusa87","Number":"1263","RawContent":null,"Title":"After updating project to 0.5.1 Firefox gives error","State":"closed","Body":"Edge and Chrome are working normally, Firefox no.\r\n\r\nError: Exception Double Fault blazor.webassembly.js:1:35409 \r\n\r\nPlease check [site](http://lupusablazordemos.azurewebsites.net/)\r\n\r\n![untitled](https://user-images.githubusercontent.com/40779557/43691139-84041ffe-98e5-11e8-9cdb-9b3cc15c1e71.png)","Url":"https://github.com/aspnet/Blazor/issues/1263","RelatedDescription":"Closed issue \"After updating project to 0.5.1 Firefox gives error\" (#1263)"},{"Id":"347673455","IsPullRequest":false,"CreatedAt":"2018-08-05T06:29:59","Actor":"iAmBipinPaul","Number":"1260","RawContent":null,"Title":"have anyone tried developing browser extension with Blazor?","State":"open","Body":"","Url":"https://github.com/aspnet/Blazor/issues/1260","RelatedDescription":"Open issue \"have anyone tried developing browser extension with Blazor?\" (#1260)"},{"Id":"347668907","IsPullRequest":false,"CreatedAt":"2018-08-05T04:43:31","Actor":"mandalorianbob","Number":"1259","RawContent":null,"Title":"Trying to make editable text field - keeps disappearing.","State":"open","Body":"I created a small \"editable field\" where if you click on the text, it'll change to a text box which you can then modify.\r\nHowever, I'm seeing some really strange behavior from hitting \"Escape\": If I click on the text, and edit the text, and hit \"Enter\" everything's fine. If I hit \"Escape\" it appears to delete the last element.\r\nSo if I click on the Text, type something and hit \"Escape\" it deletes div \"savedValue\". If I do it again, it deletes span \"textField\".\r\nMy intention was obviously to change \"Text\" back to \"_savedValue\" if they hit escape. And it seems like it might work, but it keeps deleting the elements.\r\nAny other warnings, caveats, or better ways to do what I'm trying to do appreciated.\r\nThanks\r\n```\r\n<div>\r\n    @if (_editing)\r\n    {\r\n        <input id=\"textField\" bind=\"Text\" onkeyup=\"@OnKeyUp\" />\r\n    } \r\n    else\r\n    {\r\n        <span id=\"textField\" onclick=\"@OnTextClicked\">@Text</span>\r\n    }\r\n    <div id=\"savedValue\">@_savedValue</div>\r\n</div>\r\n@functions{\r\n    [Parameter]\r\n    string Text { get; set; }\r\n\r\n    [Parameter]\r\n    private Action<string> TextChanged { get; set; }\r\n\r\n    bool _editing = false;\r\n\r\n    string _savedValue;\r\n\r\n    void OnTextClicked()\r\n    {\r\n        _editing = true;\r\n        _savedValue = Text;\r\n    }\r\n\r\n    void OnKeyUp(UIKeyboardEventArgs eventArgs)\r\n    {\r\n        if (eventArgs.Key == \"Enter\" || eventArgs.Key == \"Escape\") //This causes the issue\r\n        {\r\n            _editing = false;\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1259","RelatedDescription":"Open issue \"Trying to make editable text field - keeps disappearing.\" (#1259)"},{"Id":"347644576","IsPullRequest":false,"CreatedAt":"2018-08-04T20:00:54","Actor":"EdCharbeneau","Number":"1258","RawContent":null,"Title":"Allow for <script type=\"module\"... in component libraries.","State":"open","Body":"[JavaScript modules are supported by all of the evergreen browsers now.](https://caniuse.com/#search=modules) This has led me to experimenting with some ideas of how to tidy up JavaScript interops when using Blazor.\r\n\r\nI feel like having the ability to use native JavaScript modules could lead to some clean abstractions around JS interopos. The following code works when adding the scripts manually to index.html.\r\n\r\nEx:\r\n\r\n```\r\n// FooHandler.js\r\nfunction doFoo() { alert(\"Foo Triggered\") }\r\nexport { doFoo };\r\n```\r\n```\r\n// FooInterop.js\r\nimport { doFoo } from './FooHandler.js';\r\nwindow.myNamespace = {\r\n    foo: doFoo\r\n}\r\n```\r\n```\r\n<!-- index.html -->\r\n<script src=\"./FooInterop.js\" type=\"module\"></script>\r\n```\r\n\r\nThe problem arises when you attempt this from a Blazor Component Library. Since the `<script>` tags are automagically added to index.html, there is no way to denote that they require the `type\\module` attribute.\r\n\r\nThe following line fails because it is added by the framework and misses the required `type\\module` attribute.\r\n```\r\n<script src=\"_content/DownloadComponents/FooInterop.js\">\r\n```\r\nIn addition, any js files in the folder are also added. In the case of modules, and when using modules, they are not necessary to have.\r\n\r\n```\r\n<!-- Foo Handler is not needed because it's already imported via FooInterop -->\r\n<script src=\"_content/DownloadComponents/FooHandler.js\">\r\n<script src=\"_content/DownloadComponents/FooInterop.js\">\r\n```\r\n\r\nThis approach may be a bit forward thinking since most JS devs use some sort of bundle tool like Webpack. However, modules are now recognized by the browser, so why not embrace it?","Url":"https://github.com/aspnet/Blazor/issues/1258","RelatedDescription":"Open issue \"Allow for <script type=\"module\"... in component libraries.\" (#1258)"},{"Id":"347539957","IsPullRequest":false,"CreatedAt":"2018-08-04T00:00:12","Actor":"Lupusa87","Number":"1254","RawContent":null,"Title":"How to force component to render after parameter change","State":"closed","Body":"You can check [repo](https://github.com/Lupusa87/Issue1254) with is created for this issue\r\nAlso 1 min [video](https://www.youtube.com/watch?v=3O3yhAPcCrM) demonstration.\r\n\r\nMy component has parameter k, based on this k value I generate component body overriding BuildRenderTree method.\r\n\r\nFor example:\r\nif k = 2 result will be:\r\n```\r\n<p>1</p>\r\n<p>2</p>\r\n```\r\n\r\nif k = 3 result will be:\r\n```\r\n<p>1</p>\r\n<p>2</p>\r\n<p>3</p>\r\n```\r\n\r\n\r\nIf I change k parameter with is binded to parent page variable, I can't get updated UI because BuildRenderTree method not fires.\r\nI have slider to change k,  new Parameter is receiving on setparameters method but rendering not gets invoked.\r\n\r\n\r\n ```\r\n    <div>\r\n        <component1 bind-k=\"@CurrValue\" />\r\n        <input type=\"range\" min=\"1\" max=\"100\"  bind=\"@CurrValue\"/>\r\n    </div>\r\n\r\n@functions\r\n{\r\n    int CurrValue = 75;\r\n}\r\n\r\n```\r\n\r\n\r\n```\r\n public class component1  : BlazorComponent\r\n    {\r\n     \r\n        [Parameter]\r\n        public int k { get; set; }\r\n\r\n        [Parameter]\r\n        public Action<int> kChanged { get; set; }\r\n\r\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n        {\r\n            int s = 0;\r\n            for (int i = 1; i <= k; i++)\r\n            {\r\n              builder.OpenElement(s++,\"p\");\r\n              builder.AddContent(s++,i.ToString());\r\n              builder.CloseElement();\r\n            }\r\n        }\r\n\r\n        public override void SetParameters(ParameterCollection parameters)\r\n        {\r\n           // this prints new value on every change, so binding is working and new value is receiving\r\n            Console.WriteLine(parameters.GetValueOrDefault<int>(\"k\"))\r\n            base.SetParameters(parameters);\r\n        }\r\n  }\r\n```\r\n\r\n**If I use renderfragment I can do it, I force rendering because I can access builder inside oninit method**\r\n```\r\n\r\n@DynamicFragment\r\n\r\n@functions {\r\n\r\n[Parameter]\r\npublic int k { get; set; }\r\n\r\nRenderFragment DynamicFragment { get; set; }\r\n\r\n\r\nprotected override void OnInit()\r\n{\r\n   DynamicFragment = builder =>\r\n    {\r\n            int s = 0;\r\n            for (int i = 1; i <= k; i++)\r\n            {\r\n              builder.OpenElement(s++,\"p\");\r\n              builder.AddContent(s++,i.ToString());\r\n              builder.CloseElement();\r\n            }\r\n    }\r\n}\r\n}\r\n```\r\n\r\nIt is not convenient to use renderfragment everywhere and it is not solution, component should be get updated when parameter is changed.\r\n\r\n**So problem is that I can't access RenderTreeBuilder builder in my case (from setparameter method).**\r\n\r\n**Finally I need somehow to invoke RenderTreeBuilder method after parameter change to update UI.**\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1254","RelatedDescription":"Closed issue \"How to force component to render after parameter change\" (#1254)"},{"Id":"347555644","IsPullRequest":true,"CreatedAt":"2018-08-03T23:41:14","Actor":"natemcmaster","Number":"1255","RawContent":null,"Title":"Add VSTS build configuration","State":"closed","Body":"Resolves #1251 \r\n\r\nRequired adding a few tweaks to KoreBuild to support the '-ci' flag and some VSTS improvements to KoreBuild.","Url":"https://github.com/aspnet/Blazor/pull/1255","RelatedDescription":"Closed or merged PR \"Add VSTS build configuration\" (#1255)"},{"Id":"347206821","IsPullRequest":false,"CreatedAt":"2018-08-03T23:41:14","Actor":"natemcmaster","Number":"1251","RawContent":null,"Title":"Setup official CI in VSTS","State":"closed","Body":"Set up CI and CD infrastructure for this repo to run in the official dotnet VSTS account.","Url":"https://github.com/aspnet/Blazor/issues/1251","RelatedDescription":"Closed issue \"Setup official CI in VSTS\" (#1251)"},{"Id":"347480969","IsPullRequest":false,"CreatedAt":"2018-08-03T17:42:04","Actor":"cores-system","Number":"1253","RawContent":null,"Title":"Error bind=\"@boolean\" ","State":"open","Body":"Hi, error when using boolean.\r\nBlazor 0.5.1\r\n\r\n```\r\n<select bind=\"@IsAtiv\">\r\n   <option value=\"True\">Yes</option>\r\n   <option value=\"False\">No</option>\r\n</select>\r\n\r\n@functions\r\n{\r\n    bool IsAtiv {get; set;}\r\n}\r\n```\r\n\r\n```\r\nUncaught (in promise) Error: System.InvalidCastException: Specified cast is not valid.\r\n  at Microsoft.JSInterop.DotNetDispatcher.InvokeSynchronously (System.String assemblyName, System.String methodIdentifier, System.Object targetInstance, System.String argsJson) <0x1d350c0 + 0x001c4> in <ff5eb2f6181945399a105e92b16da25a>:0 \r\n  at Microsoft.JSInterop.DotNetDispatcher.BeginInvoke (System.String callId, System.String assemblyName, System.String methodIdentifier, System.Int64 dotNetObjectId, System.String argsJson) <0x1d34c78 + 0x00084> in <ff5eb2f6181945399a105e92b16da25a>:0 \r\n  at Microsoft.JSInterop.DotNetDispatcher.InvokeSynchronously (System.String assemblyName, System.String methodIdentifier, System.Object targetInstance, System.String argsJson) <0x1d350c0 + 0x001c4> in <ff5eb2f6181945399a105e92b16da25a>:0 \r\n  at Microsoft.JSInterop.DotNetDispatcher.BeginInvoke (System.String callId, System.String assemblyName, System.String methodIdentifier, System.Int64 dotNetObjectId, System.String argsJson) <0x1d34c78 + 0x00084> in <ff5eb2f6181945399a105e92b16da25a>:0 \r\n    at endInvokeDotNetFromJS (blazor.webassembly.js:1)\r\n    at Object.invokeJSFromDotNet (blazor.webassembly.js:1)\r\n    at Array.<anonymous> (mono.js:1)\r\n    at _emscripten_asm_const_iiiii (mono.js:1)\r\n    at wasm-function[5423]:36\r\n    at wasm-function[3671]:39\r\n    at wasm-function[3677]:386\r\n    at wasm-function[3678]:224\r\n    at wasm-function[3790]:189\r\n    at wasm-function[739]:15952\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1253","RelatedDescription":"Open issue \"Error bind=\"@boolean\" \" (#1253)"},{"Id":"347478862","IsPullRequest":false,"CreatedAt":"2018-08-03T17:34:41","Actor":"chanan","Number":"1252","RawContent":null,"Title":"Should IComponent.SetParameters be async?","State":"open","Body":"Now that calling JS is async it is problematic that `SetParameters` is still sync. In my case, I need to call a JS method inside of `SetParameters` before the call to `_renderHandle.Render(Render);`. Would it be possible to make `_renderHandle.Render(Render);` async as well?","Url":"https://github.com/aspnet/Blazor/issues/1252","RelatedDescription":"Open issue \"Should IComponent.SetParameters be async?\" (#1252)"},{"Id":"347139623","IsPullRequest":false,"CreatedAt":"2018-08-02T19:14:49","Actor":"danroth27","Number":"1250","RawContent":null,"Title":"Bootstrap intellisense not working in Blazor projects in Visual Studio","State":"open","Body":"Bootstrap intellisense isn't showing up in Blazor projects: \r\n\r\n![image](https://user-images.githubusercontent.com/1874516/43605526-78b1338e-964d-11e8-8e01-7ad4804a954c.png)\r\n\r\nVisual Studio provides intellisense based on the CSS files in the project, but it only looks at the unminified versions.\r\n\r\n\r\n \r\n","Url":"https://github.com/aspnet/Blazor/issues/1250","RelatedDescription":"Open issue \"Bootstrap intellisense not working in Blazor projects in Visual Studio\" (#1250)"},{"Id":"347102288","IsPullRequest":false,"CreatedAt":"2018-08-02T17:18:49","Actor":"wanton7","Number":"1249","RawContent":null,"Title":"favicon.ico gets reloaded every time tab is changed in server side rendering template","State":"open","Body":"I'm using Blazor 0.5.1 and Chrome browser. If I click between Home, Counter and Fetch Data tabs favicon.ico gets reloaded everytime tab is changed.","Url":"https://github.com/aspnet/Blazor/issues/1249","RelatedDescription":"Open issue \"favicon.ico gets reloaded every time tab is changed in server side rendering template\" (#1249)"},{"Id":"346799213","IsPullRequest":false,"CreatedAt":"2018-08-02T14:53:25","Actor":"enetstudio","Number":"1244","RawContent":null,"Title":"Bind properties of a class to form values","State":"closed","Body":"Can I create a class, as for instance:\r\n\r\n```csharp\r\npublic class InputModel\r\n {\r\n            public string Email { get; set; }\r\n             public string Password { get; set; }\r\n            public bool RememberMe { get; set; }\r\n  }\r\n```\r\n\r\nAnd then bind the values of input elements to the properties of this class, this way:\r\n\r\n```html\r\n   <input type=\"text\" bind=\"@Input.Email\" class=\"form-control\" />\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1244","RelatedDescription":"Closed issue \"Bind properties of a class to form values\" (#1244)"},{"Id":"347039115","IsPullRequest":false,"CreatedAt":"2018-08-02T14:33:12","Actor":"flaubie91","Number":"1247","RawContent":null,"Title":"Build solution hangs up every other attempt","State":"open","Body":"I am tying out the Blazor 0.4.0 demo on Windows 7 Enterprise SP1 with Chrome version 68.0.3440.84.  The first build works.  After making a change to the counter interval, the second build is hanging up (nothing in Output) and I have to cancel build for it to work again.\r\n\r\n**1st Build**\r\n```\r\nCtrl-F5\r\nWeb Server:   Demo.Server>       Request finished in 13.8234ms 304 text/html\r\nBuild:             ========== Build: 2 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========\r\nManager:      Time Elapsed: 00:00:01.4837271\r\n                     ========== Finished ==========\r\n```\r\n\r\n**2nd Build**\r\n```\r\nCtrl-F5\r\nWeb Server:  Demo.Server> blank\r\nBuild:            Output: blank\r\nManager:      Time Elapsed: 00:00:01.4837271 (unchanged)\r\n                      ========== Finished ==========\r\nThen Ctrl-Break\r\nBuild:            Build has been canceled.\r\n```\r\n\r\n**3rd Build**\r\n```\r\nCtrl-F5\r\nSuccessful, same outputs.\r\n```\r\n\r\nAm I doing something wrong?  Thanks!","Url":"https://github.com/aspnet/Blazor/issues/1247","RelatedDescription":"Open issue \"Build solution hangs up every other attempt\" (#1247)"},{"Id":"346871798","IsPullRequest":false,"CreatedAt":"2018-08-02T06:06:35","Actor":"ETsukarev","Number":"1245","RawContent":null,"Title":"Fatal error in IL Linker","State":"open","Body":"I builded solution, which created from Blazor (Server side in ASP.NET Core) template. Build solution was over by \"Fatal error in IL Linker\".\r\n\r\nMono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.identitymodel.protocols.openidconnect\\5.2.0\\lib\\netstandard1.4\\Microsoft.IdentityModel.Protocols.OpenIdCnnect.dll, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.identitymodel.protocols.openidconnect\\5.2.0\\lib\\netstandard1.4\\Microsoft.IdentityModel.Protocols.OpenIdCnnect.dll, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n\r\nmy system:\r\ndotnet -- version: 2.1.302\r\nWindows 10 Pro Build 1803 17134.167\r\nVS 2017 Community 15.7.5\r\nBlazor: 0.5.1","Url":"https://github.com/aspnet/Blazor/issues/1245","RelatedDescription":"Open issue \"Fatal error in IL Linker\" (#1245)"},{"Id":"346773222","IsPullRequest":false,"CreatedAt":"2018-08-01T21:44:07","Actor":"wanton7","Number":"1243","RawContent":null,"Title":"Server side rending debug break will timeout client","State":"closed","Body":"I'm testing Blazor 0.5.1 server side rendering and when break point is hit server side and if I wait awhile and resume, client stops working and outputs \"Error: Connection disconnected with error 'Error: Server timeout elapsed without receiving a message from the server.'.\" to console.\r\nAfter that everything I click in UI will output \"Uncaught (in promise) Error: Cannot send data if the connection is not in the 'Connected' State.\" to console.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1243","RelatedDescription":"Closed issue \"Server side rending debug break will timeout client\" (#1243)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-08-07T05:30:02.8064067Z","RunDurationInMilliseconds":1231}