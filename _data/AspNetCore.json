{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel.Â Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing compatibility version in MVC","PublishedOn":"2018-02-27T22:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Ryan Nowak In 2.1 we&#8217;re adding a feature to address a long-standing problem for maintaining MVC &#8211; how do we make improvements to framework code without making it...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/introducing-compatibility-version-in-mvc/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Getting started with SignalR","PublishedOn":"2018-02-27T21:57:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since 2013, ASP.NET developers have been using SignalR to build real-time web applications. Now, with ASP.NET Core 2.1 Preview 1, we&#8217;re bringing SignalR over to ASP.NET Core so you can build...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Using ASP.NET Core Previews on Azure App Service","PublishedOn":"2018-02-27T19:18:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are 3 options to get ASP.NET Core 2.1 Preview applications running on Azure App Service: Installing the Preview1 site extension Deploying your app self-contained Using Web Apps for Containers...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7353722079","Type":"IssuesEvent","CreatedAt":"2018-03-09T02:17:26","Actor":"tb-mtg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2938","RelatedDescription":"Opened issue \"Is LibraryManager replacement for Bower?\" (#2938) at aspnet/Home","RelatedBody":"The [LibraryManager](https://github.com/aspnet/LibraryManager) project looks very promising. \r\n\r\nIs it meant to be a replacement for Bower?\r\n\r\nAny idea when it will be ready to use?"},{"Id":"7352146033","Type":"IssuesEvent","CreatedAt":"2018-03-08T19:35:36","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2937","RelatedDescription":"Opened issue \"[Discussion] Moving official daily builds to the dotnet-core MyGet feed \" (#2937) at aspnet/Home","RelatedBody":"Discussion issue for https://github.com/aspnet/Announcements/issues/293"},{"Id":"7352041122","Type":"IssuesEvent","CreatedAt":"2018-03-08T19:15:04","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2292","RelatedDescription":"Closed issue \"[Discussion] aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#2292) at aspnet/Home","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev."},{"Id":"7352030693","Type":"PullRequestEvent","CreatedAt":"2018-03-08T19:12:57","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Home/pull/2936","RelatedDescription":"Merged pull request \"Update README.md to include links to VS Preview and the dotnet-core myget feed\" (#2936) at aspnet/Home","RelatedBody":"Update links and MyGet feeds in the README."},{"Id":"7351779064","Type":"IssuesEvent","CreatedAt":"2018-03-08T18:21:34","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2934","RelatedDescription":"Closed issue \"Multiple file and object posting using javascript\" (#2934) at aspnet/Home","RelatedBody":"How to post multiple file and an object to my action?\r\n\r\nHere's the sample code\r\n\r\n//ViewModel\r\n\r\n```c#\r\n public class ViewModel \r\n{\r\n       public IList<IFormFile> Files { get; set; }\r\n       public OutgoingLetter OutgoingLetter { get; set; }\r\n    \r\n}\r\n```\r\n\r\n//Action\r\n\r\n```c#\r\n[HttpPost]\r\n public IActionResult Add(ViewModel vm)\r\n{\r\n            return Json(vm);\r\n}\r\n```\r\n\r\nI have already tried posting single object(OutgoingLetter) and IFormFile.\r\nHow can i get this two in a single post using javascript, not submitting the form. I just want to post it using javascript. \r\n\r\nThanks you!\r\n\r\n"},{"Id":"7351706724","Type":"IssuesEvent","CreatedAt":"2018-03-08T18:06:29","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2651","RelatedDescription":"Closed issue \"Json formatters do not respect the RequestLocalization middleware's culture\" (#2651) at aspnet/Home","RelatedBody":"_From @Martijn-Sharp on Tuesday, September 15, 2015 11:55:37 PM_\r\n\r\nWhen using the RequestLocalization middleware one would expect that the JsonInputFormatter will use the culture as it's defined in the options.\nTo give you an example, I have the following options defined:\n\n``` c#\nvar dutchCulture = new CultureInfo(\"nl-NL\");\napp.UseRequestLocalization(new RequestLocalizationOptions\n{\n    DefaultRequestCulture = new RequestCulture(dutchCulture, dutchCulture),\n    SupportedCultures = new List<CultureInfo> { dutchCulture },\n    SupportedUICultures = new List<CultureInfo> { dutchCulture }\n});\n```\n\nWhen HTTP POSTing to a controller action with JSON it might bind a datetimestring of '10-05-2015' as the 5th day of the 10th month of 2015. While actually with the Dutch dateformat (dd-MM-yyyy) it should've been the 10th day of the 5th month of 2015.\nThis happens because the JSON serializer isn't aware that I set dutch culture in the request localization middleware. Or at least that's what it seems, the 'problem' might simply be a too-early check of CultureInfo.Current(UI)Culture by the serializer?\nWhatever it is, I think it'd make more sense if the JSON serializer used the correct culture.\n\nTo fix it in my context I use `services.AddMvc().AddJsonOptions(json => json.SerializerSettings.Culture = new CultureInfo(\"nl-NL\"));` for now. But that won't work if you support multiple cultures, unlike me.\n\r\n\r\n_Copied from original issue: aspnet/Localization#78_"},{"Id":"7351370021","Type":"PullRequestEvent","CreatedAt":"2018-03-08T17:01:00","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/pull/2936","RelatedDescription":"Opened pull request \"Update README.md to include links to VS Preview and the dotnet-core myget feed\" (#2936) at aspnet/Home","RelatedBody":"Update links and MyGet feeds in the README."},{"Id":"7348465235","Type":"IssuesEvent","CreatedAt":"2018-03-08T06:39:31","Actor":"almostchristian","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2935","RelatedDescription":"Opened issue \"Stack Overflow with DistributedSession access inside custom ILogger\" (#2935) at aspnet/Home","RelatedBody":"My custom ILogger implementation accesses the session object to retrieve and log the session ID, but the session has not been loaded yet and results in a recursion causing a StackOverflowException. The message during the recursion is 'Accessing expired session, Key:xxxx'. My custom logger uses `IHttpContextAccessor` to retrieve the HttpContext and ISession object.\r\n\r\nThe ISession is a DistributedSession instance, and from the [code](https://github.com/aspnet/Session/blob/be6b099f6ce45bc1308f2135dbd1bfe295e20a98/src/Microsoft.AspNetCore.Session/DistributedSession.cs#L181), we see that logging occurs before the isLoaded variable is set to true which results in a recursion when the _isNewSessionKey flag is initialized as false.\r\n\r\nI was able to mitigate this error by using DataProtection with persisted keys.\r\n\r\n    services.AddDataProtection()\r\n        .PersistKeysToFileSystem(new DirectoryInfo(\"keys\"));\r\n\r\nMy app is `netcoreapp2.0`, but I see someone reported this same issue in [StackOverflow ](https://stackoverflow.com/questions/40133462/stackoverflowexception-in-serilog-enricher) :smile: back in 2016.\r\n\r\nIs there an alternate way to retrieve the session ID from inside the logger?"},{"Id":"7348389202","Type":"IssuesEvent","CreatedAt":"2018-03-08T06:14:16","Actor":"fsfj","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2934","RelatedDescription":"Opened issue \"Multiple file and object posting using javascript\" (#2934) at aspnet/Home","RelatedBody":"How to post multiple file and an object to my action?\r\n\r\nHere's the sample code\r\n\r\n//ViewModel\r\n` \r\n public class ViewModel\r\n    {\r\n        public IList<IFormFile> Files { get; set; }\r\n        public OutgoingLetter OutgoingLetter { get; set; }\r\n    }\r\n`\r\n//Action\r\n`\r\n[HttpPost]\r\n        public IActionResult Add(ViewModel vm)\r\n        {\r\n\r\n            return Json(vm);\r\n        }\r\n`\r\n\r\nI have already tried posting single object(OutgoingLetter) and IFormFile.\r\nHow can i get this two in a single post using javascript, not submitting the form. I just want to post it using javascript. \r\n\r\nThanks you!\r\n\r\n"},{"Id":"7348324251","Type":"IssuesEvent","CreatedAt":"2018-03-08T05:51:23","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2933","RelatedDescription":"Closed issue \"RequireHttpsMetadata set to false failed\" (#2933) at aspnet/Home","RelatedBody":"I'm building a asp.net core 2.0 solution with some projects. On my dev machine, I use OpenIdConnect and set RequireHttpsMetadata to false for testing, i get the exception as described below. If I set it to true, there is no problem.\r\n```\r\nSystem.InvalidOperationException: The MetadataAddress or Authority must use HTTPS unless disabled for development by setting RequireHttpsMetadata=false.\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerPostConfigureOptions.PostConfigure(String name, JwtBearerOptions options)\r\n   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)\r\n   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()\r\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\n   at System.Lazy`1.CreateValue()\r\n   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)\r\n   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.<InitializeAsync>d__42.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.<GetHandlerAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.<AuthenticateAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.<HandleAuthenticateAsync>d__2.MoveNext() in C:\\local\\identity\\server4\\AccessTokenValidation\\src\\IdentityServer4.AccessTokenValidation\\IdentityServerAuthenticationHandler.cs:line 61\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.<AuthenticateAsync>d__47.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.<AuthenticateAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIIndexMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.<Invoke>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()\r\nApplication Insights Telemetry (unconfigured): {\"name\":\"Microsoft.ApplicationInsights.Dev.Exception\",\"time\":\"2018-03-08T03:41:17.7238969Z\",\"tags\":{\"ai.application.ver\":\"1.0.0.0\",\"ai.cloud.roleInstance\":\"HUYTRAN-PC\",\"ai.operation.id\":\"868b0d85-46e57ed115249134\",\"ai.operation.parentId\":\"|868b0d85-46e57ed115249134.1.129137ed_\",\"ai.operation.name\":\"GET /api/tickets\",\"ai.location.ip\":\"::1\",\"ai.internal.sdkVersion\":\"aspnet5c:2.2.1\",\"ai.internal.nodeName\":\"HUYTRAN-PC\"},\"data\":{\"baseType\":\"ExceptionData\",\"baseData\":{\"ver\":2,\"properties\":{\"{OriginalFormat}\":\"Connection id \\\"{ConnectionId}\\\", Request id \\\"{TraceIdentifier}\\\": An unhandled exception was thrown by the application.\",\"DeveloperMode\":\"true\",\"CategoryName\":\"Microsoft.AspNetCore.Server.Kestrel\",\"AspNetCoreEnvironment\":\"Development\",\"TraceIdentifier\":\"0HLC4KPJB1MJM:00000003\",\"ConnectionId\":\"0HLC4KPJB1MJM\",\"Exception\":\"System.InvalidOperationException: The MetadataAddress or Authority must use HTTPS unless disabled for development by setting RequireHttpsMetadata=false.\\r\\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerPostConfigureOptions.PostConfigure(String name, JwtBearerOptions options)\\r\\n   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)\\r\\n   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()\\r\\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\\r\\n   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\\r\\n   at System.Lazy`1.CreateValue()\\r\\n   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)\\r\\n   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.<InitializeAsync>d__42.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.<GetHandlerAsync>d__5.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.<AuthenticateAsync>d__10.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.<HandleAuthenticateAsync>d__2.MoveNext() in C:\\\\local\\\\identity\\\\server4\\\\AccessTokenValidation\\\\src\\\\IdentityServer4.AccessTokenValidation\\\\IdentityServerAuthenticationHandler.cs:line 61\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.<AuthenticateAsync>d__47.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.<AuthenticateAsync>d__10.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIIndexMiddleware.<Invoke>d__3.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.<Invoke>d__6.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.<Invoke>d__11.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()\"},\"exceptions\":[{\"id\":21889970,\"typeName\":\"System.InvalidOperationException\",\"message\":\"Connection id \\\"0HLC4KPJB1MJM\\\", Request id \\\"0HLC4KPJB1MJM:00000003\\\": An unhandled exception was thrown by the application.\",\"hasFullStack\":true,\"parsedStack\":[{\"level\":0,\"method\":\"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerPostConfigureOptions.PostConfigure\",\"assembly\":\"Microsoft.AspNetCore.Authentication.JwtBearer, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":1,\"method\":\"Microsoft.Extensions.Options.OptionsFactory`1.Create\",\"assembly\":\"Microsoft.Extensions.Options, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":2,\"method\":\"Microsoft.Extensions.Options.OptionsMonitor`1+<>c__DisplayClass10_0.<Get>b__0\",\"assembly\":\"Microsoft.Extensions.Options, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":3,\"method\":\"System.Lazy`1.ViaFactory\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":4,\"method\":\"System.Lazy`1.ExecutionAndPublication\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":5,\"method\":\"System.Lazy`1.CreateValue\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":6,\"method\":\"Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd\",\"assembly\":\"Microsoft.Extensions.Options, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":7,\"method\":\"Microsoft.Extensions.Options.OptionsMonitor`1.Get\",\"assembly\":\"Microsoft.Extensions.Options, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":8,\"method\":\"Microsoft.AspNetCore.Authentication.AuthenticationHandler`1+<InitializeAsync>d__42.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Authentication, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":9,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":10,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":11,\"method\":\"Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider+<GetHandlerAsync>d__5.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Authentication.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":12,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":13,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":14,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":15,\"method\":\"Microsoft.AspNetCore.Authentication.AuthenticationService+<AuthenticateAsync>d__10.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Authentication.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":16,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":17,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":18,\"method\":\"IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler+<HandleAuthenticateAsync>d__2.MoveNext\",\"assembly\":\"IdentityServer4.AccessTokenValidation, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null\",\"fileName\":\"C:\\\\local\\\\identity\\\\server4\\\\AccessTokenValidation\\\\src\\\\IdentityServer4.AccessTokenValidation\\\\IdentityServerAuthenticationHandler.cs\",\"line\":61},{\"level\":19,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":20,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":21,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":22,\"method\":\"Microsoft.AspNetCore.Authentication.AuthenticationHandler`1+<AuthenticateAsync>d__47.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Authentication, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":23,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":24,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":25,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":26,\"method\":\"Microsoft.AspNetCore.Authentication.AuthenticationService+<AuthenticateAsync>d__10.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Authentication.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":27,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":28,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":29,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":30,\"method\":\"Microsoft.AspNetCore.Authentication.AuthenticationMiddleware+<Invoke>d__6.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Authentication, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":31,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":32,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":33,\"method\":\"Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIIndexMiddleware+<Invoke>d__3.MoveNext\",\"assembly\":\"Swashbuckle.AspNetCore.SwaggerUI, Version=2.2.0.0, Culture=neutral, PublicKeyToken=4232c99127b3c254\"},{\"level\":34,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":35,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":36,\"method\":\"Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware+<Invoke>d__6.MoveNext\",\"assembly\":\"Swashbuckle.AspNetCore.Swagger, Version=2.2.0.0, Culture=neutral, PublicKeyToken=62657d7474907593\"},{\"level\":37,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":38,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":39,\"method\":\"Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware+<Invoke>d__3.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Diagnostics, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":40,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":41,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":42,\"method\":\"Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware+<Invoke>d__11.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Server.IISIntegration, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":43,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":44,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":45,\"method\":\"Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware+<Invoke>d__3.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Hosting, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"},{\"level\":46,\"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":47,\"method\":\"System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification\",\"assembly\":\"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"},{\"level\":48,\"method\":\"Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1+<ProcessRequestsAsync>d__2.MoveNext\",\"assembly\":\"Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\"}]}],\"severityLevel\":\"Error\"}}}\r\nMicrosoft.AspNetCore.Server.Kestrel:Error: Connection id \"0HLC4KPJB1MJM\", Request id \"0HLC4KPJB1MJM:00000003\": An unhandled exception was thrown by the application.\r\n```\r\nAny suggestion for this problem? Thank you.\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7354164343","Type":"PullRequestEvent","CreatedAt":"2018-03-09T05:08:54","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1567","RelatedDescription":"Opened pull request \"Check for SignalR service\" (#1567) at aspnet/SignalR","RelatedBody":"Adding a SignalR marker service to endure that the service has been added.\r\nIssue: https://github.com/aspnet/SignalR/issues/1562"},{"Id":"7354161912","Type":"PullRequestEvent","CreatedAt":"2018-03-09T05:07:51","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1566","RelatedDescription":"Opened pull request \"[WIP] Detect Successful Start in LongPolling and SSE\" (#1566) at aspnet/SignalR","RelatedBody":"So this is hacky and doesn't work yet but I wanted to get some feedback.\r\nCurrently storing a first request flag in the HttpContext which is probably ð \r\n\r\nBasically wanted some help with the LongPolling transport code. Not setting the ContentLength or the Status code if flush has already been called."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7353788756","Type":"IssuesEvent","CreatedAt":"2018-03-09T02:40:33","Actor":"baffourt","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7460","RelatedDescription":"Opened issue \"MVC Core application hosted on IIS gives Cryptographic Exception\" (#7460) at aspnet/Mvc","RelatedBody":"Hi,\r\nWe are getting CryptographicException with inner exception UnauthorizedAccessException with an IIS hosted mvc core 1.1 web app. If we just serve the application with dotnet application.dll. It runs fine without the error.\r\nThe full stack trace is attached\r\n![image](https://user-images.githubusercontent.com/8023875/37187435-2f6409f0-2342-11e8-9ae6-270f9217b76b.png)\r\n\r\nThe Program.cs file\r\n![image](https://user-images.githubusercontent.com/8023875/37187556-b5812388-2342-11e8-9875-7e1b3a092707.png)\r\nStartup file\r\n![image](https://user-images.githubusercontent.com/8023875/37187611-eca71048-2342-11e8-8a54-70d764c2debf.png)\r\n![image](https://user-images.githubusercontent.com/8023875/37187650-188bc744-2343-11e8-8687-c718fc42179c.png)\r\n\r\nPlease help\r\n"},{"Id":"7352917659","Type":"IssuesEvent","CreatedAt":"2018-03-08T22:18:08","Actor":"mariuszkochanowski","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7459","RelatedDescription":"Opened issue \"asp-append-version attribute not working for static files outside of the wwwroot directory\" (#7459) at aspnet/Mvc","RelatedBody":"I am facing issue described in:\r\nhttps://stackoverflow.com/questions/42775181/asp-net-cores-asp-append-version-attribute-not-working-for-static-files-outside"},{"Id":"7352849868","Type":"IssuesEvent","CreatedAt":"2018-03-08T22:03:23","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7458","RelatedDescription":"Closed issue \"NullDisplayText et al. cannot be localized in display metadata provider\" (#7458) at aspnet/Mvc","RelatedBody":"I'm writing [custom display metadata provider](https://github.com/ridercz/Altairis.ConventionalMetadataProviders/blob/master/Altairis.ConventionalMetadataProviders/ConventionalDisplayMetadataProvider.cs).\r\n\r\nThe `DisplayName`, `Placeholder` and `Description` properties are of type `Func<string>`, which allows to make localization while app is running, depending on current UI culture.\r\n\r\nFor other properties, like `NullDisplayText` or `FormatString` the property is a `string` so it can't be localized. These properties are important for localization as well, because you might want to display things like _nothing_ or _never_ and localize them trough the app."},{"Id":"7352612692","Type":"IssuesEvent","CreatedAt":"2018-03-08T21:13:17","Actor":"ridercz","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7458","RelatedDescription":"Opened issue \"NullDisplayText et al. cannot be localized in display metadata provider\" (#7458) at aspnet/Mvc","RelatedBody":"I'm writing [custom display metadata provider](https://github.com/ridercz/Altairis.ConventionalMetadataProviders/blob/master/Altairis.ConventionalMetadataProviders/ConventionalDisplayMetadataProvider.cs).\r\n\r\nThe `DisplayName`, `Placeholder` and `Description` properties are of type `Func<string>`, which allows to make localization while app is running, depending on current UI culture.\r\n\r\nFor other properties, like `NullDisplayText` or `FormatString` the property is a `string` so it can't be localized. These properties are important for localization as well, because you might want to display things like _nothing_ or _never_ and localize them trough the app."},{"Id":"7351680519","Type":"IssuesEvent","CreatedAt":"2018-03-08T18:01:11","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7456","RelatedDescription":"Closed issue \"Minus sign for negative numbers in DisplayFor \" (#7456) at aspnet/Mvc","RelatedBody":"`Html.DisplayFor` should render a negative number using a proper typographical minus sign instead of a hyphen sign.\r\n\r\nExample `-123` would be outputted as `â123` or `&minus;123`."},{"Id":"7350349998","Type":"PullRequestEvent","CreatedAt":"2018-03-08T14:05:21","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7457","RelatedDescription":"Opened pull request \"[Design] [Fixes #7412] AspNetCore 2.1 breaks integration with 3rd party validaâ¦\" (#7457) at aspnet/Mvc","RelatedBody":"â¦tion libraries\r\n\r\nThis design is as per the comment over here: https://github.com/aspnet/Mvc/issues/7412#issuecomment-369386913"},{"Id":"7349464150","Type":"IssuesEvent","CreatedAt":"2018-03-08T10:45:23","Actor":"vanillajonathan","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7456","RelatedDescription":"Opened issue \"Minus sign for negative numbers in DisplayFor \" (#7456) at aspnet/Mvc","RelatedBody":"`Html.DisplayFor` should render a negative number using a proper typographical minus sign instead of a hyphen sign.\r\n\r\nExample `-123` would be outputted as `â123` or `&minus;123`."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7354196950","Type":"IssuesEvent","CreatedAt":"2018-03-09T05:22:21","Actor":"slaneyrw","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1670","RelatedDescription":"Opened issue \"Support password migration\" (#1670) at aspnet/Identity","RelatedBody":"I'm investigating a solution to migrating legacy passwords ( SHA256 cyptro provider, not Dbkdf2), MS ID v2, and MS ID v3 passwords to a new algorithm ( specifically Argon2 ) with the requirement to not store the old hash details post migration.\r\n\r\nMy thoughts are that during migration we...\r\n\r\n1. Take existing hash from the old algorithm and rehash the hash using the new algorithm\r\n2. Store the new passwordHash ( with it's metadata ) and the old algorithm's metadata\r\n\r\nDuring password verification we recursively run through the algorithms, taking the hashed output as the input into the next in the chain.  If the password matches then we rehash the password provided using the newest algorithm, akin to increasing the iterations in the MS ID password hasher.\r\n\r\nMy problem is that I cannot get the resultant hash from the IPasswordHasher instance evaluated during VerifyHashedPassword for use into the next algorithm into the chain, and if I call HashPassword it will give me a different hash for the same password because of the random 16 bytes into Pbkdf2.\r\n\r\nI already have a coordinator IPasswordHasher instance that inspects the algorithm byte and forwards the call to the relevant hasher.  It was my intent to have this coordinator loop/recurse through the chain.\r\n\r\nShort of completely rebuilding all the Password hashers ( including ASP.NET Identity ) to separate recalculating and compare functions the existing hashers, can you think of another way I could do this?\r\n"},{"Id":"7352340113","Type":"IssuesEvent","CreatedAt":"2018-03-08T20:14:56","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1341","RelatedDescription":"Closed issue \"GDPR Support\" (#1341) at aspnet/Identity","RelatedBody":"- [x] Extension points to enable encryption of user data\r\n- [x] Extension point to enable downloading of user data\r\n- [x] Extension point to enable deletion of user data"},{"Id":"7352336125","Type":"IssuesEvent","CreatedAt":"2018-03-08T20:14:05","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1621","RelatedDescription":"Closed issue \"Add an optional [PersonalData] attribute for use in the User type.\" (#1621) at aspnet/Identity","RelatedBody":"As part of the extensbility work, we should add some mechanism to easily attribute data which is considered personal data.  \r\n\r\nBy default we would use this for the default pocos, so the default UI can include these for personal download, and also wire them up automatically in the upcoming personal data encryption hooks.\r\n\r\n"},{"Id":"7352333896","Type":"PullRequestEvent","CreatedAt":"2018-03-08T20:13:35","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1562","RelatedDescription":"Merged pull request \"Initial EncryptPersonalData support\" (#1562) at aspnet/Identity","RelatedBody":"- new StoreOptions.EncryptPersonalData setting\r\n- new IPersonalDataEncryptor and IEncryptedUserStore interfaces that live in core\r\n- new `AddPersonalDataEncryptor<MyEncryptor>()` helper method on IdentityBuilder\r\n- The two concrete user stores in EF now implement IEncryptedUserStore\r\n- UserManager ctor throws if EncryptPersonalData is true if store is not IEncryptedUserStore, or if IPersonalDataEncryptor service not found\r\n- base IdentityUserContext hooks up ValueConverter using IPersonalDataEncryptor on UserName, NormalizedUserName, Email, NormalizedEmail, PhoneNumber columns when EncryptPersonalData is true.\r\n\r\nSo all of the normal store tests except one pass when turning this on with a dummy reverse encryptor. \r\n There's a test that that directly uses the DbSet as an IQueryable to look for users like so: `UserManager.Users.Count(u => u.UserName.StartsWith(\"CanFindUsersViaUserQuerable\"))` which fails because this probably bypasses the converters... @ajcvickers ?\r\n\r\ncc @blowdart @javiercn "},{"Id":"7351834492","Type":"IssuesEvent","CreatedAt":"2018-03-08T18:32:47","Actor":"marcwittke","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1669","RelatedDescription":"Opened issue \"Misleading exception message in Identity 2.0.1\" (#1669) at aspnet/Identity","RelatedBody":"```\r\nSystem.NotSupportedException : No IUserTokenProvider named 'Default' is registered.\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(TUser user, String tokenProvider, String purpose)\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(TUser user)\r\n```\r\n\r\nThe framework in reality requires an implementation of `IUserTwoFactorTokenProvider<TUser>` "},{"Id":"7345611512","Type":"PullRequestEvent","CreatedAt":"2018-03-07T17:57:40","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1664","RelatedDescription":"Merged pull request \"Skip Flaky tests\" (#1664) at aspnet/Identity","RelatedBody":"These tests all fail intermittently due to #1630. Un-skip them when that issue is resolved."},{"Id":"7344242647","Type":"IssuesEvent","CreatedAt":"2018-03-07T14:07:43","Actor":"marcwittke","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1668","RelatedDescription":"Opened issue \"Support a synchronous API\" (#1668) at aspnet/Identity","RelatedBody":"I know about the benefits of having async methods. But, however, there are always situations, that do not allow using the async/await pattern, often outside your control. My case is an encapsulated business domain that raises an event, that should be handled synchronously by `UserManager`.\r\n\r\nI also know there are various techniques to make this happen, however, I spent various days to find a possibility to do so, that does not deadlock in a single cpu environment (cheap azure build agent, cheap azure hosting), not only because it is really hard to reproduce that issue locally. Btw: I ended up with [this answer on SO](https://stackoverflow.com/a/5097066/164162), but to be honest: I am not able to explain, why this is better than `TaskFactory.StartNew(func).Unwrap().GetAwaiter().GetResult()` . It is proven to work by trial and error, what makes me feel not so comfortable.\r\n\r\nIs there a specific reason to force the consumer of ASP.Net Identity Core to the async pattern, except \"that's how it should be done today. basta.\"?"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7352939430","Type":"PullRequestEvent","CreatedAt":"2018-03-08T22:23:08","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2369","RelatedDescription":"Merged pull request \"React to new corefx changes and speed tests up\" (#2369) at aspnet/KestrelHttpServer","RelatedBody":"`/p:InnerLoop=true` to run faster modification of tests"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7353247215","Type":"PullRequestEvent","CreatedAt":"2018-03-08T23:41:36","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2143","RelatedDescription":"Merged pull request \"Rynowak/tag helpers design time\" (#2143) at aspnet/Razor","RelatedBody":""},{"Id":"7353077233","Type":"PullRequestEvent","CreatedAt":"2018-03-08T22:55:35","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2136","RelatedDescription":"Merged pull request \"Bring forward VS15.7 project system changes\" (#2136) at aspnet/Razor","RelatedBody":"- Also massaged pieces that were removed in 15.7 back into this merge commit (taghelper resolution, build monitoring etc.)\r\n- Left comments on key pieces."},{"Id":"7353019142","Type":"PullRequestEvent","CreatedAt":"2018-03-08T22:41:40","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2143","RelatedDescription":"Opened pull request \"Rynowak/tag helpers design time\" (#2143) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7307968614","Type":"IssuesEvent","CreatedAt":"2018-02-28T06:01:18","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file."},{"Id":"7307353364","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:19:15","Actor":"rjamesnw","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Opened issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\n"},{"Id":"7271114444","Type":"IssuesEvent","CreatedAt":"2018-02-20T18:33:27","Actor":"abpiskunov","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/347","RelatedDescription":"Closed issue \"File nesting in Solution Explorer is inconsistent and incorrect\" (#347) at aspnet/Tooling","RelatedBody":"The Solution Explorer for ASP.NET 5 MVC projects has several major problems - one of them is file nesting. The below issues affect Visual Studio 2015 Update 1 with ASP.NET 5 Release Candidate 1.\n#### tl;dr\n- Please fix nesting rules for `.less`, `.scss` and `.sass`, so those files are nested under `.html`.\n- Please fix incorrect nesting that sometimes appear after renaming/moving/copying files and folders.\n- Please provide an option to disable all file nesting, and eventually, options to configure nesting rules.\n- Please fix other critical Solution Explorer issues - this is just one of them, and there are many more.\n#### File nesting is inconsistent when nesting files under `.html`.\n\nThe `.less` and `.scss` files should be nested under `.html`. Those files compile to `.css` just like `.ts` compile to `.js` and they are just as much part of the view component. \n![less-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942660/6452782c-a838-11e5-9a44-d7ab6a2e5fc9.png)\n![scss-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942664/66bbd3a6-a838-11e5-8e3c-f1c369d5e1de.png)\nIn fact, if we only have a `.css` file in there, then it _is_ nested as expected, so clearly `.less` and `.scss` should also be nested:\n![css-is-nested-as-expected](https://cloud.githubusercontent.com/assets/6388663/11942670/6be4bdd4-a838-11e5-99b1-1dcc43238459.png)\n\nWhile the above is clearly a bug, and a very annoying one at that, the rules for other file types are less obvious, but should maybe also be considered... maybe `.json` should also be nested under `.html`?\nIt probably contains either settings, string resources, or data for that view component, so it seems resonable to me, although I consider this far less important than getting the style sheet nesting fixed.\n![json-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11939884/4a1bb224-a825-11e5-9ff6-631b4e8fed39.png)\n\nThose nesting rules have been inconsistent ever since they were introduced in ASP.NET 5, and **it really needs to be fixed**. Sure, everything compiles just fine, but I'm getting really pissed off looking at this mess in my Solution Explorer every day. Inconsistencies like this makes the whole concept of nesting seem like an annoyance more than a help, as it raises the obvious question \"if only some files are nested, then why nest anything at all - that's just an extra click to get to the .ts file\". Which brings me to...\n#### File nesting can be annoying\n\nWhile the fundamental idea of file nesting is not nessesarily bad, it can be _very_ annoying at times, which is why, as a _minimum_, **I want an option to disable all file nesting** - and ideally, options to configure the nesting rules.\n\nConsider this folder structure, where the folder already represents a container for the component:\n![file-nesting-is-annoying](https://cloud.githubusercontent.com/assets/6388663/11940913/ff28392a-a82b-11e5-86b4-571bc70d21bb.png)\nHere the file nesting provides no benefit at all, and actually just introduces a _really_ annoying extra click to get to the `.ts` file. A possible fix for this might be to only nest files if the folder name is different from the name of the `.html` file, but this might also be wrong - for example, a folder named `tabs` representing some fancy `tabs` component might actually contain multiple elements that work together, e.g. `tabs.html/js`, `tab-pane.html/js` and `tab-button.html/js`, and in this case we _do_ want nesting for all three of those. Therefore, I strongly believe an option to simply disable all nesting is the best option here - and it is very much needed, because despite this example, we do have projects in which the nesting provides absolutely no value and represents a major annoyance.\n\nOne could also argue that the `.html` file should actually be nested under the `.js` file.\nConsider an Angular 2 application, where the `.ts` file represents the actual Component, annotated with metadata specifying either the path to the `.html` file representing its view, or if the view is small, a string representing the markup of the view. Same for styles, where the metadata in the `.ts` file specifies either the path to the `.css` file, or a string representing the style rules. Here, both the view and the style sheet is clearly dependencies of the `.ts` file, so it would make sense to nest them below that...\n##### An alternative idea\n\nAlternatively, you could consider a completely different approach to nesting, where the part of the file name the files have in common, is used to show a \"virtual folder\" containing all the files - then file nesting could be used only for things like transpiler generated files. The image below is a concept I mocked up to illustrate this idea:\n![virtual-folder-concept](https://cloud.githubusercontent.com/assets/6388663/11942319/042b84ea-a836-11e5-80f1-b5941cfbdfa7.png)\nHere, all the files have the \"foo\" part of their name in common, and is therefore nested under a \"foo\" node in Solution Explorer. However, in the file system, the actual files are all located in the components folder, so in the code the path would be `app/components/foo.js` - nice an clean, works for any file type, and makes no assumptions about whether `.html` or `.js` is more important.\n\nGoing further with this idea, the IDE could also be smart, so when selecting this \"virtual folder\", it could maybe somehow open all the `foo.*` files in a split view (ignoring transpilation output of course), thus providing a quick way to see all the component code at once. Just a thought...\n### File nesting is broken\n\nNot only is file nesting inconsistent, and sometimes annoying, but it is also broken.\nHere are two cases of incorrect behavior I managed to reproduce - unfortunately, this does not seem to fail consistently, so it can be hard to reproduce - but it does happen often enough to be annoying.\n![file-nested-on-drag-copy](https://cloud.githubusercontent.com/assets/6388663/11943207/4749c9e8-a83c-11e5-9f15-304cb16e8419.png)\n![nesting-broken-when-folder-is-renamed](https://cloud.githubusercontent.com/assets/6388663/11943211/4c807074-a83c-11e5-8e71-4bed0bd4353c.png)\n\nPlease take those Solution Explorer issues seriously - I've provided feedback about multiple critical issues several several months ago, and thus far _nothing_ has improved. Solution Explorer still hangs or crashes the whole IDE when a large number of files is modified/moved/copied/renamed, it still has annoying, inconsistent and buggy file nesting, and it still constantly gets out of sync with the file system, crashing first the project system and eventually the whole IDE. I'm more that a little concerned about seeing a release candidate label on something this buggy and unpolished - if this is indeed what you intend to release, then we intend to find another IDE for our frontend development.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7352155171","Type":"IssuesEvent","CreatedAt":"2018-03-08T19:37:26","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/199","RelatedDescription":"Closed issue \"ASP.NET/EF Core feeds renamed and moved to dotnet.myget.org\" (#199) at aspnet/Announcements","RelatedBody":"The ASP.NET and EF Core MyGet feeds have moved from www.myget.org to dotnet.myget.org. There are automatic redirects from the old feeds to the new feeds so no _immediate_ change is needed. If you use the nightly feeds for packages, please move to the new feeds ASAP. The redirects will be available for at least a few weeks.\n\n| https://www.myget.org/f/ (Before) | https://dotnet.myget.org/f/ (After) |\n| --- | --- |\n| aspnetvnext | aspnetcore-dev |\n| aspnetrelease | aspnetcore-release |\n| aspnetmaster | aspnetcore-master |\n| aspnetcidev | aspnetcore-ci-dev |\n| aspnetcirelease | aspnetcore-ci-release |\n\nPlease use https://github.com/aspnet/Home/issues/1708 for further discussion.\n"},{"Id":"7340008772","Type":"IssuesEvent","CreatedAt":"2018-03-06T20:07:16","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/292","RelatedDescription":"Opened issue \"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image\" (#292) at aspnet/Announcements","RelatedBody":"We will be deprecating the following Docker images\r\n \r\n- microsoft/aspnetcore-build:1.0-1.1\r\n- microsoft/aspnetcore-build:1.0-2.0\r\n\r\nWe will not delete these images. These images will continue to receive patch update whenever a 1.0.x, 1.1.x, or 2.0.x update ships, however, we will not produce a new version which contains the 2.1 runtime.\r\n\r\n### Why?\r\n \r\nThese images existed to support CI/CD pipelines that run apps on multiple versions for .NET Core in the same container. With each release, these images have grown in size. The 1.0-2.0 image is already about 1GB, and would continue to grow with runtime updates. \r\n \r\nFortunately, recent improvements to .NET Core (such as minor version roll-forward) and Docker (multi-stage builds) have reduced the need to use an image with multiple versions of .NET Core. We have seen usage of these multi-version images declining over time, and today, they are a small percentage of our Docker image usage.\r\n\r\nRather than maintaining a single, large image with all possible .NET Core runtimes, we encourage users to use multi-stage builds. Docker's multi-stage feature allows you to compose a single Dockerfile, but still use multiple .NET Core runtimes. Also, starting in 2.1, .NET Core supports rolling forward the runtime version within the major version, which will further reduce the need to have multiple 2.x runtimes side-by-side.\r\n \r\nFor discussion, use https://github.com/aspnet/aspnet-docker/issues/349"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"971084152693866496","CreatedAt":"2018-03-06T18:04:38+00:00","UserScreenname":"aspnet","Text":"We are live at https://t.co/4Ioo9jNSN2 ! Join us!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"971075755168841728","CreatedAt":"2018-03-06T17:31:16+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup starts at 10 AM  Pacific / 1800 GMT. Ryan Nowak will be showing Web API 2.1 fâ¦ https://t.co/OW0zeYZPyq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null},{"Id":"970812132399890432","CreatedAt":"2018-03-06T00:03:43+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is a feature deep dive on Web API improvements in 2.1 with Ryan Nowak.\n\nTuesdâ¦ https://t.co/eKElaXNIR3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":11,"RawContent":null},{"Id":"969671939106025473","CreatedAt":"2018-03-02T20:33:00+00:00","UserScreenname":"aspnet","Text":"Jon the Azure AD team for their first Office Hours call on March 8. https://t.co/kVYF9JWzeZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":6,"RawContent":null},{"Id":"968561906003791872","CreatedAt":"2018-02-27T19:02:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":6,"RawContent":null},{"Id":"968550190889267201","CreatedAt":"2018-02-27T18:15:34+00:00","UserScreenname":"aspnet","Text":"#ASPNET Core 2.1.0-preview1 now available https://t.co/loVh03KKfz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":53,"RawContent":null},{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Raâ¦ https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"965964952442933249","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"aspnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/HVyIw0Wcgd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":9,"RawContent":null},{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.â¦ https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answeâ¦ https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of tâ¦ https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlandoâ¦ https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2018-03-09T05:30:13.2014784Z","RunDurationInMilliseconds":11681}