{"Data":{"Blog":{"FeedItems":[{"Title":"Release Candidate builds of Entity Framework Core 3.0 and Entity Framework 6.3 are now available","PublishedOn":"2019-09-16T21:47:32+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We previously said that preview 9 would be your last chance to test EF Core 3.0 and EF 6.3 before general availability. But it turns out that we made enough improvements to our libraries and across...","Href":"https://devblogs.microsoft.com/dotnet/release-candidate-builds-of-entity-framework-core-3-0-and-entity-framework-6-3-are-now-available/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Release Candidate 1","PublishedOn":"2019-09-16T18:45:09+00:00","CommentsCount":25,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.0 Release Candidate 1. Just like with Preview 9, we&#8217;ve focused on polishing .NET Core 3.0 for a final release. We are now getting very, very close. We...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/","RawContent":null},{"Title":"Finalization implementation details","PublishedOn":"2019-09-16T17:43:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Years ago I wrote a document on making finalization scanning concurrent. At the time there was an internal team that was using finalization as a way to resurrect objects and putting them back in their...","Href":"https://devblogs.microsoft.com/dotnet/finalization-implementation-details/","RawContent":null},{"Title":".NET Framework September 2019 Security and Quality Rollup","PublishedOn":"2019-09-10T18:54:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the September 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update for .NET Framework.\nSecurity\nCVE-2019-1142– .NET Framework Elevation of Privilege...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core September 2019 Updates – 2.1.13 and 2.2.7","PublishedOn":"2019-09-10T17:17:31+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core September 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a...","Href":"https://devblogs.microsoft.com/dotnet/net-core-september-2019/","RawContent":null},{"Title":"GC Perf Infrastructure – Part 0","PublishedOn":"2019-09-10T05:43:17+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"In this blog entry and some future ones I will be showing off functionalities that our new GC perf infrastructure provides. Andy and I have been working on it (he did all the work; I merely played the...","Href":"https://devblogs.microsoft.com/dotnet/gc-perf-infrastructure-part-0/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 9 and Entity Framework 6.3 Preview 9","PublishedOn":"2019-09-05T00:25:11+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"The Preview 9 versions of the EF Core 3.0 package and the EF 6.3 package are now available for download from nuget.org.\nThese are the last planned previews before we release the final versions later...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-9-and-entity-framework-6-3-preview-9/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 9","PublishedOn":"2019-09-04T19:00:55+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.0 Preview 9. Just like with Preview 8, we&#8217;ve focused on polishing .NET Core 3.0 for a final release and aren&#8217;t adding new features. If these final...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/","RawContent":null},{"Title":"Hardware Intrinsics in .NET Core","PublishedOn":"2019-09-03T22:35:55+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"Several years ago, we decided that it was time to support SIMD code in .NET. We introduced the System.Numerics namespace with Vector2, Vector3, Vector4, Vector&#60;T&#62;, and related types. These...","Href":"https://devblogs.microsoft.com/dotnet/hardware-intrinsics-in-net-core/","RawContent":null},{"Title":"Announcing ML.NET 1.4 Preview and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-09-03T18:00:35+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"We are excited to announce ML.NET 1.4 Preview and updates to Model Builder and CLI.\nML.NET is an open-source and cross-platform machine learning framework for .NET developers. ML.NET also includes...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-preview-and-model-builder-updates-machine-learning-for-net/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10427072993","Type":"IssuesEvent","CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Opened issue \".NET Core 3.0 RC 1\" (#123) at dotnet/announcements","RelatedBody":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10387173702","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:23:27","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Opened issue \"September 2019 .NET Updates\" (#122) at dotnet/announcements","RelatedBody":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10387041341","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:04:51","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32971\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.7\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.8, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n"},{"Id":"10348207363","Type":"IssuesEvent","CreatedAt":"2019-09-04T19:14:06","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Opened issue \".NET Core 3.0 Preview 9\" (#120) at dotnet/announcements","RelatedBody":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n[EF Core](https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-9-and-entity-framework-6-3-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10464693761","Type":"IssuesEvent","CreatedAt":"2019-09-21T03:52:57","Actor":"petermcclymont","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26812","RelatedDescription":"Opened issue \".NET Core 3.0 RC1 console app does not work under Linux\" (#26812) at dotnet/coreclr","RelatedBody":"I am using .NET Core from a snap package on KUbuntu. I switched to the beta and edge channels to upgrade from .NET Core 2.2 to .NET Core 3.0.\r\n\r\nWhen on beta or edge my console app doesn't work, so I decided to go back to basics. Create a new console app to see what would happen,\r\n\r\nmkdir testdotnet\r\ncd testdotnet\r\ndotnet new console\r\ndotnet build\r\ndotnet run\r\n\r\nIt runs for a second, and gives nothing. No output, whereas I would normally expect,\r\n\r\nHello World!\r\n\r\nWhen I change back to the stable channel, it works.\r\n\r\nPlease let me know what additional information you need. I ran this,\r\n\r\ndotnet run -v diag\r\n\r\nBut the output was no difference (as far as I could see) between .NET Core 2.2 and .NET Core 3.0. However if that is useful or something similar then let me know."},{"Id":"10464690274","Type":"IssuesEvent","CreatedAt":"2019-09-21T03:50:49","Actor":"stuyun","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26811","RelatedDescription":"Opened issue \"Dotnet processes are too numerous to differentiate between specific applications\" (#26811) at dotnet/coreclr","RelatedBody":"dotnet.exe App1.dll\r\ndotnet.exe App2.dll\r\ndotnet.exe App3.dll\r\ndotnet.exe App4.dll\r\n\r\nProcess names are all dotnet and can't distinguish between specific applications"},{"Id":"10464552451","Type":"PullRequestEvent","CreatedAt":"2019-09-21T02:30:12","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26810","RelatedDescription":"Opened pull request \"find src/jit -type f -exec sed -i -e 's/->genEmitter/->GetEmitter()/g…\" (#26810) at dotnet/coreclr","RelatedBody":"@am11 @jkotas @janvorli "},{"Id":"10464549353","Type":"PullRequestEvent","CreatedAt":"2019-09-21T02:28:33","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26809","RelatedDescription":"Opened pull request \"Copy live sets when splitting blocks\" (#26809) at dotnet/coreclr","RelatedBody":"With #26456 we may generate labels for split blocks (even though there's no associated code). Therefore we need to ensure that the live sets are correct.\r\nAlso, cleanup some miscellaneous dumping code.\r\n\r\nFix #26795"},{"Id":"10464528570","Type":"PullRequestEvent","CreatedAt":"2019-09-21T02:17:01","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26808","RelatedDescription":"Opened pull request \"Replace gtCostSz with /GetCostSz()\" (#26808) at dotnet/coreclr","RelatedBody":"@am11  @jkotas @janvorli "},{"Id":"10464471415","Type":"PullRequestEvent","CreatedAt":"2019-09-21T01:45:22","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26807","RelatedDescription":"Opened pull request \"Implement stack probing using helpers\" (#26807) at dotnet/coreclr","RelatedBody":"Work towards #21061\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10464295575","Type":"PullRequestEvent","CreatedAt":"2019-09-21T00:20:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12688","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12688) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 10:30 PM\r\n- **Commit**: 72b39b0473993b932a08c8fc24a8988d45b416a5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19470.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"10464196909","Type":"PullRequestEvent","CreatedAt":"2019-09-20T23:45:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12688","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12688) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 10:30 PM\r\n- **Commit**: 72b39b0473993b932a08c8fc24a8988d45b416a5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19470.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"10464076077","Type":"PullRequestEvent","CreatedAt":"2019-09-20T23:05:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12687","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12687) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.7\r\n- **Date Produced**: 9/20/2019 9:52 PM\r\n- **Commit**: c25b8b41ecbd8ffac08e5af2d7f337a2b51e338c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19470.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19470.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19470.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19470.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19470.7\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10460045748","Type":"PullRequestEvent","CreatedAt":"2019-09-20T12:34:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1558","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1558) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.1\r\n- **Date Produced**: 9/20/2019 10:21 AM\r\n- **Commit**: ce5dfbb9ad62f95885748c7e95ebcd3ca453d1bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10459977045","Type":"PullRequestEvent","CreatedAt":"2019-09-20T12:24:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1558","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1558) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.1\r\n- **Date Produced**: 9/20/2019 10:21 AM\r\n- **Commit**: ce5dfbb9ad62f95885748c7e95ebcd3ca453d1bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10459895243","Type":"PullRequestEvent","CreatedAt":"2019-09-20T12:11:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1557","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1557) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10459830797","Type":"PullRequestEvent","CreatedAt":"2019-09-20T12:01:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1557","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1557) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10455102033","Type":"PullRequestEvent","CreatedAt":"2019-09-19T20:28:51","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1556","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1556) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.4\r\n- **Date Produced**: 9/19/2019 6:33 PM\r\n- **Commit**: 19e994876c2c29b01b78cc7a2a7019eb7dfcbd54\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10455033557","Type":"PullRequestEvent","CreatedAt":"2019-09-19T20:18:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1556","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1556) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.4\r\n- **Date Produced**: 9/19/2019 6:33 PM\r\n- **Commit**: 19e994876c2c29b01b78cc7a2a7019eb7dfcbd54\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10452124342","Type":"IssuesEvent","CreatedAt":"2019-09-19T14:08:45","Actor":"mstoffel-infraserv","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1553","RelatedDescription":"Closed issue \"Regex Match Hangs forever\" (#1553) at dotnet/standard","RelatedBody":"During processing with one of our applications we ran into an issue with Regex Match method hanging forever with a specific regular expression and specific text. See attached code for details.\r\n[BadRegex.zip](https://github.com/dotnet/standard/files/3628478/BadRegex.zip)\r\n\r\n\r\n"},{"Id":"10451250223","Type":"PullRequestEvent","CreatedAt":"2019-09-19T12:28:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1555","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1555) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190918.14\r\n- **Date Produced**: 9/19/2019 4:54 AM\r\n- **Commit**: 19b304f7815894b13cb61e87e1c9eac49a474c7e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19468.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10451211727","Type":"PullRequestEvent","CreatedAt":"2019-09-19T12:23:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1555","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1555) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190918.14\r\n- **Date Produced**: 9/19/2019 4:54 AM\r\n- **Commit**: 19b304f7815894b13cb61e87e1c9eac49a474c7e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19468.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10464659837","Type":"IssuesEvent","CreatedAt":"2019-09-21T03:32:20","Actor":"stuyun","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/41243","RelatedDescription":"Opened issue \"Dotnet processes are too numerous to differentiate between specific applications\" (#41243) at dotnet/corefx","RelatedBody":"dotnet.exe App1.dll\r\ndotnet.exe App2.dll\r\ndotnet.exe App3.dll\r\ndotnet.exe App4.dll\r\n\r\nProcess names are all dotnet and can't distinguish between specific applications"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10464780936","Type":"PullRequestEvent","CreatedAt":"2019-09-21T04:47:42","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38756","RelatedDescription":"Merged pull request \"Verify semantic model on suppression operator\" (#38756) at dotnet/roslyn","RelatedBody":"Uncommenting some verification in tests for suppressions.\r\nCloses https://github.com/dotnet/roslyn/issues/32661\r\nCloses https://github.com/dotnet/roslyn/issues/38343\r\n\r\nAlso closes https://github.com/dotnet/roslyn/issues/38543 (problem with binding of async lambdas allowing a void to be returned) by adding a test"},{"Id":"10464780918","Type":"IssuesEvent","CreatedAt":"2019-09-21T04:47:42","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38343","RelatedDescription":"Closed issue \"Null suppression operator not skipped when searching for bindable parent\" (#38343) at dotnet/roslyn","RelatedBody":"This code in `MemberSemanticModel.GetBindableParentNode` does not handle the postfix `!` operator, which has no bound node:\r\n\r\n``` c#\r\n            // skip up past parens and ref expressions, as we have no bound nodes for them.\r\n            while (true)\r\n            {\r\n                switch (parent.Kind())\r\n                {\r\n                    case SyntaxKind.ParenthesizedExpression:\r\n                    case SyntaxKind.RefExpression:\r\n                    case SyntaxKind.RefType:\r\n                        var pp = parent.Parent;\r\n                        if (pp == null) break;\r\n                        parent = pp;\r\n                        break;\r\n                    default:\r\n                        goto foundParent;\r\n                }\r\n            }\r\n```\r\n"},{"Id":"10464780920","Type":"IssuesEvent","CreatedAt":"2019-09-21T04:47:42","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38543","RelatedDescription":"Closed issue \"Ternary operator in async method crashes the compiler\" (#38543) at dotnet/roslyn","RelatedBody":"**Version Used**: 3.2.1-beta4-19408-03 (2fc6a049) included with the Visual Studio 2019 (16.2.4)\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\nusing System;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    static Task Foo(bool b) => Bar(async () =>\r\n        b ? await Task.Delay(1) : await Task.Delay(2));\r\n\r\n    static T Bar<T>(Func<T> f) => f();\r\n\r\n    static void Main(string[] args) {}\r\n}\r\n```\r\nThis code crashes the compiler with the following stack:\r\n<details>\r\n  <summary>Stack trace</summary>\r\n\r\n```\r\n  Message: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncMethodToStateMachineRewriter.VisitExpressionStatement(BoundExpressionStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.<>c__DisplayClass41_0.<VisitBlock>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.PossibleIteratorScope(ImmutableArray`1 locals, Func`1 wrapped)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.<>c__DisplayClass41_0.<VisitBlock>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.PossibleIteratorScope(ImmutableArray`1 locals, Func`1 wrapped)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.<>c__DisplayClass41_0.<VisitBlock>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.PossibleIteratorScope(ImmutableArray`1 locals, Func`1 wrapped)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.<>c__DisplayClass41_0.<VisitBlock>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.PossibleIteratorScope(ImmutableArray`1 locals, Func`1 wrapped)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncMethodToStateMachineRewriter.VisitBody(BoundStatement body)\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncMethodToStateMachineRewriter.GenerateMoveNext(BoundStatement body, MethodSymbol moveNextMethod)\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncRewriter.GenerateMoveNext(SynthesizedImplementationMethod moveNextMethod)\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncRewriter.GenerateMethodImplementations()\r\n   at Microsoft.CodeAnalysis.CSharp.StateMachineRewriter.Rewrite()\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncRewriter.Rewrite(BoundStatement bodyWithAwaitLifted, MethodSymbol method, Int32 methodOrdinal, VariableSlotAllocator slotAllocatorOpt, TypeCompilationState compilationState, DiagnosticBag diagnostics, AsyncStateMachine& stateMachineType)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileSynthesizedMethods(TypeCompilationState compilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\nStack Trace:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncMethodToStateMachineRewriter.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter+<>c__DisplayClass41_0.<VisitBlock>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.PossibleIteratorScope(System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>, System.Func`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter+<>c__DisplayClass41_0.<VisitBlock>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.PossibleIteratorScope(System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>, System.Func`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter+<>c__DisplayClass41_0.<VisitBlock>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.PossibleIteratorScope(System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>, System.Func`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter+<>c__DisplayClass41_0.<VisitBlock>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.PossibleIteratorScope(System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>, System.Func`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodToStateMachineRewriter.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncMethodToStateMachineRewriter.VisitBody(Microsoft.CodeAnalysis.CSharp.BoundStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncMethodToStateMachineRewriter.GenerateMoveNext(Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncRewriter.GenerateMoveNext(Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedImplementationMethod)\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncRewriter.GenerateMethodImplementations()\r\n   at Microsoft.CodeAnalysis.CSharp.StateMachineRewriter.Rewrite()\r\n   at Microsoft.CodeAnalysis.CSharp.AsyncRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CSharp.AsyncStateMachine ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileSynthesizedMethods(Microsoft.CodeAnalysis.CSharp.TypeCompilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\n   at Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n</details>\r\n\r\nReplacing ternary operator with the code block fixes compilation error:\r\n```C#\r\n    static Task Foo(bool b) => Bar(async () =>\r\n    {\r\n        if (b)\r\n            await Task.Delay(1);\r\n        else\r\n            await Task.Delay(2);\r\n    });\r\n```\r\n"},{"Id":"10464780911","Type":"IssuesEvent","CreatedAt":"2019-09-21T04:47:42","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32661","RelatedDescription":"Closed issue \"Verify semantic model on suppressed expressions\" (#32661) at dotnet/roslyn","RelatedBody":"From discussion with Neal, we think the suppression expression should have matching `Type` and `ConvertedType`, which would be the converted type of the underlying expression.\r\nIn `(Delegate)(() = {}!)` and `Delegate x = () => {}!;`, the suppressed expressions would have type and converted type `Delegate`.\r\n\r\nOther interesting scenarios involving conversions from expressions: `null`, `default`, lambdas, method groups, interpolated strings.\r\n\r\nLook for uses of `BoundNode.Kind` and `BoundKind.MethodGroup` (for instance, `GetTypeInfoForNode`)"},{"Id":"10464246619","Type":"PullRequestEvent","CreatedAt":"2019-09-21T00:02:16","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38790","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#38790) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10456718650","Type":"IssuesEvent","CreatedAt":"2019-09-20T02:21:36","Actor":"Unreal-System","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Opened issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795) at dotnet/corert","RelatedBody":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds."},{"Id":"10433855669","Type":"PullRequestEvent","CreatedAt":"2019-09-17T14:13:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#7794) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"10432892147","Type":"PullRequestEvent","CreatedAt":"2019-09-17T12:22:44","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#7794) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10430907028","Type":"IssuesEvent","CreatedAt":"2019-09-17T07:56:53","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5899","RelatedDescription":"Closed issue \"Corrupted Guid stored to database (using Entity framework) via LINQ to SQL with .NET native toolchain\" (#5899) at dotnet/corert","RelatedBody":"Recently we've found an issue when Guid stored to database (we're using Entity Framework, and LINQ to SQL) become corrupted in the our UWP application built in Release mode (i.e. with the .NET Native toolchain). It looks like some pointer corruption 'cause value stored in database has a part of original Guid, for example, original guid visible via debugging in release mode:\r\nD4E4301C**A88EEE4A8591699604370085**\r\nStored value: **A88EEE4A8591699604370085**00000000\r\n\r\nOne more time, without .NET native toolchain everything is working as expected, it's happened in Release mode only!\r\n\r\nWe've found a temporarily workaround, changing Guid to string, but will be good if you can fix this bug ASAP!"},{"Id":"10430904163","Type":"IssuesEvent","CreatedAt":"2019-09-17T07:56:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6685","RelatedDescription":"Closed issue \"Ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types are properly handled with regards to struct packing/layout\" (#6685) at dotnet/corert","RelatedBody":"The `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types are special and are directly mapped as the primitive ABI types (typically referred to as `__m64`, `__m128`, and `__m256`). ProjectN should ensure that these types are appropriately handled before they ship so that types are laid out appropriately in memory and so that it does not become a breaking change to fix them in the future.\r\n\r\nCoreCLR is already correctly handling these types in the VM layer: https://github.com/dotnet/coreclr/blob/master/src/vm/methodtablebuilder.cpp#L9521"},{"Id":"10430894891","Type":"IssuesEvent","CreatedAt":"2019-09-17T07:55:11","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6948","RelatedDescription":"Closed issue \"[.NET Native] Errors ILT0005 and NUTC3033 when building a UWP app with ImageSharp (.NET Standard)\" (#6948) at dotnet/corert","RelatedBody":"Hello,\r\nI'm working on a UWP project (currently targeting SDK 17134), and since I referenced the [ImageSharp library](https://github.com/SixLabors/ImageSharp) (which targets .NET Standard) I can no longer build my UWP app in Release mode.\r\n\r\n[This is the issue](https://github.com/SixLabors/ImageSharp/issues/828) on the ImageSharp repo, but I thought I'd post it here as well, since it's probably caused by the .NET Native compiler more than the library itself.\r\n\r\nHere are the errors I'm getting:\r\n\r\n> ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x64.microsoft.net.native.compiler\\2.2.1\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\Sergi\\source\\repos\\ImageSharpRepro\\ImageSharpRepro\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\ImageSharpRepro.rsp\"' returned exit code 1\r\n\r\n> Error: NUTC3033:Internal Compiler Error: Invalid MethodImpl body=6000353 decl=600032d when loading type 'SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>' from assembly 'SixLabors.ImageSharp' while loading MethodImpl list for 'instance SixLabors.ImageSharp.Processing.Processors.Quantization.IFrameQuantizer`1<TPixel1> SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>.SixLabors.ImageSharp.Processing.Processors.Quantization.IQuantizer.CreateFrameQuantizer<TPixel1>(SixLabors.ImageSharp.Configuration)'. while loading type 'SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>'. while computing compilation roots.\r\n\r\n### Steps to Reproduce\r\n\r\n- Create a new UWP project (I'm targeting SDK 17134 and using 16299 as minimum)\r\n- Reference the ImageSharp NuGet package (I'm using version `1.0.0-beta0006`)\r\n- Try to build the app in Release mode (either x86 or x64), this fails with the errors above\r\n\r\nI've already sent a repro to dotnetnative@microsoft.com - but the issue can really just be easily reproduced in any UWP app just by referencing ImageSharp and trying to build in Release.\r\n\r\n**NOTE**: I've tried to build the app both using .NETCore.UWP 6.1.9, 6.2.2 and 6.2.3, all of them fail with similar errors. If you have an internal build of the upcoming 6.2.4 package maybe you could try using that one to see if this particular glitch has already been addressed there?\r\n\r\nPlease let me know if you need any more info from me, I'm happy to help!\r\nThank you in advance.\r\nSergio"},{"Id":"10428602652","Type":"PullRequestEvent","CreatedAt":"2019-09-16T23:13:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7793","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7793) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub"},{"Id":"10427866816","Type":"PullRequestEvent","CreatedAt":"2019-09-16T20:57:14","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7793","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7793) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10425554912","Type":"IssuesEvent","CreatedAt":"2019-09-16T15:38:33","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7790","RelatedDescription":"Closed issue \"GC on ARM64 based \"kind of unix\" system\" (#7790) at dotnet/corert","RelatedBody":"I am sorry to bother again. After fixing some more minor issues and brush up my ARM64 assembler knowledge I was finally able to run a simple hello world on my ARM64 system without crashing. Doing things like writing to the log (the system doesn't have a text based console at all), Thread.Sleep, Environment.TickCount, printing the command line arguments etc works fine. But than I made the \"mistake\" to trigger the GC. \r\n\r\nTo make a long story short after some more debugging I noticed that the unwind of the stack does not work. The reason was pretty obvious. Libunwind doesn't have any information about the function were the stack walk should be started. I am aware that there are some parts missing for ARM64 targets that I need to fill but there is one question I was not able to answer so far. Does the GC only need unwind information for the managed code part? Or do I need to provide information for the C/C++ parts and even the dynamic libs of the OS? I am aware that libunwind can fetch these information by it's own. Unfortunately the function that it uses for this is not supported by the OS my system is using.  I may be able to get the unwind sections from the runtime C/C++ code.\r\n\r\n"},{"Id":"10418327564","Type":"PullRequestEvent","CreatedAt":"2019-09-15T07:35:12","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7792","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7792) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10461224606","Type":"IssuesEvent","CreatedAt":"2019-09-20T15:02:41","Actor":"rainersigwald","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3662","RelatedDescription":"Opened issue \"ReferenceCopyLocalPaths no longer content NuGetSourceType metadata\" (#3662) at dotnet/sdk","RelatedBody":"_From @joeltankam on Friday, September 20, 2019 2:22:39 PM_\r\n\r\n### Steps to reproduce\r\n\r\nI encounter some missing metadata to `ReferenceCopyLocalPaths` item since migrating to `Microsoft.NET.Sdk` format in project files.\r\n\r\nLets consider the following project file :\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net471</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nI use the following code to print metadata from `ReferenceCopyLocalPaths` items : \r\n\r\n```xml\r\n  <UsingTask TaskName=\"GetMetadataTask\" TaskFactory=\"CodeTaskFactory\" AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.v4.0.dll\" >\r\n    <ParameterGroup>\r\n      <Items ParameterType=\"Microsoft.Build.Framework.ITaskItem[]\" Required=\"true\" />\r\n      <MetadataString Output=\"true\" />\r\n    </ParameterGroup>\r\n    <Task>\r\n      <Using Namespace=\"System\"/>\r\n      <Code Type=\"Fragment\" Language=\"cs\">\r\n        <![CDATA[\r\n            StringBuilder metadata = new StringBuilder();\r\n            foreach (var item in Items)\r\n            {\r\n                metadata.AppendFormat(\"{0}\\r\\n\", item);\r\n                foreach (string name in item.MetadataNames)\r\n                {\r\n                    metadata.AppendFormat(\"  {0}={1}\\r\\n\", name, item.GetMetadata(name));\r\n                }\r\n                metadata.AppendFormat(\"\\r\\n\");\r\n            }\r\n            MetadataString = metadata.ToString();\r\n        ]]>\r\n      </Code>\r\n    </Task>\r\n  </UsingTask>\r\n\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveAssemblyReferences\">\r\n    <ItemGroup>\r\n      <PrintItems Include=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\" />\r\n    </ItemGroup>\r\n    <GetMetadataTask Items=\"@(PrintItems)\">\r\n      <Output TaskParameter=\"MetadataString\" PropertyName=\"MyBeautifulMetadata\"/>\r\n    </GetMetadataTask>\r\n    <Message Importance=\"High\" Text=\"$(MyBeautifulMetadata)\" />\r\n  </Target>\r\n```\r\n\r\n### Expected  behavior\r\nWhen using old project files format, I had the following metadata : \r\n\r\n```txt\r\n  ItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\n### Actual behavior\r\n\r\nNow I get the following : \r\n\r\n```txt\r\nItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\nThe difference being the absence of : \r\n\r\n```txt\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n```\r\n\r\nHowever, I need the `NuGetSourceType` metadata in my build process. \r\nIs there please any reason why this this metadata disappeared ? Is there a way to set it back ?\r\n\r\nI currently use this custom target to set back `NuGetSourceType` :\r\n\r\n```xml\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveReferences\">\r\n    <ItemGroup>\r\n      <ReferenceCopyLocalPaths Update=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\">\r\n        <NuGetSourceType>Package</NuGetSourceType>\r\n      </ReferenceCopyLocalPaths>\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\n\r\n### Environment data\r\n`msbuild /version` output: 15.9.21.664\r\n.NET Core SDK version : 2.2.108\r\nVisual Studio : Professional 2017, v 15.9.16\r\n\r\n\r\n_Copied from original issue: microsoft/msbuild#4754_"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"496609210","IsPullRequest":false,"CreatedAt":"2019-09-21T03:52:57","Actor":"petermcclymont","Number":"26812","RawContent":null,"Title":".NET Core 3.0 RC1 console app (and webapp) does not work under Linux","State":"open","Body":"I am using .NET Core from a snap package on KUbuntu. I switched to the beta and edge channels to upgrade from .NET Core 2.2 to .NET Core 3.0.\r\n\r\nWhen on beta or edge my console app doesn't work, whereas it was working perfectly under .NET Core 2.2.\r\n\r\nI decided to go back to basics. Create a new console app to see what would happen,\r\n\r\nmkdir testdotnet\r\ncd testdotnet\r\ndotnet new console\r\ndotnet build\r\ndotnet run\r\n\r\nIt runs for a second, and gives nothing. No output, whereas I would normally expect,\r\n\r\nHello World!\r\n\r\nMy actual app does the same thing. Running the app doesn't actually run any code. When I change back to the stable channel, everything works.\r\n\r\nPlease let me know what additional information you need. I ran this,\r\n\r\ndotnet run -v diag\r\n\r\nBut the output was no different (as far as I could see) between .NET Core 2.2 and .NET Core 3.0, it just shows the build process that was run first. However if that is useful or something similar then let me know.\r\n\r\nSomething else, I also tried this,\r\n\r\ndotnet new webapp\r\ndotnet build\r\ndotnet run\r\n\r\nAnd it does the same. If you want me to run this against a different version of Linux, or a clean version of Linux I can do do.","Url":"https://github.com/dotnet/coreclr/issues/26812","RelatedDescription":"Open issue \".NET Core 3.0 RC1 console app (and webapp) does not work under Linux\" (#26812)"},{"Id":"496609052","IsPullRequest":false,"CreatedAt":"2019-09-21T03:32:19","Actor":"stuyun","Number":"26811","RawContent":null,"Title":"Dotnet processes are too numerous to differentiate between specific applications","State":"open","Body":"dotnet.exe App1.dll\r\ndotnet.exe App2.dll\r\ndotnet.exe App3.dll\r\ndotnet.exe App4.dll\r\n\r\nProcess names are all dotnet and can't distinguish between specific applications","Url":"https://github.com/dotnet/coreclr/issues/26811","RelatedDescription":"Open issue \"Dotnet processes are too numerous to differentiate between specific applications\" (#26811)"},{"Id":"496603417","IsPullRequest":true,"CreatedAt":"2019-09-21T02:30:12","Actor":"franksinankaya","Number":"26810","RawContent":null,"Title":"find src/jit -type f -exec sed -i -e 's/->genEmitter/->GetEmitter()/g…","State":"open","Body":"@am11 @jkotas @janvorli ","Url":"https://github.com/dotnet/coreclr/pull/26810","RelatedDescription":"Open PR \"find src/jit -type f -exec sed -i -e 's/->genEmitter/->GetEmitter()/g…\" (#26810)"},{"Id":"496603301","IsPullRequest":true,"CreatedAt":"2019-09-21T02:28:33","Actor":"CarolEidt","Number":"26809","RawContent":null,"Title":"Copy live sets when splitting blocks","State":"open","Body":"With #26456 we may generate labels for split blocks (even though there's no associated code). Therefore we need to ensure that the live sets are correct.\r\nAlso, cleanup some miscellaneous dumping code.\r\n\r\nFix #26795","Url":"https://github.com/dotnet/coreclr/pull/26809","RelatedDescription":"Open PR \"Copy live sets when splitting blocks\" (#26809)"},{"Id":"496602410","IsPullRequest":true,"CreatedAt":"2019-09-21T02:17:00","Actor":"franksinankaya","Number":"26808","RawContent":null,"Title":"Replace gtCostSz with GetCostSz()","State":"open","Body":"@am11  @jkotas @janvorli ","Url":"https://github.com/dotnet/coreclr/pull/26808","RelatedDescription":"Open PR \"Replace gtCostSz with GetCostSz()\" (#26808)"},{"Id":"496599878","IsPullRequest":true,"CreatedAt":"2019-09-21T01:45:21","Actor":"echesakovMSFT","Number":"26807","RawContent":null,"Title":"Implement stack probing using helpers","State":"open","Body":"Work towards #21061\r\n","Url":"https://github.com/dotnet/coreclr/pull/26807","RelatedDescription":"Open PR \"Implement stack probing using helpers\" (#26807)"},{"Id":"496584301","IsPullRequest":true,"CreatedAt":"2019-09-20T23:38:08","Actor":"jkotas","Number":"26806","RawContent":null,"Title":"[release/3.1] Do not clip CPU count when CPU quota is used. (#26153)","State":"open","Body":"Description\r\nWe have heard from multiple customers deploying .NET Core micro-services in Kubernetes that clipping of CPU count when CPU quota is used results into a performance cliff in commonly used configuration.\r\n\r\nWe have added this clipping late during 3.0. It was controversial change and the data supporting the change were not very strong. This change reverts change. The change was reverted in master already. \r\n\r\nRegression?\r\nYes (2.x -> 3.0)\r\n\r\nRisk\r\nSmall chance that .NET Core 3.0 deployments may started depending on the broken behavior. They will need to be reconfigured.","Url":"https://github.com/dotnet/coreclr/pull/26806","RelatedDescription":"Open PR \"[release/3.1] Do not clip CPU count when CPU quota is used. (#26153)\" (#26806)"},{"Id":"496578535","IsPullRequest":true,"CreatedAt":"2019-09-20T23:06:39","Actor":"tarekgh","Number":"26805","RawContent":null,"Title":"Port The Fix When Enabling Windows Compatibilty Mode","State":"open","Body":"### **Description**\r\nEnabling Windows compatibility mode on any .NET Core app causes the app not starting at all. Basically, we throw exception very early during the app booting. This problem happens because of a bug in Windows shim layer when calling some Windows APIs and using some parameter called sort handle. We reported the issue to Windows, but it is not expected to get a fix in the shipped versions of Windows. The fix in .NET Core is very simple as we detect early if the sort handles are supported and working fine before we try to use it.\r\nThe example of the customer scenario is mentioned in the comment https://github.com/dotnet/coreclr/issues/26479#issuecomment-527236626\r\n\r\nThe reported issues for this problem are:  \r\nhttps://github.com/dotnet/core-setup/issues/7872\r\nhttps://github.com/dotnet/coreclr/issues/26479\r\nhttps://github.com/dotnet/coreclr/issues/15021\r\n\r\n### **Customer** Impact\r\nCustomer wanted to run their net core app under Windows compatibility mode will be able to do so.\r\n\r\n### **Regression?**\r\nNo.\r\n\r\n### **Code** Review\r\nJan Kotas @jkotas\r\n\r\n### **Testing**\r\nI have done manual testing ensuring now net core app can start and run under Windows compatibility mode. This change is merged in masters for a few weeks too. \r\n\r\n### **Risk**\r\nVery small, we are not changing any behavior. Also, the apps were not be able to run at all under compatibility mode.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26805","RelatedDescription":"Open PR \"Port The Fix When Enabling Windows Compatibilty Mode\" (#26805)"},{"Id":"496424434","IsPullRequest":true,"CreatedAt":"2019-09-20T21:51:40","Actor":"franksinankaya","Number":"26801","RawContent":null,"Title":"find ./ -type f -exec sed -i -e 's/\\<gtNextStmt\\>/GetNextStmt()/g' {} \\;","State":"closed","Body":"@am11 @jkotas @janvorli @dotnet/jit-contrib","Url":"https://github.com/dotnet/coreclr/pull/26801","RelatedDescription":"Closed or merged PR \"find ./ -type f -exec sed -i -e 's/\\<gtNextStmt\\>/GetNextStmt()/g' {} \\;\" (#26801)"},{"Id":"496554884","IsPullRequest":true,"CreatedAt":"2019-09-20T21:31:52","Actor":"trylek","Number":"26804","RawContent":null,"Title":"New SuperIlc command \"compile-framework\" and some fixes","State":"open","Body":"1) New command \"compile-framework\" does just what it says on the tin.\r\nMy thinking is that I'll use this option to build the CPAOT\r\nframework during product build in the envisioned pipeline. I have\r\nadded hard-coded exclusions for assemblies that fail to build right\r\nnow - about half of them aren't interesting as framework assemblies\r\n(e.g. R2RDump.dll), some other fail with IBC bugs and one other bug\r\nI'm about to investigate.\r\n\r\n2) Based on JanV's suggestion I have added a somewhat hacky logic\r\nto exclude the \"testhost\" folder when building the entire Pri#1\r\ntest tree. I'm open to suggestions how to tackle this in a cleaner\r\nmanner, I have shared my thoughts on the subject in code comments\r\nnext to the problematic spots.\r\n\r\n3) I have removed the unused \"runners\" parameter to Build.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/26804","RelatedDescription":"Open PR \"New SuperIlc command \"compile-framework\" and some fixes\" (#26804)"},{"Id":"496097761","IsPullRequest":true,"CreatedAt":"2019-09-20T20:30:24","Actor":"davidwrighton","Number":"26794","RawContent":null,"Title":"Allow IBC for non-generic methods to succeed","State":"closed","Body":"- my earlier fix in #26738 was too aggressive and prevented consideration of more methods than necessary.","Url":"https://github.com/dotnet/coreclr/pull/26794","RelatedDescription":"Closed or merged PR \"Allow IBC for non-generic methods to succeed\" (#26794)"},{"Id":"496524514","IsPullRequest":true,"CreatedAt":"2019-09-20T20:03:32","Actor":"janvorli","Number":"26803","RawContent":null,"Title":"Port to Release/3.1 - enable Mojave Hardened Runtime support","State":"open","Body":"* Move JIT_WriteBarrier that is modified at runtime to a dynamically\r\nallocated memory instead of making a page in libcoreclr.dylib RWX.\r\n* Fix JIT_Stelem_Ref calls to JIT_WriteBarrier\r\n* Update PAL to add MEM_JIT flag for allocations and reservations of\r\nexecutable memory.\r\n* Update native runtime in EH and stack unwinding areas so that it can\r\nunwind from the write barrier copy. That code has no unwind info, so\r\nwithout special handling, runtime would not be able to unwind from\r\nit.","Url":"https://github.com/dotnet/coreclr/pull/26803","RelatedDescription":"Open PR \"Port to Release/3.1 - enable Mojave Hardened Runtime support\" (#26803)"},{"Id":"496445146","IsPullRequest":true,"CreatedAt":"2019-09-20T16:34:31","Actor":"janvorli","Number":"26802","RawContent":null,"Title":"Fix crossgen2 handling of non-gc statics in generic classes","State":"open","Body":"All such statics were being handled incorrectly in the\r\nGetElementTypeInfo, leading to an incorrect offset being passed to the\r\nJIT and a crash at runtime.","Url":"https://github.com/dotnet/coreclr/pull/26802","RelatedDescription":"Open PR \"Fix crossgen2 handling of non-gc statics in generic classes\" (#26802)"},{"Id":"496411841","IsPullRequest":true,"CreatedAt":"2019-09-20T15:21:23","Actor":"mikedn","Number":"26800","RawContent":null,"Title":"[WIP] Stop using LIST nodes for FIELD_LIST","State":"open","Body":"Changes `GT_FIELD_LIST` to be a special node with a list of \"uses\" for fields, similar to `GT_PHI`.\r\n\r\nContributes to #19876","Url":"https://github.com/dotnet/coreclr/pull/26800","RelatedDescription":"Open PR \"[WIP] Stop using LIST nodes for FIELD_LIST\" (#26800)"},{"Id":"496318106","IsPullRequest":true,"CreatedAt":"2019-09-20T13:50:09","Actor":"dotnet-maestro[bot]","Number":"26798","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/20/2019 4:11 AM\r\n- **Commit**: 33723cfa72892e93656fe53350da35835d64c099\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19469.8\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26798","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#26798)"},{"Id":"496317878","IsPullRequest":true,"CreatedAt":"2019-09-20T13:49:41","Actor":"dotnet-maestro[bot]","Number":"26797","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.1\r\n- **Date Produced**: 9/20/2019 10:21 AM\r\n- **Commit**: ce5dfbb9ad62f95885748c7e95ebcd3ca453d1bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19470.1\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha1.19470.1\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26797","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#26797)"},{"Id":"496318786","IsPullRequest":false,"CreatedAt":"2019-09-20T12:15:39","Actor":"plwm","Number":"26799","RawContent":null,"Title":"PublishReadyToRun fails on Linux with exit code 139 when Microsoft.CodeAnalysis package referenced","State":"open","Body":"**Steps to reproduce:**\r\n1. git clone [https://github.com/plwm/eShopOnWeb-dotnetcore3.0](https://github.com/plwm/eShopOnWeb-dotnetcore3.0)\r\n2. cd src/Web\r\n2. Modify Web.csproj\r\n-> uncomment `<PackageReference Include=\"Microsoft.CodeAnalysis\" Version=\"3.2.1\" />`\r\n3.  dotnet publish -c Release -r linux-x64 -o out/linux-x64-3.0/\r\n\r\nBuild fails when publish on Linux with runtime linux-x64 or linux-arm\r\nBuild succeeds when publish on Windows with runtime win-x64\r\n\r\n**Note:**\r\nBuild succeeds on Linux unless you uncomment: `<PackageReference Include=\"Microsoft.CodeAnalysis\" Version=\"3.2.1\" />`\r\nSame behaviour with latest version 3.3.1-beta3-final of the library.\r\n\r\n**Platform:**\r\n```\r\n$ uname -a\r\nLinux AI509930 4.4.0-17134-Microsoft #706-Microsoft Mon Apr 01 18:13:00 PST 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04\r\n OS Platform: Linux\r\n RID:         ubuntu.19.04-x64\r\n Base Path:   /home/marcin/dotnet/sdk/3.0.100-rc1-014190/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-rc1-014190 [/home/marcin/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [/home/marcin/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [/home/marcin/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n**Log:**\r\n```\r\n$ dotnet publish -c Release -r linux-x64 -o out/linux-x64-3.0/\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19455-02+4a2d77107 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 373.34 ms for /home/marcin/eShopOnWeb/src/ApplicationCore/ApplicationCore.csproj.\r\n  Restore completed in 413.45 ms for /home/marcin/eShopOnWeb/src/Infrastructure/Infrastructure.csproj.\r\n  Restore completed in 507.59 ms for /home/marcin/eShopOnWeb/src/Web/Web.csproj.\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n\r\n  Restore operation started...\r\n  Restoring library jquery@3.3.1...\r\n  Restoring library bootstrap@3.3.7...\r\n  Restoring library jquery-validation-unobtrusive@3.2.10...\r\n  Restoring library jquery-validate@1.17.0...\r\n  Restoring library toastr.js@2.1.4...\r\n  Restoring library @aspnet/signalr@1.0.3...\r\n\r\n  6 libraries restored in 7.17 seconds\r\n\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n  ApplicationCore -> /home/marcin/eShopOnWeb/src/ApplicationCore/bin/Release/netstandard2.1/ApplicationCore.dll\r\n  Infrastructure -> /home/marcin/eShopOnWeb/src/Infrastructure/bin/Release/netstandard2.1/Infrastructure.dll\r\n\r\n  Bundler: Begin processing bundleconfig.json\r\n  Bundler: Done processing bundleconfig.json\r\n  Web -> /home/marcin/eShopOnWeb/src/Web/bin/Release/netcoreapp3.0/linux-x64/Web.dll\r\n  Web -> /home/marcin/eShopOnWeb/src/Web/bin/Release/netcoreapp3.0/linux-x64/Web.Views.dll\r\n  Optimizing assemblies for size, which may change the behavior of the app. Be sure to test after publishing. See: https://aka.ms/dotnet-illink\r\n/home/marcin/dotnet/sdk/3.0.100-rc1-014190/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Publish.targets(307,5): error MSB6006: \"/home/marcin/.nuget/packages/microsoft.netcore.app.runtime.linux-x64/3.0.0-rc1-19456-20/tools/crossgen\" exited with code 139. [/home/marcin/eShopOnWeb/src/Web/Web.csproj]\r\n/home/marcin/dotnet/sdk/3.0.100-rc1-014190/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Publish.targets(307,5): error MSB6006: \"/home/marcin/.nuget/packages/microsoft.netcore.app.runtime.linux-x64/3.0.0-rc1-19456-20/tools/crossgen\" exited with code 139. [/home/marcin/eShopOnWeb/src/Web/Web.csproj]\r\n/home/marcin/dotnet/sdk/3.0.100-rc1-014190/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Publish.targets(307,5): error MSB6006: \"/home/marcin/.nuget/packages/microsoft.netcore.app.runtime.linux-x64/3.0.0-rc1-19456-20/tools/crossgen\" exited with code 139. [/home/marcin/eShopOnWeb/src/Web/Web.csproj]\r\n/home/marcin/dotnet/sdk/3.0.100-rc1-014190/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Publish.targets(307,5): error MSB6006: \"/home/marcin/.nuget/packages/microsoft.netcore.app.runtime.linux-x64/3.0.0-rc1-19456-20/tools/crossgen\" exited with code 139. [/home/marcin/eShopOnWeb/src/Web/Web.csproj]\r\n/home/marcin/dotnet/sdk/3.0.100-rc1-014190/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Publish.targets(307,5): error MSB6006: \"/home/marcin/.nuget/packages/microsoft.netcore.app.runtime.linux-x64/3.0.0-rc1-19456-20/tools/crossgen\" exited with code 139. [/home/marcin/eShopOnWeb/src/Web/Web.csproj]\r\n/home/marcin/dotnet/sdk/3.0.100-rc1-014190/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Publish.targets(219,5): error NETSDK1096: Optimizing assemblies for performance failed. You can either exclude the failing assemblies from being optimized, or set the PublishReadyToRun property to false. [/home/marcin/eShopOnWeb/src/Web/Web.csproj]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26799","RelatedDescription":"Open issue \"PublishReadyToRun fails on Linux with exit code 139 when Microsoft.CodeAnalysis package referenced\" (#26799)"},{"Id":"496165267","IsPullRequest":false,"CreatedAt":"2019-09-20T06:10:54","Actor":"KRudnichenko","Number":"26796","RawContent":null,"Title":"Boxing elimination doesn't work in generic method specified with a generic struct which is specified with a reference type.","State":"open","Body":"Here is the benchmark code:\r\n```C#\r\nprivate readonly Bar<GenericStruct<int>> _bar1 = new Bar<GenericStruct<int>>();\r\nprivate readonly Bar<GenericStruct<object>> _bar2 = new Bar<GenericStruct<object>>();\r\n\r\n[Benchmark]\r\npublic void ValueTypeField() => _bar1.Outer(new GenericStruct<int>());\r\n\r\n[Benchmark]\r\npublic void ReferenceTypeField() => _bar2.Outer(new GenericStruct<object>());\r\n\r\nsealed class Bar<T>\r\n{\r\n\tint Inner(T t) => t.GetHashCode();\r\n\tpublic int Outer<TInh>(TInh x) where TInh : T => Inner(x);\r\n}\r\n\r\nstruct GenericStruct<T>\r\n{\r\n\tT Value;\r\n\tpublic override int GetHashCode() => 0;\r\n}\r\n\r\n```\r\nHere are the benchmark results:\r\n\r\nMethod | Mean | Allocated\r\n-- | -- | -- \r\nValueTypeField | 1.201 ns | -\r\nReferenceTypeField | 13.097 ns | 24 B\r\n\r\nThe IL Code of the \"Outer\" method contains the box and unbox instructions:\r\n```\r\nldarg.0         \r\nldarg.1 \r\nbox               !!0\r\nunbox.any    !0\r\ncall         instance int32 class /Bar`1<!0>::Inner(!0)\r\nret\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/26796","RelatedDescription":"Open issue \"Boxing elimination doesn't work in generic method specified with a generic struct which is specified with a reference type.\" (#26796)"},{"Id":"496101941","IsPullRequest":false,"CreatedAt":"2019-09-20T01:52:05","Actor":"VincentBu","Number":"26795","RawContent":null,"Title":"Assertion failed '!emitComp->lvaKeepAliveAndReportThis() || (offs != emitSyncThisObjOffs)'","State":"open","Body":"**Job:**\r\n[coreclr-corefx #20190919.1](https://dev.azure.com/dnceng/public/_build/results?buildId=359876)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/c0d03e35-a2dc-424b-80eb-3917e164bc90/workitems/System.Collections.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x86\r\n\r\n**Mode:**\r\nEnvironment variable COMPlus not defined\r\n\r\n**Note:**\r\nThe failure **repro** on our windows x86.\r\n\r\n**Log:**\r\n```\r\nC:\\dotnetbuild\\work\\c0d03e35-a2dc-424b-80eb-3917e164bc90\\Work\\39ef0023-c93a-4b6e-9981-a94368715178\\Exec>\"C:\\dotnetbuild\\work\\c0d03e35-a2dc-424b-80eb-3917e164bc90\\Payload\\dotnet.exe\" exec --runtimeconfig System.Collections.Tests.runtimeconfig.json xunit.console.dll System.Collections.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\c0d03e35-a2dc-424b-80eb-3917e164bc90\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Collections.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Collections.Tests (found 5102 of 6955 test cases)\r\n  Starting:    System.Collections.Tests (parallel test collections = on, max threads = 2)\r\n\r\nAssert failure(PID 2764 [0x00000acc], Thread: 3852 [0x0f0c]): Assertion failed '!emitComp->lvaKeepAliveAndReportThis() || (offs != emitSyncThisObjOffs)' in 'System.Collections.Tests.ISet_Generic_Tests`1[__Canon][System.__Canon]:Validate_UnionWith(ref,ref):this' (IL size 106)\r\n\r\n    File: f:\\workspace.3\\_work\\1\\s\\src\\jit\\emit.cpp Line: 6795\r\n    Image: C:\\dotnetbuild\\work\\c0d03e35-a2dc-424b-80eb-3917e164bc90\\Payload\\dotnet.exe\r\n\r\nexit code -1073740286\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26795","RelatedDescription":"Open issue \"Assertion failed '!emitComp->lvaKeepAliveAndReportThis() || (offs != emitSyncThisObjOffs)'\" (#26795)"},{"Id":"496096818","IsPullRequest":true,"CreatedAt":"2019-09-20T01:29:06","Actor":"davidwrighton","Number":"26793","RawContent":null,"Title":"Add switch to crossgen2 to ignore compile failures","State":"open","Body":"- the default failure behavior is good for most cases, but it is a problem when not actively working on codegen issues\r\n- Method name printing is a risky process as it may throw. This changeset implements a ToString algorithm which attempts to print something even in the presence of errors","Url":"https://github.com/dotnet/coreclr/pull/26793","RelatedDescription":"Open PR \"Add switch to crossgen2 to ignore compile failures\" (#26793)"},{"Id":"496096653","IsPullRequest":true,"CreatedAt":"2019-09-20T01:28:23","Actor":"davidwrighton","Number":"26792","RawContent":null,"Title":"Use netcoreapp3.0 for building crossgen2","State":"open","Body":"- Enables better debugging support\r\n- Enables use of netcoreapp3.0 surface area in crossgen2\r\n- Should improve performance","Url":"https://github.com/dotnet/coreclr/pull/26792","RelatedDescription":"Open PR \"Use netcoreapp3.0 for building crossgen2\" (#26792)"},{"Id":"495760520","IsPullRequest":true,"CreatedAt":"2019-09-19T22:58:28","Actor":"dotnet-maestro[bot]","Number":"26785","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190918.14\r\n- **Date Produced**: 9/19/2019 4:54 AM\r\n- **Commit**: 19b304f7815894b13cb61e87e1c9eac49a474c7e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19468.14\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha1.19468.14\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26785","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#26785)"},{"Id":"496048979","IsPullRequest":false,"CreatedAt":"2019-09-19T22:07:16","Actor":"lsvMoretti","Number":"26791","RawContent":null,"Title":"Issue when using Entity Framework","State":"open","Body":"Hey, sorry this is my first real issue to post anywhere.\r\n\r\nI have Pomelo Entity Framework MySQL and I have also tried MySql.Data.EntityFrameworkCore, both stable and pre-release versions, how ever using the latest .net core SDK, I have an issue when doing anything with Entity Framework.\r\n\r\nMy Code:\r\n\r\n```\r\ntry\r\n            {\r\n                Console.WriteLine(\"Before Context\");\r\n                using Context context = new Context();\r\n                Console.WriteLine(\"After Context\");\r\n                List<Models.Vehicle> vehicles = context.Vehicle.Where(x => x.Spawned).ToList();\r\n\r\n                Console.WriteLine($\"Resetting {vehicles.Count} Vehicle Spawn Status\");\r\n\r\n                foreach (Models.Vehicle vehicle in vehicles)\r\n                {\r\n                    vehicle.Spawned = false;\r\n                    context.SaveChanges();\r\n                }\r\n\r\n                Console.WriteLine(\"Completed resetting vehicle spawn statuses\");\r\n                context.Dispose();\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine(e);\r\n                throw;\r\n            }\r\n```\r\n\r\nThe error\r\n\r\n```\r\nSystem.IO.FileLoadException: Could not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=2.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. An operation is not legal in the current state. (0x80131509)\r\nFile name: 'Microsoft.Extensions.Configuration.Abstractions, Version=2.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\r\n ---> System.InvalidOperationException: AssemblyLoadContext is unloading or was already unloaded.\r\n   at System.Runtime.Loader.AssemblyLoadContext.VerifyIsAlive()\r\n   at System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(String assemblyPath)\r\n   at AltV.Net.Host.ResourceAssemblyLoadContext.Load(AssemblyName assemblyName)\r\n   at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingLoad(AssemblyName assemblyName)\r\n   at System.Runtime.Loader.AssemblyLoadContext.Resolve(IntPtr gchManagedAssemblyLoadContext, AssemblyName assemblyName)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.NamedConnectionStringResolverBase.ResolveConnectionString(String connectionString)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection..ctor(RelationalConnectionDependencies dependencies)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()\r\n   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()\r\n   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()\r\n   at Microsoft.EntityFrameworkCore.DbContext.get_Model()\r\n   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()\r\n   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()\r\n   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()\r\n   at System.Linq.Queryable.Where[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Server.Vehicle.LoadVehicle.ResetAllVehiclesSpawnStatus() in F:\\Andrew\\Documents\\Los Santos V\\Development\\Github\\Los-Santos-V\\Server\\Vehicle\\LoadVehicle.cs:line 21\r\n```\r\nLine 21 is the .ToList line.","Url":"https://github.com/dotnet/coreclr/issues/26791","RelatedDescription":"Open issue \"Issue when using Entity Framework\" (#26791)"},{"Id":"495986314","IsPullRequest":false,"CreatedAt":"2019-09-19T19:30:47","Actor":"davmason","Number":"26790","RawContent":null,"Title":"Remove runtime suspension when updating active IL version in ReJIT","State":"open","Body":"Right now we suspend the runtime when updating the active IL version. I believe this was only required for jumpstamps, since we had to stop the runtime to make sure no threads were going to have a race in executing the prolog of a jitted method. #26740 makes it so ReJIT no longer uses jumpstamps, it should be safe to stop suspending the runtime.","Url":"https://github.com/dotnet/coreclr/issues/26790","RelatedDescription":"Open issue \"Remove runtime suspension when updating active IL version in ReJIT\" (#26790)"},{"Id":"495920418","IsPullRequest":true,"CreatedAt":"2019-09-19T19:27:54","Actor":"sbomer","Number":"26787","RawContent":null,"Title":"Don't try to publish build logs in finalize-publish","State":"closed","Body":"After https://github.com/dotnet/coreclr/pull/26768, the dotnet/versions update succeeds, but the official build still fails on a subsequent step when it tries to publish missing build logs: https://dev.azure.com/dnceng/internal/_build/results?buildId=359539&view=logs&s=6884a131-87da-5381-61f3-d7acc3b91d76&j=47825067-ac8c-572d-1871-7f52798b9d86\r\n\r\nThis should fix the problem. I could be missing something, but it looks like this only ever published the binclash log produced by the old update versions script, which I don't think we needed anyway. @dotnet/coreclr-infra PTAL.","Url":"https://github.com/dotnet/coreclr/pull/26787","RelatedDescription":"Closed or merged PR \"Don't try to publish build logs in finalize-publish\" (#26787)"},{"Id":"495982707","IsPullRequest":true,"CreatedAt":"2019-09-19T19:22:07","Actor":"kbaladurin","Number":"26789","RawContent":null,"Title":"[Linux/x86] Fix OOPStackUnwinderX86::Unwind","State":"open","Body":"We cannot set `pCurrentContextPointers` to `pContextPointers` before unwinding because `pContextRecord` is zeroed. Copy non zero pointers from `pContextPointers` to `pCurrentContextPointers` instead of it.\r\n\r\nThis patch fixes https://github.com/dotnet/coreclr/issues/26788","Url":"https://github.com/dotnet/coreclr/pull/26789","RelatedDescription":"Open PR \"[Linux/x86] Fix OOPStackUnwinderX86::Unwind\" (#26789)"},{"Id":"495978722","IsPullRequest":false,"CreatedAt":"2019-09-19T19:12:36","Actor":"kbaladurin","Number":"26788","RawContent":null,"Title":"[Linux/x86] Crash during stack unwinding","State":"open","Body":"The following example crashes on Linux/x86:\r\n```cs\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Threading;\r\n\r\nnamespace crashx86\r\n{\r\n    class Program\r\n    {\r\n        [MethodImpl(MethodImplOptions.NoInlining)]\r\n        static double N(double a)\r\n        {\r\n            return a + 0.1;\r\n        }\r\n\r\n        static void F1()\r\n        {\r\n            Console.WriteLine(\"F\");\r\n            double a = 1;\r\n            while (a != 0.1)\r\n            {\r\n                a *= N(a);\r\n                a += N(a);\r\n            }\r\n        }\r\n\r\n        static void F2()\r\n        {\r\n            while (true)\r\n            {\r\n                GC.Collect();\r\n                Thread.Sleep(1);\r\n            }\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            Thread t1 = new Thread(new ThreadStart(F1));\r\n            Thread t2 = new Thread(new ThreadStart(F2));\r\n            \r\n            t1.Start();\r\n            t2.Start();\r\n\r\n            t1.Join();\r\n            t2.Join();\r\n        }\r\n    }\r\n}\r\n```\r\n```\r\n$ gdb --args ./corerun /home/kbaladurin/dotnet/examples/crashx86/bin/Release/netcoreapp2.2/crashx86.dll\r\n...\r\nThread 8 \"corerun\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0xf0effb40 (LWP 7028)]\r\n0xf6bf56be in UnwindEbpDoubleAlignFrame (pContext=0xf0efc968, pCodeInfo=0xf0efc740, info=0xf0efc768, table=0xf2514419 \"\\377\", \r\n    methodStart=0xf25cb578 \"U\\213\\354\\203\\354\\030\\305\\370w\\213\\r\\330\\020\\340\\363\\350\\034\\353\\377\\377\\305\\373\\020\\005\\370\\265\\\\\\362\\203\\354\\b\\305\\373\\021E\\370\\203\\354\\b\\305\\373\\021\\004$\\350O\\006:\\003\\335]\\360\\203\\304\\020\\305\\373\\020E\\360\\305\\373YE\\370\\203\\354\\b\\305\\373\\021E\\370\\203\\354\\b\\305\\373\\021\\004$\\350*\\006:\\003\\335]\\360\\203\\304\\020\\305\\373\\020E\\360\\305\\373XE\\370\\305\\371.\\005\", curOffs=65, flags=8, pUnwindInfo=0x0) at /opt/code/src/vm/eetwain.cpp:3877\r\n3877\t    const unsigned curEBP = *pContext->GetEbpLocation();\r\n(gdb) bt\r\n#0  0xf6bf56be in UnwindEbpDoubleAlignFrame (pContext=0xf0efc968, pCodeInfo=0xf0efc740, info=0xf0efc768, table=0xf2514419 \"\\377\", \r\n    methodStart=0xf25cb578 \"U\\213\\354\\203\\354\\030\\305\\370w\\213\\r\\330\\020\\340\\363\\350\\034\\353\\377\\377\\305\\373\\020\\005\\370\\265\\\\\\362\\203\\354\\b\\305\\373\\021E\\370\\203\\354\\b\\305\\373\\021\\004$\\350O\\006:\\003\\335]\\360\\203\\304\\020\\305\\373\\020E\\360\\305\\373YE\\370\\203\\354\\b\\305\\373\\021E\\370\\203\\354\\b\\305\\373\\021\\004$\\350*\\006:\\003\\335]\\360\\203\\304\\020\\305\\373\\020E\\360\\305\\373XE\\370\\305\\371.\\005\", curOffs=65, flags=8, pUnwindInfo=0x0) at /opt/code/src/vm/eetwain.cpp:3877\r\n#1  0xf6bf5cd5 in UnwindStackFrame (pContext=0xf0efc968, pCodeInfo=0xf0efc740, flags=8, pState=0xf0efc760, pUnwindInfo=0x0) at /opt/code/src/vm/eetwain.cpp:4102\r\n#2  0xf73f8e33 in OOPStackUnwinderX86::Unwind (pContextRecord=0xf0efd128, pContextPointers=0xf0efd100) at /opt/code/src/unwinder/i386/unwinder_i386.cpp:33\r\n#3  0xf73f90ef in OOPStackUnwinderX86::VirtualUnwind (HandlerType=1, ImageBase=4066107408, ControlPc=4066162105, FunctionEntry=0xf25143fc, ContextRecord=0xf0efd128, HandlerData=0xf0efd124, EstablisherFrame=0xf0efd120, ContextPointers=0xf0efd100, HandlerRoutine=0xf0efd054)\r\n    at /opt/code/src/unwinder/i386/unwinder_i386.cpp:120\r\n#4  0xf73f92c2 in RtlVirtualUnwind (HandlerType=1, ImageBase=4066107408, ControlPc=4066162105, FunctionEntry=0xf25143fc, ContextRecord=0xf0efd128, HandlerData=0xf0efd124, EstablisherFrame=0xf0efd120, ContextPointers=0xf0efd100) at /opt/code/src/unwinder/i386/unwinder_i386.cpp:206\r\n#5  0xf6c14a3f in IsIPInEpilog (pContextToCheck=0xf0efdb98, pCodeInfo=0xf0efd4d0, pSafeToInjectThreadAbort=0xf0efd494) at /opt/code/src/vm/excep.cpp:7782\r\n#6  0xf70103bb in HandleGCSuspensionForInterruptedThread (interruptedContext=0xf0efdb98) at /opt/code/src/vm/threadsuspend.cpp:6728\r\n#7  0xf75b1d00 in inject_activation_handler (code=34, siginfo=0xf0efde8c, context=0xf0efdf0c) at /opt/code/src/pal/src/exception/signal.cpp:650\r\n#8  <signal handler called>\r\n#9  0xf25cb5b9 in ?? ()\r\n#10 0xf25caf93 in ?? ()\r\n#11 0xf25cadec in ?? ()\r\n#12 0xf25cac49 in ?? ()\r\n#13 0xf7084fe1 in CallDescrWorkerInternal () at /opt/code/src/vm/i386/asmhelpers.S:304\r\n#14 0xf6e00487 in CallDescrWorker (pCallDescrData=0xf0efeb88) at /opt/code/src/vm/callhelpers.cpp:126\r\n#15 0xf6e0024a in CallDescrWorkerWithHandler (pCallDescrData=0xf0efeb88, fCriticalCall=0) at /opt/code/src/vm/callhelpers.cpp:70\r\n#16 0xf6e013c6 in MethodDescCallSite::CallTargetWorker (this=0xf0efed10, pArguments=0xf0efed80, pReturnValue=0x0, cbReturnValue=0) at /opt/code/src/vm/callhelpers.cpp:546\r\n#17 0xf6bd9dca in MethodDescCallSite::Call (this=0xf0efed10, pArguments=0xf0efed80) at /opt/code/src/vm/callhelpers.h:459\r\n#18 0xf6e198a2 in ThreadNative::KickOffThread_Worker (ptr=0xf0eff208) at /opt/code/src/vm/comsynchronizable.cpp:246\r\n#19 0xf6d8439c in ManagedThreadBase_DispatchInner (pCallState=0xf0eff048) at /opt/code/src/vm/threads.cpp:7434\r\n#20 0xf6d83a99 in ManagedThreadBase_DispatchMiddle (pCallState=0xf0eff048) at /opt/code/src/vm/threads.cpp:7478\r\n#21 0xf6d83820 in ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::$_6::operator()(ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::TryArgs*) const::{lambda(Param*)#1}::operator()(Param*) const (this=0xf0efef70, pParam=0xf0efeff8) at /opt/code/src/vm/threads.cpp:7638\r\n#22 0xf6d835f2 in ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::$_6::operator()(ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::TryArgs*) const (this=0xf0efefe0, pArgs=0xf0efefe8) at /opt/code/src/vm/threads.cpp:7640\r\n#23 0xf6d7f92b in ManagedThreadBase_DispatchOuter (pCallState=0xf0eff048) at /opt/code/src/vm/threads.cpp:7666\r\n#24 0xf6d7facd in ManagedThreadBase_FullTransition (pTarget=0xf6e192f0 <ThreadNative::KickOffThread_Worker(void*)>, args=0xf0eff208, filterType=ManagedThread) at /opt/code/src/vm/threads.cpp:7686\r\n#25 0xf6d7fa55 in ManagedThreadBase::KickOff (pTarget=0xf6e192f0 <ThreadNative::KickOffThread_Worker(void*)>, args=0xf0eff208) at /opt/code/src/vm/threads.cpp:7721\r\n#26 0xf6e1a606 in ThreadNative::KickOffThread (pass=0x56639758) at /opt/code/src/vm/comsynchronizable.cpp:360\r\n#27 0xf6d749e0 in Thread::intermediateThreadProc (arg=0x56639798) at /opt/code/src/vm/threads.cpp:2100\r\n#28 0xf76870b0 in CorUnix::CPalThread::ThreadEntry (pvParam=0x56661150) at /opt/code/src/pal/src/thread/thread.cpp:1696\r\n#29 0xf7f903bd in start_thread () from /lib/i386-linux-gnu/libpthread.so.0\r\n#30 0xf7c00e16 in clone () from /lib/i386-linux-gnu/libc.so.6\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26788","RelatedDescription":"Open issue \"[Linux/x86] Crash during stack unwinding\" (#26788)"},{"Id":"495767417","IsPullRequest":false,"CreatedAt":"2019-09-19T12:28:26","Actor":"gbalykov","Number":"26786","RawContent":null,"Title":"Tizen build fail","State":"open","Body":"After #26108 we get next output during build of CoreCLR\r\n```\r\nPublishing crossgen2 for tizen.5.5.0-armel\r\nRunning init-dotnet.sh\r\nInstalling dotnet using Arcade...\r\nRunning: /home/z/Dev/coreclr_my_2/.dotnet/dotnet publish --self-contained -r tizen.5.5.0-armel -c Release -o /home/z/Dev/coreclr_my_2/bin/Product/Linux.armel.Release/crossgen2 /home/z/Dev/coreclr_my_2/src/tools/crossgen2/crossgen2/crossgen2.csproj\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19329-01+d31fdbf01 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 323.82 ms for /home/z/Dev/coreclr_my_2/src/tools/crossgen2/ILCompiler.DependencyAnalysisFramework/ILCompiler.DependencyAnalysisFramework.csproj.\r\n  Restore completed in 323.82 ms for /home/z/Dev/coreclr_my_2/src/tools/crossgen2/ILCompiler.TypeSystem.ReadyToRun/ILCompiler.TypeSystem.ReadyToRun.csproj.\r\n  Restore completed in 323.83 ms for /home/z/Dev/coreclr_my_2/src/tools/crossgen2/ILCompiler.ReadyToRun/ILCompiler.ReadyToRun.csproj.\r\n  Restore completed in 1.07 min for /home/z/Dev/coreclr_my_2/src/tools/crossgen2/crossgen2/crossgen2.csproj.\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n/home/z/Dev/coreclr_my_2/src/tools/crossgen2/crossgen2/crossgen2.csproj : error : NETSDK1056: Project is targeting runtime 'tizen.5.5.0-armel' but did not resolve any runtime-specific packages. This runtime may not be supported by the target framework.\r\nERROR: An error occurred in /home/z/Dev/coreclr_my_2/.dotnet/dotnet publish --self-contained -r tizen.5.5.0-armel -c Release -o /home/z/Dev/coreclr_my_2/bin/Product/Linux.armel.Release/crossgen2 /home/z/Dev/coreclr_my_2/src/tools/crossgen2/crossgen2/crossgen2.csproj. Check logs under /home/z/Dev/coreclr_my_2.\r\nSkipping generating native image\r\nRepo successfully built.\r\nProduct binaries are available at /home/z/Dev/coreclr_my_2/bin/Product/Linux.armel.Release\r\n```\r\nBuild command with Tizen rootfs:\r\n```\r\nROOTFS_DIR=/home/z/Dev/coreclr_my_2/cross/rootfs/armel/ ./build.sh cross -armel -Release -clang5.0 -skipgenerateversion -skipnuget -skipcrossgen verbose\r\n```\r\n\r\nWhere is the new place to add Tizen rids?\r\n\r\nAlso, built-test.sh fails with next output:\r\n```\r\nROOTFS_DIR=/home/z/Dev/coreclr_my_2/cross/rootfs/armel/ ./build-test.sh release armel cross clang5.0 priority1\r\n```\r\n```\r\n__DistroRid: tizen.5.5.0-armel\r\n__RuntimeId: tizen.5.5.0-armel\r\nBuilding Tests...\r\n__BuildOS: Linux\r\n__BuildArch: armel\r\n__BuildType: Release\r\n__TestIntermediatesDir: /home/z/Dev/coreclr_my_2/bin/tests/obj/Linux.armel.Release\r\n__NativeTestIntermediatesDir: /home/z/Dev/coreclr_my_2/bin/tests/obj/Linux.armel.Release/Native\r\n__ManagedTestIntermediatesDir: /home/z/Dev/coreclr_my_2/bin/tests/obj/Linux.armel.Release/Managed\r\nCreating TestBinDir: /home/z/Dev/coreclr_my_2/bin/tests/Linux.armel.Release\r\nCreating LogsDir: /home/z/Dev/coreclr_my_2/bin/Logs\r\nCreating MsbuildDebugLogsDir: /home/z/Dev/coreclr_my_2/bin/Logs/MsbuildDebugLogs\r\nBuilding step 'Restore product binaries (build tests)' via \"/home/z/Dev/coreclr_my_2/eng/common/msbuild.sh\"  --warnAsError false /home/z/Dev/coreclr_my_2/tests/build.proj /p:RestoreDefaultOptimizationDataPackage=false /p:PortableBuild=true /p:UsePartialNGENOptimization=false /maxcpucount \"/flp:Verbosity=normal;LogFile=/home/z/Dev/coreclr_my_2/bin/Logs/Restore_Product.Linux.armel.Release.log\" \"/flp1:WarningsOnly;LogFile=/home/z/Dev/coreclr_my_2/bin/Logs/Restore_Product.Linux.armel.Release.wrn\" \"/flp2:ErrorsOnly;LogFile=/home/z/Dev/coreclr_my_2/bin/Logs/Restore_Product.Linux.armel.Release.err\" /t:BatchRestorePackages /p:__BuildArch=armel /p:PortableBuild=false /p:__BuildType=Release /p:__BuildOS=Linux /nodeReuse:false  /p:CLRTestPriorityToBuild=1\r\n  [15:00:39.41] Restoring all packages...\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: Unable to find package System.Runtime.CompilerServices.Unsafe with version (>= 5.0.0-alpha1.19467.6) [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 2274 version(s) in dotnet-core [ Nearest version: 5.0.0-alpha1.19460.21 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 1305 version(s) in myget.org dotnet-core [ Nearest version: 4.6.0-preview4.19164.7 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 25 version(s) in nuget.org [ Nearest version: 4.6.0-preview9.19421.4 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in dotnet-coreclr [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: Unable to find package Microsoft.NETCore.Platforms with version (>= 5.0.0-alpha1.19467.6) [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 2329 version(s) in dotnet-core [ Nearest version: 5.0.0-alpha1.19460.21 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 1513 version(s) in myget.org dotnet-core [ Nearest version: 3.0.0-preview4.19164.7 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 47 version(s) in nuget.org [ Nearest version: 3.0.0-preview9.19421.4 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in dotnet-coreclr [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: Unable to find package Microsoft.Win32.Registry with version (>= 5.0.0-alpha1.19467.6) [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 2271 version(s) in dotnet-core [ Nearest version: 5.0.0-alpha1.19460.21 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 1234 version(s) in myget.org dotnet-core [ Nearest version: 4.6.0-preview4.19164.7 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 33 version(s) in nuget.org [ Nearest version: 4.6.0-preview9.19421.4 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in dotnet-coreclr [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n    Restore failed in 17.69 sec for /home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj.\r\n/home/z/Dev/coreclr_my_2/tests/build.proj(65,5): error MSB3073: The command \"/home/z/Dev/coreclr_my_2/tests/../.dotnet/dotnet restore -r tizen.5.5.0-armel /home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj  /p:SetTFMForRestore=true\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: Unable to find package System.Runtime.CompilerServices.Unsafe with version (>= 5.0.0-alpha1.19467.6) [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 2274 version(s) in dotnet-core [ Nearest version: 5.0.0-alpha1.19460.21 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 1305 version(s) in myget.org dotnet-core [ Nearest version: 4.6.0-preview4.19164.7 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 25 version(s) in nuget.org [ Nearest version: 4.6.0-preview9.19421.4 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in dotnet-coreclr [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: Unable to find package Microsoft.NETCore.Platforms with version (>= 5.0.0-alpha1.19467.6) [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 2329 version(s) in dotnet-core [ Nearest version: 5.0.0-alpha1.19460.21 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 1513 version(s) in myget.org dotnet-core [ Nearest version: 3.0.0-preview4.19164.7 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 47 version(s) in nuget.org [ Nearest version: 3.0.0-preview9.19421.4 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in dotnet-coreclr [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: Unable to find package Microsoft.Win32.Registry with version (>= 5.0.0-alpha1.19467.6) [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 2271 version(s) in dotnet-core [ Nearest version: 5.0.0-alpha1.19460.21 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 1234 version(s) in myget.org dotnet-core [ Nearest version: 4.6.0-preview4.19164.7 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 33 version(s) in nuget.org [ Nearest version: 4.6.0-preview9.19421.4 ] [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj : error NU1102: - Found 0 version(s) in dotnet-coreclr [/home/z/Dev/coreclr_my_2/tests/build.proj]\r\n/home/z/Dev/coreclr_my_2/tests/build.proj(65,5): error MSB3073: The command \"/home/z/Dev/coreclr_my_2/tests/../.dotnet/dotnet restore -r tizen.5.5.0-armel /home/z/Dev/coreclr_my_2/tests/src/Common/test_dependencies/test_dependencies.csproj  /p:SetTFMForRestore=true\" exited with code 1.\r\n    0 Warning(s)\r\n    19 Error(s)\r\n\r\nTime Elapsed 00:00:20.32\r\nBuild failed (exit code '1').\r\n```\r\nor with\r\n```\r\n.dotnet/sdk/3.0.100-preview7-012821/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(58,5): error NETSDK1083: The specified RuntimeIdentifier 'tizen.5.5.0-armel' is not recognized.\r\n```\r\n\r\ncc @o-piskunov @alpencolt ","Url":"https://github.com/dotnet/coreclr/issues/26786","RelatedDescription":"Open issue \"Tizen build fail\" (#26786)"},{"Id":"495758847","IsPullRequest":true,"CreatedAt":"2019-09-19T12:10:28","Actor":"dotnet-maestro[bot]","Number":"26784","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26784","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#26784)"},{"Id":"495602770","IsPullRequest":false,"CreatedAt":"2019-09-19T06:38:13","Actor":"scalablecory","Number":"26783","RawContent":null,"Title":"Documenting safe usage of ThreadPoolBoundHandle","State":"open","Body":"Investigation for https://github.com/dotnet/corefx/issues/39552 has raised a couple interesting questions that we can use to improve documentation.\r\n\r\n- If a `SafeHandle` is bound in a `ThreadPoolBoundHandle`, is it safe to dispose of the `SafeHandle` *before* disposing the `ThreadPoolBoundHandle` if there are outstanding completions?\r\n- If there are outstanding completions queued up pertaining to a `ThreadPoolBoundHandle` and we dispose it, what happens to those completions? Are they guaranteed to still get their callbacks ran, or should we not do this?\r\n\r\nBased on current implementation in CoreCLR, both of these things appear safe. It is not documented, though, and so usage can't depend on that. There's an additional question of CoreRT/Mono. I'd like to take a look at our current implementation state, come to agreements if there's room for any guarantees to be made based on those implementations, and as part of closing this issue add documentation.","Url":"https://github.com/dotnet/coreclr/issues/26783","RelatedDescription":"Open issue \"Documenting safe usage of ThreadPoolBoundHandle\" (#26783)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"496585413","IsPullRequest":true,"CreatedAt":"2019-09-21T00:20:37","Actor":"dotnet-maestro[bot]","Number":"12688","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 10:30 PM\r\n- **Commit**: 72b39b0473993b932a08c8fc24a8988d45b416a5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19470.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12688","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12688)"},{"Id":"496578307","IsPullRequest":true,"CreatedAt":"2019-09-20T23:05:33","Actor":"dotnet-maestro[bot]","Number":"12687","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.7\r\n- **Date Produced**: 9/20/2019 9:52 PM\r\n- **Commit**: c25b8b41ecbd8ffac08e5af2d7f337a2b51e338c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19470.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19470.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19470.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19470.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19470.7\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12687","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#12687)"},{"Id":"496554419","IsPullRequest":true,"CreatedAt":"2019-09-20T22:05:44","Actor":"dotnet-maestro[bot]","Number":"12686","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.5\r\n- **Date Produced**: 9/20/2019 8:16 PM\r\n- **Commit**: b0ea03ec3af2a9c388f718fbb4978984ab339953\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19470.5\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12686","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12686)"},{"Id":"496514144","IsPullRequest":true,"CreatedAt":"2019-09-20T20:10:38","Actor":"dotnet-maestro[bot]","Number":"12685","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.3\r\n- **Date Produced**: 9/20/2019 6:28 PM\r\n- **Commit**: 9817f3a7023df0fdda0511309010397bd5218384\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19470.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12685","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12685)"},{"Id":"496091035","IsPullRequest":false,"CreatedAt":"2019-09-20T17:06:00","Actor":"krwq","Number":"12681","RawContent":null,"Title":"Removing template from disk leaves dotnet new in unusable state","State":"closed","Body":"## Steps to reproduce\r\n\r\n- `dotnet new -i <path to any template>`\r\n- `rm -rf <path to the template>`\r\n- `dotnet new --help`\r\n\r\n## Expected  behavior\r\n\r\nWarning or actionable error message\r\n\r\n## Actual behavior\r\n\r\nError:\r\n\r\n```\r\nCould not find a part of the path '<path to the template>'.\r\n   at System.IO.Enumeration.FileSystemEnumerator`1.CreateDirectoryHandle(String path, Boolean ignoreNotFound)\r\n   at System.IO.Enumeration.FileSystemEnumerator`1..ctor(String directory, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerable`1..ctor(String directory, FindTransform transform, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerableFactory.UserEntries(String directory, String expression, EnumerationOptions options)\r\n   at System.IO.Directory.InternalEnumeratePaths(String path, String searchPattern, SearchTarget searchTarget, EnumerationOptions options)\r\n   at System.IO.Directory.EnumerateFileSystemEntries(String path, String searchPattern, SearchOption searchOption)\r\n   at Microsoft.TemplateEngine.Utils.PhysicalFileSystem.EnumerateFileSystemEntries(String directoryName, String pattern, SearchOption searchOption)\r\n   at Microsoft.TemplateEngine.Edge.Settings.Scanner.DetermineDirectoriesToScan(String baseDir)\r\n   at Microsoft.TemplateEngine.Edge.Settings.Scanner.Scan(String baseDir, Boolean allowDevInstall)\r\n   at Microsoft.TemplateEngine.Edge.Settings.TemplateCache.Scan(String installDir, IReadOnlyList`1& mountPointIdsForNewInstalls, Boolean allowDevInstall)\r\n   at Microsoft.TemplateEngine.Edge.Settings.SettingsLoader.RebuildCacheFromSettingsIfNotCurrent(Boolean forceRebuild)\r\n   at Microsoft.TemplateEngine.Cli.New3Command.ExecuteAsync()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.NewCommandInputCli.<>c__DisplayClass19_0.<<OnExecute>b__0>d.MoveNext()\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010184\r\n Commit:    c57bde4593\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.10\r\n OS Platform: Linux\r\n RID:         ubuntu.18.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100-preview-010184/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.6\r\n  Commit:  7dac9b1b51\r\n\r\n.NET Core SDKs installed:\r\n  2.1.403 [/usr/share/dotnet/sdk]\r\n  2.1.801 [/usr/share/dotnet/sdk]\r\n  2.2.401 [/usr/share/dotnet/sdk]\r\n  3.0.100-preview-010184 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nRemoving all of the ~10 entries of my app from json files under `~/.templateengine` I'm able to use it again\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12681","RelatedDescription":"Closed issue \"Removing template from disk leaves dotnet new in unusable state\" (#12681)"},{"Id":"496450588","IsPullRequest":false,"CreatedAt":"2019-09-20T16:48:39","Actor":"giordi91","Number":"12684","RawContent":null,"Title":"dotnet publish does not generate runtimeconfig.json","State":"open","Body":"## Steps to reproduce\r\nGood evening, I am trying to integrate .net core 3.0 in my engine as a scripting language. As such I want to be able to kick c# code from my c++ code. I am following the sample code for hosting. \r\nThe code, requires a runtimeconfig.json for my c# dll that I want to load and execute at runtime. Unluckily I am unable to generate such file when using dotnet publish. \r\n\r\nI have tried to both create a visual studio project which a 3.0 class library and do\r\n```\r\ndotnet new classlib\r\n```\r\nAnd upgrade the project to netcoreapp3.0. Only the deps.json file is generated, not the runtimeconfig.json one.\r\n\r\n\r\nto repdoruce:\r\n* run : dotnet new classlib\r\n* modified project file for netcoreapp3.0\r\n* run dotnet publish\r\n* check build directory\r\n\r\n## Expected  behavior\r\nI would expect the see a *.runtimeconfig.json file generated along the *.dll *.pbd *.deps.json \r\nI tried to do both self contained and not, force x64 etc. No luck. \r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc1-014190\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\nAm I doing anything wrong?\r\n\r\nBest regards\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12684","RelatedDescription":"Open issue \"dotnet publish does not generate runtimeconfig.json\" (#12684)"},{"Id":"496280317","IsPullRequest":false,"CreatedAt":"2019-09-20T10:41:02","Actor":"xianyun666","Number":"12683","RawContent":null,"Title":"PublishSingleFile,After run,system error:api-ms-win-crt-runtime-l1-1-0.dll is missing","State":"open","Body":"## Steps to reproduce\r\nRun the software\r\n## Expected  behavior\r\nRun successfully\r\n\r\n## Actual behavior\r\nsystem error,api-ms-win-crt-runtime-l1-1-0.dll is missing\r\n\r\n## Environment data\r\nwindows7 sp1 64bit\r\nInstalled KB2533623\r\nNot installed KB2999226\r\n\r\n\r\nPublishSingleFile,This error will occur.But,--self-contained does not.\r\nI also found that,Found it in my cache directory.\r\n**C:\\Users\\liu\\AppData\\Local\\Temp\\\\.net\\myApp\\hym3u0df.ls0**\r\nThere are many files whose filenames begin with 'api-ms'\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12683","RelatedDescription":"Open issue \"PublishSingleFile,After run,system error:api-ms-win-crt-runtime-l1-1-0.dll is missing\" (#12683)"},{"Id":"496150626","IsPullRequest":true,"CreatedAt":"2019-09-20T05:55:38","Actor":"dotnet-maestro[bot]","Number":"12682","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/20/2019 4:11 AM\r\n- **Commit**: 33723cfa72892e93656fe53350da35835d64c099\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19469.8\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12682","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12682)"},{"Id":"495994223","IsPullRequest":false,"CreatedAt":"2019-09-19T20:05:11","Actor":"Raviuppa","Number":"12680","RawContent":null,"Title":"Help URL for failed dotnet tool installation pointing to wrong page","State":"closed","Body":"## Steps to reproduce\r\n\r\nWhen tried to install a wrong version of tool (dotnet-sos in this case) or when the tool unable to find the relevant version of the tool, it errors out with detailed information. However, the [URL ](https://aka.ms/failure-installing-tool)that spits out is pointing to Microsoft Docs [main page](https://docs.microsoft.com/en-us/) instead to the actual tool failure assistance page.\r\n\r\nRemember, today the RC2 tool is not there yet so the error happens. Once Rc2 or RTM too chain is up for consumption, you may not see the error but the Issue here is about the URL in the error message.\r\n\r\n- Open a Command Window\r\n- Execute dotnet tool install -g dotnet-sos --version 3.0.100-rc2-014234\r\n- Check the error message for the URL.\r\n\r\n## Expected  behavior\r\nThe [help URL](https://aka.ms/failure-installing-tool) should point to the tooling doc page\r\n\r\n## Actual behavior\r\n\r\nHelp URL pointing to the Docs [main page](https://docs.microsoft.com/en-us/).\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc2-014234\r\n Commit:    118e4306cb\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc2-014234\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc2-19460-02\r\n  Commit:  4421cfb105\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc2-014234 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc2.19460.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc2-19460-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc2-19460-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12680","RelatedDescription":"Closed issue \"Help URL for failed dotnet tool installation pointing to wrong page\" (#12680)"},{"Id":"495894353","IsPullRequest":false,"CreatedAt":"2019-09-19T19:53:42","Actor":"basbossink","Number":"12679","RawContent":null,"Title":"Warning NU1603 should include the approximate best match found in the message","State":"closed","Body":"## Steps to reproduce\r\nCreate a project that depends on a pre-release package that is not available (yet).\r\n```sh\r\ndotnet restore\r\n```\r\n\r\n## Expected  behavior\r\n```sh\r\nF:\\vlow\\Support.Mail\\tst\\Support.Mail.Tests\\Divv.Vlow.Support.Mail.Tests.csproj : warning NU1603: Divv.Vlow.Support.Mail depends on Divv.Vlow.Reports.Mail (>= 2.2.0-dev.2.DIVDEV-1308.1) but Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1 was not found. An approximate best match Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.0 was resolved. [F:\\vlow\\Support.Mail\\Support.Mail.sln]\r\n```\r\n\r\nSo the feature request is to add the actual version that was resolved to the warning message, since that information is more useful than repeating the version of the package that caused the warning.\r\n\r\n## Actual behavior\r\n```sh\r\nF:\\vlow\\Support.Mail\\tst\\Support.Mail.Tests\\Divv.Vlow.Support.Mail.Tests.csproj : warning NU1603: Divv.Vlow.Support.Mail depends on Divv.Vlow.Reports.Mail (>= 2.2.0-dev.2.DIVDEV-1308.1) but Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1 was not found. An approximate best match of Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1.debug was resolved. [F:\\vlow\\Support.Mail\\Support.Mail.sln]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12679","RelatedDescription":"Closed issue \"Warning NU1603 should include the approximate best match found in the message\" (#12679)"},{"Id":"495836384","IsPullRequest":false,"CreatedAt":"2019-09-19T19:52:43","Actor":"sdcb","Number":"12678","RawContent":null,"Title":"dotnet pack nuget package don't contains update time on file attributes","State":"closed","Body":"## Steps to reproduce\r\nJust run: `dotnet pack` on a project folder.\r\n\r\n## Expected  behavior\r\nDll file on nuget package should contains update time attribute.\r\n![image](https://user-images.githubusercontent.com/1317141/65253001-79cc8000-db2c-11e9-8895-5f17b1274d87.png)\r\n\r\n## Actual behavior\r\nBut it fixed to 01/01/1980\r\n![image](https://user-images.githubusercontent.com/1317141/65252957-67eadd00-db2c-11e9-9f9a-431df324b910.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc2-014266\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n```\r\n\r\n# Note: \r\n* I'm experience this issue on just .NET Core 3.0, maybe since preview9(or earlier).\r\n* When I using `dotnet pack` on .NET Core SDK 2.2, this is all good.\r\n* If I create nuget package using msbuild.exe or by `nuget pack {projectFile} -build`, this is also all good.","Url":"https://github.com/dotnet/cli/issues/12678","RelatedDescription":"Closed issue \"dotnet pack nuget package don't contains update time on file attributes\" (#12678)"},{"Id":"495636122","IsPullRequest":false,"CreatedAt":"2019-09-19T19:51:01","Actor":"xianyun666","Number":"12675","RawContent":null,"Title":"Can I customize the publish self-contained runtimes path？","State":"closed","Body":"At present, after publish self-contained, exe sibling directory, generate a lot of dll files and folders, \r\n\r\nsuch as System.Net.dll, api-ms-won-core-console-l1-1-0.dll, vcruntime140_cor3.dll, etc.\r\n**It's such a mess.**\r\nIt is best to publish with a parameter that separates exe from the runtimes directory, \r\nsuch as `dotnet publish --self-contained --runtime-packs myruntimes`?\r\nruntime-packs parameter supports absolute and relative paths.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12675","RelatedDescription":"Closed issue \"Can I customize the publish self-contained runtimes path？\" (#12675)"},{"Id":"495755704","IsPullRequest":true,"CreatedAt":"2019-09-19T12:03:17","Actor":"dotnet-maestro[bot]","Number":"12677","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12677","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#12677)"},{"Id":"495654112","IsPullRequest":false,"CreatedAt":"2019-09-19T08:36:50","Actor":"donhuvy","Number":"12676","RawContent":null,"Title":"dotnet cli version 3.0.100-rc1-014190 still generate *.SLN with # Visual Studio 15","State":"open","Body":"## Steps to reproduce\r\nInstall .NET Core 3 RC1\r\n\r\n```\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n```\r\nthen\r\n```\r\ncd Actio\r\ndotnet new sln\r\n```\r\n\r\nResult of file `Actio.sln`\r\n\r\n```\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.26124.0\r\nMinimumVisualStudioVersion = 15.0.26124.0\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Api\", \"src\\Actio.Api\\Actio.Api.csproj\", \"{21E41DE9-5142-4D5C-96A4-CC19BCA24620}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Common\", \"src\\Actio.Common\\Actio.Common.csproj\", \"{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Services.Identity\", \"src\\Actio.Services.Identity\\Actio.Services.Identity.csproj\", \"{8830705C-FBD0-4190-8DD7-5AD513187E5E}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Services.Activities\", \"src\\Actio.Services.Activities\\Actio.Services.Activities.csproj\", \"{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\t\tRelease|x64 = Release|x64\r\n\t\tRelease|x86 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x86.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\tEndGlobalSection\r\nEndGlobal\r\n\r\n```\r\n\r\n## Expected  behavior\r\n```\r\n# Visual Studio 15\r\n```\r\nbecome to \r\n```\r\n# Visual Studio 16\r\n```\r\nand other related things.\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\nE:\\Actio>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc1-014190\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013656 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19405.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12676","RelatedDescription":"Open issue \"dotnet cli version 3.0.100-rc1-014190 still generate *.SLN with # Visual Studio 15\" (#12676)"},{"Id":"495520454","IsPullRequest":true,"CreatedAt":"2019-09-19T01:35:40","Actor":"dotnet-maestro[bot]","Number":"12674","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190918.6\r\n- **Date Produced**: 9/18/2019 11:51 PM\r\n- **Commit**: 30c4a25a9a675d632b6e7180e53a87e6fcacb909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19468.6\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12674","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12674)"},{"Id":"495462077","IsPullRequest":false,"CreatedAt":"2019-09-18T21:23:19","Actor":"CamSoper","Number":"12673","RawContent":null,"Title":"Launching with `dotnet run &` fails to run in background on Linux","State":"open","Body":"This might be a regression of https://github.com/dotnet/cli/issues/6216.\r\n\r\n## Steps to reproduce\r\nFrom bash:\r\n\r\n1. `mkdir temp && cd temp`\r\n1. `dotnet new api`\r\n1. `dotnet run &`  Note the job ID. \r\n1. `jobs`\r\n\r\n## Expected  behavior\r\nNew job is listed in *Running* state. App is running in background and responds to `curl` commands.\r\n\r\n## Actual behavior\r\nNew job is listed is *Stopped* state. App is not running in background.\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /home/cam/.dotnet/sdk/3.0.100-rc1-014190/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-rc1-014190 [/home/cam/.dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [/home/cam/.dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [/home/cam/.dotnet/shared/Microsoft.NETCore.App]\r\n\r\ncc: @scottaddie \r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12673","RelatedDescription":"Open issue \"Launching with `dotnet run &` fails to run in background on Linux\" (#12673)"},{"Id":"495375424","IsPullRequest":true,"CreatedAt":"2019-09-18T20:52:02","Actor":"dotnet-maestro[bot]","Number":"12672","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190918.2\r\n- **Date Produced**: 9/18/2019 7:07 PM\r\n- **Commit**: e6f9309bae0f8242045b80a50f65513da975906d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19468.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19468.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19468.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19468.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19468.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12672","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12672)"},{"Id":"495016283","IsPullRequest":true,"CreatedAt":"2019-09-18T06:34:44","Actor":"dotnet-maestro[bot]","Number":"12671","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190917.3\r\n- **Date Produced**: 9/18/2019 6:14 AM\r\n- **Commit**: b3a343bf8ed65f5208c5bb86c632856c5d107b1d\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-rc2.19467.3\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12671","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12671)"},{"Id":"494998622","IsPullRequest":true,"CreatedAt":"2019-09-18T06:10:39","Actor":"dotnet-maestro[bot]","Number":"12670","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190917.8\r\n- **Date Produced**: 9/18/2019 4:19 AM\r\n- **Commit**: 708eb333f08df7e339a3989765a068d65a1232bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19467.8\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19467.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19467.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19467.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19467.8\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12670","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12670)"},{"Id":"494960175","IsPullRequest":true,"CreatedAt":"2019-09-18T03:35:39","Actor":"dotnet-maestro[bot]","Number":"12669","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190917.7\r\n- **Date Produced**: 9/18/2019 1:52 AM\r\n- **Commit**: 1e19b8c0d63fe23da7bdd9625ca51c6bd2d1bab2\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19467.7\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19467.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19467.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19467.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19467.7\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12669","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12669)"},{"Id":"494892502","IsPullRequest":true,"CreatedAt":"2019-09-18T00:47:06","Actor":"dotnet-maestro[bot]","Number":"12667","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190917.1\r\n- **Date Produced**: 9/17/2019 9:41 PM\r\n- **Commit**: c63dfd832a0545b99672738d4f48544a09f4faf9\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-rc2.19467.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12667","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12667)"},{"Id":"494906018","IsPullRequest":true,"CreatedAt":"2019-09-18T00:39:30","Actor":"dotnet-maestro[bot]","Number":"12668","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7d6fa2f4-b9c4-4071-7865-08d72198640e)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.0.6251\r\n- **Date Produced**: 9/17/2019 11:35 PM\r\n- **Commit**: b75150f2f4127a77a166c9552845e86fb24a3282\r\n- **Branch**: refs/heads/release-5.3.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.0-rtm.6251\r\n\r\n[marker]: <> (End:7d6fa2f4-b9c4-4071-7865-08d72198640e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12668","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from nuget/nuget.client\" (#12668)"},{"Id":"494851767","IsPullRequest":true,"CreatedAt":"2019-09-17T21:40:40","Actor":"dotnet-maestro[bot]","Number":"12666","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190917.5\r\n- **Date Produced**: 9/17/2019 7:47 PM\r\n- **Commit**: 708eb333f08df7e339a3989765a068d65a1232bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19467.5\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19467.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19467.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19467.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19467.5\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12666","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12666)"},{"Id":"494822899","IsPullRequest":false,"CreatedAt":"2019-09-17T19:59:27","Actor":"andy-ms","Number":"12665","RawContent":null,"Title":"Building a project named `cs` with a PackageReference on Ubuntu fails with \"Could not copy\"","State":"open","Body":"## Steps to reproduce\r\n\r\n* `git clone https://github.com/andy-ms/dotnet-bug-repro.git`\r\n* `dotnet build`\r\n\r\n\r\n## Expected  behavior\r\n\r\nIt should succeed.\r\n\r\n\r\n## Actual behavior\r\n\r\n* One of these three things may happen:\r\n\r\n1) It succeeds.\r\n   In this case run `git clean -xfd` and try again.\r\n\r\n2) It may fail with one error.\r\n`home/anhans/bin/dotnet/sdk/3.0.100-preview8-013656/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3024: Could not copy the file \"/home/anhans/work/sample/cs/obj/Debug/netcoreapp3.0/cs\" to the destination file \"bin/Debug/netcoreapp3.0/cs\", because the destination is a folder instead of a file. To copy the source file into a folder, consider using the DestinationFolder parameter instead of DestinationFiles. [/home/anhans/work/sample/cs/cs.csproj]`\r\n\r\n3) It may give en error on each individual file it tries to copy.\r\n`/home/anhans/bin/dotnet/sdk/3.0.100-preview8-013656/Microsoft.Common.CurrentVersion.targets(4377,5): warning MSB3026: Could not copy \"/home/anhans/.nuget/packages/microsoft.codeanalysis.visualbasic/3.2.1/lib/netstandard2.0/cs/Microsoft.CodeAnalysis.VisualBasic.resources.dll\" to \"bin/Debug/netcoreapp3.0/cs/Microsoft.CodeAnalysis.VisualBasic.resources.dll\". Beginning retry 1 in 1000ms. The file '/home/anhans/work/sample/cs/bin/Debug/netcoreapp3.0/cs' already exists.  [/home/anhans/work/sample/cs/cs.csproj]`\r\n\r\nThis error message is repeated many times, with the name of the file being copied changing.\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /home/anhans/bin/dotnet/sdk/3.0.100-rc1-014190/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-rc1-014190 [/home/anhans/bin/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [/home/anhans/bin/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [/home/anhans/bin/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/12665","RelatedDescription":"Open issue \"Building a project named `cs` with a PackageReference on Ubuntu fails with \"Could not copy\"\" (#12665)"},{"Id":"494764583","IsPullRequest":true,"CreatedAt":"2019-09-17T18:20:38","Actor":"dotnet-maestro[bot]","Number":"12664","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190917.1\r\n- **Date Produced**: 9/17/2019 4:29 PM\r\n- **Commit**: 9042fe6c81aa3b47f58ccd94ff02e42f9f7a4e46\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19467.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19467.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19467.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19467.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19467.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12664","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12664)"},{"Id":"494229618","IsPullRequest":false,"CreatedAt":"2019-09-16T19:19:27","Actor":"sebastienros","Number":"12663","RawContent":null,"Title":"Latest version of 3.0.xx/release branch cannot be found","State":"open","Body":"The latest stable version of the sdk can be found here:\r\nhttps://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/latest.version\r\n\r\n```\r\n02df19ceac5d194d71b04c2823b9b02ced542c44\r\n3.0.100-rc2-014261\r\n```\r\n\r\nHowever when using this version with `dotnet-install` it can't be found. I waited a few hours in case it would be a transient issue but it's still occuring.\r\n\r\n```\r\n[12:14:50.094] dotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-rc2-014261/dotnet-sdk-3.0.100-rc2-014261-win-x64.zip\r\n[12:14:52.274] dotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-rc2-014261/dotnet-sdk-3.0.100-rc2-014261-win-x64.zip\r\n[12:14:52.276] dotnet-install: Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-rc2-014261/dotnet-dev-win-x64.3.0.100-rc2-014261.zip\r\n[12:14:54.384] dotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-rc2-014261/dotnet-dev-win-x64.3.0.100-rc2-014261.zip\r\n[12:14:54.434] Could not find/download: \".NET Core SDK\" with version = 3.0.100-rc2-014261\r\n[12:14:54.434] Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support\r\n[12:14:54.434] At C:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\t1usq3ss.20k\\dotnet-install.ps1:633 char:5\r\n[12:14:54.434] +     throw \"Could not find/download: `\"$assetName`\" with version = $Sp ...\r\n[12:14:54.434] +     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n[12:14:54.434]     + CategoryInfo          : OperationStopped: (Could not find/...ET Core support:String) [], RuntimeException\r\n[12:14:54.434]     + FullyQualifiedErrorId : Could not find/download: \".NET Core SDK\" with version = 3.0.100-rc2-014261\r\n[12:14:54.434] Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support\r\n```","Url":"https://github.com/dotnet/cli/issues/12663","RelatedDescription":"Open issue \"Latest version of 3.0.xx/release branch cannot be found\" (#12663)"},{"Id":"494185556","IsPullRequest":true,"CreatedAt":"2019-09-16T18:15:40","Actor":"dotnet-maestro[bot]","Number":"12662","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190916.2\r\n- **Date Produced**: 9/16/2019 4:19 PM\r\n- **Commit**: 9042fe6c81aa3b47f58ccd94ff02e42f9f7a4e46\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19466.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19466.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19466.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19466.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19466.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12662","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12662)"},{"Id":"494156338","IsPullRequest":true,"CreatedAt":"2019-09-16T17:09:28","Actor":"dotnet-maestro[bot]","Number":"12661","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190914.2\r\n- **Date Produced**: 9/14/2019 3:27 PM\r\n- **Commit**: b29bcb7f23534b84d7a82fd7e9b0237c3cbfd44d\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19464.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12661","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12661)"},{"Id":"494057252","IsPullRequest":false,"CreatedAt":"2019-09-16T13:48:41","Actor":"lauxjpn","Number":"12660","RawContent":null,"Title":"Improve current progress output of dotnet test","State":"closed","Body":"Calling `dotnet test` on a large test suit leaves you guessing, how many tests are left to be run.\r\n\r\nInstead of just outputting `Test run in progress.\", a small summary of the passed, failed, skipped and remaining test should be displayed.","Url":"https://github.com/dotnet/cli/issues/12660","RelatedDescription":"Closed issue \"Improve current progress output of dotnet test\" (#12660)"},{"Id":"493889132","IsPullRequest":true,"CreatedAt":"2019-09-16T07:30:18","Actor":"dotnet-maestro[bot]","Number":"12659","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190920.14\r\n- **Date Produced**: 9/21/2019 12:13 AM\r\n- **Commit**: f21b00aa458b843619cfc7c47a42803ffd33ea73\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview1.19470.14\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12659","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12659)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"496322557","IsPullRequest":true,"CreatedAt":"2019-09-20T12:34:19","Actor":"dotnet-maestro[bot]","Number":"1558","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.1\r\n- **Date Produced**: 9/20/2019 10:21 AM\r\n- **Commit**: ce5dfbb9ad62f95885748c7e95ebcd3ca453d1bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1558","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1558)"},{"Id":"496312709","IsPullRequest":true,"CreatedAt":"2019-09-20T12:11:37","Actor":"dotnet-maestro[bot]","Number":"1557","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1557","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1557)"},{"Id":"496006418","IsPullRequest":true,"CreatedAt":"2019-09-19T20:28:51","Actor":"dotnet-maestro[bot]","Number":"1556","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.4\r\n- **Date Produced**: 9/19/2019 6:33 PM\r\n- **Commit**: 19e994876c2c29b01b78cc7a2a7019eb7dfcbd54\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1556","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1556)"},{"Id":"495468017","IsPullRequest":false,"CreatedAt":"2019-09-19T14:08:45","Actor":"mstoffel-infraserv","Number":"1553","RawContent":null,"Title":"Regex Match Hangs forever","State":"closed","Body":"During processing with one of our applications we ran into an issue with Regex Match method hanging forever with a specific regular expression and specific text. See attached code for details.\r\n[BadRegex.zip](https://github.com/dotnet/standard/files/3628478/BadRegex.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1553","RelatedDescription":"Closed issue \"Regex Match Hangs forever\" (#1553)"},{"Id":"495764912","IsPullRequest":true,"CreatedAt":"2019-09-19T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1555","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190918.14\r\n- **Date Produced**: 9/19/2019 4:54 AM\r\n- **Commit**: 19b304f7815894b13cb61e87e1c9eac49a474c7e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19468.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1555","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1555)"},{"Id":"495754976","IsPullRequest":true,"CreatedAt":"2019-09-19T12:21:51","Actor":"dotnet-maestro[bot]","Number":"1554","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190918.2\r\n- **Date Produced**: 9/18/2019 8:56 PM\r\n- **Commit**: a28ee518026d2c5d477472f44d391cf9379fc7cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19468.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1554","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1554)"},{"Id":"495184946","IsPullRequest":true,"CreatedAt":"2019-09-18T12:19:39","Actor":"dotnet-maestro[bot]","Number":"1552","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190917.6\r\n- **Date Produced**: 9/18/2019 3:17 AM\r\n- **Commit**: 4ca1feeeb484e8a7089ce8a9d377703ad5b8a53e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19467.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1552","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1552)"},{"Id":"494584582","IsPullRequest":true,"CreatedAt":"2019-09-17T12:26:25","Actor":"dotnet-maestro[bot]","Number":"1551","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190916.8\r\n- **Date Produced**: 9/17/2019 7:53 AM\r\n- **Commit**: 4aea703673e942756c02b222e6b5babaf8612a25\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19466.8\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19466.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19466.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1551","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1551)"},{"Id":"494010485","IsPullRequest":true,"CreatedAt":"2019-09-16T12:21:02","Actor":"dotnet-maestro[bot]","Number":"1550","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190915.2\r\n- **Date Produced**: 9/15/2019 6:42 PM\r\n- **Commit**: e8efb815275c8323fedc950ca3596474fa5e23c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19465.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19465.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19465.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1550","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1550)"},{"Id":"493907721","IsPullRequest":false,"CreatedAt":"2019-09-16T08:19:30","Actor":"HamidTheGeek","Number":"1549","RawContent":null,"Title":"SqlParameter.DbType is set to Datetime when I am setting it to Time","State":"open","Body":"It seems like an intentional behavior but I don't get the reason. \r\n\r\n```c#\r\nvar param = new SqlParameter();\r\nparam.DbType = DbType.Time;\r\nConsole.WriteLine(param.DbType.ToString());\r\n```\r\n`DateTime` will be printed in the console. Therefore, the following value would be `false`.\r\n```c#\r\nvar param = new SqlParameter();\r\nparam.DbType = DbType.Time;\r\nvar value = param.DbType == DbType.Time;\r\n```\r\n\r\nI have tested this in `netstandard2.0`.","Url":"https://github.com/dotnet/standard/issues/1549","RelatedDescription":"Open issue \"SqlParameter.DbType is set to Datetime when I am setting it to Time\" (#1549)"},{"Id":"493730129","IsPullRequest":true,"CreatedAt":"2019-09-15T12:21:32","Actor":"dotnet-maestro[bot]","Number":"1548","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190914.4\r\n- **Date Produced**: 9/15/2019 5:48 AM\r\n- **Commit**: cbcc2a5e6f8be1e43b16874ed358c18c5d6bcd5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19464.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19464.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19464.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1548","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1548)"},{"Id":"493617725","IsPullRequest":true,"CreatedAt":"2019-09-14T12:32:41","Actor":"dotnet-maestro[bot]","Number":"1547","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190913.7\r\n- **Date Produced**: 9/14/2019 3:54 AM\r\n- **Commit**: f07730eedb1f7e2cb5e178d988bc2255f7ce7021\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19463.7\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19463.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19463.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1547","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1547)"},{"Id":"493616084","IsPullRequest":true,"CreatedAt":"2019-09-14T12:11:29","Actor":"dotnet-maestro[bot]","Number":"1546","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190913.3\r\n- **Date Produced**: 9/13/2019 11:47 PM\r\n- **Commit**: 7b731032220c21a3ed0021c72757b1f3122579b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19463.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1546","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1546)"},{"Id":"493518578","IsPullRequest":false,"CreatedAt":"2019-09-13T21:11:22","Actor":"BobHein","Number":"1545","RawContent":null,"Title":"When writing .Net Standard projects, is it OK to include Nuget packages which are part of .Net Core as dependencies?","State":"open","Body":"There are many Microsoft Nuget packages which contain classes which are not part of .Net Standard, but these packages are available as standalone Nuget packages. Most of them seem to be components of .Net core. A few Examples of many are:\r\n\r\nSystem.Data.SqlClient\r\nSystem.Data.DataSetExtensions\r\nSystem.Drawing.Common\r\n\r\nThese all seems to indicate that they are supported under .Net Standard in the Nuget documentation.  My questions:\r\n\r\n1) Are they really safe to use under .Net Standard DLLs, which will run in both .Net Core and .Net Framework environments?\r\n2) If they are safe to use, why aren't they included as part of .Net Standard? Note that I also want them to run under Linux as well.\r\n3) If they are not safe to use, why not? And how do you know what is and isn't safe to use?","Url":"https://github.com/dotnet/standard/issues/1545","RelatedDescription":"Open issue \"When writing .Net Standard projects, is it OK to include Nuget packages which are part of .Net Core as dependencies?\" (#1545)"},{"Id":"493297430","IsPullRequest":true,"CreatedAt":"2019-09-13T12:35:42","Actor":"dotnet-maestro[bot]","Number":"1544","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190912.15\r\n- **Date Produced**: 9/13/2019 5:08 AM\r\n- **Commit**: 31a5bba0e79a5ae875f691d70ec3b9789691136d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19462.15\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19462.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19462.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1544","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1544)"},{"Id":"493287649","IsPullRequest":true,"CreatedAt":"2019-09-13T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1543","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190912.5\r\n- **Date Produced**: 9/13/2019 5:59 AM\r\n- **Commit**: 6003ee189f456c92a18b097f226d4927309def27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19462.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1543","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1543)"},{"Id":"493039917","IsPullRequest":false,"CreatedAt":"2019-09-12T21:31:56","Actor":"Anipik","Number":"1542","RawContent":null,"Title":"Using Dotnet pack to produce the packages for Netstandard/Library packages.","State":"open","Body":"Currently we are using pkgproj and a lot of arcade & custom infrastructure to build packages.\r\n\r\nGoing forward we will be only publishing the ref assembly packages so it becomes more useful to move towards using dotnet pack.\r\n\r\nHaving the same architecture for preview and the final release will help us avoid problems in the release pipelines. \r\n\r\ncc @ericstj @ViktorHofer @danmosemsft ","Url":"https://github.com/dotnet/standard/issues/1542","RelatedDescription":"Open issue \"Using Dotnet pack to produce the packages for Netstandard/Library packages.\" (#1542)"},{"Id":"493029008","IsPullRequest":true,"CreatedAt":"2019-09-12T21:17:00","Actor":"mmitche","Number":"1541","RawContent":null,"Title":"Stabilize package verions","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1541","RelatedDescription":"Closed or merged PR \"Stabilize package verions\" (#1541)"},{"Id":"492578579","IsPullRequest":true,"CreatedAt":"2019-09-12T17:46:41","Actor":"Anipik","Number":"1536","RawContent":null,"Title":"Setting version suffix as non empty for building release package versions","State":"closed","Body":"Currently we get this error while building the release version of this package\r\n```\r\nC:\\Users\\mmitche\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\1.0.0-beta.19460.3\\build\\Packaging.targets(736,5): error : No VersionSuffix was set. Ensure \r\nit is set before targets in packaging are ran. [C:\\enlistments\\standard\\src\\netstandard\\pkg\\NETStandard.Library.pkgproj]\r\n```\r\n\r\nsetting stableversion skips this task ApplyPreReleaseSuffix. we don't want to apply any suffix in release build.\r\n\r\nwe are applying this prefix to the dependencies of the package(GetNuGetPackageDependencies), but as its just a transport package, it should not matter. I was not able to find a good way to tackle this.\r\n\r\n@ericstj any suggestions will be welcomed.","Url":"https://github.com/dotnet/standard/pull/1536","RelatedDescription":"Closed or merged PR \"Setting version suffix as non empty for building release package versions\" (#1536)"},{"Id":"492776720","IsPullRequest":true,"CreatedAt":"2019-09-12T13:25:04","Actor":"dotnet-maestro[bot]","Number":"1540","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190911.13\r\n- **Date Produced**: 9/12/2019 3:32 AM\r\n- **Commit**: 144ebb6ff997bf7a777206a233cdd8c03e13f60c\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-rc2.19461.13\r\n  - **System.Reflection.Emit** -> 4.6.0-rc2.19461.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-rc2.19461.13\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1540","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1540)"},{"Id":"492776601","IsPullRequest":true,"CreatedAt":"2019-09-12T12:44:23","Actor":"dotnet-maestro[bot]","Number":"1539","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190911.10\r\n- **Date Produced**: 9/11/2019 11:00 PM\r\n- **Commit**: e32d9a2664a59eccbcbe5a4044cffbdd96538b5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19461.10\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19461.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19461.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1539","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1539)"},{"Id":"492775521","IsPullRequest":true,"CreatedAt":"2019-09-12T12:42:08","Actor":"dotnet-maestro[bot]","Number":"1538","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190911.7\r\n- **Date Produced**: 9/12/2019 6:45 AM\r\n- **Commit**: 8eb29ba860a3cfcfe68f9a8256caa7efc1f1aaba\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19461.7\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1538","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1538)"},{"Id":"492761054","IsPullRequest":true,"CreatedAt":"2019-09-12T12:11:42","Actor":"dotnet-maestro[bot]","Number":"1537","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190911.7\r\n- **Date Produced**: 9/12/2019 6:45 AM\r\n- **Commit**: 8eb29ba860a3cfcfe68f9a8256caa7efc1f1aaba\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19461.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1537","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1537)"},{"Id":"492206044","IsPullRequest":true,"CreatedAt":"2019-09-11T12:37:02","Actor":"dotnet-maestro[bot]","Number":"1535","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190910.22\r\n- **Date Produced**: 9/11/2019 5:14 AM\r\n- **Commit**: 67fd971d57f9779c7acffc6d87934e311d968fa8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-rc2.19460.22\r\n  - **System.Reflection.Emit** -> 4.6.0-rc2.19460.22\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-rc2.19460.22\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1535","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1535)"},{"Id":"492205909","IsPullRequest":true,"CreatedAt":"2019-09-11T12:36:47","Actor":"dotnet-maestro[bot]","Number":"1534","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190910.21\r\n- **Date Produced**: 9/11/2019 4:14 AM\r\n- **Commit**: ee9995f31b684a0c6e5488eceb2500bf0057da89\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19460.21\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19460.21\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19460.21\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1534","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1534)"},{"Id":"492194129","IsPullRequest":true,"CreatedAt":"2019-09-11T12:11:46","Actor":"dotnet-maestro[bot]","Number":"1533","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190910.3\r\n- **Date Produced**: 9/10/2019 6:11 PM\r\n- **Commit**: 0f5cfb20a355c27bc84cedd049c946b44a7fc1da\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19460.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1533","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1533)"},{"Id":"491861134","IsPullRequest":true,"CreatedAt":"2019-09-10T21:24:12","Actor":"dotnet-maestro[bot]","Number":"1532","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190910.3\r\n- **Date Produced**: 9/10/2019 6:11 PM\r\n- **Commit**: 0f5cfb20a355c27bc84cedd049c946b44a7fc1da\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19460.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19460.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1532","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1532)"},{"Id":"491641888","IsPullRequest":true,"CreatedAt":"2019-09-10T19:39:48","Actor":"dotnet-maestro[bot]","Number":"1529","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190909.10\r\n- **Date Produced**: 9/10/2019 12:07 AM\r\n- **Commit**: f5ccfdcbd828383d39cf583086ef42d72ca5b320\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19459.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19459.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19459.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19459.10\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19459.10\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19459.10\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1529","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1529)"},{"Id":"491643342","IsPullRequest":true,"CreatedAt":"2019-09-10T12:42:44","Actor":"dotnet-maestro[bot]","Number":"1531","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190910.1\r\n- **Date Produced**: 9/10/2019 9:41 AM\r\n- **Commit**: 1f43072465d4be9920ab04a3c3ad91f82144de4e\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-rc2.19460.1\r\n  - **System.Reflection.Emit** -> 4.6.0-rc2.19460.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-rc2.19460.1\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1531","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1531)"},{"Id":"491643232","IsPullRequest":true,"CreatedAt":"2019-09-10T12:42:30","Actor":"dotnet-maestro[bot]","Number":"1530","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190909.14\r\n- **Date Produced**: 9/10/2019 8:08 AM\r\n- **Commit**: ca890ed4eceb71c0a78d63e8e030497a1b613b80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19459.14\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19459.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19459.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1530","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1530)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"496550371","IsPullRequest":false,"CreatedAt":"2019-09-20T21:17:18","Actor":"pranavkm","Number":"41242","RawContent":null,"Title":"[System.Text.Json] Type deriving from List<T> without parameterless constructor results in null ref","State":"open","Body":"```C#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var json = \"[1, 2]\";\r\n        var x = JsonSerializer.Deserialize<CustomList<int>>(json);\r\n    }\r\n}\r\n\r\npublic class CustomList<T> : List<T>\r\n{\r\n    public CustomList(int x) { }\r\n}\r\n```\r\n\r\nStack trace:\r\n\r\n```C#\r\nUnhandled exception. System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Text.Json.ReadStackFrame.CreateEnumerableValue(Utf8JsonReader& reader, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.HandleStartArray(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& readStack)\r\n   at System.Text.Json.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonSerializer.ParseCore(String json, Type returnType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializer.Deserialize[TValue](String json, JsonSerializerOptions options)\r\n```\r\n\r\nReproduced using `Microsoft.NETCore.App 3.0.0-rc1-19456-20`\r\n\r\nAdding a parameterless ctor works, but the exception message likely needs to say that a parameterless ctor needs to be declared.\r\n","Url":"https://github.com/dotnet/corefx/issues/41242","RelatedDescription":"Open issue \"[System.Text.Json] Type deriving from List<T> without parameterless constructor results in null ref\" (#41242)"},{"Id":"496549813","IsPullRequest":true,"CreatedAt":"2019-09-20T21:15:38","Actor":"buyaa-n","Number":"41241","RawContent":null,"Title":"Annotate System.Diagnostics.DiagnosticSource for nullable","State":"open","Body":"Contributes to #40623\r\ncc: @dotnet/nullablefc","Url":"https://github.com/dotnet/corefx/pull/41241","RelatedDescription":"Open PR \"Annotate System.Diagnostics.DiagnosticSource for nullable\" (#41241)"},{"Id":"496548938","IsPullRequest":false,"CreatedAt":"2019-09-20T21:12:53","Actor":"AArnott","Number":"41240","RawContent":null,"Title":"System.Reflection.DispatchProxy inconsistently fails for internal interfaces","State":"open","Body":"An undocumented limitation in `DispatchProxy.Create` is that it *sometimes* throws for various configurations of visibility. This seems to be a broader issue than the more specific #28403.\r\n\r\nThese configurations work:\r\n\r\n1. public interface, public base class.\r\n1. internal interface, internal base class, within the same assembly. But only when this is the *first* proxy ever generated.\r\n\r\nThese configurations *don't* work:\r\n\r\n1. public interface, internal base class.\r\n1. internal interface, internal base class, if another assembly has already provided an internal interface to generate a proxy for.\r\n\r\nThere were other odd configurations that similarly failed.\r\n\r\nSince I've done this kind of feature before, I have a suspicion that the generated `ProxyBuilder` assembly includes an [`System.Runtime.CompilerServices.IgnoresAccessChecksToAttribute`](https://github.com/microsoft/vs-mef/blob/21ca4f58145ae9e0e1560de287e112a608ed796f/src/Microsoft.VisualStudio.Composition/Reflection/SkipClrVisibilityChecks.cs#L159) for the assembly that defines the interface. \r\nThe way I solved this is that each time I need to generate a proxy, [I evaluate all the assemblies that visibility checks must be skipped for](https://github.com/microsoft/vs-mef/blob/21ca4f58145ae9e0e1560de287e112a608ed796f/src/Microsoft.VisualStudio.Composition/Configuration/MetadataViewGenerator.cs#L114) and create a new dynamic assembly for each unique set that I get. So multiple proxies are supported, and we reuse dynamic assemblies where possible but when the set of dynamic assemblies exceed any previously discovered set we have to start a new assembly.\r\n\r\nAdding more attributes to an existing dynamic assembly is ineffective because once you've loaded the first type from the assembly, the CLR caches these attributes and doesn't notice when new ones are added.","Url":"https://github.com/dotnet/corefx/issues/41240","RelatedDescription":"Open issue \"System.Reflection.DispatchProxy inconsistently fails for internal interfaces\" (#41240)"},{"Id":"496430759","IsPullRequest":true,"CreatedAt":"2019-09-20T20:29:40","Actor":"stephentoub","Number":"41235","RawContent":null,"Title":"Enable better trimming of derived XmlReader/Writer-derived types","State":"closed","Body":"XmlReader and XmlWriter have a bunch of internal derived types, which are created by the XmlReader/Writer.Create factory methods.  When settings are provided, almost any of these derived types could be created based on the data in the settings.  But when no settings are provided, there's only one answer as to which types are used.  In the XmlReader/Writer.Create overloads that don't take settings, we can avoid delegating to the more general factory and instead just construct the specific types we need; while this adds a small amount of duplication, it also means that if an app only uses the overloads that don't take settings, most of the derived types can be trimmed away by the linker during app publishing, saving ~100K.\r\n\r\n(Granted, lots of uses of XmlReader/Writer.Create do need to pass settings, including the reader/writer used by XLINQ, which is used in a default MVC app, and as such in a default MVC app this change has negligable impact.  But it does help a basic console app that just reads and writes an XML file.)\r\n\r\ncc: @krwq, @buyaa-n, @jkotas ","Url":"https://github.com/dotnet/corefx/pull/41235","RelatedDescription":"Closed or merged PR \"Enable better trimming of derived XmlReader/Writer-derived types\" (#41235)"},{"Id":"496505241","IsPullRequest":true,"CreatedAt":"2019-09-20T19:10:51","Actor":"vcsjones","Number":"41239","RawContent":null,"Title":"Implement FromOid and TryFromOid.","State":"open","Body":"Fixes #40558 ","Url":"https://github.com/dotnet/corefx/pull/41239","RelatedDescription":"Open PR \"Implement FromOid and TryFromOid.\" (#41239)"},{"Id":"496496229","IsPullRequest":true,"CreatedAt":"2019-09-20T18:46:57","Actor":"steveharter","Number":"41238","RawContent":null,"Title":"Serializer perf improvements","State":"open","Body":"Misc changes to gain ~7% on deserialize and ~3% on serialize for a simple, flat object (as in other recent PRs, the `MicroBenchmarks.Serializers.Json_FromString<Location>` and `MicroBenchmarks.Serializers.Json_ToString<Location>` were used.\r\n\r\nThere is also a gain for deserializing collections (~6%). There is no gain for serializing collections.\r\n\r\nThere is also a larger gain for deserializing small payloads which are under 85 bytes (255 / 3) since allocations are stack-based instead of pool-based.\r\n\r\nChanges include:\r\n- Avoid the byte[] alloc when deserializing strings (the buffer for transcoding string to byte[]). Now a pool or stack alloc is made.\r\n- Removing several parameters due to exception helper changes. Added support to embed a literal \"$Path\" in the string resource which will be expanded automatically. This avoids having to pass the reader and\\or \"stack state\" to lower-level methods which may need to throw an exception that needs path information as part of its message.\r\n  - This also allows consumers to use the literal if they want path information (including line number and byte offset) as part of a JsonException message they may throw from a customer converter. Previously, it was not possible for a consumer to add this information to a JsonException since the path information is not available publicly.\r\n- Remove a temporary struct assignment `WriteStackFrame current = state.Current` that caused a copy-by-value.\r\n- Avoid verifying internal converters in release build for correctness (reading too much or too little).\r\n- Improve the \"IsProcessing\" logic by using bit flags which helps when comparing more than one `ClassType`.\r\n- Improve `SkipProperty()` by avoiding the direct comparison to the \"missing property\" singleton.\r\n- Misc other one-line changes\r\n\r\n**Deserialize Before**\r\n\r\n|         Method |     Mean |     Error |    StdDev |   Median |      Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------- |---------:|----------:|----------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|       JSON.NET | 2.554 us | 0.0091 us | 0.0081 us | 2.553 us | 2.540 us | 2.567 us |      0.4771 |           - |           - |              3056 B |\r\n| SystemTextJson | 1.465 us | 0.0088 us | 0.0078 us | 1.464 us | 1.450 us | 1.477 us |      0.1053 |           - |           - |               680 B |\r\n\r\n**Deserialize After**\r\n\r\n|         Method |     Mean |     Error |    StdDev |   Median |      Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------- |---------:|----------:|----------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|       JSON.NET | 2.565 us | 0.0151 us | 0.0134 us | 2.564 us | 2.541 us | 2.590 us |      0.4824 |           - |           - |              3056 B |\r\n| SystemTextJson | 1.358 us | 0.0097 us | 0.0081 us | 1.357 us | 1.341 us | 1.375 us |      0.0701 |           - |           - |               448 B |\r\n\r\n**Serialize Before**\r\n\r\n|         Method |     Mean |     Error |    StdDev |   Median |      Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------- |---------:|----------:|----------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|       JSON.NET | 1.438 us | 0.0106 us | 0.0099 us | 1.438 us | 1.414 us | 1.450 us |      0.2751 |           - |           - |              1736 B |\r\n| SystemTextJson | 1.011 us | 0.0084 us | 0.0079 us | 1.007 us | 1.000 us | 1.024 us |      0.0891 |           - |           - |               584 B |\r\n\r\n**Serialize After**\r\n\r\n|         Method |       Mean |    Error |   StdDev |     Median |        Min |        Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------- |-----------:|---------:|---------:|-----------:|-----------:|-----------:|------------:|------------:|------------:|--------------------:|\r\n|       JSON.NET | 1,424.7 ns | 7.607 ns | 7.115 ns | 1,423.7 ns | 1,412.6 ns | 1,439.2 ns |      0.2746 |           - |           - |              1736 B |\r\n| SystemTextJson |   970.9 ns | 7.285 ns | 6.458 ns |   968.5 ns |   964.4 ns |   982.3 ns |      0.0928 |           - |           - |               584 B","Url":"https://github.com/dotnet/corefx/pull/41238","RelatedDescription":"Open PR \"Serializer perf improvements\" (#41238)"},{"Id":"496476317","IsPullRequest":true,"CreatedAt":"2019-09-20T17:55:51","Actor":"stephentoub","Number":"41237","RawContent":null,"Title":"Move XLinq specific type description providers into its assembly","State":"open","Body":"Avoids cross-assembly private reflection.\r\n\r\n@ericstj, does this cause any cyclic problems or anything like that?  I'm suspicious that it wasn't done this way in the first place.\r\n\r\ncc: @krwq ","Url":"https://github.com/dotnet/corefx/pull/41237","RelatedDescription":"Open PR \"Move XLinq specific type description providers into its assembly\" (#41237)"},{"Id":"496470732","IsPullRequest":true,"CreatedAt":"2019-09-20T17:41:42","Actor":"krwq","Number":"41236","RawContent":null,"Title":"Make Add/Remove UnsignedAttribute work with counter signers","State":"open","Body":"Fixes: https://github.com/dotnet/corefx/issues/41158\r\n\r\nExtends #25449 which has added support for adding unsigned attributes to signers to also work with counter-signers which is a valid scenario for people wanting to add a timestamp to their counter-signatures.\r\n\r\nFYI: @rrelyea @heng-liu @danmosemsft\r\ncc: @vcsjones\r\n\r\nConsider servicing for 3.1","Url":"https://github.com/dotnet/corefx/pull/41236","RelatedDescription":"Open PR \"Make Add/Remove UnsignedAttribute work with counter signers\" (#41236)"},{"Id":"496427265","IsPullRequest":false,"CreatedAt":"2019-09-20T15:52:28","Actor":"stephentoub","Number":"41234","RawContent":null,"Title":"Find a way to trim out ExcludeFromCodeCoverage attribute from published trimmed app","State":"open","Body":"Several assemblies that end up getting pulled into lots of apps (e.g. System.Linq) use `[ExcludeFromCodeCoverage]`.  There's generally no need for that in a published trimmed app, but it's sticking around and bringing with it System.Diagnostics.Tooling.dll.  While fairly small (5K) it's still another .dll that would be nice to remove.  This could be achieved in various ways, including:\r\n- Stop using [ExcludeFromCodeCoverage] in these assemblies, which would impact all code coverage results\r\n- `#if DEBUG` around such usage, which would then only impact code coverage release results\r\n- Teach the linker used during app publishing to always strip this attribute\r\n\r\ncc: @sbomer, @noahfalk ","Url":"https://github.com/dotnet/corefx/issues/41234","RelatedDescription":"Open issue \"Find a way to trim out ExcludeFromCodeCoverage attribute from published trimmed app\" (#41234)"},{"Id":"496263281","IsPullRequest":true,"CreatedAt":"2019-09-20T15:32:07","Actor":"eiriktsarpalis","Number":"41229","RawContent":null,"Title":"HttpClientHandler functional test: replace remote server dependency","State":"closed","Body":"Replaces remote server dependency for `HttpClientHandler_MaxResponseHeadersLength_Test.SetAfterUse_Throws` with LoopbackServer.\r\n\r\nFixes #41148","Url":"https://github.com/dotnet/corefx/pull/41229","RelatedDescription":"Closed or merged PR \"HttpClientHandler functional test: replace remote server dependency\" (#41229)"},{"Id":"496390354","IsPullRequest":false,"CreatedAt":"2019-09-20T14:40:14","Actor":"FinexTech","Number":"41233","RawContent":null,"Title":"output parameter for command \"dotnet publish\" works wrong ","State":"open","Body":"We use dotnet version '3.0.100-rc1-014190'.\r\nDocumentation for output parameter states: ' If the path is relative, the output directory generated is relative to the project file location, not to the current working directory.'\r\nTo publish application we use next command: 'dotnet publish -r linux-musl-x64 -c \"Release\" --self-contained=false -o \"out\"  PATH_TO_SOLUTION'\r\nPublish result of all projects is copied into folder relative to the working directory.\r\nPrevious dotnet version creates out folders relative to project file locations.\r\nIs it expected behavior?\r\nThanks.\r\n","Url":"https://github.com/dotnet/corefx/issues/41233","RelatedDescription":"Open issue \"output parameter for command \"dotnet publish\" works wrong \" (#41233)"},{"Id":"496320089","IsPullRequest":true,"CreatedAt":"2019-09-20T13:29:15","Actor":"dotnet-maestro[bot]","Number":"41232","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190919.3\r\n- **Date Produced**: 9/20/2019 1:58 AM\r\n- **Commit**: 4da207dbb8c1d541ebf57a38bbd3506e65f427a0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19469.3\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19469.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19469.3\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41232","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#41232)"},{"Id":"496304674","IsPullRequest":true,"CreatedAt":"2019-09-20T13:13:36","Actor":"gfoidl","Number":"41230","RawContent":null,"Title":"CryptoNative_EvpDigestUpdate count as int32_t instead of size_t","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/41219\r\n\r\nAlso checked the other pal-headers in this cmake-project for any use of `size_t` in the signatures --> didn't find any.\r\n\r\n/cc: @bartonjs ","Url":"https://github.com/dotnet/corefx/pull/41230","RelatedDescription":"Closed or merged PR \"CryptoNative_EvpDigestUpdate count as int32_t instead of size_t\" (#41230)"},{"Id":"496032354","IsPullRequest":false,"CreatedAt":"2019-09-20T13:13:36","Actor":"filipnavara","Number":"41219","RawContent":null,"Title":"Incorrect P/Invoke signature for CryptoNative_EvpDigestUpdate","State":"closed","Body":"The `count` argument is defined as `int` in managed code and as `size_t` in native code:\r\nhttps://github.com/dotnet/corefx/blob/6074cfc995d7968fcdbc7f707acff0c6284c6ae9/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.EVP.cs#L22-L23\r\nhttps://github.com/dotnet/corefx/blob/a10890f4ffe0fadf090c922578ba0e606ebdd16c/src/Native/Unix/System.Security.Cryptography.Native/pal_evp.h#L43","Url":"https://github.com/dotnet/corefx/issues/41219","RelatedDescription":"Closed issue \"Incorrect P/Invoke signature for CryptoNative_EvpDigestUpdate\" (#41219)"},{"Id":"496304961","IsPullRequest":true,"CreatedAt":"2019-09-20T11:42:38","Actor":"eiriktsarpalis","Number":"41231","RawContent":null,"Title":"[WIP] Re-enable functional http2 tests timing out in CI","State":"open","Body":"Investigates #39545. Do not merge.","Url":"https://github.com/dotnet/corefx/pull/41231","RelatedDescription":"Open PR \"[WIP] Re-enable functional http2 tests timing out in CI\" (#41231)"},{"Id":"496190743","IsPullRequest":true,"CreatedAt":"2019-09-20T08:18:21","Actor":"adamsitnik","Number":"41227","RawContent":null,"Title":"add StartsWith Surrogates test cases","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/41227","RelatedDescription":"Closed or merged PR \"add StartsWith Surrogates test cases\" (#41227)"},{"Id":"496208341","IsPullRequest":false,"CreatedAt":"2019-09-20T08:04:00","Actor":"carl-berg","Number":"41228","RawContent":null,"Title":"Diagnostic Activity Async issue","State":"open","Body":"Not sure if this is the right repo to report this but i'm experiencing an issue with `Activity`. This code works as i expect, in the child \"scope\" `Activity.Current` has a new `Id`:\r\n```csharp\r\npublic async Task Execute()\r\n{\r\n    var activity = new Activity(\"Executing root\").Start();\r\n    Console.WriteLine($\"Executing in root scope \\t{Activity.Current.Id}\");\r\n    await Task.Delay(50);\r\n    var childActivity = new Activity(\"Child scope\");\r\n    Console.WriteLine($\"Executing in child scope \\t{Activity.Current.Id}\");\r\n    await Task.Delay(50);\r\n    childActivity.Stop();\r\n    activity.Stop();\r\n}\r\n```\r\nbut when i move creation of child scope activity into another async method:\r\n```csharp\r\npublic async Task Execute()\r\n{\r\n    var activity = new Activity(\"Executing root\").Start();\r\n    Console.WriteLine($\"Executing in root scope \\t{Activity.Current.Id}\");\r\n    await Task.Delay(50);\r\n    var childActivity = await StartActivity(\"Child scope\");\r\n    Console.WriteLine($\"Executing in child scope \\t{Activity.Current.Id}\");\r\n    await Task.Delay(50);\r\n    childActivity.Stop();\r\n    activity.Stop();\r\n}\r\n\r\nprivate async Task<Activity> StartActivity(string activityName)\r\n{\r\n    await Task.Delay(50);\r\n    return new Activity(activityName).Start();\r\n}\r\n```\r\n..then both these console logs have the same `Activity.Current.Id`. \r\nReading this [documentation](https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md), i would assume that it would work in async contexts aswell?:\r\n>The current activity is exposed as static variable, Activity.Current, and flows with call context, including async calls, so that it is available in every Start/Stop event callback.\r\n\r\nI experience the same behavior of package `System.Diagnostics.DiagnosticSource` both in version `4.5.1` and the latest pre-release `4.6.0-rc1.19456.4`.","Url":"https://github.com/dotnet/corefx/issues/41228","RelatedDescription":"Open issue \"Diagnostic Activity Async issue\" (#41228)"},{"Id":"496172985","IsPullRequest":false,"CreatedAt":"2019-09-20T06:33:33","Actor":"natemcmaster","Number":"41226","RawContent":null,"Title":"CryptographicException on .NET Core 3, Windows only \"The specified RSA parameters are not valid; both Exponent and Modulus are required fields.\"","State":"open","Body":"I'm getting the following error when creating RSA from RSAParameters, but only on Windows for .NET Core 3.0. This works on .NET 4.7.2, .NET Core 2.1 (Windows and macOS), and .NET Core 3.0 (macOS).\r\n\r\n```\r\nSystem.Security.Cryptography.CryptographicException: The specified RSA parameters are not valid; both Exponent and Modulus are required fields.\r\n   at System.Security.Cryptography.RSAImplementation.RSACng.ImportParameters(RSAParameters parameters)\r\n   at System.Security.Cryptography.RSA.Create(RSAParameters parameters)\r\n```\r\n\r\n## Repro\r\n```c#\r\nusing System;\r\nusing System.Security.Cryptography;\r\nusing System.Text;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var parameters = new RSAParameters\r\n        {\r\n            Modulus = new byte[] { 0, 198, 19, 173, 163, 198, 96, 251, 190, 35, 45, 77, 159, 113, 248, 230, 172, 43, 69, 139, 187, 192, 228, 253, 66, 48, 221, 32, 243, 161, 105, 84, 113, 54, 227, 201, 142, 233, 118, 27, 2, 23, 33, 36, 83, 137, 232, 116, 109, 112, 44, 249, 73, 223, 56, 32, 51, 228, 0, 47, 185, 95, 95, 242, 143, 218, 137, 130, 124, 189, 143, 118, 193, 59, 4, 156, 29, 222, 113, 221, 130, 153, 69, 7, 197, 81, 150, 94, 86, 209, 1, 31, 209, 49, 111, 62, 132, 105, 167, 170, 241, 79, 218, 202, 179, 67, 170, 145, 169, 36, 228, 99, 6, 39, 235, 166, 189, 17, 242, 167, 217, 192, 36, 120, 209, 176, 89, 240, 248, 34, 155, 25, 130, 64, 53, 85, 50, 20, 17, 248, 59, 69, 179, 149, 74, 22, 122, 162, 191, 150, 33, 138, 157, 129, 76, 16, 0, 220, 103, 77, 183, 21, 25, 101, 121, 50, 130, 190, 208, 19, 48, 153, 62, 229, 76, 39, 204, 64, 120, 72, 244, 197, 108, 197, 127, 29, 200, 248, 161, 69, 230, 249, 175, 1, 236, 45, 231, 31, 103, 189, 85, 79, 14, 123, 137, 70, 71, 40, 137, 217, 73, 211, 206, 173, 192, 214, 175, 204, 155, 229, 70, 31, 195, 238, 206, 116, 2, 50, 238, 15, 53, 60, 35, 32, 89, 126, 233, 219, 147, 240, 39, 71, 174, 202, 206, 220, 250, 156, 80, 132, 224, 169, 146, 169, 234, 184, 127 },\r\n            Exponent = new byte[] { 1, 0, 1 },\r\n            D = new byte[] { 76, 191, 255, 62, 64, 117, 255, 213, 178, 231, 176, 246, 33, 65, 98, 144, 63, 204, 24, 210, 205, 113, 109, 56, 162, 154, 108, 84, 58, 173, 7, 141, 62, 201, 144, 166, 17, 140, 51, 246, 225, 99, 116, 33, 242, 131, 225, 233, 45, 216, 31, 88, 34, 104, 43, 2, 48, 76, 106, 49, 151, 229, 35, 165, 221, 245, 254, 91, 187, 79, 197, 162, 37, 238, 41, 87, 225, 131, 153, 99, 43, 100, 118, 24, 92, 254, 184, 219, 70, 236, 250, 153, 34, 96, 138, 134, 224, 49, 153, 169, 27, 90, 25, 196, 208, 105, 93, 59, 127, 18, 7, 212, 176, 207, 60, 178, 114, 43, 230, 34, 23, 179, 138, 37, 38, 2, 19, 190, 67, 117, 14, 70, 163, 166, 15, 163, 36, 228, 191, 59, 16, 177, 247, 114, 183, 114, 242, 67, 60, 41, 28, 97, 228, 156, 128, 219, 97, 234, 78, 43, 8, 77, 190, 41, 29, 13, 242, 96, 71, 249, 29, 131, 152, 28, 45, 104, 215, 29, 2, 7, 89, 83, 193, 135, 107, 229, 4, 150, 153, 108, 42, 115, 151, 145, 64, 58, 68, 73, 138, 101, 87, 104, 173, 163, 143, 193, 163, 120, 4, 60, 82, 187, 245, 143, 150, 62, 255, 130, 17, 196, 131, 214, 102, 114, 244, 137, 209, 14, 8, 66, 88, 229, 72, 74, 13, 104, 32, 236, 119, 126, 138, 128, 5, 255, 166, 15, 104, 137, 25, 79, 91, 32, 192, 224, 139, 145 },\r\n            P = new byte[] { 0, 234, 73, 179, 109, 136, 112, 92, 137, 136, 238, 24, 124, 25, 51, 139, 96, 207, 59, 247, 2, 88, 147, 38, 158, 192, 61, 57, 101, 141, 244, 172, 214, 250, 38, 140, 75, 0, 140, 111, 154, 178, 153, 50, 168, 118, 164, 152, 48, 174, 72, 7, 51, 63, 121, 84, 213, 139, 25, 83, 199, 229, 186, 246, 55, 57, 230, 161, 221, 166, 125, 114, 157, 64, 212, 24, 178, 26, 67, 13, 154, 142, 191, 253, 248, 183, 238, 225, 232, 205, 43, 44, 101, 204, 247, 177, 91, 223, 63, 155, 219, 209, 206, 219, 18, 72, 89, 197, 212, 186, 231, 89, 175, 84, 202, 20, 53, 133, 77, 38, 8, 50, 116, 56, 123, 94, 67, 78, 19 },\r\n            Q = new byte[] { 0, 216, 110, 230, 24, 21, 240, 176, 181, 20, 62, 150, 117, 123, 72, 166, 206, 147, 14, 232, 207, 15, 66, 157, 140, 87, 242, 188, 204, 214, 88, 44, 186, 55, 53, 81, 143, 129, 141, 79, 104, 103, 136, 134, 178, 236, 223, 90, 208, 12, 80, 15, 181, 172, 161, 146, 159, 184, 46, 246, 177, 7, 234, 0, 238, 13, 136, 87, 112, 70, 63, 218, 129, 215, 93, 204, 243, 181, 37, 195, 136, 238, 49, 33, 190, 104, 98, 247, 7, 148, 120, 7, 56, 137, 135, 113, 141, 166, 39, 0, 143, 198, 225, 230, 206, 65, 142, 18, 76, 115, 18, 61, 216, 103, 176, 6, 57, 22, 92, 134, 88, 193, 120, 255, 152, 188, 176, 201, 101 },\r\n            DP = new byte[] { 29, 65, 198, 222, 78, 195, 121, 74, 211, 134, 168, 24, 23, 45, 144, 162, 46, 62, 214, 193, 188, 61, 227, 252, 191, 20, 230, 46, 0, 100, 37, 145, 82, 251, 173, 89, 80, 96, 57, 47, 160, 77, 241, 61, 136, 83, 85, 141, 254, 181, 143, 240, 158, 100, 144, 107, 122, 75, 87, 99, 7, 21, 41, 218, 11, 168, 249, 93, 172, 132, 205, 227, 69, 77, 55, 40, 70, 143, 73, 11, 155, 247, 237, 199, 57, 112, 227, 85, 39, 9, 213, 41, 129, 71, 13, 38, 227, 226, 21, 156, 133, 190, 199, 44, 169, 76, 76, 160, 28, 22, 247, 228, 37, 58, 118, 251, 152, 1, 226, 85, 243, 182, 255, 182, 168, 54, 207, 113 },\r\n            DQ = new byte[] { 106, 226, 81, 149, 129, 120, 76, 252, 16, 20, 92, 159, 134, 19, 185, 244, 248, 96, 251, 142, 14, 30, 58, 201, 237, 64, 254, 6, 54, 176, 114, 222, 63, 151, 128, 64, 219, 156, 218, 163, 87, 197, 239, 167, 123, 29, 78, 174, 193, 245, 227, 220, 55, 117, 207, 128, 59, 40, 78, 65, 221, 3, 174, 19, 225, 240, 252, 37, 129, 59, 213, 128, 27, 200, 194, 7, 116, 229, 66, 108, 100, 29, 53, 105, 224, 9, 71, 175, 161, 157, 169, 11, 61, 183, 250, 215, 22, 63, 218, 162, 38, 120, 183, 80, 18, 197, 195, 185, 167, 118, 81, 190, 134, 110, 66, 148, 124, 187, 146, 201, 80, 58, 158, 23, 98, 207, 247, 149 },\r\n            InverseQ = new byte[] { 35, 3, 31, 227, 254, 71, 57, 5, 125, 39, 137, 220, 196, 105, 22, 167, 125, 36, 211, 150, 39, 113, 235, 171, 111, 121, 231, 48, 214, 37, 226, 39, 59, 124, 0, 23, 125, 34, 147, 31, 106, 74, 117, 50, 244, 188, 42, 101, 201, 216, 225, 198, 247, 248, 78, 97, 171, 1, 49, 6, 100, 209, 214, 92, 254, 147, 34, 192, 158, 200, 17, 63, 113, 197, 148, 235, 48, 214, 121, 91, 104, 171, 14, 152, 249, 46, 153, 64, 11, 230, 27, 117, 91, 82, 85, 144, 95, 66, 157, 184, 72, 3, 122, 161, 92, 154, 208, 163, 227, 248, 154, 207, 246, 252, 184, 121, 224, 95, 162, 233, 76, 195, 56, 111, 186, 76, 39, 119 },\r\n        };\r\n\r\n        try\r\n        {\r\n            var key = RSA.Create(parameters); // this throws on .NET Core 3.0, Windows only\r\n\r\n            var encrypted = key.Encrypt(Encoding.ASCII.GetBytes(\"Hello\"), RSAEncryptionPadding.Pkcs1);\r\n            Console.WriteLine($\"encrypted = {BitConverter.ToString(encrypted)}\");\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            Console.Error.WriteLine(ex.ToString());\r\n        }\r\n    }\r\n}\r\n```\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>netcoreapp2.1;netcoreapp3.0;net472</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/2696087/65304325-34608080-db35-11e9-8004-eec7088dc4a1.png)\r\n\r\n### Info\r\n\r\nMicrosoft.NETCore.App 3.0.0-rc1-19456-20\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n","Url":"https://github.com/dotnet/corefx/issues/41226","RelatedDescription":"Open issue \"CryptographicException on .NET Core 3, Windows only \"The specified RSA parameters are not valid; both Exponent and Modulus are required fields.\"\" (#41226)"},{"Id":"496142838","IsPullRequest":false,"CreatedAt":"2019-09-20T04:46:57","Actor":"Martin1994","Number":"41225","RawContent":null,"Title":"Use PooledByteBufferWriter in Utf8JsonWriter","State":"open","Body":"Currently `Utf8JsonWriter` uses `ArrayBufferWriter<byte>` instead of `PooledByteBufferWriter`:\r\nhttps://github.com/dotnet/corefx/blob/5bc2806f33090e78b38fafe4d5b46d5a0a4c1f08/src/System.Text.Json/src/System/Text/Json/Writer/Utf8JsonWriter.cs#L46\r\nIs there any reason behind it? \r\n\r\nRecently I did a benchmark on `System.Text.Json`, and I found that the async serialization method (writes to `Stream`) uses less memory than the synchronized method (writes to `Utf8JsonWriter` which writes to `Stream`). I believe the use of `ArrayBufferWriter<byte>` in `Utf8JsonWriter` is the reason why synchronized consumes more memory.\r\n\r\n|                     Method |     Mean |     Error |    StdDev |   Median |      Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------------------- |---------:|----------:|----------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|           System.Text.Json | 578.6 ns | 1.7358 ns | 1.6236 ns | 578.4 ns | 576.3 ns | 582.2 ns |      0.0975 |           - |           - |               616 B |\r\n|     System.Text.Json_Async | 592.6 ns | 1.3711 ns | 1.2825 ns | 592.6 ns | 590.9 ns | 594.8 ns |      0.0471 |           - |           - |               304 B |\r\n\r\n_Reference: [https://github.com/Martin1994/JsonJitSerializer/blob/7ad4ba036b8becc53d7beed8abaeb399a88437d7/README.md#json_tostream_loginviewmodel_](https://github.com/Martin1994/JsonJitSerializer/blob/7ad4ba036b8becc53d7beed8abaeb399a88437d7/README.md#json_tostream_loginviewmodel_)_\r\n\r\nSince I build a serialization library on top of `Utf8JsonWriter`, my library, as well as all the third party libraries who make use of `Utf8JsonWriter`, will see the same thing that the async serialization method consumes less memory.","Url":"https://github.com/dotnet/corefx/issues/41225","RelatedDescription":"Open issue \"Use PooledByteBufferWriter in Utf8JsonWriter\" (#41225)"},{"Id":"496011100","IsPullRequest":true,"CreatedAt":"2019-09-20T03:10:33","Actor":"carlossanlop","Number":"41217","RawContent":null,"Title":"UWP Backport: QueryDirectoryFile requires 64 bit alignment to work on ARM32","State":"closed","Body":"Fixes: https://github.com/dotnet/corefx/issues/33563 (requested UWP backport)\r\n\r\nOriginally addressed in 3.0: https://github.com/dotnet/corefx/pull/33713\r\nAnd already backported for 2.2: https://github.com/dotnet/corefx/pull/33754\r\n\r\nCherry-picked from: a75f96a105aa6dd6242d84ae40333df9a1d44c1c\r\n\r\nOriginal commit message:\r\n> QueryDirectoryFile requires 64 bit alignment to work on ARM32. Using Marshal.AllocHGlobal instead of byte[] will do that (and avoid the need to pin).\r\n\r\nPlease add the necessary labels/project/milestone.","Url":"https://github.com/dotnet/corefx/pull/41217","RelatedDescription":"Closed or merged PR \"UWP Backport: QueryDirectoryFile requires 64 bit alignment to work on ARM32\" (#41217)"},{"Id":"496111923","IsPullRequest":true,"CreatedAt":"2019-09-20T02:34:48","Actor":"jkotas","Number":"41224","RawContent":null,"Title":"Improve test coverage for Span-based globalization APIs","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/41224","RelatedDescription":"Open PR \"Improve test coverage for Span-based globalization APIs\" (#41224)"},{"Id":"496089128","IsPullRequest":false,"CreatedAt":"2019-09-20T00:52:07","Actor":"stephentoub","Number":"41223","RawContent":null,"Title":"Address SqlXml to CreateSqlReader dependency for assembly size","State":"open","Body":"System.Data.Common.dll contains the SqlXml type.  This type uses reflection to access the internal CreateSqlReader method in System.Private.Xml.dll:\r\nhttps://github.com/dotnet/corefx/blob/5bc2806f33090e78b38fafe4d5b46d5a0a4c1f08/src/System.Data.Common/src/System/Data/SQLTypes/SqlXml.cs#L134\r\nTo ensure that this internal method (which has no other consumers) isn't trimmed away, System.Private.Xml lists this method in its ILLinkTrim.xml file:\r\nhttps://github.com/dotnet/corefx/blob/5bc2806f33090e78b38fafe4d5b46d5a0a4c1f08/src/System.Private.Xml/src/ILLinkTrim.xml#L3-L6\r\nwhich means that even if SqlXml isn't used by an app, this method and everything it depends on can't be trimmed away.  That ends up keeping alive ~300KB of code that's likely otherwise unused.  We should address this somehow, e.g. https://github.com/dotnet/corefx/issues/41201 (though this is a case of the cross-assembly private reflection mentioned there).","Url":"https://github.com/dotnet/corefx/issues/41223","RelatedDescription":"Open issue \"Address SqlXml to CreateSqlReader dependency for assembly size\" (#41223)"},{"Id":"496071330","IsPullRequest":true,"CreatedAt":"2019-09-19T23:55:21","Actor":"safern","Number":"41222","RawContent":null,"Title":"Set TreatWarningsAsErrors to false in native build for now","State":"closed","Body":"Relates to: https://github.com/dotnet/corefx/issues/41077\r\n\r\nLet's disable warnings as errors for native build completely, as the outer node is now marking it as an error, but the inner node as a warning, which thankfully doesn't stop the build, but it confuses people thinking the build actually did fail, when it didn't.\r\n\r\ncc: @stephentoub @ericstj @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/41222","RelatedDescription":"Closed or merged PR \"Set TreatWarningsAsErrors to false in native build for now\" (#41222)"},{"Id":"496060402","IsPullRequest":false,"CreatedAt":"2019-09-19T22:46:38","Actor":"scalablecory","Number":"41221","RawContent":null,"Title":"HTTP2: optimize HPACK decoding.","State":"open","Body":"Our HPACK decoder looks like it can be improved. We should write some benchmarks and see if any optimizations can be made.","Url":"https://github.com/dotnet/corefx/issues/41221","RelatedDescription":"Open issue \"HTTP2: optimize HPACK decoding.\" (#41221)"},{"Id":"496034600","IsPullRequest":false,"CreatedAt":"2019-09-19T21:26:46","Actor":"stephentoub","Number":"41220","RawContent":null,"Title":"XmlSerializer.GenerateSerializer should not be in System.Private.Xml","State":"open","Body":"System.Private.Xml contains all of the code for generating an assembly as the core logic behind the sgen tool:\r\nhttps://github.com/dotnet/corefx/tree/master/src/Microsoft.XmlSerializer.Generator\r\nThe vast majority of the functionality here isn't used by anything other than sgen, which calls XmlSerializer.GenerateSerializer via reflection, and is the only caller of that method.  This functionality should be removed from XmlSerializer in System.Private.Xml and moved into sgen.","Url":"https://github.com/dotnet/corefx/issues/41220","RelatedDescription":"Open issue \"XmlSerializer.GenerateSerializer should not be in System.Private.Xml\" (#41220)"},{"Id":"496013367","IsPullRequest":true,"CreatedAt":"2019-09-19T20:35:04","Actor":"cston","Number":"41218","RawContent":null,"Title":"Additional enum tests for System.Linq.Expressions.Interpreter.CallInstruction","State":"open","Body":"Related to #40968","Url":"https://github.com/dotnet/corefx/pull/41218","RelatedDescription":"Open PR \"Additional enum tests for System.Linq.Expressions.Interpreter.CallInstruction\" (#41218)"},{"Id":"496006215","IsPullRequest":true,"CreatedAt":"2019-09-19T20:18:15","Actor":"dotnet-maestro[bot]","Number":"41216","RawContent":null,"Title":"[master] Update dependencies from 4 repositories","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19469.8\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19469.8\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/20/2019 4:11 AM\r\n- **Commit**: 33723cfa72892e93656fe53350da35835d64c099\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha1.19469.8\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190919.3\r\n- **Date Produced**: 9/19/2019 8:46 PM\r\n- **Commit**: e86323a36f4af8509073409a36972737176001f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19469.3\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.1\r\n- **Date Produced**: 9/20/2019 10:21 AM\r\n- **Commit**: ce5dfbb9ad62f95885748c7e95ebcd3ca453d1bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha1.19470.1\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19470.1\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41216","RelatedDescription":"Open PR \"[master] Update dependencies from 4 repositories\" (#41216)"},{"Id":"496000239","IsPullRequest":false,"CreatedAt":"2019-09-19T20:03:49","Actor":"scalablecory","Number":"41215","RawContent":null,"Title":"HTTP2: Support frame padding","State":"open","Body":"Consider adding support for frame padding in HTTP2. [The RFC](https://httpwg.org/specs/rfc7540.html#padding) is vague on the benefits of this as TLS itself also supports padding.","Url":"https://github.com/dotnet/corefx/issues/41215","RelatedDescription":"Open issue \"HTTP2: Support frame padding\" (#41215)"},{"Id":"496000156","IsPullRequest":false,"CreatedAt":"2019-09-19T20:03:38","Actor":"JamesWTruher","Number":"41214","RawContent":null,"Title":"Diagnostics.Process on OSX should try harder to provide ProcessName","State":"open","Body":"It seems like the ProcessName should be more than an empty string. On OSX this is pretty egregious as the first couple 100 processes don't have a name. Providing the path to the executable could be a very reasonable fallback. (or perhaps `pbi_name` has this already?)\r\n\r\nI know that proc id 0 is the exception to this rule, but still ProcessName should be useful.","Url":"https://github.com/dotnet/corefx/issues/41214","RelatedDescription":"Open issue \"Diagnostics.Process on OSX should try harder to provide ProcessName\" (#41214)"},{"Id":"495998989","IsPullRequest":false,"CreatedAt":"2019-09-19T20:00:41","Actor":"scalablecory","Number":"41213","RawContent":null,"Title":"HTTP2: Proxy over HTTP2","State":"open","Body":"Consider adding support for [CONNECT over HTTP2](https://httpwg.org/specs/rfc7540.html#CONNECT). The ability to multiplex streams could save precious latency.\r\n\r\nNot sure if any proxy servers support HTTP2 yet.","Url":"https://github.com/dotnet/corefx/issues/41213","RelatedDescription":"Open issue \"HTTP2: Proxy over HTTP2\" (#41213)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"496588006","IsPullRequest":true,"CreatedAt":"2019-09-21T00:02:15","Actor":"dotnet-bot","Number":"38790","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38790","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#38790)"},{"Id":"496586241","IsPullRequest":true,"CreatedAt":"2019-09-20T23:50:51","Actor":"jaredpar","Number":"38789","RawContent":null,"Title":"Enable more xUnit analyzer rules","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38789","RelatedDescription":"Open PR \"Enable more xUnit analyzer rules\" (#38789)"},{"Id":"496579831","IsPullRequest":true,"CreatedAt":"2019-09-20T23:12:59","Actor":"RikkiGibson","Number":"38788","RawContent":null,"Title":"Use default parameter values in flow analysis","State":"open","Body":"Closes #37903\r\n\r\n/cc @jcouv. This flows data around in a somewhat disjunct way but I felt that adding lots of additional return values (i.e. `ImmutableArray<BoundExpression> arguments, ImmutableArray<BoundExpression> argumentsNoConversions, ImmutableArray<Conversion> conversions`) which \"augment\" the original arrays with the default parameter values was also kind of clumsy.","Url":"https://github.com/dotnet/roslyn/pull/38788","RelatedDescription":"Open PR \"Use default parameter values in flow analysis\" (#38788)"},{"Id":"496578249","IsPullRequest":true,"CreatedAt":"2019-09-20T23:05:20","Actor":"dibarbet","Number":"38787","RawContent":null,"Title":"Allow selection in move type to file","State":"open","Body":"Currently, move type to file only works if you put the caret in the type name.  So use the new refactoring helpers to define the span where move type to file should be offered.","Url":"https://github.com/dotnet/roslyn/pull/38787","RelatedDescription":"Open PR \"Allow selection in move type to file\" (#38787)"},{"Id":"496572854","IsPullRequest":true,"CreatedAt":"2019-09-20T22:39:18","Actor":"jcouv","Number":"38786","RawContent":null,"Title":"Implement lambda discard parameters","State":"open","Body":"In the new language version, when more than one parameter of a lambda/delegate is an underscore, we allow it and bind them as discard parameter symbols (which are like regular parameters, but without names).\r\n\r\nhttps://github.com/dotnet/csharplang/issues/111","Url":"https://github.com/dotnet/roslyn/pull/38786","RelatedDescription":"Open PR \"Implement lambda discard parameters\" (#38786)"},{"Id":"496313036","IsPullRequest":true,"CreatedAt":"2019-09-20T22:00:06","Actor":"dotnet-bot","Number":"38780","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38780","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#38780)"},{"Id":"496480762","IsPullRequest":true,"CreatedAt":"2019-09-20T20:27:10","Actor":"jcouv","Number":"38785","RawContent":null,"Title":"Refresh features/compiler branch with latest bits from master","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38785","RelatedDescription":"Closed or merged PR \"Refresh features/compiler branch with latest bits from master\" (#38785)"},{"Id":"496463504","IsPullRequest":true,"CreatedAt":"2019-09-20T17:23:13","Actor":"gafter","Number":"38784","RawContent":null,"Title":"Add a comment explaining the recently added cycle detection code and its relation to the language specification.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38784","RelatedDescription":"Open PR \"Add a comment explaining the recently added cycle detection code and its relation to the language specification.\" (#38784)"},{"Id":"496439757","IsPullRequest":false,"CreatedAt":"2019-09-20T16:21:32","Actor":"0xd4d","Number":"38783","RawContent":null,"Title":"Operators are classified as methods in tooltips","State":"open","Body":"**Version Used**: VS 16.2\r\n\r\n**Steps to Reproduce**:\r\n\r\n- Hover over any of the operators below `==`, `!=`, `<`\r\n\r\n```C#\r\nnamespace ConsoleApp3\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            _ = 1 == 1;\r\n            _ = 1 != 1;\r\n            _ = 1 < 1;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThey get the same color as shown in the editor\r\n\r\n**Actual Behavior**:\r\n\r\nThey get the same color as methods\r\n\r\nThis also happens in the 'Find All References' window.","Url":"https://github.com/dotnet/roslyn/issues/38783","RelatedDescription":"Open issue \"Operators are classified as methods in tooltips\" (#38783)"},{"Id":"496400898","IsPullRequest":false,"CreatedAt":"2019-09-20T15:00:05","Actor":"hugoqribeiro","Number":"38782","RawContent":null,"Title":"Problem with using common .editorconfig file (imported in csproj) in Visual Studio 2019 Preview 4","State":"open","Body":"**Version Used**: \r\n\r\nVisual Studio 2019 Preview 4\r\nMicrosoft.CodeAnalysis.FxCopAnalyzers v2.9.4\r\n\r\n**Steps to Reproduce**:\r\n\r\nI want to streamlime code analysis and the respetive rules accross multiple projects and teams.\r\n\r\nWe used to do that by having a NuGet package that imported analyzers to projects (Microsoft.CodeAnalysis.FxCopAnalyzers and StyleCop.Analyzers) and defined a ruleset to define how each rule was handled by VS (error, warning, etc.).\r\n\r\nI have been trying to setup this using a common .editorconfig file instead of the ruleset. The problem is that settings like the following just seem to be ignored when the .editorconfig file is imported from a shared folder.\r\n\r\n```\r\ndotnet_diagnostic.CA1062.severity = error\r\n```\r\n\r\nFor the purpose of testing this, I have a very simple scenario that illustrates the problem.\r\n\r\nThe .editorconfig file is as follows:\r\n\r\n```\r\n[*.cs]\r\ndotnet_diagnostic.CA1062.severity = error\r\n#dotnet_code_quality.null_check_validation_methods = NotNull\r\n```\r\n\r\nNow this file is imported in a csproj like this:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>netstandard2.0</TargetFramework>\r\n    </PropertyGroup>\r\n    <Import Project=\"..\\..\\_Shared\\Build.props\" />\r\n    <ItemGroup>\r\n        <PackageReference Include=\"Microsoft.CodeAnalysis.FxCopAnalyzers\" Version=\"2.9.4\">\r\n            <PrivateAssets>All</PrivateAssets>\r\n        </PackageReference>\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\nBuild.props is like this:\r\n\r\n```\r\n<Project>\r\n    <PropertyGroup>\r\n    <SkipDefaultEditorConfigAsAdditionalFile>true</SkipDefaultEditorConfigAsAdditionalFile>\r\n    </PropertyGroup>\r\n    <ItemGroup Condition=\"Exists('$(MSBuildThisFileDirectory)\\.editorconfig')\" >\r\n        <AdditionalFiles Include=\"$(MSBuildThisFileDirectory)\\.editorconfig\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe following code is supposed to trigger an **error on CA1062** (validation of input):\r\n\r\n```\r\npublic int Calculate(InputData input)\r\n{\r\n    SmartGuard.NotNull(nameof(input), input);\r\n    if (this.Multiply)\r\n    {\r\n        return input.Value * 2;\r\n    }\r\n    else\r\n    {\r\n        return input.Value + 2;\r\n    }\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\nBut the result is a **warning**, which means that `CA1062.severity` is being ignored.\r\n\r\nNow, if I change .editorconfig and uncomment the second line:\r\n\r\n```\r\n[*.cs]\r\ndotnet_diagnostic.CA1062.severity = error\r\ndotnet_code_quality.null_check_validation_methods = NotNull\r\n```\r\n\r\nThe error goes way which means that `null_check_validation_methods` is being considered.\r\n\r\nWhy is that `CA1062.severity` is being ignored?\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/38782","RelatedDescription":"Open issue \"Problem with using common .editorconfig file (imported in csproj) in Visual Studio 2019 Preview 4\" (#38782)"},{"Id":"496318670","IsPullRequest":false,"CreatedAt":"2019-09-20T12:15:25","Actor":"NextTurn","Number":"38781","RawContent":null,"Title":"Static method isn't rendered in bold in nameof operator","State":"open","Body":"**Version Used**: Visual Studio 2019 Version 16.3\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\npublic static class Type\r\n{\r\n    public static int Field;\r\n\r\n    public static int Property { get; set; }\r\n\r\n    public static void Method()\r\n    {\r\n        _ = nameof(Type);\r\n        _ = nameof(Field);\r\n        _ = nameof(Property);\r\n        _ = nameof(Method); // Regular\r\n        System.Action action = Method; // Bold\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\n`Method` in `nameof` operator is rendered in bold.\r\n\r\n**Actual Behavior**:\r\n\r\n`Method` in `nameof` operator is rendered regularly.","Url":"https://github.com/dotnet/roslyn/issues/38781","RelatedDescription":"Open issue \"Static method isn't rendered in bold in nameof operator\" (#38781)"},{"Id":"496258255","IsPullRequest":false,"CreatedAt":"2019-09-20T09:51:56","Actor":"yyjdelete","Number":"38779","RawContent":null,"Title":"Avoid throw an first chance XmlException in `ISymbolExtensions.GetDocumentationComment()` when xmlText is empty?","State":"open","Body":"**Version Used**: \r\nmaster-vs-deps(9401294549bd1559b0b409f620ea639f309fe2b5)\r\nRelated to #36028\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Hover cursor on any params of non-override methods with document, or on any local vars in VS.\r\n\r\n**Expected Behavior**:\r\nNo first chance exceptions should be throw.\r\n\r\n**Actual Behavior**:\r\nAn `XmlException` is throw and catched. It's useless when `xmlText` is empty.","Url":"https://github.com/dotnet/roslyn/issues/38779","RelatedDescription":"Open issue \"Avoid throw an first chance XmlException in `ISymbolExtensions.GetDocumentationComment()` when xmlText is empty?\" (#38779)"},{"Id":"495755293","IsPullRequest":true,"CreatedAt":"2019-09-20T02:35:24","Actor":"dotnet-bot","Number":"38763","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38763","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#38763)"},{"Id":"496056501","IsPullRequest":false,"CreatedAt":"2019-09-19T22:31:52","Actor":"chborl","Number":"38778","RawContent":null,"Title":"Custom columns are blank when FAR on a literal","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  Open VS and create a console app with this code:\r\n```csharp\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            string s = \"asdf\";\r\n        }\r\n    }\r\n```\r\n2. Select the string `\"asdf\"`, right click, and choose Find All References\r\n3. If Containing Member, Containing Type, or Kind columns are not displayed, right click on the column labels in the FAR window and show them\r\n\r\n**Expected Behavior**:\r\nContaining Member should be Main\r\nContaining Type should be Program \r\nKind should be Read\r\n\r\n**Actual Behavior**:\r\nThe columns are empty","Url":"https://github.com/dotnet/roslyn/issues/38778","RelatedDescription":"Open issue \"Custom columns are blank when FAR on a literal\" (#38778)"},{"Id":"495966670","IsPullRequest":true,"CreatedAt":"2019-09-19T22:31:42","Actor":"kendrahavens","Number":"38768","RawContent":null,"Title":"Add latest features","State":"closed","Body":"Added 16.2 and 16.3 Preview features","Url":"https://github.com/dotnet/roslyn/pull/38768","RelatedDescription":"Closed or merged PR \"Add latest features\" (#38768)"},{"Id":"496049391","IsPullRequest":false,"CreatedAt":"2019-09-19T22:08:34","Actor":"vsfeedback","Number":"38777","RawContent":null,"Title":"Warning IDE0044 - not valid","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/734633/warning-ide0044-not-valid.html)._\n\n---\nThe following class gives a warning on the field Foo &quot;IDE0044 Make field readonly&quot; which seems invalid.\nPublic Class Class1\n    Private Foo(10) As Integer    ' or Dim Foo\n\nPublic Sub Bar()     ' or Private Sub\n        Foo(0) = 1\n    End Sub\nEnd Class\n\nAlso the &quot;Quick Actions&quot; provided are not valid, for example making it a property.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/16/2019, 02:14 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38777","RelatedDescription":"Open issue \"Warning IDE0044 - not valid\" (#38777)"},{"Id":"496049117","IsPullRequest":false,"CreatedAt":"2019-09-19T22:07:41","Actor":"vsfeedback","Number":"38776","RawContent":null,"Title":"Code Snippet replacement parameters do not respect spaces on insertion","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/734632/code-snippet-replacement-parameters-do-not-respect.html)._\n\n---\nWhat steps will reproduce the problem?\n1. Create a code snippet that includes a literal replacement variable declaration, where the placeholder is separated from succeeding text by one or more spaces, as in:\n\n```\n&lt;Snippet&gt;\n  &lt;Code Language=&quot;CSharp&quot;&gt;\n    &lt;![CDATA[\n      public class Serializer : JsonConverter&lt;$ClassName$&gt;\n      {\n          public override $ClassName$ ReadJson(JsonReader reader, Type objectType, $ClassName$ existingValue)\n          {\n          }\n      }\n    ]]&gt;\n  &lt;/Code&gt;\n  &lt;Declarations&gt;\n    &lt;Literal&gt;\n        &lt;ID&gt;ClassName&lt;/ID&gt;\n        &lt;ToolTip&gt;Specify the name of the class to convert.&lt;/ToolTip&gt;\n    &lt;/Literal&gt;\n  &lt;/Declarations&gt;\n&lt;/Snippet&gt;\n```\n\n2. Insert the snippet into a code file, press Tab, type the replacement parameter, e.g. &quot;MyClass&quot;, and then press Enter.\n3. Observe the inserted code.\n\nWhat is the expected output? What do you see instead?\n\nExpected:\n\n```\npublic class Serializer : JsonConverter&lt;MyClass&gt;\n{\n   public override MyClass ReadJson(JsonReader reader, Type objectType, MyClass existingValue)\n   {\n   }\n}\n```\n\nActual:\n\n```\npublic class Serializer : JsonConverter&lt;MyClass&gt;\n{\n   public override MyClassReadJson(JsonReader reader, Type objectType, MyClassexistingValue)\n   {\n   }\n}\n```\n\nPlease provide any additional information below.\n\nSpaces are removed after all instances of the inserted literal replacement parameter values, rendering the entire snippet feature no better than copy-and-paste, since the developer now has to manually examine the inserted code, searching for every occurrence of the substituted variable.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/16/2019, 02:42 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38776","RelatedDescription":"Open issue \"Code Snippet replacement parameters do not respect spaces on insertion\" (#38776)"},{"Id":"496048256","IsPullRequest":false,"CreatedAt":"2019-09-19T22:05:06","Actor":"vsfeedback","Number":"38775","RawContent":null,"Title":"IntelliSense uses wrong types for lambdas passed using named parameters","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/734521/intellisense-uses-wrong-types-for-lambdas-passed-u.html)._\r\n\r\n---\r\nIf you have a method which accepts multiple lambdas as arguments and use named parameters to pass the lambdas in a different order, IntelliSense within a passed lambda body will use the wrong types for completion against the lambda's parameters in the lambda body. That was a big sentence.\r\n\r\n```csharp\r\nvoid MethodWithMultipleLambdaArguments(\r\n    Action<(int x, int y)> action,\r\n    Action<IEnumerable<string>> checkThings = null)\r\n{\r\n    checkThings?.Invoke(new[]\r\n    {\r\n            \"a\",\r\n            \"b\",\r\n        });\r\n    action((1, 2));\r\n}\r\n\r\npublic void DoSomething()\r\n{\r\n    MethodWithMultipleLambdaArguments(checkThings: things =>\r\n    {\r\n        things.«here»\r\n    }, action: pair =>\r\n    {\r\n\r\n    });\r\n}\r\n```\r\n\r\nIf you take the above code in a C# class in Visual Studio, remove the “«here»”, and then try completion from where “«here»” was, you will see something like this:\r\n\r\n![autocompletion for `action`’s parameter shown when completing against `checkThings`’s parameter](https://i.imgur.com/RhFi3QR.png)\r\n\r\nI think that there is something like incomplete type information being calculated because the lambda has a syntax error, preventing it from being fully resolved by the C# compiler. However, in this case, with named parameters, and a limited number of possible matching method overrides (in this case, exactly one), the compiler should have enough information to calculate the correct types for the lambda’s parameter.\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Visual Studio Feedback System on 9/16/2019, 03:48 AM: \r\n\r\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n#### Nathan Phillip Brink (binki) on 9/16/2019, 06:43 AM: \r\n\r\n<p>P.S., in case it was not clear, the expected behavior would be to show the completions for `IEnumerable&lt;string&gt;` since that is the type of the `things` parameter.</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38775","RelatedDescription":"Open issue \"IntelliSense uses wrong types for lambdas passed using named parameters\" (#38775)"},{"Id":"496046150","IsPullRequest":false,"CreatedAt":"2019-09-19T21:58:37","Actor":"vsfeedback","Number":"38774","RawContent":null,"Title":"C# suggested parameter name is PascalCased","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/735864/c-suggested-parameter-name-is-pascalcased.html)._\n\n---\nWhat steps will reproduce the problem?\n1. Write out a method signature including parameters.\n2. After typing a parameter type, press space.\n\nWhat is the expected output? What do you see instead?\n\nI expect the C# language service to suggest a parameter name based on the type name in camelCase.\nInstead, it shows it to me in PascalCase.\n\n.NET naming has a very strong precedent for using camelCase for parameter names. C# used to do this properly, but it seems to have regressed recently.\nSee screenshot.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/16/2019, 08:27 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38774","RelatedDescription":"Open issue \"C# suggested parameter name is PascalCased\" (#38774)"},{"Id":"496040488","IsPullRequest":false,"CreatedAt":"2019-09-19T21:42:35","Actor":"vsfeedback","Number":"38773","RawContent":null,"Title":"IDE0009 claims `this.` must precede reference to local method in delegate constructor","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/726242/ide0009-claims-this-must-precede-reference-to-loca.html)._\n\n---\n[regression] [worked-in:16.3]\r\nWhat steps will reproduce the problem?\n\n1. Have an .editorconfig file with `dotnet_style_qualification_for_method = true:warning`\n1. Define a local method\n2. Use that local method name as the argument to a delegate constructor.\n\nWhat is the expected output? What do you see instead?\n\nI expect no warnings.\n\nI see an IDE0009 warning saying I must qualify the local method reference with `this.`.\nYet of course if I add `this.` then there's an error because local methods must not be qualified that way.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/8/2019, 11:40 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38773","RelatedDescription":"Open issue \"IDE0009 claims `this.` must precede reference to local method in delegate constructor\" (#38773)"},{"Id":"496039723","IsPullRequest":true,"CreatedAt":"2019-09-19T21:40:26","Actor":"jcouv","Number":"38772","RawContent":null,"Title":"Copy value from field on MarshalByRef object to call ToString()","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/37830","Url":"https://github.com/dotnet/roslyn/pull/38772","RelatedDescription":"Open PR \"Copy value from field on MarshalByRef object to call ToString()\" (#38772)"},{"Id":"496039585","IsPullRequest":false,"CreatedAt":"2019-09-19T21:40:04","Actor":"vsfeedback","Number":"38771","RawContent":null,"Title":"Switch expression conversion creates broken code due to unspecific var return","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/725942/switch-expression-conversion-creates-broken-code-d.html)._\n\n---\nHence the following code:\n\n```cs\nusing System;\n\nnamespace ConsoleApp1\n{\n    interface IFruit { }\n    class Apple : IFruit { }\n    class Banana : IFruit { }\n\nclass Program\n    {\n        static void Main(string[] args)\n        {\n            IFruit fruit;\n            switch (args[0])\n            {\n                case &quot;apple&quot;:\n                    fruit = new Apple();\n                    break;\n                case &quot;banana&quot;:\n                    fruit = new Banana();\n                    break;\n                default:\n                    throw new InvalidOperationException(&quot;Unknown fruit.&quot;);\n            }\n            Console.WriteLine(fruit. ToString());\n        }\n    }\n}\n```\n\nThe switch expression conversion suggests creating the following code:\n```\nvar fruit = (args[0]) switch // C8506 No best type was found for the switch expression.\n{\n    &quot;apple&quot; =&gt; new Apple(),\n    &quot;banana&quot; =&gt; new Banana(),\n    _ =&gt; throw new InvalidOperationException(&quot;Unknown fruit.&quot;),\n};\n```\n\nHowever, the use of `var` causes the error `No best type was found for the switch expression.` which should be `IFruit`. There is no helper to change `var` explicitly to `IFruit`. If the conversion would've taken the original declaration of `IFruit` or the nearest compatible type, there would have been no problem.\n```cs\nIFruit fruit = (args[0]) switch\n{\n    &quot;apple&quot; =&gt; new Apple(),\n    &quot;banana&quot; =&gt; new Banana(),\n    _ =&gt; throw new InvalidOperationException(&quot;Unknown fruit.&quot;),\n};\n```\n\nI don't expect helpers to create broken code; and it would be nice to have this fixed :-)\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/9/2019, 01:17 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38771","RelatedDescription":"Open issue \"Switch expression conversion creates broken code due to unspecific var return\" (#38771)"},{"Id":"496034616","IsPullRequest":false,"CreatedAt":"2019-09-19T21:26:49","Actor":"vsfeedback","Number":"38770","RawContent":null,"Title":"Ctrl+click a URL in a string literal takes you to the String class definition instead of following the link","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/716317/ctrlclick-a-url-in-a-string-literal-takes-you-to-t.html)._\n\n---\nWhat steps will reproduce the problem?\n1. Put a URL inside a C# string literal. Ex: &quot;https://github.com/dotnet/corefx/issues/30691&quot;\n2. Inside the VS C# editior, click the URL while holding the Ctrl key\n\nWhat is the expected output? What do you see instead?\n\nI expect for the URL to be opened in my default browser. Instead, I get taken to the System.String class metadata or a decompiled version of the System.String reference assembly (which all no-op, but that's another issue).\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 8/29/2019, 07:12 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38770","RelatedDescription":"Open issue \"Ctrl+click a URL in a string literal takes you to the String class definition instead of following the link\" (#38770)"},{"Id":"495994634","IsPullRequest":true,"CreatedAt":"2019-09-19T19:50:25","Actor":"333fred","Number":"38769","RawContent":null,"Title":"Support for reinferred lambdas in GetSymbolInfo and GetDeclaredSymbol","State":"open","Body":"We now support exposing reinferred lambda symbols via GetSymbolInfo. As part of this, we have to recreate any local or parameter symbols who's `ContainingSymbol` would have been the original lambda symbol. As part of that, I've created a simple reinferred variable tracker as part of the NullableWalker, that is mutable inside a single pass of the walker and has a hierarchy of previous passes. SemanticModel will now use this for getting reinferred local symbols instead of recreating the symbols itself. @dotnet/roslyn-compiler for review.","Url":"https://github.com/dotnet/roslyn/pull/38769","RelatedDescription":"Open PR \"Support for reinferred lambdas in GetSymbolInfo and GetDeclaredSymbol\" (#38769)"},{"Id":"495948115","IsPullRequest":false,"CreatedAt":"2019-09-19T18:03:31","Actor":"genlu","Number":"38767","RawContent":null,"Title":"MoveToNamespace should support moving a single type from global NS ","State":"open","Body":"Currently, this is supported only when the selected member is the only one declared in the global NS in the document.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/38767","RelatedDescription":"Open issue \"MoveToNamespace should support moving a single type from global NS \" (#38767)"},{"Id":"495933185","IsPullRequest":false,"CreatedAt":"2019-09-19T17:31:24","Actor":"johnrom","Number":"38766","RawContent":null,"Title":"Feature Request: NewLinesForBracesInMethodsWithMultilineParameters","State":"open","Body":"I was directed here from an `omnisharp-vscode` issue: https://github.com/OmniSharp/omnisharp-vscode/issues/3283\r\n\r\nWith dependency injection. I like my constructors formatted like this:\r\n\r\n```\r\npublic MyClass(\r\n    MyClass2 myClass2,\r\n    MyClass3 myClass3\r\n) {\r\n    _myClass2 = myClass2;\r\n    _myClass3 = myClass3;\r\n}\r\n```\r\n\r\nHowever, the best I can do (that I know of) with the options given is:\r\n\r\n```\r\npublic MyClass(\r\n    MyClass2 myClass2,\r\n    MyClass3 myClass3\r\n) \r\n{ // gross\r\n    _myClass2 = myClass2;\r\n    _myClass3 = myClass3;\r\n}\r\n```\r\n\r\nIs it possible to add a special option for that case? I'd still like a child constructor to appear like this:\r\n\r\n```\r\npublic MyClass(\r\n    MyClass2 myClass2,\r\n    MyClass3 myClass3\r\n) : base(myClass2, myClass3)\r\n{\r\n    _myClass2 = myClass2;\r\n    _myClass3 = myClass3;\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38766","RelatedDescription":"Open issue \"Feature Request: NewLinesForBracesInMethodsWithMultilineParameters\" (#38766)"},{"Id":"495928860","IsPullRequest":false,"CreatedAt":"2019-09-19T17:21:32","Actor":"333fred","Number":"38765","RawContent":null,"Title":"BoundBadExpression.Symbols has null elements","State":"open","Body":"When we assume that `BoundBadExpression.Symbols` contains no nulls, ImplicitArrayCreationExpression_Error_NonArrayInitExpr, TestPragmaWarningOnEveryNodes, and DontCrash all fail, as the array does have null elements. This is likely a bug in the compiler and we should fix that. When that's fixed, the annotation of the array should be updated back to `ImmutableArray<Symbol>`","Url":"https://github.com/dotnet/roslyn/issues/38765","RelatedDescription":"Open issue \"BoundBadExpression.Symbols has null elements\" (#38765)"},{"Id":"495654755","IsPullRequest":false,"CreatedAt":"2019-09-19T14:41:29","Actor":"AdamSpeight2008","Number":"38761","RawContent":null,"Title":"The SyntaxKind Enum could be in a separate library.","State":"closed","Body":"The `SyntaxKind Enum` should be in a separate library, as its source is duplicated in multiple projects in the solution. eg `Microsoft.CodeAnalysis.VisualBasic` and `VisualBasicSyntaxGenerator` \r\nThis also the same for CSharp projects.\r\n\r\nMaybe we should start to separate them out, along with the helper methods, to a library dll. So there isn't a mismatch.","Url":"https://github.com/dotnet/roslyn/issues/38761","RelatedDescription":"Closed issue \"The SyntaxKind Enum could be in a separate library.\" (#38761)"},{"Id":"495758521","IsPullRequest":true,"CreatedAt":"2019-09-19T12:09:41","Actor":"dotnet-maestro[bot]","Number":"38764","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/38764","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#38764)"},{"Id":"495742810","IsPullRequest":false,"CreatedAt":"2019-09-19T11:34:43","Actor":"drewnoakes","Number":"38762","RawContent":null,"Title":"Expand selection on method should include XML docs","State":"open","Body":"**Version Used**: 16.4.0-pre.2.0+29318.173.master\r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nclass C\r\n{\r\n    /// <summary>A method</summary>\r\n    void M()\r\n    {\r\n    }\r\n}\r\n```\r\n\r\n1. With the caret inside method `M`, invoke _Expand Selection_ until the selection spans `void M() { }`\r\n2. Invoke _Expand Selection_ again\r\n\r\n**Expected Behavior**:\r\n\r\nSelection expands to include XML doc and method body.\r\n\r\n**Actual Behavior**:\r\n\r\nEnsure class `C` is selected.\r\n\r\n\r\nThis makes it hard to perform follow on actions such as:\r\n\r\n- comment entire method without leaving invalid dangling documentation\r\n- cut method to clipboard to paste somewhere else","Url":"https://github.com/dotnet/roslyn/issues/38762","RelatedDescription":"Open issue \"Expand selection on method should include XML docs\" (#38762)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"496108391","IsPullRequest":false,"CreatedAt":"2019-09-20T02:21:36","Actor":"Unreal-System","Number":"7795","RawContent":null,"Title":".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.","State":"open","Body":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds.","Url":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Open issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795)"},{"Id":"494589847","IsPullRequest":true,"CreatedAt":"2019-09-17T14:13:36","Actor":"Dotnet-GitSync-Bot","Number":"7794","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7794)"},{"Id":"494273259","IsPullRequest":true,"CreatedAt":"2019-09-16T23:13:23","Actor":"Dotnet-GitSync-Bot","Number":"7793","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub","Url":"https://github.com/dotnet/corert/pull/7793","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7793)"},{"Id":"493430075","IsPullRequest":false,"CreatedAt":"2019-09-16T15:38:33","Actor":"RalfKornmannEnvision","Number":"7790","RawContent":null,"Title":"GC on ARM64 based \"kind of unix\" system","State":"closed","Body":"I am sorry to bother again. After fixing some more minor issues and brush up my ARM64 assembler knowledge I was finally able to run a simple hello world on my ARM64 system without crashing. Doing things like writing to the log (the system doesn't have a text based console at all), Thread.Sleep, Environment.TickCount, printing the command line arguments etc works fine. But than I made the \"mistake\" to trigger the GC. \r\n\r\nTo make a long story short after some more debugging I noticed that the unwind of the stack does not work. The reason was pretty obvious. Libunwind doesn't have any information about the function were the stack walk should be started. I am aware that there are some parts missing for ARM64 targets that I need to fill but there is one question I was not able to answer so far. Does the GC only need unwind information for the managed code part? Or do I need to provide information for the C/C++ parts and even the dynamic libs of the OS? I am aware that libunwind can fetch these information by it's own. Unfortunately the function that it uses for this is not supported by the OS my system is using.  I may be able to get the unwind sections from the runtime C/C++ code.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7790","RelatedDescription":"Closed issue \"GC on ARM64 based \"kind of unix\" system\" (#7790)"},{"Id":"493684541","IsPullRequest":true,"CreatedAt":"2019-09-15T07:35:11","Actor":"Dotnet-GitSync-Bot","Number":"7792","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7792","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7792)"},{"Id":"493500562","IsPullRequest":true,"CreatedAt":"2019-09-14T14:02:26","Actor":"MichalStrehovsky","Number":"7791","RawContent":null,"Title":"Fix casting to pointers","State":"closed","Body":"Porting a fix made for .NET Native.\r\n\r\nA popular game engine has a `castclass void*` IL instruction in one of the generated files it ships with. This construct is weird enough that it crashes the .NET Native compiler. It doesn't crash the CoreRT compiler, but we still want the runtime side of the fix.","Url":"https://github.com/dotnet/corert/pull/7791","RelatedDescription":"Closed or merged PR \"Fix casting to pointers\" (#7791)"},{"Id":"492984849","IsPullRequest":true,"CreatedAt":"2019-09-13T13:52:21","Actor":"Dotnet-GitSync-Bot","Number":"7789","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @NextTurn","Url":"https://github.com/dotnet/corert/pull/7789","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7789)"},{"Id":"489459547","IsPullRequest":true,"CreatedAt":"2019-09-12T19:12:20","Actor":"cshung","Number":"7775","RawContent":null,"Title":"[WIP] Complete the filtering for MethodImpl.AggressiveOptimization","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7775","RelatedDescription":"Closed or merged PR \"[WIP] Complete the filtering for MethodImpl.AggressiveOptimization\" (#7775)"},{"Id":"492918947","IsPullRequest":true,"CreatedAt":"2019-09-12T19:11:42","Actor":"Dotnet-GitSync-Bot","Number":"7788","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @TylerBrinkley @tarekgh @obligaron @marek-safar @jkotas @sywhang","Url":"https://github.com/dotnet/corert/pull/7788","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7788)"},{"Id":"491162081","IsPullRequest":true,"CreatedAt":"2019-09-11T00:16:26","Actor":"Dotnet-GitSync-Bot","Number":"7786","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7786","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7786)"},{"Id":"490571600","IsPullRequest":true,"CreatedAt":"2019-09-09T17:52:58","Actor":"davidwrighton","Number":"7779","RawContent":null,"Title":"Resource writing","State":"closed","Body":"- Refactor the win32 resource reading code to use more natural managed data structures\r\n- Build a Win32 resource emitter on top of refactored data structures\r\n- Replace resource section copy logic with new node to generate win32 resources","Url":"https://github.com/dotnet/corert/pull/7779","RelatedDescription":"Closed or merged PR \"Resource writing\" (#7779)"},{"Id":"491229182","IsPullRequest":false,"CreatedAt":"2019-09-09T17:33:38","Actor":"RalfKornmannEnvision","Number":"7787","RawContent":null,"Title":"finally funclets brocken for ARM64!?","State":"open","Body":"I am not sure if this is a corert or coreclr issue but as I am working on a corert port for an custom ARM64 system I start with posting it here.\r\n\r\nAfter adding code to the objectwriter and the ilcompiler I managed to get a simple hello world app running to the main method. But it than crashed during the shutdown. After some debugging i figured out that the static constructors are never called. After some more debugging I noticed that ClassConstructorRunner.GetCctor corrupts the stack frame,\r\n\r\nIt happens at the end of the method in an assembler block that i believe is the finally funclet for the using. It looks like this\r\n\r\n  28667c: a9be7bfd stp x29, x30, [sp, #-32]!\r\n  286680: f90013f3 str x19, [sp, #32]\r\n  286684: 9103a3a0 add x0, x29, #0xe8\r\n  286688: 97fc0d42 bl 189b90 <S_P_CoreLib_System_Threading_LockHolder__Dispose>\r\n  28668c: d503201f nop\r\n  286690: d503201f nop\r\n  286694: f94013f3 ldr x19, [sp, #32]\r\n  286698: a8c27bfd ldp x29, x30, [sp], #32\r\n  28669c: d65f03c0 ret\r\n\r\nThe fact that x19 is stored with an offset of 32 looks strange for me and it overwrites the already stored data. Based on other stackframes I would expect an offset of 16 here. Or the new stackframe for the funclet needs to be 16 bytes larger.\r\n\r\nDisclaimer: As the development system for the custom ARM64 system runs on windows I although use a ARM64 jit that is build to run on X64. Very simular to the protonojit but not as alt jit to get all the data needed to write the arm64 elf file that the linker for the custom ARM64 system needs. Unfortunately I don't have an ARM64 windows or linux system to check if a non cross jit generates the same code.\r\n\r\nI assume there is no ready to use jit for my use case and I need to build it anyway. In this case I could properly fix the issue but I would need a hint how the code is expected to look like.  ","Url":"https://github.com/dotnet/corert/issues/7787","RelatedDescription":"Open issue \"finally funclets brocken for ARM64!?\" (#7787)"},{"Id":"490799316","IsPullRequest":true,"CreatedAt":"2019-09-08T23:57:41","Actor":"MichalStrehovsky","Number":"7785","RawContent":null,"Title":"Mark unsafe intrinsics as reflection blocked","State":"closed","Body":"Keeping these reflection enabled pulls in quite a bit of junk (generic dictionaries, standalone method bodies, bookkeeping) that adds up to 1.5% of the size of Hello World...","Url":"https://github.com/dotnet/corert/pull/7785","RelatedDescription":"Closed or merged PR \"Mark unsafe intrinsics as reflection blocked\" (#7785)"},{"Id":"490775070","IsPullRequest":false,"CreatedAt":"2019-09-08T21:11:53","Actor":"mrzaxaryan","Number":"7784","RawContent":null,"Title":"Non-trivial marshalling is not yet supported by this compiler.","State":"closed","Body":"Can't save image to MemoryStream \r\n.NET Core v3.0.0-preview9\r\nVisual Studio 16.3.0 Preview 3.0\r\nException: `System.Exception: Method '[System.Drawing.Common]System.Drawing.SafeNativeMethods+Gdip.GdipSaveImageToStream(HandleRef,IStream,Guid&,HandleRef)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdipSaveImageToStream(HandleRef, Interop.Ole32.IStream, Guid&, HandleRef) + 0x39\r\n   at System.Drawing.Image.Save(Stream, ImageCodecInfo, EncoderParameters) + 0x1af`\r\n","Url":"https://github.com/dotnet/corert/issues/7784","RelatedDescription":"Closed issue \"Non-trivial marshalling is not yet supported by this compiler.\" (#7784)"},{"Id":"490757817","IsPullRequest":true,"CreatedAt":"2019-09-08T20:09:59","Actor":"MichalStrehovsky","Number":"7782","RawContent":null,"Title":"Port GC changes from CoreCLR","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/commit/cd42ee8fe410f71026467ad2e90116115b85f68d\r\nPorts https://github.com/dotnet/coreclr/commit/740752c9d206a465e96a4d01e7dafb6adb6ded63","Url":"https://github.com/dotnet/corert/pull/7782","RelatedDescription":"Closed or merged PR \"Port GC changes from CoreCLR\" (#7782)"},{"Id":"490760342","IsPullRequest":true,"CreatedAt":"2019-09-08T20:08:39","Actor":"MichalStrehovsky","Number":"7783","RawContent":null,"Title":"Update CoreFX","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7783","RelatedDescription":"Closed or merged PR \"Update CoreFX\" (#7783)"},{"Id":"490704961","IsPullRequest":true,"CreatedAt":"2019-09-08T05:12:25","Actor":"Dotnet-GitSync-Bot","Number":"7781","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7781","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7781)"},{"Id":"490412146","IsPullRequest":true,"CreatedAt":"2019-09-08T00:46:12","Actor":"trylek","Number":"7777","RawContent":null,"Title":"Output raw test lists for the individual outcomes from SuperIlc","State":"closed","Body":"This change tweaks SuperIlc to emit simple line-oriented test lists\r\nfor the various compilation and execution outcomes. I found this\r\nquite useful for comparing various runs. I have also deleted a bit\r\nof dead code I noticed.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7777","RelatedDescription":"Closed or merged PR \"Output raw test lists for the individual outcomes from SuperIlc\" (#7777)"},{"Id":"490662770","IsPullRequest":false,"CreatedAt":"2019-09-07T17:55:27","Actor":"nexon33","Number":"7780","RawContent":null,"Title":"Implement GetInterfaceMap","State":"open","Body":"I want to be able to render a view in asp.net core, I need the controller inheritance to be able to call View();\r\nIs there any simple way of doing this or should I forget about it for now?","Url":"https://github.com/dotnet/corert/issues/7780","RelatedDescription":"Open issue \"Implement GetInterfaceMap\" (#7780)"},{"Id":"490072419","IsPullRequest":true,"CreatedAt":"2019-09-06T23:34:35","Actor":"davidwrighton","Number":"7776","RawContent":null,"Title":"Partial compilation and generic ibc processing","State":"closed","Body":"- Support for partial compilation\r\n- Support for parsing generics in IBC data\r\n - Bonus feature of searching referenced and input assemblies for types if the module in the IBC data is invalid","Url":"https://github.com/dotnet/corert/pull/7776","RelatedDescription":"Closed or merged PR \"Partial compilation and generic ibc processing\" (#7776)"},{"Id":"490437186","IsPullRequest":true,"CreatedAt":"2019-09-06T22:57:58","Actor":"Dotnet-GitSync-Bot","Number":"7778","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7778","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7778)"},{"Id":"489360143","IsPullRequest":true,"CreatedAt":"2019-09-05T19:38:18","Actor":"fadimounir","Number":"7772","RawContent":null,"Title":"Compile cross-module generics in the same version bubble.","State":"closed","Body":"This work is related to the single-exe prototype, but after discussing with @davidwrighton, these are changes that we can have in master as well.\r\n\r\nCompiling generics from external modules in the version bubble is enabled using a command line switch.\r\n\r\nOther changes: Changing signatures in hashtable of instantiations to include owning type as a way of encoding the module override info\r\n","Url":"https://github.com/dotnet/corert/pull/7772","RelatedDescription":"Closed or merged PR \"Compile cross-module generics in the same version bubble.\" (#7772)"},{"Id":"489380977","IsPullRequest":true,"CreatedAt":"2019-09-05T14:33:56","Actor":"MichalStrehovsky","Number":"7773","RawContent":null,"Title":"Get jitwrapper building on x86","State":"closed","Body":"CoreCLR repo is going to build it that way. I could exclude that outside x64, but it's just better to fix it...","Url":"https://github.com/dotnet/corert/pull/7773","RelatedDescription":"Closed or merged PR \"Get jitwrapper building on x86\" (#7773)"},{"Id":"488748576","IsPullRequest":true,"CreatedAt":"2019-09-05T13:42:32","Actor":"janvorli","Number":"7767","RawContent":null,"Title":"Implement SystemV AMD64 ABI struct classification","State":"closed","Body":"This change implements SystemV AMD64 ABI struct classification necessary\r\nfor correct passing of function arguments of struct types and returning\r\nthese by value on Unix AMD64.\r\n\r\nThis change is a port of the CoreCLR version with necessary changes to reflect differences in the type system interface between CoreRT and CoreCLR. I have also added caching of the classification result as JIT calls classification for the same type many times.","Url":"https://github.com/dotnet/corert/pull/7767","RelatedDescription":"Closed or merged PR \"Implement SystemV AMD64 ABI struct classification\" (#7767)"},{"Id":"489406467","IsPullRequest":true,"CreatedAt":"2019-09-04T23:16:31","Actor":"Dotnet-GitSync-Bot","Number":"7774","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @NextTurn","Url":"https://github.com/dotnet/corert/pull/7774","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7774)"},{"Id":"488925681","IsPullRequest":true,"CreatedAt":"2019-09-04T16:39:39","Actor":"Dotnet-GitSync-Bot","Number":"7771","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7771","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7771)"},{"Id":"488893657","IsPullRequest":true,"CreatedAt":"2019-09-04T02:16:33","Actor":"Dotnet-GitSync-Bot","Number":"7770","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7770","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7770)"},{"Id":"488826953","IsPullRequest":true,"CreatedAt":"2019-09-04T01:18:56","Actor":"Dotnet-GitSync-Bot","Number":"7769","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7769","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7769)"},{"Id":"488782037","IsPullRequest":true,"CreatedAt":"2019-09-03T21:33:47","Actor":"trylek","Number":"7768","RawContent":null,"Title":"Minor triage improvement in SuperIlc","State":"closed","Body":"For tests with unhandled runtime exceptions, we can improve SuperIlc\r\ntriage by using the exception as the triage string instead of just\r\nreporting a non-zero exit code. Part of the logic already existed\r\nbut it apparently had a typo in the exception message check due to\r\nwhich it failed to kick in.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7768","RelatedDescription":"Closed or merged PR \"Minor triage improvement in SuperIlc\" (#7768)"},{"Id":"488732123","IsPullRequest":true,"CreatedAt":"2019-09-03T19:16:49","Actor":"trylek","Number":"7766","RawContent":null,"Title":"Update RyuJIT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7766","RelatedDescription":"Closed or merged PR \"Update RyuJIT\" (#7766)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"496402326","IsPullRequest":false,"CreatedAt":"2019-09-20T15:02:40","Actor":"rainersigwald","Number":"3662","RawContent":null,"Title":"ReferenceCopyLocalPaths no longer content NuGetSourceType metadata","State":"open","Body":"_From @joeltankam on Friday, September 20, 2019 2:22:39 PM_\r\n\r\n### Steps to reproduce\r\n\r\nI encounter some missing metadata to `ReferenceCopyLocalPaths` item since migrating to `Microsoft.NET.Sdk` format in project files.\r\n\r\nLets consider the following project file :\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net471</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nI use the following code to print metadata from `ReferenceCopyLocalPaths` items : \r\n\r\n```xml\r\n  <UsingTask TaskName=\"GetMetadataTask\" TaskFactory=\"CodeTaskFactory\" AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.v4.0.dll\" >\r\n    <ParameterGroup>\r\n      <Items ParameterType=\"Microsoft.Build.Framework.ITaskItem[]\" Required=\"true\" />\r\n      <MetadataString Output=\"true\" />\r\n    </ParameterGroup>\r\n    <Task>\r\n      <Using Namespace=\"System\"/>\r\n      <Code Type=\"Fragment\" Language=\"cs\">\r\n        <![CDATA[\r\n            StringBuilder metadata = new StringBuilder();\r\n            foreach (var item in Items)\r\n            {\r\n                metadata.AppendFormat(\"{0}\\r\\n\", item);\r\n                foreach (string name in item.MetadataNames)\r\n                {\r\n                    metadata.AppendFormat(\"  {0}={1}\\r\\n\", name, item.GetMetadata(name));\r\n                }\r\n                metadata.AppendFormat(\"\\r\\n\");\r\n            }\r\n            MetadataString = metadata.ToString();\r\n        ]]>\r\n      </Code>\r\n    </Task>\r\n  </UsingTask>\r\n\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveAssemblyReferences\">\r\n    <ItemGroup>\r\n      <PrintItems Include=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\" />\r\n    </ItemGroup>\r\n    <GetMetadataTask Items=\"@(PrintItems)\">\r\n      <Output TaskParameter=\"MetadataString\" PropertyName=\"MyBeautifulMetadata\"/>\r\n    </GetMetadataTask>\r\n    <Message Importance=\"High\" Text=\"$(MyBeautifulMetadata)\" />\r\n  </Target>\r\n```\r\n\r\n### Expected  behavior\r\nWhen using old project files format, I had the following metadata : \r\n\r\n```txt\r\n  ItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\n### Actual behavior\r\n\r\nNow I get the following : \r\n\r\n```txt\r\nItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\nThe difference being the absence of : \r\n\r\n```txt\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n```\r\n\r\nHowever, I need the `NuGetSourceType` metadata in my build process. \r\nIs there please any reason why this this metadata disappeared ? Is there a way to set it back ?\r\n\r\nI currently use this custom target to set back `NuGetSourceType` :\r\n\r\n```xml\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveReferences\">\r\n    <ItemGroup>\r\n      <ReferenceCopyLocalPaths Update=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\">\r\n        <NuGetSourceType>Package</NuGetSourceType>\r\n      </ReferenceCopyLocalPaths>\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\n\r\n### Environment data\r\n`msbuild /version` output: 15.9.21.664\r\n.NET Core SDK version : 2.2.108\r\nVisual Studio : Professional 2017, v 15.9.16\r\n\r\n\r\n_Copied from original issue: microsoft/msbuild#4754_","Url":"https://github.com/dotnet/sdk/issues/3662","RelatedDescription":"Open issue \"ReferenceCopyLocalPaths no longer content NuGetSourceType metadata\" (#3662)"},{"Id":"494301303","IsPullRequest":false,"CreatedAt":"2019-09-19T23:50:33","Actor":"wli3","Number":"3649","RawContent":null,"Title":"Add DefaultAppHostRuntimeIdentifier support for ARM and ARM64","State":"closed","Body":"https://github.com/dotnet/sdk/blob/fe6b50c78426124e34e56ecb7df8b6b86e6e0b48/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.RuntimeIdentifierInference.targets#L118\r\n\r\ndoes not consider ARM and ARM64","Url":"https://github.com/dotnet/sdk/issues/3649","RelatedDescription":"Closed issue \"Add DefaultAppHostRuntimeIdentifier support for ARM and ARM64\" (#3649)"},{"Id":"496051527","IsPullRequest":false,"CreatedAt":"2019-09-19T22:15:19","Actor":"billwert","Number":"3661","RawContent":null,"Title":"PrepareForReadyToRunCompilation task fails on 5.0","State":"open","Body":"Trying to publish with ready to run on a console app with the 5.0 SDK fails as below.\r\n\r\ncc: @nguerrera @fadimounir \r\n\r\n```console\r\nC:\\test>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-014713\r\n Commit:    60688b13db\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18986\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha1.19468.6\r\n  Commit:  30c4a25a9a\r\n\r\n.NET Core SDKs installed:\r\n  5.0.100-alpha1-014713 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.0-alpha1.19468.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.0-alpha1.19468.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-alpha1.19468.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n```console\r\nC:\\test>dotnet publish -c Release -bl /p:PublishReadyToRun=true -r win-x64\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19456-02+ee8294b55 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\MSBuild.dll -bl -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\dotnet.dll -maxcpucount -property:Configuration=Release -property:RuntimeIdentifier=win-x64 /p:PublishReadyToRun=true -restore -target:Publish -verbosity:m .\\test.csproj\r\n  Restore completed in 2.38 sec for C:\\test\\test.csproj.\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n  test -> C:\\test\\bin\\Release\\netcoreapp3.0\\win-x64\\test.dll\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: The \"PrepareForReadyToRunCompilation\" task failed unexpectedly. [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: System.InvalidOperationException: Sequence contains more than one element [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.ThrowHelper.ThrowMoreThanOneElementException() [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source) [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.PrepareForReadyToRunCompilation.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/PrepareForReadyToRunCompilation.cs:line 69 [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\test\\test.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3661","RelatedDescription":"Open issue \"PrepareForReadyToRunCompilation task fails on 5.0\" (#3661)"},{"Id":"495449618","IsPullRequest":true,"CreatedAt":"2019-09-19T16:35:52","Actor":"wli3","Number":"3657","RawContent":null,"Title":"Default app host runtime identifier for arm and arm64","State":"closed","Body":"Fix https://github.com/dotnet/sdk/issues/3649\r\n\r\nDue to https://github.com/dotnet/sdk/issues/3636 I cannot test it. And https://github.com/dotnet/sdk/issues/3636 's fix will be in core-sdk. So I think we should check it in for now.","Url":"https://github.com/dotnet/sdk/pull/3657","RelatedDescription":"Closed or merged PR \"Default app host runtime identifier for arm and arm64\" (#3657)"},{"Id":"495755187","IsPullRequest":true,"CreatedAt":"2019-09-19T12:02:08","Actor":"dotnet-maestro[bot]","Number":"3660","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3660","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3660)"},{"Id":"495642530","IsPullRequest":false,"CreatedAt":"2019-09-19T08:13:09","Actor":"thomaslevesque","Number":"3659","RawContent":null,"Title":"SDK 3.0 RC1 installer doesn't uninstall 3.0 preview 7","State":"open","Body":"As I understand it, .NET Core 3 SDK installer is supposed to uninstall previous versions.\r\nHowever, I had preview7 and just installed RC1, and preview7 wasn't removed:\r\n\r\n```\r\n> dotnet --info\r\n...\r\n    .NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\nIs this expected?\r\n\r\nAlso, preview7 no longer appears in \"Apps and features\", so I'm not sure how to remove it...","Url":"https://github.com/dotnet/sdk/issues/3659","RelatedDescription":"Open issue \"SDK 3.0 RC1 installer doesn't uninstall 3.0 preview 7\" (#3659)"},{"Id":"495584268","IsPullRequest":true,"CreatedAt":"2019-09-19T05:40:40","Actor":"nguerrera","Number":"3658","RawContent":null,"Title":"Speed up tests","State":"open","Body":"Hacked up implementation for now, draft to measure impact in PR validation. Not ready for review","Url":"https://github.com/dotnet/sdk/pull/3658","RelatedDescription":"Open PR \"Speed up tests\" (#3658)"},{"Id":"493793478","IsPullRequest":false,"CreatedAt":"2019-09-18T20:57:29","Actor":"wli3","Number":"3648","RawContent":null,"Title":"[Investigate] Test the build of c# -> C++ -> C# works or not","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/issues/3648","RelatedDescription":"Closed issue \"[Investigate] Test the build of c# -> C++ -> C# works or not\" (#3648)"},{"Id":"494904114","IsPullRequest":true,"CreatedAt":"2019-09-18T18:17:46","Actor":"wli3","Number":"3652","RawContent":null,"Title":"Block non library","State":"closed","Body":"Instead of blocking exe only, considering there are also StaticLibrary and empty (utility)","Url":"https://github.com/dotnet/sdk/pull/3652","RelatedDescription":"Closed or merged PR \"Block non library\" (#3652)"},{"Id":"494997302","IsPullRequest":true,"CreatedAt":"2019-09-18T05:30:50","Actor":"livarcocc","Number":"3656","RawContent":null,"Title":"Change the installed 2.2 runtime to 2.2.7.","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3656","RelatedDescription":"Open PR \"Change the installed 2.2 runtime to 2.2.7.\" (#3656)"},{"Id":"494996231","IsPullRequest":false,"CreatedAt":"2019-09-18T05:26:58","Actor":"mmitche","Number":"3655","RawContent":null,"Title":"Reenable Helix perf on 3.0.1xx ","State":"open","Body":"Re-enable helix perf on 3.0.1xx. Removed at: https://github.com/dotnet/sdk/pull/3654","Url":"https://github.com/dotnet/sdk/issues/3655","RelatedDescription":"Open issue \"Reenable Helix perf on 3.0.1xx \" (#3655)"},{"Id":"494995531","IsPullRequest":true,"CreatedAt":"2019-09-18T05:25:16","Actor":"mmitche","Number":"3654","RawContent":null,"Title":"Remove perf from builds","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3654","RelatedDescription":"Closed or merged PR \"Remove perf from builds\" (#3654)"},{"Id":"494906082","IsPullRequest":true,"CreatedAt":"2019-09-18T05:15:21","Actor":"dotnet-maestro[bot]","Number":"3653","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.0.6251\r\n- **Date Produced**: 9/17/2019 11:35 PM\r\n- **Commit**: b75150f2f4127a77a166c9552845e86fb24a3282\r\n- **Branch**: refs/heads/release-5.3.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.0-rtm.6251\r\n\r\n[marker]: <> (End:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3653","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from nuget/nuget.client\" (#3653)"},{"Id":"494846089","IsPullRequest":false,"CreatedAt":"2019-09-17T20:52:01","Actor":"wli3","Number":"3651","RawContent":null,"Title":"Block ConfigurationType = \"StaticLibrary\" and \"\" (utility)","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/issues/3651","RelatedDescription":"Open issue \"Block ConfigurationType = \"StaticLibrary\" and \"\" (utility)\" (#3651)"},{"Id":"494423594","IsPullRequest":false,"CreatedAt":"2019-09-17T06:18:24","Actor":"dasMulli","Number":"3650","RawContent":null,"Title":"Warn on publishing solutions / path forward for publishing solutions","State":"open","Body":"There are many issues with doing a publish on solution files.\r\n\r\nI suggest emitting a Warning when trying to do so. I think this may be possible through solution extension points.\r\n\r\nso `dotnet publish the.sln` would emit something like `NETSDK999: Publishing whole solutions can lead to unintended side-effects`.\r\nThis could then be disabled with `dotnet publish the.sln -p:WarnOnPublishingSolutions=False`.\r\n\r\nWhile there are suggestions of allowing base paths for solution publishing to create folders for each project are possible, it has a few edge cases (same csproj names in different solution folders etc.).","Url":"https://github.com/dotnet/sdk/issues/3650","RelatedDescription":"Open issue \"Warn on publishing solutions / path forward for publishing solutions\" (#3650)"},{"Id":"493792608","IsPullRequest":false,"CreatedAt":"2019-09-16T22:11:30","Actor":"wli3","Number":"3647","RawContent":null,"Title":"[Investigate] Setting Runtimeidentifier in C++ props and target might not be needed","State":"closed","Body":"It works today without setting it. Need to understand how we derive the RID. And ensure it is ok not setting it","Url":"https://github.com/dotnet/sdk/issues/3647","RelatedDescription":"Closed issue \"[Investigate] Setting Runtimeidentifier in C++ props and target might not be needed\" (#3647)"},{"Id":"493678850","IsPullRequest":true,"CreatedAt":"2019-09-15T00:05:26","Actor":"dotnet-bot","Number":"3646","RawContent":null,"Title":"Merge release/3.0.100-preview9 to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.100-preview9-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/3.0.100-preview9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.100-preview9-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3646","RelatedDescription":"Open PR \"Merge release/3.0.100-preview9 to release/3.0.1xx\" (#3646)"},{"Id":"493651275","IsPullRequest":true,"CreatedAt":"2019-09-14T18:13:58","Actor":"lg2de","Number":"3645","RawContent":null,"Title":"do not overwrite \"all warnings as errors\" (fixes #3613)","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3645","RelatedDescription":"Open PR \"do not overwrite \"all warnings as errors\" (fixes #3613)\" (#3645)"},{"Id":"493446026","IsPullRequest":false,"CreatedAt":"2019-09-14T17:13:03","Actor":"wjk","Number":"3638","RawContent":null,"Title":"Package restore can't find runtime packs when explicit RID specified","State":"closed","Body":"When I try to restore a project that contains one or more RIDs specified in the project file `RuntimeIdentifiers` property, it cannot find a matching version of the following packages:\r\n\r\n* `Microsoft.NETCore.App.Runtime.<rid>`\r\n* `Microsoft.AspNetCore.App.Runtime.<rid>`\r\n* `Microsoft.NETCore.WindowsDesktop.Runtime.<rid>`\r\n\r\nIt says that there are other versions of these packages available on NuGet.org, but no matter what I try I cannot get the package restore to use the versions that actually exist. I've tried numerous SDK versions in the `global.json` file, to no avail. The only way I can get my project to restore (and, therefore, build) is to remove the `RuntimeIdentifiers` property from the csproj file. This can break other parts of my build, so it isn't a good solution overall.\r\n\r\nThis problem started occurring at roughly the time I installed Preview 9/RC 2 of .NET Core 3. Thanks for looking into this for me!","Url":"https://github.com/dotnet/sdk/issues/3638","RelatedDescription":"Closed issue \"Package restore can't find runtime packs when explicit RID specified\" (#3638)"},{"Id":"492784691","IsPullRequest":true,"CreatedAt":"2019-09-14T14:21:35","Actor":"dotnet-maestro[bot]","Number":"3633","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190911.7\r\n- **Date Produced**: 9/12/2019 6:45 AM\r\n- **Commit**: 8eb29ba860a3cfcfe68f9a8256caa7efc1f1aaba\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19461.7\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3633","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3633)"},{"Id":"493616381","IsPullRequest":true,"CreatedAt":"2019-09-14T14:18:16","Actor":"dotnet-bot","Number":"3643","RawContent":null,"Title":"Merge release/3.0.100-preview9 to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.100-preview9-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/3.0.100-preview9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.100-preview9-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3643","RelatedDescription":"Closed or merged PR \"Merge release/3.0.100-preview9 to release/3.0.1xx\" (#3643)"},{"Id":"493616125","IsPullRequest":true,"CreatedAt":"2019-09-14T13:57:47","Actor":"dotnet-maestro[bot]","Number":"3642","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190913.3\r\n- **Date Produced**: 9/13/2019 11:47 PM\r\n- **Commit**: 7b731032220c21a3ed0021c72757b1f3122579b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19463.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3642","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3642)"},{"Id":"493616393","IsPullRequest":true,"CreatedAt":"2019-09-14T12:05:32","Actor":"dotnet-bot","Number":"3644","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3644","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3644)"},{"Id":"493558211","IsPullRequest":true,"CreatedAt":"2019-09-14T01:53:13","Actor":"dotnet-maestro[bot]","Number":"3641","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190913.1\r\n- **Date Produced**: 9/13/2019 10:50 AM\r\n- **Commit**: 372f44450f51552a8cf725acf705dc477bd8391f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19463.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19463.1\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3641","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3641)"},{"Id":"493482678","IsPullRequest":true,"CreatedAt":"2019-09-13T21:28:56","Actor":"dotnet-maestro[bot]","Number":"3640","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190913.05\r\n- **Date Produced**: 9/13/2019 4:13 PM\r\n- **Commit**: 7d57652f33493fa022125b7f63aad0d70c52d810\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3640","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3640)"},{"Id":"492915289","IsPullRequest":true,"CreatedAt":"2019-09-13T20:31:36","Actor":"wli3","Number":"3634","RawContent":null,"Title":"Block and tests for C++/CLI support","State":"closed","Body":"Block publishing in single C++ and building exe\r\n\r\nBetter error message for Pack failure\r\n\r\nBlock for EnableComHosting","Url":"https://github.com/dotnet/sdk/pull/3634","RelatedDescription":"Closed or merged PR \"Block and tests for C++/CLI support\" (#3634)"},{"Id":"493472396","IsPullRequest":false,"CreatedAt":"2019-09-13T18:59:57","Actor":"bricelam","Number":"3639","RawContent":null,"Title":"Enable embedded resource DependentUpon convention on .NET Framework","State":"open","Body":"Shouldn't this also be enabled for .NETFramework? Without it, embedded resource names are changing between classic and SDK-style projects. (Originally reported in https://github.com/aspnet/EntityFramework6/issues/1258)\r\n\r\nhttps://github.com/dotnet/sdk/blob/25d8a32f0c357b8e6ccaa39fba27d5c61364e26a/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L109-L112\r\n\r\ncc @divega @Pilchie @ajcvickers @BenVillalobos","Url":"https://github.com/dotnet/sdk/issues/3639","RelatedDescription":"Open issue \"Enable embedded resource DependentUpon convention on .NET Framework\" (#3639)"},{"Id":"493287815","IsPullRequest":true,"CreatedAt":"2019-09-13T14:28:25","Actor":"dotnet-maestro[bot]","Number":"3637","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190912.5\r\n- **Date Produced**: 9/13/2019 5:59 AM\r\n- **Commit**: 6003ee189f456c92a18b097f226d4927309def27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19462.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3637","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3637)"},{"Id":"492920175","IsPullRequest":true,"CreatedAt":"2019-09-12T22:18:36","Actor":"wli3","Number":"3635","RawContent":null,"Title":"No block on C++/CLI project for assets.json existence","State":"closed","Body":"By overriding PackageDependencyResolution.targets","Url":"https://github.com/dotnet/sdk/pull/3635","RelatedDescription":"Closed or merged PR \"No block on C++/CLI project for assets.json existence\" (#3635)"},{"Id":"493048711","IsPullRequest":false,"CreatedAt":"2019-09-12T21:57:00","Actor":"wli3","Number":"3636","RawContent":null,"Title":"All win apphosts in the installer","State":"open","Body":"pending Core-setup's msis https://github.com/dotnet/core-setup/issues/7846\r\nneed to put it in VS, installer, and archive ","Url":"https://github.com/dotnet/sdk/issues/3636","RelatedDescription":"Open issue \"All win apphosts in the installer\" (#3636)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1174729419551731713","CreatedAt":"2019-09-19T16:58:13+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":11,"RawContent":null},{"Id":"1174011099126980608","CreatedAt":"2019-09-17T17:23:52+00:00","UserScreenname":"dotnet","Text":".NET Core 3.0 RC 1 is out. Please help us find the last mile of bugs. https://t.co/WCqRtfS9zC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":179,"FavoriteCount":120,"RawContent":null},{"Id":"1174003920827338752","CreatedAt":"2019-09-17T16:55:21+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":16,"FavoriteCount":3,"RawContent":null},{"Id":"1173731665853607936","CreatedAt":"2019-09-16T22:53:30+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.0 Release Candidate 1 https://t.co/WCqRtfS9zC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":385,"FavoriteCount":255,"RawContent":null},{"Id":"1173731477592236032","CreatedAt":"2019-09-16T22:52:45+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core and Blazor updates in .NET Core 3.0 Release Candidate 1 https://t.co/mt3nPIdNQc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":70,"FavoriteCount":46,"RawContent":null},{"Id":"1173681840550481921","CreatedAt":"2019-09-16T19:35:31+00:00","UserScreenname":"dotnet","Text":"83 speakers are polishing their demos. The 77 session agenda is set to roll for over 40 hours. 200+ local events ha… https://t.co/CeCGHJ2eiC","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":6091,"FavoriteCount":390,"RawContent":null},{"Id":"1173678085071233024","CreatedAt":"2019-09-16T19:20:36+00:00","UserScreenname":"dotnet","Text":"Did you know .NET runs on Linux, macOS and Windows? https://t.co/LhrLWuFJyO","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":45,"FavoriteCount":28,"RawContent":null}]}},"RunOn":"2019-09-21T05:30:37.2998534Z","RunDurationInMilliseconds":13462}