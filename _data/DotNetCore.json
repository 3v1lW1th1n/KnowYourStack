{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":69,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":226,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"},{"Id":"6854176970","Type":"IssuesEvent","CreatedAt":"2017-11-14T18:00:49","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Reopened issue \"Microsoft Security Advisory CVE-2017-11770 : Malformed Certificate can cause Denial of Service\" (#44) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2017-11770 \r\n## Malformed Certificate can cause Denial of Service\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public version of .NET Core where a malformed certificate or other ASN.1 formatted data could lead to a denial of service via an infinite loop on Linux and macOS.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.8, 1.1.5 and 2.0.1. Developers are advised to update their .NET Core SDK to version 2.0.3 or 1.1.5.\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\n.NET Core applications running on Windows are not affected by this vulnerability. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed blow and is running on Linux.\r\n\r\nPlatform  | Runtime Version | Fixed runtime version\r\n----------------|----------------| -------------------------\r\nLinux | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4<br />2.0.0 |  1.0.8<br />1.1.5<br />2.0.1\r\nmacOS | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4 |  1.0.8<br />1.1.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nAny application running against .NET Core 1.0.7 or lower, or 1.1.2 or lower, or 2.0.0 is affected. The default version of the .NET core runtime can be listed by running `dotnet --info`, which should produce output in the form of \r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n```\r\n\r\nAs this only displays the latest version of the runtime installed it may hide the fact that you have a vulnerable runtime. A complete list of runtimes can be discovered by performing a directory listing in the install root directories. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.8, 1.1.5 or 2.0.1 then any applications targeting .NET Core will be vulnerable.\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Version 1.1.5 will also install version 1.0.8 of the runtime.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### Acknowledgments\r\n\r\nThanks to Bachraty Gergely for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2017-11770](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8585)\r\n\r\n### Revisions\r\n\r\nV1.0 (Nov 14, 2017): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2017-11-14_"},{"Id":"6853282986","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:23:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/48","RelatedDescription":"Closed issue \"Reserved\" (#48) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853280485","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:35","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Closed issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6966433446","Type":"IssuesEvent","CreatedAt":"2017-12-09T18:33:02","Actor":"hypeartist","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15457","RelatedDescription":"Opened issue \"Question: indexer method that returns \"ref T\" doesn't get inlined.\" (#15457) at dotnet/coreclr","RelatedBody":"Checked under: **Release Build, .Net Framework v4.7.1, VS 2017 v15.5.1, System.Memory v4.4.0-preview1-25305-02, System.Runtime.CompilerServices.Unsafe v4.4.0**\r\n\r\nSome data container class with indexer\r\n```csharp\r\npublic sealed unsafe class CellArray1\r\n{\r\n\tprivate Cell* _data;\r\n\r\n\tpublic ref Cell this[int pos]\r\n\t{\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n\t\tget { return ref *(_data + pos); }\r\n\t}\r\n}\r\n```\r\nSome silly  loop\r\n```csharp\r\nvar m1 = new CellArray1();\r\nm1.Resize(4096);\r\n\r\nvar sum1 = 0;\r\n\r\nfor (var i = 0; i < 4096; i++)\r\n{\r\n\tm1[i].X = i;\r\n\tm1[i].Y = -i;\r\n\tsum1 += m1[i].X;\r\n}\r\n\r\nm1.Dispose();\r\n```\r\nCode generated by JIT :\r\n```assembler\r\n000007FE84770517  xor         r14d,r14d  \r\n000007FE8477051A  mov         rcx,rsi  \r\n000007FE8477051D  mov         edx,r14d  \r\n000007FE84770520  call        000007FE84770150 // <---- ?\r\n000007FE84770525  mov         dword ptr [rax],r14d  \r\n000007FE84770528  mov         rcx,rsi  \r\n000007FE8477052B  mov         edx,r14d  \r\n000007FE8477052E  call        000007FE84770150  // <---- ?\r\n000007FE84770533  mov         ecx,r14d  \r\n000007FE84770536  neg         ecx  \r\n000007FE84770538  mov         dword ptr [rax+4],ecx  \r\n000007FE8477053B  mov         rcx,rsi  \r\n000007FE8477053E  mov         edx,r14d  \r\n000007FE84770541  call        000007FE84770150 // <---- ?  \r\n000007FE84770546  add         ebp,dword ptr [rax]  \r\n\r\n000007FE84770548  inc         r14d  \r\n000007FE8477054B  cmp         r14d,1000h  \r\n000007FE84770552  jl          000007FE8477051A\r\n```\r\nAnd here is the example without using **ref T**\r\n\r\nSome data container class with indexer\r\n```csharp\r\npublic sealed unsafe class CellArray2\r\n{\r\n\tprivate Cell* _data;\r\n\r\n\tpublic Cell* this[int pos]\r\n\t{\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n\t\tget { return _data + pos; }\r\n\t}\r\n}\r\n```\r\nSome silly  loop\r\n```csharp\r\nvar m1 = new CellArray2();\r\nm2.Resize(4096);\r\n\r\nvar sum2 = 0;\r\n\r\nfor (var i = 0; i < 4096; i++)\r\n{\r\n\tm2[i].X = i;\r\n\tm2[i].Y = -i;\r\n\tsum2 += m2[i].X;\r\n}\r\n\r\nm1.Dispose();\r\n```\r\nCode generated by JIT :\r\n```assembler\r\n000007FE84780515  xor         ecx,ecx  \r\n000007FE84780517  mov         rax,qword ptr [rdi+8]  \r\n000007FE8478051B  movsxd      rdx,ecx  \r\n000007FE8478051E  lea         rdx,[rdx+rdx*2]  \r\n000007FE84780522  mov         dword ptr [rax+rdx*8],ecx  \r\n000007FE84780525  mov         rax,qword ptr [rdi+8]  \r\n000007FE84780529  mov         r8d,ecx  \r\n000007FE8478052C  neg         r8d  \r\n000007FE8478052F  mov         dword ptr [rax+rdx*8+4],r8d  \r\n000007FE84780534  mov         rax,qword ptr [rdi+8]  \r\n000007FE84780538  add         ebp,dword ptr [rax+rdx*8]  \r\n\r\n000007FE8478053B  inc         ecx  \r\n000007FE8478053D  cmp         ecx,1000h  \r\n000007FE84780543  jl          000007FE84780517 \r\n```"},{"Id":"6966376875","Type":"PullRequestEvent","CreatedAt":"2017-12-09T17:55:29","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15456","RelatedDescription":"Opened pull request \"[WIP] Adding support for Acosh, Asinh, Atanh, and Cbrt to Math and MathF\" (#15456) at dotnet/coreclr","RelatedBody":""},{"Id":"6966311487","Type":"IssuesEvent","CreatedAt":"2017-12-09T17:12:44","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/11830","RelatedDescription":"Closed issue \"The interop marshaller should recognize the 'IsReadOnly' attribute\" (#11830) at dotnet/coreclr","RelatedBody":"The C# language is gaining support for `ref readonly` parameters (https://github.com/dotnet/roslyn/pull/19713 and https://github.com/dotnet/csharplang/issues/38).\r\n\r\nToday the marshaller will treat `ref` as `[In, Out]` unless explicitly marked as just `[In]`. That is, by default, it will both initialize with the managed state and then copy back any changes to the instance on return. While, when explicitly marked with just the `[In]` attribute, it will only initialize with the managed state and will **not** copy back any changes on return.\r\n\r\nWithout modification, the marshaller will also treat `ref readonly` in the same way (`[In, Out]`). As such, the marshaller should be updated to handle and recognize `ref readonly` parameters as `[In]`."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6966677981","Type":"IssuesEvent","CreatedAt":"2017-12-09T21:23:49","Actor":"JamesCarter23","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8202","RelatedDescription":"Opened issue \"Project is failing to build through the dotnet cli, however compiles fine through VS2017 Community\" (#8202) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nAny command that implements a build of the project within the appropriate project directory  (ex: dotnet build). Occurs with all projects.\r\n\r\n## Expected  behavior\r\nThe project to be built successfully and the web application displayed.\r\n\r\n## Actual behavior\r\nError Codes: \r\nerror MSB3883: Unexpected exception.\r\nSystem.ComponentModel.Win32Exception (0x80004005): The system cannot find the file specified \r\n\r\n__Failed with 6 build errors. Listed below.__\r\n\r\nC:\\***\\source\\repos\\learningNetCore\\learningNetCore>dotnet build\r\nMicrosoft (R) Build Engine version 15.4.8.50001 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror MSB3883: Unexpected exception:  [C:\\***\\source\\repos\\learningNetCore\\l\r\nearningNetCore\\learningNetCore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : System.ComponentModel.Win32Exception (0x80004005): The system cannot find\r\nthe file specified [C:\\***\\source\\repos\\learningNetCore\\learningNetCore\\le\r\narningNetCore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo star\r\ntInfo) [C:\\***\\source\\repos\\learningNetCore\\learningNetCore\\learningNetCor\r\ne.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : at System.Diagnostics.Process.Start() [C:\\***\\source\\repos\\learningN\r\netCore\\learningNetCore\\learningNetCore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : at Microsoft.Build.Utilities.ToolTask.ExecuteTool(String pathToTool, Strin\r\ng responseFileCommands, String commandLineCommands) [C:\\***\\source\\repos\\l\r\nearningNetCore\\learningNetCore\\learningNetCore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : at Microsoft.CodeAnalysis.BuildTasks.ManagedCompiler.ExecuteTool(String pa\r\nthToTool, String responseFileCommands, String commandLineCommands) [C:\\***\r\n\\source\\repos\\learningNetCore\\learningNetCore\\learningNetCore.csproj]\r\n\r\nBuild FAILED.\r\n\r\n## Environment data\r\n.NET Command Line Tools (2.0.3)\r\n\r\nProduct Information:\r\n Version:            2.0.3\r\n Commit SHA-1 hash:  12f0c7efcc\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.3\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n\r\n\r\nIf there is an obvious solution I'll happily slap myself but can't locate specifically where the problem lies. \r\nI'm trying to expand on my knowledge of C# by developing an ASP.NET CORE x2 Web Application but have realized that all my projects are failing to compile through the CMD.\r\n\r\n\r\n\r\n"},{"Id":"6965326053","Type":"PullRequestEvent","CreatedAt":"2017-12-09T04:37:50","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8201","RelatedDescription":"Merged pull request \"Fixing CLI:master - parameterizing the 'BuildAndPublishAllLinuxDistrosNativeInstallers'\" (#8201) at dotnet/cli","RelatedBody":"The first 'dotnet msbuild ' pass should not run 2 targets: 'WriteDynamicPropsToStaticPropsFiles' and 'BuildAndPublishAllLinuxDistrosNativeInstallers'. The target: 'BuildAndPublishAllLinuxDistrosNativeInstallers' should be parameterized.  \r\n\r\nExtra:\r\n'channel' parameter to dotnet-install.sh is superfluous if also using a 'version' parameter.\r\n\r\nTesting:\r\nReviewed command line output for both 'dotnet msbuild ' passes on Ubuntu 16.04 LTS Azure VM"},{"Id":"6965101927","Type":"PullRequestEvent","CreatedAt":"2017-12-09T01:48:52","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8201","RelatedDescription":"Opened pull request \"Fixing CLI:master - parameterizing the 'BuildAndPublishAllLinuxDistrosNativeInstallers'\" (#8201) at dotnet/cli","RelatedBody":"The first 'dotnet msbuild ' pass should not run 2 targets: 'WriteDynamicPropsToStaticPropsFiles' and 'BuildAndPublishAllLinuxDistrosNativeInstallers'. The target: 'BuildAndPublishAllLinuxDistrosNativeInstallers' should be parameterized.  \r\n\r\nExtra:\r\n'channel' parameter to dotnet-install.sh is superfluous if also using a 'version' parameter.\r\n\r\nTesting:\r\nReviewed command line output for both 'dotnet msbuild ' passes on Ubuntu 16.04 LTS Azure VM"},{"Id":"6964893597","Type":"PullRequestEvent","CreatedAt":"2017-12-09T00:00:44","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8200","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.6.0-preview2-4706 into cli\" (#8200) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-preview2-4706 into cli master branch"},{"Id":"6964725881","Type":"PullRequestEvent","CreatedAt":"2017-12-08T22:57:29","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8199","RelatedDescription":"Opened pull request \"Write UTF-8 BOM for solution files.\" (#8199) at dotnet/cli","RelatedBody":"Currently the solution file written out by the `sln` command uses a\r\nUTF-8 encoding without a BOM.  This causes problems when the solution\r\nfile contains non-ASCII code points because Visual Studio and MSBuild\r\nwill not use a UTF-8 encoding when reading the solution file if the\r\nBOM is omitted.\r\n\r\nThis commit causes the BOM to always be written when writing the\r\nsolution files.\r\n\r\nFixes #8184.\r\n"},{"Id":"6964715392","Type":"PullRequestEvent","CreatedAt":"2017-12-08T22:53:54","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8198","RelatedDescription":"Opened pull request \"Merge dev/release/2.0 into dev/repo-refactoring\" (#8198) at dotnet/cli","RelatedBody":"cc @johnbeisner @nguerrera "},{"Id":"6964669817","Type":"PullRequestEvent","CreatedAt":"2017-12-08T22:38:57","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8196","RelatedDescription":"Merged pull request \"Correct the fix for devdiv bugs 526577 and 526578, the wrong property had been updated\" (#8196) at dotnet/cli","RelatedBody":"\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6964037348","Type":"IssuesEvent","CreatedAt":"2017-12-08T19:53:15","Actor":"jnm2","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/601","RelatedDescription":"Opened issue \"Understanding NETStandard.Library as a dependancy in my nuspec\" (#601) at dotnet/standard","RelatedBody":"Should a NETStandard.Library dependency appear in a nuspec?\r\n\r\nWhat does it do to projects that reference the nupkg versus not having it in the nuspec? If my netstandard1.6 library chooses to depend on 1.6.1, doesn't that force any dependent library to also depend on 1.6.1+? Is that a good thing and is that why you'd put it in a nuspec?\r\n\r\nOut of 1.6.0, 1.6.1, 2.0.0, and 2.0.1, the SDK picks 1.6.1 and 2.0.0 to reference for netstandard1.6 and netstandard2.0. Why not 2.0.1 for both?\r\n\r\nIs there a changelog that summarizes the differences in 1.6.1, 2.0.0 and 2.0.1?\r\n\r\nAre there docs that answer these questions? This is the only information I've been able to glean so far which hints that keeping it in the nuspec is correct, but it doesn't answer any of my other questions: \r\n![image](https://user-images.githubusercontent.com/8040367/33782541-21670bc0-dc27-11e7-9071-ac023a71c840.png)\r\n(https://docs.microsoft.com/en-us/nuget/guides/create-net-standard-packages-vs2017#package-the-component)\r\n"},{"Id":"6963685770","Type":"PullRequestEvent","CreatedAt":"2017-12-08T18:25:21","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/600","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02308-01 (master)\" (#600) at dotnet/standard","RelatedBody":""},{"Id":"6962871705","Type":"IssuesEvent","CreatedAt":"2017-12-08T15:22:13","Actor":"ignatandrei","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/599","RelatedDescription":"Opened issue \".NET Standard compatibility with .NET Framework 4.7.1\" (#599) at dotnet/standard","RelatedBody":"Hello\r\nThe page https://docs.microsoft.com/en-us/dotnet/standard/net-standard  list compatibility of .NET Standard 1.6 with .NET Framework 4.6.2 . Latest .NET Framework is 4.7.1 \r\nWhat is the compatibility between 4.7.1 and .NET Standard  ?"},{"Id":"6960147160","Type":"IssuesEvent","CreatedAt":"2017-12-08T01:36:30","Actor":"taoyouh","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/598","RelatedDescription":"Opened issue \"SslStream.ShutdownAsync available?\" (#598) at dotnet/standard","RelatedBody":"In .NET Core, we can use SslStream.ShutdownAsync to properly shut down an SSL stream. But this API is not present in .NET Standard. Will this API be added to .NET Standard? Or how can we correctly shutdown an SSL stream?"},{"Id":"6960090807","Type":"PullRequestEvent","CreatedAt":"2017-12-08T01:15:32","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/597","RelatedDescription":"Merged pull request \"Remove an 's'\" (#597) at dotnet/standard","RelatedBody":"\"for a savings of\" -> \"for a saving of\" in the console output"},{"Id":"6958563281","Type":"PullRequestEvent","CreatedAt":"2017-12-07T18:42:57","Actor":"markrendle","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/597","RelatedDescription":"Opened pull request \"Remove an 's'\" (#597) at dotnet/standard","RelatedBody":"\"for a savings of\" -> \"for a saving of\" in the console output"},{"Id":"6948639364","Type":"PullRequestEvent","CreatedAt":"2017-12-06T01:26:43","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/594","RelatedDescription":"Closed pull request \"Update versions.md\" (#594) at dotnet/standard","RelatedBody":"quick link to .NET Framework system requirements to easily check which OS is supported."},{"Id":"6947749059","Type":"PullRequestEvent","CreatedAt":"2017-12-05T21:24:29","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/596","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02304-01 (master)\" (#596) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6967080622","Type":"PullRequestEvent","CreatedAt":"2017-12-10T03:05:52","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/25787","RelatedDescription":"Closed pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup, ProjectNTfs, ProjectNTfsTestILC to prerelease-02308-01, preview1-26008-12, preview1-26007-04, preview1-26008-03, beta-26007-03, beta-26007-03, respectively (master)\" (#25787) at dotnet/corefx","RelatedBody":""},{"Id":"6966656160","Type":"PullRequestEvent","CreatedAt":"2017-12-09T21:07:42","Actor":"JonHanna","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25819","RelatedDescription":"Opened pull request \"Implement non-trailing named arguments in Microsoft.CSharp\" (#25819) at dotnet/corefx","RelatedBody":"Closes #25795\r\n\r\nFirst few commits refactor `CMethodIterator`, `MemberLookup`, `GroupToArgsBinder` and `GroupToArgsBinderResult` to clear some complications before the implementation:\r\n\r\n* Remove `CMethodIterator._bcanIncludeExtensionsInResults`\r\n\r\nAlways false.\r\n\r\n* Remove `CMethodIterator._allowBogusAndInaccessible`\r\n\r\nAlways true.\r\n\r\n* Remove `MemberLookup._results`\r\n\r\nNever used.\r\n\r\n* Remove paths for `_pContainingTypes` being empty.\r\n\r\nNever happens.\r\n\r\n* Remove `_bAtEnd`\r\n\r\nCheck on correct use unnecessary in internal class.\r\n\r\n* Remove unused parameters\r\n\r\n* Replace private field-only properties with field access.\r\n\r\n* Getter methods to properties; auto when appropriate.\r\n\r\n* Remove `_bIsCheckingInstanceMethods`\r\n\r\nAlways true.\r\n\r\n* Readonly fields where possible.\r\n\r\n* Rename Hungarian-style names and remove redundant initializers.\r\n\r\n* `GroupToArgsBinderResult` members to auto properties.\r\n\r\n* Remove `InconvertibleResult`/`_inconvertibleResults`\r\n\r\nSet but never accessed.\r\n\r\n* Match error code numbers to corresponding C# errors.\r\n\r\nNot clear why these were ever different, but matching them makes the connection clearer.\r\n\r\n# Now the implementation\r\n\r\n* Add some initial (not yet passing) tests.\r\n\r\n* Allow non-trailing arguments (remove prohibition)\r\n\r\n* Detect misnamed arguments in iterator.\r\n\r\n* Exclude methods from consideration if non-trailing names don't match.\r\n\r\n* Correct error for name not found in non-trailing.\r\n\r\n* Catch CS8328 errors.\r\n\r\n* Return temporarily removed assertion.\r\n\r\n* Correctly handle correctly naming the first of several `params` arguments\r\n\r\n* Add tests based on Roslyn's tests for non-trailing named arguments.\r\n\r\n* Fix handling when name is changed in an override.\r\n\r\nUse the name defined on the type of the argument if `UseCompileTimeType` or the type of the object, otherwise."},{"Id":"6966445845","Type":"IssuesEvent","CreatedAt":"2017-12-09T18:41:11","Actor":"ArchieCoder","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25818","RelatedDescription":"Opened issue \"Exception object should have a non-localized version for exception message\" (#25818) at dotnet/corefx","RelatedBody":"https://twitter.com/archiecoder/status/939532182107951104\r\n\r\nHave the message only in Japanese or Chinese does not help the developer.\r\n\r\nHaving both the localized and non-localized versions would also help analytics service to sort by English message only."},{"Id":"6966420516","Type":"IssuesEvent","CreatedAt":"2017-12-09T18:24:38","Actor":"nietras","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/25814","RelatedDescription":"Closed issue \"[WIP] S.R.CS.Unsafe: Revise API to accomodate for `ref readonly`/`in`\" (#25814) at dotnet/corefx","RelatedBody":"With the introduction of `ref readonly` return values and `in` (i.e. `ref readonly`) parameters the existing [`Unsafe` API](https://github.com/dotnet/corefx/blob/master/src/System.Runtime.CompilerServices.Unsafe/ref/System.Runtime.CompilerServices.Unsafe.cs\r\n) should be considered for revision with respect to how to support these naturally.\r\n\r\n### Rationale and Usage\r\nNaturally support `ref readonly` usage in the `Unsafe` API, to allow using this on readonly data.\r\n\r\n### Proposed API\r\nA tentative proposal for discussion:\r\n```csharp\r\npublic static partial class Unsafe\r\n{\r\n    // Add new\r\n    public static ref readonly T AddByteOffsetReadOnly<T>(in T source, System.IntPtr byteOffset) { throw null; }\r\n    public static ref readonly T AddReadOnly<T>(in T source, int elementOffset) { throw null; }\r\n    public static ref readonly T AddReadOnly<T>(in T source, System.IntPtr elementOffset) { throw null; }\r\n    public static ref readonly T AsRefReadOnly<T>(in T source) { throw null; }\r\n    public static ref readonly TTo AsReadOnly<TFrom, TTo>(in TFrom source) { throw null; }\r\n    public static ref readonly T SubtractByteOffsetReadOnly<T>(in T source, System.IntPtr byteOffset) { throw null; }\r\n    public static ref readonly T SubtractReadOnly<T>(in T source, int elementOffset) { throw null; }\r\n    public static ref readonly T SubtractReadOnly<T>(in T source, System.IntPtr elementOffset) { throw null; }\r\n\r\n    // Consider changing existing \r\n    // (problem this will not require `ref` \r\n    //  when using due to `in` not requiring it, \r\n    //  which makes it a bit weird)\r\n    public static bool AreSame<T>(in T left, in T right) { throw null; }\r\n    public static System.IntPtr ByteOffset<T>(in T origin, in T target) { throw null; }\r\n    public static void CopyBlock(ref byte destination, in byte source, uint byteCount) { }\r\n    public static void CopyBlockUnaligned(ref byte destination, in byte source, uint byteCount) { }\r\n    public unsafe static void Copy<T>(void* destination, in T source) { }\r\n    public static T ReadUnaligned<T>(in byte source) { throw null; }\r\n}\r\n```\r\nOne could also add the new methods to a new class `ReadOnlyUnsafe` which would make methods less discoverable, but make naming easier.\r\n\r\n### Open Questions\r\nHow do we in general support adding new methods identical to existing methods but with `ref readonly`/`in`, do we simply suffix with `ReadOnly` if it is not possible to simply change the existing method?\r\n\r\n### Updates\r\n\r\n### Existing API\r\n```csharp\r\npublic static partial class Unsafe\r\n{\r\n    public static ref T AddByteOffset<T>(ref T source, System.IntPtr byteOffset) { throw null; }\r\n    public static ref T Add<T>(ref T source, int elementOffset) { throw null; }\r\n    public unsafe static void* Add<T>(void* source, int elementOffset) { throw null; }\r\n    public static ref T Add<T>(ref T source, System.IntPtr elementOffset) { throw null; }\r\n    public static bool AreSame<T>(ref T left, ref T right) { throw null; }\r\n    public unsafe static void* AsPointer<T>(ref T value) { throw null; }\r\n    public unsafe static ref T AsRef<T>(void* source) { throw null; }\r\n    public static ref T AsRef<T>(in T source) { throw null; }\r\n    public static T As<T>(object o) where T : class { throw null; }\r\n    public static ref TTo As<TFrom, TTo>(ref TFrom source) { throw null; }\r\n    public static System.IntPtr ByteOffset<T>(ref T origin, ref T target) { throw null; }\r\n    public static void CopyBlock(ref byte destination, ref byte source, uint byteCount) { }\r\n    public unsafe static void CopyBlock(void* destination, void* source, uint byteCount) { }\r\n    public static void CopyBlockUnaligned(ref byte destination, ref byte source, uint byteCount) { }\r\n    public unsafe static void CopyBlockUnaligned(void* destination, void* source, uint byteCount) { }\r\n    public unsafe static void Copy<T>(void* destination, ref T source) { }\r\n    public unsafe static void Copy<T>(ref T destination, void* source) { }\r\n    public static void InitBlock(ref byte startAddress, byte value, uint byteCount) { }\r\n    public unsafe static void InitBlock(void* startAddress, byte value, uint byteCount) { }\r\n    public static void InitBlockUnaligned(ref byte startAddress, byte value, uint byteCount) { }\r\n    public unsafe static void InitBlockUnaligned(void* startAddress, byte value, uint byteCount) { }\r\n    public unsafe static T Read<T>(void* source) { throw null; }\r\n    public unsafe static T ReadUnaligned<T>(void* source) { throw null; }\r\n    public static T ReadUnaligned<T>(ref byte source) { throw null; }\r\n    public static int SizeOf<T>() { throw null; }\r\n    public static ref T SubtractByteOffset<T>(ref T source, System.IntPtr byteOffset) { throw null; }\r\n    public static ref T Subtract<T>(ref T source, int elementOffset) { throw null; }\r\n    public unsafe static void* Subtract<T>(void* source, int elementOffset) { throw null; }\r\n    public static ref T Subtract<T>(ref T source, System.IntPtr elementOffset) { throw null; }\r\n    public unsafe static void Write<T>(void* destination, T value) { }\r\n    public unsafe static void WriteUnaligned<T>(void* destination, T value) { }\r\n    public static void WriteUnaligned<T>(ref byte destination, T value) { }\r\n}\r\n```\r\n\r\ncc: @jkotas @mellinoe "},{"Id":"6966379336","Type":"IssuesEvent","CreatedAt":"2017-12-09T17:57:08","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/25817","RelatedDescription":"Closed issue \"Core does't read the server certificate\" (#25817) at dotnet/corefx","RelatedBody":"@hammond-of-texas commented on [Fri Dec 08 2017](https://github.com/dotnet/core/issues/1142)\n\n# Issue Title\r\n\r\nCore doesn't read the server certificate\r\n\r\n# General\r\n\r\nIn general, a simple request like this will work in .Net:\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(\"https://www.sbb.ch\");\r\n            HttpWebResponse response = (HttpWebResponse) request.GetResponse();\r\n            X509Certificate cert = request.ServicePoint.Certificate;\r\n        }\r\n\r\nThe same thing will fail in core 2.0 with a \"System.PlatformNotSupportedException: 'Operation is not supported on this platform.'\" exception.\n\n---\n\n@richlander commented on [Sat Dec 09 2017](https://github.com/dotnet/core/issues/1142#issuecomment-350486532)\n\nPTAL @davidsh \n\n"},{"Id":"6966256501","Type":"IssuesEvent","CreatedAt":"2017-12-09T16:36:22","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25817","RelatedDescription":"Opened issue \"Core does't read the server certificate\" (#25817) at dotnet/corefx","RelatedBody":"@hammond-of-texas commented on [Fri Dec 08 2017](https://github.com/dotnet/core/issues/1142)\n\n# Issue Title\r\n\r\nCore doesn't read the server certificate\r\n\r\n# General\r\n\r\nIn general, a simple request like this will work in .Net:\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(\"https://www.sbb.ch\");\r\n            HttpWebResponse response = (HttpWebResponse) request.GetResponse();\r\n            X509Certificate cert = request.ServicePoint.Certificate;\r\n        }\r\n\r\nThe same thing will fail in core 2.0 with a \"System.PlatformNotSupportedException: 'Operation is not supported on this platform.'\" exception.\n\n---\n\n@richlander commented on [Sat Dec 09 2017](https://github.com/dotnet/core/issues/1142#issuecomment-350486532)\n\nPTAL @davidsh \n\n"},{"Id":"6966256476","Type":"IssuesEvent","CreatedAt":"2017-12-09T16:36:20","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25816","RelatedDescription":"Opened issue \"Core does't read the server certificate\" (#25816) at dotnet/corefx","RelatedBody":"@hammond-of-texas commented on [Fri Dec 08 2017](https://github.com/dotnet/core/issues/1142)\n\n# Issue Title\r\n\r\nCore doesn't read the server certificate\r\n\r\n# General\r\n\r\nIn general, a simple request like this will work in .Net:\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(\"https://www.sbb.ch\");\r\n            HttpWebResponse response = (HttpWebResponse) request.GetResponse();\r\n            X509Certificate cert = request.ServicePoint.Certificate;\r\n        }\r\n\r\nThe same thing will fail in core 2.0 with a \"System.PlatformNotSupportedException: 'Operation is not supported on this platform.'\" exception.\n\n---\n\n@richlander commented on [Sat Dec 09 2017](https://github.com/dotnet/core/issues/1142#issuecomment-350486532)\n\nPTAL @davidsh \n\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6967176912","Type":"IssuesEvent","CreatedAt":"2017-12-10T04:43:32","Actor":"ufcpp","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23689","RelatedDescription":"Opened issue \"Use in-parameter operator from different assembly\" (#23689) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\nVS 15.5.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nhttps://github.com/ufcpp/UfcppSample/tree/master/Demo/2017/InOperatorDifferentAssemly\r\n\r\n1. Write a struct with in-parameter operator in an assebmly\r\n\r\n```cs\r\n    public struct DifferentAssembly\r\n    {\r\n        ....\r\n        // by-val\r\n        public static DifferentAssembly operator +(DifferentAssembly a, DifferentAssembly b)\r\n        ....\r\n\r\n        // by-ref-readonly\r\n        public static DifferentAssembly operator *(in DifferentAssembly a, in DifferentAssembly b)\r\n        ....\r\n    }\r\n```\r\n\r\n2. Use it from another assembly\r\n\r\n```cs\r\n            var a = new DifferentAssembly(....);\r\n            var b = new DifferentAssembly(....);\r\n\r\n            // pass by value. No error.\r\n            Console.WriteLine(a + b);\r\n\r\n            // pass by ref readonly.\r\n            // No error in the Visual Studio C# Editor\r\n            // but error on build.\r\n            Console.WriteLine(a * b);\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nsuccessfully compiled\r\n\r\n**Actual Behavior**:\r\n\r\nThere is no error in the Visual Studio C# Editor, but error on build.\r\n\r\n![image](https://user-images.githubusercontent.com/3760955/33801977-dae86fd8-ddaf-11e7-8dbc-39f5f25b207d.png)\r\n"},{"Id":"6967151797","Type":"IssuesEvent","CreatedAt":"2017-12-10T04:17:50","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23687","RelatedDescription":"Closed issue \"[Question] Why does IArgumentOperation.Type return null?\" (#23687) at dotnet/roslyn","RelatedBody":"I'm working on an IOperation-based analyzer for the roslyn-analyzers repo. I noticed while debugging that `argument.Type` where `argument` is an `IArgumentOperation` returns null, and I tracked it down to [this line](http://source.roslyn.io/#Microsoft.CodeAnalysis/Generated/Operations.xml.Generated.cs,205) which passes null to the Operation ctor. Is this intentional?"},{"Id":"6967112242","Type":"IssuesEvent","CreatedAt":"2017-12-10T03:37:11","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/19020","RelatedDescription":"Closed issue \"Question: is there a test verifying IL for var pattern?\" (#19020) at dotnet/roslyn","RelatedBody":"For instance, in a switch statement.\r\nI didn't find any.\r\n\r\nFYI @gafter @AlekseyTs "},{"Id":"6967049614","Type":"IssuesEvent","CreatedAt":"2017-12-10T02:35:29","Actor":"jamesqo","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23688","RelatedDescription":"Opened issue \"[Question] How to check for uninitialized local variable symbol at position in syntax tree\" (#23688) at dotnet/roslyn","RelatedBody":"Suppose I have the following code:\r\n\r\n```cs\r\nasync Task M1Async()\r\n{\r\n    CancellationToken l1;\r\n    await M2Async();\r\n}\r\n\r\nasync Task M2Async(CancellationToken p1 = default) {}\r\n```\r\n\r\nand I have the `ILocalSymbol` corresponding to `l1`. I don't want to fire the analyzer and generate the fix `await M2Async(l1);` because `l1` is uninitialized. How do I check whether `l1` is initialized at a particular position in the syntax tree, in this case inside the expression `M2Async()`?"},{"Id":"6966993145","Type":"IssuesEvent","CreatedAt":"2017-12-10T01:40:28","Actor":"jamesqo","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23687","RelatedDescription":"Opened issue \"[Question] Why does IArgumentOperation.Type return null?\" (#23687) at dotnet/roslyn","RelatedBody":"I'm working on an IOperation-based analyzer for the roslyn-analyzers repo. I noticed while debugging that `argument.Type` where `argument` is an `IArgumentOperation` returns null, and I tracked it down to [this line](http://source.roslyn.io/#Microsoft.CodeAnalysis/Generated/Operations.xml.Generated.cs,205) which passes null to the Operation ctor. Is this intentional?"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6966928037","Type":"PullRequestEvent","CreatedAt":"2017-12-10T00:38:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5088","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5088) at dotnet/corert","RelatedBody":""},{"Id":"6966927862","Type":"PullRequestEvent","CreatedAt":"2017-12-10T00:38:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5088","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5088) at dotnet/corert","RelatedBody":""},{"Id":"6966927563","Type":"PullRequestEvent","CreatedAt":"2017-12-10T00:37:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5087","RelatedDescription":"Merged pull request \"Fix ProjectN test break\" (#5087) at dotnet/corert","RelatedBody":""},{"Id":"6966828144","Type":"PullRequestEvent","CreatedAt":"2017-12-09T23:13:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5087","RelatedDescription":"Opened pull request \"Fix ProjectN test break\" (#5087) at dotnet/corert","RelatedBody":""},{"Id":"6966638911","Type":"PullRequestEvent","CreatedAt":"2017-12-09T20:55:15","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5086","RelatedDescription":"Merged pull request \"Fix ProjectN build breaks\" (#5086) at dotnet/corert","RelatedBody":""},{"Id":"6966565878","Type":"PullRequestEvent","CreatedAt":"2017-12-09T20:04:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5086","RelatedDescription":"Opened pull request \"Fix ProjectN build breaks\" (#5086) at dotnet/corert","RelatedBody":""},{"Id":"6966453582","Type":"PullRequestEvent","CreatedAt":"2017-12-09T18:46:30","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5085","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5085) at dotnet/corert","RelatedBody":""},{"Id":"6966338524","Type":"PullRequestEvent","CreatedAt":"2017-12-09T17:30:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5085","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5085) at dotnet/corert","RelatedBody":""},{"Id":"6966334976","Type":"PullRequestEvent","CreatedAt":"2017-12-09T17:28:05","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5084","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5084) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6966254745","Type":"PullRequestEvent","CreatedAt":"2017-12-09T16:35:15","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5084","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5084) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6965539620","Type":"PullRequestEvent","CreatedAt":"2017-12-09T07:32:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5083","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5083) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6965488343","Type":"PullRequestEvent","CreatedAt":"2017-12-09T06:45:28","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5083","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5083) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6965486677","Type":"PullRequestEvent","CreatedAt":"2017-12-09T06:43:54","Actor":"safern","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5082","RelatedDescription":"Closed pull request \"Mirror changes from dotnet/coreclr\" (#5082) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"6966096171","Type":"IssuesEvent","CreatedAt":"2017-12-09T14:49:28","Actor":"nil4","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1799","RelatedDescription":"Closed issue \"Where is the SDK 2.1.2 installer? (VS 15.5 includes it)\" (#1799) at dotnet/sdk","RelatedBody":"Upgrading Visual Studio 2017 to [version 15.5](https://blogs.msdn.microsoft.com/visualstudio/2017/12/04/visual-studio-2017-version-15-5-visual-studio-for-mac-released/) brings SDK version 2.1.2:\r\n\r\n```cmd\r\n> dotnet --version\r\n2.1.2\r\n\r\n> dotnet --info\r\n.NET Command Line Tools (2.1.2)\r\n\r\nProduct Information:\r\n Version:            2.1.2\r\n Commit SHA-1 hash:  5695315371\r\n\r\nRuntime Environment:\r\n [..snip..]\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n```\r\n\r\nTo upgrade build agents to the same SDK version, I searched [.NET Downloads](https://www.microsoft.com/net/download/windows) and [.NET Core downloads archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md), and the latest available version is 2.0.3, with SDK 2.0.3. \r\n\r\nWhere is the SDK v2.1.2 installer?"},{"Id":"6965778629","Type":"IssuesEvent","CreatedAt":"2017-12-09T10:50:04","Actor":"ifle","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1812","RelatedDescription":"Closed issue \"System.ArgumentException: 'dimensionValuesMap' must contain at least one element.\" (#1812) at dotnet/sdk","RelatedBody":"I have mix solution with older and new format projects. During loading a have following error. What is wrong?\r\n\r\n```\r\n=====================\r\n09/12/2017 09:50:09\r\nRecoverable\r\nSystem.ArgumentException: 'dimensionValuesMap' must contain at least one element.\r\nParameter name: dimensionValuesMap\r\n   at Microsoft.Requires.NotNullOrEmpty(IEnumerable values, String parameterName)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectConfigurationsServiceBase.CreateConfigurations(ImmutableArray`1 orderedDimensionNames, ImmutableDictionary`2 dimensionValuesMap)\r\n   at Microsoft.VisualStudio.ProjectSystem.DeclaredDimensionsProjectConfigurationsService.<CalculateKnownProjectConfigurationsAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.UnconfiguredProjectCache`1.<GetValueAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectConfigurationsServiceBase.<GetKnownProjectConfigurationsAsync>d__51.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.DefaultingProjectConfigurationsServiceBase.<GetProjectConfigurationAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.VSUnconfiguredProjectIntegrationService.<GetActiveProjectConfigurationAsync>d__68.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.VSUnconfiguredProjectIntegrationService.<RefreshActiveProjectConfigurationAsync>d__62.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<RefreshActiveConfigurationAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<ResetSubscriptionsAsync>d__16.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<InitializeCoreAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.OnceInitializedOnceDisposedAsync.<<-ctor>b__4_0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.AsyncLazy`1.<>c__DisplayClass13_1.<<GetValueAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.OnceInitializedOnceDisposedAsync.<<InitializeAsync>b__27_0>d.MoveNext()\r\n===================\r\n\r\n```\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.4.5\r\nVisualStudio.15.Release/15.4.5+27004.2010\r\nMicrosoft .NET Framework\r\nVersion 4.7.02558\r\n\r\nInstalled Version: Enterprise"},{"Id":"6965749696","Type":"IssuesEvent","CreatedAt":"2017-12-09T10:26:47","Actor":"ifle","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1812","RelatedDescription":"Opened issue \"System.ArgumentException: 'dimensionValuesMap' must contain at least one element.\" (#1812) at dotnet/sdk","RelatedBody":"I have mix solution with older and new format projects. During loading a have following error. What is wrong?\r\n\r\n```\r\n=====================\r\n09/12/2017 09:50:09\r\nRecoverable\r\nSystem.ArgumentException: 'dimensionValuesMap' must contain at least one element.\r\nParameter name: dimensionValuesMap\r\n   at Microsoft.Requires.NotNullOrEmpty(IEnumerable values, String parameterName)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectConfigurationsServiceBase.CreateConfigurations(ImmutableArray`1 orderedDimensionNames, ImmutableDictionary`2 dimensionValuesMap)\r\n   at Microsoft.VisualStudio.ProjectSystem.DeclaredDimensionsProjectConfigurationsService.<CalculateKnownProjectConfigurationsAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.UnconfiguredProjectCache`1.<GetValueAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectConfigurationsServiceBase.<GetKnownProjectConfigurationsAsync>d__51.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.DefaultingProjectConfigurationsServiceBase.<GetProjectConfigurationAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.VSUnconfiguredProjectIntegrationService.<GetActiveProjectConfigurationAsync>d__68.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.VSUnconfiguredProjectIntegrationService.<RefreshActiveProjectConfigurationAsync>d__62.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<RefreshActiveConfigurationAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<ResetSubscriptionsAsync>d__16.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<InitializeCoreAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.OnceInitializedOnceDisposedAsync.<<-ctor>b__4_0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.AsyncLazy`1.<>c__DisplayClass13_1.<<GetValueAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.OnceInitializedOnceDisposedAsync.<<InitializeAsync>b__27_0>d.MoveNext()\r\n===================\r\n\r\n```\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.4.5\r\nVisualStudio.15.Release/15.4.5+27004.2010\r\nMicrosoft .NET Framework\r\nVersion 4.7.02558\r\n\r\nInstalled Version: Enterprise"},{"Id":"6965554009","Type":"IssuesEvent","CreatedAt":"2017-12-09T07:45:47","Actor":"ifle","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1811","RelatedDescription":"Opened issue \"[Question] How to convert Old WebForms csproj to new the csproj format?\" (#1811) at dotnet/sdk","RelatedBody":"How to convert Old WebForms csproj to new the csproj format? \r\nIs it possible?"},{"Id":"6965387071","Type":"PullRequestEvent","CreatedAt":"2017-12-09T05:23:13","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1806","RelatedDescription":"Merged pull request \"Merge release/2.1 to master\" (#1806) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20171208-080034\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20171208-080034 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6965387049","Type":"PullRequestEvent","CreatedAt":"2017-12-09T05:23:12","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1804","RelatedDescription":"Merged pull request \"Merge release/2.1 into master\" (#1804) at dotnet/sdk","RelatedBody":""},{"Id":"6965153020","Type":"PullRequestEvent","CreatedAt":"2017-12-09T02:24:23","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1804","RelatedDescription":null,"RelatedBody":""},{"Id":"6965152966","Type":"PullRequestEvent","CreatedAt":"2017-12-09T02:24:20","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1804","RelatedDescription":"Closed pull request \"Merge release/2.1 into master\" (#1804) at dotnet/sdk","RelatedBody":""},{"Id":"6964626451","Type":"PullRequestEvent","CreatedAt":"2017-12-08T22:27:38","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1809","RelatedDescription":"Merged pull request \"Minor fixups for post repo-toolset merge.\" (#1809) at dotnet/sdk","RelatedBody":""},{"Id":"6964433679","Type":"IssuesEvent","CreatedAt":"2017-12-08T21:39:46","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1801","RelatedDescription":"Closed issue \"`dotnet pack` product broken .nupkg with the latest daily build(2.2.0-preview1)\" (#1801) at dotnet/sdk","RelatedBody":"Test with dotnet sdk `2.2.0-preview1-007736`/7622/7460, Windows 10 x64(17064).\r\nAnd `2.1.1` in VS15.5preview5 works well.\r\n\r\n# Step:\r\n1. Install the latest daily build of sdk\r\n2. `dotnet new classlib`\r\n3. `dotnet pack`\r\n4. Open the output .nupkg with `NuGet Package Explorer` or some zip manager( and try unpack it), and get an error.\r\n5. Found the `.nuspec` file in the `nupkg` has wrong CRC(but the packed data is right)"},{"Id":"6964413954","Type":"IssuesEvent","CreatedAt":"2017-12-08T21:34:18","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1810","RelatedDescription":"Opened issue \"Fix All_props_and_targets_add_themselves_to_MSBuildAllTargets\" (#1810) at dotnet/sdk","RelatedBody":""},{"Id":"6964407832","Type":"PullRequestEvent","CreatedAt":"2017-12-08T21:32:38","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1809","RelatedDescription":"Opened pull request \"Minor fixups for post repo-toolset merge.\" (#1809) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"935927507911524352","CreatedAt":"2017-11-29T17:44:41+00:00","UserScreenname":"dotnet","Text":"Who doesn’t? Purple. All. The. Things. https://t.co/65KzPWuvbK","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":30,"FavoriteCount":4,"RawContent":null},{"Id":"933058673206730752","CreatedAt":"2017-11-21T19:44:57+00:00","UserScreenname":"dotnet","Text":".NET Core Alpine Image Ready for Testing https://t.co/SsQtOGuAFD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":213,"FavoriteCount":155,"RawContent":null},{"Id":"932677600715071488","CreatedAt":"2017-11-20T18:30:42+00:00","UserScreenname":"dotnet","Text":"Looking to migrate your existing .NET apps to the cloud but need our help? Fill out this survey and let us know: https://t.co/g6xbbWkX93","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2017-12-10T05:30:20.5147339Z","RunDurationInMilliseconds":7714}