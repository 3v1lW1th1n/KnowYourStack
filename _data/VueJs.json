{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7093447858","Type":"IssuesEvent","CreatedAt":"2018-01-12T20:33:16","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1987","RelatedDescription":"Closed issue \"Support \"autofocus\" on inputs when changing routes\" (#1987) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nSimulates autofocusing behavior of browsers when navigating to a new page\r\n\r\n### What does the proposed API look like?\r\nThere are one of two ways of solving this:\r\n\r\n1. Add an option that can either be global or per route called \"autofocus\". If set to true, Vue Router will automatically focus on the first input with the \"autofocus\" attribute after rendering the component.\r\n\r\n2. Add a more general \"afterRender\" hook to routes so developers can implement this behavior themselves. This would give developers finer control and allow for more customized behavior.\r\n\r\nTo clarify, I feel this behavior should be within Vue Router as opposed to adding the logic to the component itself since components may be used outside the context of a \"page load\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7093443593","Type":"PullRequestEvent","CreatedAt":"2018-01-12T20:32:06","Actor":"margokopli","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1988","RelatedDescription":"Opened pull request \"fix(errors): added check if IE11 then use hashchange event listener F…\" (#1988) at vuejs/vue-router","RelatedBody":"fix #1849\r\n\r\nIE11 does not fire the popstate event when the URL's hash value changes. Changed, in IE11 case, from `propstate` event listener to `hashchange`."},{"Id":"7092118099","Type":"IssuesEvent","CreatedAt":"2018-01-12T15:31:05","Actor":"ShimShamSam","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1987","RelatedDescription":"Opened issue \"Support \"autofocus\" on inputs when changing routes\" (#1987) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nSimulates autofocusing behavior of browsers when navigating to a new page\r\n\r\n### What does the proposed API look like?\r\nThere are one of two ways of solving this:\r\n\r\n1. Add an option that can either be global or per route called \"autofocus\". If set to true, Vue Router will automatically focus on the first input with the \"autofocus\" attribute after rendering the component.\r\n\r\n2. Add a more general \"afterRender\" hook to routes so developers can implement this behavior themselves. This would give developers finer control and allow for more customized behavior.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7091704891","Type":"IssuesEvent","CreatedAt":"2018-01-12T14:07:42","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1983","RelatedDescription":"Closed issue \"take full advantage of Pushstate to support history.go\" (#1983) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nIssue codes at:\r\n\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L40-L55\r\n\r\nref: https://stackoverflow.com/a/20544601\r\n\r\nalthough there is a feature called `keep-alive` in vue but its performance is so scaring.\r\n\r\ncause our fe developers never call `destroy` method, and https://github.com/vuejs/vue/issues/3269 not so useful in vast situations\r\n\r\n### What does the proposed API look like?\r\nno idea, perhaps user may specific state keys to store\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7091690861","Type":"IssuesEvent","CreatedAt":"2018-01-12T14:04:32","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1985","RelatedDescription":"Closed issue \"Routing doesn't work with IE 11 : URL change, back and forward buttons\" (#1985) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://cant-be-created](http://cant-be-created)\r\n\r\n### Steps to reproduce\r\n1. Create project with : vue init webpack vuejs-webpack\r\n\r\n2. Add some router components in src/router/index.js as:\r\n...\r\nimport HelloWorld from '@/components/HelloWorld'\r\nimport HelloWorld2 from '@/components/HelloWorld2'\r\n...\r\n    {\r\n      path: '/',\r\n      name: 'HelloWorld',\r\n      component: HelloWorld\r\n    },\r\n    {\r\n      path: '/example2',\r\n      name: 'HelloWorld2',\r\n      component: HelloWorld2\r\n    }\r\n\r\n3. Copy component in src/components/HelloWorld.vue into new src/components/HelloWorld2.vue\r\n\r\nChange names and a content a bit.\r\n\r\n4. Add devDependencies (Currenlty this is not clear for me) into package.json:\r\n    \"babel-polyfill\": \"^6.26.0\",\r\n    \"es6-promise\": \"^4.2.2\",\r\n    \"babel-preset-es2015\": \"^6.24.1\",\r\n\r\n5. .babelrs change as:\r\n   ...\r\n   \"stage-2\",\r\n   \"es2015\"\r\n   ...\r\n\r\n6. src/main.js as:\r\nimport Vue from 'vue'\r\nimport App from './App'\r\nimport router from './router'\r\n\r\nimport es6Promise from 'es6-promise'\r\nes6Promise.polyfill()\r\n...\r\n\r\n7. build/webpack.base.conf as:\r\n...\r\nconst babelPolyFill = require(\"babel-polyfill\")\r\n...\r\nentry: [\"babel-polyfill\", \"./src/main.js\"],\r\n...\r\n\r\n8. npm install && npm run build && npm run dev\r\n\r\n9. Open IE 11 and copy paste to URL bar http://localhost:8080/#/\r\n\r\n10. Append into url: example2 and hit enter\r\n\r\n11. NB!!! Nothing happens. Old page is visible. Should show second page content.\r\n\r\n13. Click IE refresh: site is now visible\r\n\r\n14. NB!!! Click back button: nothing happens. Second page is visible.\r\n\r\n15. Click IE refresh: first page is now visible.\r\n\r\n16. FF for example works fine with same solution.\r\n\r\n### What is expected?\r\nUrl  hash (#) part shpould change compponents for hash.\r\n\r\n### What is actually happening?\r\nNothing happens on url change IN IE. FF for example works fine.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7091075898","Type":"IssuesEvent","CreatedAt":"2018-01-12T11:29:55","Actor":"lengziyu","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1986","RelatedDescription":"Opened issue \"vue-router改为history模式，设置nginx配置时，访问报错\" (#1986) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/zh-cn/essentials/history-mode.html](https://router.vuejs.org/zh-cn/essentials/history-mode.html)\r\n\r\n### Steps to reproduce\r\nvue-router 设置为mode: 'history'，nginx配置根据官网的设置：\r\n```\r\nlocation / {\r\n  try_files $uri $uri/ /index.html;\r\n}\r\n```\r\n报错如下：\r\n```\r\nUncaught SyntaxError: Unexpected token <\r\nvendor.bb79a4c4fbca2d59f921.js:1 Uncaught SyntaxError: Unexpected token <\r\napp.51feaf429d12ada477d3.js:1 Uncaught SyntaxError: Unexpected token <\r\n```\r\n网上搜遇到同样问题的原因是：因为配置服务器的时候把js资源重定向到了index.html，但是没有解决方法。谢谢~\r\n\r\n### What is expected?\r\n能正常访问\r\n\r\n### What is actually happening?\r\n无法访问\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2018-01-13T05:30:32.6766002Z","RunDurationInMilliseconds":1942}