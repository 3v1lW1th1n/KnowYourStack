{"Data":{"Blog":{"FeedItems":[{"Title":"Contributing to Xamarin.iOS and Xamarin.Mac","PublishedOn":"2018-03-08T19:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Two years ago this month, we made some exciting announcements about the future of Xamarin. One of those announcements detailed the open sourcing of the Xamarin.iOS and Xamarin.Mac SDK. Open source is...","Href":"https://blog.xamarin.com/contributing-to-xamarin-ios-xamarin-mac/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Now Available!","PublishedOn":"2018-03-06T20:17:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Our last release, Visual Studio 2017 version 15.5, featured awesome new updates, such as the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android emulators with...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-now-available/","RawContent":null},{"Title":"Mobile Developer Events in March","PublishedOn":"2018-03-01T19:05:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Around the world, Xamarin and .NET user groups are meeting up to learn and discuss the latest news on exciting releases, tooling, and updates with Xamarin and related technologies. This March, you can...","Href":"https://blog.xamarin.com/mobile-developer-events-march/","RawContent":null},{"Title":"The New, Feature-Packed UrhoSharp 1.8","PublishedOn":"2018-02-28T19:34:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"UrhoSharp is a .NET API for building 3D experiences in your apps. A .NET binding to the Urho3D engine, it allows developers to write cross-platform code targeting Android, iOS, Windows and macOS with...","Href":"https://blog.xamarin.com/announcing-urhosharp-1-8-release/","RawContent":null},{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null},{"Title":"Add Tizen Projects to Your Xamarin.Forms Applications","PublishedOn":"2018-02-23T19:24:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Jay Cho of the Samsung Tizen team. It&#8217;s been a while since the first preview version of Tizen .NET was released. Thanks to the newest release, developing...","Href":"https://blog.xamarin.com/add-tizen-projects-xamarin-forms-apps/","RawContent":null},{"Title":"Create and Host tvOS TVML Apps with Azure and Xamarin","PublishedOn":"2018-02-22T20:30:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Creating amazing tvOS TVML apps doesn&#8217;t have to be hard. In this blog post, I&#8217;ll go over the many similarities tvOS has to iOS and show you how to create a sample quiz app using UIKit that...","Href":"https://blog.xamarin.com/create-tvos-tvml-apps-azure-xamarin/","RawContent":null},{"Title":"Use CoreML And Azure To Create Simple Xamarin.iOS Apps","PublishedOn":"2018-02-20T19:36:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last year Apple released a device-optimized machine learning framework called Core ML to make it as easy as possible to integrate machine learning and artificial intelligence services into your iOS...","Href":"https://blog.xamarin.com/coreml-azure-create-simple-xamarin-ios-apps/","RawContent":null},{"Title":"Extend Xamarin.Forms Controls Functionality with Behaviors","PublishedOn":"2018-02-16T18:48:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms provides a way to build 100% native, cross-platform applications with both a shared logic layer and a shared user-interface layer. Built-in Xamarin.Forms controls also provide a ton of...","Href":"https://blog.xamarin.com/extend-xamarin-forms-controls-functionality-with-behaviors/","RawContent":null},{"Title":"Xamarin.iOS and Xcode 9.3 Web Preview","PublishedOn":"2018-02-15T20:36:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The next release of Xcode, version 9.3,Â is currently in beta. Development of Xamarin.iOS to support the new Xcode 9.3 version is in-progress and available now as a web preview. Participating in...","Href":"https://blog.xamarin.com/xcode-9-3-web-preview-high-sierra-required/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7357847557","Type":"PullRequestEvent","CreatedAt":"2018-03-09T19:37:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1382","RelatedDescription":"Merged pull request \"Bump mono to get fix for mono/mono#7472.\" (#1382) at xamarin/xamarin-android","RelatedBody":"Fixes https://github.com/mono/mono/issues/7472.\r\n\r\nCommit list for mono/mono:\r\n\r\n* mono/mono@145ca6391f8 [d15-6-2017-10] Only null check target for delegate if method is not static. (#7477)\r\n* mono/mono@835a98d8559 Bump bockbuild to get curl error changes\r\n* mono/mono@bbd88d02b2f Bump bockbuild for mono/bockbuild#62 (#7208)\r\n* mono/mono@1eac626536b Pass TRUE for 'repeat' of send variants. This matches behavior of receive variants. Fixes blocking send call where Win32 returns WSAEWOULDBLOCK.\r\n* mono/mono@33652b57ebb Bump bockbuild to get new gtk+ repo location\r\n* mono/mono@3f39812cb9e [2017-10] [reference-assemblies] Fix public key for some newer v4.7.1 facades (#6864)\r\n\r\nDiff: https://github.com/mono/mono/compare/da1e498884ddc56ac6ca82d3703096dc6370e1b2...145ca6391f80a71efc45530a989e33dacc9bfdf4"},{"Id":"7357840400","Type":"PullRequestEvent","CreatedAt":"2018-03-09T19:35:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1385","RelatedDescription":"Merged pull request \"[build-tools] Process performance data from logcat\" (#1385) at xamarin/xamarin-android","RelatedBody":"Adds timing.csproj and improves ProcessLogcatTiming task to ease\r\ngetting performance data of a XA app running on the emulator.\r\n\r\nAn example use:\r\n\r\n```\r\nmsbuild /v:d build-tools/timing/timing.csproj /t:LogcatTiming /p:PID=7085\r\n```\r\n\r\nBTW, make sure the timing logging is enabled, before running the\r\napp. It can be enabled by running:\r\n```\r\nadb shell setprop debug.mono.log timing\r\n```"},{"Id":"7357835563","Type":"PullRequestEvent","CreatedAt":"2018-03-09T19:34:24","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1389","RelatedDescription":"Merged pull request \"Use `cp -n` during ThirdPartyNotices.txt copying.\" (#1389) at xamarin/xamarin-android","RelatedBody":"`cp -f` (or `-af`) doesn't help on Linux when copying multiple files with\r\nthe same name to one target directory (as is the case here when building\r\nboth Debug and Release configurations). Using `cp -n` means the overwrite\r\nis skipped, rather than fatal. macOS does not care about the overwrite\r\neither way - passing `-n` to BSD `cp` is non-fatal, and fixes the build\r\nfailures on Linux.\r\n\r\n```\r\ndirecthex@flame:/tmp/dirtests$ mkdir a1\r\ndirecthex@flame:/tmp/dirtests$ mkdir a2\r\ndirecthex@flame:/tmp/dirtests$ touch a1/foo.txt a2/foo.txt\r\ndirecthex@flame:/tmp/dirtests$ mkdir out\r\ndirecthex@flame:/tmp/dirtests$ cp -af a*/*.txt out/\r\ncp: will not overwrite just-created 'out/foo.txt' with 'a2/foo.txt'\r\ndirecthex@flame:/tmp/dirtests$ cp -n a*/*.txt out/\r\ndirecthex@flame:/tmp/dirtests$ \r\n```"},{"Id":"7357163928","Type":"PullRequestEvent","CreatedAt":"2018-03-09T17:08:14","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1389","RelatedDescription":"Opened pull request \"Use `cp -n` during ThirdPartyNotices.txt copying.\" (#1389) at xamarin/xamarin-android","RelatedBody":"`cp -f` (or `-af`) doesn't help on Linux when copying multiple files with\r\nthe same name to one target directory (as is the case here when building\r\nboth Debug and Release configurations). Using `cp -n` means the overwrite\r\nis skipped, rather than fatal. macOS does not care about the overwrite\r\neither way - passing `-n` to BSD `cp` is non-fatal, and fixes the build\r\nfailures on Linux.\r\n\r\n```\r\ndirecthex@flame:/tmp/dirtests$ mkdir a1\r\ndirecthex@flame:/tmp/dirtests$ mkdir a2\r\ndirecthex@flame:/tmp/dirtests$ touch a1/foo.txt a2/foo.txt\r\ndirecthex@flame:/tmp/dirtests$ mkdir out\r\ndirecthex@flame:/tmp/dirtests$ cp -af a*/*.txt out/\r\ncp: will not overwrite just-created 'out/foo.txt' with 'a2/foo.txt'\r\ndirecthex@flame:/tmp/dirtests$ cp -n a*/*.txt out/\r\ndirecthex@flame:/tmp/dirtests$ \r\n```"},{"Id":"7357020258","Type":"PullRequestEvent","CreatedAt":"2018-03-09T16:40:52","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1387","RelatedDescription":"Merged pull request \"[create-vsix] Don't package xabuild.exe symlinks\" (#1387) at xamarin/xamarin-android","RelatedBody":"`xabuild.exe` execution involves the creation of symbolic links within\r\n`bin/$(Configuration)/lib/xamarin.android/xbuild-frameworks`, pointing\r\ninto the `.NETFramework` and `.NETPortable` directories.\r\n\r\n`build-tools/create-vsix` doesn't know anything about these symbolic\r\nlinks, and *follows* them.\r\n\r\nThe result is that *if* you build with `xabuild.exe` then create a\r\n`.vsix`, the resulting file will contain lots of \"garbage\":\r\n\r\n\t$ make prepare all all-tests MSBUILD=msbuild\r\n\t# `make all-tests` executes `xabuild.exe`\r\n\t$ make create-vsix CONFIGURATIONS=Debug\r\n\t$ unzip -l Xamarin.Android.Sdk-OSS*.vsix\r\n\t...\r\n\t      135  03-08-2018 21:40   $ReferenceAssemblies/Microsoft/Framework/.NETFramework/v2.0/RedistList/FrameworkList.xml\r\n\t...\r\n\t    22640  03-08-2018 21:40   $ReferenceAssemblies/Microsoft/Framework/.NETPortable/v4.0/Microsoft.CSharp.dll\r\n\t...\r\n\r\nAll told, an extra *1041* files are included in the `.vsix` because of\r\nthe `.NETFramework` and `.NETPortable` symbolic links.\r\n\r\nFix this by introducing \"communication\" between `xabuild.exe` and\r\n`create-vsix.targets`:\r\n\r\n 1. When `xabuild.exe` creates a symbolic link, add the name of the\r\n    symbolic link into\r\n    `bin/$(Configuration)/lib/xamarin.android/xbuild-frameworks/.__sys_links.txt`.\r\n\r\n 2. Update the `AddContent` target within `create-vsix.targets` to\r\n    read the contents of `.__sys_links.txt`, and exclude each\r\n    directory found within it.\r\n\r\nThis prevents the `.NETFramework` and `.NETPortable` symlinks from\r\nbeing followed by the `.vsix` creator, allowing the `.vsix` contents\r\nto be at least marginally saner."},{"Id":"7357000337","Type":"PullRequestEvent","CreatedAt":"2018-03-09T16:37:08","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1386","RelatedDescription":"Merged pull request \"[tests] Check for \" failed \" emulator message\" (#1386) at xamarin/xamarin-android","RelatedBody":"The Jenkins emulator-based tests are [hanging][0] -- again (see also\r\n3294a50e) -- this time with new messages to `stderr`:\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/903/console\r\n\r\n\t_RegisterApplication(), FAILED TO establish the default connection to the WindowServer, _CGSDefaultConnection() is NULL.\r\n\t_RegisterApplication(), FAILED TO establish the default connection to the WindowServer, _CGSDefaultConnection() is NULL.\r\n\t2018-03-08 11:26:32.097 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\tPasteBoard: Error creating pasteboard: com.apple.pasteboard.clipboard [-4960]\r\n\t2018-03-08 11:26:32.097 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\tPasteBoard: Error creating pasteboard: com.apple.pasteboard.find [-4960]\r\n\t2018-03-08 11:26:32.100 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\t2018-03-08 11:26:32.101 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\t2018-03-08 11:26:32.101 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\t2018-03-08 11:26:32.102 qemu-system-i386[74190:5500464] CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data\r\n\r\n*Something* is horrifically wrong -- not sure what, currently -- which\r\nis causing the emulator launch to fail. However, we're not detecting\r\nit, so we later wait around ~forever until the build times out.\r\n\r\nCheck for the string ` failed ` from `stderr`, and if we see it, flag\r\nan error on emulator launch."},{"Id":"7356570534","Type":"PullRequestEvent","CreatedAt":"2018-03-09T15:17:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1388","RelatedDescription":"Merged pull request \"Skip using InstallationID if it is not available\" (#1388) at xamarin/xamarin-android","RelatedBody":"This is required to support the new \"Visual Studio Build Tools\" SKU (installs only build tools) where `devenv.isolation.ini` is not available (already confirmed this is intentional with the VS Setup team) and thus our build breaks. We are using InstallationID to support SxS at design-time so this isn't really needed in this case, it's safe to skip it."},{"Id":"7356516931","Type":"PullRequestEvent","CreatedAt":"2018-03-09T15:07:51","Actor":"victorgarciaaprea","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1388","RelatedDescription":"Opened pull request \"Skip using InstallationID if it is not available\" (#1388) at xamarin/xamarin-android","RelatedBody":"This is required to support the new \"Visual Studio Build Tools\" SKU (installs only build tools) where `devenv.isolation.ini` is not available (already confirmed this is intentional with the VS Setup team) and thus our build breaks. We are using InstallationID to support SxS at design-time so this isn't really needed in this case, it's safe to skip it."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7359324630","Type":"IssuesEvent","CreatedAt":"2018-03-10T04:56:58","Actor":"PandeyAlokKumar","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2068","RelatedDescription":"Opened issue \"Customizing the NavigationBar in Xamarin form at Content Page Label (UWP)\" (#2068) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nI am developing a Xamarin form application in which we are customizing the ToolBarItems added to NavigationPage. \r\n\r\n-- Setting the below property in XAMARIN.UWP is hiding the default EllipsisButton so i can place my own Toolbar items.\r\n <Style x:Key=\"EllipsisButton\" TargetType=\"Button\">\r\n            <Setter Property=\"MaxWidth\" Value=\"0\"/>\r\n  </Style>\r\nBut the above is behaving for the application label. \r\nI am pushing a new ContentPage as Modal Async on the Navigation and adding the toolbarItems  but not able to see the toolbar items in this current Cntent page.\r\n\r\nNavigation bar is visible but the Toolbaritems is showing as empty so user will not be able to understand which Toolbaritems action is clicked.\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\nThe added toolbaritems should be showed along with the icon and title.\r\n### Actual Behavior\r\nNavgation bar is shown with empty ToolbarItems\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7359114225","Type":"IssuesEvent","CreatedAt":"2018-03-10T02:13:47","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1904","RelatedDescription":"Closed issue \"GestureRecognizer on cell template causes iOS crash when using ObservableCollection\" (#1904) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nA custom cell template with a GestureRecognizer attached causes iOS crash when using ObservbableCollection\r\n\r\n### Steps to Reproduce\r\n\r\nUse attached sample program:\r\n\r\n1. Launch sample app\r\n2. Verify items are loaded after 3 seconds\r\n3. Click the Fav button on the right to verify it prints out debug information to console\r\n4. Click Refresh toolbar button\r\n5. Crash!\r\n\r\n### Expected Behavior\r\nNo crash\r\n\r\n### Actual Behavior\r\nCrash:\r\n\r\n```\r\nObject reference not set to an instance of an object\r\n    at Xamarin.Forms.Platform.iOS.EventTracker.LoadRecognizers () [0x0005d] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.EventTracker.OnElementChanged (System.Object sender, Xamarin.Forms.Platform.iOS.VisualElementChangedEventArgs e) [0x0004e] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].OnElementChanged (Xamarin.Forms.Platform.iOS.ElementChangedEventArgs`1[TElement] e) [0x0002c] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.FrameRenderer.OnElementChanged (Xamarin.Forms.Platform.iOS.ElementChangedEventArgs`1[TElement] e) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x00118] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.RendererPool.UpdateRenderers (Xamarin.Forms.Element newElement) [0x0008c] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.RendererPool.UpdateNewElement (Xamarin.Forms.VisualElement newElement) [0x00080] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.VisualElementPackager.SetElement (Xamarin.Forms.VisualElement oldElement, Xamarin.Forms.VisualElement newElement) [0x00050] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.VisualElementPackager.OnRendererElementChanged (System.Object sender, Xamarin.Forms.Platform.iOS.VisualElementChangedEventArgs args) [0x0001c] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].OnElementChanged (Xamarin.Forms.Platform.iOS.ElementChangedEventArgs`1[TElement] e) [0x0002c] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x00118] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.ListViewRenderer+UnevenListViewDataSource.CalculateHeightForCell (UIKit.UITableView tableView, Xamarin.Forms.Cell cell) [0x00035] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.ListViewRenderer+UnevenListViewDataSource.GetEstimatedRowHeight (UIKit.UITableView table) [0x0008c] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.ListViewRenderer.UpdateEstimatedRowHeight () [0x0006c] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.ListViewRenderer.UpdateItems (System.Collections.Specialized.NotifyCollectionChangedEventArgs e, System.Int32 section, System.Boolean resetWhenGrouped) [0x000bc] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Platform.iOS.ListViewRenderer.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0 \r\n    at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:771 \r\n    at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnProxyCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e, System.Boolean fixWindows) [0x0001a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:981 \r\n    at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnProxyCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:968 \r\n    at Xamarin.Forms.ListProxy.OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:233 \r\n    at Xamarin.Forms.ListProxy+<>c__DisplayClass33_0.<OnCollectionChanged>b__0 () [0x00018] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:206 \r\n    at Xamarin.Forms.ListProxy.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x000a0] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:225 \r\n    at Xamarin.Forms.ListProxy+WeakNotifyProxy.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00031] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:394 \r\n    at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000f] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.3/src/mono/mcs/class/referencesource/System/compmod/system/collections/objectmodel/observablecollection.cs:288 \r\n    at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedAction action, System.Object item, System.Int32 index) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.3/src/mono/mcs/class/referencesource/System/compmod/system/collections/objectmodel/observablecollection.cs:351 \r\n    at System.Collections.ObjectModel.ObservableCollection`1[T].InsertItem (System.Int32 index, T item) [0x00024] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.3/src/mono/mcs/class/referencesource/System/compmod/system/collections/objectmodel/observablecollection.cs:219 \r\n    at System.Collections.ObjectModel.Collection`1[T].Add (T item) [0x00020] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.3/src/mono/mcs/class/referencesource/mscorlib/system/collections/objectmodel/collection.cs:67 \r\n    at EnergyAlert.Pages.ArticlesPage+<LoadNextPage>d__69.MoveNext () [0x00252] in /TFS/Mobile/Applications/EnergyAlert/EnergyAlert.Shared/Pages/ArticlesPage.cs:431 \r\n```\r\n### Basic Information\r\n\r\n- Version with issue:\r\nXF 2.4+\r\n- Last known good version:\r\nlast XF 2.3.X\r\n\r\n### Reproduction Link\r\n\r\n[TestRecognizerCrash.zip](https://github.com/xamarin/Xamarin.Forms/files/1732563/TestRecognizerCrash.zip)\r\n"},{"Id":"7358799830","Type":"IssuesEvent","CreatedAt":"2018-03-09T23:44:32","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2056","RelatedDescription":"Closed issue \"XAML Parsing\" (#2056) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI just updated Xamarin.Forms version to 2.5.0 and my code is not working already. But when I returned to previous version problem stayed. I don't know why project broke and I don't remember last stable version\r\n### Steps to Reproduce\r\n\r\n<Label x:Name=\"_historyMenu\" Text=\"{local:TranslateExtension menu1}\" Grid.Row=\"0\" Style=\"{StaticResource menuItemStyle}\">\r\n\r\n### Expected Behavior\r\n\r\nNormal starting on emulator\r\n\r\n### Actual Behavior\r\nXamarin.Forms.Xaml.XamlParseException: Position 47:46. MarkupExtension not found for local:TranslateExtension\r\n\r\n### Basic Information\r\n\r\n- Version with issue:  2.5.0\r\n- Last known good version:\r\n- IDE: Visual Studio\r\n- Platform Target Frameworks\r\n  - Android: 17 and 23 SDK I tried\r\n- Affected Devices: visual studio emulator\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n![image](https://user-images.githubusercontent.com/19586466/37170778-73afa08e-2314-11e8-883c-1c70a0bfef55.png)\r\n\r\nThere is my XAML:\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:App1\"\r\n             x:Class=\"App1.MainPage\"\r\n             Title=\"E-Bookkeepper\">\r\n\r\n    <ContentPage.Resources>\r\n        <ResourceDictionary>\r\n            <Style x:Key=\"menuItemStyle\" TargetType=\"Label\">\r\n                <Setter Property=\"Grid.Column\" Value=\"1\" />\r\n                <Setter Property=\"FontSize\" Value=\"Medium\" />\r\n                <Setter Property=\"Grid.ColumnSpan\" Value=\"4\" />\r\n                <Setter Property=\"VerticalOptions\" Value=\"Center\" />\r\n                <Setter Property=\"Margin\" Value=\"0\" />\r\n            </Style>\r\n        </ResourceDictionary>\r\n    </ContentPage.Resources>\r\n    <ContentPage.ToolbarItems>\r\n        <ToolbarItem Name=\"Create\" Icon=\"menu.png\" Clicked=\"Button_Clicked\"></ToolbarItem>\r\n    </ContentPage.ToolbarItems>\r\n    <AbsoluteLayout x:Name=\"_mainContainer\" BackgroundColor=\"Black\" Padding=\"0\">\r\n        <Label x:Name=\"_labelResidue\" TextColor=\"DarkCyan\" IsVisible=\"False\" AbsoluteLayout.LayoutBounds=\".5, .8, .8, .1\"\r\n                AbsoluteLayout.LayoutFlags=\"All\" HorizontalTextAlignment=\"Center\" VerticalTextAlignment=\"Center\"></Label>\r\n        <Button x:Name=\"_butAdd\" Image=\"addButton.png\" BorderRadius=\"20\" BorderWidth=\"0\" AbsoluteLayout.LayoutBounds=\"0.5, 0.5, 85, 69\"\r\n                AbsoluteLayout.LayoutFlags=\"PositionProportional\"\r\n                BackgroundColor=\"Transparent\" BorderColor=\"Blue\" Clicked=\"Add_Clicked\"/>\r\n        <Frame x:Name=\"_menuPanel\" CornerRadius=\"10\" AbsoluteLayout.LayoutBounds=\"-1.5, 0, 0.6, 0.27\" AbsoluteLayout.LayoutFlags=\"All\" BackgroundColor=\"Ivory\" Padding=\"15,10,15,10\">\r\n            <Grid RowSpacing=\"0\" ColumnSpacing=\"0\" Padding=\"0\">\r\n                <Grid.RowDefinitions>\r\n                    <RowDefinition Height=\"*\" />\r\n                    <RowDefinition Height=\"11\" />\r\n                    <RowDefinition Height=\"*\" />\r\n                    <RowDefinition Height=\"11\" />\r\n                    <RowDefinition Height=\"*\" />\r\n                    <RowDefinition Height=\"11\" />\r\n                    <RowDefinition Height=\"*\" />\r\n                </Grid.RowDefinitions>\r\n                <Grid.ColumnDefinitions>\r\n                    <ColumnDefinition Width=\"*\" />\r\n                    <ColumnDefinition Width=\"*\" />\r\n                    <ColumnDefinition Width=\"*\" />\r\n                    <ColumnDefinition Width=\"*\" />\r\n                    <ColumnDefinition Width=\"*\" />\r\n                </Grid.ColumnDefinitions>\r\n                <Image Grid.Column=\"0\" Grid.Row=\"0\" Source=\"history.png\" Aspect=\"AspectFit\" Margin=\"0,0,10,0\" VerticalOptions=\"Fill\"/>\r\n                <Label x:Name=\"_historyMenu\" Text=\"{local:TranslateExtension menu1}\" Grid.Row=\"0\" Style=\"{StaticResource menuItemStyle}\">\r\n                    <Label.GestureRecognizers>\r\n                        <TapGestureRecognizer Tapped=\"MenuOnSelected\"/>\r\n                    </Label.GestureRecognizers>\r\n                </Label>\r\n                <BoxView Grid.Column=\"0\" Grid.Row=\"1\" Grid.ColumnSpan=\"5\" BackgroundColor=\"DarkGray\" HorizontalOptions=\"Fill\" HeightRequest=\"1\" Margin=\"0,5\"/>\r\n                <Image Grid.Column=\"0\" Grid.Row=\"2\" Source=\"statistic.png\" Aspect=\"AspectFit\" Margin=\"0,0,10,0\" VerticalOptions=\"Fill\"/>\r\n                <Label x:Name=\"_statisticMenu\" Grid.Row=\"2\" Text=\"{local:TranslateExtension menu2}\" Style=\"{StaticResource menuItemStyle}\">\r\n                    <Label.GestureRecognizers>\r\n                        <TapGestureRecognizer Tapped=\"MenuOnSelected\"/>\r\n                    </Label.GestureRecognizers>\r\n                </Label>\r\n                <BoxView Grid.Column=\"0\" Grid.Row=\"3\" Grid.ColumnSpan=\"5\" BackgroundColor=\"DarkGray\" HorizontalOptions=\"Fill\" HeightRequest=\"1\"  Margin=\"0,5\"/>\r\n                <Image Grid.Column=\"0\" Grid.Row=\"4\" Source=\"settings.png\" Aspect=\"AspectFit\" Margin=\"0,0,10,0\" VerticalOptions=\"Fill\"/>\r\n                <Label x:Name=\"_settingsMenu\" Grid.Row=\"4\" Text=\"{local:TranslateExtension menu3}\" Style=\"{StaticResource menuItemStyle}\">\r\n                    <Label.GestureRecognizers>\r\n                        <TapGestureRecognizer Tapped=\"MenuOnSelected\"/>\r\n                    </Label.GestureRecognizers>\r\n                </Label>\r\n                <BoxView Grid.Column=\"0\" Grid.Row=\"5\" Grid.ColumnSpan=\"5\" BackgroundColor=\"DarkGray\" HorizontalOptions=\"Fill\" HeightRequest=\"1\"  Margin=\"0,5\"/>\r\n                <Image Grid.Column=\"0\" Grid.Row=\"6\" Source=\"bug.png\" Aspect=\"AspectFit\" Margin=\"0,0,10,0\" VerticalOptions=\"Fill\"/>\r\n                <Label x:Name=\"_bugMenu\" Grid.Row=\"6\" Text=\"{local:TranslateExtension menu4}\" TextColor=\"Red\" Style=\"{StaticResource menuItemStyle}\">\r\n                    <Label.GestureRecognizers>\r\n                        <TapGestureRecognizer Tapped=\"MenuOnSelected\"/>\r\n                    </Label.GestureRecognizers>\r\n                </Label>\r\n            </Grid>\r\n            \r\n        </Frame>\r\n    </AbsoluteLayout>\r\n\r\n</ContentPage>"},{"Id":"7357981417","Type":"IssuesEvent","CreatedAt":"2018-03-09T20:07:41","Actor":"offroadn","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2067","RelatedDescription":"Opened issue \"TabbedPage & Splash with iPhone X SafeArea\" (#2067) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nHow do I solve the issue with using tabs on iOS 11 - iPhone X where the tabs are adjusted outside the tabbar area? Also, the splash image becomes stretched. I have tried implementing the SetUseSafeArea. All other devices seem to work correctly.\r\n### Steps to Reproduce\r\n\r\n1. use Iphone X\r\n2. Have mulitple tabs with images (icons)\r\n3. Load screen\r\n\r\n### Expected Behavior\r\nimages are centered within tabbar item\r\n### Actual Behavior\r\nimages are pulled out of the tabbar item\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: never\r\n- IDE: VS for Mac\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n  - Android: N/A\r\n  - UWP:  N/A\r\n- Android Support Library Version: N/A\r\n- Nuget Packages: 2.5.0.280555\r\n- Affected Devices: \r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/12273672/37227158-49648a92-23aa-11e8-8531-4b30165430fb.png)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7358711163","Type":"PullRequestEvent","CreatedAt":"2018-03-09T23:13:17","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3717","RelatedDescription":"Opened pull request \"[ObjCRuntime] Don't double-retain blocks.\" (#3717) at xamarin/xamarin-macios","RelatedBody":"First there was darkness; no blocks were retained.\n\nThen came the light; and all blocks were retained [1]\n\nForever.\n\nBut all that once is, must one day not be,\nand thus the light gave way to darkness,\nand blocks were only retained as long as need be [2].\n\nBut before there was a balance, there was a crossroad.\n\nIn some places the light shone forever,\nand all blocks were retained.\n\nIn other places there was a balance,\nand the light shone only as long as needed.\n\nA desire to unify arose.\n\nAlas, it could not be.\n\nIt was a bright and sunny day\n\nWhen a merge failed [3].\n\nAnd all blocks were retained. Twice.\n\nOnce [here][4] and once [there][5].\n\nFor many years we could not see.\n\nIntil a dark and rainy night,\nwhen an awareness arose.\n\nAnd the desire to unify the balance could finally be fulfilled.\n\n[1]: https://github.com/xamarin/maccore/commit/6efca92acb5d0f2b1b495a40ac2e89586200d206\n[2]: https://github.com/xamarin/maccore/commit/a22f877539058b889555ae4decae0f2e9aca029c\n[3]: https://github.com/xamarin/maccore/commit/befa0477cf9f3c9602d3fda6b9dee65e5bba506f\n[4]: https://github.com/xamarin/xamarin-macios/blob/5158a3c00138ae9bc45979487ca6a0fbc3fccc4d/src/ObjCRuntime/Runtime.cs#L858\n[5]: https://github.com/xamarin/xamarin-macios/blob/5158a3c00138ae9bc45979487ca6a0fbc3fccc4d/runtime/runtime.m#L2091"},{"Id":"7358560853","Type":"IssuesEvent","CreatedAt":"2018-03-09T22:28:11","Actor":"lobrien","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3716","RelatedDescription":"Opened issue \"GameplayKit.GKNoise.DisplaceX should be named Displace or DisplaceWithNoises\" (#3716) at xamarin/xamarin-macios","RelatedBody":"The function `GameplayKit.GKNoise.DisplaceX` binds `displaceXWithNoise:yWithNoise:zWithNoise:` The name `DisplaceX` incorrectly suggests that displacement can only be done along one axis. \r\n\r\n"},{"Id":"7358511519","Type":"PullRequestEvent","CreatedAt":"2018-03-09T22:15:02","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3711","RelatedDescription":"Merged pull request \"[d15-7] [mtouch] When loading cached linked results, we need to propagate the 'RemoveDynamicRegistrar' value to code-sharing extensions. (#3708)\" (#3711) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7357929176","Type":"PullRequestEvent","CreatedAt":"2018-03-09T19:55:43","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3660","RelatedDescription":"Merged pull request \"[xharness] Don't count the skipped tests as failed\" (#3660) at xamarin/xamarin-macios","RelatedBody":"Currently we consider the failed **and** the skipped tests as failures which is confusing. The tests didn't all \"fail\" because some were just not ran.\r\n\r\nThis PR updates the summary message to be a little more clear."},{"Id":"7357922560","Type":"PullRequestEvent","CreatedAt":"2018-03-09T19:54:17","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3712","RelatedDescription":"Merged pull request \"[tests] Backport test fixes so bots don't report them on every backports\" (#3712) at xamarin/xamarin-macios","RelatedBody":"note: don't squash"},{"Id":"7357867320","Type":"PullRequestEvent","CreatedAt":"2018-03-09T19:41:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3709","RelatedDescription":"Merged pull request \"[d15-7] Bump mono to get fix for mono/mono#7364. (#3706)\" (#3709) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@266326d7c21 Move the check for open constructed types later in mono_jit_compile_method_with_opt (), this function can receive gshared methods in llvmonly mode. (#7505)\n* mono/mono@89cc3619d5e Use runtime template for iOS\n* mono/mono@05453b1c80e Use runtime template for Android\n* mono/mono@0938bbc98c5 Create common runtime compilation template\n* mono/mono@c06eb62b141 Have RELEASE be empty when CONFIGURATION != 'release'\n* mono/mono@0fb02c88cdd Move common targets\n* mono/mono@d4aa545f561 [metadata] An array is not an IEnumerator`1\n* mono/mono@ff7f5576d24 [test] An array is not an IEnumerator`1\n* mono/mono@d5d67eab6a9 [metadata] Add IEnumerator`1 to MonoDefaults struct\n* mono/mono@15d76bf5e2d Revert \"[profiler] Correctly encode counter type/unit/variance values.\"\n* mono/mono@f3ac8fdeb37 Fix for gcc 4.4; nominal support for older. attribute(deprecated(message)) was introduced in gcc 4.5. attribute(deprecated) was introduced in gcc 4.0? pragma GCC diagnostic 4.2? https://github.com/mono/mono/issues/7408 (#7436)\n* mono/mono@1f48672a900 Fixes decoding of CMS/PKCS #7 messages with an explicit cryptographic object identifier\n\nDiff: https://github.com/mono/mono/compare/becded26061f7b5b8960d59df72f454f9751fe6d...266326d7c21b4b6f523145fa87ade0b6fdc5bd6c"},{"Id":"7357729839","Type":"IssuesEvent","CreatedAt":"2018-03-09T19:11:16","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3714","RelatedDescription":"Closed issue \"new ARFaceGeometry(ARBlendShapeLocationOptions) throws on construction\" (#3714) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n(Run attached workbook or...)\r\n[Cannot_Create_ARFaceGeometry.workbook.zip](https://github.com/xamarin/xamarin-macios/files/1798000/Cannot_Create_ARFaceGeometry.workbook.zip)\r\n\r\n\r\n1. Create a new iOS 11 solution\r\n2. using ARKit;\r\n3. in ViewWillLoad() or similar:\r\n\r\n    var expression = new ARBlendShapeLocationOptions();\r\n    var faceForBlending = new ARFaceGeometry(expression);\r\n\r\n### Expected Behavior\r\n\r\nAn `ARFaceGeometry` initialized with default expression (0 values on expression variables). \r\n\r\n### Actual Behavior\r\n\r\nException: Could not initialize an instance of the type 'ARKit.ARFaceGeometry': the native 'initWithBlendShapes:' method returned nil.\r\nIt is possible to ignore this condition by setting MonoTouch.ObjCRuntime.Class.ThrowOnInitFailure to false.\r\nat void Foundation.NSObject.InitializeHandle (IntPtr handle, string initSelector)\r\nat ARKit.ARFaceGeometry..ctor (NSDictionary blendShapes)\r\nat ARKit.ARFaceGeometry..ctor (ARBlendShapeLocationOptions blendShapes)\r\nat void System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw ()\r\nat void System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (Task task)\r\nat void System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (Task task)\r\nat void System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (Task task)\r\nat object System.Runtime.CompilerServices.TaskAwaiter<object>.GetResult ()\r\nat void Xamarin.Interactive.CodeAnalysis.EvaluationContext.<RunAsync>d__26.MoveNext ()\r\n\r\n### Environment\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: 6b94f136-026d-4a5a-bf6d-af2c0d8dc019\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.3\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.3\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14126.4)\r\nBuild 9Q117m\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.0.8 (Visual Studio Community)\r\nHash: 8ba51035\r\nBranch: xcode9.3\r\nBuild date: 2018-03-08 00:56:09-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.15 (Visual Studio Community)\r\nAndroid SDK: /Users/larryobrien/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t5.0 (API level 21)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 25.0.3\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_162\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_162-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nAddinMaker 1.4.2\r\nLarry's F# Templates 2.0.8\r\nMicroFramework 1.0.3\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"972152285550862336","CreatedAt":"2018-03-09T16:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:â¦ https://t.co/hDELQELDqc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":102,"FavoriteCount":33,"RawContent":null},{"Id":"971835801377091585","CreatedAt":"2018-03-08T19:51:25+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Macâno code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/FGappPLbxT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":25,"RawContent":null},{"Id":"971796730722377729","CreatedAt":"2018-03-08T17:16:10+00:00","UserScreenname":"xamarinhq","Text":"An introduction to #tvOS with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/Qafo4W8L3m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null},{"Id":"971430573867720704","CreatedAt":"2018-03-07T17:01:11+00:00","UserScreenname":"xamarinhq","Text":"Learn how to turn on automatic signing that allows #VS4Mac to take care of generating and using the required signinâ¦ https://t.co/snE707bjji","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":9,"RawContent":null},{"Id":"971119957894418433","CreatedAt":"2018-03-06T20:26:55+00:00","UserScreenname":"xamarinhq","Text":"#VS2017 version 15.6 is now available! Get all the details on this exciting release: https://t.co/QIxlfX9I7F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":35,"RawContent":null},{"Id":"971068644288540672","CreatedAt":"2018-03-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/b0oYm5btmK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":16,"RawContent":null},{"Id":"970709776488419328","CreatedAt":"2018-03-05T17:17:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":17,"RawContent":null},{"Id":"970456916488015873","CreatedAt":"2018-03-05T00:32:13+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/jQn1NkyLSA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":12,"RawContent":null},{"Id":"970104538375118848","CreatedAt":"2018-03-04T01:12:00+00:00","UserScreenname":"xamarinhq","Text":"Better resource organization in #XamarinForms: https://t.co/8bKeJx4e22","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":18,"RawContent":null},{"Id":"969656588805001217","CreatedAt":"2018-03-02T19:32:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss this! It's your chance to ask living legend @migueldeicaza your questions in his @redditâ¦ https://t.co/6qG4JhCwia","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"969616829483311104","CreatedAt":"2018-03-02T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/3D8bDqoefW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":107,"FavoriteCount":32,"RawContent":null},{"Id":"969291313173745665","CreatedAt":"2018-03-01T19:20:32+00:00","UserScreenname":"xamarinhq","Text":"Amp up your skills with a #Xamarin mobile developer event near you in March: https://t.co/glgXli4KCp https://t.co/hUYXkqMYl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":14,"RawContent":null},{"Id":"969256455504318464","CreatedAt":"2018-03-01T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/MNLAkVzqaz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null},{"Id":"968935619358527488","CreatedAt":"2018-02-28T19:47:08+00:00","UserScreenname":"xamarinhq","Text":"Check out the new, feature-packed release of #UrhoSharp 1.8: https://t.co/ZxSIstdhNE https://t.co/cwathwkTEw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"968895325460103168","CreatedAt":"2018-02-28T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/YZBmRK5CcT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":11,"RawContent":null},{"Id":"968530780724088832","CreatedAt":"2018-02-27T16:58:27+00:00","UserScreenname":"xamarinhq","Text":"Our own @mayur_tendulkar shows you how to build a mobile app using #XamarinForms and the Microsoft Graph API:â¦ https://t.co/svcX6jHBJ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":17,"RawContent":null},{"Id":"968204127166754816","CreatedAt":"2018-02-26T19:20:26+00:00","UserScreenname":"xamarinhq","Text":"Get a sneak peek at our newest @XamarinU course, \"Navigation Patterns in #XamarinForms\": https://t.co/3fd0sIUJMZ https://t.co/GzDZxRtlZH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":21,"RawContent":null},{"Id":"968170803916361728","CreatedAt":"2018-02-26T17:08:02+00:00","UserScreenname":"xamarinhq","Text":"Learn how to supercharge your Xamarin.Mac app startup times: https://t.co/JzwELyF3Tm https://t.co/ABxM6v3B6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":4,"RawContent":null},{"Id":"967928201430388736","CreatedAt":"2018-02-26T01:04:01+00:00","UserScreenname":"xamarinhq","Text":"Implement or improve end-to-end mobile #DevOps in your apps with this series from Greg Shackles on the #VSAppCenterâ¦ https://t.co/bCckhyxtl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null}]}},"RunOn":"2018-03-10T05:30:39.6466638Z","RunDurationInMilliseconds":4260}