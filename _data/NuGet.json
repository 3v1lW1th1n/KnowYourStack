{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11616862107","Type":"IssuesEvent","CreatedAt":"2020-02-26T16:21:46","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7849","RelatedDescription":"Closed issue \"[2020-02-18] Deployment\" (#7849) at NuGet/NuGetGallery","RelatedBody":"### NuGetGallery\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=578473\r\n\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD\r\n\r\n### Azure Search Service\r\n\r\nChanges:\r\n- Use managed identity for KeyVault access: https://github.com/NuGet/Engineering/issues/2972\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=579684\r\n\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD\r\n\r\n### CDNRedirect service\r\n\r\nChanges:\r\n- Use KeyVault integrated certificate: https://github.com/NuGet/Engineering/issues/2995\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=580913\r\n\r\n- [x] DEV\r\n- [x] PROD\r\n\r\n### Licenses service\r\n\r\nChanges:\r\n- Use KeyVault integrated certificate: https://github.com/NuGet/Engineering/issues/2995\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=580910\r\n\r\n- [x] DEV\r\n- [x] PROD"},{"Id":"11610145333","Type":"IssuesEvent","CreatedAt":"2020-02-26T02:05:58","Actor":"rafaels-dev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7854","RelatedDescription":"Closed issue \"Error on VS 2012 during temporary deactivation os TLS 1.0\" (#7854) at NuGet/NuGetGallery","RelatedBody":"I'm using VS 2012 and during the [TLS 1.0 deactivation](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/), my NuGet Package Manager got an issue.\r\n\r\nI can't search os install packages.\r\n![image](https://user-images.githubusercontent.com/5066597/75301330-4a2b4d80-5819-11ea-873d-85d36c3082d4.png)\r\n\r\nMy VS 2012 About:\r\n```\r\nMicrosoft Visual Studio Professional 2012\r\nVersion 11.0.61219.00 Update 5\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nMicrosoft Visual Studio Tools for Applications 2012   04938-004-0033001-02768\r\nMicrosoft Visual Studio Tools for Applications 2012\r\n\r\nTeam Explorer for Visual Studio 2012   04938-004-0033001-02768\r\nMicrosoft Team Explorer for Visual Studio 2012\r\n\r\nVisual Basic 2012   04938-004-0033001-02768\r\nMicrosoft Visual Basic 2012\r\n\r\nVisual C# 2012   04938-004-0033001-02768\r\nMicrosoft Visual C# 2012\r\n\r\nVisual C++ 2012   04938-004-0033001-02768\r\nMicrosoft Visual C++ 2012\r\n\r\nVisual F# 2012   04938-004-0033001-02768\r\nMicrosoft Visual F# 2012\r\n\r\nVisual Studio 2012 Code Analysis Spell Checker   04938-004-0033001-02768\r\nMicrosoft® Visual Studio® 2012 Code Analysis Spell Checker\r\n\r\nPortions of International CorrectSpell™ spelling correction system © 1993 by Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nThe American Heritage® Dictionary of the English Language, Third Edition Copyright © 1992 Houghton Mifflin Company. Electronic version licensed from Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nASP.NET and Web Tools   2012.3.41009\r\nMicrosoft Web Developer Tools contains the following components:\r\nSupport for creating and opening ASP.NET web projects\r\nBrowser Link: A communication channel between Visual Studio and browsers\r\nEditor extensions for HTML, CSS, and JavaScript\r\nPage Inspector: Inspection tool for ASP.NET web projects\r\nScaffolding: A framework for building and running code generators\r\nServer Explorer extensions for Windows Azure Web Sites\r\nWeb publishing: Extensions for publishing ASP.NET web projects to hosting providers, on-premises servers, or Windows Azure\r\n\r\nGit Source Control Provider   1.0.0.0\r\n\r\n\r\nNuGet Package Manager   2.8.60318.667\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.0\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   11.1.20627.00\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik Reporting   \r\nFor more information please visit http://www.telerik.com/reporting. Copyright © 2005–2020 Telerik Corp.\r\n\r\nWeb Essentials   3.8\r\nAdds many useful features to Visual Studio for web developers.\r\n```"},{"Id":"11609736510","Type":"IssuesEvent","CreatedAt":"2020-02-26T00:57:24","Actor":"rafaels-dev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7854","RelatedDescription":"Opened issue \"Error on VS 2012 during temporary deactivation os TLS 1.0\" (#7854) at NuGet/NuGetGallery","RelatedBody":"I'm using VS 2012 and during the [TLS 1.0 deactivation](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/), my NuGet Package Manager got an issue.\r\n\r\nI can't search os install packages.\r\n![image](https://user-images.githubusercontent.com/5066597/75301330-4a2b4d80-5819-11ea-873d-85d36c3082d4.png)\r\n\r\nMy VS 2012 About:\r\n```\r\nMicrosoft Visual Studio Professional 2012\r\nVersion 11.0.61219.00 Update 5\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nMicrosoft Visual Studio Tools for Applications 2012   04938-004-0033001-02768\r\nMicrosoft Visual Studio Tools for Applications 2012\r\n\r\nTeam Explorer for Visual Studio 2012   04938-004-0033001-02768\r\nMicrosoft Team Explorer for Visual Studio 2012\r\n\r\nVisual Basic 2012   04938-004-0033001-02768\r\nMicrosoft Visual Basic 2012\r\n\r\nVisual C# 2012   04938-004-0033001-02768\r\nMicrosoft Visual C# 2012\r\n\r\nVisual C++ 2012   04938-004-0033001-02768\r\nMicrosoft Visual C++ 2012\r\n\r\nVisual F# 2012   04938-004-0033001-02768\r\nMicrosoft Visual F# 2012\r\n\r\nVisual Studio 2012 Code Analysis Spell Checker   04938-004-0033001-02768\r\nMicrosoft® Visual Studio® 2012 Code Analysis Spell Checker\r\n\r\nPortions of International CorrectSpell™ spelling correction system © 1993 by Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nThe American Heritage® Dictionary of the English Language, Third Edition Copyright © 1992 Houghton Mifflin Company. Electronic version licensed from Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nASP.NET and Web Tools   2012.3.41009\r\nMicrosoft Web Developer Tools contains the following components:\r\nSupport for creating and opening ASP.NET web projects\r\nBrowser Link: A communication channel between Visual Studio and browsers\r\nEditor extensions for HTML, CSS, and JavaScript\r\nPage Inspector: Inspection tool for ASP.NET web projects\r\nScaffolding: A framework for building and running code generators\r\nServer Explorer extensions for Windows Azure Web Sites\r\nWeb publishing: Extensions for publishing ASP.NET web projects to hosting providers, on-premises servers, or Windows Azure\r\n\r\nGit Source Control Provider   1.0.0.0\r\n\r\n\r\nNuGet Package Manager   2.8.60318.667\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.0\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   11.1.20627.00\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik Reporting   \r\nFor more information please visit http://www.telerik.com/reporting. Copyright © 2005–2020 Telerik Corp.\r\n\r\nWeb Essentials   3.8\r\nAdds many useful features to Visual Studio for web developers.\r\n```"},{"Id":"11607150819","Type":"IssuesEvent","CreatedAt":"2020-02-25T19:21:31","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7853","RelatedDescription":"Opened issue \"\"Contact owners\" link should not appear on a package details page when there are no owners\" (#7853) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nA package details page for a package without any owners still shows the \"Contact owners\" link on the right. It is unclear what will happen when the message is sent.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Find a package with no owners ([example](https://www.nuget.org/packages/bar/))\r\n2. Look at its package details page\r\n3. See the \"Contact owners\" link on the right\r\n\r\n### Expected behavior\r\nNo \"Contact owners\" link.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/102933/75279548-a1510400-57c0-11ea-8acd-a6d230eb3f83.png)\r\n"},{"Id":"11599455192","Type":"IssuesEvent","CreatedAt":"2020-02-25T02:18:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/4973","RelatedDescription":"Closed issue \"Gallery accepts packages containing floating version ranges in dependencies\" (#4973) at NuGet/NuGetGallery","RelatedBody":"The following packages have floating versions in their dependency version ranges:\r\n\r\nID | Version\r\n-- | --\r\nScissorhands.Helpers | 1.0.0-alpha-17\r\nScissorhands.Helpers | 1.0.0-alpha-16\r\nPInvokeCompiler | 1.0.0-rc1\r\nJWT | 2.3.1\r\n\r\nThese should be rejected on upload and V3 registrations should strip the floating-ness, as client does:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/bdd8626c0e5c6ee0b505ea8a1274c5fe941fb6d1/src/NuGet.Core/NuGet.Protocol/DependencyInfo/RegistrationUtility.cs#L26\r\n\r\n/cc @emgarten "},{"Id":"11599448801","Type":"IssuesEvent","CreatedAt":"2020-02-25T02:17:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7836","RelatedDescription":"Closed issue \"Remove the SemVer 2.0.0 warning from nuget.org\" (#7836) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nWhen the SemVer 2.0.0 changes were introduced to the V2 and V3 protocol, they are intended to mitigate the impact of SemVer 2.0.0 packages breaking old clients, e.g. suppose a very popular package released a SemVer 2.0.0 version. In such a case a 2.x customer would fail to restore a package because the version parsing would explode. So we make SemVer 2.0.0 packages \"opt-in\". \r\n\r\nThis protocol change meant that SemVer 2.0.0 packages were hidden in most of our APIs for clients that predate NuGet version 4.3. 4.3 is when the SemVer 2.0.0 protocol was implemented. At that same time we put a warning banner on nuget.org.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73881689-a223f500-4815-11ea-8717-653f6302cc65.png)\r\nhttps://www.nuget.org/packages/NuGet.Versioning/5.5.0-preview.2.6382\r\n\r\nA similar warning is also visible during UI upload and during package push. And during pack (NU5105).\r\n\r\nSince 4.3 was shipped so long ago, most clients now support the SemVer 2.0.0 protocol and this warning is more noisy than helpful.\r\n\r\nRange | Percent | Note\r\n-- | -- | --\r\n≥ 4.3 | ~96.4% | Supports SemVer 2.0.0 protocol\r\n≥ 3.0 && < 4.3 | ~3.6% | Partial SemVer 2.0.0 but not SemVer 2.0.0 protocol `*`\r\n< 3.0 | ~0.0% | Does not support SemVer 2.0.0\r\n\r\n`*` =\r\n- Anything before 4.3 will not see SemVer 2.0.0 in search or in the PM UI.\r\n- 3.5.0 and on supported SemVer 2.0.0 restore in packages.config so people can hand edit to work-around.\r\n- PackageReference always supported SemVer 2.0.0 from what I can tell so people could hard-code a SemVer 2.0.0 package in their .csproj and still restore.\r\n- V3 feeds always return SemVer 2.0.0 packages from flat container so packages can be found prior to SemVer 2.0.0. protocol support\r\n\r\n### Describe the solution you'd like\r\n\r\nRemove these warnings entirely.\r\n\r\n### Additional details\r\n\r\nPrompted by https://twitter.com/SimonCropp/status/1169447145939685376, https://github.com/NuGet/NuGetGallery/pull/7772, and https://github.com/NuGet/Home/issues/5201.\r\n\r\n/cc @nkolev92 @SimonCropp @agr @karann-msft \r\n"},{"Id":"11581895546","Type":"PullRequestEvent","CreatedAt":"2020-02-22T00:15:25","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7852","RelatedDescription":"Merged pull request \"[NuGetGallery] FI master to Dev\" (#7852) at NuGet/NuGetGallery","RelatedBody":"pulling my hotfix changes to dev for consistency and convenience for next RI whenever."},{"Id":"11581837337","Type":"PullRequestEvent","CreatedAt":"2020-02-22T00:01:39","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7852","RelatedDescription":"Opened pull request \"[NuGetGallery] FI master to Dev\" (#7852) at NuGet/NuGetGallery","RelatedBody":"pulling my hotfix changes to dev for consistency and convenience for next RI whenever."},{"Id":"11581543994","Type":"IssuesEvent","CreatedAt":"2020-02-21T22:58:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7741","RelatedDescription":"Closed issue \"[C2R] Implement registration comparer to detect differences between new and old\" (#7741) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11581433661","Type":"PullRequestEvent","CreatedAt":"2020-02-21T22:37:42","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7851","RelatedDescription":"Merged pull request \"[HOTFIX] Fix GalleryAccount deleter job DI issue\" (#7851) at NuGet/NuGetGallery","RelatedBody":"This job threw exception when deleting a user due to DI issues. \r\n\r\n@ryuyu provided the fix, I am going to deploy it.\r\n\r\nThis was tested on DEV with the private branch."},{"Id":"11581408401","Type":"PullRequestEvent","CreatedAt":"2020-02-21T22:33:14","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7851","RelatedDescription":"Opened pull request \"[HOTFIX] Fix GalleryAccount deleter job DI issue\" (#7851) at NuGet/NuGetGallery","RelatedBody":"This job threw exception when deleting a user due to DI issues. \r\n\r\n@ryuyu provided the fix, I am going to deploy it.\r\n\r\nThis was tested on DEV with the private branch."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11621979028","Type":"IssuesEvent","CreatedAt":"2020-02-27T04:57:21","Actor":"markolbert","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9228","RelatedDescription":"Opened issue \"project.assets.json content doesn't parse with JSON deserializers\" (#9228) at NuGet/Home","RelatedBody":"Not sure if this is the right place to raise this kind of question but it's where a search on some similar questions pointed me to...\r\n\r\nI'm writing a C# metadata extractor which requires that I parse `project.assets.json` in order to locate the assembly references I need to have Roslyn compile the project I'm analyzing. This is complicated by the structure of `project.assets.json` not being well-formed, in the sense that it can't be easily deserialized by a JSON deserializer.\r\n\r\nConsider the following example:\r\n\r\n```\r\n{\r\n  \"version\": 3,\r\n  \"targets\": {\r\n    \".NETStandard,Version=v2.1\": {\r\n      \"Autofac/5.1.2\": {\r\n        \"type\": \"package\",\r\n        \"compile\": {\r\n          \"lib/netstandard2.1/Autofac.dll\": {}\r\n        },\r\n        \"runtime\": {\r\n          \"lib/netstandard2.1/Autofac.dll\": {}\r\n        }\r\n      },\r\n```\r\nBoth the first target (\".NETStandard...\") and the package identifier (\"Autofac/5.1.2\") are valid JSON identifiers but not valid C# property names. Which is what upsets the deserializers I've tried (JSON.Net and System.Text.Json).\r\n\r\nI'm curious as to why a structure something like the following isn't used:\r\n\r\n```\r\n{\r\n  \"version\" : 3,\r\n  \"targets\" : [\r\n    {\r\n      \"targetName\" : \"NetStandard\",\r\n      \"targetVersion\" : \"2.1.0\",\r\n      \"packages\" : [\r\n        {\r\n          \"name\" : \"Autofac\",\r\n          \"version\" : \"5.1.2\",\r\n          \"type\" : \"package\",\r\n          \"dependencies\" : [ ],\r\n          \"compile\" : [\r\n            \"lib/netstandard2.1/Autofac.dll\"\r\n          ],\r\n          \"runtime\" : [\r\n            \"lib/netstandard2.1/Autofac.dll\"\r\n          ]\r\n        },\r\n```"},{"Id":"11621299095","Type":"IssuesEvent","CreatedAt":"2020-02-27T02:27:12","Actor":"NithishHemanth","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9227","RelatedDescription":"Opened issue \"How use nuget pack push on Jenkins installed on Linux\" (#9227) at NuGet/Home","RelatedBody":"\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuget.exe \r\n\r\nNuGet version (x.x.x.xxx):\r\n5.4.0 or previous versions till 3.3.0\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nLinux \r\n\r\nWorked before? If so, with which NuGet version:\r\nI tried to create nupkg packages and push to artifactory using nuget 3.3.0 and later in Jenkins 1.546 installed on LINUX OS.\r\n\r\nNuget commands are not working at both windows command build step as well shell command build step. Please suggest to get this working for Jenkins installed on Linux\r\n\r\nCommands used to create nuget packages :\r\nnuget pack xxx.nuspec\r\n\r\nCommands used to push artifacts to artifactory:\r\nnuget setApiKey xxxx:xxxx -Source xxxx\r\nnuget push *.nupkg -Source xxxx\r\n\r\nNOTE: i have tried the same at jenkins installed on Windows worked fine. No issues.\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11621171469","Type":"IssuesEvent","CreatedAt":"2020-02-27T02:01:14","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8852","RelatedDescription":"Closed issue \"Nuget package restore not working vs2019\" (#8852) at NuGet/Home","RelatedBody":"Building a project throws this error:\r\n\r\nThis project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is C:\\Repos\\***\\***\\\\.nuget\\NuGet.targets.\r\n\r\nI checked and nuget package restore is enabled.\r\n\r\nI closed and reopened visual studio, tried to build, opened nuget manager but it is not building and not restoring missing packages.\r\n\r\nI followed this article:\r\nhttps://docs.microsoft.com/en-us/nuget/consume-packages/package-restore-troubleshooting\r\nWhich suggests if the packages are not restored automatically to file an issue here.\r\n\r\nPlease advise.\r\n\r\nusing visual studio enterprise 2019 version 16.3.9\r\nthe project opens and works fine on a different computer with vs2017"},{"Id":"11620671380","Type":"IssuesEvent","CreatedAt":"2020-02-27T00:20:58","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9042","RelatedDescription":"Closed issue \"Restore:  closure computed for each project 4 times\" (#9042) at NuGet/Home","RelatedBody":"[`DependencyGraphSpec.GetClosure(...)`](https://github.com/NuGet/NuGet.Client/blob/74d1935e4e25a90df536ae7cac6cf7c73c6ea678/src/NuGet.Core/NuGet.ProjectModel/DependencyGraphSpec.cs#L142-L181) is called twice for each project.  Once in [`DependencyGraphSpecRequestProvider.GetRequestsFromItems(…)`](https://github.com/NuGet/NuGet.Client/blob/74d1935e4e25a90df536ae7cac6cf7c73c6ea678/src/NuGet.Core/NuGet.Commands/RestoreCommand/RequestFactory/DependencyGraphSpecRequestProvider.cs#L75-L77) and again in [`DependencyGraphSpec.WithProjectClosure(...)`](https://github.com/NuGet/NuGet.Client/blob/74d1935e4e25a90df536ae7cac6cf7c73c6ea678/src/NuGet.Core/NuGet.ProjectModel/DependencyGraphSpec.cs#L129).  The result of the first call could be reused in `DependencyGraphSpec.WithProjectClosure(...)`."},{"Id":"11619747400","Type":"IssuesEvent","CreatedAt":"2020-02-26T21:54:05","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9040","RelatedDescription":"Closed issue \"Restore:  DependencyGraphSpec.Load(...) does not need JObject\" (#9040) at NuGet/Home","RelatedBody":"[`DependencyGraphSpec.Json`](https://github.com/NuGet/NuGet.Client/blob/90f0a2cc44df67ca01d6411fd68e5aac57e2a247/src/NuGet.Core/NuGet.ProjectModel/DependencyGraphSpec.cs#L79) is unused except by tests.  Holding both the `Newtonsoft.Json.Linq.JObject` and the NuGet representations of a dependency graph spec in memory is completely unnecessary.\r\n\r\nRecommendations:\r\n1. Remove the `DependencyGraphSpec.Json` property.\r\n2. Update [`DependencyGraphSpec.Load(string)`](https://github.com/NuGet/NuGet.Client/blob/90f0a2cc44df67ca01d6411fd68e5aac57e2a247/src/NuGet.Core/NuGet.ProjectModel/DependencyGraphSpec.cs#L227) to deserialize a `DependencyGraphSpec` object incrementally using a `Newtonsoft.Json.JsonTextReader` and avoid deserializing completely into a `JObject` first.\r\n"},{"Id":"11617214797","Type":"IssuesEvent","CreatedAt":"2020-02-26T16:56:08","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9226","RelatedDescription":"Opened issue \"In X509ChainStatus, Status should be used in assertion but not StatusInformation \" (#9226) at NuGet/Home","RelatedBody":"The Status is better to recognize and compare than StatusInformation for the following reason:\r\n1.Status are the same cross platform, while StatusInformation varies\r\n2.Status and StatusInformation are not 1-1 mapping(two Statuses may have the same StatusInformation).\r\n"},{"Id":"11614462664","Type":"IssuesEvent","CreatedAt":"2020-02-26T12:38:25","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9225","RelatedDescription":"Opened issue \"[Test Failure] Embedded icon of the package creating by nuget.exe can’t be shown in PM UI with local package feed\" (#9225) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.6.0.6472\r\nVS Version: Master\\29825.171\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps\r\n1.\tCreate a Class Library (.NET Framework 4.8) in VS and build the solution.\r\n2.\tIn the Developer Command Prompt for VS, create a nuspec file by executing command “nuget spec”\r\n3.  Make an image file (size limited to 1 MB with JPEG/PNG format and 128x128 resolution) and locate in the package.\r\n4.  Add following to nuspec file.\r\n```\r\n<package>\r\n  <metadata>\r\n    ...\r\n    <icon>images\\icon.png</icon>\r\n    ...\r\n  </metadata>\r\n  <files>\r\n    ...\r\n    <file src=\"..\\icon.png\" target=\"images\\\" />\r\n    ...\r\n  </files>\r\n</package>\r\n```\r\n5.  Pack the package to local path by executing command “nuget pack”.\r\n6.  Create a C# Console App (.NET Framework 4.8) in VS and open the PM UI of the project.\r\n7.  Add the package source as a local feed in Settings->NuGet Package Manager->Package Sources.\r\n8.  Select the new added local feed in the Package source dropdown box in the PM UI and install the package.\r\n\r\n## Expected\r\nThe embedded icon show correctly in all the tabs of PM UI.\r\n## Actual\r\nThe embedded icon can’t be shown in all the tabs of PM UI. as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/75345053-e8c9b400-58d6-11ea-8a4b-0c9f2a076604.png)\r\n## Note\r\n1.\tIt doesn’t repro for the package creating by “dotnet pack” with local package feed.\r\n2.\tIt doesn’t repro for the package “Text2Xml.Lib” (version 1.1.1 and 1.1.2) in remote feed.\r\n3.\tIt also repro with icon.jpg."},{"Id":"11612045925","Type":"IssuesEvent","CreatedAt":"2020-02-26T08:08:39","Actor":"bondarenkod","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9224","RelatedDescription":"Opened issue \"vs: unable to consolidate or update packaged due to Detected package downgrade error\" (#9224) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n## Details about Problem\r\nNuGet product used: VS UI \r\nNuGet package manager: 5.4.0\r\nVS version: VS 16.4.5\r\nOS version:  win10 (18363.657):\r\nWorked before?: NO\r\n\r\n## Detailed repro steps so we can see the same problem\r\n1. Solution with multiple projects. Some of the projects included different versions of some packages. Some projects are referenced by others. For example PkgA(1.0, 1.1), PkgB(2.0, 2.1), PkgC(3.0, 3.1).\r\n![image](https://bdfss.blob.core.windows.net/shots/2020-02-26_09-44-41-5954c3ec-060c-46f7-80ef-f5bee1d5ec2a-devenv.png)\r\n\r\n2. I want to consolidate or update versions of these packages to the latest (or single) one. But while I'm trying to do any of these actions, the process usually stopped by the next two errors:\r\n- Error NU1605 Detected package downgrade: PACKAGE_NAME from X.X.X.X to Y.Y.Y.Y. Reference the package directly from the project to select a different version. \r\n- Error NU1107 Version conflict detected for PACKAGE_NAME. (rarely)\r\nBut it's exactly I want to do - update all these packages! \r\n![image](https://bdfss.blob.core.windows.net/shots/2020-02-26_09-46-00-aa315409-1a24-4377-bd03-831b107f0527-devenv.png)\r\n\r\n## Other suggested things\r\nI think the update or consolidate process should be fixed, and all these errors should be ignored during these operations. It should do what I want and warn\\show errors after all.\r\n\r\nAlso, I can probably suppress these errors by adding NU1107, NU1605 to NO_WARN section, but I don't want to leave these suppressions there forever.\r\n### Verbose Logs\r\nno logs\r\n### Sample Project\r\nI don't have the sample project now, I can't share the private project, I will try to create an example later.\r\n\r\n#8982 "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-02-27T05:30:44.1862287Z","RunDurationInMilliseconds":1748}