{"Data":{"GitHubIssues":{"Issues":[{"Id":"355527886","IsPullRequest":true,"CreatedAt":"2018-09-03T16:47:06","Actor":"SteveSandersonMS","Number":"1372","RawContent":null,"Title":"Enable default HttpClient handler","State":"closed","Body":"This uses the feature implemented by @kjpou1 https://github.com/mono/mono/pull/10152. It means you can now do `new HttpClient()` directly and it works under Blazor on WebAssembly.\r\n\r\nNote that we still register a `HttpClient` in the default DI config, because that instance has its `BaseUri` populated, meaning that it knows how to make requests with relative URLs. If you do `new HttpClient()` then you can only make requests to absolute URLs. This is standard for .NET's `HttpClient`.\r\n\r\nAdditionally, this involved updating to a newer version of mono (bfc35fc6e65). Benchmarks show that this newer version of Mono is consistently 10-20% faster on our checked scenarios (app startup, rendering, JSON handling), but it's also about 150KB bigger after linking.","Url":"https://github.com/aspnet/Blazor/pull/1372","RelatedDescription":"Closed or merged PR \"Enable default HttpClient handler\" (#1372)"},{"Id":"356280347","IsPullRequest":false,"CreatedAt":"2018-09-03T15:56:22","Actor":"JamJar00","Number":"1380","RawContent":null,"Title":"Mono IL Linker Error with MVC Scaffolding","State":"closed","Body":"Having added MVC scaffolding to my Blazor project Mono is unable to resolve the System.Resources.Reader assembly.\r\n```\r\nFatal error in IL Linker\r\nMono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'C:\\Usrs\\Jamie\\.nuget\\packages\\system.resources.reader\\4.3.0\\lib\\netstandard1.0\\System.Resources.Reader.dll, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'C:\\Usrs\\Jamie\\.nuget\\packages\\system.resources.reader\\4.3.0\\lib\\netstandard1.0\\System.Resources.Reader.dll, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n   at Mono.Linker.DirectoryAssemblyResolver.Resolve(AssemblyNameReference name, ReaderParameters parameters)\r\n   at Mono.Linker.AssemblyResolver.Resolve(AssemblyNameReference name, ReaderParameters parameters)\r\n   at Mono.Linker.LinkContext.Resolve(IMetadataScope scope)\r\n   at Mono.Linker.LinkContext.Resolve(IMetadataScope scope)\r\n   at Mono.Linker.LinkContext.Resolve(String name)\r\n   at Mono.Linker.Steps.ResolveFromAssemblyStep.Process()\r\n   at Mono.Linker.Steps.BaseStep.Process(LinkContext context)\r\n   at Mono.Linker.Pipeline.Process(LinkContext context)\r\n   at Mono.Linker.Driver.Run(ILogger customLogger)\r\n   at Mono.Linker.Driver.Execute(String[] args, ILogger customLogger)\r\n```\r\n\r\nHave confirmed the DLL is present and the linker is finding it (I get a different error if it's not there).\r\n\r\n\r\nI'm not entirely sure how I got here so it's hard to reproduce. I added MVC scaffolding, resolved the errors the import brought and was able to run the project, but having added controllers and models this error is thrown every build.\r\n\r\nThe usual cleaning the project/deleting the bin and obj folders hasn't helped. Backtracking and removing the controller and model files I added also hasn't helped.","Url":"https://github.com/aspnet/Blazor/issues/1380","RelatedDescription":"Closed issue \"Mono IL Linker Error with MVC Scaffolding\" (#1380)"},{"Id":"355953727","IsPullRequest":false,"CreatedAt":"2018-09-03T13:14:06","Actor":"male110","Number":"1374","RawContent":null,"Title":"error tip","State":"closed","Body":"<input type=\"text\" bind=\"@Count\" />\r\n<div>@Count</div>\r\n@functions{\r\n    int Count { get; set; }\r\n}\r\nif input 'aaaa',How can i show some tips","Url":"https://github.com/aspnet/Blazor/issues/1374","RelatedDescription":"Closed issue \"error tip\" (#1374)"},{"Id":"356011861","IsPullRequest":false,"CreatedAt":"2018-09-03T13:11:24","Actor":"Sire","Number":"1376","RawContent":null,"Title":"Sending objects with only private setters should give a warning","State":"closed","Body":"When sending objects in Blazor with private setters on their properties, those properties are always empty at the client, and no warnings are given.\r\n\r\nThis is a limitation of the MessagePack de/serialization, [issue here](https://github.com/neuecc/MessagePack-CSharp/issues/284). Private fields are never serialized.\r\n\r\nIt would be very helpful to show a warning from JsInterop. It could save hours of head-scratching. At least if ALL properties have private setters - which indicates the developer doesn't know of this limitation. \r\n\r\nThere is a very helpful warning from the jsinterop project when you're trying to send an object with a non-public constructor. So it might be possible to add another warning at this location.\r\n\r\nSource:\r\n```\r\nvar constructorDelegate = ConstructorCache[type] ?? \r\nthrow new InvalidOperationException($\"Cannot deserialize JSON into type '{type.FullName}' because it does not have a public parameterless constructor.\");\r\n\r\n```\r\n[Link to source](https://github.com/dotnet/jsinterop/blob/a9a5bb9eba154d9dc3f43d5636e49d02cbd6cc97/src/Microsoft.JSInterop/Json/SimpleJson/SimpleJson.cs#L1473)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1376","RelatedDescription":"Closed issue \"Sending objects with only private setters should give a warning\" (#1376)"},{"Id":"356256750","IsPullRequest":false,"CreatedAt":"2018-09-03T13:03:40","Actor":"footysteve","Number":"1379","RawContent":null,"Title":"Issue #834 nav bug","State":"closed","Body":"I'm new to github hope it's ok post about a closed issue. I just encountered this while playing around with blazor\r\n\r\n\"Blazor App - simple bug, hard to fix - make DOM/window properties and events available in Blazor\r\n#834 by Andrzej-W was closed on May 22\"\r\n\r\nThis is my workaround, \r\n\r\n`\r\n**button class=\"navbar-toggler\" onclick=@Dropdown**\r\n\r\n@functions {\r\n    bool collapseNavMenu = true;\r\n    bool dropDownActive = false;\r\n\r\n    void ToggleNavMenu()\r\n    {\r\n        if (dropDownActive)\r\n        {\r\n            collapseNavMenu = true;\r\n            dropDownActive = false;\r\n        }\r\n    }\r\n\r\n    void Dropdown()\r\n    {\r\n        collapseNavMenu = !collapseNavMenu;\r\n        dropDownActive = !collapseNavMenu;\r\n    }\r\n}`\r\n\r\nCould be coded better I expect, a first cut, it does work though :)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1379","RelatedDescription":"Closed issue \"Issue #834 nav bug\" (#1379)"},{"Id":"356312997","IsPullRequest":false,"CreatedAt":"2018-09-03T12:56:04","Actor":"highphilosopher","Number":"1381","RawContent":null,"Title":"Issue with Javascript Interop in Server Side Blazor Project","State":"closed","Body":"Currently I am trying to access the play() method on an HTML audio tag.\r\n\r\n`<audio id=\"timeOverPlayer\" preload=\"auto\"><source src=\"@settings[\"Time Over Sound\"]\" /></audio>`\r\n\r\nI've got a Script tag in my index.html file:\r\n\r\n`    <script>\r\n        window.playElement = function (element) {\r\n            document.getElementById(element).play();\r\n            return true;\r\n        }\r\n    </script>`\r\n\r\nAnd I'm trying to call this function from C# with the following static method which is an event handler (if that's important):\r\n\r\n```\r\n    public void OnFiveMinuteWarning(object sender, EventArgs args)\r\n    {\r\n        PlayAudio(\"fiveMinutePlayer\");\r\n    }\r\n```\r\n\r\n```\r\n    public static Task<bool> PlayAudio(String elementName)\r\n    {\r\n        return JSRuntime.Current.InvokeAsync<bool>(\"playElement\", elementName);\r\n    }\r\n```\r\n\r\nWhen this happens I get no audio and no errors in the console. I can manually call the Javascript from the console, and the audio plays fine. If I add a Wait() on the PlayAudio method call, I get an error:\r\n\r\n> System.AggregateException\r\n  HResult=0x80131500\r\n  Message=One or more errors occurred.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait()\r\n   at WebClock.App.Pages.Clocks.OnTimeOver(Object sender, EventArgs args) in C:\\Users\\samue\\source\\repos\\BlazorClock\\WebClock\\WebClock.App\\Pages\\Clocks.cshtml:line 52\r\n   at WebClock.App.Services.Clock._timer_Elapsed(Object sender, ElapsedEventArgs e) in C:\\Users\\samue\\source\\repos\\BlazorClock\\WebClock\\WebClock.App\\Services\\ClockService.cs:line 111\r\n   at System.Timers.Timer.MyTimerCallback(Object state)\r\n\r\n> Inner Exception 1:\r\n> JSException: Could not find 'playElement' in 'window'.\r\n> Error: Could not find 'playElement' in 'window'.\r\n>     at http://localhost:37382/_framework/blazor.server.js:23:47556\r\n>     at Array.forEach (<anonymous>)\r\n>     at p (http://localhost:37382/_framework/blazor.server.js:23:47517)\r\n>     at http://localhost:37382/_framework/blazor.server.js:23:48120\r\n>     at new Promise (<anonymous>)\r\n>     at e.beginInvokeJSFromDotNet (http://localhost:37382/_framework/blazor.server.js:23:48094)\r\n>     at http://localhost:37382/_framework/blazor.server.js:16:11652\r\n>     at Array.forEach (<anonymous>)\r\n>     at e.invokeClientMethod (http://localhost:37382/_framework/blazor.server.js:16:11623)\r\n>     at e.processIncomingData (http://localhost:37382/_framework/blazor.server.js:16:10229)\r\n> \r\n\r\nNot sure if this is just not being raised when async or if the error is because I'm Waiting on an async call. At this point I'm pretty puzzled.","Url":"https://github.com/aspnet/Blazor/issues/1381","RelatedDescription":"Closed issue \"Issue with Javascript Interop in Server Side Blazor Project\" (#1381)"},{"Id":"353371238","IsPullRequest":true,"CreatedAt":"2018-09-03T09:31:38","Actor":"cores-system","Number":"1354","RawContent":null,"Title":"fix #1352","State":"closed","Body":"fix https://github.com/aspnet/Blazor/issues/1352","Url":"https://github.com/aspnet/Blazor/pull/1354","RelatedDescription":"Closed or merged PR \"fix #1352\" (#1354)"},{"Id":"353320692","IsPullRequest":false,"CreatedAt":"2018-09-03T09:31:38","Actor":"cores-system","Number":"1352","RawContent":null,"Title":"Router intercepts clicks on <a> with target='_blank'","State":"closed","Body":"Hello, blazor intercepts a click even if you specify **target=\"_ blank\"** in the link.\r\n\r\n**Test Host**:\r\nhttp://domain.com/\r\n\r\n**Examples**\r\n```\r\n<a href=\"/api/rewriteurl/test\" target=\"_blank\">not work</a>\r\n<a href=\"https://domain.com/api/rewriteurl/test\" target=\"_blank\">WORK</a>\r\n<a href=\"http://domain.com/api/rewriteurl/test\" target=\"_blank\">not work</a>\r\n<a href=\"http://domain2.com/api/rewriteurl/test\" target=\"_blank\">WORK</a>\r\n```\r\n\r\nI think that it's not necessary to intercept links with **target=\"_ blank\"**\r\n\r\n**Blazor Server side**: 0.6.0-preview1-20180822.3\r\n/_framework/blazor.server.js\r\n","Url":"https://github.com/aspnet/Blazor/issues/1352","RelatedDescription":"Closed issue \"Router intercepts clicks on <a> with target='_blank'\" (#1352)"},{"Id":"356222457","IsPullRequest":false,"CreatedAt":"2018-09-02T08:31:57","Actor":"MarekPokornyOva","Number":"1378","RawContent":null,"Title":"How to pass more ChildContents from razor file?","State":"closed","Body":"Hello,\r\nI'm playing with ChildContent on a component and can't find solution for following:\r\n\r\nLet's have reusable base component allowing to include three parts.\r\n**SplitterBase.cshtml**\r\n```\r\n<div class=\"part1\">@Part1</div>\r\n<div class=\"part2\">@Part2</div>\r\n<div class=\"part3\">@Part3</div>\r\n\r\n@functions\r\n{\r\n   [Parameter]\r\n   RenderFragment Part1 { get; set; }\r\n\r\n   [Parameter]\r\n   RenderFragment Part2 { get; set; }\r\n\r\n   [Parameter]\r\n   RenderFragment Part3 { get; set; }\r\n\r\n\t//just one ChildContent property is not enough in this case\r\n}\r\n\r\n\r\n```How is it possible to pass the parts from parent component defined in cshtml?\r\n**Splitter.cshtml**\r\n```\r\n<SplitterBase>\r\n\tHow to define Part1 here?\r\n\tHow to define Part2 here?\r\n\tHow to define Part3 here?\r\n</SplitterBase>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1378","RelatedDescription":"Closed issue \"How to pass more ChildContents from razor file?\" (#1378)"},{"Id":"353975071","IsPullRequest":true,"CreatedAt":"2018-09-01T02:10:43","Actor":"rynowak","Number":"1360","RawContent":null,"Title":"Add support for Razor templates","State":"closed","Body":"Adds support for Razor templates and `RenderFragment<T>`.\r\n\r\nRazor templates are a little-known Razor feature that looks like:\r\n```\r\n@<tag>....<tag>\r\n```\r\n\r\nIt's so little known that it's not even covered in our docs, but it's\r\nbeen around for many many years. This features hasn't been implemented\r\nuntil now for Blazor, and this feature brings it back as a build\r\nbuilding block for templated components (more to come).\r\n\r\nIn Blazor land a template like:\r\n```\r\n@{ RenderFragment<Person> template = @<div>@item.Name</div>; }\r\n```\r\n\r\ncomplies to code like:\r\n```\r\nRenderFragment<Person> template = (__builder, item) =>\r\n{\r\n    __builder.OpenElement(...);\r\n    ...\r\n    __builder.CloseElement(...);\r\n}\r\n```\r\n\r\nSince the declaration always has a generic type parameter inside, it\r\nneeds to be in a context where the type is known.. ie: not with `var`.\r\n\r\nSee tests for ways to consume templates.\r\n\r\nNOTE: There are the following caveats for templates\r\n- Templates require a single root element.\r\n- Templates don't work in the `@functions { }` block\r\n\r\nThese limitations are baked into the core of Razor and will take a while\r\nfor us to address (v3.0).","Url":"https://github.com/aspnet/Blazor/pull/1360","RelatedDescription":"Closed or merged PR \"Add support for Razor templates\" (#1360)"},{"Id":"356117766","IsPullRequest":false,"CreatedAt":"2018-08-31T20:41:30","Actor":"maraf","Number":"1377","RawContent":null,"Title":"Parameter of type object and string literal","State":"open","Body":"Hi there.\r\nI tried to create a parameter of type object and than use type switch for various types (a single message of type string or a list of messages).\r\nSo I have created a parameter:\r\n\r\n```C#\r\n[Parameter]\r\nprotected object Message { get; set; }\r\n```\r\n\r\nThen, when I use it with literal value:\r\n\r\n```html\r\n<Alert Message=\"Try adding some exchange rates.\" />\r\n```\r\n\r\nIt strips out `\"` and generates an invalid code:\r\n\r\n```C#\r\nbuilder2.OpenComponent<Money.UI.Blazor.Components.Bootstrap.Alert>(63);\r\nbuilder2.AddAttribute(64, \"Message\", Microsoft.AspNetCore.Blazor.Components.RuntimeHelpers.TypeCheck<System.Object>(Try adding some exchange rates.));\r\nbuilder2.CloseComponent();\r\n```\r\n\r\nIt seems that only string is buggy, boolean and int values work.\r\nAlso when I pass a value of some property, it's ok.\r\n\r\nI'm using Blazor 0.5.1.","Url":"https://github.com/aspnet/Blazor/issues/1377","RelatedDescription":"Open issue \"Parameter of type object and string literal\" (#1377)"},{"Id":"355993485","IsPullRequest":false,"CreatedAt":"2018-08-31T14:02:06","Actor":"renatoprogramer","Number":"1375","RawContent":null,"Title":"Blazor templates missing after installing latest Blazor VSIX from the dev feed","State":"open","Body":"After the last update no longer appears the Blazor as a project.\r\n\r\n![image](https://user-images.githubusercontent.com/15394508/44916846-172ff880-ad0d-11e8-8c57-0117743680f4.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1375","RelatedDescription":"Open issue \"Blazor templates missing after installing latest Blazor VSIX from the dev feed\" (#1375)"},{"Id":"355774788","IsPullRequest":false,"CreatedAt":"2018-08-30T22:21:42","Actor":"vipero07","Number":"1373","RawContent":null,"Title":"Preload Dlls and mono.wasm on build","State":"open","Body":"The way things are currently loaded is mono.wasm first, then after it is processed the dlls get loaded and processed. After all of this is done the application will finally render in the browser. As a result the initial load is quite slow (for me its been around 4s on a fast computer with a good internet connection). The initial page load performance can be greatly improved simply by adding a preload link in the HTML for each dll. \r\n\r\nE.G. \r\n```\r\n<link rel=\"preload\" as=\"fetch\" type=\"application/octet-stream\" href=\"_framework/_bin/mscorlib.dll\" /> \r\n<link rel=\"preload\" as=\"fetch\" type=\"application/octet-stream\" href=\"_framework/_bin/System.Core.dll\" />\r\n...\r\n```\r\n\r\nYou could also use a script like:\r\n\r\n```\r\n(function () {\r\n    function preload(href) {\r\n        var link = document.createElement('link');\r\n        link.rel = 'preload';\r\n        link.as = 'fetch';\r\n        link.type = 'application/octet-stream';\r\n        link.href = '_framework/_bin/' + href;\r\n        document.head.appendChild(link);\r\n    }\r\n    [\r\n        'mscorlib.dll',\r\n        'System.Core.dll',\r\n        'Microsoft.CSharp.dll',\r\n        'System.dll',\r\n        'Microsoft.AspNetCore.Blazor.dll',\r\n    ].forEach(preload);\r\n}());\r\n```\r\n\r\nThe downside of using a script is browsers can be pushed link preloads by the server, and using the script loses the server push ability.\r\n\r\nWhat would be nice is a build script that detects the generated dlls and injects the link preload into the html file head. When you preload the dlls they are generally done being retrieved before mono.wasm is even ready to look for them. This has reduced my render times down to 1s from the 4s I mentioned above, a notable improvement. \r\n\r\nAlternatively a service worker that prefetches the dlls would work just as well.","Url":"https://github.com/aspnet/Blazor/issues/1373","RelatedDescription":"Open issue \"Preload Dlls and mono.wasm on build\" (#1373)"},{"Id":"355212624","IsPullRequest":false,"CreatedAt":"2018-08-29T15:35:01","Actor":"ericgrantholland","Number":"1371","RawContent":null,"Title":"Need examples showing Blazor Drag and Drop API","State":"closed","Body":"Looking for a working example using the Blazor drag and drop API. Specifically, I'm looking for an example of setting HTML elements as dropzones and draggables WITHOUT explicit JS interop. Looking to hook into the Blazor events designed around UIDragEventArgs.\r\n\r\nPlease note I'm that I'm also looking to set transfer data using blazor C#, but this issue currently being tracked by #957","Url":"https://github.com/aspnet/Blazor/issues/1371","RelatedDescription":"Closed issue \"Need examples showing Blazor Drag and Drop API\" (#1371)"},{"Id":"353599072","IsPullRequest":true,"CreatedAt":"2018-08-29T15:29:03","Actor":"natemcmaster","Number":"1357","RawContent":null,"Title":"Run compliance checks on official builds","State":"closed","Body":"See https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=1974924&_a=summary&view=logs for example","Url":"https://github.com/aspnet/Blazor/pull/1357","RelatedDescription":"Closed or merged PR \"Run compliance checks on official builds\" (#1357)"},{"Id":"354274942","IsPullRequest":false,"CreatedAt":"2018-08-29T10:06:19","Actor":"moataz1991","Number":"1368","RawContent":null,"Title":"DataAnnotations Exception","State":"closed","Body":"Hello\r\n\r\nwhen i want to add DataAnnotation attributes for EF Core purpose \"Timestamp\"\r\nit throws an exception\r\n\r\n[System.IO.FileNotFoundException] Could not load file or assembly 'System.ComponentModel.Annotations, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies\r\n\r\nhow to fix this please :)\r\n\r\nim using MySql Database with Pomelo\r\nWindows 10 64-bit\r\n\r\nThanks","Url":"https://github.com/aspnet/Blazor/issues/1368","RelatedDescription":"Closed issue \"DataAnnotations Exception\" (#1368)"},{"Id":"353565227","IsPullRequest":false,"CreatedAt":"2018-08-29T09:59:37","Actor":"aviezzi","Number":"1355","RawContent":null,"Title":"How to access parent component from child component.","State":"closed","Body":"I need to do something very similar to what is described in https://blazor.net/docs/components/index.html,\r\nsection [Data Binding], subsection [Component Parameters], with the only exception that I need to update the parent component from the child, so I first moved the button to the latter. The implementation is:\r\n\r\n### ParentComponent\r\n\r\n```\r\n@page \"/ParentComponent\"\r\n\r\n<h1>Parent Component</h1>\r\n\r\n<p>ParentYear: @ParentYear</p>\r\n\r\n<ChildComponent bind-Year=\"@ParentYear\" />\r\n\r\n@functions {\r\n    [Parameter]\r\n    private int ParentYear { get; set; } = 1978;\r\n}\r\n```\r\n### ChildComponent\r\n```\r\n<h2>Child Component</h2>\r\n<p>Year: @Year</p>\r\n\r\n<button class=\"btn btn-primary\" onclick=\"@ChangeTheYear\">Change Year to 1986</button>\r\n\r\n@functions {\r\n    [Parameter]\r\n    private int Year { get; set; }\r\n\r\n    [Parameter]\r\n    private Action<int> YearChanged { get; set; }\r\n\r\n    void ChangeTheYear()\r\n    {\r\n        Year = 1986;\r\n    }\r\n}\r\n```\r\nBut this approach doesn't work. So I tried to bind the event and value directly (see the code below), but it still fails, the only improvement is that now I can see the \"I was called\" line in the console output.\r\n\r\n### ParentComponent\r\n```\r\n@page \"/ParentComponent\"\r\n\r\n<h1>Parent Component</h1>\r\n\r\n<p>ParentYear: @ParentYear</p>\r\n\r\n<ChildComponent Year=\"@ParentYear\"  YearChanged=\"@((e) => { Console.WriteLine(\"I was called\"); @ParentYear = e;})\"/>\r\n\r\n@functions {\r\n    [Parameter]\r\n    private int ParentYear { get; set; } = 1978;\r\n}\r\n```\r\n### ChildComponent\r\n```\r\n<h2>Child Component</h2>\r\n\r\n<p>Year: @Year</p>\r\n\r\n<button class=\"btn btn-primary\" onclick=\"@ChangeTheYear\">Change Year to 1986</button>\r\n\r\n@functions {\r\n    [Parameter]\r\n    private int Year { get; set; }\r\n\r\n    [Parameter]\r\n    private Action<int> YearChanged { get; set; }\r\n\r\n    void ChangeTheYear()\r\n    {\r\n        Year = 1986;\r\n        YearChanged(Year);\r\n    }\r\n}\r\n```\r\nThen I added manualy UI refresh\r\n### ParentComponent\r\n```\r\n@page \"/ParentComponent\"\r\n\r\n<h1>Parent Component</h1>\r\n\r\n<p>ParentYear: @ParentYear</p>\r\n\r\n<ChildComponent Year=\"@ParentYear\" YearChanged=\"@((e) =>\r\n                                   {\r\n                                       Console.WriteLine(\"I was called!\");\r\n                                       @ParentYear = e;\r\n                                       StateHasChanged();\r\n                                   })\"></ChildComponent>\r\n\r\n@functions {\r\n    [Parameter]\r\n    private int ParentYear { get; set; } = 1978;\r\n}\r\n```\r\n### Child Component \r\n```\r\n<h2>Child Component</h2>\r\n\r\n<p>Year: @Year</p>\r\n\r\n<button class=\"btn btn-primary\" onclick=\"@ChangeTheYear\">Change Year to 1986</button>\r\n\r\n@functions {\r\n    [Parameter]\r\n    private int Year { get; set; }\r\n\r\n    [Parameter]\r\n    private Action<int> YearChanged { get; set; }\r\n\r\n    void ChangeTheYear()\r\n    {\r\n        Year = 1986;\r\n        YearChanged(Year);\r\n    }\r\n}\r\n```\r\nThe last thing I tried was to add a manual UI refresh via StateHasChanged(), this works, but I don't understand why the forced refresh is necessary, as the bind-{property} syntax should perform a Two-Way binding already. Is this behaviour intended or is it a bug? \r\n\r\nThanks and regards,\r\nAlberto\r\n","Url":"https://github.com/aspnet/Blazor/issues/1355","RelatedDescription":"Closed issue \"How to access parent component from child component.\" (#1355)"},{"Id":"353597417","IsPullRequest":false,"CreatedAt":"2018-08-29T09:58:42","Actor":"iFredus","Number":"1356","RawContent":null,"Title":"Sending json without refreshing the page","State":"closed","Body":"**Issue**\r\nThere's no a natively way (without ajax) to send a POST request without refreshing the whole application.\r\n\r\n**Context**\r\nImagine that you have a form in one of your pages, and you need to submit that form without refreshing any element. Using Http.SendJsonAsync doesn't work for this purpose because it refreshes the entire application, not even the current page.\r\n\r\nIf there's a way please tell me, I researched in all the few Blazor tutorials that currently exists and I found nothing.","Url":"https://github.com/aspnet/Blazor/issues/1356","RelatedDescription":"Closed issue \"Sending json without refreshing the page\" (#1356)"},{"Id":"353836770","IsPullRequest":false,"CreatedAt":"2018-08-29T09:56:48","Actor":"DanielS4n","Number":"1358","RawContent":null,"Title":"Router support for Multiple Libraries","State":"closed","Body":"The Blazor.Routing.Router can be extended with multi Assembly routing but you have set many methods private and also internal classes, this does not allow you to extend the Router and RouteTable but you need to rewrite them.\r\nFor example it could extend RouteTable with Append method (like Create) for add route entries for others libraries (Assembly), finally can change the parameter AppAssembly in array (AppAssemblies) for append all entries in Router.SetParameters() for multiple libraries.\r\nAnother good idea could be to activate the use of url prefixes related to the namespaces of each library (maybe through a parameter in the Router) to avoid conflicts between any components / pages with the same name in the various libraries.\r\n\r\nCould I contribute to the project by applying these changes, is it possible?","Url":"https://github.com/aspnet/Blazor/issues/1358","RelatedDescription":"Closed issue \"Router support for Multiple Libraries\" (#1358)"},{"Id":"353863495","IsPullRequest":false,"CreatedAt":"2018-08-29T09:55:15","Actor":"mgamache","Number":"1359","RawContent":null,"Title":"SignalR trigger UI update from server?","State":"closed","Body":"I need to update the browser based on server events (using a Blazor app). Is the Blazor/Chat example still valid? I am using the new Server Side project template (from 0.5.1) that uses SignalR as a transport.  Can I use the built-in Blazor connection or do I need to wire-up another SignalR connection? \r\n\r\nJust getting started with Blazor.\r\nThanks.","Url":"https://github.com/aspnet/Blazor/issues/1359","RelatedDescription":"Closed issue \"SignalR trigger UI update from server?\" (#1359)"},{"Id":"353980798","IsPullRequest":false,"CreatedAt":"2018-08-29T09:53:22","Actor":"renatoprogramer","Number":"1361","RawContent":null,"Title":"ROUTE SUBFOLDER  \"organization\"","State":"closed","Body":"I noticed that there is a deficiency in the route part of the Blazor, I would like to be able to do by organization subfolder\r\n\r\n**Organization folder**\r\n```\r\n-> Pages -> Admin -> dashboard.cshtml\r\n```\r\n**Current**\r\n`@page \"/adminDashboard\"`\r\n\r\n**Sugestion**\r\n`@page \"/admin/dashboard\"`\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1361","RelatedDescription":"Closed issue \"ROUTE SUBFOLDER  \"organization\"\" (#1361)"},{"Id":"353988498","IsPullRequest":false,"CreatedAt":"2018-08-29T09:51:38","Actor":"Peter-Juhasz","Number":"1362","RawContent":null,"Title":"HttpClient interception","State":"closed","Body":"Hey guys,\r\n\r\nfirst of all, thank you for the awesome work you do with Blazor.\r\n\r\nWhat is or what would be the recommended way to reconfigure the HttpClient in the DI? Are Delegating Handlers supported at all?\r\n\r\nI need support for the following use cases:\r\n - Send CSRF token with each POST/PUT/… request like Angular does. (or are there any other way to achieve protection any other way?)\r\n - Intercept all responses and redirect the currently logged-in user to login, when session expires and the backend API returns 401.\r\n - Retry for particular error codes.\r\n\r\nThank you.","Url":"https://github.com/aspnet/Blazor/issues/1362","RelatedDescription":"Closed issue \"HttpClient interception\" (#1362)"},{"Id":"353990748","IsPullRequest":false,"CreatedAt":"2018-08-29T09:50:31","Actor":"MarekPokornyOva","Number":"1363","RawContent":null,"Title":"Shareable string constant as route template","State":"closed","Body":"Blazor project (ASP.NET Core hosted) (client project) v 0.5.1.\r\n\r\nI wanted to create shareable route templates.\r\n```\r\nstatic class UiPaths\r\n{\r\n    public static string Account = \"account\";\r\n}\r\n```\r\n---\r\n### Solution 1 - reference string constant in page:\r\n-\tPut `@page UiPaths.Account` to Account.cshtml.\r\n\r\nIssue 1\r\n-\tCompiler complains error: The 'page' directive expects a string surrounded by double quotes.\r\n---\r\n\r\n### Solution 2 - create code behind class:\r\n```\r\n\t[Microsoft.AspNetCore.Blazor.Components.RouteAttribute(UiPaths.Account)]\r\n\tpublic abstract class AccountPageCodeBehind : Microsoft.AspNetCore.Blazor.Components.BlazorComponent\r\n\t{\r\n\t}\r\n\r\n```\r\n\r\n\tRemove all @page directives from Account.cshtml.\r\n\tPut \"@inherits AccountPageCodeBehind\" to Account.cshtml.\r\nIssue 2\r\n\tThe application throws exception in runtime:\r\n\tError: System.InvalidOperationException: Failed to compare two elements in the array. ---> System.InvalidOperationException: The following routes are ambiguous:\r\n\t\t'account' in 'BlazorInNetFW.Client.Pages.Account'\r\n\t\t'account' in 'BlazorInNetFW.Client.Pages.AccountPageCodeBehind'\r\n\r\nThe problem is ComponentResolver is static class instead of replaceable service and it finds code behind class as a regular component. Then RouteTable creates RouteEntry even for the code behind class.\r\n\r\n---\r\nIf I understand correctly, only possible solution here is to create and use custom router (instead of Microsoft.AspNetCore.Blazor.Routing.Router). However, I think it would be better if it's possible to maintain route paths/templates in configurable way (possibly even paths taken from a DB) instead of custom Router. Could you provide your opinion and outline code changes (if any), please?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1363","RelatedDescription":"Closed issue \"Shareable string constant as route template\" (#1363)"},{"Id":"354044149","IsPullRequest":false,"CreatedAt":"2018-08-29T09:45:58","Actor":"dharric","Number":"1364","RawContent":null,"Title":"Upgrade to 0.5.1 causes error The SPA default page middleware could not return the default page '/index.html'","State":"closed","Body":"I downloaded the current FlightFinder sample and without modifying code I updated the packages for Blazor from 0.4 to 0.5. Upon launching I get the error in the subject.","Url":"https://github.com/aspnet/Blazor/issues/1364","RelatedDescription":"Closed issue \"Upgrade to 0.5.1 causes error The SPA default page middleware could not return the default page '/index.html'\" (#1364)"},{"Id":"354251875","IsPullRequest":false,"CreatedAt":"2018-08-29T09:44:40","Actor":"cores-system","Number":"1366","RawContent":null,"Title":"BindElementAttribute and StateHasChanged()","State":"closed","Body":"Hello, \"int SomeExpression\" is not updated until you call \"StateHasChanged()\"\r\nHow to use it correctly BindElementAttribute ?\r\n\r\nBindAttributes.cs\r\n```\r\n[BindElement(\"myinput\", null, \"value\", \"valueChange\")]\r\npublic static class BindAttributes : Object { }\r\n```\r\n\r\nIndex.cshtml\r\n```\r\n@page \"/\"\r\n\r\nWORK\r\n<myinput bind=\"@Some1\" onchange=\"@(e => StateHasChanged())\" /> <br />\r\n@SomeExpression\r\n\r\nNOT WORK\r\n<myinput bind=\"@Some2\" /> <br />\r\n@SomeExpression\r\n\r\n@functions{\r\n    int Some1 { get; set; }\r\n    int Some2 { get; set; }\r\n}\r\n```\r\n\r\nmyinput.cshtml\r\n```\r\n<input type=\"number\" class=\"form-control\"\r\n       value=\"@(0 >= value || value == DefaultValue ? string.Empty : value.ToString())\"\r\n       placeholder=\"@(Init ? \"Loading...\" : placeholder)\"\r\n       onchange=\"@(e => {\r\n            valueChange?.Invoke(int.Parse(e.Value.ToString()));\r\n            onchange?.Invoke(e);\r\n       })\"\r\n />\r\n\r\n@functions {\r\n    [Parameter]\r\n    int value { get; set; }\r\n\r\n    [Parameter]\r\n    Action<int> valueChange { get; set; }\r\n\r\n    [Parameter]\r\n    int DefaultValue { get; set; }\r\n\r\n    [Parameter]\r\n    bool Init { get; set; }\r\n\r\n    [Parameter]\r\n    string placeholder { get; set; }\r\n\r\n    [Parameter]\r\n    Action<UIChangeEventArgs> onchange { get; set; }\r\n}\r\n```\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1366","RelatedDescription":"Closed issue \"BindElementAttribute and StateHasChanged()\" (#1366)"},{"Id":"354522157","IsPullRequest":false,"CreatedAt":"2018-08-28T00:10:05","Actor":"kant2002","Number":"1370","RawContent":null,"Title":"Could not publish with --no-build","State":"open","Body":"1. Have setup Two projects. First is API, second is Client Blazor app which is referenced by API.\r\n2. I do build of solution using dotnet build\r\n3. then I run `dotnet publish API --no-build`\r\n\r\nResulting the generated output does not contains .blazor.config\r\nwhen I run `dotnet publish` without specifying `--no-build` produced package contains valid `blazor.config` file. This make whole published package unusable.","Url":"https://github.com/aspnet/Blazor/issues/1370","RelatedDescription":"Open issue \"Could not publish with --no-build\" (#1370)"},{"Id":"354462348","IsPullRequest":false,"CreatedAt":"2018-08-27T20:17:12","Actor":"korsaire","Number":"1369","RawContent":null,"Title":"Button's onclick triggered upon right mouse click","State":"open","Body":"When you have onclick event e.g.\r\n```\r\n<button onclick=\"@HandleClick\">Click me</button>\r\n```\r\nit's triggered upon both left and right button click. I think it's a bug, as you can read in living HTML [standard](https://w3c.github.io/uievents/#event-type-click):\r\n>The click event type MUST be dispatched on the topmost event target indicated by the pointer, when the user presses down and releases the **primary** pointer button, or otherwise activates the pointer in a manner that simulates such an action.","Url":"https://github.com/aspnet/Blazor/issues/1369","RelatedDescription":"Open issue \"Button's onclick triggered upon right mouse click\" (#1369)"},{"Id":"354131309","IsPullRequest":false,"CreatedAt":"2018-08-27T19:20:56","Actor":"korsaire","Number":"1365","RawContent":null,"Title":"Ability to pass parameters to event handlers","State":"closed","Body":"It seems that currently parameters are not supported. If you do e.g. this:\r\n```\r\n    @foreach(var x in xCollection)\r\n    {\r\n        <li>x.Name <a onclick=\"@HandleClick(x.Value)\">Click me</a></li>\r\n    }\r\n\r\n    //More code\r\n\r\n    @functions {\r\n        private void HandleClick(string p)\r\n        {           \r\n        }\r\n    }\r\n```\r\n\r\nyou get a compilation error:\r\n```\r\nerror CS1503: Argument 1: cannot convert from 'void' to 'string'\r\n```\r\n\r\nIt would simplify the binding to be able to pass parameters there.","Url":"https://github.com/aspnet/Blazor/issues/1365","RelatedDescription":"Closed issue \"Ability to pass parameters to event handlers\" (#1365)"},{"Id":"354266584","IsPullRequest":false,"CreatedAt":"2018-08-27T11:40:33","Actor":"SMPX","Number":"1367","RawContent":null,"Title":"Hosting static files in ASP.NET Core hosting project","State":"closed","Body":"Client project (in conponent):\r\nI create a link:\r\n\r\n`<a href=\"http://localhost/1.txt\">Download file</a>`\r\n\r\nIn Server proget in wwwroot folder i put file \"1.txt\"\r\n\r\nWhen run and click <a> - route error:\r\n\r\n\"Error: System.InvalidOperationException: 'Router' cannot find any component with a route for '/1.txt'\"\r\n\r\nHow a can host static files ?\r\n\r\nThank you.\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1367","RelatedDescription":"Closed issue \"Hosting static files in ASP.NET Core hosting project\" (#1367)"},{"Id":"353362607","IsPullRequest":false,"CreatedAt":"2018-08-23T12:41:32","Actor":"ebfortin","Number":"1353","RawContent":null,"Title":"Framework location path should be configurable","State":"open","Body":"I am experimenting with different hosting scenarios for a Blzaor App and thought about packaging it into a Chrome Extension / App. however, Chrome Extension do not support _ at the begining of a path because it is reserved for system use.  Blazor make extensive use of _ in the path, at least for _framework and _bin. These paths should be configurable so that scenarios like Chrome Extension can be supported / tested.","Url":"https://github.com/aspnet/Blazor/issues/1353","RelatedDescription":"Open issue \"Framework location path should be configurable\" (#1353)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-04T05:30:03.2455287Z","RunDurationInMilliseconds":1207}