{"Data":{"GitHub":{"Issues":[{"Id":"561320990","IsPullRequest":true,"CreatedAt":"2020-02-13T05:02:18","Actor":"pieths","Number":"4804","RawContent":null,"Title":"Fix issue with the onnx export string initializer in OptionalColumnTransform","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4804","RelatedDescription":"Closed or merged PR \"Fix issue with the onnx export string initializer in OptionalColumnTransform\" (#4804)"},{"Id":"563490675","IsPullRequest":true,"CreatedAt":"2020-02-13T01:04:19","Actor":"mstfbl","Number":"4826","RawContent":null,"Title":"[Test Stability] PR to Test LinearClassifierTest","State":"closed","Body":"Testing LinearClassifierTest","Url":"https://github.com/dotnet/machinelearning/pull/4826","RelatedDescription":"Closed or merged PR \"[Test Stability] PR to Test LinearClassifierTest\" (#4826)"},{"Id":"564369782","IsPullRequest":true,"CreatedAt":"2020-02-13T00:48:50","Actor":"mstfbl","Number":"4831","RawContent":null,"Title":"Added exception for non-existent directory in ImageLoader","State":"open","Body":"Path.GetFullPath(\"C://non-Existant) was not throwing an exception. Hence there is a need to explicitly check for the existence of the imageFolder directory. Related to #4429 .  ","Url":"https://github.com/dotnet/machinelearning/pull/4831","RelatedDescription":"Open PR \"Added exception for non-existent directory in ImageLoader\" (#4831)"},{"Id":"564337674","IsPullRequest":true,"CreatedAt":"2020-02-13T00:05:19","Actor":"sharwell","Number":"4830","RawContent":null,"Title":"Update vs-threading analyzers to 16.5.132","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4830","RelatedDescription":"Closed or merged PR \"Update vs-threading analyzers to 16.5.132\" (#4830)"},{"Id":"564334426","IsPullRequest":true,"CreatedAt":"2020-02-12T23:07:42","Actor":"frank-dong-ms","Number":"4829","RawContent":null,"Title":"fix issue in WaiterWaiter caused by race condition","State":"open","Body":"1. Fix issue in WaiterWaiter caused by race condition.\r\n2. Re-enable affected tests as below:\r\nEntryPointEvaluateRegression\r\nEntryPointSdcaBinary\r\nEntryPointSDCARegression\r\nEntryPointChainedCrossValMacros\r\nTestCrossValidationMacroWithStratification\r\nTestOvaMacro\r\nTrainAndPredictOnIris\r\nCrossValidationIris\r\nLinearClassifierTest\r\nSavePipeTrainAndScoreFccTransformStr\r\nBinaryClassifierLogisticRegressionNonNegativeTest\r\nInpsectLinearModelParameters\r\nTrainRegressionModel\r\nCustomTransformer\r\nTrainAndPredictIrisModelTest\r\nLightGbmBinaryClassificationOnnxConversionTest","Url":"https://github.com/dotnet/machinelearning/pull/4829","RelatedDescription":"Open PR \"fix issue in WaiterWaiter caused by race condition\" (#4829)"},{"Id":"562931909","IsPullRequest":true,"CreatedAt":"2020-02-12T21:47:10","Actor":"antoniovs1029","Number":"4824","RawContent":null,"Title":"Enable OnnxTransformer to accept KeyDataViewTypes as if they were UInt32","State":"closed","Body":"Addresses https://github.com/microsoft/NimbusML/issues/426\r\n\r\nAs discussed offline with @harishsk , @ganik and @pieths , the update in here is the best temporary solution to the problem.\r\n\r\nSimply enables OnnxTransformer to accept a `KeyDataViewType` column as input of a model that actually expects an `UInt32` input column. This, because of the way that NimbusML works with Category columns in Pandas' DataFrames, by converting them into `KeyDataViewType` columns in ML.NET, without actually adding KeyToValueTransformers into the pipeline.","Url":"https://github.com/dotnet/machinelearning/pull/4824","RelatedDescription":"Closed or merged PR \"Enable OnnxTransformer to accept KeyDataViewTypes as if they were UInt32\" (#4824)"},{"Id":"563951305","IsPullRequest":true,"CreatedAt":"2020-02-12T11:58:04","Actor":"yaeldekel","Number":"4828","RawContent":null,"Title":"Add support for combining hashes in vector columns to HashingTransformer","State":"open","Body":"I am making this change so that `CountTargetEncodingEstimator` (see PR #4514 ) can start using `HashingEstimator` instead of `HashJoiningTransform` (see this [comment](https://github.com/dotnet/machinelearning/pull/4514#issuecomment-584502932) in the above PR).\r\n\r\nIn addition to enabling `CountTargetEncodingEstimator` to use it, this will fix a bug when splitting datasets in the [CV command](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs#L335) and in the [train-test/CV APIs](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Data/DataLoadSave/DataOperationsCatalog.cs#L522). If a stratification column that is a vector type is specified, currently an exception will be thrown because the `RangeFilter` applied after hashing cannot handle vector columns.","Url":"https://github.com/dotnet/machinelearning/pull/4828","RelatedDescription":"Open PR \"Add support for combining hashes in vector columns to HashingTransformer\" (#4828)"},{"Id":"563604008","IsPullRequest":true,"CreatedAt":"2020-02-12T05:35:14","Actor":"pieths","Number":"4827","RawContent":null,"Title":"Fix off by 1 error with the cats_int64s attribute for the OneHotEncoder ONNX operator","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4827","RelatedDescription":"Closed or merged PR \"Fix off by 1 error with the cats_int64s attribute for the OneHotEncoder ONNX operator\" (#4827)"},{"Id":"562631891","IsPullRequest":false,"CreatedAt":"2020-02-11T21:24:15","Actor":"zeroskyx","Number":"4821","RawContent":null,"Title":"AutoML throws several OperationCanceledExceptions","State":"closed","Body":"Greetings,\r\n\r\nwhen using any AutoML API project such as [Sentiment Analysis for User Reviews](https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/BinaryClassification_AutoML), several exceptions are thrown in the background.\r\n\r\nThis is probably due to some internal cancellation and has no additional negative impacts but is pretty ugly in the debugger.\r\n\r\nWould it be feasible to wrap this cancellation in a `Task.ContinueWith()` in order to keep the debugger clean?\r\n\r\nKeep up the great work!","Url":"https://github.com/dotnet/machinelearning/issues/4821","RelatedDescription":"Closed issue \"AutoML throws several OperationCanceledExceptions\" (#4821)"},{"Id":"561993180","IsPullRequest":true,"CreatedAt":"2020-02-11T18:57:42","Actor":"harishsk","Number":"4818","RawContent":null,"Title":"Changed Binarizer node to be cast to the type of the predicted label …","State":"closed","Body":"…column's data type\r\n\r\nIn BinaryClassifierScorer's SaveAsOnnxCore function we were always casting the output of the Binarizer to a bool. But in some cases BinaryClassifierScorer can output a key value (uint) and in this case we should cast the output to a uint. This fix changes the cast to be dependent on the output type of the predicted label. ","Url":"https://github.com/dotnet/machinelearning/pull/4818","RelatedDescription":"Closed or merged PR \"Changed Binarizer node to be cast to the type of the predicted label …\" (#4818)"},{"Id":"563016169","IsPullRequest":false,"CreatedAt":"2020-02-11T07:13:43","Actor":"MeTTaxa","Number":"4825","RawContent":null,"Title":"Expose Ensembling in ML.NET ","State":"open","Body":"The ensembles in Microsoft.ML.Ensemble/OutputCombiners would be very useful for our use cases for regressions. Can you help exposing them into ML.NET ?\r\n\r\nMost useful would be stacking and weighted average, and of course average and median.","Url":"https://github.com/dotnet/machinelearning/issues/4825","RelatedDescription":"Open issue \"Expose Ensembling in ML.NET \" (#4825)"},{"Id":"562874656","IsPullRequest":true,"CreatedAt":"2020-02-10T22:46:22","Actor":"harishsk","Number":"4823","RawContent":null,"Title":"Added Done() call in BaseTestBaseline.Cleanup and added related fixes","State":"open","Body":"This PR is similar to #4817 but standardizes the default value for Slope in PlattCalibrator to -1 instead of 1 since -1 seems to be used everywhere in the code. (If this PR is approved, I will be closing the other PR)","Url":"https://github.com/dotnet/machinelearning/pull/4823","RelatedDescription":"Open PR \"Added Done() call in BaseTestBaseline.Cleanup and added related fixes\" (#4823)"},{"Id":"561822256","IsPullRequest":true,"CreatedAt":"2020-02-10T21:46:09","Actor":"mstfbl","Number":"4808","RawContent":null,"Title":"Removed extraSettings param in unit test datasets file","State":"closed","Body":"Fixes #4742 , quick change to remove the `extraSettings` parameter from unit test datasets in `Datasets.cs`.","Url":"https://github.com/dotnet/machinelearning/pull/4808","RelatedDescription":"Closed or merged PR \"Removed extraSettings param in unit test datasets file\" (#4808)"},{"Id":"561957117","IsPullRequest":true,"CreatedAt":"2020-02-10T21:39:27","Actor":"harishsk","Number":"4816","RawContent":null,"Title":"Fixed bug in tensorflow tests due to long paths for working folders","State":"closed","Body":"TF tests are relying on IClassFixture to carry forward state from test to test. This by default creates excessively long paths that result in file system errors when there is a longer prefix for the source code. I have fixed it to take temp paths with shorter path lengths.","Url":"https://github.com/dotnet/machinelearning/pull/4816","RelatedDescription":"Closed or merged PR \"Fixed bug in tensorflow tests due to long paths for working folders\" (#4816)"},{"Id":"562749985","IsPullRequest":true,"CreatedAt":"2020-02-10T21:16:46","Actor":"LittleLittleCloud","Number":"4822","RawContent":null,"Title":"add AutoMLService.Test's sign key to AutoML and CodeGen's assembly.cs","State":"closed","Body":"Doing that so AutoMLService.Test can visit internal class inside those two projects.","Url":"https://github.com/dotnet/machinelearning/pull/4822","RelatedDescription":"Closed or merged PR \"add AutoMLService.Test's sign key to AutoML and CodeGen's assembly.cs\" (#4822)"},{"Id":"561956326","IsPullRequest":true,"CreatedAt":"2020-02-10T20:53:18","Actor":"harishsk","Number":"4815","RawContent":null,"Title":"Fixed bugs in OptionalColumnTransform and added bool support","State":"closed","Body":"OptionalColumnTransform didn't have support for boolean initializers. When I went to add that I saw that the TensorProto data was being set incorrectly for a few other data types. I tried to fix that and I had to redo the AddInitializer functionality in OnnxContext and related plumbing in OnnxUtils.cs.\r\nThen when I went to add tests for all the data types that are now supported in OptionalColumnTransform, I realized I needed to simplify the column comparison in OnnxConversionTest. In the process I also added support SByte and Byte in OnnxUtils - CreateNamedValue and fixed up the corresponding tests.\r\n\r\nIn summary:\r\n- Cleaned up OnnxContext's initializer interface\r\n- Cleaned up column comparison functionality on OnnxConversionTest\r\n- Fixed bugs in OptionalColumnTransform's onnx export and added support for boolean initializers\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4815","RelatedDescription":"Closed or merged PR \"Fixed bugs in OptionalColumnTransform and added bool support\" (#4815)"},{"Id":"562047243","IsPullRequest":false,"CreatedAt":"2020-02-08T16:59:08","Actor":"Spocher","Number":"4819","RawContent":null,"Title":"Shuffle input cursor reader failed with an exception in ml.net 1.4.0","State":"open","Body":"- Windows 10 x64\r\n- NET Framework 4.7.2, ML.Net 1.4.0\r\n\r\nI create project for multiclass classification, some code:\r\n`var trainingDataView = mlContext.Data.LoadFromEnumerable(allTrainData);\r\n\r\nvar trainingPipeline = mlContext.Transforms.Conversion.MapValueToKey(inputColumnName: \"IdCategory\", outputColumnName: \"Label\")\r\n\t.Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName: \"HeaderProduct\", outputColumnName: \"HeaderProductFeaturized\"))\r\n\t.Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName: \"DescriptionProduct\", outputColumnName: \"DescriptionProductFeaturized\"))\r\n\t.Append(mlContext.Transforms.Concatenate(\"Features\", \"HeaderProductFeaturized\", \"DescriptionProductFeaturized\"))\r\n\t.Append(mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy())\r\n\t.Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\nvar trainedModel = trainingPipeline.Fit(trainingDataView);`\r\n\r\nI try train model and have Exception:\r\n Shuffle input cursor reader failed with an exception, (   in Microsoft.ML.Transforms.RowShufflingTransformer.Cursor.MoveNextCore()\r\n   in  Microsoft.ML.Data.RootCursorBase.MoveNext()\r\n   in  Microsoft.ML.Trainers.TrainingCursorBase.MoveNext()\r\n   in  Microsoft.ML.Trainers.SdcaTrainerBase`3.TrainCore(IChannel ch, RoleMappedData data, LinearModelParameters predictor, Int32 weightSetCount)\r\n   in  Microsoft.ML.Trainers.StochasticTrainerBase`2.TrainModelCore(TrainContext context)\r\n   in  Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   in  Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n\r\nI downgraded the version ml.net to 1.3.1 an all worked fine.\r\na little later, I upgraded the version to 1.5.0-preview and all worked fine.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4819","RelatedDescription":"Open issue \"Shuffle input cursor reader failed with an exception in ml.net 1.4.0\" (#4819)"},{"Id":"561957436","IsPullRequest":true,"CreatedAt":"2020-02-08T02:32:40","Actor":"harishsk","Number":"4817","RawContent":null,"Title":"WIP: Make sure Done() is called in cleanup if it hasn't been called","State":"open","Body":"This makes sure call stack is collected for intermediate failures.","Url":"https://github.com/dotnet/machinelearning/pull/4817","RelatedDescription":"Open PR \"WIP: Make sure Done() is called in cleanup if it hasn't been called\" (#4817)"},{"Id":"561922933","IsPullRequest":true,"CreatedAt":"2020-02-08T01:20:40","Actor":"frank-dong-ms","Number":"4814","RawContent":null,"Title":"improve logging for Functional Tests","State":"closed","Body":"Better logging for FT:\r\n1. add test output logging handler and MessageKindToLog in FT base class\r\n2. move TestLogger to TestFrameworkCommon project as this is more common test project and we might need to use TestLogger in future for FT\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4814","RelatedDescription":"Closed or merged PR \"improve logging for Functional Tests\" (#4814)"},{"Id":"561848195","IsPullRequest":true,"CreatedAt":"2020-02-07T23:44:24","Actor":"frank-dong-ms","Number":"4811","RawContent":null,"Title":"remove build timeout as perf bump","State":"closed","Body":"seeing build perf bump like below few builds:\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=510766&view=logs&j=4a5328fc-3628-53de-aa0c-9ba4571cae61&t=d953246d-9492-5686-12cd-f07513b595b7\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=510972&view=logs&j=11c3dbcc-a5f4-5edd-335b-a8af5aa47d46&s=d654deb9-056d-50a2-1717-90c08683d50a\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=510945&view=logs&j=4a5328fc-3628-53de-aa0c-9ba4571cae61&t=d953246d-9492-5686-12cd-f07513b595b7\r\n\r\nthis PR remove build timeout as perf bump\r\n\r\nCan't use hosted agent pool for netcore3.0 due to space limitation:\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=512080&view=logs&jobId=4a5328fc-3628-53de-aa0c-9ba4571cae61&j=4a5328fc-3628-53de-aa0c-9ba4571cae61&t=d953246d-9492-5686-12cd-f07513b595b7\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4811","RelatedDescription":"Closed or merged PR \"remove build timeout as perf bump\" (#4811)"},{"Id":"561899846","IsPullRequest":true,"CreatedAt":"2020-02-07T23:13:48","Actor":"Lynx1820","Number":"4813","RawContent":null,"Title":"Fix for NgramTransform","State":"closed","Body":"- Casting UInt16 -> Int64  inside NgramTransform, since it may now receive UInt16 keys from TokeningByCharacters\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4813","RelatedDescription":"Closed or merged PR \"Fix for NgramTransform\" (#4813)"},{"Id":"561898450","IsPullRequest":true,"CreatedAt":"2020-02-07T22:12:16","Actor":"michaelgsharp","Number":"4812","RawContent":null,"Title":"Added in DateTime type support for TimeSeriesImputer","State":"open","Body":"Added in System.DateTime support for the Date column in TimeSeriesImputer.\r\n\r\nInternally it converts it to POSIX time before it sends it to the native implementation, and then converts it back to System.DateTime for the IDataView.\r\n\r\nAlso added more comments and comments for the Enums.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4812","RelatedDescription":"Open PR \"Added in DateTime type support for TimeSeriesImputer\" (#4812)"},{"Id":"561840191","IsPullRequest":true,"CreatedAt":"2020-02-07T21:49:33","Actor":"frank-dong-ms","Number":"4810","RawContent":null,"Title":"modify base test class analyzer, allow to extend from ft base test class","State":"closed","Body":"We have separate base test class for all functional tests: FunctionalTestBaseClass\r\nThe reason for that is FT is also runned on NightlyBuild pipeline which not take project dependency directly but take ML.NET related Nuget package as dependency and we don't want FT to take dependency from TestFramework.","Url":"https://github.com/dotnet/machinelearning/pull/4810","RelatedDescription":"Closed or merged PR \"modify base test class analyzer, allow to extend from ft base test class\" (#4810)"},{"Id":"561830375","IsPullRequest":true,"CreatedAt":"2020-02-07T19:35:37","Actor":"sharwell","Number":"4809","RawContent":null,"Title":"Experiment: Switch to multitargeting for tests","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4809","RelatedDescription":"Open PR \"Experiment: Switch to multitargeting for tests\" (#4809)"},{"Id":"561360837","IsPullRequest":true,"CreatedAt":"2020-02-07T18:06:53","Actor":"gvashishtha","Number":"4806","RawContent":null,"Title":"Add link to February survey","State":"closed","Body":"Adds a link to ML.NET survey for February\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4806","RelatedDescription":"Closed or merged PR \"Add link to February survey\" (#4806)"},{"Id":"561572565","IsPullRequest":false,"CreatedAt":"2020-02-07T11:10:00","Actor":"gartangh","Number":"4807","RawContent":null,"Title":"ImageClassifier with ExponentialLRDecay: metrics not updated/calculated during validation","State":"open","Body":"### System information\r\n\r\n- **OS version**: Windows 10 Pro 18363\r\n- **.NET Version**:  Core 2.1\r\n- **Platform**: x64\r\n- **ML.NET version**: 0.15-preview\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n  I am trying to train an image classifier that makes use of `ExponentialLRDecay`.\r\n  I would like to see the metrics for training and validation for each epoch.\r\n\r\n  ```csharp\r\n  var options = new ImageClassificationTrainer.Options()\r\n  {\r\n    LearningRateScheduler = new ExponentialLRDecay(),\r\n    ValidationSetFraction = 0.1f,\r\n    MetricsCallback = (metrics) => Console.WriteLine(metrics  + $\"   CrossEntropy: {metrics.Train.CrossEntropy}, LearningRate: {metrics.Train.LearningRate})\r\n  };\r\n  var model = mlContext.MulticlassClassification.Trainers.ImageClassification(options);\r\n  ```\r\n\r\n  (I added `  + $\"   CrossEntropy: {metrics.Train.CrossEntropy}, LearningRate: {metrics.Train.LearningRate}\"`, because the crossentropy and learning rate are not printed by default for the validation set.)\r\n\r\n- **What happened?**\r\n  * The learning rate is not updated for the validation set (seen on every even row in the image).\r\n  * The cross-entropy is not calculated for the validation set (seen on every even row in the image).\r\n  * The learning rate is not updated after the second epoch like the default value of `2` for `numEpochsPerDecay ` in `ExponentialLRDecay()`, but after the first instead (seen on the third row in the image). After that, the learning rate is correctly updated every 2 epochs. I'm not sure if this is the expected behavior.\r\n\r\n  ![image](https://user-images.githubusercontent.com/20618666/74023199-60bf5100-499f-11ea-8511-c003965b1c90.png)\r\n\r\n- **What did you expect?**\r\n  * I expected a decaying learning rate in the validation step, equal to the one in the training step.\r\n  * I expected the cross-entropy to be calculated in the validation step. The model with the highest `Accuracy` and lowest `CrossEntropy` are the best, so if 2 models perform equally well in terms of accuracy, the one with the lowest cross-entropy on the validation set should be picked.\r\n  * Further, I expected the learning rate to start decaying after the 2nd epoch.","Url":"https://github.com/dotnet/machinelearning/issues/4807","RelatedDescription":"Open issue \"ImageClassifier with ExponentialLRDecay: metrics not updated/calculated during validation\" (#4807)"},{"Id":"561328863","IsPullRequest":true,"CreatedAt":"2020-02-07T04:56:30","Actor":"Lynx1820","Number":"4805","RawContent":null,"Title":"TokenizingByCharacters export to Onnx","State":"closed","Body":"- Transformer that tokenizes by character and returns the characters (as uint16)\r\n- Since there's not a comparable onnx operator, a label encoder is used to map a string token to it's corresponding character value.  This will unfortunately make the model much larger, since 65535 values have to be saved as a mapping guide for label encoder. ","Url":"https://github.com/dotnet/machinelearning/pull/4805","RelatedDescription":"Closed or merged PR \"TokenizingByCharacters export to Onnx\" (#4805)"},{"Id":"561281068","IsPullRequest":true,"CreatedAt":"2020-02-06T23:03:02","Actor":"sharwell","Number":"4802","RawContent":null,"Title":"Extract IsTestMethod to a shared analyzer helper","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4802","RelatedDescription":"Closed or merged PR \"Extract IsTestMethod to a shared analyzer helper\" (#4802)"},{"Id":"561282487","IsPullRequest":true,"CreatedAt":"2020-02-06T21:32:51","Actor":"sharwell","Number":"4803","RawContent":null,"Title":"Implement MSML_RelaxTestNaming suppressor for VSTHRD200","State":"open","Body":"🚧 Builds on #4801 and #4802.\r\n\r\nAllow asynchronous test methods to omit the 'Async' suffix.","Url":"https://github.com/dotnet/machinelearning/pull/4803","RelatedDescription":"Open PR \"Implement MSML_RelaxTestNaming suppressor for VSTHRD200\" (#4803)"},{"Id":"561279039","IsPullRequest":true,"CreatedAt":"2020-02-06T21:26:02","Actor":"sharwell","Number":"4801","RawContent":null,"Title":"Enable RS1026 (Enable concurrent execution)","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4801","RelatedDescription":"Open PR \"Enable RS1026 (Enable concurrent execution)\" (#4801)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-13T05:30:40.2407395Z","RunDurationInMilliseconds":734}