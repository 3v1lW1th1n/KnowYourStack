{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12061379170","Type":"IssuesEvent","CreatedAt":"2020-04-15T23:36:38","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7950","RelatedDescription":"Opened issue \"[A11y] \"Skip to content\" prompt prevents clicking links\" (#7950) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nWhen \"Skip to content\" prompt is active, clicking links on a page does nothing.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Go to https://www.nuget.org\r\n2. Press Shift+Tab a bunch of time until \"Skip to content\" link appears on top of the page.\r\n3. Click any link on a page.\r\n\r\nThe \"Skip to content\" link disappears when anything is clicked, content shifts and click ends up in wrong location.\r\n\r\n### Expected behavior\r\nExpected navigation occurs.\r\n"},{"Id":"12060342944","Type":"IssuesEvent","CreatedAt":"2020-04-15T21:01:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7946","RelatedDescription":"Closed issue \"Waiting for validation. 2 days have passed.\" (#7946) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nWaiting for validation. 2 days have passed.\r\n\r\n### Expected behavior\r\nTypically after submitting a new version it's approved within several minutes, not days.\r\n\r\n### Additional context\r\nhttps://www.nuget.org/packages/Memory.dll/"},{"Id":"12055317907","Type":"IssuesEvent","CreatedAt":"2020-04-15T12:48:02","Actor":"raczeja","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7949","RelatedDescription":"Opened issue \"Error while publishing snupkg package\" (#7949) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nI'm receiving following email while publishing snupkg package\r\n[NuGet Gallery] Symbol package validation failed - OcarambaLite 3.2.9\r\nThe symbol package OcarambaLite 3.2.9 failed validation because of the following reason(s):\r\n•\tThe uploaded symbols package contains pdb(s) for a corresponding dll(s) not found in the nuget package.\r\nYour symbol package was not published on NuGet Gallery and is not available for consumption.\r\nYou can reupload your symbol package once you've fixed the issue with it.\r\n\r\nlink to csproj file https://github.com/ObjectivityLtd/Ocaramba/blob/master/OcarambaLite/OcarambaLite.csproj \r\n\r\nnuget package of version 3.2.9 was published https://www.nuget.org/packages/OcarambaLite/\r\n\r\n I set:\r\n\r\n<IncludeSymbols>true</IncludeSymbols>\r\n<SymbolPackageFormat>snupkg</SymbolPackageFormat>\r\n<DebugType>portable</DebugType>\r\n\r\n\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. On this URL '...'\r\n2. Perform this operation '...'\r\n3. See error\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here."},{"Id":"12047953499","Type":"PullRequestEvent","CreatedAt":"2020-04-14T19:42:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7948","RelatedDescription":"Opened pull request \"Allow deletion of unconfirmed users and orgs\" (#7948) at NuGet/NuGetGallery","RelatedBody":"Fix minor styling issue on the delete account page when an exception bubbles out.\r\nFix bug in the account delete handler which would not delete users when notifications were turned off.\r\nAddress https://github.com/NuGet/Engineering/issues/3099"},{"Id":"12047894709","Type":"IssuesEvent","CreatedAt":"2020-04-14T19:35:28","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7947","RelatedDescription":"Opened issue \"[Search] Opt-out of Azure Search's relevancy changes\" (#7947) at NuGet/NuGetGallery","RelatedBody":"⚠️ This will block search index rebuilds after July 15, 2020!\r\n\r\nFrom Azure Search's documentation: https://docs.microsoft.com/en-us/azure/search/index-ranking-similarity\r\n\r\n> Starting July 15, 2020, newly created search services will use the BM25 ranking function, which has proven in most cases to provide search rankings that align better with user expectations than the current default ranking. ... With this change, you will most likely see slight changes in the ordering of your search results. \r\n>\r\n> For services created before July 15, 2020: If the similarity is omitted or set to null, the index will use the old classic similarity algorithm.\r\n> \r\n> For services created after July 15, 2020: If the similarity is omitted or set to null, the index will use the new BM25 similarity algorithm.\r\n> \r\n> You can also explicitly set the similarity value to be one of the following two values: \"#Microsoft.Azure.Search.ClassicSimilarity\" or \"#Microsoft.Azure.Search.BM25Similarity\".\r\n\r\nWe should opt-out of `BM25Similarity` until we have validated that these change improve relevancy for NuGet's search."},{"Id":"12046548816","Type":"IssuesEvent","CreatedAt":"2020-04-14T17:12:02","Actor":"erfg12","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7946","RelatedDescription":"Opened issue \"Waiting for validation. 2 days have passed.\" (#7946) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nWaiting for validation. 2 days have passed.\r\n\r\n### Expected behavior\r\nTypically after submitting a new version it's approved within several minutes, not days.\r\n\r\n### Additional context\r\nhttps://www.nuget.org/packages/Memory.dll/"},{"Id":"12037783758","Type":"IssuesEvent","CreatedAt":"2020-04-13T22:42:47","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7945","RelatedDescription":"Closed issue \"[Package Renames] Remove download overrides\" (#7945) at NuGet/NuGetGallery","RelatedBody":"Today certain packages have their download counts overriden during popularity scoring. This was a stopgap until we supported package renames. We should remove download overrides. \r\n\r\nPart of https://github.com/NuGet/NuGetGallery/issues/7896"},{"Id":"12037775136","Type":"IssuesEvent","CreatedAt":"2020-04-13T22:41:23","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7945","RelatedDescription":"Opened issue \"[Package Renames] Remove download overrides\" (#7945) at NuGet/NuGetGallery","RelatedBody":"Today certain packages have their download counts overriden during popularity scoring. This was a stopgap until we supported package renames. We should remove download overrides. "},{"Id":"12037608497","Type":"IssuesEvent","CreatedAt":"2020-04-13T22:15:01","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7944","RelatedDescription":"Opened issue \"[Package Renames] Add feature flag to undo all popularity transfers\" (#7944) at NuGet/NuGetGallery","RelatedBody":"Add a feature flag that, when activated, removes all popularity transfers in search. The Gallery UI should be unaffected by this feature flag."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12062070664","Type":"IssuesEvent","CreatedAt":"2020-04-16T01:52:43","Actor":"niblak","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9446","RelatedDescription":"Opened issue \"NuGet restore with mixed packages.config/PackageReference and Directory.Build.targets\" (#9446) at NuGet/Home","RelatedBody":"In our .NET 4.7.2 solution, the majority of our projects use the new Common Project System/SDK-style projects, but a few of the projects that do not support this are still using the old project system and packages.config (such as ASP.NET ones).\r\n\r\nRecently, we added a Directory.Build.targets file that included a global PackageReference behind a condition that applied only to the SDK-style projects using PackageReference:\r\n```\r\n  <ItemGroup Condition=\"'$(UsingMicrosoftNETSdk)' == 'true'\">\r\n    <PackageReference Include=\"...\" Version=\"...\" PrivateAssets=\"all\" />\r\n  </ItemGroup>\r\n```\r\n\r\nEven though this condition evaluated to false for packages.config projects, the mere presence of PackageReference seems to have caused NuGet to change the restore style and completely ignore packages.config. When building with VS 16.4.6, none of the packages.config packages were restored. \r\n\r\nIs this expected behavior? As an additional data point, our Azure DevOps pipeline continued to work as it manually runs `nuget.exe restore` as part of the pipeline (version 4.3.0), so it took us a few months to notice this -- this seems to force NuGet to read packages.config even in this mixed scenario, but the on-build restore in VS does not work."},{"Id":"12061424562","Type":"IssuesEvent","CreatedAt":"2020-04-15T23:45:27","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7438","RelatedDescription":"Closed issue \"Faulty DOTNET_HOST_PATH environment variable handling.\" (#7438) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nWhile using NuGet.Core v.4.8.0.6, with the Microsoft/artifacts-credprovider (no client, direct code from a console app), in netcoreapp2.1, runned in AppVeyor. Got:\r\n\r\n> NuGet: Using C:\\Users\\appveyor\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll as a credential provider plugin.\r\n> NuGet: Cannot start process because a file name has not been provided.\r\n> \r\n\r\nThis is fixed with this environment variable (and the explanation is in the comment):\r\n```\r\nenvironment:\r\n  # Workaround for dev/NuGet.Client\\src\\NuGet.Core\\NuGet.Protocol\\Plugins\\PluginFactory.cs line 161:\r\n  #   FileName = Environment.GetEnvironmentVariable(\"DOTNET_HOST_PATH\"),\r\n  # This line should be:\r\n  #   FileName = Environment.GetEnvironmentVariable(\"DOTNET_HOST_PATH\") ?? \"dotnet\",\r\n```\r\n\r\nHTH\r\n"},{"Id":"12060500655","Type":"IssuesEvent","CreatedAt":"2020-04-15T21:20:21","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9445","RelatedDescription":"Opened issue \"Repair failing tests for PM UI\" (#9445) at NuGet/Home","RelatedBody":"Production code works well. Test code needs work to add those asemblies and simulate an UI thread.\r\n\r\n- DataContext_Initialized_DefaultIsItems\r\n\r\nSystem.Windows.Markup.XamlParseException : Initialization of 'Microsoft.VisualStudio.PlatformUI.LiveTextBlock' threw an exception.\\r\\n---- System.TypeInitializationException : The type initializer for 'Microsoft.Internal.VisualStudio.PlatformUI.Automation.CustomAutomationProperties' threw an exception.\\r\\n-------- System.IO.FileNotFoundException : Could not load file or assembly 'Microsoft.VisualStudio.Diagnostics.Assert, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\n- LoadItems_BeforeGettingCurrent_WaitsForInitialResults\r\n\r\nSystem.Runtime.InteropServices.COMException : LoadingStatusIndicator_PropertyChanged must be called on the UI thread.\r\n\r\n- NuGet.PackageManagement.UI.Test.InfiniteScrollListTests.LoadItemsAsync_LoadingStatusIndicator_InItemsCollectionIfEmptySearch(searchItems: [TestPackageSearchMetadata { Authors = null, DependencySets = null, Description = null, DownloadCount = null, IconUrl = null, ... }, TestPackageSearchMetadata { Authors = null, DependencySets = null, Description = null, DownloadCount = null, IconUrl = null, ... }, TestPackageSearchMetadata { Authors = null, DependencySets = null, Description = null, DownloadCount = null, IconUrl = null, ... }], expectedItems: 3)\r\n\r\nSystem.Runtime.InteropServices.COMException : LoadingStatusIndicator_PropertyChanged must be called on the UI thread.\r\n\r\n- NuGet.PackageManagement.UI.Test.InfiniteScrollListTests.LoadItemsAsync_LoadingStatusIndicator_InItemsCollectionIfEmptySearch(searchItems: [], expectedItems: 1)\r\n\r\nSystem.Runtime.InteropServices.COMException : LoadingStatusIndicator_PropertyChanged must be called on the UI thread.\r\n\r\n\r\n"},{"Id":"12059230998","Type":"IssuesEvent","CreatedAt":"2020-04-15T18:53:52","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8058","RelatedDescription":"Reopened issue \"Package Manager UI loads all registration pages\" (#8058) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nVisual Studio's 2019's Package Manager UI is very slow to load packages with many versions. This happens because Visual Studio loads the metadata for all versions of the package immediately.\r\n\r\n## Suggestion\r\n\r\nIdeally, Visual Studio's UI should only do up to three requests:\r\n\r\n1. Search for packages. The packages' list of versions should be generated using the [search results'](https://docs.microsoft.com/en-us/nuget/api/search-query-service-resource#search-result) `versions` field.\r\n1. Load the package's [registration index](https://docs.microsoft.com/en-us/nuget/api/registration-base-url-resource#registration-index). Example: https://api.nuget.org/v3/registration3-gz-semver2/fake/index.json\r\n1. If necessary, load the latest version's [registration page](https://docs.microsoft.com/en-us/nuget/api/registration-base-url-resource#registration-page). Example: https://api.nuget.org/v3/registration3-gz-semver2/fake/page/4.64.13/5.8.4.json\r\n\r\nThe differences between this suggestion and the current implementation:\r\n\r\n1. The version list is generated using the search response.\r\n2. Only load ONE registration page instead of ALL registration pages.\r\n\r\n/cc @dtivel @nkolev92 \r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Open Fiddler\r\n1. Open \"Manage Packages\"\r\n1. Open the \"Browse\" tab\r\n1. Search for \"FAKE\"\r\n1. Look at the requests on Fiddler\r\n1. Try to select another \"Version\" on the right-hand side (this is very slow)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-04-16T05:30:41.3298055Z","RunDurationInMilliseconds":1920}