{"Data":{"Vue-Issues":{"Issues":[{"Id":"414430611","IsPullRequest":false,"CreatedAt":"2019-02-26T04:53:18","Actor":"aimergenge","Number":"9575","RawContent":null,"Title":"$forceUpdate doesn't affect checkbox","State":"open","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/v8n1p04v85](https://codesandbox.io/s/v8n1p04v85)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. have a look at code in BreakDemo.vue\r\n2. input some text in the text input, after 1s, the value reset to default\r\n3. select another option, after 1s , the value reset to default\r\n4. click on the checkbox, after 1s, the value doesn’t reset to default\r\n\r\n### What is expected?\r\nthe value of checkbox is resetted\r\n\r\n### What is actually happening?\r\nthe value of checkbox is not resetted\r\n\r\n---\r\nIt seems that $forceUpdate doesn't affect checkbox\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9575","RelatedDescription":"Open issue \"$forceUpdate doesn't affect checkbox\" (#9575)"},{"Id":"414309850","IsPullRequest":false,"CreatedAt":"2019-02-25T21:15:48","Actor":"dmcknight26","Number":"9574","RawContent":null,"Title":"New slot syntax issue with events and 'this'","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/5qc8zh20/](https://jsfiddle.net/5qc8zh20/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nFocus on the text field and then TAB or click out of it.  \r\n\r\n### What is expected?\r\nYou should see text indicating that you blurred out.\r\n\r\n### What is actually happening?\r\nNothing.\r\n\r\n---\r\nHere is a link to a working version with the old syntax -- https://jsfiddle.net/w8mreqa1/\r\n\r\nAll that is different is the usage of the slot, i.e. `template #header` vs `template slot=\"header\"` yet now the inline handler no longer works (in fact it throws an error in my application).  I'm not sure if this is intended behavior going forward but I have existing code that breaks because of this situation when I attempt to use the new syntax.\r\n\r\nI should also note the following workarounds I discovered: 1) if you omit the `this` keyword it appears to work 2) if you extract the inline method out and place it into `methods` it will also work.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9574","RelatedDescription":"Closed issue \"New slot syntax issue with events and 'this'\" (#9574)"},{"Id":"414175781","IsPullRequest":false,"CreatedAt":"2019-02-25T15:57:25","Actor":"plehnen","Number":"9573","RawContent":null,"Title":"transition before-leave js-hook does not manipulate the DOM which will be transitioned","State":"open","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/8zcdpkv0/](https://jsfiddle.net/8zcdpkv0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nPlease see jsfiddle.\r\n\r\nAny changes in the `before-leave` hook won't affect the DOM which is transitioned.\r\n\r\nMy actual problem is that I try to transition an element which has `aria-live=\"polite\"` or `rule=\"alert\"`, which will be read out by a screenreader.\r\nApparently the change of classes from the transition are noticed by the screenreader and the message will be read out again.\r\nI tried to fix this for accessibility purposes with the `before-leave` hook, but that doesn't seem to work correctly.\r\n\r\n\r\n\r\n### What is expected?\r\nIt would either be great if the transitioned DOM will remove all attributes which will cause the screenreader to read it out again, or to allow the javascript hook `\"before-leave\"` to actually change the DOM **before** the transition happens.\r\n\r\n### What is actually happening?\r\nThe old DOM will be transitioned (and the screenreader will read the content again).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9573","RelatedDescription":"Open issue \"transition before-leave js-hook does not manipulate the DOM which will be transitioned\" (#9573)"},{"Id":"414160386","IsPullRequest":true,"CreatedAt":"2019-02-25T15:26:50","Actor":"maoberlehner","Number":"9572","RawContent":null,"Title":"fix #9571, rendering async components after initial context was destroyed","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n- [x] Maybe (I'm not sure)\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis is work in progress. I'm not sure if this code is production ready!","Url":"https://github.com/vuejs/vue/pull/9572","RelatedDescription":"Open PR \"fix #9571, rendering async components after initial context was destroyed\" (#9572)"},{"Id":"414130660","IsPullRequest":false,"CreatedAt":"2019-02-25T14:26:49","Actor":"maoberlehner","Number":"9571","RawContent":null,"Title":"Components created with async component factory break on route change","State":"open","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/239l9qnkxn](https://codesandbox.io/s/239l9qnkxn)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codesandbox.io/s/239l9qnkxn\r\n2. Immediately (before the async component is resolved within 7 sec) click on the \"Some Page\" link\r\n3. Click on the \"Home\" link (before 7s are elapsed)\r\n\r\n### What is expected?\r\nThe AsyncReady component should render after 7 seconds.\r\n\r\n### What is actually happening?\r\nThe AsyncLoading component is shown forever\r\n\r\n---\r\nThe problem is that the `currentRenderingInstance` is `Home`. After rendering the `SomePage` route, the initial `Home` instance (which is stored as the `owner` of the factory) is destroyed. As soon as the factory calls `forceRender`, triggering `$forceUpdate()` on the owner does nothing because the old `Home` instance already was destroyed and a new one was created when navigating back to `Home`.\r\n\r\nThis is problematic on very slow connections when users click a link before all dynamic components were resolved or in case of automatic redirects which are triggered immediately after a page is loaded (after checking auth for example).\r\n\r\nSee: https://github.com/vuejs/vue/blob/dev/src/core/vdom/helpers/resolve-async-component.js#L58-L74\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9571","RelatedDescription":"Open issue \"Components created with async component factory break on route change\" (#9571)"},{"Id":"414093409","IsPullRequest":false,"CreatedAt":"2019-02-25T13:07:16","Actor":"misq007","Number":"9570","RawContent":null,"Title":"Property injection in functional component does not work","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/misq007/a5wth0rf/39/](https://jsfiddle.net/misq007/a5wth0rf/39/)\r\n\r\n### Steps to reproduce\r\nthe error will popup\r\n\r\n### What is expected?\r\nProvide/Inject to work properly for the first level component in the same way as it is working when nested.\r\n\r\n### What is actually happening?\r\nInjection \"mode\" not found\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9570","RelatedDescription":"Closed issue \"Property injection in functional component does not work\" (#9570)"},{"Id":"414005653","IsPullRequest":false,"CreatedAt":"2019-02-25T09:21:54","Actor":"531431988","Number":"9569","RawContent":null,"Title":"echart图表动态创建的html怎么绑定VUE事件代码请看详情","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/KEPeqa](https://codepen.io/anon/pen/KEPeqa)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nechart 图表 js 动态创建html时如何绑定事件\r\n\r\ntooltip: {\r\n          trigger: 'axis',\r\n          formatter: params => {\r\n            return `<a href=\"/?id=123\" target=\"_blank\"  onclick=\"事件\">查看详情</a>`\r\n          }\r\n｝\r\n\r\n### What is expected?\r\n如何绑定VUE事件？\r\n\r\n### What is actually happening?\r\n如何绑定VUE事件？\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9569","RelatedDescription":"Closed issue \"echart图表动态创建的html怎么绑定VUE事件代码请看详情\" (#9569)"},{"Id":"413983053","IsPullRequest":false,"CreatedAt":"2019-02-25T08:27:00","Actor":"ModernFarmer","Number":"9568","RawContent":null,"Title":"When monitoring an Array with 'watch', the callback function takes the same arguments and points to new data","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://github.com/ModernFarmer/test/blob/master/reappear.js](https://github.com/ModernFarmer/test/blob/master/reappear.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.   Download the latest version of vue-cli\r\n\r\n2.   Follow the code in the 'reppear.js' to listen for an Array\r\n\r\n### What is expected?\r\nnewData : [1,2,3,4,5,6] , oldData : [1,2,3,4,5]\r\n\r\n### What is actually happening?\r\nnewData : [1,2,3,4,5,6] , oldData : [1,2,3,4,5,6]\r\n\r\n---\r\nThe root of the problem: two arguments to the callback function point to the same array\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9568","RelatedDescription":"Closed issue \"When monitoring an Array with 'watch', the callback function takes the same arguments and points to new data\" (#9568)"},{"Id":"413917329","IsPullRequest":true,"CreatedAt":"2019-02-25T03:28:06","Actor":"baleevskiy","Number":"9567","RawContent":null,"Title":"feat(build script): Return exit code","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nReturn error exit code from the build script in case of error","Url":"https://github.com/vuejs/vue/pull/9567","RelatedDescription":"Open PR \"feat(build script): Return exit code\" (#9567)"},{"Id":"413849614","IsPullRequest":false,"CreatedAt":"2019-02-24T18:47:13","Actor":"vytenis-nfq","Number":"9566","RawContent":null,"Title":"@vue/cli-plugin-unit-jest Regular Expression Denial of Service","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[![Edit Vue Template](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/mmpxnjzowp?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nnpm init -y\r\nnpm i -D @vue/cli-plugin-unit-jest\r\nnpm audit\r\n```\r\n\r\n### What is expected?\r\nShould be 0 vulnerabilities\r\n\r\n### What is actually happening?\r\n```\r\n┌───────────────┬──────────────────────────────────────────────────────────────┐\r\n│ Low           │ Regular Expression Denial of Service                         │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Package       │ braces                                                       │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Patched in    │ >=2.3.1                                                      │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Dependency of │ @vue/cli-plugin-unit-jest [dev]                              │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Path          │ @vue/cli-plugin-unit-jest > jest > jest-cli > jest-util >    │\r\n│               │ jest-message-util > micromatch > braces                      │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ More info     │ https://nodesecurity.io/advisories/786                       │\r\n└───────────────┴──────────────────────────────────────────────────────────────┘\r\n```\r\n\r\n---\r\n\"@vue/cli-plugin-unit-jest\": \"3.4.1\",\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9566","RelatedDescription":"Closed issue \"@vue/cli-plugin-unit-jest Regular Expression Denial of Service\" (#9566)"},{"Id":"413821070","IsPullRequest":false,"CreatedAt":"2019-02-24T14:12:14","Actor":"lizhongzhen11","Number":"9565","RawContent":null,"Title":"vue watch中使用短路运算符&&的问题","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/lizhongzhen11/dailyGain/issues/27](https://github.com/lizhongzhen11/dailyGain/issues/27)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```js\r\nwatch: {\r\n  cityLevel (val) {\r\n    console.log('9999999999', val,  this.campaignType)\r\n    if ( this.campaignType === 1) {\r\n      console.log('666666666')\r\n    }\r\n     this.campaignType === 1 && console.log('888888888')\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\n最近项目中突然发现，父组件传递一个computed属性`campaignType `给子组件，子组件通过选择checkbox改变值并判断` this.campaignType === 1`来执行相应的代码。\r\n预期` this.campaignType === 1 && console.log('888888888')`能正常执行。\r\n\r\n### What is actually happening?\r\n但是很奇怪的是，`console.log('9999999999', val,  this.campaignType)`能正常打印出来， this.campaignType === 1 && console.log('888888888')却不行，然后我改成用`if()`来判断却能执行了。虽然问题解决了，但是为什么会出现这种情况呢？我百思不得其解，大致翻了下watch相关的issue，貌似都没我这个问题，想请教下尤大或者其他大佬，为什么会出现我这样的问题？\r\n感谢各位前来解惑！\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9565","RelatedDescription":"Closed issue \"vue watch中使用短路运算符&&的问题\" (#9565)"},{"Id":"413808911","IsPullRequest":true,"CreatedAt":"2019-02-24T10:56:05","Actor":"sh7dm","Number":"9564","RawContent":null,"Title":"feat(lifecycle): add beforeDeactivate hook (implement #9454)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nCloses #9454.","Url":"https://github.com/vuejs/vue/pull/9564","RelatedDescription":"Open PR \"feat(lifecycle): add beforeDeactivate hook (implement #9454)\" (#9564)"},{"Id":"413781814","IsPullRequest":true,"CreatedAt":"2019-02-24T04:49:28","Actor":"KaelWD","Number":"9563","RawContent":null,"Title":"fix(types): allow scoped slots to return a single VNode","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nScoped slots are normalised to `VNode[]`, but they should still be able to return a bare string or VNode when used in a render function. \r\nhttps://codepen.io/anon/pen/BMXvme?editors=1010","Url":"https://github.com/vuejs/vue/pull/9563","RelatedDescription":"Open PR \"fix(types): allow scoped slots to return a single VNode\" (#9563)"},{"Id":"413776347","IsPullRequest":false,"CreatedAt":"2019-02-24T03:20:52","Actor":"daleconboy","Number":"9562","RawContent":null,"Title":"Possible regression of #8545 Maximum call stack size exceeded in SSR with a v-for with 1000 components","State":"open","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://github.com/daleconboy/vue-reduction](https://github.com/daleconboy/vue-reduction)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Clone the reproduction repo\r\n1. Use Node >= 8.0.0\r\n1. `npm install`\r\n1. `npm run vue`\r\n\r\n### What is expected?\r\nThe script should complete successfully and should log a long string of html to your terminal.\r\n\r\n### What is actually happening?\r\nAn error is thrown:\r\n\r\n```\r\nRangeError: Maximum call stack size exceeded\r\n    at VueComponent.Vue._render (node_modules/vue/dist/vue.runtime.common.dev.js:3527:7)\r\n    at resolve (node_modules/vue-server-renderer/build.dev.js:8366:27)\r\n    at waitForServerPrefetch (node_modules/vue-server-renderer/build.dev.js:8238:3)\r\n    at renderComponentInner (node_modules/vue-server-renderer/build.dev.js:8377:3)\r\n    at renderComponent (node_modules/vue-server-renderer/build.dev.js:8334:5)\r\n    at RenderContext.renderNode (node_modules/vue-server-renderer/build.dev.js:8245:5)\r\n    at RenderContext.next (node_modules/vue-server-renderer/build.dev.js:2597:23)\r\n    at cachedWrite (node_modules/vue-server-renderer/build.dev.js:2450:9)\r\n    at renderElement (node_modules/vue-server-renderer/build.dev.js:8485:5)\r\n    at renderNode (node_modules/vue-server-renderer/build.dev.js:8247:5)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9562","RelatedDescription":"Open issue \"Possible regression of #8545 Maximum call stack size exceeded in SSR with a v-for with 1000 components\" (#9562)"},{"Id":"413724773","IsPullRequest":true,"CreatedAt":"2019-02-23T19:11:05","Actor":"roberto-aguilar","Number":"9561","RawContent":null,"Title":"refactor(dep.js): use forEach instead of for loop to improve readability","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nUsing the forEach method can help readers to know instantly the purpose of the iteration rather\r\nthan making them look at the index management for some logic other than increasing it at each\r\niteration","Url":"https://github.com/vuejs/vue/pull/9561","RelatedDescription":"Closed or merged PR \"refactor(dep.js): use forEach instead of for loop to improve readability\" (#9561)"},{"Id":"413696122","IsPullRequest":true,"CreatedAt":"2019-02-23T13:31:05","Actor":"phanan","Number":"9560","RawContent":null,"Title":"Remove unnecessary variable assignment for prop validator","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nI found this when triaging a vuejs.org PR and reckoned the function can be 3 lines less. Too bad the prod builds will still be exactly the same :<","Url":"https://github.com/vuejs/vue/pull/9560","RelatedDescription":"Open PR \"Remove unnecessary variable assignment for prop validator\" (#9560)"},{"Id":"413669032","IsPullRequest":false,"CreatedAt":"2019-02-23T07:40:02","Actor":"wzwdev","Number":"9559","RawContent":null,"Title":"，el-tabs 中每个el-tab-pane都有自己的按钮绑定@click事件，报错:vue.esm.js?efeb:591 [Vue warn]: Invalid handler for event \"click\": got undefined","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n- vue.esm.js?efeb:591 [Vue warn]: Invalid handler for event \"click\": got undefined\r\n\r\n实际上saveMenu、saveControl都有定义，el-tabs 中每个el-tab-pane都有自己的按钮绑定@click事件，报错:vue.esm.js?efeb:591 [Vue warn]: Invalid handler for event \"click\": got undefined\r\n\r\n<el-tabs type=\"border-card\">\r\n        <el-tab-pane label=\"菜单权限\">\r\n          <div :style=\"'height:'+tabsPanelHeight+'px;overflow-y:auto;border:1px solid #f3f3f3;'\">\r\n            ....\r\n          </div>\r\n          <br/>\r\n          <el-button type=\"primary\" :loading=\"loading\" @click=\"saveMenu\">保存</el-button>\r\n          <el-button @click=\"close\">关闭</el-button>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"控件权限\">\r\n          <div :style=\"'height:'+tabsPanelHeight+'px;overflow-y:auto;border:1px solid #f3f3f3;padding:10px;'\">\r\n            ...\r\n          </div>\r\n          <br/>\r\n          <el-button type=\"primary\" :loading=\"loading\" @click=\"saveControl\">保存</el-button>\r\n          <el-button @click=\"close\">关闭</el-button>\r\n        </el-tab-pane>\r\n </el-tabs>\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9559","RelatedDescription":"Closed issue \"，el-tabs 中每个el-tab-pane都有自己的按钮绑定@click事件，报错:vue.esm.js?efeb:591 [Vue warn]: Invalid handler for event \"click\": got undefined\" (#9559)"},{"Id":"413668803","IsPullRequest":false,"CreatedAt":"2019-02-23T07:36:51","Actor":"wzwdev","Number":"9558","RawContent":null,"Title":"el-tabs 中每个el-tab-pane都有自己的按钮绑定@click事件，报错","State":"closed","Body":"vue.esm.js?efeb:591 [Vue warn]: Invalid handler for event \"click\": got undefined\r\n\r\n实际上saveMenu、saveControl都有定义，el-tabs 中每个el-tab-pane都有自己的按钮绑定@click事件，报错:vue.esm.js?efeb:591 [Vue warn]: Invalid handler for event \"click\": got undefined\r\n\r\n<el-tabs type=\"border-card\">\r\n        <el-tab-pane label=\"菜单权限\">\r\n          <div :style=\"'height:'+tabsPanelHeight+'px;overflow-y:auto;border:1px solid #f3f3f3;'\">\r\n            ....\r\n          </div>\r\n          <br/>\r\n          <el-button type=\"primary\" :loading=\"loading\" @click=\"saveMenu\">保存</el-button>\r\n          <el-button @click=\"close\">关闭</el-button>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"控件权限\">\r\n          <div :style=\"'height:'+tabsPanelHeight+'px;overflow-y:auto;border:1px solid #f3f3f3;padding:10px;'\">\r\n            ...\r\n          </div>\r\n          <br/>\r\n          <el-button type=\"primary\" :loading=\"loading\" @click=\"saveControl\">保存</el-button>\r\n          <el-button @click=\"close\">关闭</el-button>\r\n        </el-tab-pane>\r\n </el-tabs>","Url":"https://github.com/vuejs/vue/issues/9558","RelatedDescription":"Closed issue \"el-tabs 中每个el-tab-pane都有自己的按钮绑定@click事件，报错\" (#9558)"},{"Id":"413646457","IsPullRequest":false,"CreatedAt":"2019-02-23T04:08:53","Actor":"timtnleeProject","Number":"9557","RawContent":null,"Title":"IE 11 Event Handling inside button tag not fired.","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsbin.com/hezicepana/1/edit?html,output](https://jsbin.com/hezicepana/1/edit?html,output)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThere are two elements with ` v-on:click`, the first one is wrapped inside a button tag and the second one is wrapped inside a div tag. \r\nOpen it on IE11, clicking both elements to see the results.\r\n\r\n### What is expected?\r\nExpect both elements trigger the callback and alert the text.\r\n\r\n### What is actually happening?\r\nThe first one does not trigger the callback whereas the second one works fine.\r\n\r\n---\r\nDon't know what causes this.\r\nNot sure whether this happens only to the button tag.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9557","RelatedDescription":"Closed issue \"IE 11 Event Handling inside button tag not fired.\" (#9557)"},{"Id":"413510798","IsPullRequest":false,"CreatedAt":"2019-02-22T18:57:46","Actor":"DenysPavlenko","Number":"9556","RawContent":null,"Title":"v-model radio button issue","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/DenysPavlenko/7x8fw41n/](https://jsfiddle.net/DenysPavlenko/7x8fw41n/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI am trying to get a current value of checked radio button in methods. But I get a previous value. You can see it in console. When I check the first radio button, I am getting a value of previous one.\r\n\r\n### What is expected?\r\nget the same value in console and in declarated data\r\n\r\n### What is actually happening?\r\nvalues is different\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9556","RelatedDescription":"Closed issue \"v-model radio button issue\" (#9556)"},{"Id":"413509971","IsPullRequest":false,"CreatedAt":"2019-02-22T17:47:03","Actor":"DenysPavlenko","Number":"9555","RawContent":null,"Title":"v-model radio button issue","State":"closed","Body":"I am trying to get a current value of checked radio button in methods.  But I get a previous value. You can see it in console. When I check the first radio button, I get a value of previous one. I am using v2.5.22. \r\nhttps://jsfiddle.net/DenysPavlenko/7x8fw41n/\r\n\r\nIn v2.3.4 all works fine. You can see it here:\r\nhttps://codepen.io/diegoliv/pen/JrPBbG\r\n","Url":"https://github.com/vuejs/vue/issues/9555","RelatedDescription":"Closed issue \"v-model radio button issue\" (#9555)"},{"Id":"413506480","IsPullRequest":false,"CreatedAt":"2019-02-22T17:36:47","Actor":"DenysPavlenko","Number":"9554","RawContent":null,"Title":"console","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/9554","RelatedDescription":"Closed issue \"console\" (#9554)"},{"Id":"413368595","IsPullRequest":false,"CreatedAt":"2019-02-22T12:28:46","Actor":"AngusFu","Number":"9553","RawContent":null,"Title":"v2.6.7 breaks scoped slots compiled with older version","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/r5903m5vjp](https://codesandbox.io/s/r5903m5vjp)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n使用 vue@2.6.6 以及之前版本开发、编译的 UI 组件库，在与 vue@2.6.7 一起工作时报错。\r\n\r\n原因在于：Commit [7ec4627](https://github.com/vuejs/vue/commit/7ec4627902020cccd7b3f4fbc63e1b0d6b9798cd) 改变了 `resolveScopedSlots` 方法的参数顺序。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nv2.6.7 应该继续支持旧的 scoped slot 编译结果吧？\r\n\r\n否则，难道 vue 每 release 一次，各种 UI 组件库的开发者们也得重新跟着重新编译发版吗？\r\n\r\n### What is actually happening?\r\n\r\nvue@2.6.6 及 vue@2.5.x 编译后的 scope slots，在 vue@2.6.7  环境能够不报错。\r\n\r\n![](https://ws4.sinaimg.cn/large/006tKfTcly1g0ffs6r2lsj31h40hu40x.jpg)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9553","RelatedDescription":"Closed issue \"v2.6.7 breaks scoped slots compiled with older version\" (#9553)"},{"Id":"413305470","IsPullRequest":false,"CreatedAt":"2019-02-22T09:22:40","Actor":"aimergenge","Number":"9552","RawContent":null,"Title":"There is a break change in 2.6 that is not involved in release log","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/v8n1p04v85](https://codesandbox.io/s/v8n1p04v85)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nclick the checkbox, the `checked` data changed, while the checked of the checkbox didn't, thus the UI is different from the data.\r\n\r\nThis didn't occurred below vue2.6.\r\n\r\n### What is expected?\r\nthe checkbox update wrongly\r\n\r\n### What is actually happening?\r\nthe checkbox update correctlly\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9552","RelatedDescription":"Closed issue \"There is a break change in 2.6 that is not involved in release log\" (#9552)"},{"Id":"413279714","IsPullRequest":false,"CreatedAt":"2019-02-22T07:38:26","Actor":"xiyunjie1991","Number":"9551","RawContent":null,"Title":"vue-router 动态路由 嵌套动态路由 监听 $route发生冲突","State":"closed","Body":"\r\n#### 这是我的route\r\n\r\n```\r\nroutes: [\r\n    {\r\n      path: '/',\r\n      name: 'Login',\r\n      component: () => import('@/page/login/Login'),\r\n    },\r\n\troutes: [\r\n    {\r\n      path: '/',\r\n      name: 'Login',\r\n      component: () => import('@/page/login/Login'),\r\n    },\r\n\t\t {\r\n\t\t  path:'/Home',\r\n\t\t  name:'Home',\r\n\t\t  redirect: {name: 'news'},\r\n\t\t  component: () => import('@/page/main/Home'),\r\n\t\t  children:[\r\n\t\t    {\r\n\t\t      path: 'orb/:id',\r\n\t\t      name: 'orb',\r\n\t\t      component: () => import('@/page/orb/orb'),\r\n\t\t      children:[\r\n\t\t        {\r\n\t\t          path: 'wiki',\r\n\t\t          name: 'wiki',\r\n\t\t          component: () => import('@/page/orb/wiki'),\r\n\t\t        },\r\n\t\t        {\r\n\t\t          path: 'strategy',\r\n\t\t          name: 'strategy',\r\n\t\t          component: () => import('@/page/orb/strategy'),\r\n\t\t        },\r\n\t\t        {\r\n\t\t          path: 'article/:id',\r\n\t\t          name: 'article',\r\n\t\t          component: () => import('@/page/orb/article'),\r\n\t\t        },\r\n\t\t\r\n\t\t      ]\r\n\t\t    },\r\n\t\t    {\r\n\t\t      path:'news',\r\n\t\t      name:'news',\r\n\t\t      component: () => import('@/page/news/news'),\r\n\t\t    },\r\n\t\t  ]\r\n\t\t},\r\n```\r\n#### home 下有个 orb/：id 动态匹配  orb下有article/:id 动态匹配 \r\n##### 为了让orb下的内容在切换的时候 动态展示  官网的方法是 watch $route\r\n\r\n\r\n```\r\n watch:{\r\n        $route:'init'\r\n      },\r\n\r\n```\r\n#####   这是我的 orb.vue\r\n```\r\n<template>\r\n  <div class=\"orb\">\r\n    <div class=\"orbLeftList\">\r\n      <div class=\"orbWikiAndActivity\">\r\n        <div class=\"waItem\"></div>\r\n        <div  class=\"orbWikiAndActivityItem\" v-bind:class=\"{clicked:item.selected}\" v-for=\"item in articleSections\" :key=\"item.id\" @click=\"upSelected(item)\">{{item.name}}</div>\r\n      </div>\r\n      <div class=\"fenGeXian\"></div>\r\n      <el-button @click=\"downSelected\">下点击</el-button>\r\n      <el-button @click=\"cancelSelected\">取消选中状态</el-button>\r\n    </div>\r\n    <div class=\"orbRightBack\">\r\n      <router-view></router-view>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {FindOrbArticleSections} from '@/api/orb'\r\n    export default {\r\n      name: \"orb\",\r\n      data() {\r\n        return {\r\n          has_wiki: false,\r\n          has_strategy : false,\r\n          orbId:0,\r\n          defaultSelected:'has_wiki',\r\n          articleSections:[],\r\n        }\r\n      },\r\n      watch:{\r\n        $route:'init'\r\n      },\r\n        methods: {\r\n        init(){\r\n          console.info('this.$route.query.id', id)\r\n\r\n          let id =  this.$route.query.id....\r\n\r\n```\r\n\r\n\r\n#####   这是我的 article.vue\r\n\r\n```\r\n<template>\r\n  <div>article\r\n  <div>{{orbId}}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n      name: \"article\",\r\n      data() {\r\n        return {\r\n          orbId: 0\r\n        }\r\n      },\r\n      watch: {\r\n        $route: 'initData'\r\n      },\r\n      created(){\r\n       this.initData()\r\n      },\r\n      methods: {\r\n        initData(){\r\n          this.orbId =this.$route.params.id\r\n        }\r\n\r\n      },\r\n    }\r\n</script>\r\n```\r\n\r\n ##\r\n\r\n#####  orb init() 中对 route 跳转来的参数  获取去后台取得数据  在点击一个 article时 动态匹配改变了路由  覆盖了原先 home跳转到 orb的参数  导致  orb list部分的数据获取失败\r\n如何做  这种动态路由  嵌套动态路由的  数据初 始化呢？\r\n","Url":"https://github.com/vuejs/vue/issues/9551","RelatedDescription":"Closed issue \"vue-router 动态路由 嵌套动态路由 监听 $route发生冲突\" (#9551)"},{"Id":"413222950","IsPullRequest":true,"CreatedAt":"2019-02-22T03:11:08","Actor":"Luxiaosong","Number":"9550","RawContent":null,"Title":"test: Add a unit test for \"$off event and this event added by $once\"","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: add a unit test for \"$off event and this event added by $once\"\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9550","RelatedDescription":"Open PR \"test: Add a unit test for \"$off event and this event added by $once\"\" (#9550)"},{"Id":"413163214","IsPullRequest":false,"CreatedAt":"2019-02-22T03:03:43","Actor":"06b","Number":"9549","RawContent":null,"Title":"v-model.number modifier should validate that input is a number before converting","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/YBbBKz](https://codepen.io/anon/pen/YBbBKz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nChange the value from '1e2' to '1e2w'\r\n\r\n### What is expected?\r\nBecause 1e2w is not a valid number it should not convert it.\r\n\r\n### What is actually happening?\r\n1e2 is a valid number and gets converted to 100, however 1e2w is not - because `parseFloat` is used internally, it drops the w and assumes that the value is 100.\r\n\r\n---\r\nI was using vee-validate trying to validate that an input was numeric and it was discovered that it viewed an invalid input such as 2qwerty - this was because the .number modifier makes it think that it's 2 - so it never fires validation that the input is invalid. \r\n\r\nIf the .number modifier were to confirm that the value entered was a valid number for example `!isNaN(val)` and then attempt `parseFloat` I think that would handle it. \r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9549","RelatedDescription":"Closed issue \"v-model.number modifier should validate that input is a number before converting\" (#9549)"},{"Id":"412950074","IsPullRequest":false,"CreatedAt":"2019-02-21T14:34:36","Actor":"procyclinsur","Number":"9548","RawContent":null,"Title":"dynamic attribute names are not recognized as described in the Vue.js docs","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ferpzqvx/2/](https://jsfiddle.net/ferpzqvx/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Create a Vue app with data property `attrName` with a value of `href`\r\n* Create an `<a>` HTML tag with the following attribute bind `v-bind:[attrName]=some-link`\r\n\r\n### What is expected?\r\nI was expecting the DOM to produce output similar to the following, as per expectations set [here](https://vuejs.org/v2/guide/syntax.html#Dynamic-Arguments)\r\n```html\r\n<a href=\"www.google.com\">Website</a>\r\n```\r\nOR\r\n\r\nI could expect that the documents should be fixed so as to not show a camel case example.\r\n\r\n### What is actually happening?\r\nThe above will fail with the console saying that `attrname` does not exist. \r\n\r\n`attrname` in lowecase being nowhere in the code written.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9548","RelatedDescription":"Closed issue \"dynamic attribute names are not recognized as described in the Vue.js docs\" (#9548)"},{"Id":"412934486","IsPullRequest":false,"CreatedAt":"2019-02-21T14:08:11","Actor":"oswaldofreitas","Number":"9547","RawContent":null,"Title":"Missing form data on POST","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/releases](https://github.com/vuejs/vue/releases)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nupgrade from 2.5.17 to 2.6.6\r\n\r\n### What is expected?\r\nform data was sent like this:\r\n```\r\npassword: mypassword\r\nnew_password: myNewPassword\r\nnew_password_confirmed: myNewPassword\r\nbtn__save: \r\n```\r\n\r\n### What is actually happening?\r\nit's not sending input values and a button with `name=\"btn__save\"` as before:\r\n```\r\npassword: \r\nnew_password: \r\nnew_password_confirmed: \r\n```\r\n\r\n---\r\nI just updated vue cli from 3.0.5 to 3.4.1 (vue-template-compiler from 2.5.17 to 2.6.6) and didn't change anything in my code base and now I can't get the form data when it's submitted to server\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9547","RelatedDescription":"Closed issue \"Missing form data on POST\" (#9547)"},{"Id":"412920142","IsPullRequest":false,"CreatedAt":"2019-02-21T13:18:41","Actor":"Issabln","Number":"9546","RawContent":null,"Title":"How to scroll div automatically with textarea in Vue? How to get an element properly?","State":"closed","Body":"\r\nI'm trying to implement this example (https://codepen.io/lonekorean/pen/gaLEMR) in Vue.\r\n\r\nMy Template:\r\n\r\n![grafik](https://user-images.githubusercontent.com/44476546/53171776-f7a2ca00-35e3-11e9-9d14-096ae59d052b.png)\r\n\r\nand this is my handleScroll() function\r\n\r\n![grafik](https://user-images.githubusercontent.com/44476546/53171821-143f0200-35e4-11e9-8375-a81bbe12447b.png)\r\n\r\n\r\nThe problem is somewhere in the handleScroll()-method. It doesn't get the div and the textarea properly. I tried in in different ways as you see many lines in the method are commented. My code works now exactly as when you delete the content of the handleScroll()-method in the given example(link at top).\r\n","Url":"https://github.com/vuejs/vue/issues/9546","RelatedDescription":"Closed issue \"How to scroll div automatically with textarea in Vue? How to get an element properly?\" (#9546)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"414339555","IsPullRequest":false,"CreatedAt":"2019-02-25T22:34:12","Actor":"olavoasantos","Number":"2626","RawContent":null,"Title":"Convert RouterLink to functional component","State":"closed","Body":"### What problem does this feature solve?\r\nAs this is a simple component which doesn't use state and can be used in several places on the application, the conversion to a functional component could generate performance improvements for the application.\r\n\r\n### What does the proposed API look like?\r\nThe RouterLink component API would not change. The conversion can easily be done by modifying the `./src/components/link.js` component to:\r\n\r\n```js\r\nexport default {\r\n  name: 'RouterLink',\r\n  props: { /**...*/ },\r\n  functional: true,\r\n  render (h, { parent, props, children }) {\r\n    const router = parent.$router\r\n    const current = parent.$route\r\n    const { location, route, href } = router.resolve(props.to, current, props.append)\r\n\r\n    const classes = {}\r\n    const globalActiveClass = router.options.linkActiveClass\r\n    const globalExactActiveClass = router.options.linkExactActiveClass\r\n\r\n    const activeClassFallback = globalActiveClass == null\r\n      ? 'router-link-active'\r\n      : globalActiveClass\r\n    const exactActiveClassFallback = globalExactActiveClass == null\r\n      ? 'router-link-exact-active'\r\n      : globalExactActiveClass\r\n    const activeClass = props.activeClass == null\r\n      ? activeClassFallback\r\n      : props.activeClass\r\n    const exactActiveClass = props.exactActiveClass == null\r\n      ? exactActiveClassFallback\r\n      : props.exactActiveClass\r\n    const compareTarget = location.path\r\n      ? createRoute(null, location, null, router)\r\n      : route\r\n\r\n    classes[exactActiveClass] = isSameRoute(current, compareTarget)\r\n    classes[activeClass] = props.exact\r\n      ? classes[exactActiveClass]\r\n      : isIncludedRoute(current, compareTarget)\r\n\r\n    const handler = e => {\r\n      if (guardEvent(e)) {\r\n        if (props.replace) {\r\n          router.replace(location)\r\n        } else {\r\n          router.push(location)\r\n        }\r\n      }\r\n    }\r\n\r\n    const on = { click: guardEvent }\r\n    if (Array.isArray(props.event)) {\r\n      props.event.forEach(e => { on[e] = handler })\r\n    } else {\r\n      on[props.event] = handler\r\n    }\r\n\r\n    const data = {\r\n      class: classes\r\n    }\r\n\r\n    if (props.tag === 'a') {\r\n      data.on = on\r\n      data.attrs = { href }\r\n    } else {\r\n      const a = findAnchor(children)\r\n      if (a) {\r\n        a.isStatic = false\r\n        const aData = a.data = extend({}, a.data)\r\n        aData.on = on\r\n        const aAttrs = a.data.attrs = extend({}, a.data.attrs)\r\n        aAttrs.href = href\r\n      } else {\r\n        data.on = on\r\n      }\r\n    }\r\n\r\n    return h(props.tag, data, children)\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2626","RelatedDescription":"Closed issue \"Convert RouterLink to functional component\" (#2626)"},{"Id":"413996035","IsPullRequest":true,"CreatedAt":"2019-02-25T08:57:22","Actor":"gekowa","Number":"2625","RawContent":null,"Title":"修正大小写","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2625","RelatedDescription":"Open PR \"修正大小写\" (#2625)"},{"Id":"413413328","IsPullRequest":true,"CreatedAt":"2019-02-22T19:52:35","Actor":"delenamalan","Number":"2623","RawContent":null,"Title":"docs: Fix small grammatical error in redirect-and-alias","State":"closed","Body":"\"A redirect means when the user visits `/a`, **and** URL will be replaced by `/b`\" so I replace the **and** with **the**.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2623","RelatedDescription":"Closed or merged PR \"docs: Fix small grammatical error in redirect-and-alias\" (#2623)"},{"Id":"413417885","IsPullRequest":false,"CreatedAt":"2019-02-22T14:04:51","Actor":"nirmalraghavan","Number":"2624","RawContent":null,"Title":"Not able to update query parameter from navigation guard","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nr0m1vw7/](https://jsfiddle.net/nr0m1vw7/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nInside `beforeEnter` try to modify query parameters by passing `next({ query: {'my-param': 'new-value'} })`\r\n\r\n### What is expected?\r\nQuery parameter will be updated with the new value and the URL will also update.\r\n\r\n### What is actually happening?\r\nURL still having the same old value for `my-param`.\r\n\r\n---\r\nEven though the query parameter value is not updated in the URL, `this.$route.query['my-param']` value is updated with the new value.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2624","RelatedDescription":"Open issue \"Not able to update query parameter from navigation guard\" (#2624)"},{"Id":"412225670","IsPullRequest":false,"CreatedAt":"2019-02-22T13:37:10","Actor":"iGarym","Number":"2617","RawContent":null,"Title":"Reserve optional dynamic parameters?","State":"closed","Body":"### What problem does this feature solve?\r\nrepo: [jsfiddle](https://jsfiddle.net/zcgj5Lh4/)\r\n\r\nWhen using `router-link` to navigate, the optional dynamic parameter `moduleId` is missing. In order to retain the parameters, we must manually provide the parameter or use router hooks. Non-optional parameters do not have this problem. Can we reserve the optional parameters when navigate?\r\n\r\n******\r\n\r\n使用 `router-link` 跳转时，可选的动态参数 `moduleId` 丢失了。为了保留参数，需要手动传参或者在路由钩子里处理。非可选的参数不会有这个问题，所以能否在跳转的时候保留可选的参数呢？\r\n\r\n### What does the proposed API look like?\r\nNo new api.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2617","RelatedDescription":"Closed issue \"Reserve optional dynamic parameters?\" (#2617)"},{"Id":"413249173","IsPullRequest":false,"CreatedAt":"2019-02-22T13:25:21","Actor":"hzsrc","Number":"2622","RawContent":null,"Title":"The addRoutes  method need to suport  adding dynamic routes as children to an existing route","State":"closed","Body":"### What problem does this feature solve?\r\nThe addRoutes method currently only suport add new routes to root routes.  But if can not add routes as children to an existing route.\r\n\r\n\r\n### What does the proposed API look like?\r\nrouter.addRoutes(routes: Array<RouteConfig>, parent ? : Location)\r\n\r\nLike:\r\nrouter.addRoutes([...childRoutes],  '/main')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2622","RelatedDescription":"Closed issue \"The addRoutes  method need to suport  adding dynamic routes as children to an existing route\" (#2622)"},{"Id":"413135990","IsPullRequest":true,"CreatedAt":"2019-02-21T21:39:55","Actor":"pRizz","Number":"2621","RawContent":null,"Title":"chore: ignore WebStorm IDE files","State":"open","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2621","RelatedDescription":"Open PR \"chore: ignore WebStorm IDE files\" (#2621)"},{"Id":"413134137","IsPullRequest":true,"CreatedAt":"2019-02-21T21:34:52","Actor":"pRizz","Number":"2620","RawContent":null,"Title":"docs: simplify installing from GitHub","State":"open","Body":"Simplify the docs for installing dev from GutHub","Url":"https://github.com/vuejs/vue-router/pull/2620","RelatedDescription":"Open PR \"docs: simplify installing from GitHub\" (#2620)"},{"Id":"412828239","IsPullRequest":false,"CreatedAt":"2019-02-21T09:33:13","Actor":"FF128","Number":"2619","RawContent":null,"Title":"Allow nested routes in middleware","State":"closed","Body":"Hello, i want to allow these paths with parameter. But this redirected me to login (next(\"/login\"))\r\n\r\n![image](https://user-images.githubusercontent.com/46515242/53158233-1ada7300-35fe-11e9-9477-36427a727cec.png)\r\n\r\n![image](https://user-images.githubusercontent.com/46515242/53158282-32196080-35fe-11e9-8bfa-06e51b4c1c88.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2619","RelatedDescription":"Closed issue \"Allow nested routes in middleware\" (#2619)"},{"Id":"412230262","IsPullRequest":false,"CreatedAt":"2019-02-20T03:40:22","Actor":"esappear","Number":"2618","RawContent":null,"Title":"Memory leak when calling this.$router.replace in the created hook","State":"closed","Body":"### Version: 3.0.2\r\n### Code \r\n```vue\r\n<template>\r\n</template>\r\n<script>\r\nexport default {\r\n  created() {\r\n    this.$router.replace({\r\n      name: 'bro'\r\n    });\r\n  }\r\n}\r\n</script>\r\n```\r\nAs the title says, when calling `this.$router.replace` in the created hook, it leads to memory leak.\r\nWhen debugging on poll method in `vue-router.common.js` as below, poll methods calls in an infinite loop.\r\n```js\r\nfunction poll (\r\n  cb, // somehow flow cannot infer this is a function\r\n  instances,\r\n  key,\r\n  isValid\r\n) {\r\n  if (\r\n    instances[key] &&\r\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\r\n  ) {\r\n    cb(instances[key]);\r\n  } else if (isValid()) {\r\n    setTimeout(function () {\r\n      console.log('poll: ', instances, key, isValid());\r\n      poll(cb, instances, key, isValid);\r\n    }, 16);\r\n  }\r\n}\r\n```\r\nThough I should not call `this.$router.replace` in created hook on SSR, I wonder why.","Url":"https://github.com/vuejs/vue-router/issues/2618","RelatedDescription":"Closed issue \"Memory leak when calling this.$router.replace in the created hook\" (#2618)"},{"Id":"411279663","IsPullRequest":false,"CreatedAt":"2019-02-18T09:04:18","Actor":"wangjingf","Number":"2616","RawContent":null,"Title":"dynamic routing support","State":"closed","Body":"### What problem does this feature solve?\r\ndynamic routing like react-router-v4\r\n\r\n### What does the proposed API look like?\r\nAre there plans to upgrade vue-router to dynamic routing (like react-router-v4)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2616","RelatedDescription":"Closed issue \"dynamic routing support\" (#2616)"},{"Id":"409708492","IsPullRequest":false,"CreatedAt":"2019-02-13T09:50:24","Actor":"hwlv","Number":"2615","RawContent":null,"Title":"https://router.vuejs.org/   can't open ","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/ ](https://router.vuejs.org/ )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://router.vuejs.org/   can't open \r\n\r\n### What is expected?\r\nWeb page display normally\r\n\r\n### What is actually happening?\r\nWeb page display exception\r\n\r\n---\r\nPlease repair it as soon as possible.  It's seriously\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2615","RelatedDescription":"Closed issue \"https://router.vuejs.org/   can't open \" (#2615)"},{"Id":"409503817","IsPullRequest":false,"CreatedAt":"2019-02-13T09:40:46","Actor":"smellyshovel","Number":"2614","RawContent":null,"Title":"beforeRouteUpdate fires when it must not if is used with cyrillic symbols","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/rmnq4605oo](https://codesandbox.io/s/rmnq4605oo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Add the following to the path (right in the browser preview): \"fm/русский\"\r\n\r\n    The address bar should now look something like this: `https://rmnq4605oo.codesandbox.io/fm/русский`\r\n\r\n1. Click enter so to pretend that it's router's initial state (without any previous navigation via vue-router (because the page actually gets reloaded and vue-router isn't involved in this))\r\n\r\n1. Open the console (F12)\r\n\r\n1. Double-click the \"русский\" word\r\n\r\n### What is expected?\r\nThe `beforeRouteUpdate` must not be fired.\r\n\r\n### What is actually happening?\r\nIt actually gets fired. As far as I understand it happens because \"русский\" gets substituted with \"%D1%80%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9\" as you can see from the console output.\r\n\r\n---\r\nDon't know if it's only due to cyrillic symbols, but I'm pretty sure that it's expected for all the non-ascii charecters.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2614","RelatedDescription":"Closed issue \"beforeRouteUpdate fires when it must not if is used with cyrillic symbols\" (#2614)"},{"Id":"409272152","IsPullRequest":false,"CreatedAt":"2019-02-12T12:48:28","Actor":"GHakopian","Number":"2613","RawContent":null,"Title":"// makes route invalid","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/jzr5nojn39](https://codesandbox.io/s/jzr5nojn39)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen in history mode with a basePath setup,\r\nnavigating to server:123/basePath/subPath navigates to the right component\r\nbut if you add an extra / after server:234, \r\nnavigating to server:123//basePath/subPath returns 404 \r\n\r\n\r\n### What is expected?\r\nnavigating to server//basePath/subPathnavigates to configured component\r\n\r\n### What is actually happening?\r\nnavigating to server:123//basePath/subPath returns 404 \r\n\r\n---\r\nIs this a bug? i think the extra / should not change the end route, this is an issue in my case as my legacy backend application can redirect with an extra / at random. if this is intended can we then add something like \"*/basePath\" to only consider the path starting from basePath.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2613","RelatedDescription":"Closed issue \"// makes route invalid\" (#2613)"},{"Id":"408907359","IsPullRequest":false,"CreatedAt":"2019-02-11T18:04:42","Actor":"wadetandy","Number":"2612","RawContent":null,"Title":"v-if/else Causes incorrect router-link to be followed when conditional changes","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/q3mp33l879](https://codesandbox.io/s/q3mp33l879)\r\n\r\n### Steps to reproduce\r\n- Observe the navigation has links for \"Register\" and \"Sign In\"\r\n- Click the \"Sign In\" link\r\n- Click \"click here to sign in\" on the page\r\n- Observe the navigation will change to a \"signed in\" state with \"User Profile\" and \"Sign Out\" links\r\n- Click the \"User Profile\" or \"Sign Out\" links\r\n\r\n### What is expected?\r\nIf clicking \"User Profile\", the page should change to `/profile` and have the text \"hello user\"\r\nIf clicking \"Sign Out\", the page should change to `/sign_out` and be a sign out placeholder page\r\n\r\n### What is actually happening?\r\nIf clicking \"User Profile\", the page changes to `/register` and loads the corresponding component\r\nIf clicking \"Sign Out\", the page should change to `/sign_in` and loads the corresponding component\r\n\r\nIt seems the navigation link elements are not being replaced when the conditional flips, but instead the inner html is being switched out.  This causes the original click handlers to be preserved on each link, which results in the \"signed in\" links firing the click handlers of the element that corresponded to its position in the list for the \"signed out\" path.\r\n\r\n---\r\nThis may be a core vue runtime bug, but since I have run into the issue only with `router-link` I opened it here.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2612","RelatedDescription":"Open issue \"v-if/else Causes incorrect router-link to be followed when conditional changes\" (#2612)"},{"Id":"408448967","IsPullRequest":false,"CreatedAt":"2019-02-09T17:00:16","Actor":"stevenadams","Number":"2611","RawContent":null,"Title":"Support for activeStyle and exactActiveStyle","State":"open","Body":"### What problem does this feature solve?\r\nComing from React and using React Router, there is support for activeStyle property. Like activeClass but a style object of styles to apply to an element when active. This helps for things like theming where the theme color is plucked from store and needs to be applied to an element when active.\r\n\r\n### What does the proposed API look like?\r\ntakes a prop activeStyle and exactActiveStyle, both type object, works identically to activeClass and exactActiveClass\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2611","RelatedDescription":"Open issue \"Support for activeStyle and exactActiveStyle\" (#2611)"},{"Id":"408321425","IsPullRequest":false,"CreatedAt":"2019-02-08T21:31:14","Actor":"CarlosOnline","Number":"2610","RawContent":null,"Title":"Dynamic route doesn't work if route parameter contains a dot followed by text.","State":"closed","Body":"### Version\r\n2.5.1\r\n\r\n### Reproduction link\r\n[https://github.com/CarlosOnline/VueRouterBug.git](https://github.com/CarlosOnline/VueRouterBug.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with dynamic route parameter **:lab**\r\n\r\n* Start app\r\n* Navigate to MyView/**Foo** which works\r\n* Navigate to MyVew/**Number.1234** does not work\r\n\r\n\r\n\r\n```\r\n{\r\n    path: '/MyView/:lab',\r\n    component: MyView,\r\n    display: 'MyView',\r\n    meta: { title: 'MyView' }\r\n},\r\n```\r\n\r\n\r\n### What is expected?\r\nNavigate to route with dynamic parameter when no \r\n\r\n### What is actually happening?\r\nRoute is not found\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2610","RelatedDescription":"Closed issue \"Dynamic route doesn't work if route parameter contains a dot followed by text.\" (#2610)"},{"Id":"408298160","IsPullRequest":true,"CreatedAt":"2019-02-08T19:46:53","Actor":"lyonsbp","Number":"2609","RawContent":null,"Title":"Add example showing how to get HTML5 history mode working with Flask.","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2609","RelatedDescription":"Open PR \"Add example showing how to get HTML5 history mode working with Flask.\" (#2609)"},{"Id":"408267010","IsPullRequest":false,"CreatedAt":"2019-02-08T19:10:04","Actor":"jbmikk","Number":"2608","RawContent":null,"Title":"Improve function mode props with route-view attributes","State":"closed","Body":"### What problem does this feature solve?\r\nWhen passing props to the `router-view` all routed components are forced to implement the same interface if they want to use the data provided by the `router-view`.\r\n\r\nWe usually use the props as a way of avoiding coupling the components to the router. The components simply receive the props and they are not aware they come from the URL.\r\n\r\nI think it would be useful if we could decouple the components from the router-view, just the way we decouple them from the URL.\r\nI think being able to map the router-view attributes to the desired component props is more appropriate and lets our components expose the interface they need to expose, rather than the interface imposed by the router-view.\r\n\r\nI think the right place for solving this problem is the route's function mode props.\r\n\r\n### What does the proposed API look like?\r\nThe router view passes down a couple of parameters as usual:\r\n\r\n    <router-view :param1=\"value1\" :param2=\"value2\"></router-view>\r\n\r\nThe function maps the props both from the route's URL and also the `router-view` attributes.\r\nIt can also resolve conflict names between URL parameters and view parameters and determine which parameter is more important in each case.\r\n\r\n    {\r\n      path: '/test',\r\n      component: Test,\r\n      props: (route, view) => {\r\n        return {\r\n          query: route.query.q\r\n          paramA: view.attrs.param1,\r\n          paramB: view.attrs.param2 || route.query.param2\r\n        }\r\n      }\r\n    } \r\n\r\nI have done some tests with the router's code and it seems to work fine.\r\n\r\nI would like to have some feedback from the community. It is a fairly simple change. We should make sure this doesn't have any unwanted side effects, it's backwards compatible and there isn't a better way to do it.\r\n\r\nHere's a branch with a test I made and it worked for me: https://github.com/jbmikk/vue-router/commits/view-parameter-for-props\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2608","RelatedDescription":"Closed issue \"Improve function mode props with route-view attributes\" (#2608)"},{"Id":"408176071","IsPullRequest":false,"CreatedAt":"2019-02-08T14:30:15","Actor":"rocka","Number":"2607","RawContent":null,"Title":"abstract mode's router.back() was aborted when there are 2 same routes in history stack","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Rocka/bhu5vkn8/3/](https://jsfiddle.net/Rocka/bhu5vkn8/3/)\r\n\r\n### Steps to reproduce\r\n1. Click `10. artist`\r\n2. Hit button `togglePlayer`\r\n3. Click `10. artist`\r\n4. Hit button `back` 2 times\r\n\r\n### What is expected?\r\nroute back to `/search`\r\n\r\n### What is actually happening?\r\nnothing happend, route and route-view do not change\r\n\r\n---\r\n'cause I didn't figure out how to determine wether the route is going forward or backword, I decided to use `abstract` mode and traverse the router stack to find out which direction the route is going, then hit into this bug. The demo works fine if change router's mode to `hash` or `history`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2607","RelatedDescription":"Open issue \"abstract mode's router.back() was aborted when there are 2 same routes in history stack\" (#2607)"},{"Id":"404807174","IsPullRequest":true,"CreatedAt":"2019-02-08T07:05:06","Actor":"kazupon","Number":"2602","RawContent":null,"Title":"update ja docs","State":"closed","Body":"ping @ktsn \r\nCould you review it please? 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2602","RelatedDescription":"Closed or merged PR \"update ja docs\" (#2602)"},{"Id":"407467218","IsPullRequest":false,"CreatedAt":"2019-02-06T22:49:21","Actor":"ronald-d-rogers","Number":"2606","RawContent":null,"Title":"SSR memory leak in poll method","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/](https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake `router-view` appearance conditional based on some variable (or simply have it not appear):\r\n```html\r\n<div id=\"app\">\r\n  <div v-if=\"condition\">\r\n    <router-view />\r\n  </div>\r\n</div>\r\n```\r\n\r\nEnsure that the component that matches the route has a `beforeRouteEnter` guard, where a function is passed to the `next(...)` method (e.g. `next(vm => {}`):\r\n```es6\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    // Poll happens only if you pass in a function to next(...)\r\n    next(vm => {})\r\n  }\r\n}\r\n```\r\n\r\nVisit that route.\r\n```sh\r\ncurl http://localhost:8080/route\r\n```\r\n\r\nA poll will happen infinitely until `router-view` is created.\r\n\r\nIn a typical SSR application where an app is created per request, it will never be created. \r\nThe end result is a memory leak with an event loop filled with poll's every 16ms.\r\n\r\nIn the reproduction JS Fiddle, a leak occurs every time you press the `SSR Request` button.\r\nIf you set `dontLeak` to true, the leak stops.\r\n\r\nThe leak can be verified in the JS Fiddle by clicking on the `SSR Request` button a few times (say 20 times), opening Chrome Developer Tools, going to the Performance tab, and in the recording looking at the contents of \"Frame\".\r\n\r\n![capture](https://user-images.githubusercontent.com/4047399/52432208-e338da80-2ad7-11e9-9632-7e56eb414e3b.JPG)\r\n\r\nHere is an example repo as well:\r\nhttps://github.com/ronald-d-rogers/vue-router-ssr-memory-leak\r\n\r\n### What is expected?\r\nA new poll does not recurse infinitely for every SSR request.\r\n\r\n### What is actually happening?\r\nA new poll recurses infinitely for every SSR request.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2606","RelatedDescription":"Open issue \"SSR memory leak in poll method\" (#2606)"},{"Id":"406924907","IsPullRequest":false,"CreatedAt":"2019-02-05T21:14:03","Actor":"soyersoyer","Number":"2605","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include null","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/essentials/navigation.html](https://router.vuejs.org/guide/essentials/navigation.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as null. E.g.\r\n\r\n```json\r\n{\r\n  \"foo\": null\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work.\r\nThe url should be ?foo.\r\n\r\n### What is actually happening?\r\nIt works, but with an error:\r\n\r\nType '{ foo: null; }' is not assignable to type 'Dictionary<string | string[]>'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2605","RelatedDescription":"Closed issue \"Typescript: `Location` interface typing for query should include null\" (#2605)"},{"Id":"406758040","IsPullRequest":false,"CreatedAt":"2019-02-05T12:26:27","Actor":"pikax","Number":"2604","RawContent":null,"Title":"Passing new params to the current route when props=true, doesn't update router-view","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k50j5wn8or](https://codesandbox.io/s/k50j5wn8or)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- set mode to history\r\n- Add a route with `props: true` \r\n- Add props to that route component\r\n- App.vue beforeMount, add a `router.replace` or `router.push` with a the route `name` and `params` object.\r\n- If the route path is the same as the current route, it won't update the route\r\n\r\n### What is expected?\r\nUpdating the component props down based on params\r\n\r\n### What is actually happening?\r\nroute component defaults props\r\n\r\n---\r\nNot sure if this is the expected behaviour, even using ` <router-view :key=\"$route.fullPath\"></router-view>` doesn't do much because of the `params` don't affect the path.\r\n\r\nEncounter this when sending the app to `Error` page with custom props but when I refreshed was getting the expected values or times no props being passed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2604","RelatedDescription":"Closed issue \"Passing new params to the current route when props=true, doesn't update router-view\" (#2604)"},{"Id":"405301212","IsPullRequest":false,"CreatedAt":"2019-01-31T15:34:59","Actor":"WisdomEye","Number":"2603","RawContent":null,"Title":"v-if mutating router-link to","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8](https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust add an li using v-if, and then try change the value of variable, in the example bellow update start with value 0, I can add a button to increment or decrement it, and get error about mutating :for from router-link.\r\n\r\n\t<li v-if=\"update\" id=\"dashboard-menu-top-updates\">\r\n\t\t<router-link :to=\"{ name: 'Update' }\" :exact=\"$route.name === 'Update'\">Atualizações</router-link>\r\n\t</li>\r\n\r\n### What is expected?\r\nThe expected is render or remove the element without errors about mutating \":to\" from router-link\r\n\r\n### What is actually happening?\r\nThe li is correctly rendered as wished, but make a lot of erros on console about mutating \":to\" from router-link.\r\n\r\nError:\r\n\r\n[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: \"to\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2603","RelatedDescription":"Closed issue \"v-if mutating router-link to\" (#2603)"},{"Id":"404175057","IsPullRequest":false,"CreatedAt":"2019-01-29T09:25:39","Actor":"avele","Number":"2601","RawContent":null,"Title":"Keep previous component until next mounted","State":"closed","Body":"### What problem does this feature solve?\r\nI want the ability to change the router-view component only when the next one is mounted. For instance, the next router-view component could be mounted separately with ```display: none```, and after the \"mounted\" event I would make the new component visible and destroy the previous component.\r\n\r\nCurrently I can only show a spinner or an overlay while the new component is loading, but I can't keep the previous component on the screen.\r\n\r\nMy usecase is similar to github repository tabs\r\n![github tabs](https://user-images.githubusercontent.com/34437766/51894559-8f384280-23c1-11e9-9637-3fc10ae17fa4.gif)\r\nI want to mimic the standard, non-SPA browser behavior.\r\n\r\n### What does the proposed API look like?\r\nA prop for ```<router-view>,``` perhaps \"preload\" or \"changeOnMounted\".\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2601","RelatedDescription":"Closed issue \"Keep previous component until next mounted\" (#2601)"},{"Id":"403528797","IsPullRequest":true,"CreatedAt":"2019-01-27T15:14:57","Actor":"Alex-Sokolov","Number":"2599","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/c3e587238a4e6d4e650e762b3442b286fcb9fe36#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2599","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2599)"},{"Id":"403531058","IsPullRequest":false,"CreatedAt":"2019-01-27T11:32:03","Actor":"rominf","Number":"2600","RawContent":null,"Title":"beforeEnter next callback is not called","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2ykhv8jq/](https://jsfiddle.net/2ykhv8jq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with `beforeEnter` handler which calls `next` with a callback function.\r\n\r\nIn jsfiddle.net click the button and check the console.\r\n\r\n### What is expected?\r\n\"Am i called\" and the `vm` should be present. \r\n\r\n### What is actually happening?\r\nLine with \"Am i called\" is not present.\r\n\r\n---\r\nCode borrowed from https://github.com/vuejs/vue-router/issues/737#issuecomment-446565958\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2600","RelatedDescription":"Closed issue \"beforeEnter next callback is not called\" (#2600)"},{"Id":"402747012","IsPullRequest":true,"CreatedAt":"2019-01-24T15:02:10","Actor":"jcoyne","Number":"2598","RawContent":null,"Title":"Update vue-router version to match package.json","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2598","RelatedDescription":"Closed or merged PR \"Update vue-router version to match package.json\" (#2598)"},{"Id":"402626070","IsPullRequest":false,"CreatedAt":"2019-01-24T09:56:40","Actor":"cybermerlin","Number":"2597","RawContent":null,"Title":"hey guys, I have trouble with dynamic imports in routes","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509](https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\npls, watch on the screenshot\r\n\r\n### What is expected?\r\ngood work\r\n\r\n### What is actually happening?\r\nnot work\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2597","RelatedDescription":"Closed issue \"hey guys, I have trouble with dynamic imports in routes\" (#2597)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-02-23T15:30:03","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"closed","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Closed issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"410330210","IsPullRequest":false,"CreatedAt":"2019-02-23T15:17:55","Actor":"djam90","Number":"1509","RawContent":null,"Title":"Unit tests do not run when importing router into store and store into router","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/djam90/vuex-vue-router-issue](https://github.com/djam90/vuex-vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun `npm run test:unit` and see the failure. To get the tests to run again, do not import the store into the router and the router into the store.\r\n\r\n### What is expected?\r\nThe tests should run fine and circular imports should work. They *DO* work in the browser just not in Mocha testing environment. \r\n\r\n### What is actually happening?\r\nError as follows:\r\n\r\n```\r\nTypeError: Cannot read property 'getters' of undefined\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:261:1\r\n    at Array.forEach (<anonymous>)\r\n    at assertRawModule (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:260:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:186:1)\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:200:1\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1\r\n    at Array.forEach (<anonymous>)\r\n    at forEachValue (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:199:1)\r\n    at new ModuleCollection (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:160:1)\r\n    at new Store (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:311:1)\r\n```\r\n\r\n---\r\nMy VueX store needs to be able to import the router so it can do routing things like navigate to another page.\r\nMy router needs to be able to access state from VueX to determine what to do in a `router.beforeEach` handler.\r\n\r\nI have asked for help on Stack Overflow:\r\nhttps://stackoverflow.com/questions/54691789/unable-to-import-vuex-store-into-router-and-router-into-store-in-mocha-tests\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1509","RelatedDescription":"Closed issue \"Unit tests do not run when importing router into store and store into router\" (#1509)"},{"Id":"413266987","IsPullRequest":true,"CreatedAt":"2019-02-22T06:49:03","Actor":"jennyliang220","Number":"1514","RawContent":null,"Title":"doc: change ECMASCript into ECMAScript","State":"open","Body":"![image](https://user-images.githubusercontent.com/8498677/53224814-fa1f2580-36b0-11e9-8f4c-28f387d6161b.png)\r\n","Url":"https://github.com/vuejs/vuex/pull/1514","RelatedDescription":"Open PR \"doc: change ECMASCript into ECMAScript\" (#1514)"},{"Id":"412632780","IsPullRequest":true,"CreatedAt":"2019-02-21T19:16:28","Actor":"perborgen","Number":"1512","RawContent":null,"Title":"Added Scrimba lessons","State":"closed","Body":"Here are the Scrimba lessons localized and with an `override.styl` file for the styling. Did I do it right?","Url":"https://github.com/vuejs/vuex/pull/1512","RelatedDescription":"Closed or merged PR \"Added Scrimba lessons\" (#1512)"},{"Id":"412637975","IsPullRequest":false,"CreatedAt":"2019-02-20T21:31:16","Actor":"tleeaf","Number":"1513","RawContent":null,"Title":"Naming store state array 'queue' results in one dropped array member","State":"closed","Body":"I named one of my store state members 'queue', which resulted in unexpected behavior, namely that one member of the array would disappear when testing the app in-browser. This occurs independently of any other actions or mutations. I confirmed this by checking the result in vue devtools for chrome, in the vuex tab, and also by adding a v-for that produced simple tags dependent on the data in the 'queue' array.\r\n\r\n`export const store = new Vuex.Store({\r\n  state: {\r\n     queue: [ \r\n      {id: 1333333333}, //one of these members will be dropped \r\n      {id: 1222222222},\r\n      {id: 1111111111}\r\n    ],\r\n    vocabulary: [],\r\n    lessons: [],    \r\n  },\r\n  mutations, actions, getters\r\n})`","Url":"https://github.com/vuejs/vuex/issues/1513","RelatedDescription":"Closed issue \"Naming store state array 'queue' results in one dropped array member\" (#1513)"},{"Id":"409173630","IsPullRequest":false,"CreatedAt":"2019-02-18T18:56:17","Actor":"visualjerk","Number":"1505","RawContent":null,"Title":"Infinite Loop With Error Handler And Vuex","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/z6ww1zp2q4](https://codesandbox.io/s/z6ww1zp2q4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- open browser console\r\n\r\n### What is expected?\r\nNot getting an infinite render loop:\r\n[Vue warn]: You may have an infinite update loop in a component render function.\r\n\r\n### What is actually happening?\r\nGetting an infinite render loop\r\n\r\n---\r\nThis happens when you handle an error that was caused during rendering and try to commit it to the store.\r\n\r\nIt looks like a component that throws an error tries to rerender after the store is updated, even so it doesn't use the store's state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1505","RelatedDescription":"Closed issue \"Infinite Loop With Error Handler And Vuex\" (#1505)"},{"Id":"411557104","IsPullRequest":true,"CreatedAt":"2019-02-18T17:28:27","Actor":"Jinjiang","Number":"1511","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/a6973fa...31e4fbc\r\n/ping @Justineo","Url":"https://github.com/vuejs/vuex/pull/1511","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1511)"},{"Id":"411250556","IsPullRequest":true,"CreatedAt":"2019-02-17T23:34:11","Actor":"brophdawg11","Number":"1510","RawContent":null,"Title":"Add support for namespace functions in mapXXX helpers","State":"open","Body":"This is a stab at adding the functionality requested by https://github.com/vuejs/vuex/issues/863.\r\n\r\nI also noticed that there was another attempt at this in https://github.com/vuejs/vuex/pull/924, but the diff seems to be beyond the scope of just the change.\r\n\r\nUnit tests have been added, but no changes have yet been made to TypeScript types or documentation, etc.","Url":"https://github.com/vuejs/vuex/pull/1510","RelatedDescription":"Open PR \"Add support for namespace functions in mapXXX helpers\" (#1510)"},{"Id":"410145165","IsPullRequest":true,"CreatedAt":"2019-02-14T06:15:56","Actor":"parth67","Number":"1508","RawContent":null,"Title":"Fixed issue#1507 : Memory leak happening while using registerModule/u…","State":"open","Body":"Fixes #1507 \r\n\r\nClosure function was fixed with helper function partial which doesn't retain oldVm in environment.","Url":"https://github.com/vuejs/vuex/pull/1508","RelatedDescription":"Open PR \"Fixed issue#1507 : Memory leak happening while using registerModule/u…\" (#1508)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-02-13T15:23:18","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"closed","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Closed or merged PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-13T15:21:16","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Closed or merged PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"409797501","IsPullRequest":false,"CreatedAt":"2019-02-13T13:09:45","Actor":"skkart","Number":"1507","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mrj8spu0/](https://jsfiddle.net/mrj8spu0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Open the JSFiddle link mentioned as part of this issue.\r\n2. Check and record the heap memory in the browser on initial stage.\r\n3. Click on the \"Register\" button to dynamically register Module B 100 times\r\n4. Now we will see an increase in heap memory on account of registering module 100 times.\r\n5. Click on \"Un-Register\" button to dynamically un-register Module B 100 times\r\n6. Check the heap memory again, at this point will see an jump in memory usage on account of un-registering 100 module. \r\n\r\n### What is expected?\r\nHeap memory generated on step 3 & 5 must be cleared after step 6. (Final stage)\r\n\r\n### What is actually happening?\r\nHeap memory of the browser is not getting cleared.\r\n\r\n---\r\nWe are observing memory leak of Store._vm while using registerModule/unregisterModule extensively.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n\r\noldVm.$destroy(); \r\noldVm = null; // This is the missing code\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52727462-4ac0bf80-2fdb-11e9-91ce-7dd012cba4b5.png)\r\n\r\n[Heap-20190213T220212.heaptimeline.zip](https://github.com/vuejs/vuex/files/2861246/Heap-20190213T220212.heaptimeline.zip)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1507","RelatedDescription":"Open issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1507)"},{"Id":"409792179","IsPullRequest":false,"CreatedAt":"2019-02-13T12:56:14","Actor":"skkart","Number":"1506","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"closed","Body":"We are observing memory leak of Store._vm while using registerModule/unregisterModule.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nI have created an demo link to illustrate the above mentioned problem\r\n[jsFiddle link](https://jsfiddle.net/mrj8spu0/)\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n**_oldVm.$destroy(); \r\noldVm = null;      // This is the missing code_**\r\n```\r\nfunction resetStoreVM (store, state, hot) {\r\n    var oldVm = store._vm;\r\n\r\n    ...\r\n\t...\r\n\r\n    if (oldVm) {\r\n      if (hot) {\r\n        // dispatch changes in all subscribed watchers\r\n        // to force getter re-evaluation for hot reloading.\r\n        store._withCommit(function () {\r\n          oldVm._data.$$state = null;\r\n        });\r\n      }\r\n\r\n      // Existing Code\r\n      Vue.nextTick(function () { return oldVm.$destroy(); });\r\n       \r\n      // The OldVm Object is still in heap even after destroy\r\n      // Appropriate Code\r\n      oldVm.$destroy(); \r\n      oldVm = null;\r\n    }\r\n  }\r\n```\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52712275-1983c780-2fba-11e9-8c67-43b24afe56e1.png)\r\n\r\n[Heap-20190213T172945.heapsnapshot.zip](https://github.com/vuejs/vuex/files/2860354/Heap-20190213T172945.heapsnapshot.zip)\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1506","RelatedDescription":"Closed issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1506)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-02-13T11:24:21","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Closed issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"407854625","IsPullRequest":false,"CreatedAt":"2019-02-13T11:12:36","Actor":"ianwalter","Number":"1504","RawContent":null,"Title":"watch instance method behavior is inconsistent between Vue and Vuex","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/ianwalter/vuex-issue](https://github.com/ianwalter/vuex-issue)\r\n\r\n### Steps to reproduce\r\n1. Register a watcher in a component with a callback function that prints the new data value and old data value\r\n2. Register a watcher on a store instance with a callback function that prints the new data value and old data value\r\n\r\n### What is expected?\r\nThat when both watchers are triggered, both of them print the new data value and the old data value.\r\n\r\n### What is actually happening?\r\nThe component watcher prints the new data value and old data value, while the store watcher only prints the new data value (state) and an empty object (getters, if you haven't defined any). \r\n\r\n---\r\nBefore reading the Vuex documentation more closely, I assumed that this method behaved in the same way as it does in a component. Returning getters to the store watcher callback seems to me like returning computed in the component watcher callback. I think the old state data is more valuable too, especially since it could provide the initial state as the old data, something you can't get in an alternative way (like subscribing to mutations which only gives you the new state as well).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1504","RelatedDescription":"Closed issue \"watch instance method behavior is inconsistent between Vue and Vuex\" (#1504)"},{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-02-10T09:25:00","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"407825529","IsPullRequest":false,"CreatedAt":"2019-02-07T17:59:59","Actor":"ianwalter","Number":"1503","RawContent":null,"Title":"Add a subscribeModule instance method","State":"open","Body":"### What problem does this feature solve?\r\nVuex doesn't provide a way for plugins to be notified when modules are added to the store dynamically through `registerModule`. This means that there can be changes in the state tree that are impossible for plugins to know about through the existing subscription methods like `subscribe` and `subscribeAction`. A common use case would be a plugin that saves the Vuex state to local storage. When a module is added through `registerModule`, the local storage plugin will not be able to store it's initial state to local storage.\r\n\r\n### What does the proposed API look like?\r\n`subscribeModule(handler: Function)`\r\n\r\nSubscribe to `registerModule`/`unregisterModule` events. The handler is called with a module object and a namespace when the module is registered. The module object is null when unregistered:\r\n\r\n```js\r\nstore.subscribeModule((mod, namespace) => {\r\n  if (mod) {\r\n    console.log(mod)\r\n  } else {\r\n    console.log(namespace)\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1503","RelatedDescription":"Open issue \"Add a subscribeModule instance method\" (#1503)"},{"Id":"407229198","IsPullRequest":false,"CreatedAt":"2019-02-06T13:13:41","Actor":"SumNeuron","Number":"1502","RawContent":null,"Title":"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm","State":"open","Body":"### What problem does this feature solve?\r\nVuex modules, in theory, are divorced of their vue components which access them. One could take the module, register it and (re)make components to utilize the vuex module as desired. However, in (perhaps poor) practice, vuex modules and vue components are often made concurrently; namely, the components serve as the api to the store and it is expected that inclusion of the vue components come _with_ the vuex module.\r\n\r\nHowever turning a vuex module and library of sfcs into reusable chunks does not seem to be straight forward.\r\n\r\nThe expected behavior would be using the vue-cli to create a new project with a vuex store.\r\nthe store would be moved to its own directory:\r\n\r\n```\r\nsrc/\r\n-- store/\r\n---- modules/\r\n------ moduleA/\r\n-------- actions.js\r\n-------- state.js\r\n-------- mutations.js\r\n-------- getters.js\r\n-------- store.js \r\n...\r\n```\r\n\r\nAll components under `src/components` (or nested directories) would be exposed so users could import each constitute component\r\nAll modules under `src/store/modules` would be exposed so users could just import the module if desired \r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n# install library\r\nnpm install vuex-vue-sfc-library\r\n\r\n# inside app.vue or some other component\r\n// import the vuex modules and components that access the modules \r\nimport {moduleA, nestedComponentB, conglomerateComponentA} from 'vuex-vue-sfc-library\r\n\r\nexport default {\r\n    components: {\r\n        nestedComponentB, conglomerateComponentA\r\n    },\r\n    created() {\r\n        this.$store.registerModule('moduleA', moduleA)\r\n    }\r\n\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1502","RelatedDescription":"Open issue \"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm\" (#1502)"},{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"},{"Id":"402611473","IsPullRequest":false,"CreatedAt":"2019-01-24T09:20:54","Actor":"super918180","Number":"1492","RawContent":null,"Title":"I can't  export all state from namespace module, I can only export one by one.","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/20025505/51667964-18372e80-1ffc-11e9-92ee-298f979fd8c0.png)\r\nI can't  export all state from namespace module, I can only export one by one.","Url":"https://github.com/vuejs/vuex/issues/1492","RelatedDescription":"Closed issue \"I can't  export all state from namespace module, I can only export one by one.\" (#1492)"},{"Id":"402347190","IsPullRequest":false,"CreatedAt":"2019-01-23T17:22:06","Actor":"GbAlien","Number":"1491","RawContent":null,"Title":"Optional attribute declared as required on typescript declaration","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTest a mutation without payload on typescript\r\n\r\n### What is expected?\r\nTypescript not complain about missing payload\r\n\r\n### What is actually happening?\r\nTypescript complains about missing payload\r\n\r\n---\r\nchange: \r\n\r\nexport type Mutation<S\\> = (state: S, payload: any) => any;\r\n\r\nto:\r\n\r\nexport type Mutation<S\\> = (state: S, payload?: any) => any;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1491","RelatedDescription":"Open issue \"Optional attribute declared as required on typescript declaration\" (#1491)"},{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-26T05:31:11.8930883Z","RunDurationInMilliseconds":3704}