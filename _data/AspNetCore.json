{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-02-12T17:36:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released stable packages for ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/12/announcing-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Two Lesser Known Tools for Local Azure Development","PublishedOn":"2018-02-09T00:01:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you’re developing applications that target Azure services (e.g. Web Apps, Functions, Storage), you’ll want to know about two powerful tools that come with Visual Studio 2017 and the Azure...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/08/two-lesser-known-tools-for-local-azure-development/","RawContent":null},{"Title":"File nesting in Solution Explorer","PublishedOn":"2018-02-08T06:09:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to share with you a new capability in Visual Studio that was a clear ask from you, the community. Visual Studio has been nesting related files in Solution Explorer for a long time now,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/file-nesting-in-solution-explorer/","RawContent":null},{"Title":"Diagnosing Errors on your Cloud Apps","PublishedOn":"2018-02-07T16:00:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most frustrating experiences is when you have your app working on your local machine, but when you publish it it’s inexplicably failing. Fortunately, Visual Studio provides handy features...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/diagnosing-errors-on-your-cloud-apps/","RawContent":null},{"Title":"A new experiment: Browser-based web apps with .NET and Blazor","PublishedOn":"2018-02-06T18:00:53+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today I’m excited to announce a new experimental project from the ASP.NET team called Blazor. Blazor is an experimental web UI framework based on C#, Razor, and HTML that runs in the browser via...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/06/blazor-experimental-project/","RawContent":null},{"Title":"Learn how to do Image Recognition with Cognitive Services and ASP.NET","PublishedOn":"2018-02-05T21:27:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With all the talk about artificial intelligence (AI) and machine learning (ML) doing crazy things, it’s easy to be left wondering, “what are practical ways I can use this today?&#8221; It turns out...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/05/learn-how-to-do-image-recognition-with-cognitive-services-and-asp-net/","RawContent":null},{"Title":"ASP.NET Core 2.1 roadmap","PublishedOn":"2018-02-02T18:00:52+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Five months ago, we shipped ASP.NET Core 2.0 as a foundational release for our high performance, cross-platform web framework for .NET and .NET Core. Since then we have been hard at work to deliver...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/","RawContent":null},{"Title":"Azure Storage for Serverless .NET Apps in Minutes","PublishedOn":"2018-01-25T19:38:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Azure Storage is a quick and effortless way to store data for applications that has high availability, is secure, scales and is redundant. This blog post walks through a simple application that...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/25/azure-storage-for-serverless-net-apps-in-minutes/","RawContent":null},{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7257831341","Type":"IssuesEvent","CreatedAt":"2018-02-17T00:06:59","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2321","RelatedDescription":"Closed issue \"Enable scenario with RSA certificate not being stored in the certificate store.\" (#2321) at aspnet/Home","RelatedBody":"_From @nenadvicentic on Wednesday, December 13, 2017 2:07:26 AM_\r\n\r\nCurrent implementation of `EncryptedXmlDecryptor` is dependent on the Windows certificate store.\r\n\r\nWhile it is possible to specify \"standalone\" certificate for encryption for `CertificateXmlEncryptor` via constructor accepting `X509Certificate2`, `EncryptedXmlDecryptor` will search for the same certificate in the Windows certificate store based on it's thumbnail and crush.\r\n\r\nAll that is needed for this is to add additional line in `Decrypt` method of `EncryptedXmlDecryptor`:\r\n\r\n```\r\n            // Perform the decryption and update the document in-place.\r\n            var encryptedXml = new EncryptedXml(xmlDocument);\r\n            encryptedXml.AddKeyNameMapping(x509Certificate2.Thumbprint, x509Certificate2.PrivateKey); // new line\r\n            _decryptor.PerformPreDecryptionSetup(encryptedXml);\r\n            encryptedXml.DecryptDocument();\r\n```\r\n\r\nOnly thing missing would be to pass `X509Certificate2` to decryptor.\r\n\r\nCurrently, to achieve same thing, one has to make completely new implementation of `IXmlEncryptor`, `IXmlDecryptor` and related extension methods for `IDataProtectBuilder` configuration.\r\n\r\n_Copied from original issue: aspnet/DataProtection#290_"},{"Id":"7257826922","Type":"IssuesEvent","CreatedAt":"2018-02-17T00:05:13","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2884","RelatedDescription":"Opened issue \"Support multiple key decryption certificates without X509Store\" (#2884) at aspnet/Home","RelatedBody":"When using the X509Store, you can decrypt an old key encrypted XML key with multiple certificates. \r\n\r\nIn https://github.com/aspnet/DataProtection/pull/299, we added support for decrypting without using the X509Store for one certificate (the one passed to .ProtectKeysWithCertificate()). This doesn't yet support multiple certs though. It wouldn't be too hard to support this.\r\n\r\nUsage:\r\n```c#\r\n.AddDataProtection()\r\n.ProtectKeysWithCertificate(certificate)\r\n.UseKeyDecryptionCertificates(oldCert1, oldCert2, oldCert3)\r\n```"},{"Id":"7257513745","Type":"IssuesEvent","CreatedAt":"2018-02-16T22:22:54","Actor":"Phylum123","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2883","RelatedDescription":"Opened issue \"Self referencing loop error\" (#2883) at aspnet/Home","RelatedBody":"Hey guys, I found an issue with JSON, Razor Pages (Core 2) and EF (Core 2). I know all about self referencing loops and usually it can be solved with configuration. I added configuration and it did not work, I am still getting the error. Below you can see my configuration in \"Startup.cs\":\r\n\r\n`        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n\r\n            services.AddMvc().AddJsonOptions(options =>\r\n            {\r\n                options.SerializerSettings.ContractResolver = new Newtonsoft.Json.Serialization.DefaultContractResolver();\r\n                options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Serialize;\r\n                options.SerializerSettings.PreserveReferencesHandling = PreserveReferencesHandling.Objects;\r\n            });\r\n\r\n            services.AddDbContext<CapitalMarketsRMBSContext>(options =>\r\n                options.UseSqlServer(Configuration.GetConnectionString(\"CapitalMarketsRMBSContext\")));\r\n\r\n            //services.AddDbContext<CapitalMarketsReportsContext>(options =>\r\n            //    options.UseSqlServer(Configuration.GetConnectionString(\"CapitalMarketsReportsContext\")));\r\n\r\n        }`\r\nand when I make this simple call, I get the error:\r\n\r\n`        public void OnGet()\r\n        {\r\n            Pool = _context.Rmbspool.Include(p => p.RmbsCertificateRates).First();\r\n        }`\r\n\r\nHere are both entities involved in the call:\r\n\r\n`    public partial class RmbsPool: EntityBase\r\n    {\r\n        //*** Omitted other properties for clarity ***\r\n\r\n                /// <summary>\r\n        /// Child RmbsCertificateRates where [RMBSCertificateRate].[PoolId] point to this entity (FK_RMBSCertificateRate_RMBSPool)\r\n        /// </summary>\r\n        public virtual System.Collections.Generic.ICollection<RmbsCertificateRate> RmbsCertificateRates { get; set; } // RMBSCertificateRate.FK_RMBSCertificateRate_RMBSPool\r\n\r\n    }\r\n`\r\nAnd the \"Many\" class:\r\n\r\n` [Serializable]  \r\npublic partial class RmbsCertificateRate: EntityBase\r\n    {\r\n        //*** Omitted other properties for clarity ***\r\n               [Required]\r\n        [Display(Name = \"Pool ID\")]\r\n\t\tpublic int PoolId\r\n\t\t{\r\n\t\t\tget { return _poolId; }\r\n\t\t\tset { SetProperty(ref _poolId, value); }\r\n\t\t}\r\n\r\n        /// <summary>\r\n        /// Parent RmbsPool pointed by [RMBSCertificateRate].([PoolId]) FK_RMBSCertificateRate_RMBSPool)\r\n        /// </summary>\r\n        public virtual RmbsPool RmbsPool { get; set; } // FK_RMBSCertificateRate_RMBSPool\r\n    }`"},{"Id":"7257120033","Type":"IssuesEvent","CreatedAt":"2018-02-16T20:43:39","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2874","RelatedDescription":"Closed issue \"Error: Missing Method SetHeadersAndLog in FileResultExecutorBase\" (#2874) at aspnet/Home","RelatedBody":"I had software implemented for streaming files using the [technique described here](http://bit.ly/2BpClDz), and it worked fine with ASP.NET Core 1.0\r\n\r\nIt worked fine with ASP.NET Core 2.0 when first released.  I had to modify the SetHeadersAndLog method to include a null for the third argument that became necessary.\r\n\r\nUpgrading to VS2017 15.5.6  (SDK 2.1.4, Runtime 2.0.5) seems to have broken it.  The source still compiles but yields a runtime exception that indicates that the method is missing.\r\n\r\nI am attaching a VS project that I created from the standard template and used the .NET Standard option instead of .NET Core.\r\n\r\nAny pointers would be appreciated.  I verified that the binaries are what I expect them to be.\r\n\r\n[SetHeadersAndLog.zip](https://github.com/aspnet/Home/files/1718074/SetHeadersAndLog.zip)\r\n"},{"Id":"7256745973","Type":"IssuesEvent","CreatedAt":"2018-02-16T19:17:09","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2877","RelatedDescription":"Closed issue \"Default Model Name\" (#2877) at aspnet/Home","RelatedBody":"What I see quite often in almost if it's in all the Razor Pages, that we need to specify the model using the `@model`\r\n```html\r\n@page\r\n@model ProductModel\r\n```\r\nfor Product.cshtml, and\r\n```html\r\n@page\r\n@model CustomerModel\r\n```\r\nfor Customer.cshtml\r\n\r\nCan we introduce a new option that allow us to set the model by convention `{PageName}Model` unless we need to use a different name"},{"Id":"7255650924","Type":"IssuesEvent","CreatedAt":"2018-02-16T15:32:52","Actor":"wessleym","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2882","RelatedDescription":"Opened issue \"Apparently Random Error: \"Antiforgery token validation failed. The antiforgery cookie token and request token do not match.\"\" (#2882) at aspnet/Home","RelatedBody":"## Background ##\r\nI have a relatively new ASP.NET Core 2 site.  It's running on just one server (Windows Server 2012 R2, IIS 8.5), and I only restart the site once every few days when I upload an update.  About once a day, a user's request fails due to rejection by the anti-forgery system.  These are POST requests, and there's nothing particularly special about them.  I'm including the anti-forgery value in the POST request, and 99% of the time, POST requests work.  But when they don't, the stdout log says, \"Antiforgery token validation failed. The antiforgery cookie token and request token do not match.\"  I've already posted this question on Stack Overflow and the ASP.NET Core forums, and I haven't gotten any useful answers.\r\n\r\n## Errors ##\r\nI've included the relevant portions of the stdout log below.\r\n\r\n    info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n          Request starting HTTP/1.1 POST [domain redacted] application/x-www-form-urlencoded 234\r\n    info: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidateAntiforgeryTokenAuthorizationFilter[1]\r\n          Antiforgery token validation failed. The antiforgery cookie token and request token do not match.\r\n    Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery cookie token and request token do not match.\r\n       at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateTokens(HttpContext httpContext, AntiforgeryTokenSet antiforgeryTokenSet)\r\n       at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.<ValidateRequestAsync>d__9.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidateAntiforgeryTokenAuthorizationFilter.<OnAuthorizationAsync>d__3.MoveNext()\r\n    info: Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker[3]\r\n          Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.AutoValidateAntiforgeryTokenAuthorizationFilter'.\r\n    info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]\r\n          Executing HttpStatusCodeResult, setting HTTP status code 400\r\n    info: Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker[2]\r\n          Executed action /Index in 2.6224ms\r\n    warn: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery[1]\r\n          Antiforgery validation failed with message 'The antiforgery cookie token and request token do not match.'.\r\n\r\nFor requests that result in the above stdout output, `IAntiforgery.IsRequestValidAsync` agrees by returning false.  Notice the error message \"The antiforgery cookie token and request token do not match.\"  Here's a reduced example of a failed POST request and the associated cookie.\r\n\r\n`POST: __RequestVerificationToken=\r\nCfDJ8F9Fs4CqDFpLttT96eZw9WHjWfHO8Yawn35k4Yq3gDK5n1TDJDDiY5o86VQs1_qOVIYBydCizBU4knb7Jmq1-heGhwnMu2KmhUIiAd0xI7Sudv3GX-J0OI6wRfiPL4L1KRs2Pml8dbsDfwemewBqi18`\r\n\r\n`Cookie:  .AspNetCore.Antiforgery.ClRyCRmWApY=CfDJ8F9Fs4CqDFpLttT96eZw9WFtJht41WcNrmgshi2pFGwcxhr0_0hvINQc7Yl9Cbjhv-TiSNXeEctyKborLI49AcjHfWIgOmmKkbjOe7QMn8Z0WZtkQy5JcaBHKEGTu1p-La8JL8pZZqZy02Hrswpkh3I`\r\n\r\nI've also captured this data a few times after the request has failed with a 400 error (using some error handling middleware):\r\n\r\n    AntiforgeryTokenSet tokens = antiforgery.GetTokens(context);\r\n    tokens.CookieToken:  null\r\n    tokens.FormFieldName:  \"__RequestVerificationToken\"\r\n    tokens.HeaderName:  \"RequestVerificationToken\"\r\n    tokens.RequestToken:  \"CfDJ8F9Fs4CqDFpLttT96eZw9WH33jSw5mM8h7RpEd3vGISQTRkx1rfwm-L2lfkvXKMBc-riESmoTo_fnIjeBbRmOo5KuJHr09f8B75sQ9g_djIVeeaGwMw5KE6W1O2-7Vi03fCnwlTv8l-BWGst76Ln-ZQ\"\r\n\r\nSo here are the three strings in the same order as listed above:\r\n\r\n    CfDJ8F9Fs4CqDFpLttT96eZw9WHjWfHO8Yawn35k4Yq3gDK5n1TDJDDiY5o86VQs1_qOVIYBydCizBU4knb7Jmq1-heGhwnMu2KmhUIiAd0xI7Sudv3GX-J0OI6wRfiPL4L1KRs2Pml8dbsDfwemewBqi18\r\n    CfDJ8F9Fs4CqDFpLttT96eZw9WFtJht41WcNrmgshi2pFGwcxhr0_0hvINQc7Yl9Cbjhv-TiSNXeEctyKborLI49AcjHfWIgOmmKkbjOe7QMn8Z0WZtkQy5JcaBHKEGTu1p-La8JL8pZZqZy02Hrswpkh3I\r\n    CfDJ8F9Fs4CqDFpLttT96eZw9WH33jSw5mM8h7RpEd3vGISQTRkx1rfwm-L2lfkvXKMBc-riESmoTo_fnIjeBbRmOo5KuJHr09f8B75sQ9g_djIVeeaGwMw5KE6W1O2-7Vi03fCnwlTv8l-BWGst76Ln-ZQ\r\n\r\nThe POST string and cookie string don't match, but in my experience, even with requests ASP.NET Core considers legitimate, they never do.  But strangely, the POST string and `tokens.RequestToken` doesn't match either.    I would think they should match, although I captured `tokens.RequestTooken` later in the request lifecycle, so maybe that has something to do with it.\r\n\r\n## ASP.NET Core 2 on GitHub ##\r\nI decided to look at the source code of ASP.NET Core 2.  I found this file, especially line 145:\r\n\r\nhttps://github.com/aspnet/Antiforgery/blob/dev/src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgeryTokenGenerator.cs\r\n\r\nThat line gets the message \"The antiforgery cookie token and request token do not match.\" from this file at line 134:\r\n\r\nhttps://github.com/aspnet/Antiforgery/blob/dev/src/Microsoft.AspNetCore.Antiforgery/Resources.resx\r\n\r\nSo I think that's where the message is originating, but I'm still left wondering why this is happening.\r\n\r\n## Question ##\r\nWould someone please help me figure out why these anti-forgery tokens aren't validating?  Is it possible the user's Web browser is mangling the cookie or POST data?  Does anyone have experience in this area or any suggestions?  Thank you."},{"Id":"7254960785","Type":"IssuesEvent","CreatedAt":"2018-02-16T13:13:07","Actor":"FabioMorcillo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2881","RelatedDescription":"Opened issue \".NET Core WebSockets - Token Authorization\" (#2881) at aspnet/Home","RelatedBody":"Hi,\r\n\r\n.NET Core WebSockets support token jwt authentication ? Have example to configure ?\r\n\r\nThank you,"},{"Id":"7252306843","Type":"IssuesEvent","CreatedAt":"2018-02-15T22:28:30","Actor":"dgweldon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2880","RelatedDescription":"Opened issue \"AspNetCore.OpenIdConnect Cookies Not Handled by Full .Net HttpClient\" (#2880) at aspnet/Home","RelatedBody":"I have an interesting problem related to OpenID Connect Authentication in ASP .NET Core.  We have an Identity Server 3 OIDC implementation that uses a client certificate authentication provider.  When migrating to ASP .NET Core, we had no problem integrating with our existing OIDC server.  At least when launched from a browser (Edge, Chrome).\r\n\r\nHowever, we have a small ClickOnce application (using the full .NET framework) that also authenticates and makes calls through the ASP.  It does this by using a HttpClient with a certificate selected by the user.  This ClickOnce application fails during authentication.  The code is pretty simple.\r\n\r\n```\r\nusing (WebRequestHandler certHandler = new WebRequestHandler\r\n{\r\n   CookieContainer = new CookieContainer(),\r\n   ClientCertificateOptions = ClientCertificateOption.Manual,\r\n   UseDefaultCredentials = true,\r\n   AllowAutoRedirect = true\r\n})\r\n{\r\n   // Init\r\n   certHandler.ClientCertificates.Add(certificate);\r\n\r\n   using (HttpClient client = new HttpClient(certHandler) { BaseAddress = baseUri })\r\n   {\r\n      HttpResponseMessage response = a_client.GetAsync(ssoLoginUri).GetAwaiter().GetResult();\r\n      response.EnsureSuccessStatusCode();\r\n\r\n      // Process self submitting form responses as long as needed\r\n      do\r\n      {\r\n         response = ProcessFormAutoSubmit(a_client, response);\r\n      }\r\n      while (response != null);\r\n   }\r\n}\r\n```\r\n\r\nAfter moving to ASP .NET Core, this code no longer works.  The issue is that when MVC redirects to Identity Server, it includes 2 cookies (.ASPNetCore.Correlation.OpenIdConnect and .AspNetCore.OpenIdConnect.Nonce).  Those cookies never make it into my CookieContainer (other cookies from Identity Server are handled fine).  When the signin-oidc callback is made, MVC fails with the error: \"Correlation failed: .AspNetCore.Correlation.OpenIdConnect.9N18bzJ1hcpG5YjRMw_QgUJ_PnapfVx2lBmdvb8Q_zA' cookie not found.\".  Makes sense.  But why is the cookie not added?\r\n\r\nAfter playing around, I was able to get around this by handling each redirect and manually adding any cookies that had a path (both of which the 2 missing cookies had).  The code now looks like this:\r\n\r\n```\r\n...\r\nHttpResponseMessage response = a_client.GetAsync(ssoLoginUri).GetAwaiter().GetResult();\r\nRegex cookiePathRegex = new Regex(@\"path=([^;]*);?\");\r\n\r\ndo\r\n{\r\n   // Ideally we would just use automatic redirects in the HttpClient, but we need to intercept cookies for special processing\r\n   if (response.StatusCode == HttpStatusCode.Redirect)\r\n   {\r\n      Uri requestUri = response.Headers.Location;\r\n      if (!requestUri.IsAbsoluteUri)\r\n      {\r\n         requestUri = UriUtil.Combine(response.RequestMessage.RequestUri.GetLeftPart(UriPartial.Authority), response.Headers.Location.OriginalString);\r\n      }\r\n\r\n      response = a_client.GetAsync(requestUri).GetAwaiter().GetResult();\r\n\r\n      IEnumerable<string> responseCookies = null;\r\n      if (response.Headers.TryGetValues(\"set-cookie\", out responseCookies))\r\n      {\r\n         // Cookies that have a path aren't currently supported with HttpClient\r\n         // Such cookies are used with the new ASP .NET Core OpenId Connect implementation\r\n         // Just manually add these cookies\r\n         foreach (string sCookie in responseCookies)\r\n         {\r\n            Match pathMatch = cookiePathRegex.Match(sCookie);\r\n            if (pathMatch.Success)\r\n            {\r\n               a_webRequestHandler.CookieContainer.SetCookies(\r\n                  UriUtil.Combine(requestUri.GetLeftPart(UriPartial.Authority), pathMatch.Groups[1].Value),\r\n                  cookiePathRegex.Replace(sCookie, String.Empty));\r\n            }\r\n         }\r\n      }\r\n   }\r\n   else\r\n   {\r\n      response.EnsureSuccessStatusCode();\r\n      response = ProcessFormAutoSubmit(a_client, response);\r\n   }\r\n}\r\nwhile (response != null);\r\n```\r\n\r\n\r\nThis works, but seems like a hack.  Any idea why these cookies aren't handled by HttpClient?\r\n\r\nI realize this may not be directly be an ASP .NET Core issue, but wanted to start here since it seems to be related to cookies from ASP .NET Core.\r\n\r\nThanks,\r\n\r\n--David"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7258156122","Type":"IssuesEvent","CreatedAt":"2018-02-17T03:09:32","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/526","RelatedDescription":"Reopened issue \"Fix and unskip flaky test\" (#526) at aspnet/SignalR","RelatedBody":"We're skipping it for now to pass the CI, but we should give it an actual investigation."},{"Id":"7258152891","Type":"PullRequestEvent","CreatedAt":"2018-02-17T03:06:50","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1466","RelatedDescription":"Closed pull request \"Missed a couple workaround places\" (#1466) at aspnet/SignalR","RelatedBody":""},{"Id":"7257948849","Type":"PullRequestEvent","CreatedAt":"2018-02-17T00:59:41","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1466","RelatedDescription":"Opened pull request \"Missed a couple workaround places\" (#1466) at aspnet/SignalR","RelatedBody":""},{"Id":"7257870067","Type":"PullRequestEvent","CreatedAt":"2018-02-17T00:23:16","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1465","RelatedDescription":"Merged pull request \"Somehow the token didn't get passed into the reader\" (#1465) at aspnet/SignalR","RelatedBody":"I'm so sorry @davidfowl I think rebasing and stuff messed it up"},{"Id":"7257868240","Type":"PullRequestEvent","CreatedAt":"2018-02-17T00:22:29","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1465","RelatedDescription":"Opened pull request \"Somehow the token didn't get passed into the reader\" (#1465) at aspnet/SignalR","RelatedBody":"I'm so sorry @davidfowl I think rebasing and stuff messed it up"},{"Id":"7257820184","Type":"IssuesEvent","CreatedAt":"2018-02-17T00:02:29","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/840","RelatedDescription":"Closed issue \"Web Browser Service Worker\" (#840) at aspnet/SignalR","RelatedBody":"Please consider creating a web browser service worker SignalR client example."},{"Id":"7257820134","Type":"IssuesEvent","CreatedAt":"2018-02-17T00:02:28","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/840","RelatedDescription":"Reopened issue \"Web Browser Service Worker\" (#840) at aspnet/SignalR","RelatedBody":"Please consider creating a web browser service worker SignalR client example."},{"Id":"7257819202","Type":"IssuesEvent","CreatedAt":"2018-02-17T00:02:06","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/840","RelatedDescription":"Closed issue \"Web Browser Service Worker\" (#840) at aspnet/SignalR","RelatedBody":"Please consider creating a web browser service worker SignalR client example."},{"Id":"7257818646","Type":"IssuesEvent","CreatedAt":"2018-02-17T00:01:51","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/844","RelatedDescription":"Closed issue \"WebSockets transport does not work on Windows 7 behind IIS\" (#844) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/AspNetCoreModule/issues/135 tracks the ANCM issue."},{"Id":"7257817262","Type":"IssuesEvent","CreatedAt":"2018-02-17T00:01:16","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/846","RelatedDescription":"Closed issue \"Append browser versions to the javascript client\" (#846) at aspnet/SignalR","RelatedBody":""},{"Id":"7257815338","Type":"IssuesEvent","CreatedAt":"2018-02-17T00:00:31","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/835","RelatedDescription":"Closed issue \"SSE transport times out behind IIS due to idle connection\" (#835) at aspnet/SignalR","RelatedBody":"After 120 seconds of no messages through the SSE transport it will be closed by IIS as an idle connection. Adding keep-alives could fix this."},{"Id":"7257809769","Type":"IssuesEvent","CreatedAt":"2018-02-16T23:58:28","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/817","RelatedDescription":"Closed issue \"Ability to open a binary WebSocket connection\" (#817) at aspnet/SignalR","RelatedBody":"Currently, it seems to be impossible to create an `HttpConnection` with a binary WebSocket transport. It defaults to text.\r\n\r\nThe solution in my fork is to make `SetTransferMode()` public so that I can call it before `StartAsync()`."},{"Id":"7257804175","Type":"IssuesEvent","CreatedAt":"2018-02-16T23:56:14","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/771","RelatedDescription":"Closed issue \"Consider porting Jabbr to SignalR Core\" (#771) at aspnet/SignalR","RelatedBody":"One attempt was here: https://github.com/MachUpskillingFY17/JabbR-Core "},{"Id":"7257797864","Type":"IssuesEvent","CreatedAt":"2018-02-16T23:53:48","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/748","RelatedDescription":"Closed issue \"[WebSocket Client] When connection is closed during SendAsync, consider throwing a more descriptive exception\" (#748) at aspnet/SignalR","RelatedBody":"We had a flaky test that threw OperationCancelledException occasionally, and it revealed a case where a user may be confused. The scenario was the following\r\n\r\n1. WebSocket client sends to server, completes the send but the thread is paused BEFORE the SendAsync call in `WebSocket` returns.\r\n2. Server, in response to the message, closes the Socket\r\n3. The transport wakes up and aborts the WebSocket connection, triggering the cancellation token that the transport gave to `SendAsync`\r\n4. The WebSocket client wakes up, sees the cancelled token and throws `OperationCancelledException`.\r\n\r\nThe result is that the user sees an `OperationCancelledException` but never actually requested Cancellation. In my mind, `OperationCancelledException` is specifically for cases where the user requested cancellation. We should consider catching the exception in this case and throwing another exception that is more specific, indicating that the transport was closed by the server while attempting to send a message.\r\n\r\n/cc @BrennanConroy @moozzyk \r\n\r\nDefinitely not a priority for alpha."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7257891735","Type":"PullRequestEvent","CreatedAt":"2018-02-17T00:32:36","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7149","RelatedDescription":"Closed pull request \"HtmlHelper.DisplayTextFor uses DisplayAttribute of Enums.\" (#7149) at aspnet/Mvc","RelatedBody":"HtmlHelper.DisplayTextFor uses DisplayAttribute for Enum values.\r\n- Special case added for when value is Enum in file ModelExplorerExtensions.cs based off suggestions in original issue filing.\r\n- Tests added for enum with and without DisplayAttribute.\r\n\r\nAddresses #7033 "},{"Id":"7257883905","Type":"PullRequestEvent","CreatedAt":"2018-02-17T00:29:21","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7388","RelatedDescription":"Opened pull request \"Dougbu/mistakenot/display enums\" (#7388) at aspnet/Mvc","RelatedBody":"Continue on from #7149 with a few more tests\r\n- includes @mistakenot's original #7033 though squashed and rebased"},{"Id":"7257848377","Type":"PullRequestEvent","CreatedAt":"2018-02-17T00:13:56","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7384","RelatedDescription":"Merged pull request \"FYI Only, ignore\" (#7384) at aspnet/Mvc","RelatedBody":"-  Re-enable \"Move to RazorProjectEngine.\"\r\n- This was initially reverted due to insufficient packages for local builds.\r\n\r\nI'll merge this once we have a successful coherence build with latest Razor."},{"Id":"7257691466","Type":"IssuesEvent","CreatedAt":"2018-02-16T23:14:08","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7360","RelatedDescription":"Reopened issue \"`[Required]` rarely detects errors in top-level nodes\" (#7360) at aspnet/Mvc","RelatedBody":"`[Required]` on top-level nodes works with `string` and few other types. This goes beyond `ValueType`s, the usual `[Required]` / `[BindRequired]` discussion point. (That part's inherent in `[Required]`'s semantics.) `[Required]` also does not catch the expected errors on pretty much any collection or complex type if it's a top-level node.\r\n\r\nConsider the following action and a `<form>` containing no `<input/>` fields:\r\n``` c#\r\n[HttpPost(\"/Ints\")]\r\npublic IActionResult Ints([Required] int[] ints)\r\n{\r\n    // ...\r\n}\r\n```\r\nIn this scenario, `ModelState.IsValid` will always be `true`.\r\n\r\nBecause `ints` is an action parameter, model binding considers it a top-level node and provides a non-`null` default value. In this case, the default value is an empty array. Importantly, this default is chosen *before* validation. So `[Required]` is passed the empty array and sees nothing amiss.\r\n\r\nOne possibility would be to move our `IsTopLevelNode` special cases out of model binding and into `ParameterBinder` and other model binding callers. This would allow providing default values after validation."},{"Id":"7257394502","Type":"PullRequestEvent","CreatedAt":"2018-02-16T21:51:30","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7376","RelatedDescription":"Closed pull request \"Update cli and package versions\" (#7376) at aspnet/Mvc","RelatedBody":""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7257499385","Type":"PullRequestEvent","CreatedAt":"2018-02-16T22:18:55","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1641","RelatedDescription":"Merged pull request \"Rybrande/experimental\" (#1641) at aspnet/Identity","RelatedBody":""},{"Id":"7257478717","Type":"PullRequestEvent","CreatedAt":"2018-02-16T22:13:18","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1641","RelatedDescription":"Opened pull request \"Rybrande/experimental\" (#1641) at aspnet/Identity","RelatedBody":""},{"Id":"7257423167","Type":"PullRequestEvent","CreatedAt":"2018-02-16T21:58:50","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1640","RelatedDescription":"Merged pull request \"BuildNumber on ExperimentalVersionSuffix\" (#1640) at aspnet/Identity","RelatedBody":"Merging to fix build."},{"Id":"7257421914","Type":"PullRequestEvent","CreatedAt":"2018-02-16T21:58:29","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1640","RelatedDescription":"Opened pull request \"BuildNumber on ExperimentalVersionSuffix\" (#1640) at aspnet/Identity","RelatedBody":"Merging to fix build."},{"Id":"7252691026","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:12:58","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1639","RelatedDescription":"Opened issue \"Reset password doesn't work\" (#1639) at aspnet/Identity","RelatedBody":"* The ResetPassword view doesn't send the code as a hidden field of the reset password form, so it doesn't get modelbound.\r\n* The reset password handlers are incorrectly defined on the ResetPasswordModel and the behavior is as if they weren't there."},{"Id":"7252689598","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:12:30","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1638","RelatedDescription":"Opened issue \"Send confirmation email doesn't generate the callback URI correctly\" (#1638) at aspnet/Identity","RelatedBody":"* On the manage/index page. The send email link sends an email confirmation message with an incorrect callback URI of id=<<user-id>> instead of userId=<<userId>> causing email confirmation to fail.\r\n* The email confirmation handlers redirects the user using RedirectToPage(\"/Index\") which is not correct for MVC based pages."},{"Id":"7252687207","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:11:44","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1637","RelatedDescription":"Opened issue \"Email confirmation doesn't get send if the user registers with a social login provider\" (#1637) at aspnet/Identity","RelatedBody":"* With a social login provider enabled and email confirmation set to required, go to login.\r\n* Click on the social login provider.\r\n* After successful login with your provider, you'll be prompted to introduce your email to finish login/registration.\r\n* Introduce your email and continue.\r\n* No email got sent.\r\n* Logout.\r\n* Try to log-in with your social login provider.\r\n* You'll be prompted again to introduce your email.\r\n* If you try to introduce the same email as before we will tell you that the email is invalid.\r\n* There is no way to complete the registration as you didn't get a confirmation email.\r\n* There is no way to \"forget\" the association between the social login provider and your unconfirmed email account in order to retry the process."},{"Id":"7252682624","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:10:16","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1636","RelatedDescription":"Opened issue \"Social login provider options don't show up in register\" (#1636) at aspnet/Identity","RelatedBody":"* With a social login provider enabled, go to register.\r\n* No social login provider is displayed.\r\n* It shows up in the login view."},{"Id":"7252678473","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:08:55","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1635","RelatedDescription":"Opened issue \"Social login provider options disappear after failed login attempt\" (#1635) at aspnet/Identity","RelatedBody":"* With a social login provider enabled, go to login.\r\n* You'll see the social login provider listed.\r\n* Try to log in with user name and an incorrect password\r\n*The social login provider will disappear when the page\r\ngets re-rendered."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7257973504","Type":"IssuesEvent","CreatedAt":"2018-02-17T01:12:14","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2243","RelatedDescription":"Closed issue \"Add ParseRequestLineSplitBufferWithoutNewLineDoesNotUpdateConsumed test back\" (#2243) at aspnet/KestrelHttpServer","RelatedBody":"Was removed as part of https://github.com/aspnet/KestrelHttpServer/pull/2234"},{"Id":"7257972120","Type":"PullRequestEvent","CreatedAt":"2018-02-17T01:11:28","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2328","RelatedDescription":"Merged pull request \"Re-enable test ParseRequestLineSplitBufferWithoutNewLineDoesNotUpdateConsumed\" (#2328) at aspnet/KestrelHttpServer","RelatedBody":"- Addresses #2243"},{"Id":"7257912699","Type":"PullRequestEvent","CreatedAt":"2018-02-17T00:42:08","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2328","RelatedDescription":"Opened pull request \"Re-enable test ParseRequestLineSplitBufferWithoutNewLineDoesNotUpdateConsumed\" (#2328) at aspnet/KestrelHttpServer","RelatedBody":"- Addresses #2243"},{"Id":"7257888126","Type":"IssuesEvent","CreatedAt":"2018-02-17T00:31:05","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2223","RelatedDescription":"Reopened issue \"Flaky test on Ubuntu caused by null-ref in cleanup\" (#2223) at aspnet/KestrelHttpServer","RelatedBody":"Kestrel tests [failed on Ubuntu](http://aspnetci/viewLog.html?buildId=370016&buildTypeId=XPlat_Linux_UbuntuUniverseCoreCLR&tab=buildLog&_focus=55343). It seems like the test failed in startup or shutdown due to a null-ref on a `Span`?"},{"Id":"7257771585","Type":"IssuesEvent","CreatedAt":"2018-02-16T23:43:32","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2327","RelatedDescription":"Opened issue \"Improve performance of Kestrel functional tests\" (#2327) at aspnet/KestrelHttpServer","RelatedBody":"The Kestrel functional tests (`Kestrel.Transport.Libuv.FunctionalTests` and `Kestrel.Transport.Libuv.FunctionalTests`) take about 1m20s on my machine.  The long poles are:\r\n\r\n# Test Discovery (20s)\r\n```\r\n[xUnit.net 00:00:00.0053998] xUnit.net VSTest Adapter v2.4.0-beta.1.build3945 (64-bit .NET Core 4.6.26130.05)\r\n[xUnit.net 00:00:00.6509470]   Discovering: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.FunctionalTests\r\n[xUnit.net 00:00:21.3632566]   Discovered:  Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.FunctionalTests\r\n```\r\n\r\n# KeepAliveTimeoutTests.TestKeepAliveTimeout (60s)\r\nMeasure each of the 6 tasks executed in parallel.  I know some of them take at least 30s."},{"Id":"7257444433","Type":"PullRequestEvent","CreatedAt":"2018-02-16T22:04:17","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2326","RelatedDescription":"Merged pull request \"Remove unnecessary usings\" (#2326) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7257692023","Type":"IssuesEvent","CreatedAt":"2018-02-16T23:14:20","Actor":"togakangaroo","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2084","RelatedDescription":"Opened issue \"Is there reference documentation on Razor?\" (#2084) at aspnet/Razor","RelatedBody":"I see a lot of tutorial-style articles from 2011, but is there actually a reference anywhere? For example something that lists things like `@helpers` and `@functions` and all the other various things you can do."},{"Id":"7257248213","Type":"PullRequestEvent","CreatedAt":"2018-02-16T21:14:43","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2083","RelatedDescription":"Opened pull request \"PreserveCompilationContext needs to be set only if a project has any …\" (#2083) at aspnet/Razor","RelatedBody":"…Razor files\r\n\r\nFixes #2077"},{"Id":"7256876083","Type":"IssuesEvent","CreatedAt":"2018-02-16T19:46:34","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1828","RelatedDescription":"Closed issue \"Meta: Replace MvcTemplateEngine\" (#1828) at aspnet/Razor","RelatedBody":"Living list of things a part of this issue.\r\n\r\n- [x] Add contracts for RazorProjectEngine creation\r\n- [ ] Make MVC registrations work with RazorProjectEngine\r\n- [x] Lift RazorEngineBuilderExtension concepts onto RazorProjectEngineBuilder"},{"Id":"7256749742","Type":"IssuesEvent","CreatedAt":"2018-02-16T19:17:57","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1970","RelatedDescription":"Closed issue \"Use RazorProjectEngine instead of RazorEngineBuilder / TemplateEngine.GenerateCode APIs\" (#1970) at aspnet/Razor","RelatedBody":"Once we complete #1828 we'll have a working `RazorProjectEngine` API to work with. We'll need to update all of our `RazorEngine.Create` / `TemplateEngine` to be obsolete and to move that world over to `RazorProjectEngine`.\r\n\r\nThis also has implications in MVC."},{"Id":"7256745820","Type":"IssuesEvent","CreatedAt":"2018-02-16T19:17:07","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2081","RelatedDescription":"Opened issue \"Add VS4Mac implementation of our host based project system.\" (#2081) at aspnet/Razor","RelatedBody":"We have a windows project system which associated host projects with Roslyn projects; we also need this in VS4Mac."},{"Id":"7253926725","Type":"PullRequestEvent","CreatedAt":"2018-02-16T08:51:01","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2044","RelatedDescription":"Merged pull request \"bug fix: unused parameter in the constructor\" (#2044) at aspnet/Razor","RelatedBody":""},{"Id":"7253029725","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:15:17","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2080","RelatedDescription":"Opened issue \"RazorProjectEngineBuilder.AddDefaultImports should take a source document or a string\" (#2080) at aspnet/Razor","RelatedBody":"We merged this from our tests into the product, but it accepts params of `RazorProjectItem` which isn't a very useful type for extenders. This should be cleaned up to take strings or source documents."},{"Id":"7252735428","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:27:26","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2079","RelatedDescription":"Opened issue \"Razor build tasks should validate Configuration\" (#2079) at aspnet/Razor","RelatedBody":"The tag helper task needs some parameter validation https://github.com/aspnet/Razor/blob/dev/src/Microsoft.AspNetCore.Razor.Tasks/RazorTagHelper.cs\r\n\r\nAnd the generate task needs to validate configuration  https://github.com/aspnet/Razor/blob/dev/src/Microsoft.AspNetCore.Razor.Tasks/RazorGenerate.cs#L39"},{"Id":"7252721927","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:23:01","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2075","RelatedDescription":"Closed issue \"ResolveTagHelperRazorGenerateInputs target gets invoked even when no inputs change\" (#2075) at aspnet/Razor","RelatedBody":"This was causing the `RazorTagHelper` task to run even when there were no changes to any csharp files."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7187586381","Type":"IssuesEvent","CreatedAt":"2018-02-02T06:15:37","Actor":"simonpbond","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/292","RelatedDescription":"Closed issue \"Publish ASP.NET 5 Web Application to remote IIS \" (#292) at aspnet/Tooling","RelatedBody":"In Visual Studio 2015, I can successfully preview / publish to a remote IIS server with a 4.6 Web application. However, publishing fails when using an ASP.NET 5 template / web applications, it will not even provide a preview.\n\nIs it possible to publish an ASP.NET 5 web application at the current time using Visual Studio 2015 / Publish to a remote IIS server?\n\nIf so, is there any instructions on doing this? (not for local IIS).\n"},{"Id":"7156693215","Type":"IssuesEvent","CreatedAt":"2018-01-26T17:07:42","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1010","RelatedDescription":"Closed issue \"Manage Bower Packages: Update button should disable upon clicking\" (#1010) at aspnet/Tooling","RelatedBody":"Here are the steps to reproduce in VS 2017:\r\n\r\n1. Use the ASP.NET Core Web Application (.NET Core) project template to create a new ASP.NET Core 1.1 Web Application with No Authentication.\r\n1. Right-click the web project in Solution Explorer, and select **Manage Bower Packages...**.\r\n1. From the **Installed** tab, click the **Update** button for the Bootstrap package. Notice that the button doesn't disable after it's been clicked, yet the update is occurring.\r\n\r\nThis **Update** button should be disabled while the package update is in progress. Otherwise, the following command is executed each time the button is clicked: `\"C:\\Users\\Scott Addie\\AppData\\Roaming\\npm\\Bower.cmd\" install bootstrap#v4.0.0-alpha.6 --force-latest --save`.\r\n\r\nIn the screenshot below, you see what happens when I click the button 3 times in a row:\r\n\r\n![bower_update](https://cloud.githubusercontent.com/assets/10702007/23536562/5c5589f6-ff8b-11e6-8c22-7aa322a802d9.png)\r\n\r\n\r\n\r\n"},{"Id":"7151591436","Type":"IssuesEvent","CreatedAt":"2018-01-25T18:01:43","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/914","RelatedDescription":"Closed issue \"Format on paste setting does not work in .cshtml (Razor - VS 2015)\" (#914) at aspnet/Tooling","RelatedBody":"When disabling format on paste for C# + HTML in the Visual Studio settings, usually code does not get formatted on paste (as expected)\r\n\r\nIn razor files, when you copy and past something like this statement:\r\n```csharp\r\n@Html.AttributeEncode(\"test\")\r\n```\r\nit also works as intended.\r\n\r\nHowever when you mark the \".\" (dot) and do something like cut (Ctlr+X) and paste (Ctlr+V) (or just paste), \r\nthe html helper call gets formatted (in our case like this):\r\n```csharp\r\n@Html.AttributeEncode (\"test\")\r\n```\r\n\r\nThis is ***unexpected and even leads to a compile failure*** (razor @ syntax does not support whitespaces)"},{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7119899220","Type":"IssuesEvent","CreatedAt":"2018-01-18T22:33:02","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/555","RelatedDescription":"Closed issue \"Microsoft.DotNet.Publishing.targets breaks webdeploy zip support\" (#555) at aspnet/Tooling","RelatedBody":"When I create a VS build deployment template in VSTS, it tries building a project or solution with the following arguments:\n\n```\n/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"\n```\n\nAfter the move from DNX targets to DotNet targets, this only builds the project rather than outputting a zip file, breaking the VSTS template.\n\nI'm having a hard time trying to figure out how to call msbuild on my xproj file to get it to build a webdeploy compatible zip package that can be deployed with `Publish-AzureWebsiteProject`.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7215731126","Type":"IssuesEvent","CreatedAt":"2018-02-08T09:18:22","Actor":"SteveSandersonMS","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Opened issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289) at aspnet/Announcements","RelatedBody":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available."},{"Id":"7191689127","Type":"IssuesEvent","CreatedAt":"2018-02-02T22:04:23","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/288","RelatedDescription":"Opened issue \"ASP.NET Core 2.1 \" (#288) at aspnet/Announcements","RelatedBody":"*This is high-level only and doesn't include all issues, bugs, etc. from every repo, just intended to give a general idea of release scope and direction.*\r\n\r\nThe following high-level features are planned for the ASP.NET Core 2.1 release:\r\n- **SignalR** - Real-time web framework on ASP.NET Core (https://github.com/aspnet/SignalR/issues/394)\r\n- **HTTPS** - On by default and easy to configure (https://github.com/aspnet/Home/issues/2308)\r\n- **GDPR compliance** - Templates updated with new privacy features (https://github.com/aspnet/Security/issues/1561, https://github.com/aspnet/Identity/issues/1341)\r\n- **Web API conventions** - Rich Swagger support without attributes (https://github.com/aspnet/Mvc/issues/6870, https://github.com/aspnet/Mvc/issues/6784)\r\n- **IHttpClientFactory** - HttpClient as a service, handle cross-cutting concerns like caching, retry logic, timeouts and circuit breakers (https://github.com/aspnet/HttpClientFactory/issues/42)\r\n- **ASP.NET Core Module in-proc hosting** - 6x the throughput on IIS! Better startup error handling (https://github.com/aspnet/AspNetCoreModule/issues/265)\r\n- **Razor pages improvements** - Support for areas, ~/Pages/Shared (https://github.com/aspnet/Mvc/issues/6926, https://github.com/aspnet/Mvc/issues/7193)\r\n- **MVC functional test fixture** - Easily test your MVC apps end-to-end (https://github.com/aspnet/Mvc/issues/6233)\r\n- **Build-time Razor** - Compile Razor pages and views as part of your build, improved startup performance (https://github.com/aspnet/Razor/issues/1809)\r\n- **UI as a library** - Package Razor pages and views as reusable libraries (https://github.com/aspnet/Razor/issues/1809)\r\n- **Identity UI package and scaffolder** - Add identity to any application (https://github.com/aspnet/Home/issues/2311)\r\n- **WebHooks** - Handle WebHook notifications from ASP.NET Core apps (https://github.com/aspnet/WebHooks/issues/5)\r\n\r\nFor more details on each of these features see the [ASP.NET Core 2.1 roadmap](https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/) post on the ASP.NET team blog.\r\n\r\nDiscussion for this issue is at aspnet/Home#2846"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.… https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of t… https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":53,"FavoriteCount":32,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlando… https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":16,"RawContent":null},{"Id":"961596291968102400","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onli… https://t.co/dvU3elJX8R","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"961390822993399809","CreatedAt":"2018-02-08T00:06:48+00:00","UserScreenname":"aspnet","Text":"Did you miss this week's #ASPNET Community Standup (with the latest news on Blazor, starring @danroth27 and… https://t.co/tfeqgnhClX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"961390078932148224","CreatedAt":"2018-02-08T00:03:51+00:00","UserScreenname":"aspnet","Text":"Sure, after you've left a PR on the #ASPNET docs...\n\nhttps://t.co/Dau0ZgAUbe\n\n;) https://t.co/s8UGKAhK0e","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"961382608818130944","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/7ecMOR53sw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":0,"RawContent":null},{"Id":"960929306548387840","CreatedAt":"2018-02-06T17:32:54+00:00","UserScreenname":"aspnet","Text":"This week's standup starts in 30 minutes. Join us! https://t.co/YnMMK0GKu4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":5,"RawContent":null},{"Id":"960654063133052928","CreatedAt":"2018-02-05T23:19:11+00:00","UserScreenname":"aspnet","Text":"Just blogged: Learn how to do Image Recognition with Cognitive Services and https://t.co/eFOzgs22K8 https://t.co/7PVAkBPFzq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":7,"RawContent":null},{"Id":"960617902268342272","CreatedAt":"2018-02-05T20:55:29+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup Feb 6 at 10 Pacific / 18 GMT with special guests @danroth27 and… https://t.co/6JlWLbKqut","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2018-02-17T05:30:11.5646887Z","RunDurationInMilliseconds":8995}