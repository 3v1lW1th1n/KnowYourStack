{"Data":{"GitHub":{"Issues":[{"Id":"365721913","IsPullRequest":true,"CreatedAt":"2018-10-02T03:03:45","Actor":"TomFinley","Number":"1115","RawContent":null,"Title":"Static pipelines now handle types with PipelineColumn properties.","State":"open","Body":"* Update the internal infrastructure to accomodate these types,\r\n* Update the Roslyn analyzer to accomodate these types.\r\n* Update the tests so that they exercise this capability.\r\n* Opportunistically fix some problems with the Roslyn analyzer\r\n  brought up in this work.\r\n\r\nFixes #1085.","Url":"https://github.com/dotnet/machinelearning/pull/1115","RelatedDescription":"Open PR \"Static pipelines now handle types with PipelineColumn properties.\" (#1115)"},{"Id":"365719721","IsPullRequest":true,"CreatedAt":"2018-10-02T02:51:31","Actor":"GalOshri","Number":"1114","RawContent":null,"Title":"Minor updates to 0.6 release notes: ONNX example link and prediction benchmarks","State":"open","Body":"This makes the following updates to the 0.6 release notes:\r\n- Add a link to a test showing how the ONNX scoring transform can be used\r\n- Add a link to benchmarks on the improvement in prediction engine performance and correct the speedup noted.","Url":"https://github.com/dotnet/machinelearning/pull/1114","RelatedDescription":"Open PR \"Minor updates to 0.6 release notes: ONNX example link and prediction benchmarks\" (#1114)"},{"Id":"365696074","IsPullRequest":false,"CreatedAt":"2018-10-02T00:42:55","Actor":"Ivanidzo4ka","Number":"1113","RawContent":null,"Title":"EntryPointGraph,GraphRunner and ComponentCatalog","State":"open","Body":"as example:\r\nhttps://github.com/dotnet/machinelearning/blob/59a90e7b2974ac857d3fd62c2f9a3dba9384eb85/src/Microsoft.ML.Legacy/Runtime/EntryPoints/JsonUtils/GraphRunner.cs#L26\r\n\r\nConstructor accepts IHostEnvironment, and ComponentCatalog, but recently we made changes where ComponentCatalog become part of IHostEnvironment.\r\n\r\nI think we should simplify our constructors and just accept IHostEnviroment.","Url":"https://github.com/dotnet/machinelearning/issues/1113","RelatedDescription":"Open issue \"EntryPointGraph,GraphRunner and ComponentCatalog\" (#1113)"},{"Id":"365689026","IsPullRequest":true,"CreatedAt":"2018-10-02T00:04:59","Actor":"tannergooding","Number":"1112","RawContent":null,"Title":"Improvements to the \"Sum\" SIMD algorithm","State":"open","Body":"Does some cleanup so that we have a single \"Sum\" algorithm (rather than one for aligned and one for unaligned inputs).\r\n\r\nFor inputs with fewer elements than can fit in the `Vector` type, it falls back to scalar code.\r\nFor inputs that are not naturally aligned (the alignment is not a multiple of 4), it does exclusively unaligned loads\r\nFor all other inputs, it will do at most two unaligned loads (one each for any leading/trailing unaligned elements) and all other loads will be aligned.","Url":"https://github.com/dotnet/machinelearning/pull/1112","RelatedDescription":"Open PR \"Improvements to the \"Sum\" SIMD algorithm\" (#1112)"},{"Id":"365688655","IsPullRequest":true,"CreatedAt":"2018-10-02T00:03:01","Actor":"artidoro","Number":"1111","RawContent":null,"Title":"Conversion of Multi Class Naive Bayes classifier to estimator","State":"open","Body":"Ongoing work on converting the trainers to estimators (#754). This PR converts the Multi Class Naive Bayes classification trainer.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1111","RelatedDescription":"Open PR \"Conversion of Multi Class Naive Bayes classifier to estimator\" (#1111)"},{"Id":"365684656","IsPullRequest":false,"CreatedAt":"2018-10-01T23:42:31","Actor":"zeahmed","Number":"1110","RawContent":null,"Title":"Convert TensorFlowEstimator into Non-TrivialEstimator.","State":"open","Body":"The `TensorFlowEstimator` is currently a `TrivialEstimator`. Recently, model retraining feature was added to `TensorFlowTransform` which requires the `TensorFlowEstimator` to be non-trivial estimator.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1110","RelatedDescription":"Open issue \"Convert TensorFlowEstimator into Non-TrivialEstimator.\" (#1110)"},{"Id":"365684154","IsPullRequest":false,"CreatedAt":"2018-10-01T23:39:48","Actor":"abidur","Number":"1109","RawContent":null,"Title":"Issue with WordEmbeddings using service accounts. ","State":"open","Body":"### System information\r\n\r\n- **Windows Server**:\r\n- **.NET Version - Core 2.1**: \r\n\r\n### Issue\r\nI built a demo web application that runs locally but breaks on the server. I am using WordEmbeddings. The error message is:\r\n\r\n\"Error downloading resource: Error trying to create directory : Path cannot be the empty string or all whitespace.\r\nParameter name: path.\r\nPlease fix your filesystem permissions, or try setting the 'MICROSOFTML_RESOURCE_PATH' environment variable to a writable folder\"\r\n\r\nI am using a service account on the IIS server and the GetFilePath method is is getting an empty string for \"Environment.SpecialFolder.LocalApplicationData\". I have the Environment Variable set to the appropriate folder. The issue is that the GetFilePath method is not checking for the Environment variable path at the right time and throwing the error reaching before that part of the code.\r\n\r\n            if (!Directory.Exists(appDataBaseDir))\r\n            {\r\n                try\r\n                {\r\n                   //**for service accounts, appDataBaseDir is empty and this through the error that is caught. Perhaps need to check for empty string here?** \r\n                    Directory.CreateDirectory(appDataBaseDir);\r\n\r\n                    // On unix, create with 0700 perms as per XDG base dir spec\r\n                    if (Environment.OSVersion.Platform == PlatformID.Unix)\r\n                        chmod(appDataBaseDir, 448);\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    error = $\"Error trying to create directory {appDataBaseDir}: {e.Message}.\\nPlease fix your \" +\r\n                        \"filesystem permissions, or try setting the \" +\r\n                        $\"'{Utils.CustomSearchDirEnvVariable}' environment variable to a writable folder\";\r\n                    return filePath;\r\n                }\r\n            }\r\n\r\n           \r\n            if (!Directory.Exists(absDir))\r\n            {\r\n                try\r\n                {\r\n                    Directory.CreateDirectory(absDir);\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    error = $\"Error trying to create directory {absDir}: {e.Message}.\\nPlease try setting the \" +\r\n                        $\"'{Utils.CustomSearchDirEnvVariable}' environment variable to a writable folder\";\r\n                }\r\n            }\r\n            return filePath;\r\n        }\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1109","RelatedDescription":"Open issue \"Issue with WordEmbeddings using service accounts. \" (#1109)"},{"Id":"365667574","IsPullRequest":false,"CreatedAt":"2018-10-01T22:25:47","Actor":"zeahmed","Number":"1108","RawContent":null,"Title":"Add support for stopping criteria other than training iterations in TensorFlowTransform.","State":"open","Body":"Currently, training in TensorFlowTransform stops when specified umber of iterations are done. \r\nIt will also be interesting to add support for following stopping criteria.\r\n- Increase in training loss (or no change in the loss over the last few iterations)\r\n- Stop training based on performance on validation set.","Url":"https://github.com/dotnet/machinelearning/issues/1108","RelatedDescription":"Open issue \"Add support for stopping criteria other than training iterations in TensorFlowTransform.\" (#1108)"},{"Id":"365662268","IsPullRequest":false,"CreatedAt":"2018-10-01T22:06:27","Actor":"gbonventre","Number":"1107","RawContent":null,"Title":"Need the ability to view transformed data outside of the library","State":"open","Body":"\r\n\r\n### There is currently no easy way to view data from an external application after a number of transforms have been applied using a LearningPipeline. The LearningPipelineDebugProxy class is a sealed internal class. Using reflection, I can only see the first 10 rows of data. It would be very helpful if the LearningPipelineDebugProxy class were public or if there was some other way to view transformed data from an external application\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1107","RelatedDescription":"Open issue \"Need the ability to view transformed data outside of the library\" (#1107)"},{"Id":"365659138","IsPullRequest":false,"CreatedAt":"2018-10-01T21:56:03","Actor":"zeahmed","Number":"1106","RawContent":null,"Title":"Convert ShuffleTransform to Transformer/Estimator design...","State":"open","Body":"Need to convert `ShuffleTransform` into Transformer/Estimator design. Currently, when it is used in `TensorFlowTransform` to enable shuffling of data during training, it gives error regarding <b>`ShuffleTransform is not RowToRowMapper`</b>.","Url":"https://github.com/dotnet/machinelearning/issues/1106","RelatedDescription":"Open issue \"Convert ShuffleTransform to Transformer/Estimator design...\" (#1106)"},{"Id":"365624165","IsPullRequest":true,"CreatedAt":"2018-10-01T20:13:39","Actor":"sfilipi","Number":"1105","RawContent":null,"Title":"XML documentation references cs code for examples","State":"open","Body":"Addresses  #637 by creating the docs/samples older where we can host the projects for our examples. \r\n\r\nAdded one such example for SDCA regression. ","Url":"https://github.com/dotnet/machinelearning/pull/1105","RelatedDescription":"Open PR \"XML documentation references cs code for examples\" (#1105)"},{"Id":"365039382","IsPullRequest":true,"CreatedAt":"2018-10-01T19:42:53","Actor":"yaeldekel","Number":"1093","RawContent":null,"Title":"Document the APIs for examining the topology of a TensorFlow graph","State":"closed","Body":"This PR adds documentation for two methods:\r\nTensorFlowUtils.GetModelSchema\r\nTensorFlowUtils.GetModelNodes\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1093","RelatedDescription":"Closed or merged PR \"Document the APIs for examining the topology of a TensorFlow graph\" (#1093)"},{"Id":"365278126","IsPullRequest":true,"CreatedAt":"2018-10-01T18:04:40","Actor":"GalOshri","Number":"1102","RawContent":null,"Title":"Add release notes for ML.NET 0.6","State":"closed","Body":"This adds release notes for ML.NET 0.6.","Url":"https://github.com/dotnet/machinelearning/pull/1102","RelatedDescription":"Closed or merged PR \"Add release notes for ML.NET 0.6\" (#1102)"},{"Id":"365008887","IsPullRequest":true,"CreatedAt":"2018-10-01T17:30:10","Actor":"Ivanidzo4ka","Number":"1091","RawContent":null,"Title":"CustomPipelineColumn","State":"closed","Body":"Fixes https://github.com/dotnet/machinelearning/issues/1043","Url":"https://github.com/dotnet/machinelearning/pull/1091","RelatedDescription":"Closed or merged PR \"CustomPipelineColumn\" (#1091)"},{"Id":"365556704","IsPullRequest":false,"CreatedAt":"2018-10-01T17:10:07","Actor":"eerhardt","Number":"1104","RawContent":null,"Title":"How to use EntryPoint saved .zip files with the \"new API\"?","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: all\r\n- **.NET Version (eg., dotnet --info)**:  \r\n```\r\n> dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-alpha1-009622\r\n Commit:    5a14412a49\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-alpha1-009622\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview1-26924-01\r\n  Commit:  4b8641b848\r\n```\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nAttempt to load a .zip file that was created by EntryPoints using `TransformerChain.LoadFrom`.\r\n\r\n- **What happened?**\r\n```\r\nAn unhandled exception was thrown by the application.\r\nMicrosoft.Azure.WebJobs.Host.FunctionInvocationException: Exception while executing function: Function1 ---> System.FormatException: Corrupt model file\r\n   at Microsoft.ML.Runtime.Model.ModelLoadContext.LoadModel[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, String dir, Object[] extra)\r\n   at Microsoft.ML.Runtime.Data.TransformerChain.LoadFrom(IHostEnvironment env, Stream stream)\r\n   at MLFunction.Predictor.PredictAsync(GitHubIssue issue, TraceWriter log) in F:\\git\\MLFunction\\Predictor.cs:line 69\r\n```\r\n\r\n- **What did you expect?**\r\nI expected to be able to use a .zip file that was created using the EntryPoints API with the \"new API\".\r\n\r\n### Notes\r\n\r\nIf we are keeping the EntryPoints API, users will be creating model files using EntryPoints. We need to have an API that allows C#/.NET developers to use those model files.","Url":"https://github.com/dotnet/machinelearning/issues/1104","RelatedDescription":"Open issue \"How to use EntryPoint saved .zip files with the \"new API\"?\" (#1104)"},{"Id":"365547793","IsPullRequest":false,"CreatedAt":"2018-10-01T16:45:37","Actor":"sfilipi","Number":"1103","RawContent":null,"Title":"The MlNetMklDeps nuget package should include exports used by the time series code","State":"open","Body":"As part of the #977 work, the custom DLL for MKL that we package on the MlNetMklDeps nuget should include the following functions:\r\n\r\nLAPACKE_shseqr\r\nLAPACKE_dhseqr\r\nLAPACKE_ssytrd\r\nLAPACKE_dsytrd\r\nLAPACKE_ssteqr\r\nLAPACKE_dsteqr\r\nLAPACKE_sorgtr\r\nLAPACKE_dorgtr\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1103","RelatedDescription":"Open issue \"The MlNetMklDeps nuget package should include exports used by the time series code\" (#1103)"},{"Id":"365088448","IsPullRequest":true,"CreatedAt":"2018-09-30T18:40:17","Actor":"Ivanidzo4ka","Number":"1099","RawContent":null,"Title":"Add Onnx and TensorFlow projects to console project","State":"closed","Body":"fixes https://github.com/dotnet/machinelearning/issues/1081","Url":"https://github.com/dotnet/machinelearning/pull/1099","RelatedDescription":"Closed or merged PR \"Add Onnx and TensorFlow projects to console project\" (#1099)"},{"Id":"365179553","IsPullRequest":false,"CreatedAt":"2018-09-30T00:49:58","Actor":"binaryfog","Number":"1101","RawContent":null,"Title":"All Last names are Scottish ? :)","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10\r\n- **.NET Version (eg., dotnet --info)**: .Net Core 2.1\r\n- **ML.NET Version**: 0.5\r\n\r\n### Issue\r\n\r\n- **What did I do?**\r\nUsed SDCA to classify last names\r\n\r\n- **What happened?**\r\nNo matter what last name I gave , it is predicted to be Scottish\r\n\r\n- **What did you expect?**\r\nCorrect classification\r\n\r\n### Source code / logs\r\nHere is an excerpt from the output:\r\n\r\nLast Name: Abbracciabene\r\nPredicted probability: Arabic.txt:      0\r\nPredicted probability: Chinese.txt:      0\r\nPredicted probability: Czech.txt:      0\r\nPredicted probability: Dutch.txt:      0.0025\r\nPredicted probability: English.txt:      0.0001\r\nPredicted probability: French.txt:      0.0036\r\nPredicted probability: German.txt:      0.0015\r\nPredicted probability: Greek.txt:      0.0012\r\nPredicted probability: Irish.txt:      0.0113\r\nPredicted probability: Italian.txt:      0.0013\r\nPredicted probability: Japanese.txt:      0.0038\r\nPredicted probability: Korean.txt:      0.0001\r\nPredicted probability: Polish.txt:      0\r\nPredicted probability: Portuguese.txt:      0.0002\r\nPredicted probability: Russian.txt:      0\r\nPredicted probability: Scottish.txt:      0.9737\r\nPredicted probability: Spanish.txt:      0\r\nPredicted probability: Vietnamese.txt:      0.0006\r\nPredicted probability: :      0\r\n\r\nSee the attached source code for more details.\r\n[LastNamePlay.zip](https://github.com/dotnet/machinelearning/files/2431123/LastNamePlay.zip)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1101","RelatedDescription":"Open issue \"All Last names are Scottish ? :)\" (#1101)"},{"Id":"365169598","IsPullRequest":false,"CreatedAt":"2018-09-29T21:45:51","Actor":"GalOshri","Number":"1100","RawContent":null,"Title":"Getting SDCA multiclass weights requires using a MulticlassLogisticRegressionPredictor, which is strange","State":"open","Body":"As shown [here](https://github.com/dotnet/machinelearning/blob/3cdd3c8b32705e91dcf46c429ee34196163af6da/test/Microsoft.ML.StaticPipelineTesting/Training.cs#L268), getting the predictor weights from multiclass-SDCA requires using `MulticlassLogisticRegressionPredictor`. This is counter-intuitive as I would expect that predictor to be used just for Logistic Regression. Perhaps something more general like `MulticlassLinearPredictor` should be created/used?","Url":"https://github.com/dotnet/machinelearning/issues/1100","RelatedDescription":"Open issue \"Getting SDCA multiclass weights requires using a MulticlassLogisticRegressionPredictor, which is strange\" (#1100)"},{"Id":"365049322","IsPullRequest":true,"CreatedAt":"2018-09-28T23:35:28","Actor":"shauheen","Number":"1094","RawContent":null,"Title":"Cherrypick to update release for 0.6","State":"closed","Body":"Cherrypick into release for RC2 0.6","Url":"https://github.com/dotnet/machinelearning/pull/1094","RelatedDescription":"Closed or merged PR \"Cherrypick to update release for 0.6\" (#1094)"},{"Id":"365069754","IsPullRequest":false,"CreatedAt":"2018-09-28T23:14:09","Actor":"Zruty0","Number":"1098","RawContent":null,"Title":"MLContext to create them all","State":"open","Body":"During one of the in-person API reviews we agreed that it would be a good idea to have a single object `MLContext` that would serve as a 'factory of everything' (similar to the HTTP context / DB context in the .NET world).\r\n\r\n- `MLContext` will explicitly implement `IHostEnvironment`, so you can create all the existing estimators by giving the context as the first argument.\r\n- `MLContext` will have properties `BinaryClassification`, `Regression`, `Clustering` etc. for canonical ML tasks (the ones that are currently classes in themselves), complete with `Evaluate` and all corresponding trainers.\r\n- It will have *extension methods* for non-canonical tasks like recommendation or anomaly detection etc.\r\n- It will have properties `Transformation`, `Filtering`, `Loading` to instantiate all known transform estimators, filters and data readers (again via extension methods).\r\n- It will have a pair of methods `SaveModel` and `LoadModel` that handle model serialization.\r\n\r\n/cc @KrzysztofCwalina @TomFinley @eerhardt @markusweimer @asthana86 ","Url":"https://github.com/dotnet/machinelearning/issues/1098","RelatedDescription":"Open issue \"MLContext to create them all\" (#1098)"},{"Id":"365067994","IsPullRequest":false,"CreatedAt":"2018-09-28T23:04:25","Actor":"Zruty0","Number":"1097","RawContent":null,"Title":"Static pipe doesn't validate sufficiently","State":"open","Body":"Here is an example:\r\nhttps://github.com/dotnet/machinelearning/blob/master/test/Microsoft.ML.Tests/Scenarios/Api/CookbookSamples/CookbookSamples.cs#L657\r\n\r\nIf I change the line to be `PredictedLabel: c.KeyU4.TextValues.Vector` , I will essentially (wrongly) claim that the model's `PredictedLabel` is a vector of keys. But `Fit` will work just fine, although even the basic `GetOutputSchema` call would verify that this is an invalid pipeline.\r\n\r\n/cc @TomFinley ","Url":"https://github.com/dotnet/machinelearning/issues/1097","RelatedDescription":"Open issue \"Static pipe doesn't validate sufficiently\" (#1097)"},{"Id":"365065710","IsPullRequest":false,"CreatedAt":"2018-09-28T22:51:48","Actor":"Anipik","Number":"1096","RawContent":null,"Title":"BaseLine Mismatching for various tests when run against Release-Intrinsics","State":"open","Body":"The List of the tests(20) that fail are\r\n\r\n- BinaryClassifierLogisticRegressionBinNormTest\r\n- BinaryClassifierLogisticRegressionGaussianNormTest\r\n- BinaryClassifierLogisticRegressionNonNegativeTest\r\n- BinaryClassifierLogisticRegressionNormTest\r\n- BinaryClassifierTesterThresholdingTest\r\n- BinaryClassifierSymSgdTest\r\n- BinaryClassifierLogisticRegressionTest\r\n- BinaryClassifierPerceptronTest\r\n- DefaultCalibratorPerceptronTest\r\n- PAVCalibratorPerceptronTest\r\n- FastTreeBinaryClassificationCategoricalSplitTest\r\n- LinearClassifierTest\r\n- NoCalibratorLinearSvmTest\r\n- PAVCalibratorLinearSvmTest\r\n- PcaAnomalyTest\r\n- RandomCalibratorPerceptronTest\r\n- RegressorOlsTestOne\r\n- LpGcNormAndWhiteningWorkout\r\n- MultiClassificationLRSaveModelToOnnxTest\r\n- BinaryClassificationLRSaveModelToOnnxTest\r\n\r\nAll of these tests fail because the baseline numbers are different on netcoreapp3.0\r\n\r\ncc @danmosemsft @eerhardt @shauheen @Ivanidzo4ka \r\n","Url":"https://github.com/dotnet/machinelearning/issues/1096","RelatedDescription":"Open issue \"BaseLine Mismatching for various tests when run against Release-Intrinsics\" (#1096)"},{"Id":"365060904","IsPullRequest":false,"CreatedAt":"2018-09-28T22:30:14","Actor":"eerhardt","Number":"1095","RawContent":null,"Title":"Deadlock when running TestAutoInference and TestPipelineSweeper in parallel","State":"open","Body":"To reproduce:\r\n\r\nOn an Azure [Standard_DS2_v2](https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes-general) machine (the same that is used in the Hosted VS2017 pool in Azure DevOps), run the `Microsoft.ML.Predictor.Tests` tests in a loop for a while. (it took me 3 runs)\r\n\r\nSometimes the tests will hang indefinitely.\r\n\r\nI was able to attach a debugger when this happens, and there are 2 tests running:\r\n\r\n* TestPipelineSweeper.PipelineSweeperRocketEngine\r\n* TestAutoInference.TestLearnerConstrainingByName\r\n\r\nAnd both tests were in the same callstack:\r\n\r\n```\r\n \tSystem.Private.CoreLib.dll!System.Threading.ManualResetEventSlim.Wait(int millisecondsTimeout, System.Threading.CancellationToken cancellationToken) Line 635\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.Tasks.Task.SpinThenBlockingWait(int millisecondsTimeout, System.Threading.CancellationToken cancellationToken) Line 2978\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.Tasks.Task.InternalWaitCore(int millisecondsTimeout, System.Threading.CancellationToken cancellationToken) Line 2917\tC#\r\n \tSystem.Private.CoreLib.dll!System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task) Line 146\tC#\r\n \tSystem.Threading.Tasks.Dataflow.dll!System.Threading.Tasks.Dataflow.DataflowBlock.Receive<int>(System.Threading.Tasks.Dataflow.ISourceBlock<int> source, System.TimeSpan timeout, System.Threading.CancellationToken cancellationToken) Line 982\tC#\r\n \tSystem.Threading.Tasks.Dataflow.dll!System.Threading.Tasks.Dataflow.DataflowBlock.Receive<int>(System.Threading.Tasks.Dataflow.ISourceBlock<int> source) Line 888\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.Data.ShuffleTransform.RowCursor.MoveNextCore() Line 649\tC#\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.Data.RootCursorBase.MoveNext() Line 70\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.Training.TrainingCursorBase.MoveNext() Line 492\tC#\r\n \tMicrosoft.ML.StandardLearners.dll!Microsoft.ML.Runtime.Learners.OnlineLinearTrainer<Microsoft.ML.Runtime.Data.BinaryPredictionTransformer<Microsoft.ML.Runtime.Learners.LinearBinaryPredictor>, Microsoft.ML.Runtime.Learners.LinearBinaryPredictor>.TrainCore(Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.RoleMappedData data) Line 188\tC#\r\n \tMicrosoft.ML.StandardLearners.dll!Microsoft.ML.Runtime.Learners.OnlineLinearTrainer<Microsoft.ML.Runtime.Data.BinaryPredictionTransformer<Microsoft.ML.Runtime.Learners.LinearBinaryPredictor>, Microsoft.ML.Runtime.Learners.LinearBinaryPredictor>.TrainModelCore(Microsoft.ML.Runtime.TrainContext context) Line 135\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.Training.TrainerEstimatorBase<Microsoft.ML.Runtime.Data.BinaryPredictionTransformer<Microsoft.ML.Runtime.Learners.LinearBinaryPredictor>, Microsoft.ML.Runtime.Learners.LinearBinaryPredictor>.Train(Microsoft.ML.Runtime.TrainContext context) Line 89\tC#\r\n \tMicrosoft.ML.Core.dll!Microsoft.ML.Runtime.TrainerExtensions.Train<Microsoft.ML.Runtime.IPredictorProducing<float>>(Microsoft.ML.Runtime.ITrainer<Microsoft.ML.Runtime.IPredictorProducing<float>> trainer, Microsoft.ML.Runtime.Data.RoleMappedData trainData) Line 95\tC#\r\n \tMicrosoft.ML.Ensemble.dll!Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase<float, Microsoft.ML.Runtime.IPredictorProducing<float>, Microsoft.ML.Runtime.Ensemble.Selector.IBinarySubModelSelector, Microsoft.ML.Runtime.Ensemble.OutputCombiners.IBinaryOutputCombiner>.TrainCore.AnonymousMethod__0(Microsoft.ML.Runtime.Ensemble.Subset subset, System.Threading.Tasks.ParallelLoopState state, long index) Line 153\tC#\r\n \tSystem.Threading.Tasks.Parallel.dll!System.Threading.Tasks.Parallel.PartitionerForEachWorker.AnonymousMethod__1(ref System.Collections.IEnumerator partitionState, int timeout, out bool replicationDelegateYieldedBeforeCompletion) Line 3224\tC#\r\n \tSystem.Threading.Tasks.Parallel.dll!System.Threading.Tasks.TaskReplicator.Replica<System.__Canon>.ExecuteAction(out bool yieldedBeforeCompletion) Line 124\tC#\r\n \tSystem.Threading.Tasks.Parallel.dll!System.Threading.Tasks.TaskReplicator.Replica.Execute() Line 80\tC#\r\n \tSystem.Threading.Tasks.Parallel.dll!System.Threading.Tasks.TaskReplicator.Replica..ctor.AnonymousMethod__4_0(object s) Line 40\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) Line 167\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.Tasks.Task.ExecuteWithThreadLocal(ref System.Threading.Tasks.Task currentTaskSlot) Line 2440\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.Tasks.ThreadPoolTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task task, bool taskWasPreviouslyQueued) Line 75\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.Tasks.TaskScheduler.TryRunInline(System.Threading.Tasks.Task task, bool taskWasPreviouslyQueued) Line 209\tC#\r\n \tSystem.Private.CoreLib.dll!System.Threading.Tasks.Task.InternalRunSynchronously(System.Threading.Tasks.TaskScheduler scheduler, bool waitForCompletion) Line 1126\tC#\r\n \tSystem.Threading.Tasks.Parallel.dll!System.Threading.Tasks.TaskReplicator.Run<System.Collections.IEnumerator>(System.Threading.Tasks.TaskReplicator.ReplicatableUserAction<System.Collections.IEnumerator> action, System.Threading.Tasks.ParallelOptions options, bool stopOnFirstFailure) Line 138\tC#\r\n \tSystem.Threading.Tasks.Parallel.dll!System.Threading.Tasks.Parallel.PartitionerForEachWorker<Microsoft.ML.Runtime.Ensemble.Subset, object>(System.Collections.Concurrent.Partitioner<Microsoft.ML.Runtime.Ensemble.Subset> source, System.Threading.Tasks.ParallelOptions parallelOptions, System.Action<Microsoft.ML.Runtime.Ensemble.Subset> simpleBody, System.Action<Microsoft.ML.Runtime.Ensemble.Subset, System.Threading.Tasks.ParallelLoopState> bodyWithState, System.Action<Microsoft.ML.Runtime.Ensemble.Subset, System.Threading.Tasks.ParallelLoopState, long> bodyWithStateAndIndex, System.Func<Microsoft.ML.Runtime.Ensemble.Subset, System.Threading.Tasks.ParallelLoopState, object, object> bodyWithStateAndLocal, System.Func<Microsoft.ML.Runtime.Ensemble.Subset, System.Threading.Tasks.ParallelLoopState, long, object, object> bodyWithEverything, System.Func<object> localInit, System.Action<object> localFinally) Line 3157\tC#\r\n \tSystem.Threading.Tasks.Parallel.dll!System.Threading.Tasks.Parallel.ForEachWorker<Microsoft.ML.Runtime.Ensemble.Subset, object>(System.Collections.Generic.IEnumerable<Microsoft.ML.Runtime.Ensemble.Subset> source, System.Threading.Tasks.ParallelOptions parallelOptions, System.Action<Microsoft.ML.Runtime.Ensemble.Subset> body, System.Action<Microsoft.ML.Runtime.Ensemble.Subset, System.Threading.Tasks.ParallelLoopState> bodyWithState, System.Action<Microsoft.ML.Runtime.Ensemble.Subset, System.Threading.Tasks.ParallelLoopState, long> bodyWithStateAndIndex, System.Func<Microsoft.ML.Runtime.Ensemble.Subset, System.Threading.Tasks.ParallelLoopState, object, object> bodyWithStateAndLocal, System.Func<Microsoft.ML.Runtime.Ensemble.Subset, System.Threading.Tasks.ParallelLoopState, long, object, object> bodyWithEverything, System.Func<object> localInit, System.Action<object> localFinally) Line 2139\tC#\r\n \tSystem.Threading.Tasks.Parallel.dll!System.Threading.Tasks.Parallel.ForEach<Microsoft.ML.Runtime.Ensemble.Subset>(System.Collections.Generic.IEnumerable<Microsoft.ML.Runtime.Ensemble.Subset> source, System.Threading.Tasks.ParallelOptions parallelOptions, System.Action<Microsoft.ML.Runtime.Ensemble.Subset, System.Threading.Tasks.ParallelLoopState, long> body) Line 1776\tC#\r\n \tMicrosoft.ML.Ensemble.dll!Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase<float, Microsoft.ML.Runtime.IPredictorProducing<float>, Microsoft.ML.Runtime.Ensemble.Selector.IBinarySubModelSelector, Microsoft.ML.Runtime.Ensemble.OutputCombiners.IBinaryOutputCombiner>.TrainCore(Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.RoleMappedData data) Line 143\tC#\r\n \tMicrosoft.ML.Ensemble.dll!Microsoft.ML.Runtime.Ensemble.EnsembleTrainerBase<float, Microsoft.ML.Runtime.IPredictorProducing<float>, Microsoft.ML.Runtime.Ensemble.Selector.IBinarySubModelSelector, Microsoft.ML.Runtime.Ensemble.OutputCombiners.IBinaryOutputCombiner>.Train(Microsoft.ML.Runtime.TrainContext context) Line 111\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.Training.TrainerBase<Microsoft.ML.Runtime.IPredictorProducing<float>>.Microsoft.ML.Runtime.ITrainer.Train(Microsoft.ML.Runtime.TrainContext context) Line 31\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.Data.TrainUtils.TrainCore(Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.RoleMappedData data, Microsoft.ML.Runtime.ITrainer trainer, Microsoft.ML.Runtime.Data.RoleMappedData validData, Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainer calibrator, int maxCalibrationExamples, bool? cacheData, Microsoft.ML.Runtime.IPredictor inputPredictor) Line 259\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.Data.TrainUtils.Train(Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.IChannel ch, Microsoft.ML.Runtime.Data.RoleMappedData data, Microsoft.ML.Runtime.ITrainer trainer, Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainerFactory calibrator, int maxCalibrationExamples) Line 227\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.EntryPoints.LearnerEntryPointsUtils.Train<Microsoft.ML.Runtime.Ensemble.EnsembleTrainer.Arguments, Microsoft.ML.Runtime.EntryPoints.CommonOutputs.BinaryClassificationOutput>(Microsoft.ML.Runtime.IHost host, Microsoft.ML.Runtime.Ensemble.EnsembleTrainer.Arguments input, System.Func<Microsoft.ML.Runtime.ITrainer> createTrainer, System.Func<string> getLabel, System.Func<string> getWeight, System.Func<string> getGroup, System.Func<string> getName, System.Func<System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.ML.Runtime.Data.RoleMappedSchema.ColumnRole, string>>> getCustom, Microsoft.ML.Runtime.Internal.Calibration.ICalibratorTrainerFactory calibrator, int maxCalibrationExamples) Line 189\tC#\r\n \tMicrosoft.ML.Ensemble.dll!Microsoft.ML.Ensemble.EntryPoints.Ensemble.CreateBinaryEnsemble(Microsoft.ML.Runtime.IHostEnvironment env, Microsoft.ML.Runtime.Ensemble.EnsembleTrainer.Arguments input) Line 24\tC#\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.EntryPoints.EntryPointNode.Run() Line 834\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Runtime.EntryPoints.EntryPointGraph.RunNode(Microsoft.ML.Runtime.EntryPoints.EntryPointNode node) Line 1034\tC#\r\n \tMicrosoft.ML.Legacy.dll!Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.RunAllNonMacros() Line 68\tC#\r\n \tMicrosoft.ML.Legacy.dll!Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.RunAll() Line 56\tC#\r\n```\r\n\r\nBoth tests were waiting in the `ShuffleTransform.RowCursor.MoveNextCore` function waiting for `_toConsume.Receive();` to return:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/a02807c7a805b72ef12970a37279c8cec4ea667d/src/Microsoft.ML.Data/Transforms/ShuffleTransform.cs#L646-L650\r\n\r\nHowever, there were no background threads running that would be producing anything to consume. I'm not sure where they went or why they weren't running.\r\n\r\nI've captured a .dmp file, which is ~200 MB, so I can't link it here. Please contact me if you'd like it and I can get it to you.\r\n\r\n/cc @TomFinley @Zruty0 \r\n","Url":"https://github.com/dotnet/machinelearning/issues/1095","RelatedDescription":"Open issue \"Deadlock when running TestAutoInference and TestPipelineSweeper in parallel\" (#1095)"},{"Id":"364729436","IsPullRequest":true,"CreatedAt":"2018-09-28T21:13:52","Actor":"artidoro","Number":"1088","RawContent":null,"Title":"Added training method that accepts initial predictor for Symboli SGD estimator","State":"closed","Body":"Fixes #1087.\r\n\r\nThis PR restores the ability to train SymbolicSGD estimator starting from the weights of a previously trained predictor.\r\n\r\nI added a  test to demonstrate that it works. ","Url":"https://github.com/dotnet/machinelearning/pull/1088","RelatedDescription":"Closed or merged PR \"Added training method that accepts initial predictor for Symboli SGD estimator\" (#1088)"},{"Id":"364729086","IsPullRequest":false,"CreatedAt":"2018-09-28T21:13:52","Actor":"artidoro","Number":"1087","RawContent":null,"Title":"Symbolic SGD should support training from initial predictor","State":"closed","Body":"In the estimator conversion, the functionality of training with weights taken from a previously trained predictor was lost. It should be restored. This was identified by Tom in his comment: \r\n\r\nhttps://github.com/dotnet/machinelearning/pull/1012/files/f7f666615e8befc0cd8b6925efe0a4c1c5e14101#r220340515","Url":"https://github.com/dotnet/machinelearning/issues/1087","RelatedDescription":"Closed issue \"Symbolic SGD should support training from initial predictor\" (#1087)"},{"Id":"365023915","IsPullRequest":false,"CreatedAt":"2018-09-28T20:08:19","Actor":"codemzs","Number":"1092","RawContent":null,"Title":"MKL binaries should not be included twice in HAL learner and TS packages","State":"open","Body":"Currently, MKL binaries are included in HAL learner and TS packages. We should either create a MKL Package and have both HAL and TS packages reference it but this is known to break SymSGD native code in HAL package. A second option is to split the MKL binary into two and use them separately in HAL learner and TS package.","Url":"https://github.com/dotnet/machinelearning/issues/1092","RelatedDescription":"Open issue \"MKL binaries should not be included twice in HAL learner and TS packages\" (#1092)"},{"Id":"364725899","IsPullRequest":true,"CreatedAt":"2018-09-28T18:38:13","Actor":"jignparm","Number":"1086","RawContent":null,"Title":"update ml.scoring library to stable version","State":"closed","Body":"Bumping up version of dependencies from pre-release to stable\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1086","RelatedDescription":"Closed or merged PR \"update ml.scoring library to stable version\" (#1086)"},{"Id":"364957957","IsPullRequest":false,"CreatedAt":"2018-09-28T16:25:25","Actor":"Zruty0","Number":"1090","RawContent":null,"Title":"IMuliStreamSource to be a class","State":"open","Body":"I want to be able to call `textReader.Read(\"file.txt\")`, instead of having to explicitly create a `MultiFileSource`. \r\n\r\nI think this can be achieved by turning the `IMultiStreamSource` into a base class.","Url":"https://github.com/dotnet/machinelearning/issues/1090","RelatedDescription":"Open issue \"IMuliStreamSource to be a class\" (#1090)"},{"Id":"364740644","IsPullRequest":true,"CreatedAt":"2018-09-28T04:53:22","Actor":"artidoro","Number":"1089","RawContent":null,"Title":"Char array for separators in word tokenizer","State":"open","Body":"Fixes #935.\r\n\r\nSwitched the string separator in word tokenizer by a character array. Each character in the array is taken as being a separator, instead of having a comma separated string. \r\n\r\nNeed to add tests.","Url":"https://github.com/dotnet/machinelearning/pull/1089","RelatedDescription":"Open PR \"Char array for separators in word tokenizer\" (#1089)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-10-02T05:30:39.1047339Z","RunDurationInMilliseconds":1142}