{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1, released in 1999 and 2006...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11025188319","Type":"IssuesEvent","CreatedAt":"2019-12-06T01:42:20","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7743","RelatedDescription":"Opened issue \"Unit test \"RunInternal_WithMultipleDeletedPackagesWithSamePackageIdentity_PutsEachPackageInSeparateCommit\" is flaky\" (#7743) at NuGet/NuGetGallery","RelatedBody":"This is in NuGet.Services.Metadata:\r\nhttps://github.com/NuGet/NuGet.Services.Metadata/blob/bc7b6b5f3f84728946785d2021487876b130eb24/tests/NgTests/Db2CatalogTests.cs#L533\r\n\r\n```\r\n##[error]    NgTests.Db2CatalogTests.RunInternal_WithMultipleDeletedPackagesWithSamePackageIdentity_PutsEachPackageInSeparateCommit [FAIL]\r\n\r\n      Assert.Equal() Failure\r\n      Expected: 5\r\n      Actual:   3\r\n      Stack Trace:\r\n        tests\\NgTests\\Db2CatalogTests.cs(1345,0): at NgTests.Db2CatalogTests.VerifyCatalog(Nullable`1 expectedLastCreated, Nullable`1 expectedLastDeleted, Nullable`1 expectedLastEdited, PackageOperation skippedOperation)\r\n        tests\\NgTests\\Db2CatalogTests.cs(1288,0): at NgTests.Db2CatalogTests.<RunInternalAndVerifyAsync>d__52.MoveNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        tests\\NgTests\\Db2CatalogTests.cs(558,0): at NgTests.Db2CatalogTests.<RunInternal_WithMultipleDeletedPackagesWithSamePackageIdentity_PutsEachPackageInSeparateCommit>d__35.MoveNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      Output:\r\n        Information: CATALOG LastCreated: 0001-01-01T00:00:00.0000000Z\r\n        Information: DATABASE CreatedPackages: 1\r\n        Information: Creating package catalog item for JYDztRwlslJv9T8e 2.9.4\r\n        Information: Finished creating package catalog item for JYDztRwlslJv9T8e 2.9.4\r\n        Information: Add metadata from: https://unittest.org/packages/jydztrwlsljv9t8e/2.9.4.nupkg\r\n        Information: COMMIT metadata to catalog.\r\n        Information: CATALOG LastEdited: 0001-01-01T00:00:00.0000000Z\r\n        Information: DATABASE EditedPackages: 0\r\n        Information: CATALOG LastDeleted: 2019-12-06T01:26:18.5511052Z\r\n        Information: FEED DeletedPackages: 0\r\n        Information: CATALOG LastCreated: 2019-12-06T01:26:18.5511052Z\r\n        Information: DATABASE CreatedPackages: 0\r\n        Information: CATALOG LastEdited: 0001-01-01T00:00:00.0000000Z\r\n        Information: DATABASE EditedPackages: 0\r\n        Information: CATALOG LastDeleted: 2019-12-06T01:26:18.5511052Z\r\n        Information: FEED DeletedPackages: 0\r\n        Information: CATALOG LastCreated: 2019-12-06T01:26:18.5511052Z\r\n        Information: DATABASE CreatedPackages: 0\r\n        Information: CATALOG LastEdited: 0001-01-01T00:00:00.0000000Z\r\n        Information: DATABASE EditedPackages: 0\r\n\r\n```\r\nSee build:\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3299584&view=logs&j=fd490c07-0b22-5182-fac9-6d67fe1e939b&t=ce91d5d6-0c55-50f5-8ab9-6695c03ab102&l=22"},{"Id":"11025042110","Type":"PullRequestEvent","CreatedAt":"2019-12-06T01:09:06","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7742","RelatedDescription":"Opened pull request \"[Token scanning-Phase 1-5] Email\" (#7742) at NuGet/NuGetGallery","RelatedBody":"Send the email to the customer about the revocation. \r\n\r\nSend email -> Audit -> Commit to DB\r\nIf anything goes wrong, just click the button and try again. If we send the email at the last step, the email will not be able to send automatically once the DB commit is done. Because the UI only provides the choice to do the revocation if it has not be revoked. \r\n\r\nSample email: @karann-msft \r\n![image](https://user-images.githubusercontent.com/41028779/70286469-24ddf480-1780-11ea-860e-ea1aa184eae4.png)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"11024410737","Type":"IssuesEvent","CreatedAt":"2019-12-05T22:59:09","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7741","RelatedDescription":"Opened issue \"[C2R] Implement registration comparer to detect differences between new and old\" (#7741) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11024408452","Type":"IssuesEvent","CreatedAt":"2019-12-05T22:58:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7740","RelatedDescription":"Opened issue \"[C2R] Update Lightning to support the new Catalog2Registration driver\" (#7740) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11024400874","Type":"IssuesEvent","CreatedAt":"2019-12-05T22:57:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7739","RelatedDescription":"Opened issue \"[C2R] Wire up Hive logic with a new Catalog2Registration collector\" (#7739) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11024397271","Type":"IssuesEvent","CreatedAt":"2019-12-05T22:56:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7738","RelatedDescription":"Opened issue \"[C2R] Implement Hive Updater: read and write from blob storage\" (#7738) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11024392440","Type":"IssuesEvent","CreatedAt":"2019-12-05T22:55:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7737","RelatedDescription":"Opened issue \"[C2R] Implement Hive Updater: orchestrate the reading and writing of a single ID in a hive\" (#7737) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11024386375","Type":"IssuesEvent","CreatedAt":"2019-12-05T22:54:56","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7736","RelatedDescription":"Opened issue \"[C2R] Implement Hive Merger: logic to merge catalog leaves into a single index\" (#7736) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11024374814","Type":"IssuesEvent","CreatedAt":"2019-12-05T22:52:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7735","RelatedDescription":"Opened issue \"[C2R] Add initial projects for Catalog2Registration rebuild\" (#7735) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11024362753","Type":"IssuesEvent","CreatedAt":"2019-12-05T22:50:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7734","RelatedDescription":"Opened issue \"[C2R] Rewrite Catalog2Registration to better handle mega package pushes\" (#7734) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11023244248","Type":"PullRequestEvent","CreatedAt":"2019-12-05T20:09:03","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7731","RelatedDescription":"Merged pull request \"[Hotfix] Align NuGet.Jobs and ServerCommon dependencies to 2.60.0\" (#7731) at NuGet/NuGetGallery","RelatedBody":"There was a mismatch in the graph. Some dependencies used 2.58.0 ServerCommon, others used 2.59.0. This resolved to 2.59.0. A breaking change was introduced in 2.59.0. This caused a runtime issue in entry points that use NuGet.Jobs dependencies.\r\n\r\nEssentially this change moved to the latest version of NuGet.Jobs and aligns with 2.60.0."},{"Id":"11022777529","Type":"IssuesEvent","CreatedAt":"2019-12-05T19:10:29","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7733","RelatedDescription":"Opened issue \"Package with broken ZIP offset value is accepted by gallery but breaks in validation\" (#7733) at NuGet/NuGetGallery","RelatedBody":"This is the package: \r\n[jver.futurepackage.1.0.0.nupkg.zip](https://github.com/NuGet/NuGetGallery/files/3928620/jver.futurepackage.1.0.0.nupkg.zip)\r\n\r\nThe bad bytes are here. The relative offset of local header in the central directory header points to an offset past the end of the package.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70265580-8fc30780-174f-11ea-8f09-d8d877e23a1d.png)\r\n\r\nThe exception in the process signature validator is this:\r\n![image](https://user-images.githubusercontent.com/94054/70265637-abc6a900-174f-11ea-9750-7b1f8bd056c9.png)\r\n```\r\nSystem.IO.EndOfStreamException at NuGet.Packaging.Signing.LocalFileHeader.TryRead\r\n```\r\n\r\n"},{"Id":"11022712343","Type":"IssuesEvent","CreatedAt":"2019-12-05T19:01:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7732","RelatedDescription":"Opened issue \"Auditing enums should have hard-coded integer values\" (#7732) at NuGet/NuGetGallery","RelatedBody":"We should also have a unit test that asserts the integer values never change per enum name."},{"Id":"11022015515","Type":"PullRequestEvent","CreatedAt":"2019-12-05T17:28:44","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7731","RelatedDescription":"Opened pull request \"[Hotfix] Align NuGet.Jobs and ServerCommon dependencies to 2.60.0\" (#7731) at NuGet/NuGetGallery","RelatedBody":"There was a mismatch in the graph. Some dependencies used 2.58.0 ServerCommon, others used 2.59.0. This resolved to 2.59.0. A breaking change was introduced in 2.59.0. This caused a runtime issue in entry points that use NuGet.Jobs dependencies.\r\n\r\nEssentially this change moved to the latest version of NuGet.Jobs and aligns with 2.60.0."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11023342486","Type":"IssuesEvent","CreatedAt":"2019-12-05T20:22:15","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8885","RelatedDescription":"Opened issue \"Apex test creating Netstandard2.0 project will fail without NuGetFallbackFolder\" (#8885) at NuGet/Home","RelatedBody":"According to [doc](https://docs.microsoft.com/en-us/dotnet/core/build/distribution-packaging#disk-layout), NuGetFallbackFolder is only used prior to .NET Core 3.0.\r\nSome of our Apex tests create netstandard2.0 project and then restore with empty feed in NuGet.Config.  When there is no lower version(<3.0) .NET Core on our CI machine, those tests will fail, for Netstandard.Library (and it's dependency microsoft.netcore.platforms) could not be resolved from NuGetFallbackFolder.\r\n\r\n\r\n"},{"Id":"11023157494","Type":"IssuesEvent","CreatedAt":"2019-12-05T19:57:37","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8884","RelatedDescription":"Opened issue \"Apex tests without clearing output and error list in VS affect each other\" (#8884) at NuGet/Home","RelatedBody":"Discover this issue in netcore5.0 testing, found duplicate timestamps in log.\r\nWe should isolate tests by clearing output and error list at the beginning of each test.\r\n\r\nAlso found test CreateNetCoreProject_AddProjectReference passes incorrectly. \r\nWe should add a assert statement to make sure it fail when error occurs.\r\n"},{"Id":"11018021832","Type":"IssuesEvent","CreatedAt":"2019-12-05T09:42:02","Actor":"jagruti-caterlyst","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8883","RelatedDescription":"Opened issue \"missing references related to sqlite\" (#8883) at NuGet/Home","RelatedBody":"Severity\tCode\tDescription\tProject\tPath\tFile\tLine\tSource\tSuppression State\r\nError\t\tThis project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is ..\\packages\\System.Data.SQLite.Core.1.0.112.0\\build\\net46\\System.Data.SQLite.Core.targets.\tCDC_Saleslyst\tC:\\Users\\JagrutiPadariya\\Documents\\GitHub\\CDC\\CDC_Saleslyst\\CDC_Saleslyst\tC:\\Users\\JagrutiPadariya\\Documents\\GitHub\\CDC\\CDC_Saleslyst\\CDC_Saleslyst\\CDC_Saleslyst.vbproj\t160\tBuild\t\r\n"},{"Id":"11015136471","Type":"IssuesEvent","CreatedAt":"2019-12-05T00:38:41","Actor":"bergbria","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8882","RelatedDescription":"Opened issue \"PluginFactory is global and caches failed tasks, making in-proc retries impossible\" (#8882) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nAs recommended by the Nuget team, I've been coding against the nuget binaries in an attempt to customize installation behavior (specifically to install a single package to the global cache without pulling in dependencies or making an extra copy, though that shouldn't matter here).\r\n\r\nMy installation tool runs on our distributed build machines, where high CPU load often causes processes to execute more slowly than normal from a wall-clock perspective. This in turn sometimes leads to timeout errors.\r\n\r\nIn our specific case, we want to retry on timeout. However, the nuget code currently makes doing this in-proc impossible.\r\n\r\nThis is the specific instance I've found. I cannot say whether there are more or not.\r\n\r\n* There is only a single global ``PluginManager`` object (``private static readonly Lazy<IPluginManager> _lazy``).\r\n* This in turn has a single ``IPluginFactory`` object  (``_pluginFactory``) that cannot be reset publicly and is not internally. Effectively, this means there is a single static global ``PluginFactory`` object.\r\n* PluginFactory contains this field: ``ConcurrentDictionary<string, Lazy<Task<IPlugin>>> _plugins;``\r\n    * Tasks are inserted and used from this dictionary regardless of whether they succeeded or not.\r\n* Effectively, if any of the tasks in ``_plugins`` fails, the only way to retry them is to restart the process."},{"Id":"11014942237","Type":"IssuesEvent","CreatedAt":"2019-12-05T00:05:14","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8881","RelatedDescription":"Opened issue \"VS:  solution restore perpetually fails due to race condition\" (#8881) at NuGet/Home","RelatedBody":"Imagine `IVsSolutionRestoreService*.NominateProjectAsync(...)` is called on two threads concurrently.\r\n\r\n1.  Both threads call [`SolutionRestoreWorker.ScheduleRestoreAsync(...)`](https://github.com/NuGet/NuGet.Client/blob/6f7be0986028256f05c894eac2f7816c85611984/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreWorker.cs#L273) nearly simultaneously.\r\n2.  Both threads call [`InitializeAsync()`](https://github.com/NuGet/NuGet.Client/blob/6f7be0986028256f05c894eac2f7816c85611984/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreWorker.cs#L152), but only one thread will actually perform initialization.  The other thread will not wait for initialization to complete and will start a background worker thread on [`StartBackgroundJobRunnerAsync(...)`](https://github.com/NuGet/NuGet.Client/blob/6f7be0986028256f05c894eac2f7816c85611984/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreWorker.cs#L395).\r\n3.  The background thread calls into [`IsSolutionFullyLoadedAsync()`](https://github.com/NuGet/NuGet.Client/blob/6f7be0986028256f05c894eac2f7816c85611984/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreWorker.cs#L184) which assumes [`_vsSolution` has been initialized by the other thread](https://github.com/NuGet/NuGet.Client/blob/6f7be0986028256f05c894eac2f7816c85611984/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreWorker.cs#L165).  If not, a `NullReferenceException` is thrown [here](https://github.com/NuGet/NuGet.Client/blob/6f7be0986028256f05c894eac2f7816c85611984/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreWorker.cs#L189) and the background thread dies.\r\n4.  Since [a new background thread is never created](https://github.com/NuGet/NuGet.Client/blob/6f7be0986028256f05c894eac2f7816c85611984/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreWorker.cs#L299) the `NullReferenceException` is perpetually rethrown [here](https://github.com/NuGet/NuGet.Client/blob/6f7be0986028256f05c894eac2f7816c85611984/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreWorker.cs#L335) and restore fails until you close and reopen the solution and you are lucky enough to not hit the race condition again."},{"Id":"11014684111","Type":"IssuesEvent","CreatedAt":"2019-12-04T23:23:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7842","RelatedDescription":"Closed issue \"dotnet restore failing with TaskCanceledException\" (#7842) at NuGet/Home","RelatedBody":"_From @ColinM9991 on March 1, 2019 13:9_\n\n## Steps to reproduce\r\n\r\nN/A\r\nThis issue is intermittent, however when it happens it then lingers for some time.\r\n\r\n## Description\r\n\r\nWe are using the dotnet CLI to restore packages for an ASP.NET Core application targeting .NET Core in our TeamCity build process, and are intermittently having failed builds where the restore task fails as soon as it picks up the first project file\r\n\r\n```\r\n[12:43:57]\tStep 1/13: Restore Packages (.NET CLI (dotnet)) (30s)\r\n[12:43:58]\t[Step 1/13] dotnet.exe restore Project.sln --disable-parallel\r\n[12:43:58]\t[Step 1/13] restore (29s)\r\n[12:43:58]\t[restore] Starting: \"C:\\Program Files\\dotnet\\dotnet.exe\" restore Project.sln --disable-parallel\r\n[12:43:58]\t[restore] in directory: C:\\buildAgent\\work\\g0124fa0e71e5f68\r\n[12:44:16]\t[restore]   Restoring packages for C:\\buildAgent\\work\\g0124fa0e71e5f68\\ProjectA\\Common\\ProjectB.csproj...\r\n[12:44:28]\t[restore] C:\\Program Files\\dotnet\\sdk\\2.2.102\\NuGet.targets(114,5): error : A task was canceled.\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] Build FAILED.\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore]     0 Warning(s)\r\n[12:44:28]\t[restore]     1 Error(s)\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] Time Elapsed 00:00:24.84\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] C:\\Program Files\\dotnet\\sdk\\2.2.102\\NuGet.targets(114,5): error : A task was canceled.\r\n[12:44:28]\t[restore] Process exited with code 1\r\n[12:44:28]\t[Step 1/13] Process exited with code 1\r\n[12:44:28]\t[Step 1/13] Step Restore Packages (.NET CLI (dotnet)) failed\r\n```\r\n\r\n## Expected  behavior\r\n\r\nIn the scenario where there is an actual error with the codebase then the dotnet CLI should return a meaningful error message as to what the problem is\r\n\r\nIn the scenario where nothing is wrong and the dotnet CLI fails for no reason, the expected behavior would be for the restore task to complete successfully as it does in other builds of the same codebase at previous times.\r\n\r\n## Actual behavior\r\n\r\n`dotnet restore` fails with `TaskCanceledException` and no indication as to what the issue is.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n[13:07:51]\t[Step 2/2] .NET Core SDK (reflecting any global.json):\r\n[13:07:51]\t[Step 2/2]  Version:   2.2.102\r\n[13:07:51]\t[Step 2/2]  Commit:    96ff75a873\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] Runtime Environment:\r\n[13:07:51]\t[Step 2/2]  OS Name:     Windows\r\n[13:07:51]\t[Step 2/2]  OS Version:  10.0.17763\r\n[13:07:51]\t[Step 2/2]  OS Platform: Windows\r\n[13:07:51]\t[Step 2/2]  RID:         win10-x64\r\n[13:07:51]\t[Step 2/2]  Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.102\\\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] Host (useful for support):\r\n[13:07:51]\t[Step 2/2]   Version: 2.2.1\r\n[13:07:51]\t[Step 2/2]   Commit:  878dd11e62\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] .NET Core SDKs installed:\r\n[13:07:51]\t[Step 2/2]   1.1.12 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2]   2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2]   2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2]   2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] .NET Core runtimes installed:\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 1.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 1.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\nNuGet.CommandLine version: 4.9.3\n\n_Copied from original issue: dotnet/cli#10905_"},{"Id":"11014623188","Type":"IssuesEvent","CreatedAt":"2019-12-04T23:14:03","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7942","RelatedDescription":"Closed issue \"More Security Review\" (#7942) at NuGet/Home","RelatedBody":""},{"Id":"11014562035","Type":"IssuesEvent","CreatedAt":"2019-12-04T23:04:41","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7881","RelatedDescription":"Closed issue \"Upgrade fails with \"Unable to find metadata of <somepackageid>\" if a package is in fallback folder, but not remote feed\" (#7881) at NuGet/Home","RelatedBody":"PackageA v2\r\n   depends on\r\n       PackageB v3\r\nThose 2 packages are in a fallback folder only.\r\n\r\nUpgrade Package A to v4\r\n\r\nPackageA v4\r\n    depends on \r\n      PackageB v5\r\nThose 2 packages are not in the fallback folder, but are available in a package feed.\r\n\r\nBelieve an error message is raised from UIActionEngine - line 806.\r\nAt first look, it looks like, for licensing dialog reasons, we are trying to find out if the full set of packages require license acceptance or not.\r\nWe cannot get all the metadata -- likely because PackageB v3 isn't on any feeds.\r\n\r\nLikely, we should support getting nuspec from fallback folder too?\r\nWhy do we care about the old version license? (to not ask, if already approved, and license hasn't changed???)\r\n\r\nThis happened in a real scenario with some UWP packages.\r\nWas told this reproed with 15.9, but not 16.0.\r\n\r\n"},{"Id":"11014554224","Type":"IssuesEvent","CreatedAt":"2019-12-04T23:03:31","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7652","RelatedDescription":"Closed issue \"PackageReference output missing libs\" (#7652) at NuGet/Home","RelatedBody":"I have a custom nuget package that contains multiple DLLs.   When this package is consumed, I only want one of the DLLs, MyA.dll, to be referenced by the project.  However when I build I need all of my DLLs in the package to go to the build output folder.\r\n\r\nAssume I have DLLs named MyA, MyB, MyC, MyD, MyE, and MyF\r\n\r\nMy nuspec looks like:\r\n\r\n`<?xml version=\"1.0\"?>`\r\n`<package >`\r\n`  <metadata>`\r\n`    <id>My.ThirdParty.Package</id>`\r\n`    <version>1.2.3</version>`\r\n`     ...`\r\n`     <references>`\r\n`         <group targetFramework=\"net40\">`\r\n`             <reference file=\"MyA.dll\" />`\r\n`          </group>`\r\n`     </references>`\r\n`   </metadata>`\r\n`   <files>`\r\n`     <file src=\"My*.dll\" target=\"lib\\net40\" />`\r\n`  </files>`\r\n`</package>`\r\n\r\nWhen I use this package from a project using the _packages.config_ style.  Everything works.  I see that it only added the single reference to MyA.dll in my list of references.  When I build all of the DLLs are in my output folder, MyA through MyF.\r\n\r\nIf I then clear my output folder, migrate it to a _PackageReference_ style, and do a build, only MyA.dll is copied to the output folder.   I need MyA through MyF to be copied in this case just like it worked the old way.\r\n\r\nI'm running NuGet Version: 4.5.1.4879\r\nVisual Studio Enterprise 2017 Version 15.9.4\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-12-06T05:30:47.6382385Z","RunDurationInMilliseconds":2678}