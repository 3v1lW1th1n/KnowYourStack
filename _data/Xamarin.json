{"Data":{"Blog":{"FeedItems":[{"Title":"Quick Tip: Debugging Local ASP.NET Core Web APIs on Android Emulators","PublishedOn":"2019-02-25T19:36:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing mobile applications with a web API backend there is always a need to debug locally on your development machine. If you are using Visual Studio for Mac and debugging iOS applications...","Href":"https://blog.xamarin.com/debug-local-asp-net-core-web-apis-android-emulators/","RawContent":null},{"Title":"Xamarin and Azure Office Hours Recap from December 2018 and January 2019","PublishedOn":"2019-02-21T18:11:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That&#8217;s right, I ❤️ every single one of you(!) and I want to know more about your stories building mobile apps. I want to hear stories of your successes and also, the not-so-successful...","Href":"https://blog.xamarin.com/xamarin-azure-office-hours-recap-december-january/","RawContent":null},{"Title":"Persisting Settings and Preferences in Mobile Apps with Xamarin.Essentials","PublishedOn":"2019-02-19T19:56:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"An essential part of any mobile application is the ability to persist data. Sometimes that is a large amount of data that requires a database, but often it is smaller pieces of data such as settings...","Href":"https://blog.xamarin.com/persisting-settings-preferences-mobile-apps-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Developer Blog is Getting an Update!","PublishedOn":"2019-02-15T18:56:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Next week, the Xamarin Developer Blog will be migrating to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. Starting...","Href":"https://blog.xamarin.com/xamarin-developer-blog-is-getting-an-update/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: Releases, Previews, and Roadmaps!","PublishedOn":"2019-02-13T19:56:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. In this episode, we discuss the best of...","Href":"https://blog.xamarin.com/podcast-releases-previews-roadmaps/","RawContent":null},{"Title":"Easily Check Mobile Device Connectivity with Xamarin.Essentials","PublishedOn":"2019-02-12T19:06:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts of a mobile device is their instant access to the internet. As a mobile app developer, it&#8217;s great to be able to pull data from the server to our apps to provide users with...","Href":"https://blog.xamarin.com/easily-check-mobile-device-connectivity-with-xamarin-essentials/","RawContent":null},{"Title":"5 Things You’ll Love in Xamarin.Forms 3.5","PublishedOn":"2019-02-06T17:22:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Valentine&#8217;s Day isn&#8217;t for a few more days, we just couldn&#8217;t wait to celebrate the love by sharing a new stable release of Xamarin.Forms &#8211; 3.5. Your engagement and...","Href":"https://blog.xamarin.com/5-things-youll-love-xamarin-forms-3-5/","RawContent":null},{"Title":"Using Existing C++ Libraries in Cross-Platform Xamarin.Forms Applications","PublishedOn":"2019-02-04T18:52:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are many libraries developed using C or C++ which can be brought to bear when creating Xamarin-based mobile apps such as those leveraged by Microsoft’s Hyperlapse Mobile and Pix Camera in order...","Href":"https://blog.xamarin.com/using-c-libraries-xamarin-forms-apps/","RawContent":null},{"Title":"Mobile & .NET Developer Community Events in February","PublishedOn":"2019-02-01T17:31:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Fall in love with building your next mobile application by networking with local user groups to learn about new and exciting releases, tooling, or updates with Xamarin and .NET related technologies!...","Href":"https://blog.xamarin.com/mobile-net-developer-community-events-in-february/","RawContent":null},{"Title":"Complex UI with FastGrid for Xamarin.Forms","PublishedOn":"2019-01-30T17:56:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff (Principal Engineer at Binwell,  Microsoft MVP, Xamarin Certified Mobile Developer), Artem Tischenko (Xamarin developer at Binwell) and Kirill...","Href":"https://blog.xamarin.com/complex-ui-with-fastgrid-for-xamarin-forms/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9133488042","Type":"PullRequestEvent","CreatedAt":"2019-02-25T21:00:24","Actor":"mjbond-msft","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2766","RelatedDescription":"Opened pull request \"Fix build publish location regression\" (#2766) at xamarin/xamarin-android","RelatedBody":"Related to PR #2743.  Prior to the Xamarin.Android (release) build moving from a freestyle to a pipeline build, the publish location included both the job name (xamarin-android) *and* the checkout directory name (xamarin-android) in the publish url path such as the following - note the redundant xamarin-android names (JOB_NAME/DIR_NAME) at the end:\r\nhttp://xamjenkinsartifact.blob.core.windows.net/mono-jenkins-eval/xamarin-android/xamarin-android\r\n\r\nAfter moving to the pipeline build based on the build.groovy jenkinsfile, the publish location changed to the following:\r\nhttp://xamjenkinsartifact.blob.core.windows.net/mono-jenkins-eval/xamarin-android\r\n\r\nThis breaks anyone or any system that is looking for published packages in the original location.\r\n\r\nThe problem was introduced when the publish operation was inadvertently changed to execute from within the xamarin-android checkout directory.  Consequently, the directory itself was not included in the publish path.\r\n\r\nThe fix is to blank out the directory specifier and update the list of relative publish paths such that the publish command runs from the Jenkins workspace root directory, which is the parent of the xamarin-android checkout directory.  Consequently, the xamarin-android checkout directory now gets included in the publish link url."},{"Id":"9132706760","Type":"PullRequestEvent","CreatedAt":"2019-02-25T18:58:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2764","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] remove <Dx/> task\" (#2764) at xamarin/xamarin-android","RelatedBody":"There was only one place in monodroid where the `<Dx/>` task was still\r\nused, which I was able to recently remove.\r\n\r\nWe should remove `<Dx/>` to avoid confusion between the other related\r\ntasks that are in use:\r\n* `<CompileToDalvik/>`\r\n* `<D8/>` and `<R8/>`\r\n\r\nThis will simplify places in monodroid where I need to add d8 support.\r\n\r\nThere is a scenario where \"Enhanced Fast Deployment\" compiles dex\r\nfiles using these tasks."},{"Id":"9130827518","Type":"IssuesEvent","CreatedAt":"2019-02-25T14:44:09","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2616","RelatedDescription":"Closed issue \"Problem with Java interface binding\" (#2616) at xamarin/xamarin-android","RelatedBody":"Hi, i'm binding the Nordicsemi DFU Library (https://github.com/NordicSemiconductor/Android-DFU-Library/) and there's this strange compilation error. This happens when i link the binding to the final app but not when i do the same to a test app. The error is thrown by 2 interfaces that i don't directly use but some of the classes i uses do. I already set the content to EmbeddedJar (i saw that set it to InputJar could cause a similar problem) and now i have no more ideas. Would anyone help me?\r\n\r\nRegards, \r\nManuele\r\n\r\n![image](https://user-images.githubusercontent.com/17146198/51123224-f5e32b00-181b-11e9-874b-475587e8fc1b.png)\r\n"},{"Id":"9128303117","Type":"IssuesEvent","CreatedAt":"2019-02-25T08:07:09","Actor":"cheansiong","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2765","RelatedDescription":"Opened issue \"Multidex not working\" (#2765) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Multidex is enabled and it just not working suddenly.\r\n2. Can simulate using the apk binary.\r\n3. The apk contains the application class, but error shows that the application class cannot be found.\r\n\r\nNote:\r\nWhat have been done\r\n- Upgrade Visual Studio\r\n- Update Nuget Packages\r\n\r\n[log.txt](https://github.com/xamarin/xamarin-android/files/2899458/log.txt)\r\n![2](https://user-images.githubusercontent.com/11568375/53322770-52576100-3917-11e9-9ee2-5e20a92d5234.png)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nApplication should launch successfully without any error in all version.\r\n\r\n### Actual Behavior\r\nError below is thrown when launching apk in Android 4.4\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): FATAL EXCEPTION: main\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): Process: com.bigdutchman.farmbookpro.layer, PID: 3376\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): java.lang.RuntimeException: Unable to instantiate application fbp.mob.app.MyApp: java.lang.ClassNotFoundException: Didn't find class \"fbp.mob.app.MyApp\" on path: DexPathList[[zip file \"/data/app/com.bigdutchman.farmbookpro.layer-1.apk\"],nativeLibraryDirectories=[/data/app-lib/com.bigdutchman.farmbookpro.layer-1, /system/lib]]\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat android.app.LoadedApk.makeApplication(LoadedApk.java:516)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat android.app.ActivityThread.handleBindApplication(ActivityThread.java:4317)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat android.app.ActivityThread.access$1500(ActivityThread.java:135)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1256)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat android.os.Looper.loop(Looper.java:136)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat android.app.ActivityThread.main(ActivityThread.java:5017)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat java.lang.reflect.Method.invokeNative(Native Method)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat java.lang.reflect.Method.invoke(Method.java:515)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat dalvik.system.NativeStart.main(Native Method)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): Caused by: java.lang.ClassNotFoundException: Didn't find class \"fbp.mob.app.MyApp\" on path: DexPathList[[zip file \"/data/app/com.bigdutchman.farmbookpro.layer-1.apk\"],nativeLibraryDirectories=[/data/app-lib/com.bigdutchman.farmbookpro.layer-1, /system/lib]]\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat java.lang.ClassLoader.loadClass(ClassLoader.java:497)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat java.lang.ClassLoader.loadClass(ClassLoader.java:457)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat android.app.Instrumentation.newApplication(Instrumentation.java:975)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \tat android.app.LoadedApk.makeApplication(LoadedApk.java:511)\r\n02-25 07:29:27.826: E/AndroidRuntime(3376): \t... 11 more\r\n02-25 07:29:28.596: E/EGL_emulation(1965): tid 1965: eglSurfaceAttrib(1199): error 0x3009 (EGL_BAD_MATCH)\r\n"},{"Id":"9127403926","Type":"PullRequestEvent","CreatedAt":"2019-02-25T03:58:47","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2764","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] remove <Dx/> task\" (#2764) at xamarin/xamarin-android","RelatedBody":"There was only one place in monodroid where the `<Dx/>` task was still\r\nused, which I was able to recently remove.\r\n\r\nWe should remove `<Dx/>` to avoid confusion between the other related\r\ntasks that are in use:\r\n* `<CompileToDalvik/>`\r\n* `<D8/>` and `<R8/>`\r\n\r\nThis will simplify places in monodroid where I need to add d8 support.\r\n\r\nThere is a scenario where \"Enhanced Fast Deployment\" compiles dex\r\nfiles using these tasks."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9134677883","Type":"IssuesEvent","CreatedAt":"2019-02-26T00:52:20","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5286","RelatedDescription":"Closed issue \"Label layout problem in ListView at Forms3.5\" (#5286) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nLabel in the ListView can't be layout correctly at Android. iOS is ok.\r\n\r\n### Steps to Reproduce\r\n\r\n1. the xaml like that\r\n ``` \r\n <ListView   x:Name=\"listView\">\r\n                <ListView.ItemTemplate>\r\n                    <DataTemplate>\r\n                        <ViewCell>\r\n                            <local:CheckBox\r\n                                Margin=\"20,0,0,0\"\r\n                                ShowLabel=\"true\"\r\n                                Checked=\"{Binding Check}\"\r\n                                OnImg=\"checked_checkbox.png\"\r\n                                OffImg=\"unchecked_checkbox.png\"\r\n                                Text=\"{Binding Word}\" />\r\n                        </ViewCell>\r\n                    </DataTemplate>\r\n                </ListView.ItemTemplate>\r\n            </ListView>\r\n```\r\n2. the CheckBox code like that:\r\n```\r\n\tpublic CheckBox() {\r\n\t\t\tthis.TapCmd = new Command(() => {\r\n\t\t\t\tthis.Checked = !this.Checked;\r\n\r\n\t\t\t\tif (this.CheckChanged != null)\r\n\t\t\t\t\tthis.CheckChanged.Invoke(this, new EventArgs());\r\n\r\n\t\t\t\tif (this.CheckChangedCmd != null && this.CheckChangedCmd.CanExecute(this.Checked))\r\n\t\t\t\t\tthis.CheckChangedCmd.Execute(this.Checked);\r\n\t\t\t});\r\n\r\n\r\n\t\t\tStackLayout stackLayout = new StackLayout {\r\n\t\t\t\tOrientation = StackOrientation.Horizontal\r\n\t\t\t};\r\n\r\n\r\n\t\t\tTapBinder.SetCmd(stackLayout, this.TapCmd);\r\n\t\t\tthis.Content = stackLayout;\r\n\r\n\t\t\tthis.Label = new Label() {\r\n\t\t\t\tBackgroundColor = Color.Red,\r\n\t\t\t\tBindingContext = this,\r\n\t\t\t\tVerticalTextAlignment = TextAlignment.Center,\r\n\t\t\t\tHorizontalOptions = LayoutOptions.StartAndExpand\r\n\t\t\t};\r\n\t\t\tthis.Label.SetBinding(Label.TextProperty, \"Text\");\r\n\t\t\tthis.Label.SetBinding(Label.IsVisibleProperty, \"ShowLabel\");\r\n\r\n\t\t\tthis.Icon = new Image() {\r\n\t\t\t\tWidthRequest = this.Size,\r\n\t\t\t\tHeightRequest = this.Size,\r\n\t\t\t\tSource = this.OffImg\r\n\t\t\t};\r\n\t\t\tstackLayout.Children.Add(this.Icon);\r\n\t\t\tstackLayout.Children.Add(this.Label);\r\n\r\n\t\t}\r\n```\r\n\r\n### Expected Behavior\r\n\r\nthe text of label can be display normally.\r\n\r\n### Actual Behavior\r\n\r\nthe text of some label can't be seen when scoll ListView up or down.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.7.4 (build 1)\r\nInstallation UUID: 4e60959a-758f-48ce-ae6d-26e15276ea83\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000221\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.8\r\n\t2.1.7\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.504/Sdks\r\nSDK Versions:\r\n\t2.1.504\r\n\t2.1.503\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.15 (Visual Studio Community)\r\nHash: d60abd198\r\nBranch: \r\nBuild date: 2019-02-01 12:23:30-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.8.0 (Visual Studio Community)\r\nAndroid SDK: /Users/huangboru/myfile/sdk\r\n\tSupported Android versions:\r\n\t\t4.2 (API level 17)\r\n\t\t4.4 (API level 19)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.3\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/huangboru/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\nopenjdk version \"1.8.0-9\"\r\nOpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\nOpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707040001\r\nGit revision: 2a4679454f31c8bb887cfd181ea133c9149d3cad\r\nBuild date: 2019-01-30 16:18:21+00\r\nBuild branch: release-7.7.4\r\nXamarin extensions: c8b4305fd4c60b9c25947072eb150fdc3a5aa2b5\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n![droid-mainactivity-02172019185656](https://user-images.githubusercontent.com/17265184/52912349-481bde00-32eb-11e9-8552-29a94bf5dc53.png)\r\n\r\nI set the backgroundColor of Label, It seems problem is due to the wrong layout of Label .\r\n\r\n\r\n![droid-mainactivity-02172019193816](https://user-images.githubusercontent.com/17265184/52912394-ea3bc600-32eb-11e9-9665-49b6e08838ec.png)\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->"},{"Id":"9134543660","Type":"PullRequestEvent","CreatedAt":"2019-02-26T00:18:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5383","RelatedDescription":"Opened pull request \"[iOS, Android] Prevent NREs in ScrollViews\" (#5383) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#4522 added some new code paths to ScrollView renderers for Shell that can possibly cause NREs.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #5161\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n- Android\r\n\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nNot quite sure how to repro, but the changes seem self-explanatory.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9134203865","Type":"IssuesEvent","CreatedAt":"2019-02-25T23:01:55","Actor":"ricardouffcomp","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5382","RelatedDescription":"Opened issue \"The Xamarin.Forms.CarouselView crashes inside a ListView in iOS only\" (#5382) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen using the new Xamarin.Forms.CarouselView inside a ListView it throws an exception \"System.InvalidCastException: Specified cast is not valid.\" and the application cannot start. To help to investigate this issue I have developed a very simple app with Xamarin.Forms.CarouselView inside a ListView and it is attached to this ticket.\r\n\r\nI am using the latest version of the nightly Xamarin.Forms build: 4.0.1.188134-nightly\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached iOS solution called \"App13\".\r\n2. The App won't start and it will throw the following exception \"System.InvalidCastException: Specified cast is not valid.\"\r\n3. The app doesn't initialize.\r\n\r\n### Expected Behavior\r\n\r\nThe app supposed to display a list view with 6 records and each record contains a Carousel with 3 items (People names).\r\n\r\n### Actual Behavior\r\n\r\nThe App won't start and it will throw the following exception \"System.InvalidCastException: Specified cast is not valid.\"\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.1.188134-nightly\r\n- Last known good version: Since the Xamarin.Forms.CarouselView was introduced in the Xamarin.Forms 4, this CarouselView has never worked with ListView.\r\n- IDE: Visual Studio 15.9.3 Preview 1.0\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.2.1.15\r\n  - Nuget Packages: <Solution attached>\r\n  - Affected Devices: <Solution attached>\r\n\r\n### Screenshots\r\n\r\nThe app in iOS supposed to show something like this one in Android:\r\n\r\n![image](https://user-images.githubusercontent.com/3319940/53374543-8b5ff780-3950-11e9-86f8-a7fa1151575c.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\nHere is a zip file with a small solution to help to reproduce the issue:\r\n\r\n[App13.zip](https://github.com/xamarin/Xamarin.Forms/files/2902985/App13.zip)\r\n\r\n### StackTrace\r\n\r\n[StackTraceBug.txt](https://github.com/xamarin/Xamarin.Forms/files/2902994/StackTraceBug.txt)\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9130994811","Type":"IssuesEvent","CreatedAt":"2019-02-25T15:04:56","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5350","RelatedDescription":"Closed issue \"Handle broken NSApplication.SharedApplication.Windows API (Rename + Advice? Remove in XAMCORE_4_0?)\" (#5350) at xamarin/xamarin-macios","RelatedBody":"NSApplication.SharedApplication.Windows has caused many developers pain and suffering. \r\n\r\nhttps://forums.xamarin.com/discussion/comment/296033#Comment_296033\r\n\r\n```NSApplication.SharedApplication.Windows is EVIL. It hooks into the alloc/dealloc of windows, and when you reference it in C# will make bridged objects to everything in the list. Which means if you have windows that are going to dealloc, and then look at the list, you now poked them again to stay alive a bit longer.```\r\n\r\nWe should [Advice] it now and remove from XAMCORE_4_0 (or rename to DangerousWindows)?"},{"Id":"9130951931","Type":"PullRequestEvent","CreatedAt":"2019-02-25T14:59:42","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5658","RelatedDescription":"Merged pull request \"[mac] Hide NSApp.Window for NSApp.DangerousWindow and note risk\" (#5658) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/5350\r\n- NSApplication.Window has been the source of internal and external\r\npain over the years.\r\n- Let's make our opinion that it should not be used more visible."},{"Id":"9130675427","Type":"PullRequestEvent","CreatedAt":"2019-02-25T14:24:35","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5655","RelatedDescription":"Merged pull request \"[mtouch] use \"--aot=interp,full,[...]\" for every assembly if interpreter mixed mode is enabled\" (#5655) at xamarin/xamarin-macios","RelatedBody":"The Mono AOT compiler maintains a set of signatures of compiled methods.\r\nThose signatures are necessary to emit wrappers to enable the transition\r\nfrom interpreter->AOT code. Thus, they must be collected for each\r\nassembly.\r\n\r\nContributes to https://github.com/xamarin/xamarin-macios/issues/5618"},{"Id":"9129166469","Type":"IssuesEvent","CreatedAt":"2019-02-25T10:27:27","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5652","RelatedDescription":"Closed issue \"Linker behaviour inconsistent\" (#5652) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n Run in simulator with the three linker options. Don't link, Link All and Framework SDKs. Only works when i have it as Don't link.\r\n\r\n### Expected Behavior\r\nI would think it would not give me a bug with either of the options. \r\n### Actual Behavior\r\nWhen i run with Don't link it works.\r\nWhen i run with Link Framework SDK's only i get the following error.\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tFailed to resolve \"System.Configuration.ConfigurationException\" reference from \"System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"\tPariluxPhoneApp.iOS\t\t\t\r\nI know it is coming from my awssdkcore.dll(there is a warning that says Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nWarning\t\tCannot find the assembly 'System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' referenced from '/Users/ShivS/Library/Caches/Xamarin/mtbs/builds/PariluxPhoneApp.iOS/98c804eb838feaea8c4918f655cc8e49/bin/iPhoneSimulator/Debug/AWSSDK.Core.dll'.\tPariluxPhoneApp.iOS\t\t\r\n\r\nWhen i run in Link all it runs but it gives me a run time exception about Default constructor not found for a dependency for ios specific impplimentation. This is not a problem when i run with don't link\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nMicrosoft Visual Studio Community 2017\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```) -->\r\nVersion 15.9.4\r\nVisualStudio.15.Release/15.9.4+28307.222\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA869\r\nMicrosoft Visual C++ 2017\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.11009.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   4.0.30625.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAWS Toolkit for Visual Studio 2017   1.14.4.1\r\nAWS Toolkit for Visual Studio 2017.\r\nCopyright 2011-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\nRelease notes: https://aws-vs-toolkit.s3.amazonaws.com/versioninfo.html\r\n\r\nThis software includes third party software subject to the following copyrights:\r\n- Logging from log4net, Apache License \r\n  [http://logging.apache.org/log4net/license.html]\r\n- Putty for PPK to PEM conversion, MIT license \r\n  [http://www.chiark.greenend.org.uk/~sgtatham/putty/licence.html]\r\n- NGit for AWS Elastic Beanstalk incremental push\r\n  [https://github.com/mono/ngit/blob/master/NGit.license.txt]\r\n- NSch dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/NSch.license.txt]\r\n- Sharpen dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/Sharpen/AssemblyInfo.cs]\r\n- ICSharpCode.SharpZipLib dependency for NGit\r\n  [http://www.icsharpcode.net/opensource/sharpziplib/]\r\n- Mono.Posix.dll and Mono.Security.dll dependencies for NGit\r\n  [http://mono-project.com/FAQ:_Licensing#Licensing]\r\n- MPFProj for Visual Studio Project Framework\r\n  [http://mpfproj10.codeplex.com/license]\r\n- JSON Checker for JSON validation\r\n  [http://www.raboof.com/projects/jsonchecker/]\r\n- Newtonsoft Json.NET\r\n  [http://www.newtonsoft.com/json] \r\n- YamlDotNet\r\n  [http://aaubry.net/pages/yamldotnet.html] \r\n    \r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.5001.4\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.5001.4\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.9.18254.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.5001.4\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.5001.4\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.5001.4\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOffice Developer Tools for Visual Studio 2017 ENU   15.0.28224.00\r\nMicrosoft Office Developer Tools for Visual Studio 2017 ENU\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.9.18254.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.9.18254.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.9.18254.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.9.18254.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSourceGear Vault Standard Visual Studio Extension   10.0.2.939\r\nThe SourceGear Vault Standard Source Code Control Extension enables source code control integration from within Visual Studio. For more information about Vault Standard, visit http://www.sourcegear.com.\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindow Extension   1.0\r\nToolWindow Visual Stuido Extension Detailed Info\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.208\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWorkflow Manager Tools 1.0   1.0\r\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\r\n\r\nXamarin   4.12.3.77 (d15-9@e3f40b477)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.4.2 (HEAD/8255f42fc)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nBelow are the logs. I have the logs with all 3 linker options. I know there are some nuget packages that have been updated for .net standard but they work well in the simulator\r\n[Logs.txt](https://github.com/xamarin/xamarin-macios/files/2890220/Logs.txt)\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\nsorry big project.\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":16,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":53,"FavoriteCount":25,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":20,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":25,"RawContent":null},{"Id":"1097603017375993857","CreatedAt":"2019-02-18T21:05:26+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 101: Command Parameters: https://t.co/rwzzq9yQib\n\n.@JamesMontemagno takes us through a new mini-serie… https://t.co/ZFInvKFhSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":110,"FavoriteCount":48,"RawContent":null},{"Id":"1096561048562384898","CreatedAt":"2019-02-16T00:05:01+00:00","UserScreenname":"xamarinhq","Text":"The #Xamarin Developer Blog is migrating to a new platform with a modern, clean design and powerful features that m… https://t.co/nJUxXItfe8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1095804816121581570","CreatedAt":"2019-02-13T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio Mobile Dev Podcast is out. In this episode, @CodeMillMatt &amp; @JamesMontemagno discuss the latest &amp;… https://t.co/SPEvfxFuLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":14,"RawContent":null},{"Id":"1095445655076700162","CreatedAt":"2019-02-12T22:12:51+00:00","UserScreenname":"xamarinhq","Text":"To provide the best user experience we need access to the current network state of our users’ devices.\n\n...new from… https://t.co/w2ZGMgKqli","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":42,"FavoriteCount":23,"RawContent":null},{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null},{"Id":"1093196382901547008","CreatedAt":"2019-02-06T17:15:02+00:00","UserScreenname":"xamarinhq","Text":"On a recent #XamarinShow, Mike Parker from the Microsoft Mobile Customer Advisory Team that shows us how to easily… https://t.co/jdjf2oZXwI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":16,"RawContent":null},{"Id":"1092542167078326279","CreatedAt":"2019-02-04T21:55:25+00:00","UserScreenname":"xamarinhq","Text":"Walk through some techniques for separating the concerns of dev'ing a C/C++ library, a C# wrapper, &amp; a mobile app s… https://t.co/W1RmRSHzXZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":36,"RawContent":null},{"Id":"1091455153868296201","CreatedAt":"2019-02-01T21:56:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing .NET Foundation Open Membership. We're making some big changes to expand the #dotNET Foundation. We’re i… https://t.co/iePYJUdean","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":39,"RawContent":null},{"Id":"1091387761297362944","CreatedAt":"2019-02-01T17:28:13+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. Today, @JamesMontemagno highlights API of the Week, App Information; which gi… https://t.co/WlU6hQHbNl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":66,"FavoriteCount":22,"RawContent":null},{"Id":"1090678537491808256","CreatedAt":"2019-01-30T18:30:01+00:00","UserScreenname":"xamarinhq","Text":"Check out this super-interesting use-case for creating complex UI using FastGrid for Xamarin.Forms with many cell v… https://t.co/SNff8XhdJ3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":42,"RawContent":null},{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":71,"FavoriteCount":28,"RawContent":null},{"Id":"1088179823762161664","CreatedAt":"2019-01-23T21:01:02+00:00","UserScreenname":"xamarinhq","Text":"Just released: #VS2019 Preview 2 which includes tons of improvements for mobile devs to make you more productive wh… https://t.co/j4LgiuYkgc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":156,"FavoriteCount":74,"RawContent":null},{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":20,"RawContent":null},{"Id":"1085961073902129152","CreatedAt":"2019-01-17T18:04:30+00:00","UserScreenname":"xamarinhq","Text":"As the .NET community expands so should the community standups... We are pleased to introduce the expansion of the… https://t.co/EDO0vChQlR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2019-02-26T05:31:21.2073302Z","RunDurationInMilliseconds":2691}