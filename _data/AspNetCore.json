{"Data":{"Blog":{"FeedItems":[{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7 Preview 4. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null},{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7573929048","Type":"IssuesEvent","CreatedAt":"2018-04-23T19:19:15","Actor":"robinwilson16","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3086","RelatedDescription":"Opened issue \"RequireHttpsAttribute causes ERR_TOO_MANY_REDIRECTS on Ubuntu with Apache2\" (#3086) at aspnet/Home","RelatedBody":"Using .NET Core 2.0 if I follow the official documentation to enforce HTTPS the website fails to load with the error ERR_TOO_MANY_REDIRECTS.\r\n\r\nSteps to reproduce:\r\n1. Create new .NET Razor App: \r\ndotnet new razor -o aspnetcoreapp\r\n2. Add the two snippits of code from documentation detailed here:\r\n[https://docs.microsoft.com/en-us/aspnet/core/security/enforcing-ssl?view=aspnetcore-2.0](https://docs.microsoft.com/en-us/aspnet/core/security/enforcing-ssl?view=aspnetcore-2.0)\r\nDeploy to Apache2 running on Ubuntu 17.10 (not tested on older versions) where conf passes connection to Kestrel server using this code:\r\n`\r\nProxyPreserveHost On\r\nProxyPass /.well-known !\r\nProxyPass / http://127.0.0.1:5004/\r\nProxyPassReverse / http://127.0.0.1:5004/\r\n`\r\nIf code from step 2 is removed then the website works fine over HTTP or HTTPS (but obviously does not redirect) but if this code is added the sitefails to load with ERR_TOO_MANY_REDIRECTS over either HTTP or HTTPS.\r\n\r\nIt seems the methods have changed with .NET Core 2.1 but this has not yet been released."},{"Id":"7573537270","Type":"IssuesEvent","CreatedAt":"2018-04-23T18:04:42","Actor":"AceHack","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3085","RelatedDescription":"Opened issue \"Dependency Injection, allow registering open generic of Func<>\" (#3085) at aspnet/Home","RelatedBody":"I am able to do open generics of Types like the following\r\n\r\n        class Lazier<T> : Lazy<T> where T : class\r\n        {\r\n            public Lazier(IServiceProvider provider)\r\n                : base(() => provider.GetRequiredService<T>())\r\n            {\r\n            }\r\n        }\r\n\r\n        services.AddTransient(typeof(Lazy<>), typeof(Lazier<>));\r\n\r\n\r\nBut I have no way of doing this for Func<>\r\n\r\nThanks."},{"Id":"7573031926","Type":"IssuesEvent","CreatedAt":"2018-04-23T16:30:54","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3084","RelatedDescription":"Closed issue \"Single HttpClient instance in Proxy\" (#3084) at aspnet/Home","RelatedBody":"This is about [aspnet / Proxy](https://github.com/aspnet/Proxy), for which the issue tracker says I should post here.\r\n\r\nThe sources use a single instance of `HttpClient` for all requests, <s>which I believe is wrong because of the associated [connection starvation](https://aspnetmonsters.com/2016/08/2016-08-27-httpclientwrong/) issue. (Since 2.1 it lives in a service.)</s>\r\n\r\n...which is problematic because of [this issue](https://github.com/dotnet/corefx/issues/11224).\r\n\r\n"},{"Id":"7572483150","Type":"IssuesEvent","CreatedAt":"2018-04-23T15:03:47","Actor":"jtheisen","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3084","RelatedDescription":"Opened issue \"Single HttpClient instance in \" (#3084) at aspnet/Home","RelatedBody":"This is about [aspnet / Proxy](https://github.com/aspnet/Proxy), for which the issue tracker says I should post here.\r\n\r\nThe sources use a single instance of `HttpClient` for all requests, which I believe is wrong because of the associated [connection starvation](https://aspnetmonsters.com/2016/08/2016-08-27-httpclientwrong/) issue. (Since 2.1 it lives in a service.)"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7574666599","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:45:25","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1133","RelatedDescription":"Closed issue \"Change tests to target win7-x64 when https://github.com/aspnet/BuildTools/issues/471 is resolved\" (#1133) at aspnet/SignalR","RelatedBody":"See https://github.com/aspnet/SignalR/pull/1132#discussion_r151502108"},{"Id":"7574652566","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:42:12","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1983","RelatedDescription":"Closed issue \"Revisit Presence sample\" (#1983) at aspnet/SignalR","RelatedBody":"We need to revisit the Presence sample. We're making things internal and they are things the sample uses to construct the Hub in order to call OnUsersJoined/OnUsersLeft"},{"Id":"7574652150","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:42:06","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1960","RelatedDescription":"Closed issue \"ChatSample no worky\" (#1960) at aspnet/SignalR","RelatedBody":"The sample is not really functional right now, it runs but things like registering a user doesn't work.\r\n\r\nIf fixing everything is too much work, maybe we should just replace it with a simple Chat Hub like the one described here:  https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/\r\n\r\nI can submit a PR slimming it down to simple chat app like that if we want, since I just followed that walkthrough"},{"Id":"7574641537","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:39:50","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2138","RelatedDescription":"Opened issue \"Java Client\" (#2138) at aspnet/SignalR","RelatedBody":"Should support Android. Make sure it has enough `Factory` types to pass Java Style Guidelines.\r\n\r\n"},{"Id":"7574071857","Type":"IssuesEvent","CreatedAt":"2018-04-23T19:47:34","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2008","RelatedDescription":"Closed issue \"WinForms net461/471 with SignalR.Client throws on Connect\" (#2008) at aspnet/SignalR","RelatedBody":"Using 2.1-preview2 fina lbits:\r\n \r\nSetup SignalR server with /hub/chat via: https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/\r\nThis is working via chrome at https://localhost:44343/hubs/chat\r\n\r\n\r\nSetup WinForms client:\r\n```\r\n•\tNew WinForms project (net461) + Add preview2 SignalR.Client\r\n•\t  <package id=\"Microsoft.AspNetCore.Connections.Abstractions\" version=\"2.1.0-preview2-final\" targetFramework=\"net461\" />\r\n•\t  <package id=\"Microsoft.AspNetCore.Http.Connections.Client\" version=\"1.0.0-preview2-final\" targetFramework=\"net461\" />\r\n•\t  <package id=\"Microsoft.AspNetCore.Http.Connections.Common\" version=\"1.0.0-preview2-final\" targetFramework=\"net461\" />\r\n•\t  <package id=\"Microsoft.AspNetCore.Http.Features\" version=\"2.1.0-preview2-final\" targetFramework=\"net461\" />\r\n•\t  <package id=\"Microsoft.AspNetCore.SignalR.Client\" version=\"1.0.0-preview2-final\" targetFramework=\"net461\" />\r\n•\t  <package id=\"Microsoft.AspNetCore.SignalR.Client.Core\" version=\"1.0.0-preview2-final\" targetFramework=\"net461\" />\r\n•\t  <package id=\"Microsoft.AspNetCore.SignalR.Common\" version=\"1.0.0-preview2-final\" targetFramework=\"net461\" />\r\n•\t  <package id=\"Microsoft.Extensions.Configuration\" version=\"2.1.0-preview2-final\" targetFramework=\"net461\" />\r\n```\r\n\r\nTrying to connect via:\r\n\r\n``` \r\n        const string ServerURI = \"https://localhost:44343/hubs/chat\";\r\n            Console.WriteLine(\"Connecting to {0}\", ServerURI);\r\n \r\n            Connection = new HubConnectionBuilder().WithUrl(ServerURI).Build();\r\n            Connection.Closed += Connection_Closed;\r\n            Connection.On<string, string>(\"AddMessage\", (name, message) =>\r\n                this.Invoke((Action)(() =>\r\n                    RichTextBoxConsole.AppendText(String.Format(\"{0}: {1}\" + Environment.NewLine, name, message))\r\n                ))\r\n            );\r\n            try\r\n            {\r\n                await Connection.StartAsync(); => Blows up with: \r\n ```\r\n\r\n```\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.Numerics.Vectors, Version=4.1.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'System.Numerics.Vectors, Version=4.1.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at System.SpanHelpers.IndexOf(Byte& searchSpace, Byte value, Int32 length)\r\n   at System.MemoryExtensions.IndexOf[T](ReadOnlySpan`1 span, T value)\r\n   at System.Buffers.BuffersExtensions.PositionOf[T](ReadOnlySequence`1& source, T value)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Formatters.TextMessageParser.TryParseMessage(ReadOnlySequence`1& buffer, ReadOnlySequence`1& payload)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.HandshakeProtocol.TryParseResponseMessage(ReadOnlySequence`1& buffer, HandshakeResponseMessage& responseMessage)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<HandshakeAsync>d__38.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<StartAsyncCore>d__25.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<StartAsyncCore>d__25.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<StartAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7574813837","Type":"IssuesEvent","CreatedAt":"2018-04-23T22:21:52","Actor":"AHHejazi","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7700","RelatedDescription":"Opened issue \"UrlResolutionTagHelper+EncodeFirstSegmentContent net::ERR_ABORTED\" (#7700) at aspnet/Mvc","RelatedBody":"i have this problem with MVC Core \r\n\r\n[https://stackoverflow.com/questions/49971207/urlresolutiontaghelperencodefirstsegmentcontent-neterr-aborted](url) Please any help"},{"Id":"7574347694","Type":"IssuesEvent","CreatedAt":"2018-04-23T20:40:57","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7632","RelatedDescription":"Closed issue \"Verify the fix for MVC.Testing incompatible with conventional routing in current MVC apps using the shared runtime\" (#7632) at aspnet/Mvc","RelatedBody":"Verifying that the changes here work E2E.\r\n\r\nOriginal issue: https://github.com/aspnet/Mvc/issues/7617"},{"Id":"7574002388","Type":"PullRequestEvent","CreatedAt":"2018-04-23T19:33:41","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7642","RelatedDescription":"Closed pull request \"[Fixes #7587] No easy way to change ASPNETCORE_ENVIRONMENT\" (#7642) at aspnet/Mvc","RelatedBody":"Set the environment to development by default. This allows users to write tests as long as the app runs with dotnet run/F5 on visual studio."},{"Id":"7574000642","Type":"PullRequestEvent","CreatedAt":"2018-04-23T19:33:21","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7646","RelatedDescription":"Closed pull request \"[Fixes #7635] Provide a way to configure clients in WebApplicationFactory\" (#7646) at aspnet/Mvc","RelatedBody":""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7574772745","Type":"IssuesEvent","CreatedAt":"2018-04-23T22:11:10","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1762","RelatedDescription":"Reopened issue \"External login provider is not accessible when using global authorize filter\" (#1762) at aspnet/Identity","RelatedBody":"When an external login provider is configured, and a global authorize filter is applied, clicking the button to navigate to the provider (say Twitter sign in) redirects back to the current Login page.\r\n\r\nTo allow anonymous users to log in to an external provider while using a global authorize filter, the user can scaffold the `ExternalLogin.cshtml.cs` page and add the `AllowAnonymous` attribute to the `ExternalLoginModel`.\r\n\r\nPlease note, if this is something we want to allow by default, a corresponding change must also be made in aspnet/Scaffolding repo."},{"Id":"7574748122","Type":"IssuesEvent","CreatedAt":"2018-04-23T22:04:54","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1762","RelatedDescription":"Closed issue \"External login provider is not accessible when using global authorize filter\" (#1762) at aspnet/Identity","RelatedBody":"When an external login provider is configured, and a global authorize filter is applied, clicking the button to navigate to the provider (say Twitter sign in) redirects back to the current Login page.\r\n\r\nTo allow anonymous users to log in to an external provider while using a global authorize filter, the user can scaffold the `ExternalLogin.cshtml.cs` page and add the `AllowAnonymous` attribute to the `ExternalLoginModel`.\r\n\r\nPlease note, if this is something we want to allow by default, a corresponding change must also be made in aspnet/Scaffolding repo."},{"Id":"7574739710","Type":"IssuesEvent","CreatedAt":"2018-04-23T22:02:48","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1767","RelatedDescription":"Closed issue \"Wrong file name _Layout.chstml after scafolding Identity\" (#1767) at aspnet/Identity","RelatedBody":"Visual Studio 2017 15.7 Preview 4, .NET Core SDK 2.1.300-preview2-008533\r\n\r\nNew Project\r\nASP.NET Core Web Application\r\nWebApplication with indvidual Accounts\r\nNew Scaffolded Item\r\nIdentity\r\nCheck only \"Account/Login\"\r\nThere is a typo now in Areas/Identity/Pages/_ViewStart.cshtml\r\n\r\n@{\r\n    Layout = \"/Pages/Shared/_Layout.**chstml**\";\r\n}\r\n\r\n**Should be:**\r\n\r\n@{\r\n    Layout = \"/Pages/Shared/_Layout.cshtml\";\r\n}\r\n"},{"Id":"7574610030","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:33:12","Actor":"HSchwichtenberg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1767","RelatedDescription":"Opened issue \"Wrong file name _Layout.chstml after scafolding Identity\" (#1767) at aspnet/Identity","RelatedBody":"Visual Studio 2017 15.7 Preview 4, .NET Core SDK 2.1.300-preview2-008533\r\n\r\nNew Project\r\nASP.NET Core Web Application\r\nWebApplication with indvidual Accounts\r\nNew Scaffolded Item\r\nIdentity\r\nCheck only \"Account/Login\"\r\nThere is a typo now in Areas/Identity/Pages/_ViewStart.cshtml\r\n\r\n@{\r\n    Layout = \"/Pages/Shared/_Layout.**chstml**\";\r\n}\r\n\r\n**Should be:**\r\n\r\n@{\r\n    Layout = \"/Pages/Shared/_Layout.cshtml\";\r\n}\r\n"},{"Id":"7571831812","Type":"IssuesEvent","CreatedAt":"2018-04-23T13:26:02","Actor":"ClassicDarkChocolate","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1765","RelatedDescription":"Closed issue \"The change of SecurityStamp in ASP.NET Core 2.1\" (#1765) at aspnet/Identity","RelatedBody":"What is the main reason for changing SecurityStamp generating method? I originally parse it and store as a GUID type variable in my custom mongo identity provider and now it changes.\r\n\r\n2.0: https://github.com/aspnet/Identity/blob/rel/2.0.0/src/Microsoft.Extensions.Identity.Core/UserManager.cs#L2342\r\nCurrent: https://github.com/aspnet/Identity/blob/dev/src/Core/UserManager.cs#L2414"},{"Id":"7567656723","Type":"IssuesEvent","CreatedAt":"2018-04-22T12:30:45","Actor":"CoderJason123","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1766","RelatedDescription":"Opened issue \"stay logged in for longer than 30 minutes - expire what?\" (#1766) at aspnet/Identity","RelatedBody":"Hello.  So there's a ton of information regarding cookies and expiration, and the ticket vs the cookie containing the ticket.  I get that.\r\n\r\nI just need my users to be able to stay logged in, for let's say for 8 hours, if they choose \"remember\" me, which then gets passed to signinmanager.signinasync().  My \"cookie\" shows 2 weeks of life in the browser .. which I believe this is from the options.expiretimespan property.  I'm ok with this.\r\n\r\nI just do not understand from other articles and logged issues how to allow that 14 day cookie to actually contain \"something\" (need the term please) that allows them to close the browser, re-open it in 4 hours, and have to log back in because of a 401.  What is the term i am looking for, and where can I set it to make their \"credentials via the cookie\" value say for 4 hours.  4 hours is probably a good example."},{"Id":"7566493705","Type":"IssuesEvent","CreatedAt":"2018-04-21T21:07:35","Actor":"ClassicDarkChocolate","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1765","RelatedDescription":"Opened issue \"The change of SecurityStamp in ASP.NET Core 2.1\" (#1765) at aspnet/Identity","RelatedBody":"What is the main reason for changing SecurityStamp generating method? I originally parse it and store as a GUID type variable in my custom mongo identity provider and now it changes.\r\n\r\n2.0: https://github.com/aspnet/Identity/blob/rel/2.0.0/src/Microsoft.Extensions.Identity.Core/UserManager.cs#L2342\r\nCurrent: https://github.com/aspnet/Identity/blob/dev/src/Core/UserManager.cs#L2414"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7575158026","Type":"IssuesEvent","CreatedAt":"2018-04-24T00:05:11","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2054","RelatedDescription":"Reopened issue \"Add IConnectionLifetimeFeature to Microsoft.AspNetCore.Connections.Abstractions\" (#2054) at aspnet/KestrelHttpServer","RelatedBody":"```C#\r\npublic interface IConnectionLifetimeFeature\r\n{\r\n    CancellationToken ConnectionClosed { get; }\r\n    void Abort();\r\n}\r\n```\r\n\r\nThese should also be exposed on `ConnectionContext`\r\n\r\nRelated to: #1980 "},{"Id":"7575157056","Type":"IssuesEvent","CreatedAt":"2018-04-24T00:04:51","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2054","RelatedDescription":"Closed issue \"Add IConnectionLifetimeFeature to Microsoft.AspNetCore.Connections.Abstractions\" (#2054) at aspnet/KestrelHttpServer","RelatedBody":"```C#\r\npublic interface IConnectionLifetimeFeature\r\n{\r\n    CancellationToken ConnectionClosed { get; }\r\n    void Abort();\r\n}\r\n```\r\n\r\nThese should also be exposed on `ConnectionContext`\r\n\r\nRelated to: #1980 "},{"Id":"7574907464","Type":"PullRequestEvent","CreatedAt":"2018-04-23T22:47:14","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2520","RelatedDescription":"Opened pull request \"WIP: Convert non-serializable data to dictionary lookup\" (#2520) at aspnet/KestrelHttpServer","RelatedBody":"@halter73: Do you agree with this pattern before I convert the remaining tests?"},{"Id":"7574845460","Type":"PullRequestEvent","CreatedAt":"2018-04-23T22:30:19","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2519","RelatedDescription":"Opened pull request \"Remove unused theory data\" (#2519) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7574682348","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:49:05","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2515","RelatedDescription":"Closed issue \"Unit Tests: Don't log messages for expected exceptions\" (#2515) at aspnet/KestrelHttpServer","RelatedBody":"Currently, the Kestrel unit tests log several messages for expected exceptions, which makes it much harder to find real issues in Kestrel test logs.  Exceptions should only appear in the test logs if a test failed.\r\n\r\n```\r\n[16:03:43] :\t [Step 4/7]   Log Critical[0]: Unable to start Kestrel. System.InvalidOperationException: Unrecognized scheme in server address 'ftp://localhost'. Only 'http://' is supported.\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 125\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n[16:03:43] :\t [Step 4/7]   Log Critical[0]: Unable to start Kestrel. System.InvalidOperationException: Unrecognized scheme in server address 'ssh://localhost'. Only 'http://' is supported.\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 125\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n[16:03:43] :\t [Step 4/7]   Log Critical[0]: Unable to start Kestrel. System.IO.IOException: Failed to bind to address http://127.0.0.1:56846: address already in use. ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted ---> System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted\r\n[16:03:43] :\t [Step 4/7]      at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n[16:03:43] :\t [Step 4/7]      at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n[16:03:43] :\t [Step 4/7]      at System.Net.Sockets.Socket.Bind(EndPoint localEP)\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 93\r\n[16:03:43] :\t [Step 4/7]      --- End of inner exception stack trace ---\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 97\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext() in /_/src/Kestrel.Core/KestrelServer.cs:line 155\r\n[16:03:43] :\t [Step 4/7]   --- End of stack trace from previous location where exception was thrown ---\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 104\r\n[16:03:43] :\t [Step 4/7]      --- End of inner exception stack trace ---\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 108\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/LocalhostListenOptions.cs:line 45\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n[16:03:43] :\t [Step 4/7]   Log Critical[0]: Unable to start Kestrel. System.IO.IOException: Failed to bind to address http://[::1]:56900: address already in use. ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted ---> System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted\r\n[16:03:43] :\t [Step 4/7]      at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n[16:03:43] :\t [Step 4/7]      at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n[16:03:43] :\t [Step 4/7]      at System.Net.Sockets.Socket.Bind(EndPoint localEP)\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 93\r\n[16:03:43] :\t [Step 4/7]      --- End of inner exception stack trace ---\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 97\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext() in /_/src/Kestrel.Core/KestrelServer.cs:line 155\r\n[16:03:43] :\t [Step 4/7]   --- End of stack trace from previous location where exception was thrown ---\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 104\r\n[16:03:43] :\t [Step 4/7]      --- End of inner exception stack trace ---\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 108\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/ListenOptions.cs:line 190\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n[16:03:43] :\t [Step 4/7]   Log Critical[0]: Unable to start Kestrel. System.InvalidOperationException: Dynamic port binding is not supported when binding to localhost. You must either bind to 127.0.0.1:0 or [::1]:0, or both.\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions..ctor(Int32 port) in /_/src/Kestrel.Core/LocalhostListenOptions.cs:line 22\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 141\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n[16:03:43] :\t [Step 4/7]   Log Critical[0]: Unable to start Kestrel. System.IO.IOException: Failed to bind to address http://[::1]:57009: address already in use. ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted ---> System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted\r\n[16:03:43] :\t [Step 4/7]      at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n[16:03:43] :\t [Step 4/7]      at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n[16:03:43] :\t [Step 4/7]      at System.Net.Sockets.Socket.Bind(EndPoint localEP)\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 93\r\n[16:03:43] :\t [Step 4/7]      --- End of inner exception stack trace ---\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 97\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext() in /_/src/Kestrel.Core/KestrelServer.cs:line 155\r\n[16:03:43] :\t [Step 4/7]   --- End of stack trace from previous location where exception was thrown ---\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 104\r\n[16:03:43] :\t [Step 4/7]      --- End of inner exception stack trace ---\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 108\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/LocalhostListenOptions.cs:line 56\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n[16:03:43] :\t [Step 4/7]      at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n```"},{"Id":"7574681334","Type":"PullRequestEvent","CreatedAt":"2018-04-23T21:48:50","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2516","RelatedDescription":"Merged pull request \"Disable writing to console if exceptions are expected\" (#2516) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/issues/2515"},{"Id":"7574449875","Type":"PullRequestEvent","CreatedAt":"2018-04-23T21:00:55","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2518","RelatedDescription":"Opened pull request \"[WIP] IgnoreNullHeaderValues test debugging\" (#2518) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7575495212","Type":"PullRequestEvent","CreatedAt":"2018-04-24T02:01:08","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2294","RelatedDescription":"Merged pull request \"Remove explicit reference to NETStandard.Library when using .NET Framework\" (#2294) at aspnet/Razor","RelatedBody":"I've been informed it's bad form to have NETStandard.Library in your package graph, so let's prune it.\r\n\r\nThis removes NETStandard.Library from the generated nuspec on .NET Framework projects, and adds the one package that provides API we actually need: System.Runtime.InteropServices.RuntimeInformation"},{"Id":"7575208030","Type":"IssuesEvent","CreatedAt":"2018-04-24T00:21:38","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2296","RelatedDescription":"Opened issue \"Publishing an app that references a Razor class library does not publish the class library views dll\" (#2296) at aspnet/Razor","RelatedBody":"Found this on @jbagga's VM when debugging a publish to Azure scenario. The scenario was Main App references Razor Pages Class Library. When publishing to a folder from VS, the views dll did not get copied over to the publish directory. Publishing from the command line worked fine."},{"Id":"7574998548","Type":"IssuesEvent","CreatedAt":"2018-04-23T23:14:25","Actor":"RandyBuchholz","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2289","RelatedDescription":"Closed issue \"Error - Referencing C# in Script Class Body\" (#2289) at aspnet/Razor","RelatedBody":"In a `<script>` block in a RazorPage, using `@` errors when inside a `class` body. It works fine inside the `constructor` .  \r\n\r\nI'm templating some script in my pages using C# and `@`. In most places, using `@xxx` will render text. It errors in VS when used inside the body of a JavaScript Class.\r\n\r\n```\r\n// Somewhere\r\nViewContext.ViewData.Add(\"Foo\", \"Bar\")\r\n\r\n// Works\r\n<script>\r\n    @ViewContext.ViewData[\"Foo\"]\r\n    class TestClass {  }\r\n</script>\r\n\r\n// Works\r\n<script>\r\n    class TestClass {\r\n         constructor() {\r\n             @ViewContext.ViewData[\"Foo\"]\r\n         }\r\n    }\r\n</script>\r\n\r\n// Error - Unexpected Token\r\n<script>\r\n    class TestClass {\r\n        @ViewContext.ViewData[\"Foo\"]\r\n    }\r\n</script>\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/13967891/38938131-768f1726-42ea-11e8-8a96-f74fac7e0443.png)\r\n"},{"Id":"7574961138","Type":"IssuesEvent","CreatedAt":"2018-04-23T23:02:44","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2295","RelatedDescription":"Opened issue \"Publishing a project with UI class library publishes cshtml files from class library\" (#2295) at aspnet/Razor","RelatedBody":"The issue crops up regardless of `CopyRazorGenerateFilesToPublishDirectory`  setting. When publishing, Razor SDK removes cshtml files from the current project from being published, but it does not prevent views from referenced UI class libraries from being published. \r\n\r\nRelevant code: https://github.com/aspnet/Razor/blob/dev/src/Microsoft.NET.Sdk.Razor/build/netstandard2.0/Sdk.Razor.CurrentVersion.targets#L504-L510"},{"Id":"7574616622","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:34:33","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2262","RelatedDescription":"Closed issue \"Precompiled Views Not Found\" (#2262) at aspnet/Razor","RelatedBody":"I'm doing something that I know is unsupported and attempting to host an ASP.NET Core MVC site within a UWP app.  I have Kestrel working, Routing is working and requests hit my controller, but I'm stuck when it comes to Razor.  I have to use views precompiled at build time to do this and I have the *.Views.dll assembly being generated, but I'm getting the following exception when it tries to find the view...\r\n\r\nSystem.InvalidOperationException: The view 'Index' was not found. The following locations were searched:\r\n/Views/Home/Index.cshtml\r\n/Views/Shared/Index.cshtml\r\n/Pages/Shared/Index.cshtml\r\n"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":247,"FavoriteCount":146,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":98,"FavoriteCount":56,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":159,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2018-04-24T05:30:12.75055Z","RunDurationInMilliseconds":7515}