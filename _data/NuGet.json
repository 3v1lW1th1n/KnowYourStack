{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10607810869","Type":"IssuesEvent","CreatedAt":"2019-10-11T05:29:42","Actor":"KarthickR5","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7620","RelatedDescription":"Opened issue \"how to match the searching keyword with package in nuget.org\" (#7620) at NuGet/NuGetGallery","RelatedBody":"Hi,\r\n When i search using this keyword **asp.net core datagrid** this means patform name(**asp.net core**) and control name(**Datagrid**).\r\n\r\nHow this package **Microsoft.AspNetCore.Http** shows in top. this package does not contains search keyword in package name and tags. also download count was lesser than second package.\r\n\r\n![Sample Screenshot](https://user-images.githubusercontent.com/56252418/66626422-cf6ce780-ec15-11e9-93e6-f76b0f5eacaa.png)\r\n\r\nCan you please explain, in which basis this package(Microsoft.AspNetCore.Http) shows in top? and how this keyword match with that package?"},{"Id":"10607562634","Type":"PullRequestEvent","CreatedAt":"2019-10-11T04:21:34","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7619","RelatedDescription":"Opened pull request \"[DB Migration] Use new EF6.3 and remove the fix. \" (#7619) at NuGet/NuGetGallery","RelatedBody":"Entity Framework 6.3 has released, and provide another way to pass DbContext to the Migrator;\r\nDepend on EF6.3 and remove the hacky fix.\r\n\r\nRef:\r\nhttps://github.com/aspnet/EntityFramework6/commit/9690d3c21e98cd85a6a5e8312af53de286173b22"},{"Id":"10607398905","Type":"PullRequestEvent","CreatedAt":"2019-10-11T03:36:27","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7615","RelatedDescription":"Closed pull request \"[DB Migration] Use new EF6.3 and remove the fix. \" (#7615) at NuGet/NuGetGallery","RelatedBody":"Entity Framework 6.3 has released, and provide another way to pass DbContext to the Migrator;\r\nDepend on EF6.3 and remove the hacky fix.\r\n\r\nRef:\r\nhttps://github.com/aspnet/EntityFramework6/commit/9690d3c21e98cd85a6a5e8312af53de286173b22"},{"Id":"10606114797","Type":"PullRequestEvent","CreatedAt":"2019-10-10T22:12:53","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7618","RelatedDescription":"Merged pull request \"[HOTFIX] Add missing period\" (#7618) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10605784438","Type":"PullRequestEvent","CreatedAt":"2019-10-10T21:18:13","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7618","RelatedDescription":"Opened pull request \"[Gravatar Proxy] Add missing period\" (#7618) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10605618217","Type":"PullRequestEvent","CreatedAt":"2019-10-10T20:53:54","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7614","RelatedDescription":"Merged pull request \"Display SHA-256 instead of SHA-1 for user certificates\" (#7614) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/Engineering/issues/2758.\r\n\r\nIn general we are avoiding the use of SHA-1 anyway as a cleanliness practice. SHA-256 or greater is the hash algorithm recommendation.\r\n\r\n# Old\r\n\r\n![image](https://user-images.githubusercontent.com/94054/66528651-9289df00-eab5-11e9-9ff8-0bc7f8bdc955.png)\r\n\r\n# New\r\n\r\n![image](https://user-images.githubusercontent.com/94054/66589606-bc89e280-eb43-11e9-9846-438a96fb5d1f.png)\r\n\r\n"},{"Id":"10604762656","Type":"IssuesEvent","CreatedAt":"2019-10-10T18:54:31","Actor":"nkolev92","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7617","RelatedDescription":"Opened issue \"Support for `packageid:NuGet.*`\" (#7617) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nSearch, discovery of packages by id \r\n\r\n### Describe the solution you'd like\r\nSupport for packageid search with wildcards. \r\n\r\n`Name.` sort of works for the popular terms today, but it might contain extra packages where the id doesn't start with the wanted prefix. \r\n\r\n### Additional context"},{"Id":"10603584317","Type":"IssuesEvent","CreatedAt":"2019-10-10T16:16:43","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7585","RelatedDescription":"Closed issue \"[Deployment] Week of 2019-09-22\" (#7585) at NuGet/NuGetGallery","RelatedBody":"# Deployments\r\n- INT\r\n  - [x] NuGet.Services.Metadata build [3086661](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3086661)\r\n    - [x] Catalog2registration reg3 (regular, no functional change, logging update);\r\n      - Release: [459426](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=459426)\r\n    - [x] Catalog2registration reg4 (new registration hive, also delivers proper lightning code to proper VMs);\r\n      - Release: [459426](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=459426)  \r\n  - [x] NuGet.Services.Metadata build [3088284](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_build/index?buildId=3088284)\r\n    - [x] MonitoringProcessor (search monitoring);\r\n      - Release: [460010](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=460010)\r\n    - [x] Monitoring2Monitoring (search monitoring);\r\n      - Release: [460009](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=460009)\r\n    - [x] Db2Monitoring (search monitoring);\r\n      - Release: [460015](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=460015)\r\n    - [x] Catalog2Monitoring (search monitoring);\r\n      - Release: [460008](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=460008)\r\n    - [x] Catalog2AzureSearch (logging improvement, all FC icons = off);\r\n      - Release: [460013](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=460013)\r\n    - [x] Auxiliary2AzureSearch (logging improvement);\r\n      - Release: [460016](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=460016)\r\n    - [x] Owners2AzureSearch (logging improvement);\r\n      - Release: [460014](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=460014)\r\n  - [x] Azure Search Service build [3088292](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_build/index?buildId=3088292)\r\n    - [x] Azure Search Service;\r\n      - Release: [463883](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=463883)\r\n  - [x] NuGet.Services.Metadata build [3102978](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3102978)\r\n    - [x] Catalog2Dnx; (SHA512)\r\n      - Release: [464706](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=464706)\r\n  - [x] NuGet.Jobs build  [3096596](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3096596)\r\n    - [x] Validation.Orchestrator; (SHA512)\r\n      - Release: [462293](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=462293)\r\n  - [x] NuGet.Internal.Jobs build [3076148](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3076148)\r\n    - [x] NuGet.Jobs.Validation.EsrpSubmitter; (SHA512)\r\n      - Release: [455843](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=455843)\r\n\r\n- PROD\r\n  - [x] NuGet.Services.Metadata build [3102978](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3102978) Release [470658](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=470658)\r\n    - [x] Catalog2registration reg3;\r\n    - [x] Catalog2registration reg4;\r\n  - [x] NuGet.Services.Metadata build [3088284](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_build/index?buildId=3088284)\r\n    - [x] MonitoringProcessor;\r\n    - [x] Monitoring2Monitoring;\r\n    - [x] Db2Monitoring;\r\n    - [x] Catalog2Monitoring;\r\n    - [x] Catalog2AzureSearch;\r\n    - [x] Auxiliary2AzureSearch;\r\n    - [x] Owners2AzureSearch;    \r\n  - [x] Azure Search Service build [3088292](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_build/index?buildId=3088292)\r\n    - [x] Azure Search Service;\r\n  - [x] NuGet.Services.Metadata build [3102978](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3102978)\r\n    - [x] Catalog2Dnx; (SHA512)\r\n      - Release: [470140](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=470140)\r\n  - [x] NuGet.Jobs build  [3096596](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3096596)\r\n    - [x] Validation.Orchestrator; (SHA512)\r\n      - Release: [470152](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=470152)\r\n  - [x] NuGet.Internal.Jobs build [3076148](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3076148)\r\n    - [x] NuGet.Jobs.Validation.EsrpSubmitter; (SHA512)\r\n      - Release: [470174](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=470174)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10605432223","Type":"IssuesEvent","CreatedAt":"2019-10-10T20:27:42","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8684","RelatedDescription":"Opened issue \"NU5131 issues\" (#8684) at NuGet/Home","RelatedBody":"NU5131 was added to try to encourage packages that [select which assemblies are used by projects](https://docs.microsoft.com/en-us/nuget/create-packages/select-assemblies-referenced-by-projects) to work with both `packages.config` and `PackageReference`.\r\n\r\nWe are currently aware of two issues:\r\n\r\n## Packages build from MSBuild (no nuspec)\r\n\r\nA project that puts a file in `ref/<tfm>/` will trigger the warning, therefore asking the package author to create a `<references>` element in the nuspec. However, the MSBuild pack tasks doesn't provide a way to specify it.\r\n\r\n## Missing runtime files\r\n\r\nSee #3830.\r\n\r\n"},{"Id":"10604511299","Type":"IssuesEvent","CreatedAt":"2019-10-10T18:21:04","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8683","RelatedDescription":"Opened issue \"Nuget - Show the actual assembly version\" (#8683) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/768974/nuget-show-the-actual-assembly-version.html)._\n\n---\nJust spent a pretty big chunk of time trying to solve an issue where Swashbuckle is dependent on a specific version of System.ComponentModel.Annotations - 4.2.0.0.  \n\nHave eventually, after much trial and error, discovered that Nuget package version 4.4.1 contains assembly version 4.2.0.0, as required by Swashbuckle.\n\nDependency issues aside, it would be extremely helpful if you could see the full actual assembly version details when viewing each Nuget package, big time saver in situations like this.\n\n---\n### Original Comments\n\n#### Jane Wu [MSFT] on 10/10/2019, 00:14 AM: \n\n<p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  Weâ€™ll provide an update once the issue has been triaged by the product team.</p>\n"},{"Id":"10604423911","Type":"IssuesEvent","CreatedAt":"2019-10-10T18:09:21","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8682","RelatedDescription":"Opened issue \"Allow option to sort default projects in package manager console by alphabetical order\" (#8682) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/759757/allow-option-to-sort-default-projects-in-package-m.html)._\n\n---\n<p>With a large solution containing many projects, and solution folders which contain projects as well, the Default Projects combobox in the Package Manager Console is difficult to navigate for finding the project you wish to target. Having the combobox populate by alphabetical order or some other means which reflects the solutions explorer's layout (such as a treeview) would greatly help navigation. </p><p>Alternatively, having the combo box allow text input which filters the list via regex or simply a string.contains methodology would help to narrow down and find a project as well.</p>\n\n---\n### Original Comments\n\n#### Jane Wu [MSFT] on 10/8/2019, 05:28 AM: \n\n<p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  Weâ€™ll provide an update once the issue has been triaged by the product team.</p>\n"},{"Id":"10604295890","Type":"IssuesEvent","CreatedAt":"2019-10-10T17:52:17","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8681","RelatedDescription":"Opened issue \"Analyze unused NugetPackages\" (#8681) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/749927/analyze-unused-nugetpackages.html)._\n\n---\nWould be awesome if VS 2019 had a feature to go through and analyze unused nuget package references. Please disregard if this is something that is already in the works. As a developer, this feature would make maintenance a lot easier.\n\n---\n### Original Comments\n\n#### Jane Wu [MSFT] on 9/27/2019, 00:04 AM: \n\n<p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  Weâ€™ll provide an update once the issue has been triaged by the product team.</p>\n"},{"Id":"10604185999","Type":"IssuesEvent","CreatedAt":"2019-10-10T17:37:29","Actor":"fhqwhgads","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8680","RelatedDescription":"Opened issue \"Nuget Restore/Install of packages.config from local feed with non-normalized versions fails to locate nupkg\" (#8680) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.2.0.6090 (reproduces back to at least 3.6)\r\n\r\ndotnet.exe --version (if appropriate): N/A\r\n\r\nVS version (if appropriate): N/A\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Server 2016 v1607 (14393.3181). This is not specific to a particular version of Windows.\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Locate or create a NuGet package whose version can be normalized (eg. Owin 1.0 can normalize to Owin 1.0.0). Legacy packages with 4-number versioning and a trailing 0 also apply (Foo 1.2.3.0 normalize to Foo 1.2.3). Azure DevOps (ADO) may also have some packages with extraneous 0's such as Package.1.2.01 instead of the normalized Package.1.2.1.\r\n\r\n2. Generate the .nupkg.sha512 file, or use the corresponding file from the user's global-cache if the package was downloaded via NuGet\r\n\r\n3. Place the .nupkg, .nupkg.sha512, and .nuspec files into a directory (eg. C:\\Test) following the V3 cache format (eg. C:\\Test\\Owin\\1.0.0\\<files>). If the package was downloaded via NuGet, using the global-cache directory or copying its contents will suffice.\r\n\r\n4. De-normalize the nupkg and nupkg.sha512 file names (eg. make them Owin.1.0.nupkg and Owin.1.0.nupkg.sha512)\r\n\r\n5. Generate a packages.config requesting the test package. It does not matter if the version is normalized or not (ie. requesting 1.0 and 1.0.0 will both reproduce this issue)\r\n\r\n6. Add the test directory from step 3 as a NuGet source. Preferably, remove all other package sources from nuget.config (or generate a new nuget.config).\r\n\r\n7. Run nuget restore <your-packages.config> -OutputDirectory <somewhere> -NoCache\r\n\r\nThe NoCache flag is to avoid finding the package in the user's global-cache. Omit the flag if using the global cache as the test directory in step 3.\r\n\r\nExpected behavior: nuget locates and restores the package.\r\nActual behavior: nuget does not locate the nupkg and does not restore the package.\r\n\r\n## Other suggested things\r\n\r\n### Notes\r\n- nuget will successfully restore the package if the source is not using the hierarchical folder structure (eg. C:\\Test\\Owin.1.0.nupkg instead of C:\\Test\\Owin\\1.0.0\\Owin.1.0.nupkg) and will do so regardless of mismatch between nupkg name and the version requested in packages.config\r\n- When restoring a package nuget will place the nupkg on disk as the remote sends it but will always normalize the nupkg in the user's global cache. For example, If ADO or nuget.org send Owin.1.0.nupkg, nuget will place Owin.1.0.nupkg in the destination but place Owin.1.0.0.nupkg and Owin.1.0.0.nupkg.sha512 in %HOMEDIR%\\.nuget\\packages\r\n- Our use case is that we take the package downloaded by nuget and propagate it to other machines to avoid sending requests to ADO packaging feeds.\r\n\r\nPer discussion with @rrelyea, there are four potential paths to fixing this:\r\n1. Fix the packages when we propagate them to have normalized versions in their file names.\r\n2a. Fix nuget to normalize nupkg files in the destination location\r\n2b. Make nuget check for non-normalized nupkgs when traversing a hierarchical source\r\n3. If nuget.org always returns normalized nupkgs, fix ADO to also return normalized nupkgs\r\n4. Effectively do not propagate these packages to other machines and have nuget always send requests to package feeds.\r\n\r\n### Verbose Logs\r\n\r\nC:\\Foo>nuget.exe restore packages.config -OutputDirectory C:\\Foo -Verbosity detailed -NoCache\r\nNuGet Version: 5.2.0.6090\r\nRestoring NuGet package OWin.1.0.0.\r\nWARNING: Unable to find version '1.0.0' of package 'OWin'.\r\n  file://C:/Test: Package 'OWin.1.0.0' is not found on source 'file://C:/Test'.\r\n\r\nWARNING: Unable to find version '1.0.0' of package 'OWin'.\r\n  file://C:/Test: Package 'OWin.1.0.0' is not found on source 'file://C:/Test'.\r\n\r\n\r\nErrors in packages.config projects\r\n    Unable to find version '1.0.0' of package 'OWin'.\r\n      file://C:/Test: Package 'OWin.1.0.0' is not found on source 'file://C:/Test'.\r\n\r\nNuGet Config files used:\r\n    C:\\Users\\joshumay\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n\r\nFeeds used:\r\n    file://C:/Test\r\n\r\n### Sample Project\r\nTest package layout: [TestPackageSource.zip](https://github.com/NuGet/Home/files/3713785/TestPackageSource.zip)\r\nTest packages.config: [TestPackagesConfig.zip](https://github.com/NuGet/Home/files/3713788/TestPackagesConfig.zip)\r\n"},{"Id":"10600474028","Type":"IssuesEvent","CreatedAt":"2019-10-10T10:07:23","Actor":"KarthickR5","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8679","RelatedDescription":"Opened issue \"Showing message like \" Blocked by package.config\"\" (#8679) at NuGet/Home","RelatedBody":"In VS Manage Nuget Packages window, When choose nuget and see the listed versions, the message showing like   **Blocked by package.config** after under this message all the version again listed.\r\n\r\nCan anyone tell me the reason why shown that message like that?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"âš  Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Folloâ€¦ https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?â€¦ https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-10-11T05:30:43.0465682Z","RunDurationInMilliseconds":2029}