{"Data":{"Angular-Issues":{"Issues":[{"Id":"566644589","IsPullRequest":true,"CreatedAt":"2020-02-18T04:52:27","Actor":"chivesrs","Number":"35514","RawContent":null,"Title":"docs(upgrade): add instructions for more AngularJS related typings","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35514","RelatedDescription":"Open PR \"docs(upgrade): add instructions for more AngularJS related typings\" (#35514)"},{"Id":"566550444","IsPullRequest":false,"CreatedAt":"2020-02-17T22:55:07","Actor":"ayazhafiz","Number":"35513","RawContent":null,"Title":"Language Service: TypeCheckBlock Compiler Host","State":"open","Body":"# üöÄ feature request\r\n\r\n### Relevant Package\r\n\r\n@angular/language-service \r\n\r\n\r\n### Description\r\n\r\nThis issue tracks a proposal for a specialized ts.CompilerHost in the language service to support \r\n\r\n- The construction of TypeCheck Blocks inside the compiler\r\n- The construction of a proposed interface to tsc called a Scratchpad.\r\n\r\nPlease view and comment on the proposal document at https://docs.google.com/document/d/1fubbQvTbhVQ2PU0rLp0z8WmMbsfd4pkaC2aKbmNNW-Y/edit#heading=h.w1pyacv6zvcq.\r\n\r\nKeeping this issue as a status tracker.\r\n","Url":"https://github.com/angular/angular/issues/35513","RelatedDescription":"Open issue \"Language Service: TypeCheckBlock Compiler Host\" (#35513)"},{"Id":"566549245","IsPullRequest":false,"CreatedAt":"2020-02-17T22:50:20","Actor":"ayazhafiz","Number":"35512","RawContent":null,"Title":"Language Service: Template Binding Parser","State":"open","Body":"# üöÄ feature request\r\n\r\n### Relevant Package\r\n\r\n@angular/language-service \r\n\r\n\r\n## Description\r\n\r\nToday, the Language Service relies entirely on the Angular compiler for parsing of template source code. In most cases, this is the ideal solution. A notable exception is the parsing of template bindings -- while the compiler preserves _template semantics_ of parsed bindings, it does not preserve their _expression semantics_. This distinction is now elaborated.\r\n\r\nA template semantic refers to the semantic of the template binding in relation to the rest of the template. For example, given the expression\r\n\r\n```html\r\n<div *ngFor=\"let num of nums; index as i; trackBy: hasher\"></div>\r\n```\r\n\r\na run of the `ngFor` template attribute through the template binding parser gives a set of ASTs looking something like\r\n\r\n```typescript\r\nTemplateBinding {\r\n  key: \"*ngForOf\",\r\n  name: null,\r\n  expression: {ast: PropertyRead {\r\n    name: \"nums\",\r\n    receiver: \"$implicit\", // note that the variable \"num\" is not preserved in this AST!\r\n  } },\r\n}\r\n```\r\n\r\n```typescript\r\nTemplateBinding {\r\n  key: \"i\",\r\n  name: \"index\",\r\n  keyIsVar: true, // gets transformed into a variable later\r\n  expression: null,\r\n}\r\n```\r\n\r\n```typescript\r\nTemplateBinding {\r\n  key: '*ngForTrackBy',\r\n  keyIsVar: false,\r\n  name: null,\r\n  expression: {ast: PropertyRead {\r\n      receiver: \"$implicit\", // note that the target 'trackBy' is not preserved here either\r\n      name: 'hasher',\r\n  } },\r\n}\r\n```\r\n\r\nSo while these ASTs preserve semantics of bindings in terms of how they impact an evaluation of a template, they do not preserve the semantic of the expression itself -- by looking at the first AST, for example, it is not clear that the template binding is a `let .. of ..` expression that targets the `num` variable from the `nums` container.\r\n\r\nA lack of preserved expression semantics has proven inconvenient for the Language Service. Today, to provide useful completions for template bindings, the Language Service largely performs string matching on a variety of conditions. One extreme example of this is #35096. This solution is unpleasant and rather brittle.\r\n\r\nThis issue proposes creating a module in the Language Service for parsing template bindings in a manner that preserves their expression semantic, replacing existing string matching hacks for template binding operations in the Language Service with operations on these new template binding ASTs, and potentially backporting the ASTs to the compiler if they are mutually advantageous.\r\n\r\nIdeally, the ASTs will implement the [microsyntax grammar](https://gist.github.com/mhevery/d3530294cff2e4a1b3fe15ff75d08855).\r\n\r\nI propose the following AST structure:\r\n\r\n```typescript\r\nTemplateBinding = Expression | LetBinding | AsBinding | KeyExpressionBinding\r\nExpression = (Angular expression)\r\n\r\n// let num of nums\r\n// let i = index\r\nLetBinding {\r\n  span: Span,\r\n  lhs: string & Span, // TODO: better name\r\n  rhs: string & Span, // string & Span just means we will keep track of both a string name and the span location\r\n  operator: string & Span, // 'of' or '=', for example\r\n}\r\n\r\n// index as i\r\nAsBinding {\r\n  span: Span\r\n  lhs: string & Span, // TODO: better name\r\n  rhs: string & Span,\r\n}\r\n\r\n// trackBy: trackFn\r\nKeyExpressionBinding: {\r\n  span: Span,\r\n  lhs: string & Span, // TODO: better name\r\n  rhs: string & Span,\r\n}\r\n```\r\n\r\nGiven the expression\r\n\r\n```html\r\n*ngFor=\"let num of nums; index as i; trackBy: hasher\"\r\n```\r\n\r\nthe resultant AST would look something like\r\n\r\n```typescript\r\nMicrosyntaxAttribute {\r\n  name: \"*ngFor\",\r\n  bindings: [\r\n    LetBinding {lhs: \"num\", rhs: \"nums\", operator: \"of\"},\r\n    AsBinding {lhs: \"index\", rhs: \"i\"},\r\n    KeyExpressionBinding {lhs: \"trackBy\", rhs: \"hasher\"},\r\n  ],\r\n}\r\n```\r\n\r\nWith these ASTs, it is still possible to reconstruct the name of the input to a structural directive from looking at the expression AST. For example, given a `LetBinding` with operator `of` and knowing that this binding belongs to a `MicrosyntaxAttribute` of name `ngFor`, we can deduce that the binding input is `ngForOf`.\r\n\r\n### Needs Discussion\r\n\r\n- Should we store the targeted input name on the AST?\r\n- How can these ASTs be improved?\r\n- Compiler team: can you provide more insight on how `let ... of ...` bindings work? From my experimentation the `of` operator can actually be any identifier. Is there additional information we should be aware of here other than the existing template binding source code?\r\n\r\ncc @alxhub @kyliau @andrius-pra @ivanwonder \r\n\r\n# __Comments from all are highly appreciated!__","Url":"https://github.com/angular/angular/issues/35512","RelatedDescription":"Open issue \"Language Service: Template Binding Parser\" (#35512)"},{"Id":"566544904","IsPullRequest":false,"CreatedAt":"2020-02-17T22:40:04","Actor":"lewcianci","Number":"35511","RawContent":null,"Title":"Angular Reactive Forms documentation doesn't show example on how to use reactive forms in the template.  Only .ts examples are given.","State":"closed","Body":"# üìö Docs or angular.io bug report\r\n\r\n### Description\r\n\r\nThe documentation at https://angular.io/guide/reactive-forms doesn't show how the template code required to actually implement reactive forms on the page.  It only shows what to do in the .ts file, not how to render the actual form on the page.\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nhttps://angular.io/guide/reactive-forms\r\n\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n### Browser info\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the device, browser, and version. -->\r\n\r\n### Anything else relevant?\r\n<!-- ‚úçÔ∏èPlease provide additional info if necessary. -->\r\n","Url":"https://github.com/angular/angular/issues/35511","RelatedDescription":"Closed issue \"Angular Reactive Forms documentation doesn't show example on how to use reactive forms in the template.  Only .ts examples are given.\" (#35511)"},{"Id":"566526550","IsPullRequest":true,"CreatedAt":"2020-02-17T21:33:39","Actor":"sonukapoor","Number":"35510","RawContent":null,"Title":"fix(docs-infra): clarify getting started deployment guide","State":"open","Body":"@kapunahelewong as discussed offline, here is the PR. \r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n- Removes \"we\" per Google Developers Guide: https://developers.google.com/style/person\r\n- Reduces future tense (for example \"will be\"): https://developers.google.com/style/tense\r\n- Adds headers to code snippets\r\n- Clears up passive voice\r\n- Reduces parentheses: https://developers.google.com/style/parentheses\r\n","Url":"https://github.com/angular/angular/pull/35510","RelatedDescription":"Open PR \"fix(docs-infra): clarify getting started deployment guide\" (#35510)"},{"Id":"566513467","IsPullRequest":false,"CreatedAt":"2020-02-17T20:56:36","Actor":"zbream","Number":"35509","RawContent":null,"Title":"Error NG6002, caused by enableIvy with libraries of a specific naming scheme","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ‚úçÔ∏èedit: --> \r\n\r\nThe issue is caused by package `@angular/compiler` maybe? ngcc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n\r\nYes, the previous version in which this bug was not present was: 8.x.x\r\n\r\nIntroduced by adding `\"enableIvy\": true` to an application in a monorepo.\r\n\r\n### Description\r\n\r\nThe following error occurs under a very specific setup in an Angular CLI monorepo:\r\n\r\n```\r\nerror NG6002: Appears in the NgModule.imports of AppModule, but could not be resolved to an NgModule class\r\n```\r\n\r\nThis is related to several other reported issues, but never under this scenario AFAIK:\r\n\r\n* Create a monorepo, where a library name matches a substring of another repo (ie: \"**my-lib**\" and \"**my-lib**-second\").\r\n* Build the libraries with `\"enableIvy\": false` .\r\n* Build the app, referencing both libraries in their **dist** folder.\r\n\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\n\r\nhttps://github.com/zbream/angular-ivy-paths-issue\r\n\r\nPull, follow the README.\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nERROR in dist/my-lib-second/lib/my-lib-second.module.d.ts:1:22 - error NG6002: Appears in the NgModule.imports of AppModule, but could not be resolved to an NgModule class\r\n\r\n1 export declare class MyLibSecondModule {\r\n                       ~~~~~~~~~~~~~~~~~\r\n</code></pre>\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 9.0.2\r\nNode: 12.14.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.900.2\r\n@angular-devkit/build-angular      0.900.2\r\n@angular-devkit/build-ng-packagr   0.900.2\r\n@angular-devkit/build-optimizer    0.900.2\r\n@angular-devkit/build-webpack      0.900.2\r\n@angular-devkit/core               9.0.2\r\n@angular-devkit/schematics         9.0.2\r\n@angular/cli                       9.0.2\r\n@ngtools/webpack                   9.0.2\r\n@schematics/angular                9.0.2\r\n@schematics/update                 0.900.2\r\nng-packagr                         9.0.0\r\nrxjs                               6.5.4\r\ntypescript                         3.7.5\r\nwebpack                            4.41.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n\r\nI took note of some issues I noticed in the result of `ngcc` [in the repo](https://github.com/zbream/angular-ivy-paths-issue#observations).","Url":"https://github.com/angular/angular/issues/35509","RelatedDescription":"Open issue \"Error NG6002, caused by enableIvy with libraries of a specific naming scheme\" (#35509)"},{"Id":"566488224","IsPullRequest":true,"CreatedAt":"2020-02-17T19:47:00","Actor":"jbogarthyde","Number":"35507","RawContent":null,"Title":"Edit displaying-data page to introduce \"Components and Templates\" section","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCurrent content doesn't make a good landing page for the section.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nIntroduces the section by defining terms and setting context.\r\nIdentifies the tutorial/example content as an introductory demo of template syntax.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n ","Url":"https://github.com/angular/angular/pull/35507","RelatedDescription":"Open PR \"Edit displaying-data page to introduce \"Components and Templates\" section\" (#35507)"},{"Id":"566401273","IsPullRequest":false,"CreatedAt":"2020-02-17T19:08:02","Actor":"fahadsubzwari924","Number":"35503","RawContent":null,"Title":"Is there a way to detect if background image loaded properly or not in angular?","State":"closed","Body":"I have an `Angular7` app in which I am displaying a `div` `background image`. But sometimes link is broken.\r\n\r\nMy image is bound in my `HTML` like this\r\n\r\n     `<div [ngStyle]=\"{'background-image': 'url(' + row?.coverUrl + ')', 'background-size': 'cover', \r\n      'background-position' : 'center'}\" class=\"img-area cursor-pointer\" \r\n      (click)=\"navigateToCOmpany(row)\" *ngIf=\"row.coverUrl !== ''\">\r\n      </div>`\r\n\r\nThe problem is that sometimes `row?.coverUrl` is broken link. So how can I detect that link is broken so that I can bind a default image?\r\n","Url":"https://github.com/angular/angular/issues/35503","RelatedDescription":"Closed issue \"Is there a way to detect if background image loaded properly or not in angular?\" (#35503)"},{"Id":"566455595","IsPullRequest":false,"CreatedAt":"2020-02-17T18:16:14","Actor":"kemsky","Number":"35505","RawContent":null,"Title":"Control value accessor does excessive optimizations","State":"open","Body":"# üêû bug report\r\n\r\n### Affected Package\r\nThe issue is caused by package @angular/forms\r\n\r\n### Is this a regression?\r\n\r\nI think it is.\r\n\r\n\r\n### Description\r\n\r\nCreate custom value accessor  for any primitive type i.e. masked currency input which uses number type. Use OnPush strategy.\r\n\r\nApp dynamically loads json with value `9900` which is formatted as `$ 99.00` in custom value accessor. User types something, then deletes and intermediate result is i.e. `$ 99`. User press refresh/discard/save button, but displayed value remains as `$ 99` because underlying value is in fact the same - `9900`. `writeValue` is not called and displayed value remains the same - `$ 99`.\r\n\r\nThis forces us to implement workarounds i.e. use blur/focus out etc with many drawbacks. Previously component was notified on each value write and you could easily filter duplicate values inside `writeValue` method:\r\n\r\n```\r\nif(this.currentValue !== value){\r\n   // update accessor\r\n}\r\n```\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ‚úçÔ∏è-->\r\nAngular: 9.0.1\r\n... common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.803.9 (cli-only)\r\n@angular-devkit/core         8.3.9 (cli-only)\r\n@angular-devkit/schematics   8.3.9 (cli-only)\r\n@angular/cdk                 9.0.0\r\n@schematics/angular          8.3.9 (cli-only)\r\n@schematics/update           0.803.9 (cli-only)\r\nrxjs                         6.5.4\r\ntypescript                   3.7.5\r\nwebpack                      4.41.6\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular/issues/35505","RelatedDescription":"Open issue \"Control value accessor does excessive optimizations\" (#35505)"},{"Id":"566419317","IsPullRequest":false,"CreatedAt":"2020-02-17T16:52:52","Actor":"dolanmiu","Number":"35504","RawContent":null,"Title":"ERROR in The given rootPath undefined is not a file of the program.","State":"open","Body":"When upgrading to Angular 9:\r\n\r\n![Screenshot 2020-02-17 at 16 52 39](https://user-images.githubusercontent.com/2917613/74672804-ee701d00-51a5-11ea-8cdd-866c2e851329.png)\r\n","Url":"https://github.com/angular/angular/issues/35504","RelatedDescription":"Open issue \"ERROR in The given rootPath undefined is not a file of the program.\" (#35504)"},{"Id":"566358035","IsPullRequest":false,"CreatedAt":"2020-02-17T15:05:32","Actor":"kemsky","Number":"35502","RawContent":null,"Title":"User defined pipes vs builtin pipes","State":"open","Body":"# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ‚úçÔ∏èedit: --> The issue is caused by package \r\n@angular/common\r\n\r\n\r\n### Is this a regression?\r\n\r\nI think it is.\r\n\r\n\r\n### Description\r\n\r\nUser can define his own pipe with name `currency` for example. Previously angular used *user* pipe instead of builtin. Ivy does opposite silently.\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nYou can copy & paste any pipe from `number_pipe.ts` modify its transform method and see that pipe will be ignored.\r\n\r\n## üî• Exception or Error\r\n\r\nNo error, but it should be.\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ‚úçÔ∏è-->\r\nAngular: 9.0.1\r\n... common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.803.9 (cli-only)\r\n@angular-devkit/core         8.3.9 (cli-only)\r\n@angular-devkit/schematics   8.3.9 (cli-only)\r\n@angular/cdk                 9.0.0\r\n@schematics/angular          8.3.9 (cli-only)\r\n@schematics/update           0.803.9 (cli-only)\r\nrxjs                         6.5.4\r\ntypescript                   3.7.5\r\nwebpack                      4.41.6\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular/issues/35502","RelatedDescription":"Open issue \"User defined pipes vs builtin pipes\" (#35502)"},{"Id":"566351143","IsPullRequest":false,"CreatedAt":"2020-02-17T14:54:30","Actor":"greyskulll","Number":"35501","RawContent":null,"Title":"Cannot attach animation trigger using @HostBinding - renderer is undefined","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\nangular/core ?\r\nExactly similar to this issue here - https://github.com/angular/angular/issues/35342, however i am able to reproduce it with Angular - 9.0.1\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nYes, works as expected in Angular 8.x\r\n\r\n\r\n### Description\r\n\r\nUsing the `@HostBinding` decorator to attach animation triggers to the host element does not work.\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\n1) Clone this repo https://github.com/greyskulll/angular-animation-directive-hostbinding-issue\r\n2) `ng serve` and check the browser console\r\n\r\nIn short, using `@HostBinding('@<animation trigger name>')` fails\r\n\r\n## üî• Exception or Error\r\nIn Chrome\r\n<pre><code>\r\ncore.js:5845 ERROR TypeError: Cannot read property 'listen' of undefined\r\n    at isProceduralRenderer (core.js:4338)\r\n    at elementPropertyInternal (core.js:12342)\r\n    at Module.…µ…µupdateSyntheticHostBinding (core.js:25196)\r\n    at SmoothHeightChangeDirective_HostBindings (uik-smooth-height-change.directive.ts:6)\r\n    at setHostBindingsByExecutingExpandoInstructions (core.js:11385)\r\n    at refreshView (core.js:11752)\r\n    at refreshComponent (core.js:13145)\r\n    at refreshChildComponents (core.js:11436)\r\n    at refreshView (core.js:11757)\r\n    at renderComponentOrTemplate (core.js:11831)\r\n</code></pre>\r\n\r\nIn Firefox\r\n<pre><code>\r\nERROR TypeError: \"renderer is undefined\"\r\n    Angular 3\r\n        isProceduralRenderer\r\n        elementPropertyInternal\r\n        updateSyntheticHostBinding\r\n</code></pre>\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 9.0.2\r\nNode: 12.14.1\r\nOS: darwin x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.2\r\n@angular-devkit/build-angular     0.900.2\r\n@angular-devkit/build-optimizer   0.900.2\r\n@angular-devkit/build-webpack     0.900.2\r\n@angular-devkit/core              9.0.2\r\n@angular-devkit/schematics        9.0.2\r\n@angular/cli                      9.0.2\r\n@ngtools/webpack                  9.0.2\r\n@schematics/angular               9.0.2\r\n@schematics/update                0.900.2\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nWas working as expected prior to IVY.\r\n","Url":"https://github.com/angular/angular/issues/35501","RelatedDescription":"Open issue \"Cannot attach animation trigger using @HostBinding - renderer is undefined\" (#35501)"},{"Id":"566311584","IsPullRequest":false,"CreatedAt":"2020-02-17T13:49:16","Actor":"ArnaudDenoyelle","Number":"35499","RawContent":null,"Title":"Custom path in tsconfig in library is considered as external module","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n\r\nThe issue is caused by package @angular/core or @angular/common\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nYes, the previous version in which this bug was not present was @angular/core 8.2.14\r\n\r\nIt started to fail after migrating to angular 9 following instructions on [update.angular.io](update.angular.io)\r\n\r\n### Description\r\n\r\nIn an angular project, I create a library.\r\nIn the tsconfig of the library (projects/my-lib/tsconfig.lib.json), I define a custom path : \r\n\r\n```\r\n\"compilerOptions\": {\r\n  [...]\r\n  \"paths\": {\r\n    \"baseUrl\": [ \"./\" ],\r\n    \"@env/*\": [ \"projects/my-lib/src/environments/*\" ]\r\n  }\r\n}\r\n```\r\nThen I use this path in a component : \r\n\r\n```\r\nimport { environment } from '@env/environment';\r\n```\r\nAt compilation of the library, I get a warning hinting me that this path might be misinterpreted as an external module : \r\n\r\n```\r\nWARNING: No name was provided for external module '@env/environment' in output.globals ‚Äì guessing 'environment'\r\n```\r\n\r\nThen, I import the only module of this library in a project and I get this error at compilation : \r\n\r\n```\r\nERROR in The target entry-point \"my-lib\" has missing dependencies:\r\n - @env/environment\r\n```\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n[Ready-to-use SSCCE here](https://github.com/ArnaudDenoyelle/sscce-angular9-paths)\r\n\r\n1- Create a new project : `ng new acme` with simplest options (no routing, css)\r\n2- Create a library : `ng generate library my-lib`\r\n3- under `projects/my-lib/src`, create a folder `environments` with 2 files: `environment.ts` and `environments.prod.ts`\r\n4- Configure `projects/my-lib/tsconfig.lib.json` like this (I just added the `paths` block):\r\n\r\n```\r\n{\r\n  \"extends\": \"../../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"../../out-tsc/lib\",\r\n    \"target\": \"es2015\",\r\n    \"declaration\": true,\r\n    \"inlineSources\": true,\r\n    \"types\": [],\r\n    \"lib\": [\r\n      \"dom\",\r\n      \"es2018\"\r\n    ],\r\n    \"paths\": {\r\n      \"baseUrl\": [ \"./\" ],\r\n      \"@env/*\": [ \"projects/my-lib/src/environments/*\" ]\r\n    }\r\n  },\r\n  \"angularCompilerOptions\": {\r\n    \"skipTemplateCodegen\": true,\r\n    \"strictMetadataEmit\": true,\r\n    \"enableResourceInlining\": true\r\n  },\r\n  \"exclude\": [\r\n    \"src/test.ts\",\r\n    \"**/*.spec.ts\"\r\n  ],\r\n}\r\n```\r\n5- In `projects/my-lib/src/lib/my-lib.component.ts`, add `import { environment } from '@env/environment';` and create this property : `isProduction = environment.production;`\r\n6- compile the library : `ng build my-lib` (this gives the warning)\r\n7- Also, import MyLibModule in AppModule then try to build the project : `ng build` (this gives the error message)\r\n\r\n\r\n## üî• Exception or Error\r\n\r\nWarning when trying to build the library : \r\n<pre><code>\r\n`WARNING: No name was provided for external module '@env/environment' in output.globals ‚Äì guessing 'environment'`\r\n</code></pre>\r\n\r\nError message when trying to build the project\r\n<pre><code>\r\nERROR in projects/my-lib/src/lib/my-lib.component.ts:2:29 - error TS2307: Cannot find module '@env/environment'.\r\n\r\n2 import { environment } from '@env/environment';\r\n</code></pre>\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 9.0.2\r\nNode: 10.19.0\r\nOS: linux x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.900.2\r\n@angular-devkit/build-angular      0.900.2\r\n@angular-devkit/build-ng-packagr   0.900.2\r\n@angular-devkit/build-optimizer    0.900.2\r\n@angular-devkit/build-webpack      0.900.2\r\n@angular-devkit/core               9.0.2\r\n@angular-devkit/schematics         9.0.2\r\n@angular/cli                       9.0.2\r\n@ngtools/webpack                   9.0.2\r\n@schematics/angular                9.0.2\r\n@schematics/update                 0.900.2\r\nng-packagr                         9.0.0\r\nrxjs                               6.5.4\r\ntypescript                         3.7.5\r\nwebpack                            4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nI don't think so\r\n","Url":"https://github.com/angular/angular/issues/35499","RelatedDescription":"Open issue \"Custom path in tsconfig in library is considered as external module\" (#35499)"},{"Id":"566293009","IsPullRequest":false,"CreatedAt":"2020-02-17T13:17:36","Actor":"Alphish","Number":"35497","RawContent":null,"Title":"docs: Specify behaviour of providers for generic types","State":"open","Body":"# üìö Docs or angular.io bug report\r\n\r\n### Description\r\n\r\nRight now, the documentation doesn't specify what happens when services are injected using type tokens with generic parameters (such as `MyGenericService<number>` or `MyGenericService<string>`), or at least I haven't found such a place.\r\n\r\nThe behaviour can be tested - currently different variations of generic service have the same underlying instance (unless overriden in injection hierarchy). However, without it being documented I can't be certain it's an intended/accepted behaviour, and thus can't safely rely on it.\r\n\r\nAn example use-case where I'd like to rely on this behaviour:\r\n- have a generic service `MyGenericService<TData>`, where TData would be used for stronger type-checking of type-specific properties/methods\r\n- provide the service somewhere in DI hierarchy\r\n- inject an instance of service as `MyGenericService<ConcreteData>` in a component/directive/service that passes/receives `ConcreteData` instances to/from the service\r\n- inject the same instance of service as `MyGenericService<any>` to other component/directive/service that doesn't rely on type-specific properties/methods of the service \r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n### What's the affected URL?**\r\nhttps://angular.io/guide/dependency-injection-providers#the-provider-object-literal\r\n\r\n### Reproduction Steps**\r\nGiven a setup like this and an instance of TestComponent somewhere:\r\n```typescript\r\nclass TestGenericService<TGeneric> {\r\n  randomId: number;\r\n  constructor() {\r\n    console.log('Creating test generic service');\r\n    this.randomId = Math.random();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'test-component',\r\n  template: '',\r\n  providers: [\r\n    // the generic type in \"provide\" is not allowed\r\n    // { provide: TestGenericService<number>, useClass: TestGenericService<number> },\r\n    { provide: TestGenericService, useClass: TestGenericService }\r\n  ]\r\n})\r\nexport class TestComponent {\r\n  constructor(\r\n    public numberTest: TestGenericService<number>,\r\n    public stringTest: TestGenericService<string>\r\n) {\r\n    console.log('ID for number test');\r\n    console.log(this.numberTest.randomId);\r\n    console.log('ID for string test');\r\n    console.log(this.stringTest.randomId);\r\n  }\r\n}\r\n```\r\nI get the following console output:\r\n```\r\nCreating test generic service\r\nID for number test\r\n0.9302127796181012\r\nID for string test\r\n0.9302127796181012\r\n```\r\n\r\nFrom my tests I've found that:\r\n- I cannot create a provider for type-with-generic-arguments injection token, even if I wanted to; the type injection token must always be given in its non-generic form\r\n- I cannot pass a constructor parameter with generic type without its type arguments passed (the exact opposite of what happens in provider definition, and also common sense)\r\n- based on console output, the provided service (TestGenericService) was created only once and both resolved constructor arguments (TestGenericService<number>, TestGenericService<string>) are in fact the same instance of TestGenericService\r\n\r\nIt's a reasonable behaviour, especially since there's no way to define an injection token with generic type argument in the first place. However, tests are needed to confirm this behaviour. Also, there's no guarantee this behaviour won't change, especially if sometime in the future Angular would be able to obtain generic type information (which now is unavailable, according to this [SO answer](https://stackoverflow.com/a/38556802/4733749)).\r\n\r\n### Expected vs Actual Behavior**\r\nI'd like to have the behaviour of generic type providers specified in the documentation. [\"The Provider object literal\" section of Dependency Injection >> DI Providers](https://angular.io/guide/dependency-injection-providers#the-provider-object-literal) page seems like a good place to specify that.\r\n\r\nAdditional tests might be needed to ensure the current behaviour doesn't break, if none are present at the moment.\r\n\r\n## üåç  Your Environment\r\n\r\n### Browser info\r\nGoogle Chrome 79","Url":"https://github.com/angular/angular/issues/35497","RelatedDescription":"Open issue \"docs: Specify behaviour of providers for generic types\" (#35497)"},{"Id":"566262752","IsPullRequest":false,"CreatedAt":"2020-02-17T12:19:19","Actor":"chrisaige","Number":"35495","RawContent":null,"Title":"NPM Libary leads to error:  Appears in the NgModule.imports of AppModule, but could not be resolved to an NgModule class","State":"open","Body":"We have a libary that is published on npm and code can be found here (https://github.com/porscheinformatik/material-addons)\r\n\r\nI have created a demo project that I am unable to build with the above error.\r\nI published an example project here:\r\nhttps://github.com/chrisaige/angular-ivy-example\r\n\r\nI think we are building our library wrong? But what are we doing wrong?\r\nIt seems tobe related to https://github.com/angular/angular/issues/30972 but I don't think we are minifying our libary.\r\n","Url":"https://github.com/angular/angular/issues/35495","RelatedDescription":"Open issue \"NPM Libary leads to error:  Appears in the NgModule.imports of AppModule, but could not be resolved to an NgModule class\" (#35495)"},{"Id":"566222185","IsPullRequest":false,"CreatedAt":"2020-02-17T11:31:00","Actor":"singhawanish","Number":"35492","RawContent":null,"Title":"export 'DOCUMENT' (imported as 'i10') was not found in '@angular/platform-browser' while ng build --prod","State":"closed","Body":"\r\nI faced this issue while migrating to angular 8.x.x . Actually 'DOCUMENT' has been deprecated from '@angular/platform-browser' and is now part of '@angular/common'. Older plugin still try to import document from '@angular/platform-browser' . Just check in the .js and .js.map files under 'fesm5' as well as 'fesm2015' folder of the plugin in node_modues section.\r\n\r\nBetter to update the specific plugin to latest angular compatible version.","Url":"https://github.com/angular/angular/issues/35492","RelatedDescription":"Closed issue \"export 'DOCUMENT' (imported as 'i10') was not found in '@angular/platform-browser' while ng build --prod\" (#35492)"},{"Id":"566235724","IsPullRequest":true,"CreatedAt":"2020-02-17T11:26:11","Actor":"ivanwonder","Number":"35494","RawContent":null,"Title":"fix(language-service): provide hover for interpolation in attribute value","State":"open","Body":"I think the bug is introduced in my PR #34847. For example, 'model=\"{{title}}\"', the attribute value cannot be parsed by 'parseTemplateBindings'.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35494","RelatedDescription":"Open PR \"fix(language-service): provide hover for interpolation in attribute value\" (#35494)"},{"Id":"566228220","IsPullRequest":true,"CreatedAt":"2020-02-17T11:12:17","Actor":"fpichlou","Number":"35493","RawContent":null,"Title":"Update currencies.ts and add IRR symbol","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35493","RelatedDescription":"Open PR \"Update currencies.ts and add IRR symbol\" (#35493)"},{"Id":"566184217","IsPullRequest":false,"CreatedAt":"2020-02-17T09:59:24","Actor":"pleinonen","Number":"35491","RawContent":null,"Title":"Angular service worker does not pick up changes in CSP headers","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ‚úçÔ∏èedit: --> The issue is caused by package @angular/pwa\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ‚úçÔ∏è--> No\r\n\r\n\r\n### Description\r\n\r\n<!-- ‚úçÔ∏è--> Following exception can be seen in console:\r\n`Refused to connect to 'https://www.googletagmanager.com/gtag/js?id=XYZ' because it violates the following Content Security Policy directive: \"connect-src 'self' [OMITTED]`\r\n\r\nProblem is that connect-src statement is old and should have been replaced by new one. Looking at the network log I can see the that CSP is properly set:\r\n`content-security-policy: report-uri /csp_error; default-src 'self'; connect-src 'self'  [OMITTED] https://www.googletagmanager.com; script-src 'self' 'unsafe-eval' [OMITTED]; img-src 'self' [OMITTED]; font-src 'self' [OMITTED]; style-src 'self' 'unsafe-inline' [OMITTED]; frame-src 'self' *`\r\n\r\nFurther proof that service worker is a culprit is that problem cannot be produced when browser cache is cleared or worker disabled. Another way to fix issue is to temporarily load safety-worker.js to uninstall the worker.\r\n\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\n<!-- ‚úçÔ∏è-->\r\n\r\n- Enable CSP to a site with service worker and populate script-scr and connect-scr fields\r\n- Access site to install sw with old CSP headers.\r\n- Add <script> reference to https://www.googletagmanager.com/gtag/js and add https://www.googletagmanager.com to content-security-policy script-scr and connect-scr fields.\r\n- Access site again and wait for sw to update app in background. After reloading, error should be visible in console.\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nngsw-worker.js:2726 Refused to connect to 'https://www.googletagmanager.com/gtag/js?id=XYZ' because it violates the following Content Security Policy directive: \"connect-src 'self' [OMITTED & OUTDATED]\".\r\n\r\n(anonymous) @ ngsw-worker.js:2726\r\n(anonymous) @ ngsw-worker.js:1804\r\n(anonymous) @ ngsw-worker.js:1800\r\nsafeFetch @ ngsw-worker.js:2724\r\n(anonymous) @ ngsw-worker.js:2176\r\nfulfilled @ ngsw-worker.js:1801\r\nPromise.then (async)\r\nstep @ ngsw-worker.js:1803\r\nfulfilled @ ngsw-worker.js:1801\r\nPromise.then (async)\r\nstep @ ngsw-worker.js:1803\r\nfulfilled @ ngsw-worker.js:1801\r\nPromise.then (async)\r\nstep @ ngsw-worker.js:1803\r\n(anonymous) @ ngsw-worker.js:1804\r\n(anonymous) @ ngsw-worker.js:1800\r\nhandleFetch @ ngsw-worker.js:2131\r\nonFetch @ ngsw-worker.js:1977\r\n(anonymous) @ ngsw-worker.js:1911\r\nngsw-worker.js:2726 Refused to connect to 'https://www.googletagmanager.com/gtag/js?id=XYZ' because it violates the document's Content Security Policy.</code></pre>\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 8.3.23\r\nNode: 10.15.3\r\nOS: win32 x64\r\nAngular: 8.2.14\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.803.23\r\n@angular-devkit/build-angular     0.803.23\r\n@angular-devkit/build-optimizer   0.803.23\r\n@angular-devkit/build-webpack     0.803.23\r\n@angular-devkit/core              8.3.23\r\n@angular-devkit/schematics        8.3.23\r\n@angular/cdk                      8.2.3\r\n@angular/cli                      8.3.23\r\n@angular/pwa                      0.803.23\r\n@ngtools/webpack                  8.3.23\r\n@schematics/angular               8.3.23\r\n@schematics/update                0.803.23\r\nrxjs                              6.5.4\r\ntypescript                        3.5.3\r\nwebpack                           4.39.2\r\n\r\n</code></pre>\r\n\r\nError can be reproduced with latest FireFox and Chrome browsers. Tag manager script is loaded runtime (id depends on deployment environment).\r\n","Url":"https://github.com/angular/angular/issues/35491","RelatedDescription":"Open issue \"Angular service worker does not pick up changes in CSP headers\" (#35491)"},{"Id":"566168583","IsPullRequest":false,"CreatedAt":"2020-02-17T09:58:59","Actor":"montella1507","Number":"35490","RawContent":null,"Title":"Misleading <router-outlet> error when component not in declarations","State":"closed","Body":"### Affected Package\r\nAngular CLI: 9.0.1\r\nNode: 10.15.3\r\nOS: win32 x64\r\n\r\nAngular: 9.0.1\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.900.1\r\n@angular-devkit/build-angular      0.900.1\r\n@angular-devkit/build-ng-packagr   0.900.1\r\n@angular-devkit/build-optimizer    0.900.1\r\n@angular-devkit/build-webpack      0.900.1\r\n@angular-devkit/core               9.0.1\r\n@angular-devkit/schematics         9.0.1\r\n@angular/cdk                       8.2.3\r\n@angular/flex-layout               9.0.0-beta.29\r\n@ngtools/webpack                   9.0.1\r\n@schematics/angular                9.0.1\r\n@schematics/update                 0.900.1\r\nng-packagr                         9.0.0\r\nrxjs                               6.5.4\r\ntypescript                         3.7.5\r\nwebpack                            4.41.2\r\n\r\n### Is this a regression?\r\nNo\r\n\r\n### Description\r\nAngular telling to user that <router-outlet></router-outlet> is not known element when used inside component, which is in Module that imports RouterModule BUT component is not listed i declarations.  \r\n\r\nDeclaration  array is place where to put components if you want to use selector in templates - routed components are usually not selected by tags - so it leads user it is not neccessary to include them in declarations - then the misleading error will occur.\r\n\r\n\r\n\r\n","Url":"https://github.com/angular/angular/issues/35490","RelatedDescription":"Closed issue \"Misleading <router-outlet> error when component not in declarations\" (#35490)"},{"Id":"566164108","IsPullRequest":true,"CreatedAt":"2020-02-17T09:24:21","Actor":"santoshyadav198613","Number":"35489","RawContent":null,"Title":"docs: correct ngSwitch definition","State":"open","Body":"Fixes #35484\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #35484\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35489","RelatedDescription":"Open PR \"docs: correct ngSwitch definition\" (#35489)"},{"Id":"566148046","IsPullRequest":false,"CreatedAt":"2020-02-17T08:55:23","Actor":"reda-alaoui","Number":"35488","RawContent":null,"Title":"Global ngNativeValidate","State":"open","Body":"# üöÄ feature request\r\n\r\n### Relevant Package\r\n\r\n@angular/forms\r\n\r\n### Description\r\n\r\nWhen using FormsModule, in order to enable native form validation,we are forced to add `ngNativeValidate` to each form.\r\n\r\n### Describe the solution you'd like\r\n\r\nPlease provide a way to enable native form validation globally.\r\n","Url":"https://github.com/angular/angular/issues/35488","RelatedDescription":"Open issue \"Global ngNativeValidate\" (#35488)"},{"Id":"566108370","IsPullRequest":true,"CreatedAt":"2020-02-17T07:34:58","Actor":"santoshyadav198613","Number":"35487","RawContent":null,"Title":"docs: update aot compiler docs","State":"open","Body":"Fixes #35415\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #35415\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35487","RelatedDescription":"Open PR \"docs: update aot compiler docs\" (#35487)"},{"Id":"566070732","IsPullRequest":false,"CreatedAt":"2020-02-17T06:08:14","Actor":"dilame","Number":"35486","RawContent":null,"Title":"strictTemplates and *ngIf produces strange result","State":"closed","Body":"# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ‚úçÔ∏èedit: --> The issue is caused by package @angular/core\r\n\r\n### Description\r\n\r\nIf i write `*ngIf=\"user as u\"` then user data type (which is nullable) not narrowed. But if i write just `*ngIf=\"user\"` then everything works as expected\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-issue-repro2-awscdm\r\n\r\nNot sure if stackblitz respects `tsconfig.json`\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\n\r\nERROR in src/app/app.component.ts:14:11 - error TS2531: Object is possibly 'null'.\r\n\r\n14         {{u.firstName}}\r\n             ~~~~~~~~~~~\r\n</code></pre>\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n\r\nAngular CLI: 9.0.2\r\nNode: 13.6.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.2\r\n@angular-devkit/build-angular     0.900.2\r\n@angular-devkit/build-optimizer   0.900.2\r\n@angular-devkit/build-webpack     0.900.2\r\n@angular-devkit/core              9.0.2\r\n@angular-devkit/schematics        9.0.2\r\n@angular/cli                      9.0.2\r\n@ngtools/webpack                  9.0.2\r\n@schematics/angular               9.0.2\r\n@schematics/update                0.900.2\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n    \r\n\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular/issues/35486","RelatedDescription":"Closed issue \"strictTemplates and *ngIf produces strange result\" (#35486)"},{"Id":"566050230","IsPullRequest":false,"CreatedAt":"2020-02-17T05:43:20","Actor":"sajidit","Number":"35485","RawContent":null,"Title":"Access the assets folder when running ng build --prod --base-href './project1'","State":"closed","Body":"My client want me to deploy multiple projects on the same ngnix server with the following configuration.\r\n\r\nlocation /project1/ {\r\n    alias /usr/local/var/www/project1/;\r\n    try_files $uri$args $uri$args/ /project1/index.html;\r\n}\r\nIn the above configuration I could not access the assets folder as it's in the project1 folder and I try to access it from the root of the domain example src:\r\n\r\nurl('/assets/fonts/texta/Texta-Regular/Texta-Regular.eot')\r\n\r\nWhen I change the path with src: url('./assets/fonts/texta/Texta-Regular/Texta-Regular.eot') I'm getting following problem when building the production build\r\n\r\nERROR in ./src/styles.scss Module build failed (from ./node_modules/mini-css-extract-plugin/dist/loader.js): ModuleError: Module Error (from ./node_modules/postcss-loader/src/index.js): (Emitted value instead of an instance of Error) CssSyntaxError: /Users/Desktop/personal/projects/example/src/styles.scss:10115:13: Can't resolve './assets/fonts/texta/Texta-Regular/Texta-Regular.eot%3F' in '/Users/Desktop/personal/projects/example/src'\r\n","Url":"https://github.com/angular/angular/issues/35485","RelatedDescription":"Closed issue \"Access the assets folder when running ng build --prod --base-href './project1'\" (#35485)"},{"Id":"566018252","IsPullRequest":false,"CreatedAt":"2020-02-17T02:17:44","Actor":"OmarioHasan","Number":"35484","RawContent":null,"Title":"ngSwitch is an attribute directive or structural directive","State":"open","Body":"# üìö Docs or angular.io bug report\r\n\r\n### Description\r\nSurfing the documentation and found 2 description for ngSwitch\r\nin https://angular.io/guide/template-syntax#the-ngswitch-directives : \r\ni found it attribute directive\r\nin the others i found it as structural directive \r\n\r\nis thers something i didnt understand well ?\r\n\r\n### What's the affected URL?**\r\nhttps://angular.io/guide/template-syntax#the-ngswitch-directives\r\n\r\n\r\n## üì∑Screenshot\r\n![Annotation 2020-02-17 041234](https://user-images.githubusercontent.com/8146344/74618758-bdf39900-513b-11ea-949d-06c229c58c9f.png)\r\n![Annotation 2020-02-17 041234](https://user-images.githubusercontent.com/8146344/74618785-e2e80c00-513b-11ea-9bc9-3b405d473fa8.png)\r\n","Url":"https://github.com/angular/angular/issues/35484","RelatedDescription":"Open issue \"ngSwitch is an attribute directive or structural directive\" (#35484)"},{"Id":"565891552","IsPullRequest":false,"CreatedAt":"2020-02-16T17:37:10","Actor":"aford22","Number":"35482","RawContent":null,"Title":"Angular 9 error No component factory found for TestDialogComponent. Did you add it to @NgModule.entryComponents?","State":"closed","Body":"### Description\r\n\r\nAngular 9. Calling `const dialogRef = this.dialog.open(TestDialogComponent, dialogConfig)` produces error \"No component factory found for TestDialogComponent. Did you add it to @NgModule.entryComponents?\"\r\n\r\nThis worked under Angular 8 with an entryComponent defined in my module. However I have removed the entryComponent statement from the module since this should be no longer needed in Angular 9 as per: https://angular.io/guide/deprecations#entrycomponents-and-analyze_for_entry_components-no-longer-required\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nmessage:\"No component factory found for TestCredentialDialogComponent. Did you add it to @NgModule.entryComponents?\"\r\nngComponent:class TestCredentialDialogComponent { ‚Ä¶ }\r\nngDebugContext:DebugContext_ {view: Object, nodeIndex: 8, nodeDef: Object, ‚Ä¶}\r\nngErrorLogger:function () { ‚Ä¶ }\r\nstack:\"Error: No component factory found for TestCredentialDialogComponent. Did you add it to @NgModule.entryComponents?\\n    at noComponentFactoryError (http://localhost:4200/vendor.js:93165:19)\\n    at CodegenComponentFactoryResolver.resolveComponentFactory (http://localhost:4200/vendor.js:93230:19)\\n    at CodegenComponentFactoryResolver.resolveComponentFactory (http://localhost:4200/vendor.js:93227:36)\\n    at CdkPortalOutlet.attachComponentPortal (http://localhost:4200/vendor.js:24048:43)\\n    at MatDialogContainer.attachComponentPortal (http://localhost:4200/vendor.js:137945:35)\\n    at MatDialog._attachDialogContent (http://localhost:4200/vendor.js:138624:48)\\n    at MatDialog.open (http://localhost:4200/vendor.js:138492:32)\\n    at EditUserComponent.testCredential (http://localhost:4200/pages-users-users-module.js:382:39)\\n    at Object.eval [as handleEvent] (ng:///UsersModule/EditUserComponent.ngfactory.js:627:27)\\n    at handleEvent (http://localhost:4200/vendor.js:108774:122)\"\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular/issues/35482","RelatedDescription":"Closed issue \"Angular 9 error No component factory found for TestDialogComponent. Did you add it to @NgModule.entryComponents?\" (#35482)"},{"Id":"565913639","IsPullRequest":true,"CreatedAt":"2020-02-16T14:25:41","Actor":"ajeet-bal","Number":"35483","RawContent":null,"Title":"docs: describe your change...","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35483","RelatedDescription":"Open PR \"docs: describe your change...\" (#35483)"},{"Id":"565886781","IsPullRequest":true,"CreatedAt":"2020-02-16T10:58:05","Actor":"crisbeto","Number":"35481","RawContent":null,"Title":"fix(ivy): incorrectly generating shared pure function between null and object literal","State":"open","Body":"In #33705 we made it so that we generate pure functions for object/array literals in order to avoid having them be shared across elements/views. The problem this introduced is that further down the line the `ContantPool` uses the generated literal in order to figure out whether to share an existing factory or to create a new one. `ConstantPool` determines whether to share a factory by creating a key from the AST node and using it to look it up in the factory cache, however the key generation function didn't handle function invocations and replaced them with `null`. This means that the key for `{foo: pureFunction0(...)}` and `{foo: null}` are the same.\r\n\r\nThese changes add some logic so that we can generate a key for function invocations. Note that I decided for the key to only include the number or arguments, not the names of arguments, because we may end up generating separate factories unnecessarily for cases like `{foo: pureFunction1(c1)}` and `{foo: pureFunction0(c2)}`.\r\n\r\nFixes #35298.","Url":"https://github.com/angular/angular/pull/35481","RelatedDescription":"Open PR \"fix(ivy): incorrectly generating shared pure function between null and object literal\" (#35481)"},{"Id":"565882031","IsPullRequest":false,"CreatedAt":"2020-02-16T10:19:27","Actor":"mycroft16","Number":"35480","RawContent":null,"Title":"@angular/flex-layout module.d.ts causes error NG6002 in Angular 9 with Ivy enabled.","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ‚úçÔ∏èedit: --> The issue is caused by package @angular/flex-layout@9.0.0-beta.29\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ‚úçÔ∏è--> Yes, the previous version in which this bug was not present was: 8.2.14\r\n\r\n\r\n### Description\r\n\r\n<!-- ‚úçÔ∏è--> A clear and concise description of the problem...\r\n![image](https://user-images.githubusercontent.com/10989109/74602759-82889a00-5069-11ea-80e0-ea1399fc170d.png)\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\n<!-- ‚úçÔ∏è--> https://stackblitz.com/edit/angular-issue-repro2-yka2ok?file=src%2Findex.html\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nDate: 2020-02-16T10:00:11.507Z - Hash: d1ce2b53dac8b997d698\r\n4 unchanged chunks\r\nchunk {main} main.js, main.js.map (main) 150 kB [initial] [rendered]\r\nTime: 702ms\r\n: Compiled successfully.\r\n    \r\n    ERROR in node_modules/@angular/flex-layout/typings/module.d.ts:16:22 - error NG6002: Appears \r\nin the NgModule.imports of AppModule, but could not be resolved to an NgModule class\r\n    \r\n    16 export declare class FlexLayoutModule {\r\n</code></pre>\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 9.0.1\r\nNode: 13.8.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@angular/flex-layout              9.0.0-beta.29\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nNo\r\n","Url":"https://github.com/angular/angular/issues/35480","RelatedDescription":"Open issue \"@angular/flex-layout module.d.ts causes error NG6002 in Angular 9 with Ivy enabled.\" (#35480)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"566506807","IsPullRequest":true,"CreatedAt":"2020-02-17T20:38:09","Actor":"sacgrover","Number":"17003","RawContent":null,"Title":"fix(@schematics/angular): scroll issue on new app after adding Material","State":"open","Body":"Starter app is janky after adding Angular Material\r\n::ng-deep is deprecated but that's only solution we can use for now from template.  It should be removed when ::ng-deep will be removed from angular. \r\nFixes angular#16966","Url":"https://github.com/angular/angular-cli/pull/17003","RelatedDescription":"Open PR \"fix(@schematics/angular): scroll issue on new app after adding Material\" (#17003)"},{"Id":"566502172","IsPullRequest":false,"CreatedAt":"2020-02-17T20:25:52","Actor":"giniedp","Number":"17002","RawContent":null,"Title":"Templates are processed too early","State":"open","Body":"# üêû Bug report\r\n\r\nHaving the `AngularCompilerPlugin` in a custom steup instantiated like this\r\n\r\n```js\r\nnew AngularCompilerPlugin({\r\n    platform: 0,\r\n    mainPath: config.isTest\r\n      ? config.frontend.entry.test\r\n      : config.frontend.entry.main,\r\n    tsConfigPath: config.isTest\r\n      ? config.frontend.tsconfigTestFile\r\n      : config.frontend.tsconfigAppFile,\r\n\r\n    skipCodeGeneration: !config.isAot,\r\n    sourceMap: true,\r\n    forkTypeChecker: true,\r\n    directTemplateLoading: false,\r\n\r\n    compilerOptions: {\r\n      fullTemplateTypeCheck: true,\r\n      strictInjectionParameters: true,\r\n      strictTemplates: false,\r\n      enableIvy: config.isIvy\r\n    }\r\n  })\r\n```\r\n\r\nand a webpack rule for `.pug` templates \r\n\r\n```js\r\n      {\r\n        test: /\\.(pug)$/,\r\n        use: [{ loader: \"apply-loader\" }, { loader: \"pug-loader\" }]\r\n      },\r\n```\r\n\r\nthe templates are processed by the `ngtc` compiler without being transpiled to `.html`. The compiler fails when when template contains certain syntax with following error\r\n\r\n```\r\n  ERROR in Errors parsing template: Unexpected character \"EOF\" (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.) (\"h1 {{ title }}\r\n  input([(ngModel)]=\"title\", [ngModelOptions]=\"{ standalone: true }\")\r\n  router-outlet()\r\n  [ERROR ->]\"): /Users/alex/repositories/ginie/my-app/src/app/app.component.pug@3:0, Invalid ICU message. Missing '}'. (\"h1 {{ title }}\r\n  input([(ngModel)]=\"title\", [ngModelOptions]=\"{ standalone: true }\")\r\n  router-outlet()\r\n  [ERROR ->]\"): /Users/alex/repositories/ginie/my-app/src/app/app.component.pug@3:0\r\n```\r\n\r\n- failure happens when compiled with `ivy` enabled and `aot` disabled\r\n- failure does not happen with `ivy` and `aot` enabled\r\n- fails only on certain syntax for example\r\n\r\nthis template would fail\r\n```pug\r\nh1 {{ title }}\r\ninput([(ngModel)]=\"title\", [ngModelOptions]=\"{ standalone: true }\")\r\n```\r\n\r\nbut this template would not. Interestingly the application the renders correctly, as if the pug is transpiled at a later stage\r\n```pug\r\nh1 {{ title }}\r\ninput([(ngModel)]=\"title\")\r\n```\r\n\r\n\r\nAdding a `console.log` at [node_modules/compiler-cli/src/ngtsc/annotations/src/component](https://github.com/angular/angular/blob/9.0.x/packages/compiler-cli/src/ngtsc/annotations/src/component.ts#L256) reveals that\r\n- the `pug` content is processed when `aot` is off\r\n- the `html` content is processed when `aot` is on\r\n\r\n## üî¨ Minimal Reproduction\r\nRepo is here https://github.com/giniedp/angular-9-custom-pug-setup\r\n\r\n```\r\ngit clone git@github.com:giniedp/angular-9-custom-pug-setup.git\r\ncd angular-9-custom-pug-setup\r\nyarn install\r\nyarn build:custom\r\n```\r\n\r\n## üåç Your Environment\r\n```\r\nAngular CLI: 9.0.2\r\nNode: 10.17.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.2\r\n@angular-devkit/build-angular     0.900.2\r\n@angular-devkit/build-optimizer   0.900.2\r\n@angular-devkit/core              9.0.2\r\n@angular-devkit/schematics        9.0.2\r\n@angular/cli                      9.0.2\r\n@ngtools/webpack                  9.0.2\r\n@schematics/angular               9.0.2\r\n@schematics/update                0.900.2\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.6\r\n```\r\n","Url":"https://github.com/angular/angular-cli/issues/17002","RelatedDescription":"Open issue \"Templates are processed too early\" (#17002)"},{"Id":"566483341","IsPullRequest":false,"CreatedAt":"2020-02-17T19:33:30","Actor":"jonstelly","Number":"17001","RawContent":null,"Title":"ng update - Doesn't honor 'preserveSymlinks' flag, causes re-build for migrations to fail","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\nunsure\r\n\r\n### Description\r\n\r\nI have an angular cli project with npm symlinks to a different framework project.  When running an update `ng update @angular/cli @angular/core rxjs`, it seems that the package update/installation phase doesn't honor the `\"preserveSymlinks\": true` setting.  The result is that my framework symlink is removed, which causes the project to fail compilation so the migrations don't all run correctly.\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n```bash\r\nnpm i -g @angular/cli@8.3.25\r\nmkdir ng-up\r\ncd ng-up\r\nng new framework\r\ncd framework\r\nng g lib @myfw/model\r\nng build @myfw/model\r\ncd ./dist/myfw/model\r\nnpm link\r\ncd ../../../..\r\nng new app\r\ncd app\r\nnpm link @myfw/model\r\n#edit ./app/src/app/app.module.ts to the below (importing ModelModule from @myfw/model\r\nng serve #The app runs as expected\r\n```\r\n\r\napp/src/app/app.module.ts\r\n```typescript\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ModelModule } from '@myfw/model' //<- Add this from @myfw/model\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ModelModule //<- Add this from @myfw/model\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n```\r\n\r\nupgrade process\r\n```bash\r\nnpm i -g @angular/cli #Update angular cli to 9.0.2\r\ncd ../framework\r\nng update @angular/cli @angular/core rxjs --force #--force is needed for tsickle\r\nng build @myfw/model\r\ncd ../app\r\nng update @angular/cli @angular/core rxjs\r\n```\r\nget error as seen below.  `ls ./node_modules/@myfw` shows no directories, the symlinks have been deleted.\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\n> Undecorated classes with DI migration.\r\n  As of Angular 9, it is no longer supported to use Angular DI on a class that does not have an Angular decorator.\r\n  Read more about this here: https://v9.angular.io/guide/migration-undecorated-classes\r\n\r\n    This migration uses the Angular compiler internally and therefore projects that no longer build successfully after the update cannot run the migration. Please ensure there are no AOT compilation errors and rerun the migration. The following project failed: tsconfig.app.json\r\n\r\n    Error: error TS100: src\\app\\app.module.ts(13,5): Error during template compile of 'AppModule'\r\n      Could not resolve @myfw/model relative to [object Object]..\r\n    error TS100: src\\app\\app.module.ts(13,5): Error during template compile of 'AppModule'\r\n      Could not resolve @myfw/model relative to [object Object]..\r\n\r\n\r\n    Could not migrate all undecorated classes that use dependency\r\n    injection. Some project targets could not be analyzed due to\r\n    TypeScript program failures.\r\n\r\n    Migration can be rerun with: \"ng update @angular/core --migrate-only migration-v9-undecorated-classes-with-di\"\r\n\r\n  Migration completed.\r\n</code></pre>\r\n\r\n\r\n## üåç Your Environment\r\n@angular/cli 8.3.25 to start (to generate the original projects)\r\n<pre><code>\r\nAngular CLI: 9.0.2\r\nNode: 12.11.1\r\nOS: win32 x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.2\r\n@angular-devkit/build-angular     0.900.2\r\n@angular-devkit/build-optimizer   0.900.2\r\n@angular-devkit/build-webpack     0.900.2\r\n@angular-devkit/core              9.0.2\r\n@angular-devkit/schematics        9.0.2\r\n@angular/cli                      9.0.2\r\n@ngtools/webpack                  9.0.2\r\n@schematics/angular               9.0.2\r\n@schematics/update                0.900.2\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17001","RelatedDescription":"Open issue \"ng update - Doesn't honor 'preserveSymlinks' flag, causes re-build for migrations to fail\" (#17001)"},{"Id":"566357805","IsPullRequest":false,"CreatedAt":"2020-02-17T18:46:23","Actor":"JiaLiPassion","Number":"16996","RawContent":null,"Title":"Support transpile async await for ES2017 target","State":"closed","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üöÄ Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n<!-- ‚úçÔ∏è--> A clear and concise description of the problem or missing capability...\r\nNow Angular can work properly for target `ES2015`, but if we want to build for target `ES2017`, the native `async/await` will not work because Zone.js can't monkey patch native `async/await`. (https://github.com/angular/angular/issues/31730) But we still want the other ES2017+ native features.\r\n\r\n\r\n### Describe the solution you'd like\r\n<!-- ‚úçÔ∏è--> If you have a solution in mind, please describe it.\r\n\r\nSo if we can use some plugin of webpack with https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/build_webpack, to process the bundle and only transpile the `async/await` code to `generator`, but keep all other ES2017+ code as native, it maybe a acceptable solution for now until we can find some other solutios.\r\n### Describe alternatives you've considered\r\n<!-- ‚úçÔ∏è--> Have you consid ered any alternative solutions or workarounds?\r\n","Url":"https://github.com/angular/angular-cli/issues/16996","RelatedDescription":"Closed issue \"Support transpile async await for ES2017 target\" (#16996)"},{"Id":"566451444","IsPullRequest":false,"CreatedAt":"2020-02-17T18:06:57","Actor":"nmorado","Number":"17000","RawContent":null,"Title":"Cannot find module '@angular-devkit/schematics' when adding @angular/material","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [x] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nThis issue occurs on a new fresh app created on latest angular cli 9.0.2.\r\n\r\n\r\n### Description\r\nCreate a new app using 9.0.2 CLI. cd to the app, and add @angular/material:\r\n\r\n`ng add @angular/material`\r\n\r\nFails with the below errors:\r\n\r\n`\r\n[error] Error: Cannot find module '@angular-devkit/schematics'\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:580:15)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:506:25)\r\n    at Module.require (internal/modules/cjs/loader.js:636:17)\r\n    at require (internal/modules/cjs/helpers.js:20:18)\r\n`\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n`ng new myapp`\r\n`cd myapp`\r\n`ng add @angular/material`\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\n[error] Error: Cannot find module '@angular-devkit/schematics'\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:580:15)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:506:25)\r\n    at Module.require (internal/modules/cjs/loader.js:636:17)\r\n    at require (internal/modules/cjs/helpers.js:20:18)\r\n</code></pre>\r\n\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\nAngular CLI: 9.0.2\r\nNode: 10.13.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.2\r\n@angular-devkit/build-angular     0.900.2\r\n@angular-devkit/build-optimizer   0.900.2\r\n@angular-devkit/build-webpack     0.900.2\r\n@angular-devkit/core              9.0.2\r\n@angular-devkit/schematics        9.0.2\r\n@angular/cli                      9.0.2\r\n@ngtools/webpack                  9.0.2\r\n@schematics/angular               9.0.2\r\n@schematics/update                0.900.2\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17000","RelatedDescription":"Open issue \"Cannot find module '@angular-devkit/schematics' when adding @angular/material\" (#17000)"},{"Id":"566423831","IsPullRequest":false,"CreatedAt":"2020-02-17T17:01:38","Actor":"dionisoros","Number":"16999","RawContent":null,"Title":"require html stopped working in upgrade to angular 9","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [x] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ‚úçÔ∏è--> Yes, the previous version in which this bug was not present was: 7.x\r\n\r\n\r\n### Description\r\n\r\nHybrid application angular9 & angularJS 1.7. When trying to require an html file (in the angularJS app) using **@angular/cli 9** it fails, it works in angular 7.\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\n\r\nERROR in ./src/app/template.html 1:0\r\nModule parse failed: Unexpected token (1:0)\r\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to handle this file type.\r\n</code></pre>\r\n\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 8.3.6\r\nNode: 13.0.1\r\nOS: linux x64\r\nAngular: 9.0.0-next.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.803.6\r\n@angular-devkit/build-angular     0.803.6\r\n@angular-devkit/build-optimizer   0.803.6\r\n@angular-devkit/build-webpack     0.803.6\r\n@angular-devkit/core              8.3.6\r\n@angular-devkit/schematics        8.3.6\r\n@angular/cli                      8.3.6\r\n@angular/localize                 9.0.0-next.5\r\n@angular/upgrade                  8.2.14\r\n@ngtools/webpack                  8.3.6\r\n@schematics/angular               8.3.6\r\n@schematics/update                0.803.6\r\nrxjs                              6.5.3\r\ntypescript                        3.5.3\r\nwebpack                           4.39.2\r\n\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\nThis is important for me because I want to upgrade an angularJS (1.7) app to angular 9 and my angularJS app is using the syntax like **require(file.html)**.\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16999","RelatedDescription":"Open issue \"require html stopped working in upgrade to angular 9\" (#16999)"},{"Id":"566397917","IsPullRequest":false,"CreatedAt":"2020-02-17T16:12:13","Actor":"matcho","Number":"16998","RawContent":null,"Title":"build --prod : babel related unhandled exception after updating to v9","State":"open","Body":"# üêû Bug report\r\n\r\n### Command\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [x] build\r\n- [ ] serve\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nYes, the previous version in which this bug was not present was: 8.3.25\r\n\r\n\r\n### Description\r\n\r\nWhen running `ng build --prod` with `\"target\": \"es2015\"`, not using Ivy, compilation fails when generating es5 bundles, with a Babel error.\r\n\r\nThis error had never happened before, and appeared just after v9 update. Seems to be related to a heterodox for-of syntax, maybe in a dependency but which one ?\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nNo idea, the app is quite complex‚Ä¶\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nGenerating ES5 bundles for differential loading...\r\nAn unhandled exception occurred: /home/mathias/src/nghyd/main-es2015.037c4c9354d91b8c3932.js: Property body expected type of array but got null\r\nSee \"/tmp/ng-bRVUux/angular-errors.log\" for further details.\r\n</code></pre>\r\n\r\nThe `/tmp/ng-bRVUux/angular-errors.log` log file contains:\r\n\r\n<pre><code>\r\n[error] TypeError: /home/mathias/src/nghyd/main-es2015.037c4c9354d91b8c3932.js: Property body expected type of array but got null\r\n    at validate (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/types/lib/definitions/utils.js:159:13)\r\n    at Object.validate (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/types/lib/definitions/utils.js:196:7)\r\n    at validateField (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/types/lib/validators/validate.js:24:9)\r\n    at Object.validate (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/types/lib/validators/validate.js:17:3)\r\n    at NodePath._replaceWith (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/path/replacement.js:172:7)\r\n    at NodePath._remove (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/path/removal.js:53:10)\r\n    at NodePath.remove (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/path/removal.js:32:8)\r\n    at PluginPass.ForOfStatement (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/plugin-transform-for-of/lib/index.js:195:16)\r\n    at newFn (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/visitors.js:179:21)\r\n    at NodePath._call (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/path/context.js:55:20)\r\n    at NodePath.call (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/path/context.js:42:17)\r\n    at NodePath.visit (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/path/context.js:90:31)\r\n    at TraversalContext.visitQueue (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/context.js:112:16)\r\n    at TraversalContext.visitSingle (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/context.js:84:19)\r\n    at TraversalContext.visit (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/context.js:140:19)\r\n    at Function.traverse.node (/home/mathias/src/nghyd/node_modules/@angular-devkit/build-angular/node_modules/@babel/traverse/lib/index.js:84:17)\r\n</code></pre>\r\n\r\n\r\nThe incriminated `main-es2015.037c4c9354d91b8c3932.js` temp file, even unminified, shows more than 400 for-of statements, hard to tell which one is responsible (but I'll review them anyway).\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\nAngular CLI: 9.0.2\r\nNode: 13.6.0\r\nOS: linux x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.2\r\n@angular-devkit/build-angular     0.900.2\r\n@angular-devkit/build-optimizer   0.900.2\r\n@angular-devkit/build-webpack     0.900.2\r\n@angular-devkit/core              9.0.2\r\n@angular-devkit/schematics        9.0.2\r\n@angular/cdk                      9.0.0\r\n@angular/cli                      9.0.2\r\n@angular/flex-layout              9.0.0-beta.29\r\n@angular/material                 9.0.0\r\n@ngtools/webpack                  9.0.2\r\n@schematics/angular               9.0.2\r\n@schematics/update                0.900.2\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n`tsconfig.app.json`:\r\n```json\r\n{\r\n  \"extends\": \"../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"../out-tsc/app\",\r\n    \"baseUrl\": \"./\",\r\n    \"types\": [ \"node\" ],\r\n    \"typeRoots\": [ \"../node_modules/@types\" ]\r\n  },\r\n  \"angularCompilerOptions\": {\r\n    \"enableIvy\": false\r\n  },\r\n  \"files\": [\r\n    \"main.ts\",\r\n    \"polyfills.ts\"\r\n  ]\r\n}\r\n```\r\n\r\n`tsconfig.json`:\r\n```json\r\n{\r\n  \"compileOnSave\": false,\r\n  \"compilerOptions\": {\r\n    \"downlevelIteration\": true,\r\n    \"importHelpers\": true,\r\n    \"outDir\": \"./dist/out-tsc\",\r\n    \"sourceMap\": true,\r\n    \"declaration\": false,\r\n    \"moduleResolution\": \"node\",\r\n    \"emitDecoratorMetadata\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"target\": \"es2015\",\r\n    \"typeRoots\": [\r\n      \"node_modules/@types\"\r\n    ],\r\n    \"lib\": [\r\n      \"es2017\",\r\n      \"dom\"\r\n    ],\r\n    \"module\": \"esnext\",\r\n    \"baseUrl\": \"./\"\r\n  },\r\n  \"include\": [\r\n    \"src/**/*.ts\"\r\n  ]\r\n}\r\n```\r\n\r\nThanks","Url":"https://github.com/angular/angular-cli/issues/16998","RelatedDescription":"Open issue \"build --prod : babel related unhandled exception after updating to v9\" (#16998)"},{"Id":"566367537","IsPullRequest":false,"CreatedAt":"2020-02-17T15:21:33","Actor":"ibrcic","Number":"16997","RawContent":null,"Title":"Allow custom \"outputPath\" directory for each locale","State":"open","Body":"\r\n# üöÄ Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n- [x] build\r\n\r\n### Description\r\nNew version of Angular CLI allows us to use the new --localize option to generate different locales. This is great as it significantly reduces the build time for apps with many languages. However, as far as I can tell, the name of the output directory for each language is set to the name of the locale.\r\nSo if I have this locale defined:\r\n\r\n`        \"locales\": {\r\n          \"foo-bar\": {\r\n            \"translation\": \"src/i18n/messages.en-US.xlf\"\r\n          }\r\n        }`\r\n\r\nthe output directory for this locale would be `/foo-bar`.\r\n\r\n### Describe the solution you'd like\r\nI would like to be able to specify outputPath per locale, ideally by just defining \"outputPath\" in each locale which would then be appended to existing build options outputPath.\r\n\r\n\r\n### Describe alternatives you've considered\r\nAlternative is to just change name of the locale to the one I want. But this then creates a problem where LOCALE_ID is also changed. And I want my LOCALE_ID to be, for example en-US and my output directory of build to be /en.\r\n","Url":"https://github.com/angular/angular-cli/issues/16997","RelatedDescription":"Open issue \"Allow custom \"outputPath\" directory for each locale\" (#16997)"},{"Id":"566325058","IsPullRequest":false,"CreatedAt":"2020-02-17T15:06:31","Actor":"sergiubologa","Number":"16994","RawContent":null,"Title":"Angular 9 build writes info logs on stderr instead of stdout","State":"closed","Body":"# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n...\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ‚úçÔ∏è--> Yes, the previous version in which this bug was not present was: Angular 8\r\n\r\n\r\n### Description\r\nAfter upgrading my app to Angular 9 the build fails on CI (Azure DevOps) because there is an info log written on stderr. The error message is the following:\r\n\r\n`##[error]Compiling @angular/core/testing : module as esm5`\r\n\r\nand the error message at the end of the build process is the following one:\r\n\r\n`##[error]Process completed with exit code 0 and had 1 error(s) written to the error stream.`\r\n\r\nUnfortunately, I can't configure my CI to not fail if the exit code is 0 and currently fails on anything that's written on the stderr stream.\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n1. Create a new Angular 9 project\r\n2. Run an `ng build --prod` command in the Azure Devops CI\r\n3. The build should fail because the `Compiling @angular/core/testing : module as esm5` messages are written to stderr stream.\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ‚úçÔ∏è-->\r\nAngular CLI: 9.0.2\r\nNode: 12.4.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.900.2\r\n@angular-devkit/build-angular      0.900.2\r\n@angular-devkit/build-ng-packagr   0.900.2\r\n@angular-devkit/build-optimizer    0.900.2\r\n@angular-devkit/build-webpack      0.900.2\r\n@angular-devkit/core               9.0.2\r\n@angular-devkit/schematics         9.0.2\r\n@angular/cdk                       9.0.0\r\n@angular/cli                       9.0.2\r\n@angular/material                  9.0.0\r\n@ngtools/webpack                   9.0.2\r\n@schematics/angular                9.0.2\r\n@schematics/update                 0.900.2\r\nng-packagr                         9.0.0\r\nrxjs                               6.5.4\r\ntypescript                         3.7.5\r\nwebpack                            4.41.2\r\n</code></pre>\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/16994","RelatedDescription":"Closed issue \"Angular 9 build writes info logs on stderr instead of stdout\" (#16994)"},{"Id":"566347323","IsPullRequest":true,"CreatedAt":"2020-02-17T14:47:54","Actor":"alan-agius4","Number":"16995","RawContent":null,"Title":"fix(@ngtools/webpack): elide imports for `implements` keywords","State":"open","Body":"Running the `remove-ivy-jit-support-calls` transformer is causing the following TS bug https://github.com/microsoft/TypeScript/issues/17552 which is why the `elide-imports` transformer exists in the first place.\r\n\r\nHowever, when having a syntax like the below;\r\n```ts\r\nimport { AccountComponentChild } from '../@types';\r\nexport class SignUpComponent implements AccountComponentChild{}\r\n```\r\n\r\nThe `implements` parts of the class is called a `HeritageClause` with child statements of `ExpressionWithTypeArguments` also the same is for `abstract`. With this change we check the token of the `HeritageClause` and if it's an `ImplementsKeyword` we elide the import.\r\n\r\nCloses #16907","Url":"https://github.com/angular/angular-cli/pull/16995","RelatedDescription":"Open PR \"fix(@ngtools/webpack): elide imports for `implements` keywords\" (#16995)"},{"Id":"566299509","IsPullRequest":true,"CreatedAt":"2020-02-17T13:28:57","Actor":"alan-agius4","Number":"16993","RawContent":null,"Title":"test(@schematics/angular): fix component schematic tests on Windows","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/16993","RelatedDescription":"Open PR \"test(@schematics/angular): fix component schematic tests on Windows\" (#16993)"},{"Id":"565821437","IsPullRequest":false,"CreatedAt":"2020-02-17T11:34:38","Actor":"johnpapa","Number":"16986","RawContent":null,"Title":"Add --flat back as a flag for ng new","State":"closed","Body":"# üöÄ Feature request\r\n\r\nAdd back the `--flat` flag for `ng new` so we can tell the CLI to always create components where they are instead of in a nested folder.\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n- [x] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n","Url":"https://github.com/angular/angular-cli/issues/16986","RelatedDescription":"Closed issue \"Add --flat back as a flag for ng new\" (#16986)"},{"Id":"566239439","IsPullRequest":true,"CreatedAt":"2020-02-17T11:33:26","Actor":"alan-agius4","Number":"16992","RawContent":null,"Title":"fix(@ngtools/webpack): add local dts file as dependencies","State":"open","Body":"We now add non node_modules `.d.ts` as a dependency of the main chunk. This is important under Ivy, because NG metadata is now part of the declarations files ex:\r\n\r\n```ts\r\nexport declare class FooComponent implements OnInit {\r\n    constructor();\r\n    ngOnInit(): void;\r\n    static …µfac: i0.…µ…µFactoryDef<FooComponent>;\r\n    static …µcmp: i0.…µ…µComponentDefWithMeta<FooComponent, \"lib-foo\", never, {}, {}, never>;\r\n}\r\n```\r\n\r\nPreviously such files were not being added as dependency and such files didn't get invalidated when changed.\r\n\r\nCloses #16920 and closes #16921","Url":"https://github.com/angular/angular-cli/pull/16992","RelatedDescription":"Open PR \"fix(@ngtools/webpack): add local dts file as dependencies\" (#16992)"},{"Id":"565877715","IsPullRequest":false,"CreatedAt":"2020-02-17T08:48:44","Actor":"VarshneyNaupada","Number":"16987","RawContent":null,"Title":"Issue with \" ng new \" -- Not able to create a new project.","State":"closed","Body":"üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [X] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n< Description>\r\n Unable to use \" ng new \" to create new angular project.\r\n\r\nLogs:\r\n\r\nng new app02\r\n? Would you like to add Angular routing? Yes\r\n? Which stylesheet format would you like to use? CSS\r\nCREATE app02/angular.json (3559 bytes)\r\nCREATE app02/package.json (1282 bytes)\r\nCREATE app02/README.md (1022 bytes)\r\nCREATE app02/tsconfig.json (543 bytes)\r\nCREATE app02/tslint.json (1953 bytes)\r\nCREATE app02/.editorconfig (246 bytes)\r\nCREATE app02/.gitignore (631 bytes)\r\nCREATE app02/browserslist (429 bytes)\r\nCREATE app02/karma.conf.js (1017 bytes)\r\nCREATE app02/tsconfig.app.json (210 bytes)\r\nCREATE app02/tsconfig.spec.json (270 bytes)\r\nCREATE app02/src/favicon.ico (948 bytes)\r\nCREATE app02/src/index.html (291 bytes)\r\nCREATE app02/src/main.ts (372 bytes)\r\nCREATE app02/src/polyfills.ts (2835 bytes)\r\nCREATE app02/src/styles.css (80 bytes)\r\nCREATE app02/src/test.ts (753 bytes)\r\nCREATE app02/src/assets/.gitkeep (0 bytes)\r\nCREATE app02/src/environments/environment.prod.ts (51 bytes)\r\nCREATE app02/src/environments/environment.ts (662 bytes)\r\nCREATE app02/src/app/app-routing.module.ts (246 bytes)\r\nCREATE app02/src/app/app.module.ts (393 bytes)\r\nCREATE app02/src/app/app.component.html (25705 bytes)\r\nCREATE app02/src/app/app.component.spec.ts (1056 bytes)\r\nCREATE app02/src/app/app.component.ts (209 bytes)\r\nCREATE app02/src/app/app.component.css (0 bytes)\r\nCREATE app02/e2e/protractor.conf.js (808 bytes)\r\nCREATE app02/e2e/tsconfig.json (214 bytes)\r\nCREATE app02/e2e/src/app.e2e-spec.ts (638 bytes)\r\nCREATE app02/e2e/src/app.po.ts (301 bytes)\r\n\\ Installing packages...npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\r\nnpm ERR! Unexpected end of JSON input while parsing near '...D7m2C266B6VnM8C20jivf'\r\n\r\n\r\n< Issue Replication>\r\n\r\nJust try to create a new angular project through command prompt.\r\n\r\nng new app01\r\n\r\nIt is not installing properly and node_modules also missing.\r\n\r\n<My version>\r\n\r\nI am using Angular v9.0.2\r\n\r\nng --version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 9.0.2\r\nNode: 12.13.0\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\nIvy Workspace:\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.900.2\r\n@angular-devkit/core         9.0.2\r\n@angular-devkit/schematics   9.0.2\r\n@schematics/angular          9.0.2\r\n@schematics/update           0.900.2\r\nrxjs                         6.5.3\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/16987","RelatedDescription":"Closed issue \"Issue with \" ng new \" -- Not able to create a new project.\" (#16987)"},{"Id":"566128783","IsPullRequest":true,"CreatedAt":"2020-02-17T08:17:49","Actor":"renovate[bot]","Number":"16991","RawContent":null,"Title":"build: update to version","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n:wrench: This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"before 5am on monday\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR is stale, or if you tick the rebase/retry checkbox below.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/16991","RelatedDescription":"Open PR \"build: update to version\" (#16991)"},{"Id":"566096108","IsPullRequest":true,"CreatedAt":"2020-02-17T07:03:32","Actor":"santoshyadav198613","Number":"16990","RawContent":null,"Title":"docs: update test case description","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/16990","RelatedDescription":"Open PR \"docs: update test case description\" (#16990)"},{"Id":"565922720","IsPullRequest":false,"CreatedAt":"2020-02-16T15:27:57","Actor":"nseni","Number":"16989","RawContent":null,"Title":"Enabling Ivy increases bundle size","State":"open","Body":"# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n- [x] build\r\n\r\n### Description\r\nLooks like Ivy prevents tree shaking of not referenced components/injectables. It's either a bug, or positive difference in build size can only be seen if application code actually uses all features of all dependencies, which is not realistic.\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n1. Create a minimal application: `ng new --defaults --minimal -S -s -t -g ivy-size`\r\n2. Build with and without ivy to measure bundle sizes of an empty app:\r\n- With `\"enableIvy\": false`: `main-es2015` is 125 kB\r\n- With `\"enableIvy\": true`: `main-es2015` is 103 kB ‚úîÔ∏è \r\n2. Install package angular2-toaster: `npm i angular2-toaster`\r\n3. Import `ToasterModule` in `app.module.ts`:\r\n```\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ToasterModule } from 'angular2-toaster';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    ToasterModule.forRoot(),\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n```\r\n4. Build with and without ivy again:\r\n- With `\"enableIvy\": false`: `main-es2015` is 131 kB (increased by 6 kB)\r\n- With `\"enableIvy\": true`: `main-es2015` is 144 kB‚ùå(increased by 41 kB)\r\n5. Add `<toaster-container></toaster-container>` to `app.component.ts`\r\n6. Build again:\r\n- With `\"enableIvy\": false`: `main-es2015` is 146 kB\r\n- With `\"enableIvy\": true`: `main-es2015` is 144 kB\r\n\r\nSizes equalized, but now compare the final size with the size of an empty app:\r\n- build with `\"enableIvy\": false` increased by (146-125)=21 kB\r\n- build with `\"enableIvy\": true` increased by (144-103)=41 kB\r\n\r\n-----\r\nI tried to make builds with command `NG_BUILD_DEBUG_OPTIMIZE=minify ng build --prod` and I noticed this difference in builds:\r\n![image](https://user-images.githubusercontent.com/47851128/74614000-ea4feb00-5124-11ea-9785-667ba3815781.png)\r\n\r\n`[ngSwitch]` is used in component [`[toastComp]`](https://github.com/Stabzs/Angular2-Toaster/blob/master/src/toast.component.ts), which is used by component `<toaster-container>`. But in `<toaster-container>`, component `[toastComp]` will not be displayed unless there's at least one element in array toasts. And to add an element I need to inject service ToasterService, which I do not do in my little app.\r\n\r\n\r\n-----\r\nHere's my attempt to reproduce the issue without dependencies:\r\n1. Create a minimal application: `ng new --defaults --minimal -S -s -t -g ivy-size`\r\n2. Build with and without ivy to measure bundle sizes of an empty app:\r\n- With `\"enableIvy\": false`: main-es2015 is 125 kB\r\n- With `\"enableIvy\": true`: main-es2015 is 103 kB ‚úîÔ∏è\r\n3. Replace `app.module.ts` with:\r\n```ts\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { Component, NgModule } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: '<child-component *ngIf=\"false\"></child-component>',\r\n})\r\nexport class AppComponent {}\r\n\r\n@Component({\r\n  selector: 'child-component',\r\n  template: '<input ngModel>',\r\n})\r\nexport class ChildComponent {}\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [AppComponent, ChildComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n```\r\n\r\nLets build it:\r\n- With `\"enableIvy\": false`: `main-es2015` is 158 kB\r\n- With `\"enableIvy\": true`: `main-es2015` is 157 kB ‚ùå\r\n\r\nthe initial positive difference in size is gone. \r\n\r\nLets build with `NG_BUILD_DEBUG_OPTIMIZE=minify&&ng build --prod`:\r\nBy looking at difference in builds I can see that not used features of CommonModule are not removed:\r\n![image](https://user-images.githubusercontent.com/47851128/74615146-fc368b80-512e-11ea-8d5d-12a007d37dc2.png)\r\n![image](https://user-images.githubusercontent.com/47851128/74615154-0a84a780-512f-11ea-8e29-027e41f90914.png)\r\n\r\nSame for FormsModule:\r\n![image](https://user-images.githubusercontent.com/47851128/74615244-158c0780-5130-11ea-9b3d-e5af6036cdf3.png)\r\n![image](https://user-images.githubusercontent.com/47851128/74615262-3fddc500-5130-11ea-95ef-7711da9f11ef.png)\r\n\r\nInterestingly, some not referenced classes of `@angular/forms` are removed: I can find `RadioControlValueAccessor` but not `PatternValidator` or `NgSelectOption`.\r\n\r\n\r\n## üåç Your Environment\r\n<pre><code>Angular CLI: 9.0.2\r\nNode: 12.13.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: No\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.2\r\n@angular-devkit/build-angular     0.900.2\r\n@angular-devkit/build-optimizer   0.900.2\r\n@angular-devkit/build-webpack     0.900.2\r\n@angular-devkit/core              9.0.2\r\n@angular-devkit/schematics        9.0.2\r\n@angular/cli                      9.0.2\r\n@ngtools/webpack                  9.0.2\r\n@schematics/angular               9.0.2\r\n@schematics/update                0.900.2\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2</code></pre>\r\n\r\n**Anything else relevant?**\r\nI tried to set `\"sideEffects\": false,` in package.json of `angular2-toaster`, it didn't help.","Url":"https://github.com/angular/angular-cli/issues/16989","RelatedDescription":"Open issue \"Enabling Ivy increases bundle size\" (#16989)"},{"Id":"565896249","IsPullRequest":true,"CreatedAt":"2020-02-16T12:18:31","Actor":"chrisguttandin","Number":"16988","RawContent":null,"Title":"fix(@angular/cli): set inlineTemplate and inlineStyle for minimal projects","State":"open","Body":"I noticed that when creating a project with the `minimal` flag like this `npx @angular/cli new my-demo --minimal true` it will create an `app.component.ts` with inline styles and inline templates. However when creating another component with `ng generate component another-component` it will have an external template and external styles.\r\n\r\nThis pull request tries to fix this inconsistency by setting the `inlineTemplate` and `inlineStyle` options when creating a `minimal` project to make sure all generated components will have inlined styles and templates.\r\n\r\nPlease let me know if there is anything that needs to be changed.","Url":"https://github.com/angular/angular-cli/pull/16988","RelatedDescription":"Open PR \"fix(@angular/cli): set inlineTemplate and inlineStyle for minimal projects\" (#16988)"},{"Id":"565761564","IsPullRequest":true,"CreatedAt":"2020-02-15T15:18:51","Actor":"d-koppenhagen","Number":"16985","RawContent":null,"Title":"fix(@angular/cli): correctly split array options","State":"open","Body":"This PR will fix https://github.com/angular/angular-cli/issues/16320\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/16985","RelatedDescription":"Open PR \"fix(@angular/cli): correctly split array options\" (#16985)"},{"Id":"565736991","IsPullRequest":false,"CreatedAt":"2020-02-15T11:44:10","Actor":"reda-alaoui","Number":"16984","RawContent":null,"Title":"deploy-url trailing slash does not appear in the message 'open your browser on {url}'","State":"open","Body":"# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\nI don't know.\r\n\r\n### Description\r\n\r\nI serve an angular application with `ng serve --host 0.0.0.0 --disable-host-check --deploy-url=/my-app/`. \r\nOn startup, the CLI prints the following message:\r\n```\r\n Angular Live Development Server is listening on 0.0.0.0:4200, open your browser on http://localhost:4200/my-app \r\n```\r\nAs you can see the trailing slash disappears.\r\nThe message should be:\r\n```\r\n Angular Live Development Server is listening on 0.0.0.0:4200, open your browser on http://localhost:4200/my-app/\r\n```\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nRun `ng serve --host 0.0.0.0 --disable-host-check --deploy-url=/my-app/`. \r\n\r\n## üî• Exception or Error\r\n\r\nNone\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\nAngular CLI: 9.0.2\r\nNode: 10.13.0\r\nOS: linux x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.2\r\n@angular-devkit/build-angular     0.900.2\r\n@angular-devkit/build-optimizer   0.900.2\r\n@angular-devkit/build-webpack     0.900.2\r\n@angular-devkit/core              9.0.2\r\n@angular-devkit/schematics        9.0.2\r\n@angular/cli                      9.0.2\r\n@ngtools/webpack                  9.0.2\r\n@schematics/angular               9.0.2\r\n@schematics/update                0.900.2\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nIt seems that the trailing slash is removed at https://github.com/angular/angular-cli/blob/1dbcd8dccd05de377d02bd75ba2464434a2e7212/packages/angular_devkit/build_angular/src/dev-server/index.ts#L530","Url":"https://github.com/angular/angular-cli/issues/16984","RelatedDescription":"Open issue \"deploy-url trailing slash does not appear in the message 'open your browser on {url}'\" (#16984)"},{"Id":"565400651","IsPullRequest":false,"CreatedAt":"2020-02-15T08:05:04","Actor":"VarshneyNaupada","Number":"16977","RawContent":null,"Title":"New Angular project is not created","State":"closed","Body":"Hi Team,\r\n\r\nI am trying to create a new Angular project, but it is giving errors. I am using the latest angular/CLI i.e. v9\r\nng new app01 ","Url":"https://github.com/angular/angular-cli/issues/16977","RelatedDescription":"Closed issue \"New Angular project is not created\" (#16977)"},{"Id":"565709621","IsPullRequest":true,"CreatedAt":"2020-02-15T07:13:54","Actor":"renovate[bot]","Number":"16983","RawContent":null,"Title":"build: update terser-webpack-plugin to version 2.3.5","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [terser-webpack-plugin](https://togithub.com/webpack-contrib/terser-webpack-plugin) | dependencies | patch | [`2.3.4` -> `2.3.5`](https://renovatebot.com/diffs/npm/terser-webpack-plugin/2.3.4/2.3.5) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/terser-webpack-plugin</summary>\n\n### [`v2.3.5`](https://togithub.com/webpack-contrib/terser-webpack-plugin/blob/master/CHANGELOG.md#&#8203;235httpsgithubcomwebpack-contribterser-webpack-plugincomparev234v235-2020-02-14)\n\n[Compare Source](https://togithub.com/webpack-contrib/terser-webpack-plugin/compare/v2.3.4...v2.3.5)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you tick the rebase/retry checkbox below.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/16983","RelatedDescription":"Open PR \"build: update terser-webpack-plugin to version 2.3.5\" (#16983)"},{"Id":"565709603","IsPullRequest":true,"CreatedAt":"2020-02-15T07:13:38","Actor":"renovate[bot]","Number":"16982","RawContent":null,"Title":"build: update @types/babel__core to version 7.1.4","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/babel__core](https://togithub.com/DefinitelyTyped/DefinitelyTyped) | devDependencies | patch | [`7.1.3` -> `7.1.4`](https://renovatebot.com/diffs/npm/@types%2fbabel__core/7.1.3/7.1.4) |\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you tick the rebase/retry checkbox below.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/16982","RelatedDescription":"Open PR \"build: update @types/babel__core to version 7.1.4\" (#16982)"},{"Id":"565553389","IsPullRequest":false,"CreatedAt":"2020-02-14T21:04:44","Actor":"bgotink","Number":"16981","RawContent":null,"Title":"Make @angular-devkit/core/node/resolve independent of node_modules resolution","State":"closed","Body":"\r\n# üöÄ Feature request\r\n\r\n### Description\r\n\r\nThe custom resolution provided by `@angular-devkit/core/node/resolve` reimplements the node_module resolution algorithm, which doesn't work for package manages that don't use node_modules (yarn 2 with plug'n'play, npm tink if that gets revived).\r\n\r\n### Describe the solution you'd like\r\n\r\nReplace the custom node_modules implementation with calls to either `require.resolve` with the `paths` option or to a `require` function created using [`createRequire`](https://nodejs.org/api/modules.html#modules_module_createrequire_filename). \r\nThese functions work regardless of the used package manager (yarn 1, yarn 2 with pnp, npm, pnpm, &hellip;)\r\n\r\n### Describe alternatives you've considered\r\n\r\n- Override the resolution, using either\r\n  - `setResolveHook`\r\n  - [a patch](https://github.com/bgotink/yarn-plugin-angular/blob/master/patches/%40angular-devkit/core.patch) applied to the `@angular-devkit/core` package via yarn 2's `patch` protocol or via a yarn plugin\r\n- Explicitly query the yarn PnP API, but that would require plug'n'play-specific logic in the resolution file.\r\n","Url":"https://github.com/angular/angular-cli/issues/16981","RelatedDescription":"Closed issue \"Make @angular-devkit/core/node/resolve independent of node_modules resolution\" (#16981)"},{"Id":"565542872","IsPullRequest":false,"CreatedAt":"2020-02-14T21:00:26","Actor":"bgotink","Number":"16979","RawContent":null,"Title":"List all peerDependencies in @angular-devkit/build-angular's manifest","State":"closed","Body":"# üöÄ Feature request or üêû bug depending on your point of view\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [x] test\r\n- [x] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [x] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\nThe `@angular-devkit/build-angular` package imports a couple of packages that it doesn't list in it's `dependencies` or `peerDependencies`.\r\nWhen angular is installed using a package manager that doesn't use node_modules (e.g. yarn 2 with plug'n'play), the `@angular-devkit/build-angular` package cannot access these unlisted dependencies anymore.\r\n\r\nUsing a package manager that uses node_modules (yarn without PnP, npm, &hellip;) this works because the node_modules dependency resolution algorithm is quite forgiving.\r\n\r\n### Describe the solution you'd like\r\n\r\nList these hidden dependencies as (optional) peer dependencies of the `@angular-devkit/build-angular` package.\r\n\r\nThe list of hidden dependencies includes, after a cursory search, at least the following packages:\r\n\r\n- karma\r\n- typescript\r\n- node-sass\r\n- protractor\r\n- tslint\r\n\r\n### Describe alternatives you've considered\r\n\r\n- Don't support yarn 2.\r\n- Yarn 2 supports [\"package extensions\"](https://yarnpkg.com/configuration/yarnrc#packageExtensions) for explicitly this use case: to patch packages that are missing some dependencies and/or peerDependencies.\r\n  This of course means these package extensions need to be added somewhere:\r\n  - Everyone can add them to their own projects, this is by far the worst option\r\n  - Yarn has a compatibility plugin, to support popular packages until they upstream the necessary changes.\r\n  - A custom yarn plugin could include package extensions as well.\r\n- Yarn 2 has [a \"pnpify\" binary](https://yarnpkg.com/advanced/pnpify) that mocks a node_modules file structure. This requires everyone to run Angular CLI commands as `yarn pnpify ng` and it adds extra startup time to every angular CLI process and every nodejs process spawned by the angular CLI.\r\n","Url":"https://github.com/angular/angular-cli/issues/16979","RelatedDescription":"Closed issue \"List all peerDependencies in @angular-devkit/build-angular's manifest\" (#16979)"},{"Id":"565551798","IsPullRequest":false,"CreatedAt":"2020-02-14T20:55:54","Actor":"clydin","Number":"16980","RawContent":null,"Title":"Yarn 2.0 Support Status","State":"open","Body":"With the release of [Yarn 2.0](https://dev.to/arcanis/introducing-yarn-2-4eh1), many users may be interested in trying out the new version of the package manager with the Angular CLI.  As of 9.0, the Angular CLI does not natively support Yarn 2.0 and its new package management strategy named Plug‚Äôn‚ÄôPlay (PnP).  However, native support is currently and actively being investigated with several initial steps already in place.  Native support is tentatively scheduled for inclusion in 10.0 or beyond with the goal of integrating new major versions of upstream dependencies that provide native support.\r\n\r\nFor those that are interested in experimenting with building applications using the new package manager, you can use the following instructions to workaround the current issues.\r\n**WARNING:**  This is not recommended for use with deployed applications and should not be used in a production environment.\r\n1) Install the workspace dependencies using Yarn 2.0\r\n2) Install the `pnpify` package: `yarn add -D @yarnpkg/pnpify`\r\n3) Unplug all Angular related packages including third-party libraries used within the application via `yarn unplug <package_name>`.  This should include at a minimum all `@angular` scoped packages.\r\n4) If using the E2E command, the `webdriver-manager` package also needs to be unplugged: `yarn unplug webdriver-manager`\r\n\r\nOnce these steps are complete, Angular CLI operations such as serve or build can be used by executing `yarn pnpify ng build` or `yarn pnpify ng serve`, respectively.\r\n\r\nPlease note that manually running the `ngcc` command with or without the pnpify utility does not currently work.\r\n\r\nIf any issues are encountered using the workaround steps or for Yarn 2.0 in general, please open a separate issue detailing the problem.","Url":"https://github.com/angular/angular-cli/issues/16980","RelatedDescription":"Open issue \"Yarn 2.0 Support Status\" (#16980)"},{"Id":"565410140","IsPullRequest":true,"CreatedAt":"2020-02-14T15:52:08","Actor":"filipesilva","Number":"16978","RawContent":null,"Title":"fix(@angular-devkit/build-angular): limit CPUs used by terser-webpack‚Ä¶","State":"open","Body":"‚Ä¶-plugin\r\n\r\nShould help with https://github.com/angular/angular-cli/issues/16860#issuecomment-585751187","Url":"https://github.com/angular/angular-cli/pull/16978","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): limit CPUs used by terser-webpack‚Ä¶\" (#16978)"},{"Id":"565388097","IsPullRequest":true,"CreatedAt":"2020-02-14T15:15:00","Actor":"filipesilva","Number":"16976","RawContent":null,"Title":"More bazel tests","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/16976","RelatedDescription":"Open PR \"More bazel tests\" (#16976)"},{"Id":"565237871","IsPullRequest":false,"CreatedAt":"2020-02-14T11:26:15","Actor":"kolkov","Number":"16975","RawContent":null,"Title":"ENDLOCAL EXIT /b 3 when updating lib to Angular 9","State":"closed","Body":"I try to update my lib to Angular 9 and got an error at end of procedure. Is this correct?\r\nhttps://github.com/kolkov/ngx-dadata\r\n`ng update @angular/cli`\r\n![image](https://user-images.githubusercontent.com/3740898/74523269-d8582780-4f2d-11ea-870d-185591490764.png)\r\n\r\n![image](https://user-images.githubusercontent.com/3740898/74522875-1f91e880-4f2d-11ea-92ba-556867ebd4a1.png)\r\n\r\nThanks!","Url":"https://github.com/angular/angular-cli/issues/16975","RelatedDescription":"Closed issue \"ENDLOCAL EXIT /b 3 when updating lib to Angular 9\" (#16975)"},{"Id":"565189312","IsPullRequest":true,"CreatedAt":"2020-02-14T08:57:49","Actor":"alan-agius4","Number":"16974","RawContent":null,"Title":"build: update browserslist and caniuse-lite","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/16974","RelatedDescription":"Open PR \"build: update browserslist and caniuse-lite\" (#16974)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"566548243","IsPullRequest":false,"CreatedAt":"2020-02-17T22:46:17","Actor":"DerHerrGammler","Number":"18532","RawContent":null,"Title":"mat-menu-item width","State":"open","Body":"#### Feature Description\r\n\r\nI would like to set the width of the mat-menu-item to the same with as the button wich opens the menu.\r\n\r\n#### Use Case\r\n\r\nI have a menu and a larger button open button. It would look so much better if the mat-menu-item has the same width as the button. Actually there is no simple option.\r\n","Url":"https://github.com/angular/components/issues/18532","RelatedDescription":"Open issue \"mat-menu-item width\" (#18532)"},{"Id":"566525502","IsPullRequest":true,"CreatedAt":"2020-02-17T21:30:16","Actor":"crisbeto","Number":"18531","RawContent":null,"Title":"feat(datepicker): polish up date range selector","State":"open","Body":"Makes a bunch of changes to polish up the behavior of the date range picker.\r\n\r\n- Makes the range selection logic a bit smarter about when to pick start/end so that it's more intuitive.\r\n- Fixes hovering over disabled cells triggering the range selection styles.\r\n- Fixes a \"changed after checked\" error when selecting a range using the keyboard.\r\n- Implements validation that the start isn't after the end, and that the end isn't before the start.\r\n- Adds the missing ARIA attributes.\r\n- Fixes being able to select the placeholders of a disabled range input.\r\n- Adds the ability to disable the entire range input.\r\n- Fixes the inputs not graying out their values when they're disabled.\r\n- Makes the range input a bit smarter about which input to focus on click.\r\n\r\nWith these changes the date range picker should be mostly feature-complete.","Url":"https://github.com/angular/components/pull/18531","RelatedDescription":"Open PR \"feat(datepicker): polish up date range selector\" (#18531)"},{"Id":"566509069","IsPullRequest":false,"CreatedAt":"2020-02-17T20:43:57","Actor":"fxck","Number":"18530","RawContent":null,"Title":"cdk drag: add ability to update internal _activeTransform","State":"open","Body":"I want to use `cdkDrag` for the dragging part of a custom scrollbar. But the thing is, the native scroll occurs, I apply transform3d to the custom scrollbar thumb, which is simultaneously the drag handle, now when I try to drag after scroll occurred, those transforms get all messed up.\r\n\r\nSo ideally I would like to be able to sync those values.\r\n\r\nThis works:\r\n\r\n```\r\n(this.cdkDragYRef as any)._dragRef._activeTransform.y = this._scrollbarPosition.y;\r\n(this.cdkDragXRef as any)._dragRef._activeTransform.x = this._scrollbarPosition.x;\r\n```","Url":"https://github.com/angular/components/issues/18530","RelatedDescription":"Open issue \"cdk drag: add ability to update internal _activeTransform\" (#18530)"},{"Id":"565880317","IsPullRequest":false,"CreatedAt":"2020-02-17T18:33:45","Actor":"vajahath","Number":"18515","RawContent":null,"Title":"Image-list component","State":"closed","Body":"#### Feature Description\r\n\r\nMaterial design contains a spec for [image-list](https://material-components.github.io/material-components-web-catalog/#/component/image-list).\r\nIt would be nice if we have an angular material equivalent for this.\r\n\r\n#### Use Case\r\n\r\nPlease see [image-list](https://material-components.github.io/material-components-web-catalog/#/component/image-list)","Url":"https://github.com/angular/components/issues/18515","RelatedDescription":"Closed issue \"Image-list component\" (#18515)"},{"Id":"566443660","IsPullRequest":true,"CreatedAt":"2020-02-17T17:46:49","Actor":"devversion","Number":"18528","RawContent":null,"Title":"feat(form-field): expose label content element id for custom controls","State":"open","Body":"Currently, the form-field always creates a label element as sibling\r\nto projected form-field controls. For native controls, the label is\r\nassociated with the controls using the `for` attribute.\r\n\r\nThis doesn't work for custom controls which might not be based\r\non native controls. e.g. the `mat-select`. In those cases, the\r\nappropriate aria attributes need to be applied with `aria-labelledby`\r\nthat refers to the label content element.\r\n\r\nSince this is a common pattern for custom controls that don't use\r\nnative controls, we need to expose the element id for the label content.\r\n\r\nCurrently we already do this for the select, but just prefixed it with\r\nan underscore. This denotes it as private API while there is obviously a\r\nuse-case for exposing this publicly. Best example is how the select _needs_ it.\r\n\r\n**Note**: If we decide to go with that change, the target is usually `minor`, but it might be worth checking if we could get it into `master` earlier for our MDC form-field changes. ","Url":"https://github.com/angular/components/pull/18528","RelatedDescription":"Open PR \"feat(form-field): expose label content element id for custom controls\" (#18528)"},{"Id":"565869482","IsPullRequest":false,"CreatedAt":"2020-02-17T17:16:15","Actor":"gegobyte","Number":"18514","RawContent":null,"Title":"How to add containers, row, columns, margin, padding in Angular Material?","State":"closed","Body":"<!--------\r\n\r\nThe Angular team can't provide general troubleshooting help. However, the extended community of\r\nusers can provide more help: \r\n\r\nStackOverflow: https://stackoverflow.com/questions/tagged/angular-material2\r\nGitter: https://gitter.im/angular/material2\r\nGoogle Groups: https://groups.google.com/forum/#!forum/angular-material2\r\n\r\nIssues should capture only bug reports and feature requests. However, we understand that \r\nit is not always clear whether an issue is caused by a bug or incorrect usage of a feature/component.\r\n\r\nMost support requests will be automatically closed. If the answer is quickly obvious, though, we \r\nmight be able to provide a brief answer.\r\n\r\n-------->\r\n\r\n\r\n#### What are you trying to do?\r\n\r\nTrying to add margin or spacing between components, row, columns, containers etc..\r\n\r\n#### What troubleshooting steps have you tried?\r\n\r\nCan't find anything related to it in the [docs](material.angular.io).\r\n  \r\n#### Environment\r\n\r\n- Angular: 9.0.2\r\n- CDK/Material: 9.0.0\r\n\r\nYesterday I started learning Angular, before I was creating websites using Materialize CSS. It has a responsive grid system, one can add container class and it automatically gives margin on both left and right. In Angular Material, everything starts at the top left and there is no spacing between components, for example - if I add a toolbar and then a card, the card will be directly attached to the bottom of the toolbar with no vertical spacing.\r\n\r\nI can't find any container either which can add horizontal margin. So how to add all these things?","Url":"https://github.com/angular/components/issues/18514","RelatedDescription":"Closed issue \"How to add containers, row, columns, margin, padding in Angular Material?\" (#18514)"},{"Id":"566427752","IsPullRequest":true,"CreatedAt":"2020-02-17T17:10:14","Actor":"crisbeto","Number":"18527","RawContent":null,"Title":"build: bump tslint and stylelint to latest major versions","State":"open","Body":"We were one major version behind on tslint and stylelint.","Url":"https://github.com/angular/components/pull/18527","RelatedDescription":"Open PR \"build: bump tslint and stylelint to latest major versions\" (#18527)"},{"Id":"566487607","IsPullRequest":false,"CreatedAt":"2020-02-17T14:58:54","Actor":"pburkindine","Number":"18529","RawContent":null,"Title":"missing ast-utils during A9 upgrade","State":"open","Body":"## Bug, enhancement request, or proposal:\r\n\r\nReceived error `An unhandled exception occurred: Cannot find module '@schematics/angular/utility/ast-utils'` while performing A9 upgrade, `\"@angular-devkit/schematics\": \"^9.0.2\", \"@angular/cli\": \"9.0.2\",`","Url":"https://github.com/angular/components/issues/18529","RelatedDescription":"Open issue \"missing ast-utils during A9 upgrade\" (#18529)"},{"Id":"566345751","IsPullRequest":false,"CreatedAt":"2020-02-17T14:49:12","Actor":"eng-dibo","Number":"18526","RawContent":null,"Title":"dynamically insert <mat-checkbox> don't rendered as expected","State":"closed","Body":"\r\nI want to dynamically insert a `<mat-checkbox>` element into a component.\r\nand I inserted two `<mat-checkbox>` elements. one inserted statically (i.e into the template file directly).\r\n\r\nand the other one inserted dynamically, and contains a `<mat-checkbox>` and another normal checkbox `<input type=\"checkbox\" />`\r\n\r\nthe first one (the statically inserted one) rendered without any problem.\r\n\r\nalso the normal input inserted dynamically without any problem.\r\n\r\nbut the `<mat-checkbox>` that dynamically inserted didn't render as expected.\r\n\r\ncomponent.html:\r\n\r\n```\r\n<mat-checkbox> checkbox (static) </mat-checkbox>\r\n\r\n<div [innerHTML] = \"test2\">\r\n\r\n```\r\n\r\ncomponent.ts:\r\n\r\n```\r\n this.test= ` \r\n     <mat-checkbox>mat-checkbox</mat-checkbox><br />\r\n     <input type=\"checkbox\" /> normal checkbox   \r\n  `\r\n\r\n  this.test2 = this.sanitizer.bypassSecurityTrustHtml(this.test);\r\n\r\n```\r\n\r\nI created a Reproduction on stackblitz:\r\n\r\nhttps://stackblitz.com/edit/angular-hsjevo\r\n","Url":"https://github.com/angular/components/issues/18526","RelatedDescription":"Closed issue \"dynamically insert <mat-checkbox> don't rendered as expected\" (#18526)"},{"Id":"566310440","IsPullRequest":true,"CreatedAt":"2020-02-17T13:47:22","Actor":"devversion","Number":"18525","RawContent":null,"Title":"fix(ng-update): better detection for workspace project in v9 hammer migration","State":"open","Body":"Currently the v9 HammerJS migration determines the workspace project by\r\nconsulting the `ts.Program` that has been constructed. This logic is not\r\nguaranteed to work because a TypeScript program doesn't necessarily need\r\nto contain any \"root\" file names. This means that we cannot reliably\r\ndetermine the workspace project from the `ts.Program` and we will throw\r\nan error that no project could be found.\r\n\r\nWe can improve this logic by simply using the workspace project that is\r\nassociated with the originating tsconfig file. This was previously not\r\npossible, but 411d048249368e640cae4f31941dd67b24f07446 enabled us to pass through the workspace project.\r\n\r\nFixes #18504.","Url":"https://github.com/angular/components/pull/18525","RelatedDescription":"Open PR \"fix(ng-update): better detection for workspace project in v9 hammer migration\" (#18525)"},{"Id":"566292398","IsPullRequest":true,"CreatedAt":"2020-02-17T13:16:32","Actor":"devversion","Number":"18524","RawContent":null,"Title":"Rebase and backwards compatibility changes for density API ","State":"open","Body":"@jelbourn I've rebased the `density-api` feature branch but intentionally left out changes for things like the `strong-focus-indicator`. I wanted these to be part of this PR for better review.\r\n\r\nWe can port the file changes to the strong-focus-indicators to `master`. Though it could wait until we merge the feature branch into master too.\r\n\r\nAlso I'd like to get your feedback on the deprecation phase in terms of custom themes. Should we have one? I don't think we want to maintain the backwards compat logic permanently.","Url":"https://github.com/angular/components/pull/18524","RelatedDescription":"Open PR \"Rebase and backwards compatibility changes for density API \" (#18524)"},{"Id":"566231955","IsPullRequest":false,"CreatedAt":"2020-02-17T11:19:17","Actor":"naveedahmed1","Number":"18523","RawContent":null,"Title":"MatInput - On Mobile devices pressing enter key should trigger blur and hide keyboard","State":"open","Body":"#### Reproduction\r\n\r\nOn mobile devices we often have text fields for example in case of search bar, where we want the form to be submitted when user hits enter key or search button on keyboard. When using normal HTML input, pressing enter/search button automatically submits the form and hides the keyboard.\r\n\r\nWhen using matInput, though pressing enter/search button does submit the form but it doesn't hides the keyboard.\r\n \r\n```\r\n<form [formGroup]=\"form\" (ngSubmit)=\"search()\">\r\n              <mat-form-field class=\"mat-form-field-full-width\">\r\n                <input matInput formControlName=\"keywords\" type=\"search\" placeholder=\"Title\">\r\n              </mat-form-field>\r\n</form>\r\n\r\n```\r\n#### Expected Behavior\r\n\r\nWhen using matInput, pressing enter/search button should hide the keyboard.\r\n\r\n#### Actual Behavior\r\n\r\nThe keyboard remains visible although the form is submitted.\r\n\r\n#### Environment\r\n\r\n- Angular: 9.x\r\n- CDK/Material:9.x\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Android\r\n","Url":"https://github.com/angular/components/issues/18523","RelatedDescription":"Open issue \"MatInput - On Mobile devices pressing enter key should trigger blur and hide keyboard\" (#18523)"},{"Id":"566211531","IsPullRequest":true,"CreatedAt":"2020-02-17T10:43:35","Actor":"Tanemahuta","Number":"18522","RawContent":null,"Title":"Issue #18519: cdk overlay container removed fix","State":"open","Body":"So, this is my fix. It works quite well.\r\nThe problem was:\r\n- another angular app (e.g. sideloaded) or other JS code has removed the 'cdk-overlay-container'\r\n- since all was cached (also the OverlayRefs in the components), the container was not re-created/re-appended to the DOM\r\nMy solution sketch:\r\n- On the OverlayContainer component:\r\n - additional check if the HTML element for the overlay has a parentNode (= within the DOM)\r\n - if the container was removed, it will be re-added (and the others will be removed)\r\n- On the Overlay service:\r\n - wrap the PortalOutlet adding a call to the OverlayContainer component which calls the getContainer method and ensures that the HTML element is where it is supposed to be.\r\n\r\nEt voil√†: it works.\r\n\r\nSorry that I did not include a test, but you should get the idea.","Url":"https://github.com/angular/components/pull/18522","RelatedDescription":"Open PR \"Issue #18519: cdk overlay container removed fix\" (#18522)"},{"Id":"566103306","IsPullRequest":true,"CreatedAt":"2020-02-17T10:13:16","Actor":"Tanemahuta","Number":"18520","RawContent":null,"Title":"Fix #18519: Check if the overlay container still has a parent, if not recreate it","State":"closed","Body":"Well this was an easy one :)","Url":"https://github.com/angular/components/pull/18520","RelatedDescription":"Closed or merged PR \"Fix #18519: Check if the overlay container still has a parent, if not recreate it\" (#18520)"},{"Id":"566144613","IsPullRequest":true,"CreatedAt":"2020-02-17T08:48:13","Actor":"trik","Number":"18521","RawContent":null,"Title":"build: use version placeholder for tslib dep in examples package","State":"open","Body":"","Url":"https://github.com/angular/components/pull/18521","RelatedDescription":"Open PR \"build: use version placeholder for tslib dep in examples package\" (#18521)"},{"Id":"566098764","IsPullRequest":false,"CreatedAt":"2020-02-17T07:10:39","Actor":"Tanemahuta","Number":"18519","RawContent":null,"Title":"CDK Overlay Container is not re-created/re-appended when removed from the DOM","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Use a framework like single-spa which can load one application after another\r\n2. E.g. open menus from two different angular apps\r\n \r\n \r\n#### Expected Behavior\r\n\r\nThe menus open and the overlay container is being used/recreated by each app.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nThe cdk overlay container gets set when first opening it for each app.\r\nThe last app will always win and have the correct overlay container, while the other app will reach for an element which has removed from the dom\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8.2.14\r\n- CDK/Material: 8.2.3\r\n- Browser(s): ALL\r\n- ALL\r\n","Url":"https://github.com/angular/components/issues/18519","RelatedDescription":"Open issue \"CDK Overlay Container is not re-created/re-appended when removed from the DOM\" (#18519)"},{"Id":"565933382","IsPullRequest":false,"CreatedAt":"2020-02-16T16:44:31","Actor":"medeirosjoaquim","Number":"18518","RawContent":null,"Title":"Examples link to stackblitz are broken","State":"open","Body":"Examples in stackblitz are broken like in [this example](https://run.stackblitz.com/api/angular/v1?file=src%2Fapp%2Fexpansion-overview-example.ts) where the link was taken from https://material.angular.io/components/expansion/overview\r\n\r\nIt's the same as mentioned in #18462.\r\n\r\nI get \"Internal Server Error\" for all links. Perhaps it has something to do with the new version, cause I can google the examples and find the old link that works.","Url":"https://github.com/angular/components/issues/18518","RelatedDescription":"Open issue \"Examples link to stackblitz are broken\" (#18518)"},{"Id":"565910615","IsPullRequest":true,"CreatedAt":"2020-02-16T14:18:08","Actor":"nunocastromartins","Number":"18517","RawContent":null,"Title":"fix(cdk/platform): scroll behaviour support check","State":"closed","Body":"Fixes the check for scroll behaviour when `document` is `null` (when not in a browser).","Url":"https://github.com/angular/components/pull/18517","RelatedDescription":"Closed or merged PR \"fix(cdk/platform): scroll behaviour support check\" (#18517)"},{"Id":"565908384","IsPullRequest":false,"CreatedAt":"2020-02-16T13:50:48","Actor":"opela","Number":"18516","RawContent":null,"Title":"google-map gray in expansion panel | safari","State":"open","Body":"####\r\nSteps to reproduce:\r\n1. put google-map component inside angular material expansion panel\r\n\r\n \r\n#### Expected Behavior\r\n\r\nTo be able to zoom on every browser when google-map is inside angular material expansion panel. It‚Äôs fine in chrome.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nThe map becomes gray with no content, on zoom/drag it appears again. This behavior is valid for safari on latest mac os and ios\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0.1\r\n- CDK/Material:9.0.1\r\n- Browser: safari\r\n","Url":"https://github.com/angular/components/issues/18516","RelatedDescription":"Open issue \"google-map gray in expansion panel | safari\" (#18516)"},{"Id":"565771657","IsPullRequest":true,"CreatedAt":"2020-02-15T16:14:38","Actor":"crisbeto","Number":"18513","RawContent":null,"Title":"fix(selection-list): incorrectly handling A key in some cases","State":"open","Body":"Fixes a couple of issues related to how the selection list handles the \"A\" key:\r\n1. The typeahead doesn't work for the \"A\" key. It's because we were intercepting it earlier to support the \"Select all\" functionality.\r\n2. Disables the ctrl + A shortcut in single selection mode, because it only makes sense during multi selection.","Url":"https://github.com/angular/components/pull/18513","RelatedDescription":"Open PR \"fix(selection-list): incorrectly handling A key in some cases\" (#18513)"},{"Id":"565760145","IsPullRequest":true,"CreatedAt":"2020-02-15T15:07:33","Actor":"crisbeto","Number":"18512","RawContent":null,"Title":"build: use local bazel installation in test script watch mode","State":"open","Body":"Currently the test script uses the global Bazel installation in watch mode and the local one in non-watch mode. These changes fix it so we also use the local installation for watch mode.","Url":"https://github.com/angular/components/pull/18512","RelatedDescription":"Open PR \"build: use local bazel installation in test script watch mode\" (#18512)"},{"Id":"565752014","IsPullRequest":true,"CreatedAt":"2020-02-15T14:03:36","Actor":"crisbeto","Number":"18511","RawContent":null,"Title":"chore: avoid syntax warnings in dev app on IE","State":"open","Body":"Fixes IE logging some invalid syntax warnings because we had a few tags outside the `body`.","Url":"https://github.com/angular/components/pull/18511","RelatedDescription":"Open PR \"chore: avoid syntax warnings in dev app on IE\" (#18511)"},{"Id":"565713931","IsPullRequest":true,"CreatedAt":"2020-02-15T07:58:42","Actor":"sacgrover","Number":"18510","RawContent":null,"Title":"docs(theming): removed extra only (angular#35465)","State":"open","Body":"Fixes #35465","Url":"https://github.com/angular/components/pull/18510","RelatedDescription":"Open PR \"docs(theming): removed extra only (angular#35465)\" (#18510)"},{"Id":"565709965","IsPullRequest":false,"CreatedAt":"2020-02-15T07:17:20","Actor":"taksumaki","Number":"18509","RawContent":null,"Title":"Why don't I load the components that I import into my Lazy load module?","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Use Angular material in a Lazy load module.\r\n2. Try to use the imported component in HTML view\r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\nThat the module works after the development server is restarted due to the saving of the module file with new changes.\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\nIt's a simple question, so if they need code they tell me, but I don't see a need, since we all understand the Lazy Load, but hey.\r\n\r\nMy problem is that for example, I start my development server, and I have my module lazy load \"WelcomeModule\", all good for now, but the problem comes, I import for example the component of \"Mat icon\", I save the file, the server of development is recharged, but the Mat Icon module appears as if it was not imported, if not, that I have to stop the development server, restart it, and now if the component already loads.\r\n\r\nI find it very annoying to have to stop and restart the development server every time I import a component to my Lazy Load module called \"WelcomeModule\".\r\n\r\nWhat can I do in this case? Do I do something wrong or will it be Angular Material bug?\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0.0\r\n- CDK/Material: 9.0.0\r\n- Browser(s): Google Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Solus Os (Linux)\r\n","Url":"https://github.com/angular/components/issues/18509","RelatedDescription":"Open issue \"Why don't I load the components that I import into my Lazy load module?\" (#18509)"},{"Id":"565571246","IsPullRequest":true,"CreatedAt":"2020-02-14T21:46:34","Actor":"crisbeto","Number":"18508","RawContent":null,"Title":"fix(material-experimental/mdc-progress-bar): changed after checked error on animation end event with noop animations","State":"open","Body":"Along the same lines as #18441. If the `animationEnd` of a progress bar is used to update something in the view of an app that has disabled animations, a \"changed after checked\" error will be thrown because of the timing at which we dispatch the event. These changes work around the issue by not having separate logic for when the animations are enabled or disabled.","Url":"https://github.com/angular/components/pull/18508","RelatedDescription":"Open PR \"fix(material-experimental/mdc-progress-bar): changed after checked error on animation end event with noop animations\" (#18508)"},{"Id":"565447999","IsPullRequest":false,"CreatedAt":"2020-02-14T17:01:03","Actor":"msorens","Number":"18507","RawContent":null,"Title":"Angular 9 Upgrade Erroring on cdk-high-contrast mixin","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Download code from this branch: https://github.com/chef/automate/tree/ms/angular-9-upgrade\r\n2. cd components/automate-ui\r\n3. npm install\r\n4. ng build\r\n \r\n#### Expected Behavior\r\n\r\nNo build errors\r\n\r\n#### Actual Behavior\r\n\r\nSeveral errors of this form:\r\n```\r\nERROR in ./src/styles.scss (./node_modules/@angular-devkit/build-angular/src/angular-cli-files/plugins/raw-css-loader.js!./node_modules/postcss-loader/src??embedded!./node_modules/sass-loader/dist/cjs.js??ref--15-3!./src/styles.scss)\r\nModule build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nSassError: wrong number of arguments (2 for 1) for `cdk-high-contrast'\r\n        on line 1934 of node_modules/@angular/material/_theming.scss, in mixin `cdk-high-contrast`\r\n        from line 1934 of node_modules/@angular/material/_theming.scss, in mixin `mat-badge-theme`\r\n        from line 5112 of node_modules/@angular/material/_theming.scss, in mixin `angular-material-theme`\r\n        from line 47 of src/styles/chef-theme.scss\r\n        from line 5 of /Users/msorens/code/go/src/github.com/chef/automate/components/automate-ui/src/styles.scss\r\n>>     @include cdk-high-contrast(active, off) {\r\n```\r\n\r\n#### Other Details\r\n\r\nWe are currently upgrading from Angular 8.3.21 to Angular 9 alongside Angular Material and are hung up an issue pertaining to cdk-high-contrast when running ng-build. The specific output is that we're providing the wrong number of arguments for `cdk-high-contrast`, currently providing 2 but we should be providing 1. We haven't touched any of the Angular code ourselves and this was working previously.\r\n\r\nWe have looked into both #34731 and angular/components#18147 and can't completely deduce if they are related - at first glance it appears this is separate but wondering if there may be a link somewhere.\r\n\r\n#### Affected Packages\r\n\r\n@angular/material/_theming.scss, in mixin cdk-high-contrast\r\n@angular/material/_theming.scss, in mixin mat-badge-theme\r\n@angular/material/_theming.scss, in mixin angular-material-theme\r\n\r\n#### Environment\r\n\r\n- Angular: 9\r\n- CDK/Material: 9\r\n- Browser(s): NA\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n\r\nOriginally reported in the core repo (https://github.com/angular/angular/issues/35425); was guided to re-report it here.","Url":"https://github.com/angular/components/issues/18507","RelatedDescription":"Open issue \"Angular 9 Upgrade Erroring on cdk-high-contrast mixin\" (#18507)"},{"Id":"565433711","IsPullRequest":false,"CreatedAt":"2020-02-14T16:33:40","Actor":"buzzbonner24","Number":"18506","RawContent":null,"Title":"material table not showing new line (\\u0085)","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: https://stackblitz.com/fork/components-issue\r\n\r\nSteps to reproduce:\r\n1. Display text in mat-cell containing \"first line \\u0085 second line\".\r\n2. All text is displayed on the same line with an invalid character displayed for the new line.\r\n \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\n\r\nText to appear on 2 lines\r\n\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\n\r\nText appears on 1 line with invalid character\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8.11\r\n- CDK/Material: 8.11\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/18506","RelatedDescription":"Open issue \"material table not showing new line (\\u0085)\" (#18506)"},{"Id":"565382541","IsPullRequest":false,"CreatedAt":"2020-02-14T15:05:25","Actor":"Anton2478","Number":"18505","RawContent":null,"Title":"isInsideClientRect() logic in drop-list-ref.ts is incorrect","State":"open","Body":"Current logic is:\r\n\r\n```javascript\r\nfunction isInsideClientRect(clientRect, x, y) {\r\n    var top = clientRect.top, bottom = clientRect.bottom, left = clientRect.left, right = clientRect.right;\r\n    return y >= top && y <= bottom && x >= left && x <= right;\r\n}\r\n````\r\n\r\nbut should be `y < bottom` and `x < right` because `right === left + width` and `bottom === top + height`.\r\nThis function is used many times in D&D checks and always adds 1 wrong pixel in each direction.\r\n\r\n**Environment:**\r\nangular: 8.2.13\r\nmaterial/CDK: 8.2.3","Url":"https://github.com/angular/components/issues/18505","RelatedDescription":"Open issue \"isInsideClientRect() logic in drop-list-ref.ts is incorrect\" (#18505)"},{"Id":"565379730","IsPullRequest":false,"CreatedAt":"2020-02-14T15:00:38","Actor":"ahasall","Number":"18504","RawContent":null,"Title":"ng-update: hammerjs v9 migration fails if project tsconfig does not specify explicit root file names","State":"open","Body":"#### Reproduction\r\n\r\nng update @angular/material\r\n\r\n#### Expected Behavior\r\n\r\nIt should works without a warning or error\r\n\r\n#### Actual Behavior\r\n\r\n```\r\nUsing package manager: 'yarn'\r\nCollecting installed dependencies...\r\nFound 59 dependencies.\r\nFetching dependency metadata from registry...\r\n    Updating package.json with dependency @angular/material @ \"9.0.0\" (was \"8.2.3\")...\r\n    Updating package.json with dependency @angular/cdk @ \"9.0.0\" (was \"8.2.3\")...\r\nUPDATE package.json (3974 bytes)\r\n‚úî Packages installed successfully.\r\n** Executing migrations of package '@angular/material' **\r\n\r\n‚ùØ Updates Angular Material to v9\r\nCould not find project to perform HammerJS v9 migration. Please ensure your workspace configuration defines a project.\r\n‚úñ Migration failed. See above for further details.\r\n```\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0.1\r\n- CDK/Material: 8.2.3\r\n\r\n\r\n","Url":"https://github.com/angular/components/issues/18504","RelatedDescription":"Open issue \"ng-update: hammerjs v9 migration fails if project tsconfig does not specify explicit root file names\" (#18504)"},{"Id":"565376906","IsPullRequest":false,"CreatedAt":"2020-02-14T14:56:00","Actor":"mmuehlich","Number":"18503","RawContent":null,"Title":"CDK Drag and Drop: Nested Drag and Drop does not allow sorting on same level","State":"open","Body":"#### Reproduction\r\n\r\nStackBlitz: https://stackblitz.com/edit/angular-wfrzq9\r\n\r\nSteps to reproduce: \r\n1. Switch 'child a' and 'child b'\r\n2. Directly switching a and b will fail\r\n* Workaraound in the example: Drag child b after Parent_2 and drag it again into the list before child a\r\n\r\n \r\n \r\n#### Expected Behavior\r\n\r\nDragging within the inner cdkDropList should work, the outher cdkDropList should only fire if the element is moved out of its list.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nThe inner cdkDropList does listen to the drag - the outer list is called.\r\n\r\nmight be caused by \r\n_components/src/cdk/drag-drop/directives/drop-list.ts 304:_\r\n`ref.connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))`\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0.0\r\n- CDK/Material: 9.0.0\r\n- Browser(s): Chrome  80.0.3987.87\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Win 10\r\n","Url":"https://github.com/angular/components/issues/18503","RelatedDescription":"Open issue \"CDK Drag and Drop: Nested Drag and Drop does not allow sorting on same level\" (#18503)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-18T05:30:05.6728991Z","RunDurationInMilliseconds":3423}