{"Data":{"Vue":{"Events":[{"Id":"7278997451","Type":"IssuesEvent","CreatedAt":"2018-02-22T01:45:14","Actor":"leonfu103","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7683","RelatedDescription":"Opened issue \"[Regression from v2.2+] Returning an input element in render function fails two-way binding\" (#7683) at vuejs/vue","RelatedBody":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codepen.io/leonfu103/pen/YevXbX](https://codepen.io/leonfu103/pen/YevXbX)\r\n\r\n### Steps to reproduce\r\nWrite a functional component with a render function that returns an input element, and a 'clear' button to clear the value of the input element\r\n\r\n### What is expected?\r\nThe two-way binding on the returned component should work as on the html input element.\r\n\r\n### What is actually happening?\r\nIf you click on the 'clear' button, it doesn't clear the value of the input element.\r\n\r\nBut if you use older version of Vue (older than V2.2.0, e.g V2.1.10) it works OK.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7276356133","Type":"IssuesEvent","CreatedAt":"2018-02-21T16:09:38","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1742","RelatedDescription":"Closed issue \"$router.replace() don't replases History.replaceState()\" (#1742) at vuejs/vue-router","RelatedBody":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://github.com/evgencode/routerbug](https://github.com/evgencode/routerbug)\r\n\r\n### Steps to reproduce\r\nI have a component:\r\n```\r\nconst Request = () =>  import('../components/request');\r\n```\r\nAnd router:\r\n```\r\nconst router = new VueRouter({\r\n    { path: '/request/edit/:id', name: 'requestEdit', component: Request }\r\n})\r\n```\r\nin component:\r\n```\r\ncreated : function() {\r\n    this.init(this.$route);\r\n    setTimeout(() => {\r\n        // go to other router page after 2 sec.\r\n        this.$router.replace('/request/edit/'   200);\r\n    }, 2000);\r\n},\r\nbeforeRouteUpdate : function(to, from, next) {\r\n    this.init(to);\r\n},\r\n```\r\nI'm trying to run site.com/request/edit/100.\r\n\r\n### What is expected?\r\nWill mount component with id=100, after 2 second it will mount again with id=200\r\n**_And url have to change to a new: /request/edit/200._**\r\n\r\n### What is actually happening?\r\nBut this does not happen, the previos url  (/request/edit/100) remains in ULR bar.\r\nI suspect that the function History.replaceState() does not execute in this case.\r\n\r\n---\r\nWhy url doesn't change?\r\nIf i'm using\r\n\r\n`<router-link to=\"/request/edit/200\">...</router-link>`\r\n\r\n in Request component the URL also does not change. Do I have to execute history.replaceState() by hands?"},{"Id":"7271631992","Type":"IssuesEvent","CreatedAt":"2018-02-20T20:16:53","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2069","RelatedDescription":"Reopened issue \"pass on extra arguments to `scrollTo` to enable smooth scrolling with behaviour\" (#2069) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nSmooth scrolling to same page anchor tags. \r\n\r\nRight now smooth scrolling can only work by custom implementations, but the new Firefox spec contemplates a scrollBehaviour css property which can be polyfilled in older browsers.\r\n\r\nVue-router should take advantage of this new property\r\n\r\n### What does the proposed API look like?\r\nBasically, the object returned from the scrollBehavior function should have some more parameters and change the current x, y positions into named parameters.\r\n\r\nThis is an example of the future object to be returned.\r\n\r\n{ \r\n    top: 2500, // this is the x value\r\n    left: 0, // this is the y value\r\n    behavior: 'smooth' //\r\n  };\r\n\r\nThis is getting implemented in most current browsers, couldn't find the spec thought. If anybody finds it please sahre the link.\r\n\r\nAnyway, there is this beatyfull polyfill: https://www.npmjs.com/package/smoothscroll-polyfill\r\n\r\nwhich adds this scrollTo({}) behaviour to old browsers.\r\n\r\nI haven't dig much into the vue-router code. But it looks to me as if the only change needed is this file:\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js\r\n\r\nMaybe we could add some conditions on line 126 to return the current implementation or translate the old object:\r\n\r\n{ x, y } to\r\n\r\n{ top: x, left: y, behaviour: x }\r\n\r\nSorry if markup sucks, I'll do some more work if this gets atention\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7275561951","Type":"IssuesEvent","CreatedAt":"2018-02-21T13:59:18","Actor":"joachimboggild","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1162","RelatedDescription":"Opened issue \"Hard-to-locate error when providing wrong parameter type to mapState\" (#1162) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/048lw4q59n](https://codesandbox.io/s/048lw4q59n)\r\n\r\n### Steps to reproduce\r\n1) Open code sandbox provided.\r\n2) Look inside console to the error message provided.\r\n\r\nTo fix the problem, include brackets inside the mapState statement on line 97 in the HelloWorld.vue file.\r\n\r\n### What is expected?\r\nIt was expected that an error message would state that the parameter for the mapState function was invalid in 'HelloWorld.vue'.\r\n\r\n### What is actually happening?\r\nThis error message is returned: \r\n\r\n```\r\n[Vue warn]: Failed to resolve async component: function HelloWorld() {\r\n  return _promise2.default.resolve().then(function () {\r\n    return require(\"./components/HelloWorld\");\r\n  });\r\n}\r\nReason: TypeError: Cannot convert undefined or null to object\r\n```\r\n\r\n---\r\nI just thought that this was a difficult error to track, because the error message provided did not point towards the actual error. If it is possible to make the error message more precise, it would be great.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-02-22T05:30:33.4461422Z","RunDurationInMilliseconds":2086}