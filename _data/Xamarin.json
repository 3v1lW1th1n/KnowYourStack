{"Data":{"Blog":{"FeedItems":[{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null},{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7958772405","Type":"IssuesEvent","CreatedAt":"2018-07-12T21:20:03","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1958","RelatedDescription":"Opened issue \"When the $(DesignTimeBuild) flag changes, build.props is invalidated\" (#1958) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build\r\n2. Cause a Design-Time Build to occur\r\n3. Build again\r\n4. More things build than _should_\r\n\r\nContext: https://github.com/xamarin/xamarin-android/issues/1933\r\nContext: https://github.com/xamarin/xamarin-android/pull/1943\r\n\r\nOne of the issues I noticed while debugging the issue with #1933 is\r\nthat `$(IntermediateOutputPath)build.props` gets invalidated if\r\n`$(DesignTimeBuild)` changes. `build.props` triggers alot of targets\r\nto build completely again, so this is pretty bad for our build times\r\nin an IDE...\r\n\r\nDesign-Time Builds can run quite frequently in VS Windows, and we\r\ndon't want to rebuild a bunch of things unnecessarily when the user\r\nswitches back to a regular build.\r\n\r\n### Expected Behavior\r\n\r\nDesign-time builds should not invalidate `obj\\Debug\\build.props`, and therefore:\r\n\r\nDesign-time builds should not trigger any of the following targets if there are _no changes_:\r\n- `_LinkAssembliesNoShrink`\r\n- `_UpdateAndroidResgen`\r\n\r\n### Actual Behavior\r\n\r\nDesign-time builds cause a future build (even with no changes) to be slower.\r\n\r\n### Version Information\r\n\r\nHappens on master/d15-8."},{"Id":"7958513963","Type":"PullRequestEvent","CreatedAt":"2018-07-12T20:25:30","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1957","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] use designtimebuild.props\" (#1957) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1933\r\nContext: https://github.com/xamarin/xamarin-android/pull/1943\r\n\r\nOne of the issues I noticed while debugging the issue with #1933 is\r\nthat `$(IntermediateOutputPath)build.props` gets invalidated if\r\n`$(DesignTimeBuild)` changes. `build.props` triggers alot of targets\r\nto build completely again, so this is pretty bad for our build times\r\nin an IDE...\r\n\r\nDesign-Time Builds can run quite frequently in VS Windows, and we\r\ndon't want to rebuild a bunch of things unnecessarily when the user\r\nswitches back to a regular build.\r\n\r\nSo a solution, is to use a `designtimebuild.props` that works\r\nindependantly of `build.props`. This prevents some slower targets from\r\nrunning when they shouldn't, such as `_UpdateAndroidResgen`.\r\n\r\nI added a test to validate these changes, which also verify that\r\n`IncrementalClean` isn't deleting these files."},{"Id":"7957172788","Type":"IssuesEvent","CreatedAt":"2018-07-12T15:56:37","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1956","RelatedDescription":"Opened issue \"Design-Time Resource.designer.cs can get out of date\" (#1956) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. File | New Project\r\n2. Build\r\n3. Change the default namespace on the project, update `MainActivity.cs` to use it\r\n4. Build\r\n5. I get Intellisense errors because `obj\\Debug\\designtime\\Resource.designer.cs` does *not* have the new namespace!\r\n\r\nI tried reproducing it with a test, but this passes:\r\n```csharp\r\n[Test]\r\npublic void DesignTimeResourceDesignerChangeNamespace ()\r\n{\r\n\tconst string namespaceA = \"NamespaceA\", namespaceB = \"NamespaceB\";\r\n\tvar proj = new XamarinAndroidApplicationProject {\r\n\t\tRootNamespace = namespaceA\r\n\t};\r\n\tusing (var b = CreateApkBuilder (Path.Combine (\"temp\", TestName))) {\r\n\t\tb.Target = \"Compile\";\r\n\t\tAssert.IsTrue (b.Build (proj, parameters: new [] { \"DesignTimeBuild=True\" }), \"first DTB should have succeeded.\");\r\n\r\n\t\tvar designTimeResourceDesigner = b.Output.GetIntermediaryPath (Path.Combine (\"designtime\", \"Resource.designer.cs\"));\r\n\t\tFileAssert.Exists (designTimeResourceDesigner, \"We should have a Design-Time Resource.designer.cs!\");\r\n\t\tvar contents = File.ReadAllText (designTimeResourceDesigner);\r\n\t\tStringAssert.Contains ($\"[assembly: global::Android.Runtime.ResourceDesignerAttribute(\\\"{namespaceA}.Resource\\\", IsApplication=true)]\", contents);\r\n\t\tStringAssert.Contains ($\"namespace {namespaceA}\", contents);\r\n\r\n\t\t//change the namespace\r\n\t\tproj.RootNamespace = namespaceB;\r\n\t\tproj.MainActivity = proj.DefaultMainActivity.Replace (\"${ROOT_NAMESPACE}\", namespaceB).Replace (\"${PROJECT_NAME}\", proj.ProjectName);\r\n\t\tproj.Touch (\"MainActivity.cs\");\r\n\r\n\t\t//Now a regular build\r\n\t\tb.Target = \"Build\";\r\n\t\tAssert.IsTrue (b.Build (proj), \"first *regular* build should have succeeded.\");\r\n\t\tvar resourceDesigner = Path.Combine (Root, b.ProjectDirectory, \"Resources\", \"Resource.designer.cs\");\r\n\t\tFileAssert.Exists (resourceDesigner, \"We should have a Resources/Resource.designer.cs!\");\r\n\t\tcontents = File.ReadAllText (resourceDesigner);\r\n\t\tStringAssert.Contains ($\"[assembly: global::Android.Runtime.ResourceDesignerAttribute(\\\"{namespaceB}.Resource\\\", IsApplication=true)]\", contents);\r\n\t\tStringAssert.Contains ($\"namespace {namespaceB}\", contents);\r\n\r\n\t\t//Back to DTB\r\n\t\tb.Target = \"Compile\";\r\n\t\tAssert.IsTrue (b.Build (proj, parameters: new [] { \"DesignTimeBuild=True\" }), \"second DTB should have succeeded.\");\r\n\r\n\t\tFileAssert.Exists (designTimeResourceDesigner, \"We should have a Design-Time Resource.designer.cs!\");\r\n\t\tcontents = File.ReadAllText (designTimeResourceDesigner);\r\n\t\tStringAssert.Contains ($\"[assembly: global::Android.Runtime.ResourceDesignerAttribute(\\\"{namespaceB}.Resource\\\", IsApplication=true)]\", contents);\r\n\t\tStringAssert.Contains ($\"namespace {namespaceB}\", contents);\r\n\t}\r\n}\r\n```\r\n\r\nSo here is what I *think* is happening, but I'm not really sure:\r\n* After step 4, a DTB doesn't occur, because a full build occurred?\r\n* Should we overwrite the contents of `obj\\Debug\\designtime\\Resource.designer.cs` when `Resources\\Resource.designer.cs` is updated?\r\n\r\n@dellis1972 thoughts?\r\n\r\n### Expected Behavior\r\n\r\nI shouldn't get Intellisense errors when changing namespace on a project.\r\n\r\n### Actual Behavior\r\n\r\nI get Intellisense errors when changing namespace on a project.\r\n\r\n### Version Information\r\n\r\nI used VS 2017 15.7.4 on Windows to reproduce this"},{"Id":"7955175759","Type":"PullRequestEvent","CreatedAt":"2018-07-12T09:52:33","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1955","RelatedDescription":"Opened pull request \"Add Linux Mint to the fold\" (#1955) at xamarin/xamarin-android","RelatedBody":"Add detection and preparation script for the Linux Mint distribution. Since Mint\r\nis based on Ubuntu, this patch reorganizes things a little bit to reuse as much\r\nof Ubuntu specific code as possible."},{"Id":"7952434480","Type":"PullRequestEvent","CreatedAt":"2018-07-11T20:34:32","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1940","RelatedDescription":"Merged pull request \"[timing] use Release build of xabuild/xamarin-android if possible\" (#1940) at xamarin/xamarin-android","RelatedBody":"When timing builds, and plotting them on Jenkins, we should prefer to\r\nuse the `Release` build output of `xamarin-android` if it exists.\r\n\r\nThis also will fix a problem downstream in `monodroid`, where I'm not\r\nable to profile `Debug` builds because `bin\\Debug` *might* not exist.\r\n`monodroid` seems to mostly use `Release` builds of `xamarin-android`.\r\nWe really need to profile `Debug` Xamarin.Android application builds\r\nso that we can see how `Fast Deployment` is performing."},{"Id":"7952351661","Type":"PullRequestEvent","CreatedAt":"2018-07-11T20:15:59","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1949","RelatedDescription":"Merged pull request \"[tests] fix CheckTargetFrameworkVersion tests\" (#1949) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1916\r\n\r\nThese tests were never quite right, since they were just looking for\r\ninstances of `TargetFrameworkVersion` in the build log. This would\r\nmatch for inputs and outputs, and wasn't actually testing anything\r\nbecause it appeared to always pass.\r\n\r\nIn #1916 I improved them by looking for\r\n`Output Property: TargetFrameworkVersion=v2.3`, but they were\r\nnot passing.\r\n\r\nTwo issues to fix:\r\n- These tests should set `AndroidUseLatestPlatformSdk=False`\r\n- These tests shouldn't use `StringAssertEx.Contains` because it calls\r\n  `Assert.Pass`, skipping any future assertions...\r\n\r\nWhen testing on Windows, these tests get skipped, so I had to fix\r\nthings on Mac. The PR builder also skips them, so we did not see the\r\nissue until it was merged into master."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7960083134","Type":"IssuesEvent","CreatedAt":"2018-07-13T05:16:51","Actor":"jamesmontemagno","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3289","RelatedDescription":"Opened issue \"Platform Specific -> Android Bottom Tabs Set Shift Mode\" (#3289) at xamarin/Xamarin.Forms","RelatedBody":"Currently we can set bottom tabs on Android with the new stuff in Xamarin.Forms 3.1, but if you add more then 3 items then it will auto start shifting :(\r\n\r\nThe code to adjust this can be found: https://github.com/jamesmontemagno/Xamarin-Templates/blob/master/Xamarin.Android-Templates/Projects/BottomTabsApp/BlankAppCompat/BottomNavigationViewUtils.cs\r\n\r\nThis would be a nice addition please!"},{"Id":"7959257860","Type":"PullRequestEvent","CreatedAt":"2018-07-12T23:36:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3165","RelatedDescription":"Closed pull request \"[Enhancement] Add Font Property to Entry\" (#3165) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdd Font Property to Entry fixes #3126 \r\n\r\n### API Changes ###\r\nAdded:\r\n - FontProperty //Bindable Property\r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"7959251489","Type":"IssuesEvent","CreatedAt":"2018-07-12T23:34:01","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3126","RelatedDescription":"Closed issue \"Entry - add Font Property (Enhancement)\" (#3126) at xamarin/Xamarin.Forms","RelatedBody":"To be consistent with Label and Button, add a \"Font\" property, rather than requiring individual setting of Family/Size/Attributes.\r\n\r\nVersion: Xamarin.Forms 3.0\r\n"},{"Id":"7958736136","Type":"PullRequestEvent","CreatedAt":"2018-07-12T21:11:59","Actor":"VitalyKnyazev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3288","RelatedDescription":"Opened pull request \"[iOS] Prevent crash when a leaked cell has MenuItem with bindings\" (#3288) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nPrevent crash when a leaked cell in ListView with Recycle mode has MenuItem with bindings and framework like Xamarin.Forms sets BindingContext to null after leaving the page\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes the crash but not underlying cell leak\r\n\r\n### API Changes ###\r\n\r\nN/A\r\n\r\n### Platforms Affected ###\r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nN/A\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- Quite hard to reproduce, see related Issue -->\r\n- [ x] Rebased on top of the target branch at time of PR\r\n- [ x] Changes adhere to coding standard\r\n"},{"Id":"7958450777","Type":"IssuesEvent","CreatedAt":"2018-07-12T20:12:22","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2832","RelatedDescription":"Reopened issue \"[UWP] grouped listiview which can load more crashes if scroll too fast\" (#2832) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nHere is a customize listview which load 30 more items each time, if I turn on isgroupingenabled, then the user can not scroll too fast. Everything works fine for non-grouped listivew.\r\nI tried to change the number to load to a larger number, the issue still exists.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the sample app\r\n2. scroll rapidly vs scroll slowly\r\n3. crash / work\r\n\r\n### Expected Behavior\r\nEverything should be fine\r\n### Actual Behavior\r\nscroll too fast crashes the app\r\n### Basic Information\r\n[BlankApp1.zip](https://github.com/xamarin/Xamarin.Forms/files/2039445/BlankApp1.zip)\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7958969658","Type":"PullRequestEvent","CreatedAt":"2018-07-12T22:06:58","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4439","RelatedDescription":"Opened pull request \"[PDFKit] Update bindings to Xcode 10 Beta 1, 2 & 3\" (#4439) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7958166653","Type":"IssuesEvent","CreatedAt":"2018-07-12T19:11:11","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4438","RelatedDescription":"Closed issue \"objcgen on windows throws exception in VerifyMono()\" (#4438) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Download and extract https://github.com/mono/Embeddinator-4000/tree/master/objcgen to C:\\temp\r\n2. Compile WeatheriOS project\r\n3. Execute: C:\\temp\\Weather\\WeatheriOS>..\\packages\\Embeddinator-4000.0.4.0\\tools\\objcgen.exe\r\n bin\\debug\\weatherios.dll --target=framework --platform=iOS --outdir=iosoutput -\r\nc --debug\r\n\r\n### Expected Behavior\r\n\r\nWeatheriOS.framework is generated\r\n\r\n### Actual Behavior\r\n\r\nC:\\temp\\Weather\\WeatheriOS>..\\packages\\Embeddinator-4000.0.4.0\\tools\\objcgen.exe\r\n bin\\debug\\weatherios.dll --target=framework --platform=iOS --outdir=iosoutput -\r\nc --debug\r\nParsing assemblies...\r\n        Parsed 'bin\\debug\\weatherios.dll'\r\nProcessing assemblies...\r\n        2 types found\r\nGenerating binding code...\r\n        Generated: iosoutput\\bindings.h\r\n        Generated: iosoutput\\bindings-private.h\r\n        Generated: iosoutput\\bindings.m\r\n        Generated: iosoutput\\bindings.xml\r\n        Generated: iosoutput\\embeddinator.h\r\n        Generated: iosoutput\\glib.h\r\n        Generated: iosoutput\\mono_embeddinator.h\r\n        Generated: iosoutput\\mono-support.h\r\n        Generated: iosoutput\\objc-support.h\r\n        Generated: iosoutput\\glib.c\r\n        Generated: iosoutput\\mono_embeddinator.c\r\n        Generated: iosoutput\\objc-support.m\r\n        Generated: iosoutput\\Make.config\r\nCompiling binding code...\r\nEM0000: Unexpected error - Please fill a bug report at https://github.com/mono/E\r\nmbeddinator-4000/issues\r\nSystem.NullReferenceException: Object reference not set to an instance of an obj\r\nect.\r\n   at Embeddinator.ObjC.SystemCheck.VerifyMono()\r\n   at Embeddinator.ObjC.Embedder.VerifyDependencies()\r\n   at Embeddinator.ObjC.Embedder.Compile()\r\n   at Embeddinator.ObjC.Driver.Main2(String[] args)\r\n   at Embeddinator.ObjC.Driver.Main(String[] args)\r\nDebug Log:\r\nProcessing: 1 assemblies\r\nProcessing Assembly: WeatheriOS\r\nProcessing Type: XAMWeatherFetcher\r\nTypeMapper Register: System.Void .ctor(System.String,System.String) initWithCity\r\n:state:\r\nTypeMapper Register: System.String get_City() getCity\r\nTypeMapper Register: System.String get_State() getState\r\nTypeMapper Register: XAMWeatherResult GetWeather() getWeather\r\nTypeMapper Register: XAMWeatherFetcher City city\r\nTypeMapper Register: XAMWeatherFetcher State state\r\nProcessing Type: XAMWeatherResult\r\nTypeMapper Register: System.Void .ctor(System.String,System.String,System.String\r\n,System.String) initWithTemp:text:city:state:\r\nTypeMapper Register: System.String get_City() getCity\r\nTypeMapper Register: System.String get_State() getState\r\nTypeMapper Register: System.String get_Temp() getTemp\r\nTypeMapper Register: System.String get_Text() getText\r\nTypeMapper Register: XAMWeatherResult City city\r\nTypeMapper Register: XAMWeatherResult State state\r\nTypeMapper Register: XAMWeatherResult Temp temp\r\nTypeMapper Register: XAMWeatherResult Text text\r\nBegin Generator\r\nGenerating Assembly: WeatheriOS\r\nGenerating Type: XAMWeatherFetcher\r\nGenerating Property: city\r\nGenerating Method Impl: System.String get_City()\r\nGenerating Property: state\r\nGenerating Method Impl: System.String get_State()\r\nGenerating Method: XAMWeatherResult GetWeather()\r\nGenerating Method Impl: XAMWeatherResult GetWeather()\r\nGenerating Type: XAMWeatherResult\r\nGenerating Property: city\r\nGenerating Method Impl: System.String get_City()\r\nGenerating Property: state\r\nGenerating Method Impl: System.String get_State()\r\nGenerating Property: temp\r\nGenerating Method Impl: System.String get_Temp()\r\nGenerating Property: text\r\nGenerating Method Impl: System.String get_Text()\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.5\r\nVisualStudio.15.Release/15.7.5+27703.2042\r\nMicrosoft .NET Framework\r\nVersion 4.7.02558\r\n\r\nInstalled Version: Enterprise\r\n\r\nVisual C++ 2017   00369-60000-00001-AA949\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40625.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40608.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJetBrains ReSharper Ultimate 2018.1.2    Build 112.0.20180530.113618\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nJustMock   2018.2.511.5\r\nTelerik JustMock Extension.\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nSQL Server Reporting Services   14.0.1016.246\r\nMicrosoft SQL Server Reporting Services Designers \r\nVersion 14.0.1016.246\r\n\r\nTelerik Reporting Tools   3.44.0.12\r\nComplete .NET Reporting Solution for Web, Mobile and Desktop Applications. For more information please visit http://www.telerik.com/reporting. \r\n\r\nTelerik WPF VSExtensions   2017.3.1017.0\r\nProgress® Telerik® UI for WPF Visual Studio extensions\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 173513e369ffb7a1c4d5dccf83696d9aac2ab2d0.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\nMy current version of mono from %PATH% -\r\n\r\nC:\\temp\\Weather\\WeatheriOS>mono -V\r\nMono JIT compiler version 5.12.0 (Visual Studio built mono)\r\nCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-proj\r\nect.com\r\n        TLS:           normal\r\n        SIGSEGV:       normal\r\n        Notification:  Thread + polling\r\n        Architecture:  x86\r\n        Disabled:      none\r\n        Misc:          softdebug\r\n        Interpreter:   yes\r\n        LLVM:          supported, not enabled.\r\n        GC:            sgen (concurrent by default)\r\n\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7958143150","Type":"IssuesEvent","CreatedAt":"2018-07-12T19:06:10","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4428","RelatedDescription":"Closed issue \"NSAttributedString.Key values are not bound\" (#4428) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Workbook \r\n2. Add a `UILabel`: \r\n    var lbl = new UILabel(new CGRect(30, 30, 100, 100)); \r\n    RootViewController.View.AddSubview(lbl); \r\n   \r\n3. Create an `NSMutableAttributedString` : \r\n    var text = new NSMutableAttributedString(\"Hello, World!\");\r\n\r\n4. Use the `AddAttribute(NSString, NSObject,NSRange)` method to set the first word to bold:\r\n\r\n    text.AddAttribute(new NSString(\"NSFont\"), UIFont.BoldSystemFontOfSize(17), new NSRange(0, 5));\r\n    lbl.AttributedText = text;\r\n\r\n### Expected Behavior\r\n\r\nThe first argument's value should be defined as an easy-to-find constant (e.g., `NSAttributedStringKey`) \r\n\r\n### Actual Behavior\r\n\r\nI had to run `NSAttributedString.Key.font as NSString` in a Swift playground to discover the value.\r\n\r\n### Environment\r\n\r\n=== Visual Studio Community 2017 for Mac (Preview) ===\r\n\r\nVersion 7.6 Preview (7.6 build 1773)\r\nInstallation UUID: 6b94f136-026d-4a5a-bf6d-af2c0d8dc019\r\nRuntime:\r\n\tMono 5.12.0.273 (2018-02/f59eac4c0f1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000273\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.3\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Versions:\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.3\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.4.0.1 (Visual Studio Community)\r\nAndroid SDK: /Users/larryobrien/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t4.1 (API level 16)\r\n\t\t5.0 (API level 21)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 25.0.3\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_162\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_162-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14274.19)\r\nBuild 10L177m\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.4 (Visual Studio Community)\r\nHash: 29d671b5\r\nBranch: master\r\nBuild date: 2018-06-07 11:51:32-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.1.41 (Visual Studio Community)\r\nHash: e51f17bc\r\nBranch: HEAD\r\nBuild date: 2018-07-05 18:01:52-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706001773\r\nGit revision: e5958ff9015312c81fc3b1b6b6413585575ca869\r\nBuild date: 2018-06-19 12:19:27+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 6910f36b43e7d559ff40ae268e73ae26c30a2a6b\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nAddinMaker 1.4.2\r\nLarry's F# Templates 2.0.8\r\nMicroFramework 1.0.3\r\nInternet of Things (IoT) development (Preview) 7.5.3\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n[NSAttributedStringKey.workbook.zip](https://github.com/xamarin/xamarin-macios/files/2181857/NSAttributedStringKey.workbook.zip)\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":38,"FavoriteCount":21,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":91,"FavoriteCount":42,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":30,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":62,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":21,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":39,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null}]}},"RunOn":"2018-07-13T05:30:57.2744287Z","RunDurationInMilliseconds":4252}