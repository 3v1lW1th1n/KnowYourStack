{"Data":{"Blog":{"FeedItems":[{"Title":"Join the Xamarin Visual Challenge","PublishedOn":"2019-03-22T16:00:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past month, we have been running a low-key challenge to flex the new Xamarin.Forms 3.6 feature, Visual with Material Design. For more information about what Visual is and what you can do with...","Href":"https://blog.xamarin.com/join-the-xamarin-visual-challenge/","RawContent":null},{"Title":"Get Your Apps Ready for Apple’s New Watch Processor Architecture","PublishedOn":"2019-03-20T15:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last fall, Apple announced that new applications and updates would need to support the Apple Watch Series 4. &#8220;Starting March 2019, all new apps and app updates for iPhone, including universal...","Href":"https://blog.xamarin.com/apple-new-processor-architecture/","RawContent":null},{"Title":"Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More!","PublishedOn":"2019-03-18T18:54:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Essentials are your ultimate open source library to access native features from a single cross-platform API. Since the first release, we have received awesome feedback on GitHub from...","Href":"https://blog.xamarin.com/xamarin-essentials-detect-shake-browser-customization/","RawContent":null},{"Title":"Introducing the New Xamarin Customer Showcase","PublishedOn":"2019-03-15T16:53:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developers around the world use Xamarin every day to build beautiful native mobile apps with .NET. What better way to highlight the amazing work that these developers are doing than with a customer...","Href":"https://blog.xamarin.com/new-xamarin-customer-showcase/","RawContent":null},{"Title":"A Quick Update on Google Components for iOS and Android","PublishedOn":"2019-03-13T19:12:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts about using Xamarin for mobile development is access to all of the platform APIs from C# bindings. Additionally, any native iOS or Android library can be consumed by a Xamarin...","Href":"https://blog.xamarin.com/update-google-components-ios-android/","RawContent":null},{"Title":"Enhanced Xamarin Development With MFractor","PublishedOn":"2019-03-12T15:58:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Matthew Robbins. Matthew is a Microsoft MVP and the founder of MFractor, incredible Xamarin tools for Visual Studio Mac. MFractor MFractor is a powerful...","Href":"https://blog.xamarin.com/enhanced-xamarin-development-with-mfractor/","RawContent":null},{"Title":"Podcast: POP! New docs, blogs, customer showcases, and Twitch streams!","PublishedOn":"2019-03-08T17:03:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. Podcast Highlights This month&#8217;s Visual...","Href":"https://blog.xamarin.com/podcast-pop-docs-blogs-showcases-twitch/","RawContent":null},{"Title":"Beautiful Material Design for Android & iOS","PublishedOn":"2019-03-07T20:27:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week, Xamarin.Forms 3.6 shipped with another round of improvements, the most exciting of which is called Visual. Visual enables developers to create beautiful, cross-platform mobile applications...","Href":"https://blog.xamarin.com/beautiful-material-design-android-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.6: Visual Has Materialized","PublishedOn":"2019-03-06T20:12:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re pleased to announce the release of Xamarin.Forms 3.6 in the usual cadence of our regular releases. In addition to the usual enhancements and bug fixes, we’re also moving our Visual feature from...","Href":"https://blog.xamarin.com/xamarin-forms-3-6-visual-has-materialized/","RawContent":null},{"Title":"Best Practices and Tips for Using Xamarin.UITest","PublishedOn":"2019-03-04T19:35:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that it is very important for mobile apps to have great user interfaces, be accessible, and be extremely performant. Given the plethora of devices with different screen sizes, screen...","Href":"https://blog.xamarin.com/best-practices-tips-xamarin-uitest/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9300680546","Type":"IssuesEvent","CreatedAt":"2019-03-23T15:44:30","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2872","RelatedDescription":"Opened issue \"Updated all Nuget References to use `PackageReference`\" (#2872) at xamarin/xamarin-android","RelatedBody":"We currently have allot of duplicated nuget references in `package.config` files. This makes is a pain to upgrade them all. We should split out the references into specific `*.props` files e.g `NUnitNugetReference.props` which will include `PackageReference` entries. Then have the relevant projects just include those. This way we can upgrade in one single place."},{"Id":"9299578058","Type":"PullRequestEvent","CreatedAt":"2019-03-23T04:54:04","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2871","RelatedDescription":"Opened pull request \"[docs] Sync BuildProcess from docs.microsoft.com\" (#2871) at xamarin/xamarin-android","RelatedBody":"Apply the link updates and formatting changes from the matching page on\r\ndocs.microsoft.com:\r\nhttps://docs.microsoft.com/xamarin/android/deploy-test/building-apps/build-process"},{"Id":"9298944900","Type":"PullRequestEvent","CreatedAt":"2019-03-22T23:15:53","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2870","RelatedDescription":"Opened pull request \"[java-runtime] Remove debug files from java_runtime.jar\" (#2870) at xamarin/xamarin-android","RelatedBody":"Commit xxxx added the new java_runtime.jar and\r\njava_runtime_fastdev.jar files. The idea is the\r\njava_runtime.jar was the release version of the\r\nruntime. It should NOT contain files such as\r\n\r\n\tmono/android/ResourcePatcher.class\r\n\tmono/android/Seppuku.class\r\n\tmono/android/MonkeyPatcher.class\r\n\r\nThese are for fast dev only.\r\n\r\nHowever we were including these files!!\r\n\r\nThis was because of a couple of problems.\r\n1) The `RemoveItems` property of `_RuntimeOutput` was being\r\ntreated like an ItemGroup when it is infact a property.\r\nSo we need to semi-colon seperate the items to make sure\r\nthey are ALL removed rather then it just being the last one\r\nlisted.\r\n\r\n2) Because the `Inputs` was changed to `@(_RuntimeOutput)`\r\nit means the target will run only ONCE. As a result both the\r\n`release.txt` and `fastdev.txt` files contained the SAME\r\nfile list. What we should have been doing was using Target\r\nBatching via\r\n\r\n\t%(_RuntimeOutput.OutputJar)\r\n\r\nThis makes sure the target runs for EACH output. This will\r\nresult in the behaviour we want, i.e  the files listed\r\nabove NOT being in the release version of the jar."},{"Id":"9298769118","Type":"PullRequestEvent","CreatedAt":"2019-03-22T22:25:47","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2869","RelatedDescription":"Opened pull request \"[Linux build] Debian/testing has libncurses6 instead of libncurses5\" (#2869) at xamarin/xamarin-android","RelatedBody":"We're trying to upgrade our Linux build bots to a newer version of Debian in\r\nhopes to fix a problem with cross-building LLVM for Windows with MinGW. However,\r\nDebian/testing (codename buster) does not install `libncurses5` by default,\r\ninstead it comes with `libncurses6` which makes the preparation phase of the\r\nbuild fail.\r\n\r\nThis commit adds a check for Debian version and adjusts the package list\r\naccordingly."},{"Id":"9298766953","Type":"PullRequestEvent","CreatedAt":"2019-03-22T22:25:10","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2868","RelatedDescription":"Opened pull request \"[installers] use @(AndroidApiInfo) for frameworks list\" (#2868) at xamarin/xamarin-android","RelatedBody":"Our installers are currently missing `v9.0`:\r\n\r\n    $ zipinfo ~/Downloads/Xamarin.Android.Sdk-OSS-9.2.99.95_master_58137da.vsix | grep Mono.Android.dll\r\n    -rw----     0.0 fat 17827328 b- defN 19-Mar-22 15:14 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v4.4/Mono.Android.dll\r\n    -rw----     0.0 fat 17888256 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v4.4.87/Mono.Android.dll\r\n    -rw----     0.0 fat 19628544 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v5.0/Mono.Android.dll\r\n    -rw----     0.0 fat 19720704 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v5.1/Mono.Android.dll\r\n    -rw----     0.0 fat 20758528 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v6.0/Mono.Android.dll\r\n    -rw----     0.0 fat 22979584 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v7.0/Mono.Android.dll\r\n    -rw----     0.0 fat 23044096 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v7.1/Mono.Android.dll\r\n    -rw----     0.0 fat 24596480 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v8.0/Mono.Android.dll\r\n    -rw----     0.0 fat 24669184 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v8.1/Mono.Android.dll\r\n    -rw----     0.0 fat 26605568 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v9.0.99/Mono.Android.dll\r\n\r\nWhen we added API-Q, a new *unstable* framework is preventing the\r\nlatest *stable* framework from being added to the installer.\r\n\r\nWhat we can do instead, is import `Mono.Android.projitems` and use\r\nits `@(AndroidApiInfo)` item group.\r\n\r\n    <AndroidApiInfo Include=\"v9.0\">\r\n      <Name>Pie</Name>\r\n      <Level>28</Level>\r\n      <Id>28</Id>\r\n      <Stable>True</Stable>\r\n    </AndroidApiInfo>\r\n    <AndroidApiInfo Include=\"v9.0.99\">\r\n      <Name>Q</Name>\r\n      <Level>29</Level>\r\n      <Id>Q</Id>\r\n      <Stable>False</Stable>\r\n    </AndroidApiInfo>\r\n\r\nUnfortunately, getting the MSBuild transform right was quite tricky...\r\n\r\nAt first, I just tried updating the existing `<ItempGroup/>`:\r\n\r\n    <ItemGroup>\r\n      <_FrameworkDirs Include=\"@(AndroidApiInfo->'$(FrameworkSrcDir)\\%(Identity)')\" />\r\n      <_FrameworkDirsThatExist Condition=\"Exists('%(Identity)')\" Include=\"@(_FrameworkDirs)\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\AndroidApiInfo.xml')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\mono.android.dex')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\Mono.Android.dll')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\mono.android.jar')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\Mono.Android.pdb')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\RedistList\\FrameworkList.xml')\" />\r\n    </ItemGroup>\r\n\r\nThis construct fails with:\r\n\r\n    error MSB4190: The reference to the built-in metadata \"Identity\" at position 8 is not allowed in this condition \"Exists('%(Identity)')\".\r\n\r\nHowever, it works when moved *inside* a target? I am guessing that\r\n`%(Identity)` does not exist at evaluation time. MSBuild is a weird\r\nthing.\r\n\r\nI just put this `<ItemGroup/>` inside the `ConstructInstallerItems`\r\nMSBuild target.\r\n\r\nThis should make things future proof for new TFVs, but also allow PR\r\nbuilds to work."},{"Id":"9297653594","Type":"PullRequestEvent","CreatedAt":"2019-03-22T18:50:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2867","RelatedDescription":"Opened pull request \"Bump to xamarin/xamarin-android-tools/master@66d445c4\" (#2867) at xamarin/xamarin-android","RelatedBody":"Upgrades to NUnit 3.11.0 and NUnit.ConsoleRunner 3.9.0."},{"Id":"9297625325","Type":"PullRequestEvent","CreatedAt":"2019-03-22T18:45:56","Actor":"kzu","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2866","RelatedDescription":"Opened pull request \"Annotate attributes with resource category hint for the IDE\" (#2866) at xamarin/xamarin-android","RelatedBody":"The code completion experience can be improved if the editor knew\r\nwhich string properties typically come from resources so a completion\r\nsuggestion can be provided that is filtered to the type of resource\r\nthe property should be pointing to (i.e. `@(string)` vs `@(drawable)`).\r\n\r\nFixes https://github.com/xamarin/xamarin-android/issues/2862"},{"Id":"9297465822","Type":"PullRequestEvent","CreatedAt":"2019-03-22T18:19:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2863","RelatedDescription":"Merged pull request \"[monodroid] fix path to macOS libmonosgen-2.0.dylib\" (#2863) at xamarin/xamarin-android","RelatedBody":"Recent changes to the installer have broken the Android designer's\r\nintegration tests.\r\n\r\n`libmonodroid.so` is failing to startup with:\r\n\r\n    [monodroid] Setting up for DSO lookup in app data directories\r\n    [monodroid] Creating public update directory: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__`\r\n    [monodroid] Trying to get property debug.mono.gc.4c07178b\r\n    [monodroid] Trying to get property from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/debug.mono.gc\r\n    [monodroid] Trying to get property debug.mono.env.4c07178b\r\n    [monodroid] Trying to get property from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/debug.mono.env\r\n    [monodroid] Using override path: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__\r\n    [monodroid] Using override path: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp\r\n    [monodroid] Using override path: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp\r\n    [monodroid] bundle app: normal mode\r\n    [monodroid] bundle_path == <nullptr>\r\n    [monodroid] Using runtime path: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/\r\n    [monodroid] checking directory: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/lib`\r\n    [monodroid] directory does not exist: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/lib`\r\n    [monodroid] checking directory: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/lib`\r\n    [monodroid] directory does not exist: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/lib`\r\n    [monodroid] checking directory: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/lib`\r\n    [monodroid] directory does not exist: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/lib`\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/libmonosgen-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/libmonosgen-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/libmonosgen-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/data/libmonosgen-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//libmonosgen-64bit-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /Library/Frameworks/Xamarin.Android.framework/Libraries//libmonosgen-2.0.dylib\r\n    [monodroid] Cannot find 'libmonosgen-2.0.dylib'. Looked in the following locations:\r\n    [monodroid]   /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__\r\n    [monodroid]   /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp\r\n    [monodroid]   /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp\r\n    [monodroid]   /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/data\r\n    [monodroid] Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n    [monodroid] Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n\r\nLooking at a successful build, the last path is being used:\r\n\r\n    [monodroid] Trying to load sgen from: /Library/Frameworks/Xamarin.Android.framework/Libraries//libmonosgen-2.0.dylib\r\n    [monodroid] Loading Mono symbols...\r\n\r\nWe recently (and intentionally) removed the `Libraries` and `Commands`\r\nsymlinks from the pkg installer:\r\n\r\n    $ ls -la /Library/Frameworks/Xamarin.Android.framework/\r\n    total 0\r\n    drwxr-xr-x   5 root  wheel   160 Mar 21 17:28 .\r\n    drwxr-xr-x  14 root  wheel   448 Dec 19 09:44 ..\r\n    lrwxr-xr-x   1 root  wheel    20 Mar 21 16:43 Commands -> Versions/Current/bin\r\n    lrwxr-xr-x   1 root  wheel    20 Mar 21 16:43 Libraries -> Versions/Current/lib\r\n    drwxr-xr-x  42 root  wheel  1344 Mar 21 16:43 Versions\r\n\r\nLooking through the designer's source (and other private repos), I\r\ncouldn't find any usage of this `Libraries` symlink.\r\n\r\nThen I found:\r\n\r\n    #elif APPLE_OS_X\r\n        static constexpr char SYSTEM_LIB_PATH[] = \"/Library/Frameworks/Xamarin.Android.framework/Libraries/\";\r\n\r\nSo if we used the path, it still would not be quite right:\r\n\r\n    /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib\r\n\r\nThere used to be a duplicate copy of `libmonosgen-2.0.dylib` in this\r\nlocation, but the latest changes to the installer have removed this\r\nfile as well.\r\n\r\nWe should actually use:\r\n\r\n    /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xamarin.android/xbuild/Xamarin/Android/lib/host-Darwin\r\n\r\nWe also don't need the trailing `/`."},{"Id":"9296327286","Type":"PullRequestEvent","CreatedAt":"2019-03-22T15:34:38","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2835","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tools] Bump android Tools versions.\" (#2835) at xamarin/xamarin-android","RelatedBody":"Fixes #2433\r\n\r\nWe should be using the latest versions of the android tooling\r\nif possible. If we can we should try to match the major version\r\nwith the max API level we support. In this case we are on Android\r\nP, API Level 28. So we should be using the 28.x.x versions of\r\nthe tooling.\r\n\r\nSince not all of the tools have a 28.x.x version, in those cases\r\nwe should just use the very latest."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9304379176","Type":"PullRequestEvent","CreatedAt":"2019-03-25T00:43:20","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5676","RelatedDescription":"Opened pull request \"[Android] Fix various issues with material found by a full run of the UI Tests with Material active\" (#5676) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nThis PR contains a collection of fixes that make the material renderers run with all the UI Tests. \r\n\r\n- Material themes wrap the Context object with a Context Wrapper. This causes code that assumes Context is an Activity to not work. This PR moves that code to an extension method and ascends the wrapper until it finds the activity\r\n-  tweak the stepper and picker tests to be compatible with material versions of the controls. \r\n- fix registrar to properly fall back to app compat tabbed renderer\r\n- fixed all the controls based on Entry to set the Automation Id on the internal Edit Text control instead of the surrounding layout (picker, timepicker, editor, entry, datepicker)\r\n- fixed disposed access error in the dispose of TextInputLayout. If the internal EditText was already disposed by the GC then just don't access it\r\n- fixed material slider and stepper to work with Input Transparent\r\n\r\n### API Changes ###\r\n\r\n\r\nAdded:\r\n - Android.ViewRenderer.ControlUsedForAutomation\r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n\r\n### Testing Procedure ###\r\n- At some point soon we'll get the material renderers running through the CI so a lot of this is already tested automatically by the UI tests\r\n\r\nHere are the specifics of what was fixed\r\n- Put a material entry inside a Listview and then click on it. App should not crash\r\n- set input transparent on a material slider and stepper and then you should be able to click through it (you can run the input transparent ui test to verify)\r\n- Run Automation ID UI tests\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9303785589","Type":"PullRequestEvent","CreatedAt":"2019-03-24T20:05:02","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5672","RelatedDescription":"Merged pull request \"Add translated Intellisense files to NuGet package\" (#5672) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen creating the NuGet package for Forms, include all of the translated Intellisense API docs from the various language-specific subfolders.\r\n"},{"Id":"9303747863","Type":"PullRequestEvent","CreatedAt":"2019-03-24T19:48:17","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4365","RelatedDescription":"Merged pull request \"[iOS] Better fix for EstimatedRowHeight \" (#4365) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen setting the EstimatedRowHeight it caused to UITableView to try to reload itself. This is an issue if we are trying to insert rows at the same time. If the row height didn't changed it wasn't a issue as the EstimatedRowHeight didn't change, but if we change that value it will queue a reload of the UITableView. \r\n\r\nWe know moved to a better way to set EstimatedRowHeight based on the same fix we did for CollectionVIiew on #4688, this logic is now mostly handle in the DataSource.\r\n\r\nRow will try to be estimated when the initial TableVIew is shown,  also before we show a cell we make sure we estimated, because the collection could be empty and this is our first item.\r\n\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4356\r\n\r\n### API Changes ###\r\n \r\nOn internal `ListViewDataSource`\r\n- `protected virtual void UpdateEstimatedRowHeight(UITableView tableView)`\r\n- `public void DetermineEstimatedRowHeight()`\r\n\r\n-changed \r\n- `internal void InvalidatePrototypicalCellCache()` (remove virtual)\r\n- `internal virtual void InvalidatingPrototypicalCellCache()` (replace InvalidatePrototypicalCellCache)\r\n-  `nfloat GetEstimatedRowHeight(UITableView table)` (remove internal)\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nVisit 4356 on the gallery, remove the 2 items and add 2 items, the app shouldn't crash when adding items.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard"},{"Id":"9303641002","Type":"IssuesEvent","CreatedAt":"2019-03-24T19:00:14","Actor":"mfeingol","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5675","RelatedDescription":"Opened issue \"Xamarin.Forms.Maps: OnMapReady is called twice on Android\" (#5675) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen using a MapRenderer on Android, the `OnMapReady` override is called twice during map instance startup, \r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a custom map and a custom map renderer\r\n2. Use a custom map in a page\r\n3. Observe `MapReady` is called twice\r\n\r\n### Expected Behavior\r\n\r\n`MapReady` is only called once.\r\n\r\n### Actual Behavior\r\n\r\n`MapReady` is only called twice, with two different instances of the native Google map\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0.264807\r\n- Last known good version: Unknown\r\n- IDE: VS 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1\r\n- Android Support Library Version: 28.0.0.1\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nThe following solution contains a simple repro:\r\n\r\n[XamarinFormsSample.zip](https://github.com/xamarin/Xamarin.Forms/files/3000730/XamarinFormsSample.zip)"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9304108280","Type":"IssuesEvent","CreatedAt":"2019-03-24T22:31:29","Actor":"ivanicin","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5805","RelatedDescription":"Opened issue \"Crash while copying ObservableCollection to List\" (#5805) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\nI've got the error from the App Center report.\r\n\r\nWhat the app does is that it copies the ObservableCollection to the List with ToList() method as you will see in the crash report below.\r\n\r\n### Expected Behavior\r\nIt would be expected that this work. If it is needs to crash it should send less cryptic message\r\n\r\n### Actual Behavior\r\nThis is the crash report:\r\nArray.Copy (System.Array sourceArray, System.Int32 sourceIndex, System.Array destinationArray, System.Int32 destinationIndex, System.Int32 length)\r\nList`1[T].CopyTo (T_REF[] array, System.Int32 arrayIndex)\r\nCollection`1[T].CopyTo (T_REF[] array, System.Int32 index)\r\nSystem.Collections.Generic.List`1[T]..ctor (System.Collections.Generic.IEnumerable`1[T] collection) <0x10476c774 + 0x000f3> in <2b439461a53d406abf16d6e5e34ece7f#b36d1afe6b432fea26ad687582c8a2ab>:0\r\nEnumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source)\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.9\r\nVisualStudio.15.Release/15.9.9+28307.518\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA347\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.20131.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFile Differ   1.4.25\r\nThe easiest way to diff two files directly in Solution Explorer\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nMultilingual App Toolkit   4.0\r\nMultilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61903.01040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.489\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.80 (d15-9@914127c74)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.15 (d60abd1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"9303800711","Type":"PullRequestEvent","CreatedAt":"2019-03-24T20:11:56","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5804","RelatedDescription":"Closed pull request \"Backport group apps\" (#5804) at xamarin/xamarin-macios","RelatedBody":"Backport a number of commits that will make device tests run faster in VSTS."},{"Id":"9303673070","Type":"PullRequestEvent","CreatedAt":"2019-03-24T19:14:27","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5804","RelatedDescription":"Opened pull request \"Backport group apps\" (#5804) at xamarin/xamarin-macios","RelatedBody":"Backport a number of commits that will make device tests run faster in VSTS."},{"Id":"9303495233","Type":"PullRequestEvent","CreatedAt":"2019-03-24T17:54:16","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5794","RelatedDescription":"Merged pull request \"[XHarness] Make TvOS and WatchOS use their test dlls.\" (#5794) at xamarin/xamarin-macios","RelatedBody":"Up to this commit the test dlls used for the bcl were from iOS. Since\r\nthe Mono SDK provides the dlls for both missing platforms (TvOS and\r\nWatchOS) we can now use the correct path for the dlls.\r\n\r\nThere is a small trick to minimize the project generation, since there\r\nis a simple string.Replace, the logic now checks the platform under\r\ntest and does:\r\n\r\n* TvOS - Goes from monotouch_TEST_NAME to monotouch_tv_TEST_NAME\r\n* WatchOS - Gores from monotouch_TEST_NAME to monotouch_watch_TEST_NAME"},{"Id":"9303493017","Type":"PullRequestEvent","CreatedAt":"2019-03-24T17:53:19","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5796","RelatedDescription":"Merged pull request \"Bump maccore to fix CI profile issues.\" (#5796) at xamarin/xamarin-macios","RelatedBody":"Brings this fix: https://github.com/xamarin/maccore/pull/1489"},{"Id":"9300478382","Type":"PullRequestEvent","CreatedAt":"2019-03-23T14:09:06","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5803","RelatedDescription":"Opened pull request \"Backport device bcl tests\" (#5803) at xamarin/xamarin-macios","RelatedBody":"This fixes present in master will fix a number of crashes we have in the VSTS tests while testing on device."},{"Id":"9300470294","Type":"PullRequestEvent","CreatedAt":"2019-03-23T14:04:57","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5797","RelatedDescription":"Merged pull request \"[Jenkins] Increase the Jenkins timeout since tests are taking longer now.\" (#5797) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":24,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":115,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":41,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":39,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":69,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":9,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":18,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":261,"FavoriteCount":130,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":23,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":15,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":31,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":28,"RawContent":null}]}},"RunOn":"2019-03-25T05:30:48.3746531Z","RunDurationInMilliseconds":2649}