{"Data":{"Blog":{"FeedItems":[{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-11-14T20:30:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/14/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":".NET Framework November 2018 Security and Quality Rollup","PublishedOn":"2018-11-14T00:24:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework September 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-framework-november-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2017 version 15.9","PublishedOn":"2018-11-13T18:09:43+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Starting with Visual Studio 2017 version 15.9, we’ve changed how the Visual Studio tooling for .NET consumes .NET Core SDKs. Prior to this change, installing a preview version of the .NET Core SDK...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-core-tooling-update-for-visual-studio-2017-version-15-9/","RawContent":null},{"Title":"Cross-platform Time Zones with .NET Core","PublishedOn":"2018-11-13T18:00:21+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Developing applications that span multiple operating systems in .NET Core while working with Time Zone information can lead to unexpected results for developers not familiar with the differences in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/cross-platform-time-zones-with-net-core/","RawContent":null},{"Title":"Building C# 8.0","PublishedOn":"2018-11-13T00:00:02+00:00","CommentsCount":143,"FacebookCount":0,"Summary":"Building C# 8.0 The next major version of C# is C# 8.0. It&#8217;s been in the works for quite some time, even as we built and shipped the minor releases C# 7.1, 7.2 and 7.3, and I&#8217;m quite...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/","RawContent":null},{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":107,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8578321898","Type":"PullRequestEvent","CreatedAt":"2018-11-13T04:22:33","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8573927252","Type":"PullRequestEvent","CreatedAt":"2018-11-12T13:30:25","Actor":"scottbrady91","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Opened pull request \"Update to IdentityManager project\" (#116) at dotnet/foundation","RelatedBody":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo."},{"Id":"8573265026","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:25:41","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Opened pull request \"Create identitymodel.md\" (#115) at dotnet/foundation","RelatedBody":""},{"Id":"8573235551","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:20:18","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8635390529","Type":"PullRequestEvent","CreatedAt":"2018-11-22T22:23:47","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21171","RelatedDescription":"Merged pull request \"Typos\" (#21171) at dotnet/coreclr","RelatedBody":""},{"Id":"8635388274","Type":"PullRequestEvent","CreatedAt":"2018-11-22T22:22:41","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21157","RelatedDescription":"Merged pull request \"Delete System.AppDomainSetup\" (#21157) at dotnet/coreclr","RelatedBody":"Contributes to #21028"},{"Id":"8635178181","Type":"IssuesEvent","CreatedAt":"2018-11-22T20:50:06","Actor":"manofstick","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21172","RelatedDescription":"Opened issue \".net core poor performance vs .net framework\" (#21172) at dotnet/coreclr","RelatedBody":"Whilst playing around with some of the [Linq optimizations](https://github.com/dotnet/corefx/pull/31025#issuecomment-404900306) in .net core, I though I would try a hard-coded, not-for-general-use but nice on memory `Take` implementation.\r\n\r\nAnyway, you can find the full gist of that [here](https://gist.github.com/manofstick/1b65890af418c1a83259d1394b127aae).\r\n\r\nThe results of this are relatively inconsequential, but what is interesting is the performance difference of the algorithm between .net core and .net framework.\r\n\r\nif you use the gist and run:\r\n\r\n    var sw = Stopwatch.StartNew();\r\n    for (var i = 0; i < 10; ++i)\r\n    {\r\n        sw.Restart();\r\n        var sortedTake = SortedTake(DataSetAdverserial(), 50);\r\n        Console.WriteLine(sw.ElapsedMilliseconds);\r\n    }\r\n\r\nthen the algorithm on .net framework takes ~150ms on my machine, but ~380ms under .net core (both running 64bit JIT).\r\n\r\nI understand some small differences, but 2.5x slower seems a bit excessive? Or should this be expected with some algorithms?\r\n"},{"Id":"8635099056","Type":"PullRequestEvent","CreatedAt":"2018-11-22T20:18:25","Actor":"github-john-doe","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21171","RelatedDescription":"Opened pull request \"Typos\" (#21171) at dotnet/coreclr","RelatedBody":""},{"Id":"8635027921","Type":"PullRequestEvent","CreatedAt":"2018-11-22T19:51:21","Actor":"k15tfu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21170","RelatedDescription":"Opened pull request \"Move all the math functions undef #ifndef PAL_STDCPP_COMPAT\" (#21170) at dotnet/coreclr","RelatedBody":"Move all the math functions undef #ifndef PAL_STDCPP_COMPAT\r\n\r\nBug: 20786"},{"Id":"8634969025","Type":"IssuesEvent","CreatedAt":"2018-11-22T19:29:06","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21161","RelatedDescription":"Closed issue \"Accessing .NET Core 2.1 types, features in class library (e.g. Type.IsByRefLike)\" (#21161) at dotnet/coreclr","RelatedBody":"First, please forgive me.  I'm almost certain I don't have the absolute-best repo here, but I'll be honest, I don't know what lies with CoreCLR, what's with CoreFX, etc etc.\r\n\r\nI'm upgrading my little framework to .NET Core 2.1.  I'm guessing it's bad timing since NuGet UI is giving me 2.2.0, despite it not being announced or on any site, but that's beside the point.\r\n\r\nMy sample apps are fine with TFM `netcoreapp2.1`.  But I couldn't see any guidance anywhere on if/how to upgrade class libraries, which this project mostly is.  I have unit tests which pass (because they target `netstandard2.0`) but fail at runtime, because `Type.IsByRefLike` exists on `Type`, it seems, only in `netcoreapp2.1`.  Accessing the property simply won't compile on `netstandard2.0`.\r\n\r\nMy questions are:\r\n\r\n1. What should a class library do if it wants to use `netcoreapp2.1` features, like `Type.IsByRefLike`?\r\n2. What is the guidance for class libraries which are built on/around .NET Core 2.1 libraries from Microsoft?  Keep to `netstandard2.0`?  Do whatever it is you suggest for Q1?\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8635663020","Type":"PullRequestEvent","CreatedAt":"2018-11-23T01:03:08","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10384","RelatedDescription":"Merged pull request \"Update dependency files\" (#10384) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18571.1\r\n\r\n"},{"Id":"8635472300","Type":"IssuesEvent","CreatedAt":"2018-11-22T23:06:08","Actor":"FoxCouncil","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10387","RelatedDescription":"Opened issue \"`dotnet build` & `dotnet publish` do not include runtimeconfig.json for referenced applications\" (#10387) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Create new .NET Core 2.1 Console App solution/project in your favorite IDE (Project A)\r\n2. Create a new .NET Core 2.1 Console App project in the same solution. (Project B)\r\n3. Reference Project B in Project A\r\n4. Build/Publish Project A\r\n5. Notice that Project B's .runtimeconfig.json file is not in Project A's bin/*/netcoreapp2.1/ folder\r\n\r\n## Expected  behavior\r\n\r\nProject B's .runtimeconfig.json is included in the bin directory of Project A.\r\n\r\n## Actual behavior\r\n\r\nProject B's .runtimeconfig.json is not in the bin directory of Project A.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n````"},{"Id":"8635099121","Type":"PullRequestEvent","CreatedAt":"2018-11-22T20:18:26","Actor":"github-john-doe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10386","RelatedDescription":"Opened pull request \"Typos\" (#10386) at dotnet/cli","RelatedBody":""},{"Id":"8633236609","Type":"IssuesEvent","CreatedAt":"2018-11-22T13:17:17","Actor":"ygoe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10385","RelatedDescription":"Opened issue \"Current stable download URL\" (#10385) at dotnet/cli","RelatedBody":"I'd like to install the .NET CLI on a Raspberry Pi. Since there are no packages for `apt` yet, this needs to be done manually. I'm writing a script that does that automatically. But it still needs the URL to download the archive from. It can easily be looked up on the web, but I believe this could also be automatic.\r\n\r\nSo I'm looking for a URL like this: `https://download.microsoft.com/dotnet/runtime/linux/arm/latest.tar.gz`"},{"Id":"8633159152","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:03:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10384","RelatedDescription":"Opened pull request \"Update dependency files\" (#10384) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18571.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8633204741","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:11:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Merged pull request \"Update dependency files\" (#980) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n"},{"Id":"8633148967","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:01:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Opened pull request \"Update dependency files\" (#980) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n"},{"Id":"8628628658","Type":"PullRequestEvent","CreatedAt":"2018-11-21T17:57:16","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/978","RelatedDescription":"Merged pull request \"Make sure Signing target finds packages to sign\" (#978) at dotnet/standard","RelatedBody":"This will fix a build error where we can't find any packages to sign. The problem was caused by me moving the `PackageOutputPath` property from `Directory.Build.props` to `Directory.Build.targets`, which was a workaround to allow us to continue outputting packages to the bin dir while using Arcade's packaging tasks. Once we're outputting packages to `artifacts`, we can revert this PR.\r\n\r\nCC @danmosemsft @JohnTortugo"},{"Id":"8626741279","Type":"PullRequestEvent","CreatedAt":"2018-11-21T13:11:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/979","RelatedDescription":"Merged pull request \"Update dependency files\" (#979) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18570.17\r\n\r\n"},{"Id":"8626683193","Type":"PullRequestEvent","CreatedAt":"2018-11-21T13:01:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/979","RelatedDescription":"Opened pull request \"Update dependency files\" (#979) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18570.17\r\n\r\n"},{"Id":"8623146917","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:38:08","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/978","RelatedDescription":"Opened pull request \"Make sure Signing target finds packages to sign\" (#978) at dotnet/standard","RelatedBody":"This will fix a build error where we can't find any packages to sign. The problem was caused by me moving the `PackageOutputPath` property from `Directory.Build.props` to `Directory.Build.targets`, which was a workaround to allow us to continue outputting packages to the bin dir while using Arcade's packaging tasks. Once we're outputting packages to `artifacts`, we can revert this PR.\r\n\r\nCC @danmosemsft "},{"Id":"8619716551","Type":"PullRequestEvent","CreatedAt":"2018-11-20T13:11:36","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/977","RelatedDescription":"Merged pull request \"Update dependency files\" (#977) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18569.4\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8635803087","Type":"PullRequestEvent","CreatedAt":"2018-11-23T02:24:00","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33670","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview-27123-01, preview-27122-03, respectively (master)\" (#33670) at dotnet/corefx","RelatedBody":""},{"Id":"8635726396","Type":"PullRequestEvent","CreatedAt":"2018-11-23T01:40:54","Actor":"electricessence","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/33667","RelatedDescription":"Closed pull request \"Extend 'Capture' to expose '.Span' in addition to '.Value'.\" (#33667) at dotnet/corefx","RelatedBody":""},{"Id":"8635554647","Type":"IssuesEvent","CreatedAt":"2018-11-22T23:56:08","Actor":"Alois-xx","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32764","RelatedDescription":"Closed issue \"Regex Performance Slow Due To CultureInfo.CurrentCulture Call Per Char Comparison\" (#32764) at dotnet/corefx","RelatedBody":"While profiling some slow Regular Expressions I have found that even simple Regular expressions have a very high cost in retrieving the current culture:\r\n```\r\n                        Method | N |           Mean |        Error |       StdDev |\r\n------------------------------ |-- |---------------:|-------------:|-------------:|\r\n                      Original | 1 | 1,005,963.3 ns | 4,597.880 ns | 4,075.900 ns |\r\n                 CaseSensitive | 1 |   231,662.5 ns | 7,209.226 ns | 7,080.423 ns |\r\n CaseSensitiveCultureInvariant | 1 |   231,119.7 ns | 4,490.265 ns | 4,804.533 ns |\r\n          SimplifiedExpression | 1 |     1,588.8 ns |    34.224 ns |    33.613 ns |\r\n      Case_Sensitive_Substring | 1 |       849.2 ns |     9.458 ns |     8.385 ns |\r\n```\r\nThe actual test code is\r\n\r\n```c#\r\n    [CoreJob]\r\n    public class WPFThemRegexPerf\r\n    {\r\n        [Params(1)]\r\n        public int N; // specify how often the methods should be executed. It is an array so you can use 1,100,1000, ...\r\n\r\n        static string Message = \"prefix1: asdflkasjd;flkjasd;lfkja \" + \"prefix2: asdflkasjd;flkjasd;lfkja \" +\r\n                        \"prefix3: asdflkasjd;flkjasd;lfkja \" + \"prefix4: asdflkasjd;flkjasd;lfkja \" +\r\n                        \"prefix5: asdflkasjd;flkjasd;lfkja \" + \"prefix6: asdflkasjd;flkjasd;lfkja \";\r\n\t\t\t\t\t\t\r\n        static Regex ThemeRegex =                             new Regex(\".*(/Common.Controls.Wpf;component/Themes/)[^/]*.xaml\", RegexOptions.Compiled | RegexOptions.IgnoreCase );\r\n        static Regex ThemeRegexCaseSensitive =                new Regex(\".*(/Common.Controls.Wpf;component/Themes/)[^/]*.xaml\", RegexOptions.Compiled);\r\n        static Regex ThemeRegexCaseSensitivCultureInvariant = new Regex(\".*(/Common.Controls.Wpf;component/Themes/)[^/]*.xaml\", RegexOptions.Compiled| RegexOptions.CultureInvariant);\r\n        static Regex SimplifiedRegex =                        new Regex(\"^.*/Common.Controls.Wpf;component/Themes/[^/]*\\\\.xaml\", RegexOptions.Compiled| RegexOptions.CultureInvariant);\r\n\r\n        [Benchmark]\r\n        public void Original()\r\n        {\r\n            bool bMatch = ThemeRegex.IsMatch(Message);\r\n            if (bMatch) throw new Exception(\"No Match Expected\");\r\n        }\r\n\r\n        [Benchmark]\r\n        public void CaseSensitive()\r\n        {\r\n            bool bMatch = ThemeRegexCaseSensitive.IsMatch(Message);\r\n            if (bMatch) throw new Exception(\"No Match Expected\");\r\n        }\r\n\r\n        [Benchmark]\r\n        public void CaseSensitiveCultureInvariant()\r\n        {\r\n            bool bMatch = ThemeRegexCaseSensitivCultureInvariant.IsMatch(Message);\r\n            if (bMatch) throw new Exception(\"No Match Expected\");\r\n        }\r\n\r\n        [Benchmark]\r\n        public void SimplifiedExpression()\r\n        {\r\n            bool bMatch = SimplifiedRegex.IsMatch(Message);\r\n            if (bMatch) throw new Exception(\"No Match Expected\");\r\n        }\r\n\r\n        [Benchmark]\r\n        public void Case_Sensitive_Substring()\r\n        {\r\n            bool bMatch = Message.IndexOf(\"Common.Controls.Wpf;component/Themes/\") != -1 && Message.EndsWith(\".xaml\");\r\n            if (bMatch) throw new Exception(\"No Match Expected\");\r\n        }\r\n\t}\r\n\r\n```\r\nThe generated code by Regex contains char by char comparisons of the form\r\n`   if .... char.ToLower(runtext[index2], CultureInfo.CurrentCulture) == 'c' ....`\r\n\r\nwhere for each character the CultureInfo.CurrentCulture property is retrieved. This has a very high overhead compared to the actual char comparison. It would be much cheaper to store the current culture inside the compiled Go method once and use that as local variable. That should speed up Regex Perf by at least a factor two. \r\n\r\n"},{"Id":"8635465136","Type":"IssuesEvent","CreatedAt":"2018-11-22T23:02:09","Actor":"keeratsingh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/33375","RelatedDescription":"Closed issue \"SqlDataAdapter is missing from NetStandard System.Data.SqlClient\" (#33375) at dotnet/corefx","RelatedBody":"_From @EdLichtman on November 9, 2018 15:48_\n\nI'm attempting to build an utility library using NetStandard and I have installed System.Data.Common and System.Data.SqlClient. When I attempt to use a SqlDataAdapter I get the error \"The type or namespace name \"SqlDataAdapter\" could not be found.\r\n\r\nWhat am I supposed to do to resolve?\n\n_Copied from original issue: aspnet/EntityFrameworkCore#13929_"},{"Id":"8635340902","Type":"PullRequestEvent","CreatedAt":"2018-11-22T22:00:18","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33669","RelatedDescription":"Merged pull request \"Typos\" (#33669) at dotnet/corefx","RelatedBody":""},{"Id":"8635178585","Type":"PullRequestEvent","CreatedAt":"2018-11-22T20:50:16","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33668","RelatedDescription":"Merged pull request \"Mark brotli .c/.h files as non-executable\" (#33668) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8636153005","Type":"IssuesEvent","CreatedAt":"2018-11-23T05:27:15","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31325","RelatedDescription":"Opened issue \"AbstractReference is crashing ServiceHub\" (#31325) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVersion 16.0.0 Preview 2.0 [28321.115.d16.0stg]\r\n\r\nOpened the CPS solution and service hub crashed multiple times with:\r\n\r\n```\r\n11/23/2018 16:23:19 : Error : Microsoft.CodeAnalysis.Remote.CodeAnalysisService (4) : Exception: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticFactsService.GetGetAwaiterMethod(SemanticModel semanticModel, SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.AbstractReferenceFinder.<>c__DisplayClass31_0.<FindReferencesInAwaitExpressionAsync>g__collectMatchingReferences|1(ISymbol originalUnreducedSymbolDefinition, SyntaxNode node, ISyntaxFactsService syntaxFacts, ISemanticFactsService semanticFacts, ArrayBuilder`1 locations)\r\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.AbstractReferenceFinder.<FindReferencesInDocumentAsync>d__28.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.Finders.OrdinaryMethodReferenceFinder.<FindReferencesInDocumentAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessDocumentAsync>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessDocumentAsync>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessDocumentQueueAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessDocumentQueueAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessProjectAsync>d__28.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessProjectAsync>d__27.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessProjectAsync>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessProjectsAsync>d__25.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<ProcessAsync>d__12.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<FindReferencesAsync>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<FindReferencesAsync>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__31.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__37.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.CodeLens.CodeLensReferencesService.<FindAsync>d__1`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Remote.CodeAnalysisService.<>c__DisplayClass3_0.<<GetReferenceCountAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Remote.ServiceHubServiceBase.<RunServiceAsync>d__25`1.MoveNext()\r\n11/23/2018 16:23:19 : Error : Microsoft.CodeAnalysis.Remote.CodeAnalysisService (4) : From:    at Microsoft.CodeAnalysis.Remote.ServiceHubServiceBase.LogException(Exception ex)\r\n```"},{"Id":"8636150111","Type":"IssuesEvent","CreatedAt":"2018-11-23T05:25:44","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31324","RelatedDescription":"Opened issue \"CodeLens is crashing ServiceHub due to missing Microsoft.VisualStudio.ExtensionManager.Implementation\" (#31324) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVersion 16.0.0 Preview 2.0 [28321.115.d16.0stg]\r\n\r\n11/23/2018 16:23:09 : Error : System.TypeInitializationException: The type initializer for 'Microsoft.VisualStudio.CodeLens.Service.MefHostCompositionService' threw an exception. ---> System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.ExtensionManager.Implementation, Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n   at Microsoft.VisualStudio.CodeLens.Service.MefHostCompositionService.VsixDiscoveryHelper.EnumerateCodeLensExtensionVsixLocations()\r\n   at Microsoft.VisualStudio.CodeLens.Service.MefHostCompositionService..ctor(Boolean composeImmediately)\r\n   at Microsoft.VisualStudio.CodeLens.Service.MefHostCompositionService..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.VisualStudio.CodeLens.Service.CodeLensServiceHubService..ctor(Stream stream, IServiceProvider serviceProvider)\r\n"},{"Id":"8636129717","Type":"IssuesEvent","CreatedAt":"2018-11-23T05:14:03","Actor":"LeeReidCSIRO","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31323","RelatedDescription":"Opened issue \"CS0165 missed if .net standard\" (#31323) at dotnet/roslyn","RelatedBody":"Apologies in advance if this a misunderstanding or a bug that belongs elsewhere. It may be related to #29319\r\n\r\n**Version Used**: \r\nVisual Studio Community 15.9.2\r\n.NET 4.7.03056\r\n.NET Standard 2.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new project as a Console Application for .NET Core or .NET Framework\r\n2. Enter the following code and compile:\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            TimeSpan ts;\r\n            Console.WriteLine(ts);\r\n        }\r\n\r\n```\r\n\r\n3. Repeat this, but for a .NET Standard class library. \r\n\r\n**Expected Behavior**:\r\n\r\nThe code should never compile, because TimeSpan is not assigned.\r\n\r\n**Actual Behavior**:\r\nFor a .NET Core or .NET Framework project, this will not compile. For a .NET Standard class library, this will compile without error or warning.  \r\n"},{"Id":"8636120064","Type":"IssuesEvent","CreatedAt":"2018-11-23T05:08:39","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23608","RelatedDescription":"Closed issue \"Hang in PackageInstallerService due to NFW when creating a new Console App (.NET Core)\" (#23608) at dotnet/roslyn","RelatedBody":"VS hung while I was creating a Console App (.NET COre):\r\n\r\nStack:\r\n\r\n```\r\n \t[Managed to Native Transition]\t\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.NoPumpSyncContext.Wait(System.IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout)\tUnknown\r\n \tmscorlib.dll!System.Threading.SynchronizationContext.InvokeWaitMethodHelper(System.Threading.SynchronizationContext syncContext, System.IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tmscorlib.dll!System.Threading.WaitHandle.InternalWaitOne(System.Runtime.InteropServices.SafeHandle waitableSafeHandle, long millisecondsTimeout, bool hasThreadAffinity, bool exitContext)\tUnknown\r\n \tmscorlib.dll!System.Threading.WaitHandle.WaitOne(int millisecondsTimeout, bool exitContext)\tUnknown\r\n \tmscorlib.dll!System.Threading.WaitHandle.WaitOne()\tUnknown\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.PostWatsonReport(int maxReportsPerSession)\tUnknown\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.SessionChannel.WatsonSessionChannel.PostEvent(Microsoft.VisualStudio.Telemetry.TelemetryEvent telemetryEvent)\tUnknown\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.TelemetrySession.PostEvent(Microsoft.VisualStudio.Telemetry.TelemetryEvent telemetryEvent)\tUnknown\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.TelemetrySessionExtensions.PostFault(Microsoft.VisualStudio.Telemetry.TelemetrySession telemetrySession, string eventName, string description, System.Exception exceptionObject, System.Func<Microsoft.VisualStudio.Telemetry.IFaultUtility, int> gatherEventDetails, Microsoft.VisualStudio.Telemetry.TelemetryEventCorrelation[] correlatedWith)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.CodeAnalysis.ErrorReporting.WatsonReporter.Report(string description, System.Exception exception, System.Func<Microsoft.VisualStudio.Telemetry.IFaultUtility, int> callback)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.CodeAnalysis.ErrorReporting.WatsonReporter.Report(System.Exception exception)\tUnknown\r\n>\tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception exception, System.Action<System.Exception> handler)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.ProcessProjectChange(Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.ProjectId projectId)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task task)\tUnknown\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask<System.Collections.Generic.List<NuGet.VisualStudio.IVsPackageMetadata>>.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run<System.Collections.Generic.List<NuGet.VisualStudio.IVsPackageMetadata>>(System.Func<System.Threading.Tasks.Task<System.Collections.Generic.List<NuGet.VisualStudio.IVsPackageMetadata>>> asyncMethod, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions creationOptions)\tUnknown\r\n \tNuGet.VisualStudio.Implementation.dll!NuGet.VisualStudio.VsPackageInstallerServices.GetInstalledPackages(EnvDTE.Project project)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.PackageServicesProxy.GetInstalledPackages(EnvDTE.Project project)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.ProcessProjectChange(Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.ProjectId projectId)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.ProcessBatchedChangesOnForeground(System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.OnWorkspaceChanged.AnonymousMethod__0(System.Threading.Tasks.Task _)\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.ContinuationTaskFromTask.InnerInvoke()\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.Task.Execute()\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.Task.ExecutionContextCallback(object obj)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.Task.ExecuteWithThreadLocal(ref System.Threading.Tasks.Task currentTaskSlot)\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.Task.ExecuteEntry(bool bPreventDoubleExecution)\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Shared.Utilities.SynchronizationContextTaskScheduler.PostCallback(object obj)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeImpl()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(object state)\tUnknown\r\n \tWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(object obj)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.DispatcherOperation.Invoke()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.ProcessQueue()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.WndProcHook(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n\r\n```\r\n\r\nUnderlying exception:\r\n\r\n```\r\n   ArgumentException: The operation failed as details for project ConsoleApp125 could not be loaded.\r\n   at NuGet.PackageManagement.VisualStudio.NetCorePackageReferenceProject.GetPackageSpecsAsync(DependencyGraphCacheContext context)\r\n   at NuGet.VisualStudio.VsPackageInstallerServices.<GetPackagesPathResolverAsync>d__8.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.VisualStudio.VsPackageInstallerServices.<>c__DisplayClass10_0.<<GetInstalledPackages>b__0>d.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\r\n   at Microsoft.VisualStudio.Threading.JoinableTask`1.CompleteOnCurrentThread()\r\n   at Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[T](Func`1 asyncMethod, JoinableTaskCreationOptions creationOptions)\r\n   at NuGet.VisualStudio.VsPackageInstallerServices.GetInstalledPackages(Project project)\r\n   at Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.PackageServicesProxy.GetInstalledPackages(Project project)\r\n   at Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.ProcessProjectChange(Solution solution, ProjectId projectId)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```"},{"Id":"8635605158","Type":"IssuesEvent","CreatedAt":"2018-11-23T00:28:42","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31322","RelatedDescription":"Opened issue \"\"Calcualte Code Metrics\" should be moved to Analyze sub menu on solution context\" (#31322) at dotnet/roslyn","RelatedBody":"**Calculate Code Metrics** is on the **Analyze** menu bar:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/48924964-b3cff400-ef12-11e8-897f-8c21188ffb32.png)\r\n\r\nAnd on the **Analyze** sub menu for a project:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/48924972-dcf08480-ef12-11e8-9e61-e4d2fc5c6c9d.png)\r\n\r\nThe same cannot be said for the menu item on the solution context menu:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/48924959-93a03500-ef12-11e8-9913-ff48fb43b90d.png)\r\n\r\nGiven we've added 3 more menu items this release (Run Test, Debug Tests), can we please move this menu to reduce the size of the context menu?\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8635546282","Type":"PullRequestEvent","CreatedAt":"2018-11-22T23:50:49","Actor":"github-john-doe","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31321","RelatedDescription":"Opened pull request \"Typos\" (#31321) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8635389234","Type":"PullRequestEvent","CreatedAt":"2018-11-22T22:23:09","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6605","RelatedDescription":"Merged pull request \"Typos\" (#6605) at dotnet/corert","RelatedBody":""},{"Id":"8635098871","Type":"PullRequestEvent","CreatedAt":"2018-11-22T20:18:20","Actor":"github-john-doe","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6605","RelatedDescription":"Opened pull request \"Typos\" (#6605) at dotnet/corert","RelatedBody":""},{"Id":"8634626897","Type":"PullRequestEvent","CreatedAt":"2018-11-22T17:35:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6604","RelatedDescription":"Merged pull request \"Implement getCastingHelper and compareTypesForCast\" (#6604) at dotnet/corert","RelatedBody":"This lets RyuJIT do more casting optimizations in both ReadyToRun and full AOT modes."},{"Id":"8634336702","Type":"PullRequestEvent","CreatedAt":"2018-11-22T16:29:39","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6604","RelatedDescription":"Opened pull request \"Implement getCastingHelper and compareTypesForCast\" (#6604) at dotnet/corert","RelatedBody":"This lets RyuJIT do more casting optimizations in both ReadyToRun and full AOT modes."},{"Id":"8634188644","Type":"PullRequestEvent","CreatedAt":"2018-11-22T16:01:19","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6602","RelatedDescription":"Merged pull request \"Properly report intrinsic fields\" (#6602) at dotnet/corert","RelatedBody":"We were hitting an assert in RyuJIT because we were reporting IntPtr.Zero as an intrinsic even if we were not trying to `CORINFO_ACCESS_GET`.\r\n\r\nI fixed that part and also went ahead to port the rest of getFieldIntrinsic from CoreCLR. We'll need this anyway."},{"Id":"8629801305","Type":"PullRequestEvent","CreatedAt":"2018-11-21T22:13:09","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6603","RelatedDescription":"Merged pull request \"Use netcore3.0 CoreCLR for R2R testing\" (#6603) at dotnet/corert","RelatedBody":"Replace use of 2.1 runtime with a recent version from master targetting netcoreapp3.0. This version now includes System.Runtime.Intrinsics, which was previously named System.Runtime.Intrinsics.Experimental (and lived in a separate Nuget package) meaning the test drop we used couldn't bind against it.\r\n\r\nruntest.cmd /coreclr all /mode readytorun fail rate improved from 489 -> 346 (2001/2347 or 85% pass rate)."},{"Id":"8629394172","Type":"PullRequestEvent","CreatedAt":"2018-11-21T20:35:28","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6603","RelatedDescription":"Opened pull request \"Use netcore3.0 CoreCLR for R2R testing\" (#6603) at dotnet/corert","RelatedBody":"Replace use of 2.1 runtime with a recent version from master targetting netcoreapp3.0. This version now includes System.Runtime.Intrinsics, which was previously named System.Runtime.Intrinsics.Experimental (and lived in a separate Nuget package) meaning the test drop we used couldn't bind against it.\r\n\r\nruntest.cmd /coreclr all /mode readytorun fail rate improved from 489 -> 346 (2001/2347 or 85% pass rate)."},{"Id":"8628490542","Type":"PullRequestEvent","CreatedAt":"2018-11-21T17:32:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6600","RelatedDescription":"Merged pull request \"Prevent generating bad SafeHandle marshalling\" (#6600) at dotnet/corert","RelatedBody":"These marshalers are not implemented yet.\r\n\r\nFixes #6556."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8635571027","Type":"PullRequestEvent","CreatedAt":"2018-11-23T00:06:02","Actor":"github-john-doe","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2691","RelatedDescription":"Opened pull request \"Identifer -> Identifier\" (#2691) at dotnet/sdk","RelatedBody":""},{"Id":"8634198637","Type":"IssuesEvent","CreatedAt":"2018-11-22T16:03:07","Actor":"jnm2","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2690","RelatedDescription":"Opened issue \"SDK 2.1.500 fails to set IsTestProject in net40 projects\" (#2690) at dotnet/sdk","RelatedBody":"Here's a full repro: [DotnetTestBug.zip](https://github.com/Microsoft/vstest/files/2608701/DotnetTestBug.zip)\r\n\r\nProjects like this worked in all SDKs up to 2.1.500 because Microsoft.NET.Test.Sdk sets `<IsTestProject>true</IsTestProject>`:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <!-- This works in all SDK versions until 2.1.500: -->\r\n    <TargetFramework>net40</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"NUnit\" Version=\"3.11.0\" />\r\n    <PackageReference Include=\"NUnit3TestAdapter\" Version=\"3.11.0\" />\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"15.9.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nE.g. using SDK 2.1.403, you get this output for `dotnet test`:\r\n\r\n```\r\nTest run for C:\\Users\\Joseph\\Desktop\\DotnetTestBug\\Using SDK 2.1.403\\bin\\Debug\\net40\\TestProject1.dll(.NETFramework,Version=v4.0)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.8.0\r\n...\r\nTest Run Successful.\r\n```\r\n\r\nStarting with SDK 2.1.500, `<IsTestProject>true</IsTestProject>` is no longer set. `dotnet test` gives:\r\n\r\n```\r\nSkipping running test for project C:\\Users\\Joseph\\Desktop\\DotnetTestBug\\Using SDK 2.1.500\\TestProject1.csproj. To run tests with dotnet test add \"\\<IsTestProject>true\\<IsTestProject>\" property to project file.\r\n```\r\n\r\n### Issues\r\n\r\n- Is it your intention to require test projects which include a `net40` target to have to manually include `<IsTestProject>true</IsTestProject>` directly in the test csproj? Why isn't this the case for `net45`, since VSTest 15.9 supports `net40` and `net45` equally?\r\n\r\n- > To run tests with dotnet test add \"\\<IsTestProject>true\\<IsTestProject>\"\r\n  This is invalid XML. Second tag should be a closing tag: \\<IsTestProject>true\\</IsTestProject>\r\n"},{"Id":"8633151511","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:01:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2689","RelatedDescription":"Opened pull request \"Update dependency files\" (#2689) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1064967345070882817","CreatedAt":"2018-11-20T19:42:55+00:00","UserScreenname":"dotnet","Text":"Find out what's new in F# 4.5 from Phillip Carter (@_cartermp) in this episode of the #OnDotNet show.\n\nhttps://t.co/B5Q1Xt828F","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":65,"FavoriteCount":33,"RawContent":null},{"Id":"1062754536018898946","CreatedAt":"2018-11-14T17:10:01+00:00","UserScreenname":"dotnet","Text":"Hear the latest and greatest on the future of .NET and check out demos of #dotNET Core . You'll also get a chance t… https://t.co/yskyvl0xjt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":78,"FavoriteCount":40,"RawContent":null}]}},"RunOn":"2018-11-23T05:30:29.1114525Z","RunDurationInMilliseconds":7559}