{"Data":{"Vue":{"Events":[{"Id":"7253190806","Type":"IssuesEvent","CreatedAt":"2018-02-16T03:28:36","Actor":"ktsn","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/7655","RelatedDescription":"Closed issue \"`Vue` is undefined when importing in Typescript\" (#7655) at vuejs/vue","RelatedBody":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/4895o6nm24](https://codesandbox.io/s/4895o6nm24)\r\n\r\n### Steps to reproduce\r\nUsing Typescript 2.7.1, importing Vue 2.5.13 results in `undefined`.\r\n\r\nTo reproduce, create a blank .ts file:\r\n\r\n```\r\nimport Vue from \"vue\";\r\nconsole.log(Vue); // <-- will be `undefined` (or `null` in Code Sandbox)\r\n```\r\n\r\nThis can be fixed by importing like:\r\n\r\n```\r\nimport * as Vue from \"vue\";\r\n```\r\n\r\n... but then `new Vue()` returns the TS error:\r\n\r\n> test.ts (3,1): Cannot use 'new' with an expression whose type lacks a call or construct signature. (2351)\r\n\r\nChanging this to `new Vue.default();` resolves the TS error, but then results in a Node error:\r\n\r\n> TypeError: Vue.default is not a constructor\r\n\r\n### What is expected?\r\nNo errors\r\n\r\n### What is actually happening?\r\nSee above\r\n\r\n**Note: I'm not using Webpack in this example.** What I assume is happening (referencing the recommended `tsconfig.json` config) is that `import` statements are being as-is by Typescript, for Webpack to pick up and use properly.\r\n\r\nHowever, I think that this should be improved to work with Typescript _directly_, without requiring Webpack to enter the mix. This would benefit server-only environments where code transpilation isn't necessarily required.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7252811807","Type":"PullRequestEvent","CreatedAt":"2018-02-16T00:53:09","Actor":"davidgaroro","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2065","RelatedDescription":"Opened pull request \"Misspelling update passing-props.md\" (#2065) at vuejs/vue-router","RelatedBody":""},{"Id":"7247898138","Type":"PullRequestEvent","CreatedAt":"2018-02-15T06:31:58","Actor":"Dri4n","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2064","RelatedDescription":"Opened pull request \"Dynamically add child routes to an existing route #1156\" (#2064) at vuejs/vue-router","RelatedBody":"Reason:\r\nwe need to add dynamic routes that are associated with a parent.\r\n\r\nUnit Test:\r\nrouter.addRoutes - from line \"nested routes existing children relation\".\r\n\r\nExcuse me if this PR does not meet the guidelines, is my first PR in OpenSource.\r\n\r\nThanks!"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2018-02-16T05:30:31.3042253Z","RunDurationInMilliseconds":1961}