{"Data":{"Sdk":{"Events":[{"Id":"7430305614","Type":"IssuesEvent","CreatedAt":"2018-03-24T23:49:01","Actor":"michael-hawker","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/457","RelatedDescription":"Opened issue \"Sample Repository Link Missing?\" (#457) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThe Description link in the main repo links to this [Documentation](https://msdn.microsoft.com/en-us/library/office/bb448854.aspx); however its `Samples on GitHub` just dumps you to the `OfficeDev` organization and not an actual samples on how to use the Open XML SDK...\r\n\r\nCan a proper link be provided to the repo containing samples?  Especially UWP ones.\r\n\r\nThanks\r\n"},{"Id":"7428331118","Type":"PullRequestEvent","CreatedAt":"2018-03-24T00:28:11","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/455","RelatedDescription":"Merged pull request \"Merge from master\" (#455) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7428272915","Type":"PullRequestEvent","CreatedAt":"2018-03-24T00:00:24","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/456","RelatedDescription":"Merged pull request \"Fix text for availibility of schemas\" (#456) at OfficeDev/Open-XML-SDK","RelatedBody":"With this change, the differences between the 2016 branch and master will be obvious."},{"Id":"7428182191","Type":"PullRequestEvent","CreatedAt":"2018-03-23T23:21:23","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/456","RelatedDescription":"Opened pull request \"Fix test for availibility of schemas\" (#456) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7428107450","Type":"PullRequestEvent","CreatedAt":"2018-03-23T22:53:08","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/455","RelatedDescription":"Opened pull request \"Merge from master\" (#455) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7428059353","Type":"PullRequestEvent","CreatedAt":"2018-03-23T22:36:14","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/453","RelatedDescription":"Merged pull request \"Add tests for XmlConvertingReader and simplify code\" (#453) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7427984483","Type":"PullRequestEvent","CreatedAt":"2018-03-23T22:11:50","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/454","RelatedDescription":"Merged pull request \"Streamline initialization in OpenXmlPartReader\" (#454) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7427863013","Type":"PullRequestEvent","CreatedAt":"2018-03-23T21:36:45","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/454","RelatedDescription":"Opened pull request \"Streamline initialization in OpenXmlPartReader\" (#454) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7427860099","Type":"PullRequestEvent","CreatedAt":"2018-03-23T21:35:52","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/453","RelatedDescription":"Opened pull request \"Add tests for XmlConvertingReader and simplify code\" (#453) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7421957226","Type":"PullRequestEvent","CreatedAt":"2018-03-22T21:19:21","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/452","RelatedDescription":"Merged pull request \"Change format version to indicate lowest supported version for schemas\" (#452) at OfficeDev/Open-XML-SDK","RelatedBody":"This also fixes some bugs of range detection. For instance, in the ChildElementInfoAttribute the default was to be Office2007 and Office2010, while in the schema generator it was using the default for support in 2007+. Since all the file version usage is actually some version and all versions above it, this switches it to be just the lowest version and then calculate at runtime the versions higher than this. This will help in maintaining as more versions are added in that less code churn will be required, and diffs will be easier to reason about."},{"Id":"7421884704","Type":"PullRequestEvent","CreatedAt":"2018-03-22T21:04:52","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/452","RelatedDescription":"Opened pull request \"Change format version to indicate lowest supported version for schemas\" (#452) at OfficeDev/Open-XML-SDK","RelatedBody":"This also fixes some bugs of range detection. For instance, in the ChildElementInfoAttribute the default was to be Office2007 and Office2010, while in the schema generator it was using the default for support in 2007+. Since all the file version usage is actually some version and all versions above it, this switches it to be just the lowest version and then calculate at runtime the versions higher than this. This will help in maintaining as more versions are added in that less code churn will be required, and diffs will be easier to reason about."},{"Id":"7420851037","Type":"PullRequestEvent","CreatedAt":"2018-03-22T17:46:37","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/450","RelatedDescription":"Merged pull request \"Compact generated schema code\" (#450) at OfficeDev/Open-XML-SDK","RelatedBody":"This change greatly simplifies the generated schema code and should make it much easier to understand when updates are merged in (ie Office 2016+ support)."},{"Id":"7419030757","Type":"IssuesEvent","CreatedAt":"2018-03-22T12:57:17","Actor":"christianpokorny","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/451","RelatedDescription":"Opened issue \"Word 2016 : file validation error with value \"useWord2013TrackBottomHyphenation\"\" (#451) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\nIf you have answered that this is a question, please ask it on StackOverflow instead of here.\r\nThis issue tracker is meant to track product issues while StackOverflow excels at answering questions\r\n\r\n**Description**\r\n\r\nWord 2016 : file validation error with value \"useWord2013TrackBottomHyphenation\"\r\n\r\n**Information**\r\n\r\n- .NET Framework 4.7\r\n- DocumentFormat.OpenXml Version: (ie 2.8.1)\r\n\r\n**Repro**\r\n\r\nHere is the OneDrive url from the container where you will find my test word file  :\r\n\r\nhttps://onedrive.live.com/?id=7F7C6DE1B049242F%21105&cid=7F7C6DE1B049242F\r\n\r\nand here is the class I need to test this document :\r\n\r\n    public class WellFormedDocxRule : ITextValidationRule\r\n    {\r\n        public IResourceManagerService ResourceManagerService { get; set; }\r\n\r\n        public ValidationTarget ValidationTarget { get { return ValidationTarget.All; } }\r\n\r\n        //We assume the Validate method is thread safe\r\n        OpenXmlValidator validator = new OpenXmlValidator(FileFormatVersions.Office2010);\r\n\r\n        public IEnumerable<TextValidationErrorInfo> Validate(Text text, WordprocessingDocument document)\r\n        {\r\n            foreach (ValidationErrorInfo error in validator.Validate(document))\r\n            {\r\n                if (error.Description.Contains(\"useWord2013TrackBottomHyphenation\")) continue;\r\n                string strError = String.Format(\"(Part={0} ; Path={1}) : {2}\", error.Part.Uri, error.Path.XPath, error.Description);\r\n                yield return new TextValidationErrorInfo() { Description = ResourceManagerService.GetString(\"text_validation_wellformed_docx_rule_description\"), Details = strError, Severity = ValidationSeverity.Error, ValidationTarget = ValidationTarget };\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n**Observed**\r\n\r\nAfter having define my validator in C# with : \r\nOpenXmlValidator validator = new OpenXmlValidator(FileFormatVersions.Office2010) \r\nI have this error when I validate my docx document with Word 2016 : \r\nThe attribute http://schemas.openxmlformats.org/wordprocessingml/2006/main:name has invalid value 'useWord2013TrackBottomHyphenation'. The Enumeration constraint failed.\" \r\nI'm working with a 2.8.1.15 DocumentFormat.OpenXml.dll file.\r\nFiles created by Word 2016 seem to have more compatsetting elements than files created in Word 2010. \r\nOne of them is useWord2013TrackBottomHyphenation.\r\nI note that whether Validate Option provided in OpenXML SDK Tools or FileFormatVersions enumeration provided by Open XML SDK could only support for Office 2007,2010 and 2013. \r\nSo I think that OpenXMLValidator is not updated for Office 2016 at present. \r\n\r\n\r\n**Expected**\r\n\r\nUpdate OpenXMLValidator to be compatible with Word 2016\r\n"},{"Id":"7415867397","Type":"PullRequestEvent","CreatedAt":"2018-03-21T22:17:23","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/450","RelatedDescription":"Opened pull request \"Compact generated schema code\" (#450) at OfficeDev/Open-XML-SDK","RelatedBody":"This change greatly simplifies the generated schema code and should make it much easier to understand when updates are merged in (ie Office 2016+ support)."}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"7366833000","Type":"IssuesEvent","CreatedAt":"2018-03-12T16:34:29","Actor":"arthurvb","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/216","RelatedDescription":"Opened issue \"Add support for exporting images in .net core\" (#216) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Dear Reader,\r\n\r\nCurrently I cannot export images in .net core since ImageInfo has a bitmap property, where I get the following error:\r\n\r\nError\tCS7069\tReference to type 'Bitmap' claims it is defined in 'System.Drawing', but it could not be found\tDefaultProcessorImplementation\t\r\n\r\nwhen I want to use 'imageInfo.Bitmap.Save(ms, imageFormat);' in the ImageHandler. I did try to add the 'System.Drawing.Common' package from nuget, but that did not resolve the error.\r\n\r\nThank you in advance for your help and for making this package available,\r\n\r\nArthur"},{"Id":"7333791977","Type":"IssuesEvent","CreatedAt":"2018-03-05T20:33:47","Actor":"XzaR90","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/215","RelatedDescription":"Opened issue \"Copy custom xml and SharePoint metadata on merging document\" (#215) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\n**Description**\r\nCopy custom XML and SharePoint metadata on merging document does not work using DocumentBuilder?\r\n\r\n\r\n**Information**\r\n\r\n- .NET Target: NET Framework 4.5.2\r\n- DocumentFormat.OpenXml Version: OpenXMLSDK-MOT 2.6.0.0\r\n\r\n**Expected**\r\n\r\nWhen I comment out if (itemList.Contains(propertyPartDoc.Root.Attribute(DS.itemID).Value)) I get the expected result.\r\n\r\n```csharp\r\n        private static void CopyCustomXml(WordprocessingDocument sourceDocument, WordprocessingDocument newDocument,\r\n            IEnumerable<XElement> newContent)\r\n        {\r\n            List<string> itemList = new List<string>();\r\n            foreach (string itemId in newContent\r\n                .Descendants(W.dataBinding)\r\n                .Select(e => (string)e.Attribute(W.storeItemID)))\r\n                if (!itemList.Contains(itemId))\r\n                    itemList.Add(itemId);\r\n\r\n            foreach (CustomXmlPart customXmlPart in sourceDocument.MainDocumentPart.CustomXmlParts)\r\n            {\r\n                OpenXmlPart propertyPart = customXmlPart\r\n                    .Parts\r\n                    .Select(p => p.OpenXmlPart)\r\n                    .Where(p => p.ContentType == \"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\")\r\n                    .FirstOrDefault();\r\n\r\n                if (propertyPart != null)\r\n                {\r\n                    XDocument propertyPartDoc = propertyPart.GetXDocument();\r\n                    //if (itemList.Contains(propertyPartDoc.Root.Attribute(DS.itemID).Value))\r\n                    //{\r\n                        CustomXmlPart newPart = newDocument.MainDocumentPart.AddCustomXmlPart(customXmlPart.ContentType);\r\n                        newPart.GetXDocument().Add(customXmlPart.GetXDocument().Root);\r\n                        foreach (OpenXmlPart propPart in customXmlPart.Parts.Select(p => p.OpenXmlPart))\r\n                        {\r\n                            CustomXmlPropertiesPart newPropPart = newPart.AddNewPart<CustomXmlPropertiesPart>();\r\n                            newPropPart.GetXDocument().Add(propPart.GetXDocument().Root);\r\n                        }\r\n                    //}\r\n                }\r\n            }\r\n        }\r\n``` "},{"Id":"7332381011","Type":"IssuesEvent","CreatedAt":"2018-03-05T16:10:43","Actor":"pedro-w","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/214","RelatedDescription":"Opened issue \"Regression in OpenXmlRegex.Replace \" (#214) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I've got a program using OpenXmlRegex.Replace to replace text 'templates' in a Word document with new values. I am getting problems with version 4.5.3.2 which weren't in 4.5.3.1. It looks like, once the document exceeds a certain size, it starts to replace characters off by one position. I've done some work to get the smallest example I can.\r\n```` C#\r\nusing System.IO;\r\nusing System.Text.RegularExpressions;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing OpenXmlPowerTools;\r\n\r\nnamespace ConsoleApp3\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var src = Path.GetFullPath(\"..\\\\..\\\\me.docx\");\r\n            var dest = Path.GetFullPath(\"..\\\\you.docx\");\r\n            File.Copy(src, dest, true);\r\n            var doc = WordprocessingDocument.Open(dest, true);\r\n            foreach (var part in doc.ContentParts())\r\n            {\r\n                var xdoc = part.GetXDocument();\r\n                var content = xdoc.Descendants(W.p);\r\n                OpenXmlRegex.Replace(content, rex, \"\", null);\r\n                part.PutXDocument();\r\n            }\r\n            doc.Save();\r\n        }\r\n        static readonly Regex rex = new Regex(\"rd\");\r\n    }\r\n}\r\n\r\n````\r\nThis program is supposed to replace all instances of 'rd' in file 'me.docx' with nothing and write the result into 'you.docx'\r\n\r\nMy input file looks like\r\n````\r\nword 1 word 2 word 3 word 4 word 5 word 6 word 7 word 8 word 9 word 10 word 11 word 12 \r\nword 13 word 14 word 15 word 16 word 17 word 18 word 19 word 20 word 21 word 22 \r\nword 23 word 24 \r\n````\r\n... down to ...\r\n````\r\nword 5991 word 5992 word 5993 word 5994 word 5995 word 5996 word 5997 word 5998 \r\nword 5999 word 6000 \r\n````\r\nAnd the output file starts off OK\r\n````\r\nwo 1 wo 2 wo 3 wo 4 wo 5 wo 6 wo 7 wo 8 wo 9 wo 10 wo 11 wo 12 wo 13 wo 14 wo 15 wo 16 wo \r\n```` \r\nbut later becomes\r\n````\r\n481 wo 482 wo 483 wo 484 wo 485 wo 486 wo 487 wo 488 wo 489 wo 490 wo 491 wd 492 wd 493 \r\nwd 494 wd 495 wd 496 wd 497 wd 498 wd 499 wd 500 wd 501 wd 502 wd 503 wd 504 wd 505 wd \r\n````\r\nand stays like that to the end.\r\nI've tried different combinations of text, regex and replacement but there is no obvious way to calculate when it will go wrong.\r\n\r\nHowever if I downgrade my NuGet packages to 4.5.3.1 it works OK. It seems to be independent of the version of `DocumentFormat.OpenXml` used, I can upgrade that to 2.8.1 (from 2.7.1/2.7.2) with no effect.\r\n\r\nI am happy to do some more investigation but I found it difficult to work out which revision in git corresponds to which version in NuGet as there are no git tags.\r\n\r\nI am using Visual Studio 2017, .NET 4.6.2"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-03-26T05:30:28.6334798Z","RunDurationInMilliseconds":1737}