{"Data":{"Blog":{"FeedItems":[{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8782939933","Type":"PullRequestEvent","CreatedAt":"2018-12-20T02:52:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2556","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fix Aar directory resolution. (#2424)\" (#2556) at xamarin/xamarin-android","RelatedBody":"* [Xamarin.Android.Build.Tasks] Fix Aar directory resolution.\r\n\r\nFixed #2408\r\n\r\nAs part of the speed up process when extracting resources\r\nfrom assemblies and Aar files, we dont re-extract if\r\nthe stamp file is newer than the assembly.\r\n\r\nThe problem with that was in the case of Aar files we\r\nwere NOT adding the `res` or `asset` directories to\r\nthe list of resolved directories when we skipped extraction.\r\nAs a result we got less `res` directories on a second\r\nbuild.\r\n\r\nThis commit fixes that.\r\n\r\n* Add Unit Test\r\n\r\n* Fix Compile Error"},{"Id":"8782926096","Type":"PullRequestEvent","CreatedAt":"2018-12-20T02:48:14","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2555","RelatedDescription":"Opened pull request \"[monodroid] Release local refs earlier (#2312)\" (#2555) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2257\r\n\r\nWe should release local ref earlier in these cases, because with\r\nhigher number of assemblies we can overflow the local reference table\r\nsoon enough, before returning from native code.\r\n\r\nIn case of apks it is not as much probable, but why not release it and\r\nnot take a chance."},{"Id":"8781992684","Type":"PullRequestEvent","CreatedAt":"2018-12-19T22:14:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2541","RelatedDescription":"Merged pull request \"[tests] Run tests in parallel\" (#2541) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1331/\r\nContext: https://github.com/xamarin/xamarin-android/issues/2397\r\nContext: 5eae6e55190e3c30d3844c92d557128f872caa22\r\n\r\nCommit 91a39725 updated `make run-all-tests` so that certain MSBuild\r\nunit test targets would be run in parallel, but had two flaws:\r\n\r\n 1. It only worked on non-Windows platforms.\r\n 2. It ignored many errors.\r\n\r\nCommit 91a39725 only worked on non-Windows platforms because it worked\r\nby generating a **bash**(1)-compatible shell script which\r\n*backgrounded* the target invocations.  Errors were ignored because\r\nthe generated script always exited with an error code of 0:\r\n\r\n        msbuild RunTests.targets /t:RunNUnitTests &\r\n        msbuild RunTests.targets /t:RunApkTests &\r\n        # ...\r\n        exit 0\r\n\r\nSuch a script won't easily run on Windows, and the `msbuild` exit\r\ncodes were ignored because I couldn't think of a good and \"reasonable\"\r\nway to capture them.  (To be fair, Google/StackOverflow/etc. did show\r\nvarious ways to capture the exit codes for backgrounded pipelines.\r\nI considered them all to be largely *unreadable*.)\r\n\r\nAdditionally, I didn't think that this would necessarily be a problem:\r\nif a unit test failed, it should report the failure in one of the\r\nNUnit `.xml` files -- largely so that we wouldn't need to read the\r\nJenkins Console Output to see what the *actual* error was! -- and thus\r\nignoring the exit status shouldn't be a problem.\r\n\r\nTurns Out...that's wrong.  We have observed builds which are \"green\"\r\n-- no errors! -- but in which there *were* failures, and the failures\r\nweren't reported *because* the `parallel-targets.sh` script didn't\r\nreport that anything was wrong!\r\n\r\nConsider issue #2397: we want to *ensure* that timing collection\r\nworks, so that we can reliably update our [Tests times page][0].\r\n\r\nFor example, commit 5eae6e55 added a check so that we would error out\r\nif the required file didn't exist.\r\n\r\nThe problem is, the file doesn't exist:\r\n\r\n        error : Input file 'logcat-Release-Bundle-Mono.Android_TestsMultiDex.txt' doesn't exist.\r\n\r\nYet the build is green!\r\n\r\nThe reason *why* the build is green is because the `RunApkTests`\r\ntarget is executed by `parallel-targets.sh`, and since\r\n`parallel-targets.sh` was \"ignoring\" all errors because of it's\r\n`exit 0`, the error that commit 5eae6e55 attempted to insert was\r\n*still* ignored.\r\n\r\nDoh!\r\n\r\nFix both issues: since sanely capturing background process exit codes\r\nis not \"reasonably easy\" to do in **bash**(1), *Don't Use Bash*.\r\nInstead, introduce a new `<RunParallelTargets/>` task which uses\r\n`System.Diagnostics.Process` to run the targets in the background,\r\nthen (sanely) wait for them to complete and perform any necessary\r\nerror checking.\r\n\r\nThis has the added benefit that it *also* now works on Windows.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/plot/Tests%20times/"},{"Id":"8781880287","Type":"PullRequestEvent","CreatedAt":"2018-12-19T21:51:29","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2554","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] skip _SetLatestTargetFrameworkVersionForPackageReference\" (#2554) at xamarin/xamarin-android","RelatedBody":"During a NuGet restore:\r\n\r\n    msbuild foo.android.csproj /t:Restore\r\n\r\nThe `_SetLatestTargetFrameworkVersionForPackageReference` MSBuild\r\ntarget triggers `_SetLatestTargetFrameworkVersion` and some tasks to\r\nrun:\r\n\r\n- `<ResolveSdks/>`\r\n- `<ValidateJavaVersion/>`\r\n- `<ResolveAndroidTooling/>`\r\n\r\nWe don't really need these to run at all during `Restore`, unless\r\n`$(AndroidUseLatestPlatformSdk)` is `True`. In that case we need to\r\ncalculate what the final `$(TargetFrameworkVersion)` will be.\r\n\r\nOptionally running this target saved ~600ms during a NuGet restore of\r\na single Xamarin.Android project:\r\n\r\n    602 ms  _SetLatestTargetFrameworkVersion           1 calls"},{"Id":"8781526537","Type":"PullRequestEvent","CreatedAt":"2018-12-19T20:46:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2550","RelatedDescription":"Merged pull request \"[Xamarin.Android.Tools.BootstrapTasks] Include Logcat in errors\" (#2550) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/job/xamarin-android-pr-builder-release/189/\r\n\r\nCommit c38c58e9 updated the `<RenameTestCases/>` task so that if the\r\nNUnit XML output file couldn't be found, we would instead *generate* a\r\n\"reasonable\" NUnit XML file containing an error, so that Jenkins would\r\nnicely show that *something* went wrong.\r\n\r\nThe result is that it works, but isn't \"nice\": the Test Result failure\r\nis a *filesystem path*, e.g.\r\n\r\n\t/Users/builder/jenkins/workspace/xamarin-android-pr-builder-release/xamarin-android/build-tools/scripts/../../TestResult-Xamarin.Android.EmbeddedDSO_Test.nunit-Release-Aot.xml.TestResult-Xamarin.Android.EmbeddedDSO_Test.nunit-Release-Aot.xml\r\n\r\n(That's *literally* the name of a \"failing test.\")\r\n\r\nAdditionally, the [*contents* of the generated file][0] aren't entirely\r\nhelpful: it's just a `FileNotFoundException`, because the expected\r\nNUnit XML input doesn't exist.\r\n\r\nFix both of these issues: instead of a bizarro filesystem path for the\r\nname of the failing test, construct a reasonable alternative: use the\r\n`SourceFile` basename -- without the `TestResult-` prefix and without\r\nany extension -- as the `//test-suite/@name` value, and use\r\n`Possible Crash / {Configuration}` as the `//test-case/@name` value.\r\nFor the above failure, this would result in this test failing:\r\n\r\n\tXamarin.Android.EmbeddedDSO_Test.nunit.Possible Crash / Release-Aot\r\n\r\nAdditionally, check for `adb logcat` output within the\r\n`{DestinationFolder}/tests` directory, with a filename matching\r\n`logcat-{Configuration}-{testSuiteName}.txt`.  If this file exists,\r\nthe contents of the file are included into the NUnit XML file.\r\n\r\n[0]: https://jenkins.mono-project.com/job/xamarin-android-pr-builder-release/189/testReport/junit/_Users_builder_jenkins_workspace_xamarin-android-pr-builder-release_xamarin-android_build-tools_scripts_.._.._TestResult-Xamarin.Android.EmbeddedDSO_Test.nunit-Release-Aot/xml/TestResult_Xamarin_Android_EmbeddedDSO_Test_nunit_Release_Aot_xml/"},{"Id":"8781122477","Type":"PullRequestEvent","CreatedAt":"2018-12-19T19:27:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2551","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] handle missing AndroidSdkPath better\" (#2551) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/2288139\r\n\r\nA build on VSTS hit the error:\r\n\r\n    Error MSB4018: The \"ResolveAndroidTooling\" task failed unexpectedly. [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\dlab14\\android-toolchain\\sdk\\platforms'. [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at System.IO.FileSystemEnumerableIterator`1.CommonInit() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at System.IO.FileSystemEnumerableIterator`1..ctor(String path, String originalUserPath, String searchPattern, SearchOption searchOption, SearchResultHandler`1 resultHandler, Boolean checkHost) [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at System.IO.Directory.EnumerateDirectories(String path) [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Xamarin.Android.Tasks.ResolveAndroidTooling.GetMaxInstalledApiLevel() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Xamarin.Android.Tasks.ResolveAndroidTooling.ValidateApiLevels() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Xamarin.Android.Tasks.ResolveAndroidTooling.Execute() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n\r\nReviewing the stack trace, it looks like we are calling\r\n`Directory.EnumerateDirectories` without checking `Directory.Exists`.\r\n\r\nWith this change, we should fail with a proper error code.\r\n\r\n### So what caused this? ###\r\n\r\nIt appears that when you run this on a clean Windows machine (no\r\nAndroid SDK):\r\n\r\n    msbuild Xamarin.Android.sln /t:Prepare\r\n\r\nThis call fails in `PrepareWindows.targets`:\r\n\r\n    <Exec Command=\"$(_NuGet) restore Xamarin.Android-Tests.sln\" WorkingDirectory=\"$(_TopDir)\" />\r\n\r\nNuGet is using the system's Xamarin.Android MSBuild targets, and they\r\nare failing on this error.\r\n\r\nWhat we should do, is run this NuGet restore after\r\n`android-toolchain.csproj` has been built. I am not sure how this was\r\nworking prior to VS 15.9."},{"Id":"8781120593","Type":"PullRequestEvent","CreatedAt":"2018-12-19T19:27:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2553","RelatedDescription":"Opened pull request \"Bump to xamarin/sqlite/3.26.0@137d0df1\" (#2553) at xamarin/xamarin-android","RelatedBody":"Context: https://blade.tencent.com/magellan/index_en.html\r\nContext: https://worthdoingbadly.com/sqlitebug/\r\n\r\nIncludes SQLite fixes between 2018-09-25 and 2018-12-01, bringing us\r\nto SQLite 3.26.0."},{"Id":"8780588024","Type":"PullRequestEvent","CreatedAt":"2018-12-19T17:45:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2540","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] ResolveLibraryProjectImports temp files\" (#2540) at xamarin/xamarin-android","RelatedBody":"When reviewing `ResolveLibraryProjectImports`, I noticed a few things\r\nwe could improve:\r\n\r\n1. We are using `GetResourceData` to get the entire contents of a file\r\n  as a `byte[]` and then writing to disk.\r\n2. We are writing temporary zip files to disk, reading them to extract,\r\n  then deleting them.\r\n\r\nThe first thing I did was take advantage of the `GetResourceStream`\r\nmethod, so we could just do `stream.CopyTo(file)`. This prevents us\r\nfrom allocating big `byte[]` the size of each file.\r\n\r\nNext, I took advantage of `ZipArchive.Open (stream)` and\r\n`GetResourceStream` to avoid the need for creating temporary zip\r\nfiles. We can unzip directly from the `Stream` in memory.\r\n\r\n## Results ##\r\n\r\nWhen timing these changes, I used the Xamarin.Forms integration\r\nproject in this repo:\r\n\r\n    Before\r\n    1. 1793 ms  ResolveLibraryProjectImports               1 calls\r\n    2. 1780 ms  ResolveLibraryProjectImports               1 calls\r\n    3. 1770 ms  ResolveLibraryProjectImports               1 calls\r\n    After\r\n    1. 1750 ms  ResolveLibraryProjectImports               1 calls\r\n    2. 1740 ms  ResolveLibraryProjectImports               1 calls\r\n    3. 1702 ms  ResolveLibraryProjectImports               1 calls\r\n\r\nI would say the improvements here are around 50ms."},{"Id":"8780412903","Type":"IssuesEvent","CreatedAt":"2018-12-19T17:14:25","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2552","RelatedDescription":"Opened issue \"Nearly empty logcat output from XF test\" (#2552) at xamarin/xamarin-android","RelatedBody":"For (yet) unknown reason, the logcat output of XF test is really short. For example:\r\n```\r\n--------- beginning of system\r\n12-19 17:59:10.600  1173  2615 I ActivityManager: START u0 {flg=0x10000000 cmp=Xamarin.Forms_Performance_Integration/xamarin.forms.performance.integration.MainActivity} from uid 2000\r\n--------- beginning of main\r\n12-19 17:59:10.632   799   799 D android.hardware.power@1.2-service.wahoo-libperfmgr: LAUNCH ON\r\n12-19 17:59:10.656 18985 18985 I AppLifecycleTracker: onActivityPaused: \r\n```\r\n\r\nThe test itself seems to run OK as we collect the performance data:\r\n```\r\nlast-Release,JNI.init-Release,init-Release,OnCreateBegin-Release,OnCreateEnd-Release,OnStartBegin-Release,OnStartEnd-Release,OnResumeBegin-Release,OnResumeEnd-Release,last-Release-Bundle,JNI.init-Release-Bundle,init-Release-Bundle,OnCreateBegin-Release-Bundle,OnCreateEnd-Release-Bundle,OnStartBegin-Release-Bundle,OnStartEnd-Release-Bundle,OnResumeBegin-Release-Bundle,OnResumeEnd-Release-Bundle\r\n1069,240,240,312,698,700,700,701,701,921,185,185,234,572,576,576,576,577\r\n```\r\n\r\nIt is good news that I am able to reproduce it locally."},{"Id":"8779631922","Type":"PullRequestEvent","CreatedAt":"2018-12-19T15:17:41","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2551","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] handle missing AndroidSdkPath better\" (#2551) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/2288139\r\n\r\nA build on VSTS hit the error:\r\n\r\n    Error MSB4018: The \"ResolveAndroidTooling\" task failed unexpectedly. [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\dlab14\\android-toolchain\\sdk\\platforms'. [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at System.IO.FileSystemEnumerableIterator`1.CommonInit() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at System.IO.FileSystemEnumerableIterator`1..ctor(String path, String originalUserPath, String searchPattern, SearchOption searchOption, SearchResultHandler`1 resultHandler, Boolean checkHost) [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at System.IO.Directory.EnumerateDirectories(String path) [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Xamarin.Android.Tasks.ResolveAndroidTooling.GetMaxInstalledApiLevel() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Xamarin.Android.Tasks.ResolveAndroidTooling.ValidateApiLevels() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Xamarin.Android.Tasks.ResolveAndroidTooling.Execute() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n    Error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [E:\\A\\_work\\165\\s\\tests\\TestRunner.Core\\TestRunner.Core.csproj]\r\n\r\nReviewing the stack trace, it looks like we are calling\r\n`Directory.EnumerateDirectories` without checking `Directory.Exists`.\r\n\r\nWith this change, we should fail with a proper error code.\r\n\r\n### So what caused this? ###\r\n\r\nIt appears that when you run this on a clean Windows machine (no\r\nAndroid SDK):\r\n\r\n    msbuild Xamarin.Android.sln /t:Prepare\r\n\r\nThis call fails in `PrepareWindows.targets`:\r\n\r\n    <Exec Command=\"$(_NuGet) restore Xamarin.Android-Tests.sln\" WorkingDirectory=\"$(_TopDir)\" />\r\n\r\nNuGet is using the system's Xamarin.Android MSBuild targets, and they\r\nare failing on this error.\r\n\r\nWhat we should do, is run this NuGet restore after\r\n`android-toolchain.csproj` has been built. I am not sure how this was\r\nworking prior to VS 15.9."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8782943379","Type":"IssuesEvent","CreatedAt":"2018-12-20T02:54:03","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4826","RelatedDescription":"Opened issue \"[Enhancement] Make CollectionView ItemTemplate work with DataTemplateSelector\" (#4826) at xamarin/Xamarin.Forms","RelatedBody":"Currently, setting the `ItemTemplate` property to a `DataTemplateSelector` throws an exception because `LoadTemplate` in `ElementTemplate` is null. We should be able to provide different data templates based on item state when using `CollectionView`.\r\n"},{"Id":"8782783792","Type":"IssuesEvent","CreatedAt":"2018-12-20T02:01:35","Actor":"mfeingol","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4825","RelatedDescription":"Opened issue \"Latest Android support binaries causes \" (#4825) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nJust updated to latest Android support binaries, seeing this error building my Xamarin Forms app:\r\n\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2610,3): error MSB6006: \"java.exe\" exited with code 2.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Install latest Android support binaries\r\n2. Build\r\n3. Observe Java.exe error\r\n\r\n### Expected Behavior\r\n\r\nSuccessful builds, like before the update.\r\n\r\n### Actual Behavior\r\n\r\nBuild errors.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 28.0.0\r\n- Last known good version: 27.0.2.1\r\n- IDE: VS 15.9.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 9.0\r\n- Android Support Library Version: 28.0.0\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8782603012","Type":"IssuesEvent","CreatedAt":"2018-12-20T01:03:41","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2386","RelatedDescription":"Closed issue \"[UWP] ListView ItemAppearing event contains unexpectedly null Item\" (#2386) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nUWP' `CellControl` can incorrectly create a new `Cell` with a `null` `BindingContext` and send `null` via `SendAppearing` event.\r\n\r\nConsequently, B45125 crashes when run on UWP because it does not check for null in the `ItemAppearing` event. \r\n\r\nTest case can be fixed, but since this is not consistent with behavior on other platforms, we should investigate further.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run B45125 in Control Gallery\r\n\r\n### Expected Behavior\r\n\r\nTest runs\r\n\r\n### Actual Behavior\r\n\r\nTest crashes\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0,2.5.1\r\n- Last known good version: N/A\r\n"},{"Id":"8782576407","Type":"IssuesEvent","CreatedAt":"2018-12-20T00:55:07","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2382","RelatedDescription":"Closed issue \"[UWP] WebView does not show FilePicker\" (#2382) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWebView with HTML content containing a file picker input does not render the input.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run B44500 in Control Gallery\r\n\r\n### Expected Behavior\r\n\r\nFile picker is displayed\r\n\r\n### Actual Behavior\r\n\r\nNothing is displayed\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0,251\r\n- Last known good version:\r\n"},{"Id":"8781893565","Type":"IssuesEvent","CreatedAt":"2018-12-19T21:54:13","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4790","RelatedDescription":"Reopened issue \"[Android] No method with name='setClipBounds' crash in ItemsViewRenderer\" (#4790) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nCrash `Java.Lang.LinkageError: no method with name='setClipBounds'` on Android 4.1/4.2.\r\n`ClipBounds` property on the `RecyclerView` is set _without_ an API check for >= API 18.\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/f2948f1f0cf9829fe6ddafc60df2ac06a6a59ed0/Xamarin.Forms.Platform.Android/CollectionView/ItemsViewRenderer.cs#L48\r\n\r\n**ClipBounds** property was added in API Level 18.\r\nhttps://developer.xamarin.com/api/property/Android.Views.View.ClipBounds/\r\n\r\nThis change was introduced with the new `CollectionView`.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Use a `Xamarin.Forms.CollectionView` control.\r\n\r\n### Expected Behavior\r\nApp should not crash.\r\n\r\n### Actual Behavior\r\nApp crash on an Android 4.1/4.2 device.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 4.0.0-pre1\r\n- Last known good version: N/A\r\n- Affected Devices: Android 4.1/4.2\r\n\r\n### Suggestion\r\n- _12/18 MR: I have tested ignoring this with an API check and it seems to correctly layout OK._\r\n- Can we use the `ViewCompat` method available [here](https://android.googlesource.com/platform/frameworks/support/+/e5f75a851fbee9fbf1de31c738577fd86861a101/compat/java/android/support/v4/view/ViewCompat.java#1547) in Android.Support.V4.View? ie.\r\n`ViewCompat.SetClipBounds(this, new Rect(0, 0, Width, Height));`"},{"Id":"8781876998","Type":"IssuesEvent","CreatedAt":"2018-12-19T21:50:49","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4821","RelatedDescription":"Closed issue \"[android]OnResume lifecycle event is not called when android app foregrounded\" (#4821) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI am developing a Xamarin Forms app targeting both android and iOS. It is working as expected in iOS and most of the android phones. But when I tested in my Moto G android phone(Android 8.0.0, with 6GB of RAM), OnInitialized event is triggered instead OnResume event when the application is foregrounded. So every time my application gets initialized when foregrounded which is very strange and annoying\r\n\r\n### Steps to Reproduce\r\n\r\n1. install the xamarin forms application in Moto G(Android 8.0.0)\r\n2. goto wifi application and change the wifi(it is one of the cases for my application) Or just press home button to get the application backgrounded\r\n3. bring the application to foreground, OnInitialize event is triggered instead of OnResume event\r\n\r\n### Expected Behavior\r\nOnResume event should be called\r\n### Actual Behavior\r\nOnInitialized event is called\r\n### Basic Information\r\n\r\n- Version with issue:\r\nXamarin Forms : 3.4.0.1008975\r\nAndroid 8.0.0\r\nPhone:Moto G\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.0.0\r\n  \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\nMotoG\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8781552677","Type":"IssuesEvent","CreatedAt":"2018-12-19T20:51:40","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5307","RelatedDescription":"Opened issue \"Storyboard resources in XM\\XI libraries are not correctly copied into final app bundle\" (#5307) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Open attached project\r\n2. Build mac or ios app\r\n3. Look inside final bundle\r\n\r\nor you can reproduce by creating a XM\\XI app and a library, add a storyboard to the library, add a reference and build\r\n\r\n### Expected Behavior\r\n\r\nMacLibStoryboard.storyboardc in final bundle with all bits\r\n\r\n### Actual Behavior\r\n\r\nMacLibStoryboard.storyboardc in final bundle with no contents except plist\r\n\r\n### Environment\r\n\r\nhttps://gist.github.com/chamons/ee5d282b5172f3f1be4f6b40a443581f\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/chamons/a3b0b1aabe0b911e3377a80b5718a072\r\n\r\n### Example Project (If Possible)\r\n\r\n[LibStoryboards.zip](https://github.com/xamarin/xamarin-macios/files/2696442/LibStoryboards.zip)\r\n\r\ncc @abock "},{"Id":"8781321658","Type":"PullRequestEvent","CreatedAt":"2018-12-19T20:05:36","Actor":"emaf","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5306","RelatedDescription":"Opened pull request \"[msbuild] Fixes incremental build issues with frameworks from VS\" (#5306) at xamarin/xamarin-macios","RelatedBody":"Backport https://github.com/xamarin/xamarin-macios/pull/5249\r\n\r\nPartial fix for bug 662636 - *.dylib libraries are signed during full rebuild, but not the second time\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_queries/edit/662636\r\n\r\nThere were two problems:\r\n- VS was creating/touching each bundle resource found even if the resource wasn't unpacked on the Mac because the file was up to date. This caused the files on Windows to be changed on each build.\r\n- VS was not updating the framework files in the app bundle on incremental builds because the MTouch didn't have an output property informing the frameworks that were copied by mtouch into the app bundle. This caused MSBuild to skip the CodesignFramework target because the frameworks remained unchanged on Windows."},{"Id":"8780738283","Type":"IssuesEvent","CreatedAt":"2018-12-19T18:14:13","Actor":"taori","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5305","RelatedDescription":"Opened issue \"ObjectDisposedException during build \" (#5305) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n1. start debugging (this issue is related to #5103)\r\n\r\n### Expected Behavior\r\n1. debugger attaches\r\n\r\n### Actual Behavior\r\n1. build fails\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.9.4\r\nVisualStudio.15.Release/15.9.4+28307.222\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstallierte Version: Enterprise\r\n\r\nAllgemeine Azure-Tools   1.10\r\nBietet allgemeine Dienste für die Verwendung durch Azure Mobile Services und Microsoft Azure-Tools.\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions und Webauftragstools   15.9.02046.0\r\nAzure Functions und Webauftragstools\r\n\r\nC#-Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC#-Komponenten, die in der IDE verwendet werden. Je nach Projekttyp und Einstellungen kann eine andere Compilerversion verwendet werden.\r\n\r\nErweiterung zum Debuggen von Momentaufnahmen   1.0\r\nDetaillierte Informationen zur Visual Studio-Erweiterung zum Debuggen von Momentaufnahmen\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript-Sprachdienst   2.0\r\nJavaScript-Sprachdienst\r\n\r\nJetBrains ReSharper Ultimate 2018.2.3   Build 182.0.20180912.70621\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMicrosoft Azure-Tools   2.9\r\nMicrosoft Azure-Tools für Microsoft Visual Studio 2017 – v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools für Visual Studio   0.4\r\nDie Konfiguration von Azure DevOps-Pipelines von der Visual Studio-IDE aus wird vereinfacht.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio-Tools für Container   1.1\r\nJetzt können Sie Ihre ASP.NET Core-Anwendung in der Zielumgebung entwickeln, ausführen und überprüfen. Drücken Sie F5, um die Anwendung direkt in einem Container mit Debugfunktionen auszuführen, oder STRG+F5 zum Bearbeiten und Aktualisieren Ihrer Anwendung, ohne den Container erneut erstellen zu müssen.\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet-Paket-Manager   4.6.0\r\nNuGet-Paket-Manager in Visual Studio. Weitere Informationen zu NuGet finden Sie unter \"http://docs.nuget.org/\".\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage-Erweiterung   1.0\r\nDetaillierte Informationen zur ResourcePackage-Erweiterung von Visual Studio\r\n\r\nResourcePackage-Erweiterung   1.0\r\nDetaillierte Informationen zur ResourcePackage-Erweiterung von Visual Studio\r\n\r\nResXManager   1.30.1564.0\r\nManage localization of all ResX-Based resources in one place. Shows all resources of a solution and let's you edit the strings and their localizations in a well-arranged data grid.\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript-Tools   15.9.20918.2001\r\nTypeScript-Tools für Microsoft Visual Studio\r\n\r\nVisual Basic-Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic-Komponenten, die in der IDE verwendet werden. Je nach Projekttyp und Einstellungen kann eine andere Version des Compilers verwendet werden.\r\n\r\nVisual F# Tools 10.2 für F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 für F# 4.5\r\n\r\nVisual Studio-Tools für Container   1.0\r\nVisual Studio-Tools für Container\r\n\r\nVisual Studio Code-Debugadapter-Hostpaket   1.0\r\nInteropebene zum Hosten der Visual Studio Code-Adapter in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nVSColorOutput   2.6.3\r\nColor output for build and debug windows - http://mike-ward.net/vscoloroutput\r\n\r\nXamarin   4.12.3.77 (d15-9@e3f40b477)\r\nVisual Studio-Erweiterung, um Entwicklung für Xamarin.iOS und Xamarin.Android zu ermöglichen.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.4.2 (HEAD/8255f42fc)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### StackTrace\r\n4>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(408,3): error MSB4018: Unerwarteter Fehler bei der RemoveDir-Aufgabe.\r\n\r\n```\r\nUnerwarteter Fehler bei der RemoveDir-Aufgabe.\r\nSystem.AggregateException: Mindestens ein Fehler ist aufgetreten. ---> System.ObjectDisposedException: Auf das verworfene Objekt kann nicht zugegriffen werden.\r\nObjektname: \"System.Net.Sockets.Socket\".\r\n   bei System.Net.Sockets.Socket.SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, Int32 optionValue)\r\n   bei System.Net.Sockets.Socket.set_ReceiveTimeout(Int32 value)\r\n   bei Renci.SshNet.Abstractions.SocketAbstraction.Read(Socket socket, Byte[] buffer, Int32 offset, Int32 size, TimeSpan timeout)\r\n   bei Renci.SshNet.Session.SocketReadLine(TimeSpan timeout)\r\n   bei Renci.SshNet.Session.Connect()\r\n   bei Renci.SshNet.BaseClient.Connect()\r\n   bei Xamarin.Messaging.Ssh.SshCommandRunner.<ValidateConnectionAsync>b__8_0() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommandRunner.cs:Zeile 121.\r\n   bei System.Threading.Tasks.Task.InnerInvoke()\r\n   bei System.Threading.Tasks.Task.Execute()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.SshCommandRunner.<ValidateConnectionAsync>d__8.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommandRunner.cs:Zeile 121.\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.SshCommandRunner.<ExecuteCommandAsync>d__5.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommandRunner.cs:Zeile 81.\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.SshCommands.<RunCommandAsync>d__9.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommands.cs:Zeile 98.\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.SshCommands.<DeleteDirectoryAsync>d__21.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommands.cs:Zeile 220.\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.ISshServiceExtensions.<DeleteDirectoryAsync>d__6.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\Extensions\\ISshServiceExtensions.cs:Zeile 105.\r\n   --- Ende der internen Ausnahmestapelüberwachung ---\r\n   bei System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   bei System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   bei Microsoft.Build.Tasks.RemoveDir.Execute() in E:\\A\\_work\\293\\s\\src\\MSBuild\\Xamarin.MacDev.Tasks\\MsBuildTasks\\RemoveDir.cs:Zeile 20.\r\n   bei Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   bei Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n---> (Interne Ausnahme #0) System.ObjectDisposedException: Auf das verworfene Objekt kann nicht zugegriffen werden.\r\nObjektname: \"System.Net.Sockets.Socket\".\r\n   bei System.Net.Sockets.Socket.SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, Int32 optionValue)\r\n   bei System.Net.Sockets.Socket.set_ReceiveTimeout(Int32 value)\r\n   bei Renci.SshNet.Abstractions.SocketAbstraction.Read(Socket socket, Byte[] buffer, Int32 offset, Int32 size, TimeSpan timeout)\r\n   bei Renci.SshNet.Session.SocketReadLine(TimeSpan timeout)\r\n   bei Renci.SshNet.Session.Connect()\r\n   bei Renci.SshNet.BaseClient.Connect()\r\n   bei Xamarin.Messaging.Ssh.SshCommandRunner.<ValidateConnectionAsync>b__8_0() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommandRunner.cs:Zeile 121.\r\n   bei System.Threading.Tasks.Task.InnerInvoke()\r\n   bei System.Threading.Tasks.Task.Execute()\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.SshCommandRunner.<ValidateConnectionAsync>d__8.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommandRunner.cs:Zeile 121.\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.SshCommandRunner.<ExecuteCommandAsync>d__5.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommandRunner.cs:Zeile 81.\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.SshCommands.<RunCommandAsync>d__9.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommands.cs:Zeile 98.\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.SshCommands.<DeleteDirectoryAsync>d__21.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\SshCommands.cs:Zeile 220.\r\n--- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   bei Xamarin.Messaging.Ssh.ISshServiceExtensions.<DeleteDirectoryAsync>d__6.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Ssh\\Extensions\\ISshServiceExtensions.cs:Zeile 105.<---\tSTM.iOS\t\t\t\r\n\r\n```"},{"Id":"8780101358","Type":"PullRequestEvent","CreatedAt":"2018-12-19T16:25:25","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5304","RelatedDescription":"Opened pull request \"[jenkins] Improve rendering of failures on older macOS bots.\" (#5304) at xamarin/xamarin-macios","RelatedBody":"Improve rendering of failures on older macOS bots by showing which bot things\nfailed on in the commit comment."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":152,"FavoriteCount":68,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":141,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":180,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":38,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":34,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":200,"FavoriteCount":112,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":56,"RawContent":null}]}},"RunOn":"2018-12-20T05:31:18.0532723Z","RunDurationInMilliseconds":4266}