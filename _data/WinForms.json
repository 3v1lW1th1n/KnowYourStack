{"Data":{"GitHub":{"Issues":[{"Id":"442986188","IsPullRequest":true,"CreatedAt":"2019-05-11T12:04:43","Actor":"dotnet-maestro[bot]","Number":"970","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 8:01 PM\r\n- **Commit**: 810920cf8a5fc183585304193f8b4e4e189497e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19260.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19260.2\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/970","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#970)"},{"Id":"442956546","IsPullRequest":true,"CreatedAt":"2019-05-11T05:35:31","Actor":"DustinCampbell","Number":"969","RawContent":null,"Title":"Fix bug in CodeDomSerializerBase that only occurs in Release config","State":"open","Body":"In DEBUG, `CodeDomSerializerBase.TraceScope(...)` initializes the field `traceScope` with a new stack and pushes a string to it. Later , in `TracingScope.Dispose()`, there is call to `traceScope.Pop()` if `traceScope` isn't null. However, the line to initialize `traceScope` was left outside of the `#if DEBUG` block while the call to `traceScope.Push(...)` was left inside. So, `TracingScope.Dispose()` attempts to pop the stack that has nothing in it.\r\n\r\nIt looks like this was just a simple misport. Moving the line back under DEBUG introduces an uninitialized field warning, and I suspect that's why it was moved out of DEBUG in the first place. However, setting the field to null in its initializer is the proper fix for that warning.","Url":"https://github.com/dotnet/winforms/pull/969","RelatedDescription":"Open PR \"Fix bug in CodeDomSerializerBase that only occurs in Release config\" (#969)"},{"Id":"442422925","IsPullRequest":true,"CreatedAt":"2019-05-10T22:17:21","Actor":"zsd4yr","Number":"953","RawContent":null,"Title":"remove release only at end section","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/953","RelatedDescription":"Closed or merged PR \"remove release only at end section\" (#953)"},{"Id":"442910912","IsPullRequest":true,"CreatedAt":"2019-05-10T22:05:50","Actor":"dotnet-maestro[bot]","Number":"968","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190510.08\r\n- **Date Produced**: 5/10/2019 10:05 PM\r\n- **Commit**: 1f262eb632cb82807e7a992a242bf1fabc96385f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27710-08\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190510.09\r\n- **Date Produced**: 5/10/2019 11:45 PM\r\n- **Commit**: e483c3c7fef1ae8d655d2ef8c1fadbed8ed4e01e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27710-09\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19260.3 (parent: Microsoft.NETCore.App)\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190510.11\r\n- **Date Produced**: 5/11/2019 3:42 AM\r\n- **Commit**: 6c4781583a956800f6c19c80c75c7c1cc43c64a2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27710-11\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19260.4 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19260.4 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19260.4 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19260.4 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19260.4 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19260.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19260.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19260.4 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19260.4 (parent: Microsoft.NETCore.App)\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190510.13\r\n- **Date Produced**: 5/11/2019 5:36 AM\r\n- **Commit**: bf13d6b636cbebf08762687848c8a7215e6288a9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27710-13\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190511.01\r\n- **Date Produced**: 5/11/2019 2:27 PM\r\n- **Commit**: f7d813cf05b614bbf2f210011f4a119109bc3271\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27711-01\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190511.02\r\n- **Date Produced**: 5/11/2019 3:38 PM\r\n- **Commit**: 19390ee14c2824c39db393aff75a95788ececebf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27711-02\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190511.03\r\n- **Date Produced**: 5/11/2019 4:07 PM\r\n- **Commit**: 19390ee14c2824c39db393aff75a95788ececebf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27711-03\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190511.04\r\n- **Date Produced**: 5/12/2019 4:12 AM\r\n- **Commit**: 19390ee14c2824c39db393aff75a95788ececebf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27711-04\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19260.5 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/968","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#968)"},{"Id":"442582938","IsPullRequest":false,"CreatedAt":"2019-05-10T21:10:33","Actor":"hughbe","Number":"959","RawContent":null,"Title":"DesignerActionService.OnVerbStatusChanged with null ISelectionService throws NRE","State":"closed","Body":"Should return-early/nop","Url":"https://github.com/dotnet/winforms/issues/959","RelatedDescription":"Closed issue \"DesignerActionService.OnVerbStatusChanged with null ISelectionService throws NRE\" (#959)"},{"Id":"442582324","IsPullRequest":false,"CreatedAt":"2019-05-10T21:10:33","Actor":"hughbe","Number":"958","RawContent":null,"Title":"DesignerActionService.Add(null) throws NRE in `GetComponentActions`","State":"closed","Body":"Throws NRE but should add but skip in `GetComponentActions`\r\n```cs\r\npublic static IEnumerable<object[]> Add_ComponentDesignerActionList_TestData()\r\n{\r\n    var actionList = new CustomDesignerActionList(null);\r\n    yield return new object[] { null, new DesignerActionListCollection() };\r\n    yield return new object[] { new DesignerActionList(null), new DesignerActionListCollection() };\r\n    yield return new object[] { new NullCustomDesignerActionList(null), new DesignerActionListCollection() };\r\n    yield return new object[] { actionList, new DesignerActionListCollection { actionList } };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(Add_ComponentDesignerActionList_TestData))]\r\npublic void Add_ComponentDesignerActionList_Success(DesignerActionList actionList, DesignerActionListCollection expected)\r\n{\r\n    var service = new SubDesignerActionService(null);\r\n    var component = new Component();\r\n    var component2 = new Component();\r\n    service.Add(component, actionList);\r\n    Assert.True(service.Contains(component));\r\n    Assert.Equal(expected, service.GetComponentActions(component));\r\n    Assert.Equal(expected, service.GetComponentActions(component, ComponentActionsType.All));\r\n    Assert.Equal(expected, service.GetComponentActions(component, ComponentActionsType.Service));\r\n    Assert.Empty(service.GetComponentActions(component, ComponentActionsType.Component));\r\n\r\n    var actionListBuffer1 = new DesignerActionListCollection();\r\n    service.GetComponentDesignerActions(component, actionListBuffer1);\r\n    Assert.Empty(actionListBuffer1);\r\n\r\n    var actionListBuffer2 = new DesignerActionListCollection();\r\n    service.GetComponentServiceActions(component, actionListBuffer2);\r\n    Assert.Equal(expected, actionListBuffer2);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/958","RelatedDescription":"Closed issue \"DesignerActionService.Add(null) throws NRE in `GetComponentActions`\" (#958)"},{"Id":"442581858","IsPullRequest":false,"CreatedAt":"2019-05-10T21:10:33","Actor":"hughbe","Number":"957","RawContent":null,"Title":"DesignerActionCollection.GetComponentDesignerActions with null verb in verbs list throws NRE","State":"closed","Body":"Should skip and not throw\r\n\r\n```cs\r\n[Fact]\r\npublic void GetComponentDesignerActions_InvokeVerbs_ReturnsExpected()\r\n{\r\nvar verb = new DesignerVerb(null, null);\r\nvar verbs = new DesignerVerbCollection { null, new DesignerVerb(null, null) { Enabled = false }, new DesignerVerb(null, null) { Visible = false }, verb };\r\nvar verbsMockDesignerCommandSet = new Mock<DesignerCommandSet>(MockBehavior.Strict);\r\nverbsMockDesignerCommandSet\r\n    .Setup(c => c.GetCommands(\"ActionLists\"))\r\n    .Returns(new DesignerActionListCollection());\r\nverbsMockDesignerCommandSet\r\n    .Setup(c => c.GetCommands(\"Verbs\"))\r\n    .Returns(verbs);\r\nvar mockSite = new Mock<ISite>(MockBehavior.Strict);\r\nmockSite\r\n    .As<IServiceContainer>()\r\n    .Setup(s => s.GetService(typeof(DesignerCommandSet)))\r\n    .Returns(verbsMockDesignerCommandSet.Object);\r\nvar service = new SubDesignerActionService(null);\r\nvar component = new Component();\r\ncomponent.Site = mockSite.Object;\r\n\r\nvar actionListBuffer = new DesignerActionListCollection();\r\nservice.GetComponentDesignerActions(component, actionListBuffer);\r\nDesignerActionList actionList = Assert.IsAssignableFrom<DesignerActionList>(Assert.Single(actionListBuffer));\r\nAssert.False(actionList.AutoShow);\r\nAssert.Null(actionList.Component);\r\n\r\nDesignerActionItemCollection verbActionActionItems = actionList.GetSortedActionItems();\r\nDesignerActionMethodItem actionItem = Assert.IsAssignableFrom<DesignerActionMethodItem>(Assert.Single(verbActionActionItems));\r\nAssert.Equal(\"Verbs\", actionItem.Category);\r\nAssert.False(actionItem.AllowAssociate);\r\nAssert.Null(actionItem.Description);\r\nAssert.False(actionItem.IncludeAsDesignerVerb);\r\nAssert.Null(actionItem.MemberName);\r\nAssert.Empty(actionItem.DisplayName);\r\nAssert.Empty(actionItem.Properties);\r\nAssert.Same(actionItem.Properties, actionItem.Properties);\r\nAssert.IsType<HybridDictionary>(actionItem.Properties);\r\nAssert.Null(actionItem.RelatedComponent);\r\nAssert.True(actionItem.ShowInSourceView);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/957","RelatedDescription":"Closed issue \"DesignerActionCollection.GetComponentDesignerActions with null verb in verbs list throws NRE\" (#957)"},{"Id":"442581235","IsPullRequest":true,"CreatedAt":"2019-05-10T21:10:33","Actor":"hughbe","Number":"956","RawContent":null,"Title":"Add DesignerActionService tests and fix bugs/remove dead code","State":"closed","Body":"Fixes #959\r\nFixes #958 \r\nFixes #957\r\n\r\nrelated to #817","Url":"https://github.com/dotnet/winforms/pull/956","RelatedDescription":"Closed or merged PR \"Add DesignerActionService tests and fix bugs/remove dead code\" (#956)"},{"Id":"442585576","IsPullRequest":true,"CreatedAt":"2019-05-10T21:08:57","Actor":"hughbe","Number":"961","RawContent":null,"Title":"Add EventsTab tests, cleanup and fix bugs","State":"closed","Body":"Fixes #960\r\nFixes #899\r\n\r\ncontributes to #817","Url":"https://github.com/dotnet/winforms/pull/961","RelatedDescription":"Closed or merged PR \"Add EventsTab tests, cleanup and fix bugs\" (#961)"},{"Id":"442585073","IsPullRequest":false,"CreatedAt":"2019-05-10T21:08:57","Actor":"hughbe","Number":"960","RawContent":null,"Title":"EventsTab.OnActiveDesignerChanged with null event args throws NRE","State":"closed","Body":"Should set `_currentHost` to null","Url":"https://github.com/dotnet/winforms/issues/960","RelatedDescription":"Closed issue \"EventsTab.OnActiveDesignerChanged with null event args throws NRE\" (#960)"},{"Id":"442811811","IsPullRequest":true,"CreatedAt":"2019-05-10T21:08:02","Actor":"dotnet-maestro[bot]","Number":"965","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190510.04\r\n- **Date Produced**: 5/10/2019 5:02 PM\r\n- **Commit**: 9446ab5a3bc60b41e497a3d3bd4a23f03805ccf1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27710-04\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190510.05\r\n- **Date Produced**: 5/10/2019 6:21 PM\r\n- **Commit**: b278b9054ada2ab24c4896f0f4ddc4770a5a9748\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27710-05\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190510.06\r\n- **Date Produced**: 5/10/2019 7:47 PM\r\n- **Commit**: 1dfb3faf2fe573b9a0c3e5a0b7f83a2992093c6d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27710-06\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/965","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#965)"},{"Id":"442012670","IsPullRequest":true,"CreatedAt":"2019-05-10T21:06:51","Actor":"hughbe","Number":"950","RawContent":null,"Title":" Allocate DesignSurfaceServiceContainer._fixedServices in constructor and add tests","State":"closed","Body":"In the constructor of this class, we immediately call `AddFixedService(...)`\r\n\r\n```cs\r\ninternal DesignSurfaceServiceContainer(IServiceProvider parentProvider) : base(parentProvider)\r\n{\r\n    AddFixedService(typeof(DesignSurfaceServiceContainer), this);\r\n}\r\n```\r\n\r\nThe implementation of `AddFixedService` is:\r\n```cs\r\ninternal void AddFixedService(Type serviceType, object serviceInstance)\r\n{\r\n    AddService(serviceType, serviceInstance);\r\n    if (_fixedServices == null)\r\n    {\r\n        _fixedServices = new Hashtable();\r\n    }\r\n    _fixedServices[serviceType] = serviceType;\r\n}\r\n```\r\n\r\nSince we call `AddFixedService` in the constructor, `_fixedServices` will be initialised immediately in the constructor. All future calls to `AddFixedService` therefore perform pointless null checking of `_fixedServices == null`.\r\n\r\n`_fixedServices` can be thus allocated in the constructor and made readonly. Therefore, we can remove all the instances where we check if it is null.","Url":"https://github.com/dotnet/winforms/pull/950","RelatedDescription":"Closed or merged PR \" Allocate DesignSurfaceServiceContainer._fixedServices in constructor and add tests\" (#950)"},{"Id":"442468497","IsPullRequest":true,"CreatedAt":"2019-05-10T20:39:30","Actor":"JuditRose","Number":"954","RawContent":null,"Title":"Unify line endings","State":"closed","Body":" - update editor config\r\n - update gitconfig\r\n - unify line endings to crlf\r\n - remove trailing spaces\r\n\r\n705 files changed, 17,471 insertions(+), 17,469 deletions(-) => 3 lines of config changes added, one empty line removed from the end of file: src/System.Windows.Forms/src/System/Windows/Forms/IMessageModifyAndFilter.cs, the rest of it is line endings and white spaces\r\n\r\nUsed tool: [VS Line Endings Unifier](https://marketplace.visualstudio.com/items?itemName=JakubBielawa.LineEndingsUnifier) \r\n\r\nFixes #955 ","Url":"https://github.com/dotnet/winforms/pull/954","RelatedDescription":"Closed or merged PR \"Unify line endings\" (#954)"},{"Id":"442856614","IsPullRequest":false,"CreatedAt":"2019-05-10T19:07:51","Actor":"zsd4yr","Number":"967","RawContent":null,"Title":"Add Tests related to Design types in System.Windows.Forms.Design.Editors","State":"open","Body":"We have a gap in our testing in System.Windows.Forms.Design.Editors/src/System/Windows/Forms/Design\r\nand System.Windows.Forms.Design.Editors/src/System/Drawing/Design\r\n","Url":"https://github.com/dotnet/winforms/issues/967","RelatedDescription":"Open issue \"Add Tests related to Design types in System.Windows.Forms.Design.Editors\" (#967)"},{"Id":"442856070","IsPullRequest":false,"CreatedAt":"2019-05-10T19:06:18","Actor":"zsd4yr","Number":"966","RawContent":null,"Title":"Add Tests related to Code Dom Serializers","State":"open","Body":"We have a testing gap for types in System.Windows.Forms.Design/src/System/ComponentModel/Design/Serialization\r\n\r\nWe would like to add tests in this area.\r\n\r\n/cc @DustinCampbell ","Url":"https://github.com/dotnet/winforms/issues/966","RelatedDescription":"Open issue \"Add Tests related to Code Dom Serializers\" (#966)"},{"Id":"442201627","IsPullRequest":true,"CreatedAt":"2019-05-10T17:00:15","Actor":"dotnet-maestro[bot]","Number":"951","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190508.5\r\n- **Date Produced**: 5/8/2019 10:17 PM\r\n- **Commit**: 9005cee9510d23535c09bd9b6be7c426e526c067\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19258.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19258.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190509.9\r\n- **Date Produced**: 5/10/2019 12:31 AM\r\n- **Commit**: 155080ecb738e189db75f8f2461ebad75d955aa7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19259.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19259.9\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/951","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#951)"},{"Id":"442810694","IsPullRequest":false,"CreatedAt":"2019-05-10T16:59:50","Actor":"hughbe","Number":"964","RawContent":null,"Title":"DesignerHost.Unload throws NullReferenceException if disposed","State":"open","Body":"Should be a nop\r\n\r\n```cs\r\n[Fact]\r\npublic void BeginLoad_DisposeInBeginLoadThrowsException_DoesCallFlush()\r\n{\r\n    var surface = new SubDesignSurface();\r\n    int loadingCallCount = 0;\r\n    surface.Loading += (sender, e) =>\r\n    {\r\n        Assert.Same(surface, sender);\r\n        Assert.Same(EventArgs.Empty, e);\r\n        loadingCallCount++;\r\n    };\r\n    int loadedCallCount = 0;\r\n    surface.Loaded += (sender, e) => loadedCallCount++;\r\n    int unloadingCallCount = 0;\r\n    surface.Unloading += (sender, e) => unloadingCallCount++;\r\n    int unloadedCallCount = 0;\r\n    surface.Unloaded += (sender, e) => unloadedCallCount++;\r\n    int flushedCallCount = 0;\r\n    surface.Flushed += (sender, e) => flushedCallCount++;\r\n\r\n    var mockLoader = new Mock<DesignerLoader>(MockBehavior.Strict);\r\n    IDesignerLoaderHost2 host = surface.Host;\r\n    mockLoader\r\n        .Setup(l => l.BeginLoad(host))\r\n        .Callback(() =>\r\n        {\r\n            // Catch the InvalidOperationException thrown.\r\n            try\r\n            {\r\n                surface.Dispose();\r\n            }\r\n            catch\r\n            {\r\n            }\r\n\r\n            throw new Exception();\r\n        });\r\n    surface.BeginLoad(mockLoader.Object);\r\n    Assert.Equal(1, loadingCallCount);\r\n    Assert.Equal(0, loadedCallCount);\r\n    Assert.Equal(0, unloadingCallCount);\r\n    Assert.Equal(0, unloadedCallCount);\r\n    Assert.Equal(0, flushedCallCount);\r\n    mockLoader.Verify(l => l.BeginLoad(host), Times.Once());\r\n}\r\n```\r\n\r\n> [xUnit.net 00:00:02.10]     System.ComponentModel.Design.Tests.DesignSurfaceTests.BeginLoad_DisposeInBeginLoadThrowsException_DoesCallFlush [FAIL]\r\nFailed   System.ComponentModel.Design.Tests.DesignSurfaceTests.BeginLoad_DisposeInBeginLoadThrowsException_DoesCallFlush\r\nError Message:\r\n System.NullReferenceException : Object reference not set to an instance of an object.\r\nStack Trace:\r\n   at System.ComponentModel.Design.DesignerHost.Unload() in /Users/hugh/Documents/GitHub/winforms/src/System.Windows.Forms.Design/src/System/ComponentModel/Design/DesignerHost.cs:line 697\r\n   at System.ComponentModel.Design.DesignerHost.System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad(String rootClassName, Boolean successful, ICollection errorCollection) in /Users/hugh/Documents/GitHub/winforms/src/System.Windows.Forms.Design/src/System/ComponentModel/Design/DesignerHost.cs:line 1215\r\n   at System.ComponentModel.Design.DesignerHost.BeginLoad(DesignerLoader loader) in /Users/hugh/Documents/GitHub/winforms/src/System.Windows.Forms.Design/src/System/ComponentModel/Design/DesignerHost.cs:line 347\r\n   at System.ComponentModel.Design.DesignSurface.BeginLoad(DesignerLoader loader) in /Users/hugh/Documents/GitHub/winforms/src/System.Windows.Forms.Design/src/System/ComponentModel/Design/DesignSurface.cs:line 258\r\n   at System.ComponentModel.Design.Tests.DesignSurfaceTests.BeginLoad_DisposeInBeginLoadThrowsException_DoesCallFlush() in /Users/hugh/Documents/GitHub/winforms/src/System.Windows.Forms.Design/tests/UnitTests/System/ComponentModel/Design/DesignSurfaceTests.cs:line 480\r\n","Url":"https://github.com/dotnet/winforms/issues/964","RelatedDescription":"Open issue \"DesignerHost.Unload throws NullReferenceException if disposed\" (#964)"},{"Id":"442810397","IsPullRequest":false,"CreatedAt":"2019-05-10T16:58:59","Actor":"hughbe","Number":"963","RawContent":null,"Title":"Calling DesignerHost.OnActiveDesignerChanged with null event args throws NRE","State":"open","Body":"Should be a nop\r\n\r\n```cs\r\npublic static IEnumerable<object[]> ChangeActiveDesigner_TestData()\r\n{\r\n    IDesignerLoaderHost2 otherHost = new SubDesignSurface().Host;\r\n\r\n    yield return new object[] { null, 0, 0, 0 };\r\n\r\n    yield return new object[] { new ActiveDesignerEventArgs(s_placeholderHost, s_placeholderHost), 0, 1, 1 };\r\n    yield return new object[] { new ActiveDesignerEventArgs(s_placeholderHost, otherHost), 0, 1, 1 };\r\n    yield return new object[] { new ActiveDesignerEventArgs(s_placeholderHost, null), 0, 1, 1 };\r\n\r\n    yield return new object[] { new ActiveDesignerEventArgs(otherHost, s_placeholderHost), 1, 0, 0 };\r\n    yield return new object[] { new ActiveDesignerEventArgs(otherHost, otherHost), 0, 0, 0 };\r\n    yield return new object[] { new ActiveDesignerEventArgs(otherHost, null), 0, 0, 0 };\r\n\r\n    yield return new object[] { new ActiveDesignerEventArgs(null, s_placeholderHost), 1, 0, 0 };\r\n    yield return new object[] { new ActiveDesignerEventArgs(null, otherHost), 0, 0, 0 };\r\n    yield return new object[] { new ActiveDesignerEventArgs(null, null), 0, 0, 0 };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(ChangeActiveDesigner_TestData))]\r\npublic void ChangeActiveDesigner_Invoke_Success(ActiveDesignerEventArgs eventArgs, int expectedActivatedCallCount, int expectedDeactivatedCallCount, int expectedFlushCount)\r\n{\r\n    var mockDesignerEventService = new Mock<IDesignerEventService>(MockBehavior.Strict);\r\n    var mockServiceProvider = new Mock<IServiceProvider>(MockBehavior.Strict);\r\n    mockServiceProvider\r\n        .Setup(p => p.GetService(typeof(IDesignerEventService)))\r\n        .Returns(mockDesignerEventService.Object);\r\n    var surface = new SubDesignSurface(mockServiceProvider.Object);\r\n    IDesignerLoaderHost2 host = surface.Host;\r\n\r\n    int activatedCallCount = 0;\r\n    EventHandler activatedHandler = (sender, e) =>\r\n    {\r\n        Assert.Same(host, sender);\r\n        Assert.Same(EventArgs.Empty, e);\r\n        activatedCallCount++;\r\n    };\r\n    host.Activated += activatedHandler;\r\n    int deactivatedCallCount = 0;\r\n    EventHandler deactivatedHandler = (sender, e) =>\r\n    {\r\n        Assert.Same(host, sender);\r\n        Assert.Same(EventArgs.Empty, e);\r\n        deactivatedCallCount++;\r\n    };\r\n    host.Deactivated += deactivatedHandler;\r\n    int flushCallCount = 0;\r\n    EventHandler flushedHandler = (sender, e) =>\r\n    {\r\n        Assert.Same(surface, sender);\r\n        Assert.Same(EventArgs.Empty, e);\r\n        flushCallCount++;\r\n    };\r\n    surface.Flushed += flushedHandler;\r\n\r\n    var mockLoader = new Mock<DesignerLoader>(MockBehavior.Strict);\r\n    mockLoader\r\n        .Setup(l => l.BeginLoad((IDesignerLoaderHost)surface.ComponentContainer));\r\n    mockLoader\r\n        .Setup(l => l.Flush());\r\n    surface.BeginLoad(mockLoader.Object);\r\n    Assert.Equal(0, activatedCallCount);\r\n    Assert.Equal(0, deactivatedCallCount);\r\n    Assert.Equal(0, flushCallCount);\r\n\r\n    // Replace placeholders for \"this\"\r\n    ActiveDesignerEventArgs actualEventArgs = null;\r\n    if (eventArgs != null)\r\n    {\r\n        IDesignerHost newDesigner = eventArgs.NewDesigner == s_placeholderHost ? host : eventArgs.NewDesigner;\r\n        IDesignerHost oldDesigner = eventArgs.OldDesigner == s_placeholderHost ? host : eventArgs.OldDesigner;\r\n        actualEventArgs = new ActiveDesignerEventArgs(oldDesigner, newDesigner);\r\n    }\r\n    mockDesignerEventService.Raise(s => s.ActiveDesignerChanged += null, actualEventArgs);\r\n    Assert.Equal(expectedActivatedCallCount, activatedCallCount);\r\n    Assert.Equal(expectedDeactivatedCallCount, deactivatedCallCount);\r\n    Assert.Equal(expectedFlushCount, flushCallCount);\r\n    \r\n    // Should not invoke if removed.\r\n    host.Activated -= activatedHandler;\r\n    host.Deactivated -= deactivatedHandler;\r\n    surface.Flushed -= flushedHandler;\r\n    mockDesignerEventService.Raise(s => s.ActiveDesignerChanged += null, actualEventArgs);\r\n    Assert.Equal(expectedActivatedCallCount, activatedCallCount);\r\n    Assert.Equal(expectedDeactivatedCallCount, deactivatedCallCount);\r\n    Assert.Equal(expectedFlushCount, flushCallCount);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/963","RelatedDescription":"Open issue \"Calling DesignerHost.OnActiveDesignerChanged with null event args throws NRE\" (#963)"},{"Id":"442810111","IsPullRequest":false,"CreatedAt":"2019-05-10T16:58:10","Actor":"hughbe","Number":"962","RawContent":null,"Title":"Calling Dispose in DesignSurface.Loading throws NRE","State":"open","Body":"Should not throw NRE and check for null\r\n\r\n```cs\r\n[Fact]\r\npublic void BeginLoad_DisposeInLoading_DoesCallFlush()\r\n{\r\n    var surface = new SubDesignSurface(null);\r\n    surface.Loading += (sender, e) =>\r\n    {\r\n        // Catch the InvalidOperationException thrown.\r\n        try\r\n        {\r\n            surface.Dispose();\r\n        }\r\n        catch\r\n        {\r\n        }\r\n    };\r\n    int flushedCallCount = 0;\r\n    surface.Flushed += (sender, e) => flushedCallCount++;\r\n    var mockLoader = new Mock<DesignerLoader>(MockBehavior.Strict);\r\n    mockLoader\r\n        .Setup(l => l.BeginLoad((IDesignerLoaderHost)surface.ComponentContainer))\r\n        .Verifiable();\r\n    surface.BeginLoad(mockLoader.Object);\r\n    Assert.Equal(0, flushedCallCount);\r\n    mockLoader.Verify(l => l.BeginLoad((IDesignerLoaderHost)surface.ComponentContainer), Times.Once());\r\n}\r\n```\r\n\r\n> System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.ComponentModel.Design.DesignerHost.BeginLoad(DesignerLoader loader) in /Users/hugh/Documents/GitHub/winforms/src/System.Windows.Forms.Design/src/System/ComponentModel/Design/DesignerHost.cs:line 330\r\n\r\nShould ","Url":"https://github.com/dotnet/winforms/issues/962","RelatedDescription":"Open issue \"Calling Dispose in DesignSurface.Loading throws NRE\" (#962)"},{"Id":"442472825","IsPullRequest":false,"CreatedAt":"2019-05-09T23:12:22","Actor":"JuditRose","Number":"955","RawContent":null,"Title":"Unify line endings","State":"open","Body":"Currently we have both CRLF and LF line endings \"randomly\" in our files.\r\nThe team agreed to use the windows style line endings. \r\n\r\nThis task contains:\r\n- [ ] clean up the line endings in the files\r\n- [ ] set up .git/config (https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration) to keep the settings clean in the project\r\n- [ ] check if there is a config for the project, if yes, set it there as well\r\n","Url":"https://github.com/dotnet/winforms/issues/955","RelatedDescription":"Open issue \"Unify line endings\" (#955)"},{"Id":"442422825","IsPullRequest":true,"CreatedAt":"2019-05-09T20:38:52","Actor":"zsd4yr","Number":"952","RawContent":null,"Title":"policheck compliance round 1","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/952","RelatedDescription":"Closed or merged PR \"policheck compliance round 1\" (#952)"},{"Id":"441996124","IsPullRequest":true,"CreatedAt":"2019-05-09T00:16:24","Actor":"hughbe","Number":"949","RawContent":null,"Title":"Extract out SiteNestedContainer to its own file","State":"open","Body":"No cleanup, only copy-and-paste. Line diffs are due to differences in the number of usings\r\n\r\nRationale is because the file is not only used in `DesignerHost` but also `DesignerSurface` so better belongs on its own file","Url":"https://github.com/dotnet/winforms/pull/949","RelatedDescription":"Open PR \"Extract out SiteNestedContainer to its own file\" (#949)"},{"Id":"441786994","IsPullRequest":true,"CreatedAt":"2019-05-08T20:29:46","Actor":"zsd4yr","Number":"945","RawContent":null,"Title":"Add MSDN Samples to our Getting Started docs","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/945","RelatedDescription":"Closed or merged PR \"Add MSDN Samples to our Getting Started docs\" (#945)"},{"Id":"441499247","IsPullRequest":true,"CreatedAt":"2019-05-08T20:26:54","Actor":"hughbe","Number":"944","RawContent":null,"Title":"Fix CollectionEditor min/max","State":"closed","Body":"Previously the code was:\r\n```cs\r\n                int c = _listbox.Items.Count;\r\n                if (c < 2)\r\n                {\r\n                    c = 2;  //for c-1 should be greater than zero.\r\n                }\r\n```\r\n\r\nThis was incorrectly cleaned up to `Min`, but should be `Max`.\r\n\r\nWill resist the urge to clean cases like this up in future","Url":"https://github.com/dotnet/winforms/pull/944","RelatedDescription":"Closed or merged PR \"Fix CollectionEditor min/max\" (#944)"},{"Id":"441904069","IsPullRequest":true,"CreatedAt":"2019-05-08T19:55:11","Actor":"zsd4yr","Number":"948","RawContent":null,"Title":"Add link to apis of .net link to porting guidelines","State":"open","Body":"@OliaG we should probably also add current understood guidance on what to do about multiple app domains, what to do about assembly loader and metadata load context, etc...","Url":"https://github.com/dotnet/winforms/pull/948","RelatedDescription":"Open PR \"Add link to apis of .net link to porting guidelines\" (#948)"},{"Id":"441902254","IsPullRequest":false,"CreatedAt":"2019-05-08T19:50:24","Actor":"speed2048","Number":"947","RawContent":null,"Title":"Winforms template for non Windows platforms.","State":"open","Body":"I installed .dotnet 3 preview 5 on Linux and Mac OS and did a dotnet new. To my surprise Windows Forms was listed as a template.  From the reading I have done is that WinForms is not supported on these platforms.\r\n\r\nI was able to do a dotnet new winforms without issues, but could not run it.\r\n\r\nExpected behavior is not to have winforms show as a template or be available on non Windows platforms.\r\n","Url":"https://github.com/dotnet/winforms/issues/947","RelatedDescription":"Open issue \"Winforms template for non Windows platforms.\" (#947)"},{"Id":"441879116","IsPullRequest":false,"CreatedAt":"2019-05-08T18:51:12","Actor":"hughbe","Number":"946","RawContent":null,"Title":"DesignerHost throws NRE when calling `Activate` when disposed","State":"open","Body":"```\r\n[Fact]\r\npublic void ComponentContainer_ActivateDisposed_Nop()\r\n{\r\n    var surface = new DesignSurface();\r\n    int viewActivatedCallCount = 0;\r\n    int activatedCallCount = 0;\r\n    surface.ViewActivated += (sender, e) =>\r\n    {\r\n        Assert.Same(surface, sender);\r\n        Assert.Same(EventArgs.Empty, e);\r\n        viewActivatedCallCount++;\r\n    };\r\n    IDesignerHost host = Assert.IsAssignableFrom<IDesignerHost>(surface.ComponentContainer);\r\n    surface.Dispose();\r\n    host.Activated += (sender, e) => activatedCallCount++;\r\n    host.Activate();\r\n    Assert.Equal(1, viewActivatedCallCount);\r\n    Assert.Equal(0, activatedCallCount);\r\n}\r\n```\r\n\r\n> [xUnit.net 00:00:02.21]     System.ComponentModel.Design.Tests.DesignSurfaceTests.ComponentContainer_ActivateDisposed_Nop [FAIL]\r\nFailed   System.ComponentModel.Design.Tests.DesignSurfaceTests.ComponentContainer_ActivateDisposed_Nop\r\nError Message:\r\n System.NullReferenceException : Object reference not set to an instance of an object.\r\nStack Trace:\r\n   at System.ComponentModel.Design.DesignerHost.System.ComponentModel.Design.IDesignerHost.Activate() in /Users/hugh/Documents/GitHub/winforms/src/System.Windows.Forms.Design/src/System/ComponentModel/Design/DesignerHost.cs:line 1011\r\n   at System.ComponentModel.Design.Tests.DesignSurfaceTests.ComponentContainer_ActivateDisposed_Nop() in /Users/hugh/Documents/GitHub/winforms/src/System.Windows.Forms.Design/tests/UnitTests/System/ComponentModel/Design/DesignSurfaceTests.cs:line 103\r\n","Url":"https://github.com/dotnet/winforms/issues/946","RelatedDescription":"Open issue \"DesignerHost throws NRE when calling `Activate` when disposed\" (#946)"},{"Id":"441498245","IsPullRequest":true,"CreatedAt":"2019-05-08T00:22:09","Actor":"dreddy-work","Number":"943","RawContent":null,"Title":"Porting of PropertyGrid per-mon changes. Excluding System.Drawing nam…","State":"open","Body":"Porting per-monitor DpiAwareness changes made for PropertyGrid in Desktop Framework. This PR does not include all the changes made in this regard but contain the fundamental support that was required to make property grid per-monitor aware. Excluded changes in this PR are from System.Drawing namespace \r\n and are about scaling the editors. We should be able to scale them better. Not want to bring the old pattern to core. Also, we are not yet supporting per-monitor awareness in core. \r\n","Url":"https://github.com/dotnet/winforms/pull/943","RelatedDescription":"Open PR \"Porting of PropertyGrid per-mon changes. Excluding System.Drawing nam…\" (#943)"},{"Id":"441475286","IsPullRequest":true,"CreatedAt":"2019-05-07T22:38:42","Actor":"JuditRose","Number":"942","RawContent":null,"Title":"port multiline string editor","State":"open","Body":"Ported multi line string editor from framework to core. \r\n\r\nContributes to #892.","Url":"https://github.com/dotnet/winforms/pull/942","RelatedDescription":"Open PR \"port multiline string editor\" (#942)"},{"Id":"441474698","IsPullRequest":true,"CreatedAt":"2019-05-07T22:36:23","Actor":"dreddy-work","Number":"941","RawContent":null,"Title":"Addign missing Resources for System.Desing* namespace.","State":"open","Body":"We started porting APIs from System.Design* name space as per the requests we received  since winforms become open source. However, we missed porting some of the resources. As part of this change, we are making following changes\r\n\r\n- Porting the resources required for the source code that are already ported.\r\n\r\n- Bitmap Icons/images are replaced with Icons. Corresponding source changes were in place.\r\n\r\n- We are porting all the images, equivalent, to desktop framework. Even though,  we did not port all the source code that require/use these images. Replacing existing Bitmaps with Icons have a cross team dependency. hence, pushing all of them in one go hoping that we fill the gap in porting the source code between core and desktop framework.","Url":"https://github.com/dotnet/winforms/pull/941","RelatedDescription":"Open PR \"Addign missing Resources for System.Desing* namespace.\" (#941)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-05-12T05:30:48.3240495Z","RunDurationInMilliseconds":537}