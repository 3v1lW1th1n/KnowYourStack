{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7680906110","Type":"IssuesEvent","CreatedAt":"2018-05-16T04:37:19","Actor":"kailashp","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3144","RelatedDescription":"Closed issue \"Asp.Net Core signalR is not working if publishing inside virtual directory\" (#3144) at aspnet/Home","RelatedBody":"I have developed an application in asp.net core and used signalR. When i publish it in root directory it works fine, but if i publish it inside virtual directory it doesn't work. My signalR hub is always pointing to the root directory.\r\n\r\nStartup.cs\r\n\r\n```\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n    // ... other middleware ...\r\n    app.UseSignalR(routes =>\r\n    {\r\n        routes.MapHub<ChatHub>(\"/chat\");\r\n    });\r\n}\r\n```\r\nAnd i have initialized it in client side like this,\r\n\r\nchat.js\r\n\r\n`var connection = new signalR.HubConnection(\"/chat\");`\r\n\r\nAfter publishing it inside virtual directory(/development/chatapp/source) it points like this, \r\nhttp://localhost:100/chat?userId=1\r\n\r\nBut actually it has to point like this, so that it will work,\r\nhttp://localhost:100/development/chatapp/source/chat?userId=1\r\n\r\nI have used asp.net core 2.0 and this signalR version(1.0.0-preview1-final).\r\n\r\nSomeone please suggest me to resolve this issue."},{"Id":"7680019726","Type":"IssuesEvent","CreatedAt":"2018-05-15T23:08:52","Actor":"JunTaoLuo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3050","RelatedDescription":"Closed issue \"2.1 preview 2 Fedora packaging issue\" (#3050) at aspnet/Home","RelatedBody":"I just upgraded from preview1 to preview2, and am getting the following error when running my application:\r\n\r\n```\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.AspNetCore.App', version '2.1.0-preview2-final' was notfound.\r\n  - Check application dependencies and target a framework version installed at:\r\n      /usr/share/dotnet/\r\n  - Installing .NET Core prerequisites might help resolve this problem:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The .NET Core framework and SDK can be installed from:\r\n      https://aka.ms/dotnet-download\r\n  - The following versions are installed:\r\n      2.1.0-preview1-final at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n```\r\n\r\nHere are the dotnet related packages I've installed (`dnf list --installed dotnet* aspnet*`) - in particular, note that aspnetcore-runtime-2.1.0-preview2-final is installed:\r\n\r\n```\r\nInstalled Packages\r\naspnetcore-runtime-2.1.0-preview1-final.x86_64     2.1.0_preview1_final-1    @packages-microsoft-com-prod\r\naspnetcore-runtime-2.1.0-preview2-final.x86_64     2.1.0_preview2_final-1    @packages-microsoft-com-prod\r\naspnetcore-store-2.0.0.x86_64                      2.0.0-1                   @packages-microsoft-com-prod\r\naspnetcore-store-2.0.3.x86_64                      2.0.3-1                   @packages-microsoft-com-prod\r\naspnetcore-store-2.0.5.x86_64                      2.0.5-1                   @packages-microsoft-com-prod\r\ndotnet-host.x86_64                                 2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.0.3.x86_64                        2.0.3-1                   @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.0.5.x86_64                        2.0.5-1                   @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.1.0-preview1-26216-03.x86_64      2.1.0_preview1_26216_03-1 @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.1.0-preview2-26406-04.x86_64      2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-runtime-2.0.3.x86_64                        2.0.3-1                   @packages-microsoft-com-prod\r\ndotnet-runtime-2.0.5.x86_64                        2.0.5-1                   @packages-microsoft-com-prod\r\ndotnet-runtime-2.1.0-preview1-26216-03.x86_64      2.1.0_preview1_26216_03-1 @packages-microsoft-com-prod\r\ndotnet-runtime-2.1.0-preview2-26406-04.x86_64      2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-runtime-deps-2.1.0-preview2-26406-04.x86_64 2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-sdk-2.0.3.x86_64                            2.0.3-1                   @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.2.x86_64                            2.1.2-1                   @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.300-preview1-008174.x86_64          2.1.300_preview1_008174-1 @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.300-preview2-008530.x86_64          2.1.300_preview2_008530-1 @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.4.x86_64                            2.1.4-1                   @packages-microsoft-com-prod\r\n```\r\n\r\nLooking at the contents of aspnetcore-runtime-2.1.0-preview2-final (`dnf repoquery -l aspnetcore-runtime-2.1.0-preview2-final`), I noticed the Microsoft.AspNetCore.All and Microsoft.AspNetCore.App were listed as being in `/opt/rh/rh-dotnet20/root/usr/lib64/dotnet/shared/` rather than `/usr/share/dotnet/shared/`.\r\n\r\nI then copied the contents from /opt/rh.. to the expected location in /usr/share and then the application worked again."},{"Id":"7679781562","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:02:13","Actor":"mkArtakMSFT","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/3147","RelatedDescription":"Reopened issue \"React template index.html caching?\" (#3147) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI seem to be facing a problem when deploying a new build to my server. \r\n\r\nIt seems that index.html is cached by the browser and tries to load the old bundle, which leads to a 404.\r\n\r\nAny ideas how to fix this?\r\n\r\nThanks!"},{"Id":"7679604015","Type":"PullRequestEvent","CreatedAt":"2018-05-15T21:21:28","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/pull/3149","RelatedDescription":"Opened pull request \"Updated issue template\" (#3149) at aspnet/Home","RelatedBody":""},{"Id":"7678978659","Type":"IssuesEvent","CreatedAt":"2018-05-15T19:16:02","Actor":"epignosisx","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3148","RelatedDescription":"Opened issue \"SetCookieHeaderValue fails with dashes on expires attribute\" (#3148) at aspnet/Home","RelatedBody":"SetCookieHeaderValue fails with dashes on the **expires** date:\r\n\r\n```cs\r\nSetCookieHeaderValue.Parse(\"SomeCookie=; domain=example.com; expires=Mon, 14-May-2018 19:05:34 GMT; path=/\");\r\n```\r\n\r\nStacktrace:\r\n```\r\nSystem.FormatException: The header contains invalid values at index 0: 'SomeCookie=; domain=example.com; expires=Mon, 14-May-2018 19:05:34 GMT; path=/'\r\n   at Microsoft.Net.Http.Headers.HttpHeaderParser`1.ParseValue(StringSegment value, Int32& index)\r\n   at Microsoft.Net.Http.Headers.SetCookieHeaderValue.Parse(StringSegment input)\r\n   at SampleApp.Program.Main(String[] args) in C:\\Projects\\SampleApp\\Program.cs:line 24\r\n```\r\n\r\ncsproj:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.8\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```"},{"Id":"7678944503","Type":"IssuesEvent","CreatedAt":"2018-05-15T19:09:05","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3134","RelatedDescription":"Closed issue \"Diagnostics Exception Handler override\" (#3134) at aspnet/Home","RelatedBody":"Hello \r\n\r\nI want to override ExceptionHandlerMiddleware and DeveloperExceptionPageMiddleware to enable them to support \"application/json\" content type, so they could return proper json error when the content is json. However your invoke method is not marked as virtual, may you mark it as virtual so we could extend this?"},{"Id":"7678743433","Type":"IssuesEvent","CreatedAt":"2018-05-15T18:29:51","Actor":"mkArtakMSFT","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3147","RelatedDescription":"Closed issue \"React template index.html caching?\" (#3147) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI seem to be facing a problem when deploying a new build to my server. \r\n\r\nIt seems that index.html is cached by the browser and tries to load the old bundle, which leads to a 404.\r\n\r\nAny ideas how to fix this?\r\n\r\nThanks!"},{"Id":"7678515395","Type":"IssuesEvent","CreatedAt":"2018-05-15T17:46:07","Actor":"georgiosd","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3147","RelatedDescription":"Opened issue \"React template index.html caching?\" (#3147) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI seem to be facing a problem when deploying a new build to my server. \r\n\r\nIt seems that index.html is cached by the browser and tries to load the old bundle, which leads to a 404.\r\n\r\nAny ideas how to fix this?\r\n\r\nThanks!"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7680355641","Type":"PullRequestEvent","CreatedAt":"2018-05-16T01:08:10","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2282","RelatedDescription":"Opened pull request \"Fix SSE 404 on stop flakey error\" (#2282) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2034"},{"Id":"7680199064","Type":"IssuesEvent","CreatedAt":"2018-05-16T00:09:02","Actor":"israellot","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2281","RelatedDescription":"Opened issue \"Interface proxies for client hub connections\" (#2281) at aspnet/SignalR","RelatedBody":"Are dynamic generate typed proxies  planed for clients as well  ? ( Not clients in a hub, but clients that connect to a remote hub ) \r\nSimilar to TypedHubClients<T> in _Microsoft.AspNetCore.SignalR.Internal_ but for _Microsoft.AspNetCore.SignalR.Client_ \r\n"},{"Id":"7680043157","Type":"PullRequestEvent","CreatedAt":"2018-05-15T23:16:12","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2280","RelatedDescription":"Closed pull request \"Fix multiple connections for a single user in Redis and MemoryLeak (#…\" (#2280) at aspnet/SignalR","RelatedBody":"…2273)"},{"Id":"7679998492","Type":"IssuesEvent","CreatedAt":"2018-05-15T23:02:43","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2243","RelatedDescription":"Closed issue \"Closing one tab/connection kills notifications to a user using user id when the user have multiple connections from different tabs/browsers. Redis backplane\" (#2243) at aspnet/SignalR","RelatedBody":"Hi\r\nI've found an issue with `Microsoft.AspNetCore.SignalR.Redis` as backplane.\r\n\r\nEnvironment:\r\nMicrosoft.AspNetCore.SignalR: 1.0.0-rc1-final\r\nMicrosoft.AspNetCore.SignalR.Redis: 1.0.0-rc1-final\r\nJavascript js file: 1.0.0-rc1-update1\r\nServer: Kestrel / IIS\r\nOS on server and client: Windows 10\r\nBrowser: Firefox (latest) and Chrome (latest)\r\n\r\nStep to reproduce:\r\n1 Open two tabs with the same user logged in\r\n2 Close one tab\r\n\r\nExpected: The app in the existing tab should be able to get notifications using user id\r\nActual: No notifications sent using user id delivered to this user anymore.\r\n\r\nI made some research. There are my finding\r\n* Everything works fine if I don't use Redis as a backplane.\r\n* According to my understanding [unsubscribe](https://github.com/aspnet/SignalR/blob/6f6382799b00936521452cc6c5c516a5bb7f3ce8/src/Microsoft.AspNetCore.SignalR.Redis/RedisHubLifetimeManager.cs#L87) causing the problem. While it works fine for connection subscriptions because i'st closed anyway. For user subscriptions this is wrong. A user can have more than one connection to the same server. "},{"Id":"7679992572","Type":"PullRequestEvent","CreatedAt":"2018-05-15T23:00:57","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2272","RelatedDescription":"Closed pull request \"Fix multiple connections for a single user in Redis\" (#2272) at aspnet/SignalR","RelatedBody":"@anurse \r\nLet's start reviewing\r\n\r\nhttps://github.com/aspnet/SignalR/issues/2243"},{"Id":"7679992046","Type":"PullRequestEvent","CreatedAt":"2018-05-15T23:00:47","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2280","RelatedDescription":"Opened pull request \"Fix multiple connections for a single user in Redis and MemoryLeak (#…\" (#2280) at aspnet/SignalR","RelatedBody":"…2273)"},{"Id":"7679980715","Type":"PullRequestEvent","CreatedAt":"2018-05-15T22:57:24","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2273","RelatedDescription":"Merged pull request \"Fix multiple connections for a single user in Redis and MemoryLeak\" (#2273) at aspnet/SignalR","RelatedBody":"Version of https://github.com/aspnet/SignalR/pull/2272 with the memory leak fixed. ~~(TODO: Still need to manually verify that the leak is gone)~~\r\n\r\nUsed the `_connectionLock` because it was only used for connecting the Redis and the areas I added it shouldn't be under high contention. Can change it to separate locks if we want.\r\n\r\n@anurse "}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7680028664","Type":"IssuesEvent","CreatedAt":"2018-05-15T23:11:40","Actor":"mhagrelius","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7785","RelatedDescription":"Closed issue \"WebApplicationFactory<T> not calling appropriate ConfigureServices\" (#7785) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\n\r\n1. Create an a web application project, add a ConfigureServicesDevelopment function and add a service to the ServiceCollection\r\n2. Create an xunit project and follow the guide from today's Asp.Net Community Standup for utilizing the new WebApplicationFactory from Microsoft.AspNetCore.Mvc.Testing \r\n\r\n#### Description of the problem:\r\nI have a project that depends on Hangfire. I have been experimenting with splitting my ConfigureServices into Development vs Production by following the Asp.Net Core Docs. During normal run of the program ConfigureServicesDevelopment(IServiceCollection services) is called and my             services.AddHangfire(h => h.UseMemoryStorage()); is called and setup.\r\n\r\nHowever, when running a basic xunit test I receive an exception (pasted below). If I move the calls into the normal ConfigureServices method, my tests pass.\r\n\r\n`public RoutesTests(WebApplicationFactory<Program> fixture)\r\n        {\r\n            Client = fixture.CreateClient();\r\n        }\r\n\r\n        public HttpClient Client { get; }\r\n\r\n        [Theory]\r\n        [InlineData(\"/api/phones\")]\r\n        public async Task AuthenticationRequired(string url)\r\n        {\r\n            var response = await Client.GetAsync(url);\r\n            response.StatusCode.Should().Be(HttpStatusCode.Unauthorized);\r\n        }`\r\n\r\nTest Name:\t<omitted>Test.RoutesTests.AuthenticationRequired(url: \"/api/phones\")\r\nTest FullName:\t<omitted>.Test.RoutesTests.AuthenticationRequired\r\nTest Source:\t<omitted>RoutesTests.cs : line 22\r\nTest Outcome:\tFailed\r\nTest Duration:\t0:00:00.001\r\n\r\nResult StackTrace:\t\r\nat Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)\r\n   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder app, String pathMatch, DashboardOptions options, JobStorage storage)\r\n   at <omitted>.Web.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.TestHost.TestServer..ctor(IWebHostBuilder builder, IFeatureCollection featureCollection)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateServer(IWebHostBuilder builder)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.EnsureServer()\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateDefaultClient(DelegatingHandler[] handlers)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateClient(WebApplicationFactoryClientOptions options)\r\n   at <omitted>.Test.RoutesTests..ctor(WebApplicationFactory`1 fixture)\r\nResult Message:\tSystem.InvalidOperationException : Unable to find the required services. Please add all the required services by calling 'IServiceCollection.AddHangfire' inside the call to 'ConfigureServices(...)' in the application startup code.\r\n\r\n\r\n\r\n#### Version of ``Microsoft.AspNetCore.All`:\r\n2.1.0-rc1-final\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n"},{"Id":"7679951072","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:48:37","Actor":"mhagrelius","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7785","RelatedDescription":"Opened issue \"WebApplicationFactory<T> not calling appropriate ConfigureServices\" (#7785) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\n\r\n1. Create an a web application project, add a ConfigureServicesDevelopment function and add a service to the ServiceCollection\r\n2. Create an xunit project and follow the guide from today's Asp.Net Community Standup for utilizing the new WebApplicationFactory from Microsoft.AspNetCore.Mvc.Testing \r\n\r\n#### Description of the problem:\r\nI have a project that depends on Hangfire. I have been experimenting with splitting my ConfigureServices into Development vs Production by following the Asp.Net Core Docs. During normal run of the program ConfigureServicesDevelopment(IServiceCollection services) is called and my             services.AddHangfire(h => h.UseMemoryStorage()); is called and setup.\r\n\r\nHowever, when running a basic xunit test I receive an exception (pasted below). If I move the calls into the normal ConfigureServices method, my tests pass.\r\n\r\n`public RoutesTests(WebApplicationFactory<Program> fixture)\r\n        {\r\n            Client = fixture.CreateClient();\r\n        }\r\n\r\n        public HttpClient Client { get; }\r\n\r\n        [Theory]\r\n        [InlineData(\"/api/phones\")]\r\n        public async Task AuthenticationRequired(string url)\r\n        {\r\n            var response = await Client.GetAsync(url);\r\n            response.StatusCode.Should().Be(HttpStatusCode.Unauthorized);\r\n        }`\r\n\r\nTest Name:\t<omitted>Test.RoutesTests.AuthenticationRequired(url: \"/api/phones\")\r\nTest FullName:\t<omitted>.Test.RoutesTests.AuthenticationRequired\r\nTest Source:\t<omitted>RoutesTests.cs : line 22\r\nTest Outcome:\tFailed\r\nTest Duration:\t0:00:00.001\r\n\r\nResult StackTrace:\t\r\nat Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)\r\n   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder app, String pathMatch, DashboardOptions options, JobStorage storage)\r\n   at <omitted>.Web.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.TestHost.TestServer..ctor(IWebHostBuilder builder, IFeatureCollection featureCollection)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateServer(IWebHostBuilder builder)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.EnsureServer()\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateDefaultClient(DelegatingHandler[] handlers)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateClient(WebApplicationFactoryClientOptions options)\r\n   at <omitted>.Test.RoutesTests..ctor(WebApplicationFactory`1 fixture)\r\nResult Message:\tSystem.InvalidOperationException : Unable to find the required services. Please add all the required services by calling 'IServiceCollection.AddHangfire' inside the call to 'ConfigureServices(...)' in the application startup code.\r\n\r\n\r\n\r\n#### Version of ``Microsoft.AspNetCore.All`:\r\n2.1.0-rc1-final\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n"},{"Id":"7679713450","Type":"PullRequestEvent","CreatedAt":"2018-05-15T21:46:05","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7784","RelatedDescription":"Opened pull request \"Fix ActionMethodExecutor incorrectly setting DeclaredType on ObjectResult\" (#7784) at aspnet/Mvc","RelatedBody":"Fixes #7782"},{"Id":"7679547556","Type":"PullRequestEvent","CreatedAt":"2018-05-15T21:09:31","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7767","RelatedDescription":"Merged pull request \"Update the `Steps to reproduece` section header\" (#7767) at aspnet/Mvc","RelatedBody":""},{"Id":"7679213859","Type":"PullRequestEvent","CreatedAt":"2018-05-15T20:03:20","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7783","RelatedDescription":"Opened pull request \"Added logging to model binding requestpredicate shortcircuit\" (#7783) at aspnet/Mvc","RelatedBody":""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7678442398","Type":"IssuesEvent","CreatedAt":"2018-05-15T17:31:46","Actor":"adams-hub","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1792","RelatedDescription":"Closed issue \"ApplicationUser properties not added to AspNetUsers\" (#1792) at aspnet/Identity","RelatedBody":"I'm using the following code to try extend identity user, but the properties are not being added to the user table. How do I accomplish this?\r\n\r\n```\r\n    public class ApplicationUser : IdentityUser<Guid>\r\n    {\r\n        public string Name { get; set; }\r\n        public string StripeCustomerId{ get; set; }\r\n    }\r\n```\r\n```\r\n    public class ApplicationRole : IdentityRole<Guid>\r\n    {\r\n\r\n    }\r\n```\r\n\r\n```\r\n    public class ApplicationDbContext : IdentityDbContext<ApplicationUser, ApplicationRole, Guid>\r\n    {\r\n        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);\r\n\r\n            builder.Entity<ApplicationUser>().Property(x => x.Id).ValueGeneratedOnAdd();\r\n            builder.Entity<ApplicationRole>().Property(x => x.Id).ValueGeneratedOnAdd();\r\n        }\r\n\r\n        public DbSet<Plan> Plans { get; set; }\r\n    }\r\n```\r\n\r\n```\r\n services.AddIdentity<ApplicationUser, ApplicationRole>(options => options.Stores.MaxLengthForKeys = 128)\r\n            .AddEntityFrameworkStores<ApplicationDbContext>()\r\n            .AddDefaultUI()\r\n            .AddDefaultTokenProviders();\r\n```"},{"Id":"7678245700","Type":"IssuesEvent","CreatedAt":"2018-05-15T16:53:46","Actor":"adams-hub","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1792","RelatedDescription":"Opened issue \"ApplicationUser properties not added to AspNetUsers\" (#1792) at aspnet/Identity","RelatedBody":"I'm using the following code to try extend identity user, but the properties are not being added to the user table. How do I accomplish this?\r\n\r\n```\r\n    public class ApplicationUser : IdentityUser<Guid>\r\n    {\r\n        public string Name { get; set; }\r\n        public string StripeCustomerId{ get; set; }\r\n    }\r\n```\r\n```\r\n    public class ApplicationRole : IdentityRole<Guid>\r\n    {\r\n\r\n    }\r\n```\r\n\r\n```\r\n    public class ApplicationDbContext : IdentityDbContext<ApplicationUser, ApplicationRole, Guid>\r\n    {\r\n        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);\r\n\r\n            builder.Entity<ApplicationUser>().Property(x => x.Id).ValueGeneratedOnAdd();\r\n            builder.Entity<ApplicationRole>().Property(x => x.Id).ValueGeneratedOnAdd();\r\n        }\r\n\r\n        public DbSet<Plan> Plans { get; set; }\r\n    }\r\n```\r\n\r\n```\r\n services.AddIdentity<ApplicationUser, ApplicationRole>(options => options.Stores.MaxLengthForKeys = 128)\r\n            .AddEntityFrameworkStores<ApplicationDbContext>()\r\n            .AddDefaultUI()\r\n            .AddDefaultTokenProviders();\r\n```"},{"Id":"7673438223","Type":"IssuesEvent","CreatedAt":"2018-05-14T22:11:04","Actor":"Eirenarch","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1791","RelatedDescription":"Opened issue \"Consider adding overloads of IsInRole(Async) and other methods which accept user id\" (#1791) at aspnet/Identity","RelatedBody":"The old version of ASP.NET Identity had a lot of overloads of different methods that accepted user id instead of user object. In the current version only the User object overloads are left. This forces us to write code like this\r\n\r\n`UserManager.IsInRoleAsync(new User { Id = userId }, \"Admin\");`\r\n\r\nPlease consider adding the overloads that accept userId."},{"Id":"7667247575","Type":"IssuesEvent","CreatedAt":"2018-05-13T18:34:13","Actor":"eriksendc","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1790","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware An unhandled exception has occurred: Failed to retrieve Facebook user information (BadRequest) Please check if the authentication information is correct and the corresponding Facebook Graph API is enabled.\" (#1790) at aspnet/Identity","RelatedBody":"Hi All,\r\n\r\nStarting May 1st at approximately 1:33pm Eastern US time we started seeing the following error reported in  our logs:\r\n\r\n`Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware An unhandled exception has occurred: Failed to retrieve Facebook user information (BadRequest) Please check if the authentication information is correct and the corresponding Facebook Graph API is enabled.`\r\n\r\nWe made no code changes at that time. This just started happening out of the blue. We know this is affecting users because we've had at least 10 requests for help per day from our users since the 1st. It's becoming a real user experience issue. Any clues?\r\n\r\nWe're on 2.0.1 in general, and specifically for Microsoft.AspNetCore.Authentication.Facebook.\r\n\r\nThanks in advance!\r\n\r\n-Brian Eriksen"},{"Id":"7665895433","Type":"IssuesEvent","CreatedAt":"2018-05-13T01:26:40","Actor":"natelaff","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1789","RelatedDescription":"Opened issue \"Guidance on new 2.1 stuff\" (#1789) at aspnet/Identity","RelatedBody":"Can we get guidance on adding user properties, renaming Identity tables and changing key types with all of these changes for 2.1 (i.e. #1690, #1679)\r\n\r\nIt seems like this was made easier, right? Can we see how it all comes together now?\r\n\r\nThanks!\r\n"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7680246742","Type":"PullRequestEvent","CreatedAt":"2018-05-16T00:26:08","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2578","RelatedDescription":"Opened pull request \"Fix Json perf regression in Socket Transport\" (#2578) at aspnet/KestrelHttpServer","RelatedBody":"#2573 \r\n\r\nThis PR is based on dev for now. Should we start preparing a patch branch?"},{"Id":"7679863538","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:23:41","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2544","RelatedDescription":"Closed issue \"Make some new Kestrel types internal\" (#2544) at aspnet/KestrelHttpServer","RelatedBody":"There were some new public types added to Kestrel between 2.0 and 2.1 that don’t need to be exposed. We should make them internal to alleviate back compat concerns going forward.\r\n"},{"Id":"7679849108","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:19:44","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2530","RelatedDescription":"Closed issue \"Http Status Code 204 failing with empty content\" (#2530) at aspnet/KestrelHttpServer","RelatedBody":"Service A calls Service B => Service B returns 204. On the Service A when EnsureSucessStatusCode is invoked it adds empty Content which then fails from Kestrel.\r\nWriting to the response body is invalid for responses with status code 204.\r\n```\r\n at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.HandleNonBodyResponseWrite()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.<WriteAsyncAwaited>d__199.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.ResponseCompression.BodyWrapperStream.<WriteAsync>d__32.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpContent.<CopyToAsyncCore>d__44.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Sy\r\n```\r\n\r\n\r\nTo have a workaround we need to explicitly add the following where the Content is null and it works fine.\r\n```c#\r\n if( response.StatusCode.Equals(HttpStatusCode.NoContent))\r\n                    {\r\n                        var response =new HttpResponseMessage(HttpStatusCode.NoContent);\r\n                        return response;\r\n                    }\r\n```\r\nAsk for Kestrel to ignore the Conent if the status code is 204. Or dotnet services should not add the content by default on 204 status code.\r\n"},{"Id":"7679820540","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:12:10","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2525","RelatedDescription":"Closed issue \"Sockets Transport is missing OnWriterCompleted handler\" (#2525) at aspnet/KestrelHttpServer","RelatedBody":"This is still missing from the Sockets transport and allows a client to block the timeout logic by not reading as explained here: https://github.com/aspnet/KestrelHttpServer/issues/1771#issuecomment-297524780.\r\n\r\nCC @halter73 @davidfowl \r\n"},{"Id":"7679810783","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:09:41","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2484","RelatedDescription":"Closed issue \"CPU heavy requests cause other fast requests to be delayed?\" (#2484) at aspnet/KestrelHttpServer","RelatedBody":"Hi,\r\n\r\nI'm using .NET Core 2, targeting .NET 4.6.1, with Kestrel + IIS Integration.\r\n\r\nWe have an internal application that:\r\n\r\n1) Has a route that will perform some CPU heavy work inline (no task). Sometimes this route will also launch and async/await on another task to complete, that may take 5-10 seconds.\r\n\r\n2) We have a \"fast\" route, that only pings a database, and returns in 10ms, using async/await.\r\n\r\nOften, we notice route 2 will take an extra few seconds to complete (likely around the async/await).\r\n\r\nI'm wondering whether, when route 2 does an await, does its completion get scheduled on the therad pool thread that is currently processing (and CPU blocked) for thread 1?\r\n\r\nIs that a possibility? I'm trying to identify why the delays are occurring on an otherwise fast route. \r\n\r\nThanks"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7679331504","Type":"PullRequestEvent","CreatedAt":"2018-05-15T20:26:52","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2354","RelatedDescription":"Opened pull request \"Add some benchmarks for project system\" (#2354) at aspnet/Razor","RelatedBody":"Adds a few benchmarks for things we're working on, also addressed a few\r\nsmall perf issues that have an impact for large documents."},{"Id":"7678299448","Type":"PullRequestEvent","CreatedAt":"2018-05-15T17:04:02","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2352","RelatedDescription":"Merged pull request \"Exclude Visual Studio packages from default NGPV ruleset\" (#2352) at aspnet/Razor","RelatedBody":"These packages are failing NGPV on stabilized builds on the pre-release dependency rule because these nupkgs use pre-release VS packages. These packages are not actually consumed as nupkgs by VS, so exclude them from NGPV's default rules."},{"Id":"7678232215","Type":"PullRequestEvent","CreatedAt":"2018-05-15T16:51:13","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2352","RelatedDescription":"Opened pull request \"Exclude Visual Studio packages from default NGPV ruleset\" (#2352) at aspnet/Razor","RelatedBody":"These packages are failing NGPV on stabilized builds on the pre-release dependency rule because these nupkgs use pre-release VS packages. These packages are not actually consumed as nupkgs by VS, so exclude them from NGPV's default rules."},{"Id":"7673519189","Type":"IssuesEvent","CreatedAt":"2018-05-14T22:33:03","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2351","RelatedDescription":"Opened issue \"Create a VNext build of Razor\" (#2351) at aspnet/Razor","RelatedBody":"We need the ability to publish builds of the Razor extension for vnext."},{"Id":"7672493577","Type":"IssuesEvent","CreatedAt":"2018-05-14T18:55:16","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2336","RelatedDescription":"Closed issue \"Forcing reparses occasionally returns stale data.\" (#2336) at aspnet/Razor","RelatedBody":"At edit time when the project system is being created if more than one `QueueReparse`s happen around the same time only the first one will have its results returned. This is due to how we calculate the \"latest\" change reference [here](https://github.com/aspnet/Razor/blob/a9e7e4668dd0b4432bb504327d6f716f71ff10f5/src/Microsoft.VisualStudio.Editor.Razor/DefaultVisualStudioRazorParser.cs#L379-L381)."},{"Id":"7672339868","Type":"IssuesEvent","CreatedAt":"2018-05-14T18:25:32","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2350","RelatedDescription":"Opened issue \"Allow Core Razor editor to work in non-project scenarios.\" (#2350) at aspnet/Razor","RelatedBody":"Today if a Razor file is opened outside of the context of a project (diffing two Razor files) there is no IVsHierarchy and therefore no project path or any project information.\r\n\r\nOur system relies on the idea that a document conceptually has a project; however, this is not true in the diff scenario and technically not true in the ctrl + o scenario for a Razor file (ctrl + o uses old Razor editor today).\r\n\r\nThis crashes VS."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7671761413","Type":"IssuesEvent","CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Opened issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301) at aspnet/Announcements","RelatedBody":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*"},{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996435611354447872","CreatedAt":"2018-05-15T17:02:17+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us as https://t.co/3dFxSj11IQ https://t.co/PAZDWtuk1r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"996432221497057285","CreatedAt":"2018-05-15T16:48:49+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us for an MVC Functional Testing overview with Javier Calvarro Nelson at… https://t.co/FavBvWbz0w","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":29,"FavoriteCount":15,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":482,"FavoriteCount":270,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null}]}},"RunOn":"2018-05-16T05:30:13.739107Z","RunDurationInMilliseconds":8625}