{"Data":{"Blog":{"FeedItems":[{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null},{"Title":"Previewing Files Inside Your Xamarin.iOS App","PublishedOn":"2018-07-25T18:21:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If your app interacts with files, such as email attachments or photos, allowing users to preview those files without leaving your app is a great way to enhance the user&#8217;s experience....","Href":"https://blog.xamarin.com/previewing-files-with-xamarin-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8099127792","Type":"PullRequestEvent","CreatedAt":"2018-08-11T03:53:01","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2057","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] 3 tales of #deletebinobj\" (#2057) at xamarin/xamarin-android","RelatedBody":"I got report from a customer (over email) of an error such as:\r\n\r\n    Java.Lang.ClassNotFoundException: Didn't find class \"com.google.android.gms.R$string\" on path: DexPathList\r\n\r\nThe build log showed the app was using a combination of Firebase with\r\nMultiDex enabled, so I tried the Firebase sample from the docs team:\r\n\r\nhttps://github.com/xamarin/monodroid-samples/tree/master/Firebase/FCMNotifications\r\n\r\nThings appeared to work fine, but something seemed strange: my \"spider\r\nsense\" was going off.\r\n\r\nMy initial thought was that the customer recently enabled MultiDex,\r\nand toggling MultiDex on/off was breaking the build.\r\n\r\nOh, it was much worse than that.\r\n\r\nI wrote a simple test with the following scenario:\r\n- Build an app that *requires* MultiDex, w/ many methods\r\n- Check we have `classes.dex`, `classes2.dex`, `classes3.dex`\r\n- Remove the Java code with all the methods, so MultiDex is no longer required\r\n- Build again\r\n- We should *only* have `classes.dex`\r\n\r\nHere I found problem No. 1:\r\n\r\n    <Delete Files=\"$(IntermediateOutputPath)android\\bin\\classes\\*.dex\" />\r\n\r\nNot only is this the *wrong* directory which should be\r\n`$(IntermediateOutputPath)android\\bin\\*.dex`, but this is also\r\nincorrect use of the `<Delete />` task! Using wildcards like this\r\nrequires use of an `<ItemGroup />` to \"gather\" the paths.\r\n\r\nI added an `<ItemGroup />` and moved on:\r\n\r\n    <ItemGroup>\r\n        <_DexesToDelete Include=\"$(IntermediateOutputPath)android\\bin\\*.dex\" />\r\n    </ItemGroup>\r\n    <Delete Files=\"@(_DexesToDelete)\" />\r\n\r\nAnd then I found problem No. 2...\r\n\r\nAfter it was now properly deleting the dexes, `classes2.dex` and\r\n`classes3.dex` were still recreated!\r\n\r\nLooking into `obj\\Debug\\android\\bin\\classes`, I saw\r\n`ManyMethods.class` and `ManyMethods2.class`, which should *not*\r\nexist!\r\n\r\nNothing deletes old `*.classes` files! I guess they are just left\r\naround? `javac` happily overwrites existing `*.class` files as needed?\r\n\r\nSo I added a call to remove the `classes` directory before `<Javac />`:\r\n\r\n    <RemoveDir Directories=\"$(IntermediateOutputPath)android\\bin\\classes\" />\r\n\r\nAnd then I found problem No. 3...\r\n\r\nWhen inspecting `obj`, I noticed `obj\\Debug\\android\\bin\\classes.zip`\r\nstill contained `ManyMethods.class` and `ManyMethods2.class`. Even\r\nthough they were deleted...\r\n\r\nIt looked like the `<Javac />` task was *appending* to the zip file!\r\n\r\nSo I added a final `<Delete />` to remove `classes.zip`:\r\n\r\n    <Delete Files=\"$(IntermediateOutputPath)android\\bin\\classes.zip\" />\r\n\r\nAnd my test now passes...\r\n\r\nHow did this ever work???"},{"Id":"8097928690","Type":"IssuesEvent","CreatedAt":"2018-08-10T19:22:29","Actor":"PureWeen","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2056","RelatedDescription":"Opened issue \"[AAPT2] Java.Lang.NullPointerException:  on project that runs fine with AAPT\" (#2056) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  git clone https://github.com/PureWeen/ReactiveTalk.git\r\n2.  git checkout aapt2\r\n3.  Open Xamarin/DevDays.SLN\r\n4.  Run DevDays.Android\r\n\r\nAt this point it should crash for you\r\n\r\nIf you disable aapt2\r\ndelete bin/obj\r\nrebuild\r\nthen project runs fine\r\n\r\n### Expected Behavior\r\nProject should run\r\n\r\n### Actual Behavior\r\nProject crashes with\r\n\r\n![image](https://user-images.githubusercontent.com/5375137/43977054-23967144-9ca0-11e8-91ff-5b2c85f89c77.png)\r\n\r\n### Version Information\r\nXamarin.Android.SDK 9.1.0.8\r\n"},{"Id":"8097907160","Type":"PullRequestEvent","CreatedAt":"2018-08-10T19:17:17","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2055","RelatedDescription":"Opened pull request \"Bump to mono/2018-04/f3a2216b\" (#2055) at xamarin/xamarin-android","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@f3a2216b65a backport #9800 to 2018-04\r\n* mono/mono@07ac0897350 Bump msbuild to track mono-2018-04 (#9834)\r\n* mono/mono@d31dbe843a5 Apply F# portable pdb debug fix for pinvokes & bump (#9798)\r\n* mono/mono@a4ac6282675 [corlib] Disable comparer xunit tests because we are still running referencesource version on mobile\r\n* mono/mono@4f10cd10272 [corlib] Disable broken corefx tests\r\n* mono/mono@16538b28e36 [TermInfo] fix reading integer value for new file format\r\n* mono/mono@e92217aad3c Bump bockbuild\r\n* mono/mono@b25c7135046 [llvm] Avoid using the preserveall calling convention in another place on watchos. (#9579)\r\n* mono/mono@ebc0c7c2156 Fix LogcatTextWriter_Log interpreting messages it logs, potentially writing random garbage and/or crashing (introduced by https://github.com/mono/mono/commit/984f6484666c2ee6fefec949c81fdff1189c9488) (Fixes https://github.com/xamarin/xamarin-android/issues/1951) (#9614)\r\n* mono/mono@d851c21b1fc [runtime] Make sigterm dumper send file to merp (#9608)\r\n* mono/mono@d4a680b045c [arm64] Make OP_CHECK_THIS read only a byte, to prevent unaligned access errors. (#9545)\r\n* mono/mono@0d29bd39f11 Merge pull request #9484 from alexanderkyte/2018-04-merp_params\r\n* mono/mono@2e6757dae96 [sdk] Do not fix android platform-tools version. Make it configurable. (#9509)\r\n* mono/mono@6a7c7f68535 [runtime] Enable application to register path for MERP restart\r\n* mono/mono@ba63aa3589c [runtime] Make merp eventType icall argument\r\n* mono/mono@9d4d9a86686 [Coop] Convert Mono.Runtime to coop. (#8599)\r\n* mono/mono@c95a4a2d2c5 [llvm] Avoid using the preserveall calling convention on watchos, xcode10 asserts on it.\r\n* mono/mono@5f411d96967 Merge pull request #9445 from monojenkins/backport-pr-9440-to-2018-04\r\n* mono/mono@c03434f8f42 Add another Darwin file system\r\n* mono/mono@9d69811fd6d Bump bockbuild\r\n* mono/mono@2389814c3ca [runtime] Fix the --enable-minimal=aot build. (#9393)\r\n* mono/mono@5a3352aba2f [interp] fix scope issue regarding `klass` var (#9377)\r\n* mono/mono@0a4c7bb91bf [mini] add workaround for AMD Ryzen Threadripper issue (#9357)\r\n* mono/mono@33b8e6c418e [build] Skips RemoteExecuted bases tests on monodroid\r\n* mono/mono@c060398eaed [2018-04]  [sdks] Only rebuild MXE when it doesn't exist, not when we just cloned the sources (#9365)\r\n* mono/mono@095dbce56fe Merge pull request #9329 from monojenkins/backport-pr-9274-to-2018-04\r\n* mono/mono@c2f12ea8648 Bump linker\r\n* mono/mono@d0bb0ce89fa [System]: `HttpWebRequest` now throws `WebExceptionStatus.RequestCanceled` on abort. (#9212) (#9304)\r\n* mono/mono@18080dc75a8 [merp] Change XML file output path\r\n* mono/mono@872843aa92e [merp] Change and emit event type\r\n* mono/mono@3645833a7a4 [runtime] Make mono-state dumper abandon stuck threads (#9260)\r\n* mono/mono@5e8001a4ff6 [2018-04] [runtime] Package merp params in 3 ways needed (#9268)\r\n* mono/mono@639ca72904d [interp] make interp-only mode work again on 2018-04, mixed mode changes broke them. we need to fix it properly on master\r\n* mono/mono@d68cb85dc64 [2018-04] [interp] fullAOT mixed mode (#8838)\r\n* mono/mono@6f5656ea86e [interp] add FULL_AOT flags to AOT image when `--aot=interp` is used\r\n* mono/mono@33f6b1d2497 [aot-compiler] use mono_aot_mode_is_interp instead of directly using the flag\r\n* mono/mono@8ae8c52383b [System]: Fix bug in `WebResponseStream.GetResponse()` that will make some people happy.  #9228. (#9244)\r\n* mono/mono@c87ebef727a Bump msbuild to track mono-2018-04 (#9241)\r\n* mono/mono@f22c8b706eb [loader] LoadFrom of problematic images should reprobe (correctly)\r\n* mono/mono@9d43da2ebf4 [profiler] account for nullbyte in allocated buffer\r\n* mono/mono@3737edb8819 [corlib] Allow DM with an extra param to have the first one bound to null. Fixes #9033.\r\n* mono/mono@07c8f25fe53 [interp] check existence of InterpMethod before removing it from interp code hastable\r\n* mono/mono@335e62c3a02 [packaging] Ignore Mac path in MSBuild .targets file during check\r\n* mono/mono@36fe14548c4 [Linux,XA build] Fix building of Windows cross-compilers on Ubuntu Linux (#9173)\r\n* mono/mono@6de3d54a245 [SDKS,Android] Install cmake when provisioning Android SDK (#9139)\r\n* mono/mono@cb54c26f6c8 Bump bockbuild to fix environment variables expansion bug (#9178)\r\n* mono/mono@569bd3bc52f Revert \"[loader] LoadFrom of problematic images should reprobe\" (#9112)\r\n* mono/mono@1f44e26ab4f Remove ServiceControllerTest.cs. Mitigates https://github.com/mono/mono/issues/9002.\r\n* mono/mono@7b9563bc1c8 [profiler] Don't raise events until the profiler transitions to the ready state. Fixes #8866.\r\n* mono/mono@615252ca70b update to Android P final API. (#9077)\r\n* mono/mono@47fe82d812c Merge pull request #9018 from monojenkins/backport-pr-8092-to-2018-04\r\n* mono/mono@0fd16dfa237 Merge pull request #9001 from monojenkins/backport-pr-8348-to-2018-04\r\n* mono/mono@56521df97b1 [arm64] Fix llvm jit support.\r\n* mono/mono@e129a25c91c [System.Runtime.Serialization] Makes more APIs work for mobile\r\n* mono/mono@543b6872feb Bump msbuild to track mono-2018-04\r\n* mono/mono@ed7cb7a6b7f [runtime] Add llvm aot mode with graceful fallback\r\n* mono/mono@33a9dca4932 Add PowerPC configure flags for LLVM, and clean up failover linker flags (#8996)\r\n* mono/mono@7008c37886e Merge pull request #8992 from monojenkins/backport-pr-8285-to-2018-04\r\n* mono/mono@854f3e29524 [mono-api-html] Fix markdown diff which was reversed\r\n* mono/mono@c54cae3345e [bitcode] Fix the generation of invalid llvm IR for some Span code.\r\n* mono/mono@5d60a2b8432 [mono-api-html] Update tool to optionally output markdown\r\n* mono/mono@1f3334fd93a Merge pull request #8974 from mono/backport-fix-gh-8712-to-2018-04\r\n* mono/mono@23c06f5e547 Merge pull request #8973 from monojenkins/backport-pr-8813-to-2018-04\r\n* mono/mono@9def5c0a11a [System.IO] Dispatch events asynchronously in FileSystemWatcher.DispatchEvents()\r\n* mono/mono@c903094761a [System.IO] Prevent the CoreFX bridge from even try-entering a monitor.\r\n* mono/mono@462f5112228 [System.IO] Finish initializing all FileSystemWatchers, not just the first one\r\n* mono/mono@a08e664e4ce [System.Windows.Forms] fix PropertyGrid\r\n* mono/mono@2987232bc14 Merge pull request #8953 from directhex/fix-2018-llvm\r\n* mono/mono@5ddc0c5fdf9 Fix building of LOADED_LLVM on Linux, from duplicate eglib linking (#8287)\r\n* mono/mono@b2ded076c9d [build] Includes tools used by XI/XA build CI in build profile\r\n* mono/mono@fa9903bcc1d [2018-04] Finalize merp integration (#8870)\r\n* mono/mono@820bff26b3b [2018-04] Sanitize TLS handling in the profiler. (#8881)\r\n* mono/mono@6d28c8f9621 Bump API snapshot submodule\r\n* mono/mono@b2cac0129fe Bump cecil\r\n* mono/mono@8c55e41d50f Bump linker to resolve XA issues\r\n* mono/mono@ba806e58df0 [runtime] Gracefully handle crashes before mono-state dependencies initialized (#8843)\r\n* mono/mono@0e0bf762eda [corlib] Update TaskFactory tests to accommodate running on different sync context\r\n* mono/mono@46e3bd5099f [corlib] Disables test which depends on LogicalCallContext for mobile (#8835)\r\n* mono/mono@67c1e412e2b [monitor] Fix abort of synchronisation wrapper (#8828)\r\n* mono/mono@b705cec3c73 Merge pull request #8836 from monojenkins/backport-pr-7412-to-2018-04\r\n* mono/mono@a18994cc412 [MacSDK] Update Nuget to 4.7.0\r\n* mono/mono@efe1fdeb9de [loader] LoadFrom of problematic images should reprobe\r\n* mono/mono@993fc87b3f9 [debugger] more locking and avoid race around mono_threads_join_lock & loader lock\r\n* mono/mono@737ecd10338 [debugger] Add locking around tls->frames usage/freeing\r\n* mono/mono@09855094c15 [android] Fix truncating of messages longer than 4096 characters (#8762)\r\n* mono/mono@419d3136fe9 mkbundle interop changes\r\n* mono/mono@97101d40aac don't fail on unsupported ipv6 in BeginConnect\r\n* mono/mono@4785686a4de Backport \"Implement Freeform Unmanaged Error\" to 2018-04 (#8688)\r\n* mono/mono@61c25c4e10e Added corlib .sources files for the ORBIS profile (#8786)\r\n* mono/mono@99fedb1741f [aot] Fix encoding/decoding of types with custom modifiers. (#8729)\r\n* mono/mono@32ae8ad5288 Bump bockbuild to get Pango patch\r\n* mono/mono@c1ef203b2ca [corlib tests] improve ThreadPrincipalTests regarding SynchronizationContext (#8761)\r\n* mono/mono@a7160188e5c [ci] Fix URL for apidiff/csprojdiff report\r\n* mono/mono@ef73a4955df Bump bockbuild to pull in GTK userSpaceScaleFactor deprecation warning fix\r\n* mono/mono@769481d834c [Mono.CSharp] Mimic the settings from System to track the feature flags, fixes GitHub #8698 (#8706)\r\n* mono/mono@4e47c8dfdca Bump msbuild to track mono-2018-02 (#8683)\r\n* mono/mono@c4492e09495 Merge pull request #8656 from monojenkins/backport-pr-8438-to-2018-04\r\n* mono/mono@ab6962b1838 [System] Add regression test for #8417.\r\n* mono/mono@ad1a10e4a41 [System] When doing process redirect, use Console.OutputEncoding instead of Console.Out.Encoding. Fixes #8417.\r\n* mono/mono@ecf6b882051 Bump msbuild to track mono-2018-02 (#8631)\r\n* mono/mono@f3577389f6d Merge pull request #8595 from monojenkins/backport-pr-8580-to-2018-04\r\n* mono/mono@9a4c8f33987 nuget-hash-extractor: Add msbuild extensions nuget version from\r\n* mono/mono@f42debee5ee nuget-hash-extractor: Add msbuild extensions nuget version from\r\n* mono/mono@9ca82d47eea nuget-hash-extractor: Add `all` option to emit all 3 lists\r\n* mono/mono@ce195600a3f nuget-hash-extractor: Improvements for better, deterministic output\r\n* mono/mono@da473eaff56 nuget-hash-extractor: Sort the lists for easier reviews\r\n* mono/mono@858aa226dc4 [native types] fix nfloat:NaN on arm64 JIT and interp (#8565)\r\n* mono/mono@fd09fd9d444 [sdks] fix $(mktemp) usage on older versions of macOS (#8521)\r\n* mono/mono@12a21428529 [2018-04] [arm64] Interp entry trampoline (#8484)\r\n* mono/mono@c7b237f1be7 [2018-04] [interp] Enter in the interp through a single generic trampoline (#8453)\r\n* mono/mono@0ebfd3e385a Merge pull request #8471 from monojenkins/backport-pr-8306-to-2018-04\r\n* mono/mono@50d84a37193 Only show config.log when running on bots.\r\n* mono/mono@3e566852dc4 [sdks] Wrap configure to provide better output.\r\n* mono/mono@61fa43b9099 Merge pull request #8423 from luhenry/backport-pr-8411-to-2018-04\r\n* mono/mono@196ea0219b3 Merge branch '2018-04' into backport-pr-8411-to-2018-04\r\n* mono/mono@b7db3364a0d [2018-04] Backport float32 changes. (#8398)\r\n* mono/mono@20ae78fcc83 Merge pull request #8394 from monojenkins/backport-pr-8318-to-2018-04\r\n* mono/mono@a5af7f28dc3 [arm] Fix a regression introduced by: (#8414)\r\n* mono/mono@869e019e158 [mini] Add regression test for punting a type system check.\r\n* mono/mono@3ddda667e12 [mini] Don't verify types if you store to a pointer byref. Workarounds #8403.\r\n* mono/mono@599f3dd3afe [watch] Align cinfo->stack_usage to 16 on watchos. (#8375)\r\n* mono/mono@efdd8353ed3 [packaging] Apply F# patch that fixes #8310 (#8400)\r\n* mono/mono@cf3e776887f [2018-04] [runtime] Add a signal handler for sigterm (#8384)\r\n* mono/mono@38ffddd6c74 [runtime] Set the error if the class has a failure.\r\n* mono/mono@f2943b182aa [runtime] Use m_class_has_failure ().\r\n* mono/mono@584b77e4024 [runtime] Handle failed classes in mono_type_get_checked (). Fixes https://github.com/mono/mono/issues/8311.\r\n* mono/mono@34bb601d181 [sdks] Match more closely the pre-SDKs configure flags passed to LLVM (#8381)\r\n* mono/mono@b759166b96e [System.Net] do not use Thread for SocketTest.TestSelect1 (#8368)\r\n* mono/mono@b7015d6fd2e Merge pull request #8336 from monojenkins/backport-pr-8302-to-2018-04\r\n* mono/mono@68f94932b7b Remove unused signal.h include in interp.c\r\n* mono/mono@de3c8c587a6 [corlib] Disable failing test on XA (#8353)\r\n* mono/mono@766778b5453 Fix mono_perfcounter_instance_exists to match prototype when #ifndef DISABLE_PERFCOUNTERS.\r\n* mono/mono@3693fb14f4b [sdks] Fix mktemp parameters (#8323)\r\n* mono/mono@98a3dd7f34a [corlib] Fix TimeZoneInfo.Local when /usr/share/zoneinfo is a symlink (#8305)\r\n* mono/mono@32ba15ee0be [corlib] SynchronizationContext does not work on non-root AppDomain on Android (#8297)\r\n* mono/mono@0931f21c4c5 [w32file-unix] fix mistake in 8430155946c31f0f3f5f04017eebd79ac15e566d (#8300)\r\n* mono/mono@85e13e6e2f0 [2018-04] [runtime] Add public API to set the pending exception. (#8279)\r\n* mono/mono@d835b7d55f0 [2018-04] Fix timestamp for file copy (#8248)\r\n* mono/mono@1d946e0f389 [sdks] Fix typo + Fix verbosity of unzip-android-archive.sh (#8244)\r\n* mono/mono@bfa85bcaaa0 [msvc] Update csproj files\r\n* mono/mono@ecd24fa6b53 Merge pull request #8204 from monojenkins/backport-pr-8202-to-2018-04\r\n* mono/mono@eee8ff7cfc3 [system.net] disable some tests to unblock XI integration\r\n* mono/mono@99a992605f0 [System.Net.Http] Use '*' as the host instead of '+' in the tests. Fixes xamarin/maccore#673.\r\n* mono/mono@13aa6b71992 [eglib] GMarkup: allow all ASCII NameStartChar and NameChar except ':'\r\n* mono/mono@3472efcdf98 [sdks] Add ANDROID_BUILD_TOOLS_DIR to differentiate it from ANDROID_BUILD_TOOLS_VERSION (#8194)\r\n* mono/mono@1029de31472 [sdks] Fix typo (#8188)\r\n* mono/mono@28597809271 [corlib] Make more crypto oids work on mobile profiles when not linked out\r\n* mono/mono@61ab3f7a341 [2018-04] [sdks] Add support for building llvm unless the USE_PREBUILT_LLVM Make.config var is set. (#8148)\r\n* mono/mono@6d5d7b57f22 [interp] support r4 (single) in stelem instruction\r\n* mono/mono@f710b2c8e5d [llvm] Increase the inline limit when using llvm in jit mode. (#8167)\r\n* mono/mono@e50ce8ad663 [mcs] Fixes parameter check for interface types used with default parameters\r\n* mono/mono@b8187777055 [System] Don't use http://www.mono-project.com for test (#8147)\r\n* mono/mono@05ed822a484 [corlib] Implements CryptoConfig::AddAlgorithm on all profiles\r\n* mono/mono@0a5fdb5841f [2018-04] [Facades] Add System.Drawing.Common on mobile only (#8129)\r\n* mono/mono@13183bc82b9 [2018-04]  [corlib] Enable machine.config dependant version of CryptoConfig for net_4_x profile only (#7974)\r\n* mono/mono@147e34f2542 [mcs] Adds private protected modifier to the parser only\r\n* mono/mono@561092003ca [w32file] Fix memory leak (#8113)\r\n* mono/mono@6cdbc561fca [sdks] Fix arguments passed to llvm on Linux (#8110)\r\n* mono/mono@0dba58a7345 [2018-04] more iOS sdk backports  (#8063)\r\n* mono/mono@c0af9ad2cc9 [mcs] Fixes codegen when probing reference type expression is known to pass and pattern variable has to be created (#8086)\r\n* mono/mono@88b6094e06c [System] Disables compiled regex (#8088)\r\n* mono/mono@4fbdeebbe8a [mcs] Implements C# 7 digits separators (#8098)\r\n* mono/mono@bd8731da012 [interp] use same domain as transform phase to register debug data for a method\r\n* mono/mono@ea838e84f1b [SDKS] fix Linux (and possibly other OSes) build for Android (#8043)\r\n* mono/mono@c3ae712ab13 [mcs] Implements C# 7.2 stackalloc span conversion in conditional expression\r\n* mono/mono@7af9ad8cdb6 [interp] workaround undefined behaviour in r8 to u1 cast\r\n* mono/mono@5921faad1cd [runtime] Fix --disable-btls.\r\n* mono/mono@4bad0d67655 [mcs] Implements C# 7.2 conditional ref expression\r\n* mono/mono@b0aaec8e96b [interp] do not bake object reference into code stream\r\n* mono/mono@e0b0a87e65f [sdks] Use wget in place of curl, it's installed by default on Linux (#8059)\r\n* mono/mono@b8fb7b5e18d [System]Fix memory leak in the web stack related to `Task.Delay` (partial fix of #7356).\r\n* mono/mono@8a20f0dfffb [SDKS] Fix Android SDK build on Linux (#8024)\r\n* mono/mono@04529e90e24 [interp] fix i4<>i8 conversion for builtin types, it was inverted (#7987)\r\n* mono/mono@83d7bc1a0cd [sdks] Fix MXE_PREFIX for XA (#8009)\r\n* mono/mono@d1c10f86936 [sdb] Add reference counting for single step requests, they can be accessed concurrently by the single step processing code and the event request clearing code. Fixes #7137. (#7971)\r\n* mono/mono@e9b1c90e9d5 [2018-04] [sdks] Add provisioning for Android SDK and NDK (#7978)\r\n* mono/mono@59e6eb29e61 [2018-04] [Facades] Add System.Memory facade to mobile profiles (#7968)\r\n* mono/mono@5053d17e50f Bump version to 5.14 (#7954)\r\n* mono/mono@9cd9e3b0a13 [ppc] use ucontext_t\r\n* mono/mono@90b49aa3aeb Merge pull request #7946 from kumpera/wasm_fix_a_few_issues\r\n* mono/mono@21a9412a676 [sdb] Fix --enable-minimal=soft_debug build. Fixes #7920. (#7945)\r\n* mono/mono@95276e9ddb3 Merge pull request #7943 from filipnavara/corefx-sd-tests-1\r\n* mono/mono@cdea795c0e4 [wasm] Make RuntimeInformation properly detect WebAssembly.\r\n* mono/mono@d8648776cc6 [wasm] Bump corert to pick fix for TaskCreationOptions.LongRunning. Fixes #7864.\r\n* mono/mono@106ef365e31 [wasm] Disable the degraded alloc warning under wasm. Fixes #7661\r\n* mono/mono@2bf9a42fd3a [wasm] Fix the build.\r\n* mono/mono@5bdb87b6a67 [wasm] emcc has a broken clock_getime. Disable its usage.\r\n* mono/mono@a810739246b Include CoreFX GraphicsPath and Region tests.\r\n* mono/mono@4723e6603e6 Merge pull request #7915 from alexischr/fix-gh-7568\r\n* mono/mono@2b4208feda5 [System.Windows.Forms] Set NotifyIcon.Icon in test to prevent warning\r\n* mono/mono@a914dbf1734 [System.Windows.Forms] Dispose forms opened during two tests\r\n* mono/mono@fcd52894d9b [System.Drawing] Remove failing jpeg flags tests (#7931)\r\n* mono/mono@254013b0fdf [runtime] Fix class visibility check for protected nested classes. (#7907)\r\n* mono/mono@ebef3ec4b18 [msvc] Update csproj files (#7929)\r\n* mono/mono@2cbd1706dcc [System.Drawing] Enable corefx xunit tests (#7924)\r\n* mono/mono@4d78aaf7b46 [genproj] When using fallback profile selection don't build the projects that were missing a profile (#7926)\r\n* mono/mono@1931cb1dcbc [Tests] Disable hijacking.exe and Jittailcall2.exe tailcall tests. (#7922)\r\n* mono/mono@938415c6d39 [test-runner] Don't output test result xml when no tests are run\r\n* mono/mono@a5a496695a0 Disable building btls/ and support/ on the bcl build, they are not needed. (#7921)\r\n* mono/mono@2e0182b5c06 Implement Field SetValueDirect on non-struct targets. Add test case from roslyn issue 19038. (#7866)\r\n* mono/mono@88cab36c200 [sdks] add Make.config to ignore file (#7901)\r\n* mono/mono@5c839fc1097 Bump msbuild to track xplat-master (#7900)\r\n* mono/mono@f83fbbd9b8a [sdks] Fix LLVM build for XA (#7917)\r\n* mono/mono@a36d08a55ac [perfcounters] fix alignment issue on 32bit\r\n* mono/mono@1e1893d683f [System.IO] Don't throw exception when FileSystemWatcher is disposed while the backend is still trying to use it\r\n* mono/mono@a1751d91c86 Revert \"Disable some flaky tests.\"\r\n* mono/mono@2c14b1f82c2 Revert \"Disable a flaky test.\"\r\n* mono/mono@86df754848d Revert \"Disable bug-80307.exe\"\r\n* mono/mono@60707875d59 Revert \"[sdks] Disable btls and support/ on the bcl build, they are not needed. (#7892)\" (#7904)\r\n* mono/mono@6f0fba8961a [Tailcall] Bring coreclr tests for tail calls to Mono source tree (#7204)\r\n* mono/mono@765ea257723 [sdks] Fix LLVM build on Linux for XA + Fix MXE usage on non-Darwin platforms (#7910)\r\n* mono/mono@1d36e15392d [msvc] Update csproj files\r\n* mono/mono@81a781bb02f add some OpenBSD patches (#7699)\r\n* mono/mono@792196320f4 [sdks] Disable btls and support/ on the bcl build, they are not needed. (#7892)\r\n* mono/mono@573e460e97c Fix tarball build\r\n* mono/mono@7ec24235351 [packaging] Bundle the msvc compiled monograph.exe on Windows\r\n* mono/mono@3dad276e2d2 Bump api-snapshot\r\n* mono/mono@77b2db73aaf Add BindingFlags.DoNotWrapExceptions (#7863)\r\n* mono/mono@9ff460b0049 [sdks] Disable wasm on the ios sdk lane. (#7894)\r\n* mono/mono@e70a872c533 [sdks] Fix usage of MXE for XA (#7897)\r\n* mono/mono@5841ffff038 [System.Windows.Forms] Ignore non-visible controls when computing ScrollableControl canvas size (#4247)\r\n* mono/mono@407e254643c [sdks] Pass LLVM_SRC from XA to use `xamarin-android/external/llvm` + Pass IGNORE_PACKAGE_MXE from XA + Only checkout specific MXE and LLVM commit when cloning (#7893)\r\n* mono/mono@6c901dbfc58 [sdks] Pass MXE_SRC from XA to use `xamarin-android/external/mxe` (#7888)\r\n* mono/mono@ff40ceff387 check for iconv only once (#7873)\r\n* mono/mono@e3e1fe1c16f [corlib] Moves DynamicMethod to mscorlib to work better with wasm (#7875)\r\n* mono/mono@ada6edbad87 [bcl] Fix the compilation of System tests in the mobile profile. (#7882)\r\n* mono/mono@2f66873ab2a [msvc] Update csproj files (#7811)\r\n* mono/mono@753cc874f64 [jit] Add signature checking for CALLI. (#7832)\r\n* mono/mono@ab62d30edb0 [genproj] Move obj to common folder and remove unnecessary properties (#7870)\r\n* mono/mono@8c86a805ff7 [mcs] Updates common array bounds unification to use universal type comparer\r\n* mono/mono@b42086d4504 Use __PASE__ for things i needs that AIX doesn't (#7858)\r\n* mono/mono@f00eba8a7cc Whitelist illinkanalyzer in macOS package (#7861)\r\n* mono/mono@4a247e7ed9a Merge pull request #7740 from alexischr/corefx-unknownunix-fsw\r\n* mono/mono@03a153c7b36 Bump API snapshot submodule\r\n* mono/mono@e6f90edfcd1 [System]: Disable the System.Net.ServicePoint tests from corefx.\r\n* mono/mono@0f9b7f730f8 mono_perfcounter_counter_names returns incorrect names, and restructure slightly for clarity (#6355)\r\n* mono/mono@9b36f1452f4 wcf: fix index of message body parts. Do not use MessageBodyMemberAttribute.Order as index.\r\n* mono/mono@3c8bf90a40e [System.IO] Use CoreFX FileSystemWatcher stub for mobile profile\r\n* mono/mono@6caa9bd8812 Disable a flaky FileSystemWatcher test\r\n* mono/mono@7e31c5d11f7 Merge pull request #7849 from marek-safar/corefx-fixes\r\n* mono/mono@294707cf882 [build] Fixes bootstrap invocation of cil-stringreplacer\r\n* mono/mono@dc1ef2ea3a2 [runtime] One more MonoClass getter fixup (#7836)\r\n* mono/mono@dc6700a799f [corlib] Restores ConcurrentDictionary serialization support.\r\n* mono/mono@32e6bccc2d1 [System] Makes TLS providers linker friendly\r\n* mono/mono@554690a64cd [build] Update monolite package to support cil-stringreplacer (#7847)\r\n* mono/mono@96e8fa67e2f [bcl] Fix Cscompmgd/I18N.Rare not having any tests (#7842)\r\n* mono/mono@3157302581e Pull in bug 53272 fix\r\n* mono/mono@16d5c314094 [ci] Bundle nunit xml results in a .tar file (#7843)\r\n* mono/mono@5e1acb47f5d [genproj] Deduplication of project references (#7844)\r\n* mono/mono@b20d5ce1e5d [runtime] Rework how the native-to-managed eh callback is called. (#5837)\r\n* mono/mono@2b663424a04 [threads] Remove suspicious mono_gchandle_free\r\n* mono/mono@f66032b7c0f Fix F# build. (#7826)\r\n* mono/mono@e610e443cd6 Structure field that cannot be marshalled throws exception instead of aborts\\n Alllow structure pointer conversion for blittable multi-dimentional arrays (#7794)\r\n* mono/mono@febd5ac5358 MonoClass getters mop-up PR (#7806)\r\n* mono/mono@a5099ca2a44 [mini] Use MonoClass getters in method-to-ir.c (#7772)\r\n* mono/mono@2ce121ab7b1 [sre-save] Remove type_token assignment in mono_image_fill_export_table (#7803)\r\n* mono/mono@2f5077a1fba [sdks] Fix the ios sdk build. (#7801)\r\n* mono/mono@dde9ee5e79e [w32handle] Lower minimum memory usage (2nd attempt) (#7508)\r\n* mono/mono@30903764c24 [sdks] Fix Android build for toolchain (#7817)\r\n* mono/mono@2709d2309e6 [mini] Use MonoClass getters on non-AMD64 platforms (#7799)\r\n* mono/mono@506fc0b522f [genproj] Deduplication of sources (#7810)\r\n* mono/mono@331f3d9f27e Fix warnings and cleanup style. (#7800)\r\n* mono/mono@954911d3f1a Genproj updates for BCL build in Windows Visual Studio (#7755)\r\n* mono/mono@431c67415cf [mini] Use MonoClass getters in aot-compiler.c (#7773)\r\n* mono/mono@76f01933880 [ci] For checked builds, pass -k to make (#7802)\r\n* mono/mono@43d9c4737bc Imports FtpWebRequest from CoreFX (#7644)\r\n* mono/mono@bc25029b580 Disable some flaky tests.\r\n* mono/mono@901ccebb0ac [sdks] Disable the interpreter on ios device builds. (#7793)\r\n* mono/mono@e3c284c4e36 CodeOwners update (#7798)\r\n* mono/mono@74daf13fb29 Harden JIT job control against cctors deadlocking. (#7423)\r\n* mono/mono@7bb6e59e38c [runtime] Fix lock tracer compilation error (#7767)\r\n* mono/mono@1bdcf191697 [corlib] System.Collections from CoreFX (#7478)\r\n* mono/mono@3aeab61192b [mini] Use MonoClass getters in a few files (#7771)\r\n* mono/mono@158bb416eb0 [interp] Use MonoClass getters (#7774)\r\n* mono/mono@b06de64bf86 Fallback to listing drives in My Computer using System.IO.DriveInfo.\r\n* mono/mono@b8fdce6c053 [Tailcall] Fix virtual generic methods that F# tests uses. (#7524)\r\n* mono/mono@066ce338255 Add tailcall support & fix floating point ABI (#7695)\r\n* mono/mono@d233bdbf998 [icall] remove DISABLE_PROCESS_HANDLING (#7779)\r\n* mono/mono@7de72fbf3f0 [interp] support increment and decrement of nint/nuint\r\n* mono/mono@d4247747510 [interp] improve error message and add another interp_in signature\r\n* mono/mono@dfabaa59175 Remove incorrect docs (#7784)\r\n* mono/mono@67e995c6e27 [interp] Improve mixed mode execution support, using full-aot+interp as the configuration. (#7764)\r\n* mono/mono@9c63d1bf9df [sdks] Fix Android build for mxe (#7781)\r\n* mono/mono@8a3b4bf2af0 [sdks] Fix Android build on Linux (#7775)\r\n* mono/mono@95d450660be [interp] move variable decl into ifdef to avoid unused warning (#7763)\r\n* mono/mono@392e1c368c3 [Tailcall] Proper fix for F# regression, at least some architectures. (#7658)\r\n* mono/mono@45c94b22ab3 [sdks] Fix Android build (#7768)\r\n* mono/mono@d856789ccd4 Bump corefx to bring a fix for #7696\r\n* mono/mono@9bc0a49bc78 [runtime] Fix the cross compiler build. (#7754)\r\n* mono/mono@3d2891097a7 Merge pull request #7748 from lambdageek/fix-gc-descr-object-c\r\n* mono/mono@3283af3449d [msvc] Update csproj files\r\n* mono/mono@3ec9fda3718 [System.Core] Guard against embedded NUL in strings for MemoryMappedFiles (#7318)\r\n* mono/mono@6822a57663b Disable a flaky test.\r\n* mono/mono@54e3eccc5d8 [build] Bump bootstrap mcs dependency for mcs builds to catch up with e6fb82b2c7b4a8f42827f9a952dec0a03ae9c8c9\r\n* mono/mono@99d31278e35 [interp] always set old_frame in interp_entry (#7757)\r\n* mono/mono@c2698519b0c [interp] Allocate ThreadContext structures on the heap instead of on the stack, the latter doesn't work in mixed mode if the native frame gets unwound during exception handling, so the set_context (NULL) call is never executed, leaving a dangling ref in the tls variable. (#7747)\r\n* mono/mono@678576f5a8c [System.Windows.Forms] Reset check state of item when removing it. (#7744)\r\n* mono/mono@87fd0714126 Revert \"Swap Close/Dispose calls so that the receiver_thread_main loop will be properly interrupted (#7390)\" (#7745)\r\n* mono/mono@9b702e8052f Bump API snapshot submodule\r\n* mono/mono@e6fb82b2c7b Bump bootstrap dependency\r\n* mono/mono@7a9f8405d49 [corlib] String from CoreFX/CoreRT\r\n* mono/mono@20ba08543e4 [corlib] Use UTF8 bytes convertor directly\r\n* mono/mono@d9e3d7c4075 Remove dead code (#7738)\r\n* mono/mono@c732bd47584 This fixes an issue we are seeing with VSTU debgugging in Unity. (#7634)\r\n* mono/mono@7faa4620462 Fix bug #60843 and add test (#7640)\r\n* mono/mono@d26fb8a3eb3 Forward mono_string_new_wrapper to mono_string_new for error handling. (#7718)\r\n* mono/mono@d5d1fb290d0 Bump roslyn-binaries to include missing file\r\n* mono/mono@dd09fa9982d [mcs] Adds cloning for TupleLiteralElement expressions (#7746)\r\n* mono/mono@3fa3592376c Uncomment and fix ServiceHost creation via ServiceFactory in SvcHttpHandler.cs (#3465)\r\n* mono/mono@74dd088d400 [metadata] Add mono_class_publish_gc_descriptor\r\n* mono/mono@f42fdeca61b [mcs] Fixes codegen for null fixed string statement\r\n* mono/mono@8e3be153357 [metadata] Move mono_class_compute_gc_descriptor back to object.c\r\n* mono/mono@9e4eb1ca69a Bumps roslyn to 2.7.0\r\n* mono/mono@dc0cf83b3a8 [arm] fix stack alignment for structs (#7691)\r\n* mono/mono@0dec8fda18c [sgen] Fix scanning of large arrays (#7672)\r\n* mono/mono@39c9f9d935d Merge pull request #7724 from lewurm/wildcardconnect-watchos\r\n* mono/mono@e40c97e7718 [interp] Disable pinvoke3.exe test on x64 (#7739)\r\n* mono/mono@06463f4ca2a [Tailcall] Add interface tailcall tests, and generics thereof. (#7703)\r\n* mono/mono@9914517a125 Remove obsolete code for getting TLS values from other threads. (#7714)\r\n* mono/mono@9fe7008d97f [HttpClientTest] remove WildcardConnect () on WatchOS\r\n* mono/mono@7dea71ce64b Touchup for https://github.com/mono/mono/pull/7599/\r\n* mono/mono@37660898982 Merge pull request #7599 from lambdageek/abort-cctor-no-protection\r\n* mono/mono@f617929e9e2 [runtime] Don't use clock_gettime on WatchOS and tvOS.\r\n* mono/mono@081c79e6871 Add csc-dim script to .gitignore\r\n* mono/mono@7cc78d08b09 Merge pull request #7707 from mono/fix-boottime-osx-10.7\r\n* mono/mono@9cf2550ba2d Update man page, MONO_DISABLE_AIO is now MONO_ENABLE_AIO. (#7715)\r\n* mono/mono@16e6e7df70a [sgen] Finish thread pool work before shutting down threads (#7647)\r\n* mono/mono@e480620040e [System]: Fix a race condition that was exposed by #7358 (see #7668).\r\n* mono/mono@120aa248fa5 [sdks] Fix building the ios device tests. (#7706)\r\n* mono/mono@a5c6f5c5ca2 [w32file] do not discard sub-second resolution for access- and writetime if possible (#7650)\r\n* mono/mono@b37166882de [runtime] Fix file handle leak with dedup+aot (#7694)\r\n* mono/mono@feb8b568bab [mprof-report] Fix reading of TYPE_JITHELPER events in v13 files. (#7677)\r\n* mono/mono@b77313855c2 [loader] Don't load framework Facade assemblies that are older than expected. (#7663)\r\n* mono/mono@62921c8a62e [runtime] Don't use clock_gettime in MacOS.\r\n* mono/mono@7528656820c [msbuild] Bump msbuild to pick up fix for issue #7184 (#7665)\r\n* mono/mono@53a59ccf766 [sdks] Fix building the ios tests. (#7701)\r\n* mono/mono@1c8b460b4cf [version.h] Support .git being a submodule (#7689)\r\n* mono/mono@e99ac890e6a Add csc-dim as a prototype if default interface implementation\r\n* mono/mono@7aeaafd2819 [runtime] Fix mono_msec_boottime () so it compiles on older ios versions, clock_gettime () is only available from ios 10. (#7671)\r\n* mono/mono@8ae317a1e82 [arm64] Add a known TLS offset. (#7530)\r\n* mono/mono@b6f56a115fc [Tailcall] Cleanup, handle varargs, cleanup varargs handling, be sure not to use unsupported tailcall_membase, pass r11 through, align patches. (#7600)\r\n* mono/mono@249a02d9366 Updates codeowners (#7679)\r\n* mono/mono@5232bef2825 Disable a flaky FileSystemWatcher test (#7578)\r\n* mono/mono@540ef385faa If a bad header is received from the client or the connection is broken, send an internal VM_DISPOSE command to shut down the debugger thread properly.  This prevents runtime hangs that occur during profile events after the debugger shuts down.\r\n* mono/mono@68a9bbe69f8 Update Server.py to run on both python 2 and 3\r\n* mono/mono@2f211770198 Merge pull request #7584 from alexischr/fix-gh-6940\r\n* mono/mono@fe3c5134bf5 Implement C#7 binary literals (#7659)\r\n* mono/mono@421e0174793 [System.Windows.Forms] Fix bounds manipulation in Control.DrawToBitmap (#7629)\r\n* mono/mono@d3e2518fb60 [sdks] Fix concurrent building of MonoAotOffsetsDumper.exe + Simplify building of support library (#7652)\r\n* mono/mono@e36148dbd26 [tests] Prevent starvation by thread doing GCs (#7651)\r\n* mono/mono@ec4c990af3e [System.Net] Replace use of obsolete `SupportsIPv6` property.\r\n* mono/mono@43415f5f2b5 [threads] Add mono_uninstall_current_handler_block_guard\r\n* mono/mono@92042c97323 [threads] Delay abort via handler block guard when in abort protected block.\r\n* mono/mono@b0734593de5 [tests] Run abort-cctor.exe on the coop Jenkins job\r\n* mono/mono@ea4274f2eb7 Revert \"[Tailcall] Proper fix for F# regression.\" (#7656)\r\n* mono/mono@fdbf51184ac [msvc] Update csproj files (#7654)\r\n* mono/mono@b2271853c33 [Tailcall] Proper fix for F# regression. (#7621)\r\n* mono/mono@9b3893f84a1 [tests] Class should be viable even if cctor is aborted in in nested finally clause\r\n* mono/mono@247a13b081f [System.Windows.Forms] Improve logic for closing complex ToolStripDropDown layouts. (#7630)\r\n* mono/mono@5d23a12446d [System.Windows.Forms] Unify layout engines for Controls and ToolStripItems (#7612)\r\n* mono/mono@6bdeea15030 [jit] Incorrect code under mono --trace. (#7627)\r\n* mono/mono@395b37c2865 Fix issue #7596 on Windows x64. (#7625)\r\n* mono/mono@5820d1fc668 [sgen] Use current nursery size when computing allowance (#7601)\r\n* mono/mono@52429673dc6 [mini] Don't inline methods if they're going to be instrumented for coverage. (#7554)\r\n* mono/mono@851b36ecb25 [mini] Improve error reporting by using MonoError around more places. (#7607)\r\n* mono/mono@6906c9dc40a  [interp] Don't crash when freeing delegate ftnptr  (#7586)\r\n* mono/mono@2883e562e2d Fix platform-specific build issues (#7342)\r\n* mono/mono@2d0eee9ae33 [jit] Fix partially shared constrained calls in llvmonly mode. (#7561)\r\n* mono/mono@ec319e6de7a [aot] Increase the buffer size in emit_exception_debug_info (). (#7638)\r\n* mono/mono@ff61c7751a6 [build] Fixes mcs only dist build\r\n* mono/mono@4b88e2a0e29 [System]: Introduce `WebCompletionSource<T>` and use it in `WebOperation`. (#7358)\r\n* mono/mono@29c2ba9387f Merge pull request #7520 from alexischr/use-coreclr-GetTickCount\r\n* mono/mono@7e3a1ddaa09 [mcs] Fixes parsing ref-struct with partial keyword\r\n* mono/mono@87282805504 [sdks] IOS fixes. (#7617)\r\n* mono/mono@40b53bd2e0e [corlib] Handle multiple segments in IsolatedStored::GetFileNames. Fixes bxc #11771\r\n* mono/mono@8ceead93e3e [Tailcall] Quick fix for building F#. Do not tailcall any method with a vtable_arg. (#7609)\r\n* mono/mono@1c88a115453 [Coop thread threadpool mmap] Convert more functions to coop/handle. (#7097)\r\n* mono/mono@239aad5265b [msvc] Update csproj files\r\n* mono/mono@34b4d35fb78 [runtime] Clean up symbol names to not pollute the global namespace.\r\n* mono/mono@1d70b627704 [profiler] Increment ref count of an image's method while we're keeping around pointers to it.\r\n* mono/mono@6b116cca186 [merp] only target macOS, HOST_DARWIN includes iOS etc. as well\r\n* mono/mono@40924c47ba0 [Mono.Data.Sqlite] Throw better exception for missing mobile support\r\n* mono/mono@a856f8d8e48 [Tailcall] Cleanup is_supported_tail_call, put more logic in it, and be sure not to tailcall_mem_base if not supported (i.e. virtual_ not just CALLVIRT) (#7608)\r\n* mono/mono@7e7d8a3b4fc [Facades] Make System.Net.Http.Rtc.dll a net_4_x only facade (#7590)\r\n* mono/mono@5f572ff7a62 [msvc] Update csproj files\r\n* mono/mono@6e246cf6134 [Facades] Move types from Facades into class libraries (#7574)\r\n* mono/mono@4e3389667f6 [System.Xml] Update source file location from commit d4816ef1abcfc5b3dea41a87fe5a7a4c4a3781ed\r\n* mono/mono@8c3d7c81af7 [System.Windows.Forms] Fix custom test targets in makefile. (#7571)\r\n* mono/mono@9dbd080c293 [System.Windows.Forms] Update code for top-level windows (#7570)\r\n* mono/mono@e85dbca0f2f Disable TestBug8592BasicOperations test\r\n* mono/mono@b1d2b858251 Make Form scaling tests platform independent.\r\n* mono/mono@cdb9b90baa4 Correcting typos for ISSUE_TEMPLATE.md (#7575)\r\n* mono/mono@99198da52be [msvc] Update csproj files (#7559)\r\n* mono/mono@16b3884854c Disable bug-80307.exe\r\n* mono/mono@a601516ca1f [tests] Disable delegate-15.exe in the full-aot profile. (#7529)\r\n* mono/mono@8f926ed4648 [ppdb] Set the column number in mono_ppdb_lookup_location ().\r\n* mono/mono@78de6719641 Swap bytes for port number as Win32 API returns in network order.\r\n* mono/mono@3b0c0bd1cff Build system tweaks for AIX (#7542)\r\n* mono/mono@486036b6964 Revert \"[Tailcall] Do not create never-executed trampoline for tail.call self. (#7331)\" (#7550)\r\n* mono/mono@06a4273d73c [mono-time] Replace mono_msec_boottime() with CoreCLR implementation. Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=58413\r\n* mono/mono@e456f910530 Bump api-snapshot\r\n* mono/mono@9a2b5324ee3 [Facades] Add missing Facades that exist in .NET 4.7.1 (#7541)\r\n* mono/mono@b6be2e11a79 [threads] Fix race between abort socket syscall and thread shutdown (#7507)\r\n* mono/mono@4ae98fb31b5 Merge pull request #7515 from kumpera/le_debugger_cleanup\r\n* mono/mono@868a402137d [metadata] split IL generation code into seperate compilation units. (#7487)\r\n* mono/mono@826f15a509a [interp] Fix return of value type from interp to native (#7519)\r\n* mono/mono@f24a6d622be gboolean g_is_usermode_native_debugger_present (void). (#7488)\r\n* mono/mono@03914603a3b [runtime] Add MS telemetry reporter for unmanaged exceptions (#7451)\r\n* mono/mono@d3a4e19f3ca Merge pull request #7533 from akoeplinger/disable-test\r\n* mono/mono@63e5e80d3a6 [bcl] Fix test build with mcs (#7512)\r\n* mono/mono@14485be705f [System.Windows.Forms] Fix lifetime of Graphics objects in TextBox controls (#7491)\r\n* mono/mono@b9d52fc4f12 [System] Disable SocketTest.AcceptBlockingStatus\r\n* mono/mono@91b64b4560b [System.Windows.Forms] Fix bugs in PrintPreviewControl. (#7493)\r\n* mono/mono@ee30689c181 Implement native ValueType Equals and GetHashCode support for pointer fields\r\n* mono/mono@4532cf5fd55 [interp] Fix stack usage after throw (#7461)\r\n* mono/mono@523ba159c2b [sgen] Fix the clearing of bits in the gc descriptor bitmap when using weak fields.\r\n* mono/mono@660e166c7b6 [eglib] Fix typo in g_assertf (#7458)\r\n* mono/mono@c745a9575d0 [jit] Move the check for open constructed types later in mono_jit_compile_method_with_opt (), this function can receive (#7494)\r\n* mono/mono@25f4ef27897 [wasm] Make switching between debug/release builds easy. Build pdb files.\r\n* mono/mono@eba41fd88a6 [wasm] Update SDK driver to handle debugging.\r\n* mono/mono@334ddbd3ef6 [wasm] Initial support for debugging.\r\n* mono/mono@1a56fe6a159 [wasm] Fix unwinding to work with the general unwinder.\r\n* mono/mono@ccbb873498b [interp] Fix pinvoke from dynamic methods\r\n* mono/mono@4ad92ef05f7 [interp] Fix detection of pinvoke call\r\n* mono/mono@940f2d1a9fe [interp] Fix runtime invoke of pinvoke method\r\n* mono/mono@e0f8597e9c9 Fix generated file when passing --bundled-header (#6736)\r\n* mono/mono@b4ee86154fc [Tailcall] tail.callvirt support for AMD64 JIT (#7426)\r\n* mono/mono@c2bf82fb98f [System]: WebRequestStream now throws correct exception on cancellation (#7074).\r\n* mono/mono@8e4f0d8ff44 [Tailcall] Do not create never-executed trampoline for tail.call self. (#7331)\r\n* mono/mono@ab67bcfd0bf Provide compile-tests-parallel that honors the command line so e.g. (#7479)\r\n* mono/mono@3e8f4f7db8d [msvc] Update csproj files (#7497)\r\n* mono/mono@a5f980dc00f [interp] Let the backend deal with thiscall cconv\r\n* mono/mono@8b2ca1344f7 [interp] Fix EH with exception thrown from icall\r\n* mono/mono@da7650d3d96 Bump API snapshot submodule\r\n* mono/mono@03b030d9213 TaskAwaiter from CoreFX\r\n* mono/mono@12557bec396 [metadata] An array is not an IEnumerator`1\r\n* mono/mono@1140ec53948 [test] An array is not an IEnumerator`1\r\n* mono/mono@c0a5753b02a [metadata] Add IEnumerator`1 to MonoDefaults struct\r\n* mono/mono@36a471f14e5 [System] Remove compiler config sections for types which cannot be instantiated\r\n* mono/mono@32d06fd8036 [corlib] Fix Type.GetInterface() to find implemented interface when \"ignoreCase: true\" is used (#7464)\r\n* mono/mono@1181815eeda [w32handle] Lower minimum memory usage (#7465)\r\n* mono/mono@e6de24c2d19 [build] Unify DEFAULT_REFERENCE handling so I can override it with TARGET_NET_REFERENCE for individual tools\r\n* mono/mono@73859e3df28 [msvc] Update csproj files\r\n* mono/mono@e64cd8cc8da [profiler] Use accessor functions for MonoClass fields\r\n* mono/mono@4e6f5f10fd2 nuget-hash-extractor: Add msbuild extensions nuget version from vs15.6 msbuild branch\r\n* mono/mono@45f30c307b9 nuget-hash-extractor: Change the nuget repo name to use for\r\n* mono/mono@695acd0a0b9 System.Text.RegularExpressions from CoreFX (#7363)\r\n* mono/mono@85b605042b7 [acceptance-tests] Actually disable gcsuppressfinalize.exe test\r\n* mono/mono@c89abe54670 Bump boringssl submodule.\r\n* mono/mono@47df243579f [mini] unpack function pointers for jump patching\r\n* mono/mono@095519c8996 [ppc] update define usages for creating/unpacking function descriptors\r\n* mono/mono@4fea7fb7451 [ppc] use new patching machinery\r\n* mono/mono@ffaf5ffe0f8 [mini-runtime] unbreak platforms where MONO_ARCH_HAVE_PATCH_CODE_NEW isn't defined\r\n* mono/mono@8ba4947f7a3 [metadata] Use MonoClass getters in the rest of metadata/ (#7354)\r\n* mono/mono@6f225e6176a [System.Windows.Forms] Fix inconsistent state of Document object (#7422)\r\n* mono/mono@9e1ba501ffd Fix for gcc 4.4; nominal support for older. (#7419)\r\n* mono/mono@56263d4a756 [mini] Virtual call target is never known, remove dead code. (#7424)\r\n* mono/mono@62c8557a7a3 [System.Security] Fixes decoding of CMS/PKCS #7 messages with an explicit cryptographic object identifier\r\n* mono/mono@02abf28216f [corlib] Ignore TimeZoneTest.TestCtors on iOS under certain conditions due to an Apple bug. (#7429)\r\n* mono/mono@d1ed53624bf [acceptance-tests] Disable gcsuppressfinalize.exe test that started failing\r\n* mono/mono@b664dfe79ff [System.Windows.Forms] Updated unit tests (#7405)\r\n* mono/mono@30ad2195339 [mixed mode] skip gsharedvt_out_sig_wrapper frames and improve regression test\r\n* mono/mono@dab1ffc081c [interp] use mini infrastructure for stack walking\r\n* mono/mono@a785bd16e94 Merge pull request #7401 from filipnavara/swf-layout\r\n* mono/mono@d2bf59dd3f4 PPC support for BoringTLS\r\n* mono/mono@ee4ed72695d [acceptance-tests] Add an env var to turn on some Mono debugging options. (#7386)\r\n* mono/mono@4af9e3a5114 [Coop] Convert System.Enum to coop/handle. (#7131)\r\n* mono/mono@7c34f0c7467 [packaging] Support setting the FULL_VERSION number via env vars (#7414)\r\n* mono/mono@f546b95edfe [runtime] Increase the BCL trampoline count (#7409)\r\n* mono/mono@fe95e4b34b0 [jit] Fix the patching of tail calls for gshared methods, the caller and the caller were using different instantiations to search the jump_target_hash.\r\n* mono/mono@56bf6d3a738 Bump API snapshot submodule\r\n* mono/mono@ff60734df40 Add unit test for TextBox.PreferredSize property and fix updating the preferred size cache on Text change.\r\n* mono/mono@58f25ff1f0f Add makefile rule to build and run the notepad sample.\r\n* mono/mono@7b6b6075672 Remove obsolete code from FlowLayoutPanel that is no longer necessary with the corrected nested layouts.\r\n* mono/mono@ae972579de4 When Form is set to AutoSize enforce it also as the minimum size for the window manager.\r\n* mono/mono@f1de56d31cb Update XplatUI backends to properly send WM_WINDOWPOSCHANGED for zero-sized windows.\r\n* mono/mono@e563776f62f Avoid couple of size recalculations by streamlining the SetBounds, SetBoundsInternal and SetBoundsCore methods. Now explicit bounds are only updated in SetBoundsCore, no more all the updating and restoring with UpdateBounds calls. Rely on the WM_WINDOWSPOSCHANGED message to be sent from XplatUI.SetWindowPos to call UpdateBounds. This avoids an explicit call to XplatUI.GetWindowPos and UpdateBounds in SetBoundsCore.\r\n* mono/mono@ff38080cc07 Fix for bug_82326 unit test.\r\n* mono/mono@af26d754ae1 Fix couple of relayouts causing incorrectly cached control preferred size. Fix events triggered in incorrect order when Control.Controls.Remove is called. Update Dispose behavior with events and exceptions to match the reference implementation more closely.\r\n* mono/mono@5feb428acd5 Update DisposeTest to work on latest version of .NET Framework.\r\n* mono/mono@4f3adb750d1 Add test for label self-sizing behavior.\r\n* mono/mono@376002afb4a Call LayoutEngine.InitLayout when appropriate and move the dist_right and dist_bottom calculation there.\r\n* mono/mono@a859588486d Add cache for PreferredSize value.\r\n* mono/mono@016a5a86792 Fix propagating layout to parents and then back to children when PreferredSize changes.\r\n* mono/mono@71931189fa7 Remove obsolete code for layout of AutoSize forms.\r\n* mono/mono@622ad5480da Unify the code for layout of anchored controls to avoid setting the bounds twice for controls with AutoSize set to true.\r\n* mono/mono@78ad684762f Fix the default layout engine and its quirks enough to pass all unit tests again.\r\n* mono/mono@cbb07605df2 Move GetPreferredSize implementations from container classes to respective LayoutEngine implementations. Rework the layout engines to use AutoSizeInternal property since TextBoxBase has its own AutoSize that should not be respected by layout engines. Rework automatic sizing behavior of TextBoxBase to return correct values. Rework TableLayout completely to use same code for layout and calculation of preferred size.\r\n* mono/mono@d758a6d65fb Fix updating panel references when assigning TableLayoutSettings to TableLayoutPanel.\r\n* mono/mono@71989c037e7 Ignore invisible controls in FlowLayout.\r\n* mono/mono@ca957c45b42 Apply size constrains to control sizes when calculating flow layout.\r\n* mono/mono@4b093a9d2d2 Apply size constrains to control sizes when calculating flow layout preferred size.\r\n* mono/mono@6943077ab90 Added missing support for flow breaks in FlowLayoutPanel's preferred size calculation.\r\n* mono/mono@eed14424e50 Add tests for FlowLayoutPanel.PreferredSize.\r\n* mono/mono@a3690115557 Apply the constraints when setting MinimumSize/MaximumSize and update the unit test to demonstrate it.\r\n* mono/mono@78f4b60e6ca Reduce memory pressure by reusing the LayoutEngine objects.\r\n* mono/mono@f56b7109424 Added missing PerformLayout() calls to Control.MinimumSize and MaximumSize setters.\r\n* mono/mono@18001b61a3a Apply Maximum/MinimumSize constraints when calculating the preferred size.\r\n* mono/mono@1417a68137c Update Label.InternalGetPreferredSize to take the proposed size into account.\r\n* mono/mono@73c8e1f6156 Fix Label automatic sizing code.\r\n* mono/mono@baf431b393a [metadata] Use mono_atomic_store_release to initialize gparam cache\r\n* mono/mono@486be78f8a9 Update README.md with current directory structure\r\n* mono/mono@965a813f51d [msvc] Update csproj files (#7404)\r\n* mono/mono@0c6f7fa7c53 [mcs tests] fix runtime arguments passing to test harness (#7400)\r\n* mono/mono@9725d50c872 [sre] Use MonoClass getters in sre-save.c (#7352)\r\n* mono/mono@15578eab17c Bump corert\r\n* mono/mono@43ac34b36e2 [sdks] Unify targets to build runtimes (#7394)\r\n* mono/mono@e7ba41d14c7 Swap Close/Dispose calls so that the receiver_thread_main loop will be properly interrupted (#7390)\r\n* mono/mono@24c52e28c0b Use VSCMD_ARG_TGT_ARCH env in mkbundle on Windows when trying to autoetect target architecture. (#7281)\r\n* mono/mono@4874e18fd23 [corlib] Remove IVT for S.R.I.RuntimeInformation facade (#7385)\r\n* mono/mono@a9c37afaa45 [sdks] Fix the ios build.\r\n* mono/mono@16e5f049600 [interp] remove `method` field from `InterpFrame`\r\n* mono/mono@182a7485865 [runtime] Use MonoClass getters in object.c\r\n* mono/mono@2713dfc5776 [metadata] Move MonoClass:gc_descr and runtime_info initialization to class-init.c\r\n* mono/mono@9abe6ebf590 [appdomain] Fix path clobbering when trying to shadow copy siblings\r\n* mono/mono@76d5a164473 [Test] Reenable HttpRequestIgnoreBadCookies in monotouch. (#7330)\r\n* mono/mono@bbb882b0181 [sdks] Add watch device build.\r\n* mono/mono@b4d53f4d7c8 [sdks] Add watch simulator build.\r\n* mono/mono@dd5e5c8239d [sdks] Add tv simulator build.\r\n* mono/mono@6cc113a4b35 Ios sdk changes (#7258)\r\n* mono/mono@d8e49b1c279 Fix build from tarballs due to missing corefx.unix.sources\r\n* mono/mono@076557c37f4 Use attribute(deprecated) instead of attribute(error). (#7362)\r\n* mono/mono@68376f1f9b2 [msvc] Update csproj files (#7367)\r\n* mono/mono@319749c3148 Make it build.\r\n* mono/mono@d51e55d4a31 Bump linker to its latest master.\r\n* mono/mono@a838b6fb39e [interp] Enable more tests (#7315)\r\n* mono/mono@8ddcea29564 [profiler] A few low-hanging enhancements. (#7314)\r\n* mono/mono@ddf4e7be31b Update ppc badge to correct URL in README\r\n* mono/mono@db635611434 Merge pull request #7341 from akoeplinger/dont-throw-in-dispose\r\n* mono/mono@fa21013d7f0 Don't throw NotImplementedException in Dispose()\r\n* mono/mono@2c2fac29ebc [msvc] Update csproj files (#7337)\r\n* mono/mono@4f9b89adc17 CoreFX System.Runtime.CompilerServices (#7118)\r\n* mono/mono@cb956b58a6a Revert \"Revert \"[System.IO] Integrate FileSystemWatchers from CoreFX The FSEvent CoreFX watcher becomes the new default for MacOS.\"\"\r\n* mono/mono@fdefcf1f25b Fix build\r\n* mono/mono@2174a521a3e Revert \"[System.IO] Integrate FileSystemWatchers from CoreFX The FSEvent CoreFX watcher becomes the new default for MacOS.\"\r\n* mono/mono@f5b10f34a98 [System.IO] Integrate FileSystemWatchers from CoreFX The FSEvent CoreFX watcher becomes the new default for MacOS.\r\n* mono/mono@872c0488308 [wasm] Add a missing dependency in wasm.\r\n* mono/mono@8facc4afb2c [System]: Use new `WebCompletionSource` instead of `TaskCompletionSource`. (#7293)\r\n* mono/mono@dfe6e2d4a2c Merge pull request #7321 from mono/fix-linuxarm-native-stacktrace\r\n* mono/mono@9648645fb38 [System]: Enable some System.Net.Requests tests from CoreFX. (#7080)\r\n* mono/mono@ce2584911fb Fix gdb not being used for native stacktraces in some cases\r\n* mono/mono@096147d4286 [tests] Add --repeat parameter to enable runtime tests to run multiple times (#7291)\r\n* mono/mono@a5da7b21f4b  [runtime] Implement thread info flags and get rid of tools threads. (#7226)\r\n* mono/mono@e8141fc31da [sdb] Fix VirtualMachine.CreateEnumMirror () so it works with types from non-root domains.\r\n* mono/mono@b8da9736209 [marshal] Use MonoClass getters in marshal.c (#7253)\r\n* mono/mono@2f9b9142cde [msvc] Update csproj files (#7310)\r\n* mono/mono@6ca674ed686 Update the random checking code in autoconf to this decade (#7250)\r\n* mono/mono@b1801b78044 Always enable explicit null checks for AIX (#7300)\r\n* mono/mono@31c03a9cbe7 [System.Windows.Forms] Remove dependency on Hwnd objects outside of XplatUI code. (#7243)\r\n* mono/mono@6ac20034175 bump nunitlite\r\n* mono/mono@216b5c5db8b Merge pull request #7286 from lambdageek/fix-gh-7095\r\n* mono/mono@909b30b5ba0 [wasm] Fix v8 provisioning. (#7244)\r\n* mono/mono@cfaa28e1d81 [threads] Reduce race window with async abort (#7274)\r\n* mono/mono@f901c70548b [runtime] Don't assert in mono_class_is_assignable_from on iface gtd\r\n* mono/mono@8d37ddbf1dd [runtime] Use MonoClass getters in a few small files (#7254)\r\n* mono/mono@375304d501f [test] System.Type.IsAssignableFrom of gtd array special interfaces.\r\n* mono/mono@d63e8b6f5ae [corlib] CompareInfo from CoreFX (#7272)\r\n* mono/mono@c152f67574c Merge pull request #7263 from filipnavara/swf-carbontests\r\n* mono/mono@de8dc8311da Merge branch 'master' into swf-carbontests\r\n* mono/mono@ffbb3d90aee Merge pull request #7234 from filipnavara/swf-painteventend\r\n* mono/mono@5705b3d2070 Update CODEOWNERS\r\n* mono/mono@905077f90fc Add zlib.lib/zlibstatic.lib in Windows VS mkbundle build when using -z argument.\r\n* mono/mono@d69c1568f62 Remove mention of MONO_THEME from man page. (#7282)\r\n* mono/mono@dabdacd99b4 [metadata] Cache GenericParamInfo for anonymous gparams in MonoImage (#7155)\r\n* mono/mono@94f8dcf102d [wasm] Add LTO release configuration. Saves 15% of binary size. (#7221)\r\n* mono/mono@ba40177a44c Merge pull request #7269 from filipnavara/swf-theme-obsolete\r\n* mono/mono@8ebc608febb [Tailcall] Add 11 tests that are all runnable, never crash, are self checking. (#7232)\r\n* mono/mono@120be0fa4e6 Remove obsolete Nice theme code.\r\n* mono/mono@e2e66cb4f8f [wcf] use ConcurrentDictionary for wait handles (#7265)\r\n* mono/mono@8739c9b05a5 Bump api-snapshot\r\n* mono/mono@5aafe83bbdd Activate MDI child windows after showing them (fixes 7 unit tests failures).\r\n* mono/mono@cb48d78dc66 Return dummy value in XplatUICarbon.IconSize to let System.Windows.Forms.SystemInformationTest.IconSizeTest pass.\r\n* mono/mono@091595f3d8f Fix the default font value in test.\r\n* mono/mono@0d524452c54 Make XplatUICarbon.SetFocus send messages synchronously, fixes 9 unit tests.\r\n* mono/mono@bb99dcade28 Fix windows creating, destroying and message processing in Carbon driver to be stable enough not to freeze the test suite.\r\n* mono/mono@cde44408a4a Spit out the name of a test along with the error about undisposed forms.\r\n* mono/mono@0a2d57ed674 Call XplatUI.PaintEventEnd when an exception happens in OnPaint.\r\n* mono/mono@931380017f7 Unregister thread exception handler at the end of test.\r\n* mono/mono@0129c25e435 [tests] Use RemoteExecutor from corefx\r\n* mono/mono@335ca28eaf9 [llvm] Pass only the imt argument if both imt and rgctx arguments are required.\r\n* mono/mono@c99ac6a87e5 Add missing XplatUI.EndLoop call.\r\n* mono/mono@a974057d929 [sdks] Merge mxe-Win32 and mxe-Win64 targets since we are building both in XA anyway\r\n* mono/mono@1af92912945 Fix layout of ColorDialog on systems with different window border sizes.\r\n* mono/mono@657c7637fb2 Fix typo in implementation of Disposing property.\r\n* mono/mono@67e557fa2e3 Handle more special keys in KeysConverter to ensure compatibility with designer generated resource files.\r\n* mono/mono@6d889314b2e Remove obsolete theme code (disabled by commits 910c669 and 93724d2) and the last remaining usage of MONO_THEME environment variable.\r\n* mono/mono@67c1708677a Add PointerValue.Value to dereference and access pointer value. (#6840)\r\n* mono/mono@9bbe5e5e5f8 Bump API snapshot submodule\r\n* mono/mono@392d3452f24 [System.Net.Http] Better exception message for invalid header value\r\n* mono/mono@798c5efa52a Fix bug 18941: Marshal.OffsetOf and Marshal.SizeOf return incorrect results (#7142)\r\n* mono/mono@bfdbc1e6768 Update the method signatures in the new X11 backend.\r\n* mono/mono@1f0fc93de4c [sgen] Check if we are exceeding the worker count limit (#7180)\r\n* mono/mono@12cbe9a7bd2 [msvc] Update csproj files (#7238)\r\n* mono/mono@d45fb4e882f Fix xamarin-android issue 1130 and add test (#6326)\r\n* mono/mono@a32ca3e2c28 [tests] Avoid false pinning in weak-fields test\r\n* mono/mono@1e9816a10e9 [tests] Avoid false pinning in tests\r\n* mono/mono@38846ee7548 Properly handle non-quoted multipart content dispositions\r\n* mono/mono@bf12b6318af Simplify System.Windows.Forms XplatUI code by adding PaintEventArgs parameter to PaintEventEnd.\r\n* mono/mono@9c55770f3fd [icall table] add ldflags for bitcode\r\n* mono/mono@a9aa188ab22 Make field tokens sequential in SRE. (#7055)\r\n* mono/mono@1804219600c [xbuild] add property that is available in msbuild (#7223)\r\n* mono/mono@03371921a18 Problem building on Arch linux #7200 (#7230)\r\n* mono/mono@481827b6af1 [runtime] Don't prepend '0x' to %p-formatted numbers.\r\n* mono/mono@5eb41919438 [build] Remove multi stage build from Mono.Security (#7171)\r\n* mono/mono@218ffb98835 Merge pull request #7225 from alexischr/bump-bockbuild\r\n* mono/mono@2b068cb5a44 Fix some enable minimal. (#7195)\r\n* mono/mono@ca47362a921 Fix mono_arch_setup_async_callback and add mono_arch_setup_resume_sighandler_ctx on PPC (#7159)\r\n* mono/mono@6e0c91f0533 [interp] add another signature for interp_in wrappers\r\n* mono/mono@c382b03fd51 [coop] Rename mono_threads_is_coop_enabled to convay better its semantic (#7178)\r\n* mono/mono@8900231c8b0 [mini] More minor JIT cleanups. (#7130)\r\n* mono/mono@983966c7ca1 [bockbuild] Detect HTTP errors  when using curl\r\n* mono/mono@0a8126c2094 [WASM] Implement timers. (#7193)\r\n* mono/mono@f0b78251899 Updates to support building the BCL using Visual Studio 2017 on windows (#6877)\r\n* mono/mono@123d086e27e Merge pull request #6892 from lambdageek/use-getters\r\n* mono/mono@c1cbe060f61 Merge pull request #7218 from mono/revert-6018-fix_10087\r\n* mono/mono@49a1c8423cd Disable a flaky test on Windows https://github.com/mono/mono/issues/7199\r\n* mono/mono@199dad7e84e Revert \"Run the ProcessExit events in the threadpool and enforce a 3 seconds limit. Fixes #10087\"\r\n* mono/mono@72e5ca60b89 [msvc] Update csproj files\r\n* mono/mono@c6f91eaa58c Fix unknown-length requests being treated as if they are fully preloaded. (#6822)\r\n* mono/mono@119cf5259e9 [aot] Emit the same instances in hybrid aot mode as in full aot mode.\r\n* mono/mono@f90612e047e [bcl] Comment/stub out some unused icalls to prevent problems with AOT. (#7183)\r\n* mono/mono@3addbfe6279 Merge pull request #7181 from mono/bockbuild-download-using-curl\r\n* mono/mono@8a52f590fc4 Bump bockbuild for https://github.com/mono/bockbuild/pull/62\r\n* mono/mono@d4816ef1abc [System.Xml] Remove reflection calls for value has to be set\r\n* mono/mono@8ce0775a031 [jit] Disable partial sharing during JITting, its only been tested in full aot mode, and doesn't seem to work with JITted methods. (#7161)\r\n* mono/mono@2d2033e4401 Use proper sized integer for ioctlsocket on Win32. (#7153)\r\n* mono/mono@89804e62bbd [mono-api-html] Expand \"ignore\" functionality (#7154) (#7175)\r\n* mono/mono@df273181b52 Merge pull request #6018 from kumpera/fix_10087\r\n* mono/mono@03b6095e3eb [runtime] Magic interfaces requires the complex stelemref to handle arrays. Fixes gh #6266 (#7038)\r\n* mono/mono@761ddc60f9d [corlib] Make MissingMember exceptions working again after #6123\r\n* mono/mono@735337d5e68 [metadata] Implement MONO_CLASS_IS_INTERFACE(c) in terms of public API\r\n* mono/mono@bae5cd2d6e0 [metadata] (class.c) Use MonoClass getters\r\n* mono/mono@f6364860459 [metadata] add missing MONO_ENTER/EXIT_GC_SAFE guards around access(2) in is_file_writable (#7126)\r\n* mono/mono@d2383c037df [corlib] Support terminals without color support\r\n* mono/mono@705223f6d55 [interp] Use frame_addr as base pointer in more places (#7128)\r\n* mono/mono@5b0503a5b39 [profiler] Some minor housekeeping. (#7123)\r\n* mono/mono@ec2faf03880 [wasm] Fix master and add sample. (#7160)\r\n* mono/mono@ad03afd96ed [msvc] Update csproj files (#7173)\r\n* mono/mono@a85911f480e Merge pull request #6034 from alexischr/bug-59400\r\n* mono/mono@8658bb6048f [build] Don't add specific support file to all xunit test builds (#7163)\r\n* mono/mono@a19fad65f3f Fix copyright\r\n* mono/mono@7de96dd4121 Merge pull request #7150 from alexischr/bug-46473\r\n* mono/mono@5fabb059cfc Add Mono-specific System.Net.Test.Common.Configuration.Http. (#7156)\r\n* mono/mono@d7551cc9bf0 [metadata] Improve error message for loading unresolved types (#7147)\r\n* mono/mono@2837f433d94 [corlib] Fix RuntimeFeatureTest.NoNewFeaturesAdded on mobile (#7149)\r\n* mono/mono@1426d6a8da8 [remoting] Synchronize serializer/deserializer usage for call data. Fixes #46473\r\n* mono/mono@18e274b14b7 Bump corefx submodule\r\n* mono/mono@045acb8f198 [jit] Handle more cases for gsharedvt constrained calls. (#7081)\r\n* mono/mono@3b8ec9e97b1 [wasm] Fix the port to work with the latest version of emcc. (#7091)\r\n* mono/mono@eef0801f3e3 Assorted fixes for AIX and i (#6934)\r\n* mono/mono@38989b012ff [Coop] Convert many simple mono_object_new_checked to mono_object_new_handle. (#7129)\r\n* mono/mono@dd4dbd8d4b1 [System.ServiceModel] Prevent crash in Dispatcher.ListenerLoopManager… (#7136)\r\n* mono/mono@1791e50b56b [class] Fix resolution of interfaces in classes implementing IEnumerator. Fixes #59400\r\n* mono/mono@7b120ae2d46 [msvc] Update csproj files (#7140)\r\n* mono/mono@98cadff5f6a bump nunit-lite\r\n* mono/mono@ecadc6cf319 [wasm] Make .stamp-depot-tools more reliable. (#7078)\r\n* mono/mono@9b1e845740d [corlib] order sources content\r\n* mono/mono@bf3ed7115b2 [corlib] Add System.Runtime.ProfileOptimization APIs (#7120)\r\n* mono/mono@6a01a0b314b WinForms: Enable external CocoaDriver external driver (#7100)\r\n* mono/mono@a65c354f7b2 Bump api-snapshot submodule\r\n* mono/mono@4d52a10ca04 [mini] Move some arch-specific interpreter logic into backends and provide stubs.\r\n* mono/mono@4358581865b [mini] Don't use arch_target to point to arch/ subdirs.\r\n* mono/mono@e9c51fa3e5f [mini] Use a MONO_ARCH_INTERPRETER_SUPPORTED define instead of checking archs in driver.c.\r\n* mono/mono@23acd0f78be Fix for XA integration\r\n* mono/mono@7da8b503c6d [msvc] Update csproj files\r\n* mono/mono@f6a6779ff5b [corlib] CoreRT System.Threading.Tasks (#6672)\r\n* mono/mono@ed951069656 Coop/handle conversion of ByteArrayToCurrentDomain and ByteArrayToRootDomain. (#6692)\r\n* mono/mono@c4d1da6ef3c [master] [sdks] Fix for XA integration (#7103)\r\n* mono/mono@a7ed34f4db6 Centralize handle-based post-object creation code. (#7096)\r\n* mono/mono@79ef9d5105d Fix race condition in mono_thread_execute_interruption.  (#6833)\r\n* mono/mono@d7626e8217f [coop] Add handle-based object create functions. (#6876)\r\n* mono/mono@aec2773e1db Revert \"[System.Drawing] Disable tests except on ARM64 (#6909)\"\r\n* mono/mono@83ed33ba2c0 [Coop] Convert Console to Coop/Handles. (#7060)\r\n* mono/mono@b043ff5f747 [aot] Bump aot file format version because of 7cac757e60cd61aa070f7e0fffca225364f58c0c. (#7079)\r\n* mono/mono@ded74c0b12a Use the preallocated domain->out_of_memory_ex instead of allocating. (#6819)\r\n* mono/mono@52514effbf1 [marshal] For generic method icalls, handle generic param arguments when using coop handles\r\n* mono/mono@e01355eead8 [Cplusplus] Fix possible race condition and add casts between void* and function pointers. (#6871)\r\n* mono/mono@9209ea06298 Merge pull request #7073 from mono/disable-test-sleep\r\n* mono/mono@cfa087bfd74 [aot] Rename mono_aot_get_method_checked () to mono_aot_get_method (), there is no non-checked version anymore. (#7071)\r\n* mono/mono@e2419dee784 [interp] Add missing exception checkpoints (#6917)\r\n* mono/mono@1028994a882 Disable a flaky test on PRs (https://github.com/mono/mono/issues/6999)\r\n* mono/mono@cf644472f9f [msvc] Update csproj files (#7070)\r\n* mono/mono@23e6f6f4b58 Revert \"[jit] Make some JIT regression test files compile in the mobile profile (#7059)\" (#7069)\r\n* mono/mono@b7385ba797b [sdks] Add targets for the watch cross compiler. (#7061)\r\n* mono/mono@fc7bda62d35 [coop] Convert some `mono_exception_*` functions Reduce managed exposure in utils a little.\r\n* mono/mono@e2874db5227 [jit] Make some JIT regression test files compile in the mobile profile (#7059)\r\n* mono/mono@ea1fac3d898 [coop] Remove unnecessary write barriers against thread locals and cleanup a little. (#6874)\r\n* mono/mono@3bd630eba79 [mkbundle] Automatically bundle config files and machine.config files (#7002)\r\n* mono/mono@b90d8ec387a Remove GetNLSocket which is unused and produces a warning because it is unprototyped. (#6691)\r\n* mono/mono@4a83009a036 WSL does not nul terminate uname.release. memset(0) it first. (#7023)\r\n* mono/mono@8d826997362 Merge pull request #7057 from lewurm/interp-disable-flaky-pinvoke-test\r\n* mono/mono@62bf8bd4d52 [System.ServiceModel.Activation] Move ServiceHostFactory.cs where it's used (#7044)\r\n* mono/mono@2322177e6ae [interp] disable flaky pinvoke test\r\n* mono/mono@8ad191dfbb2 mono_get_exception_runtime_wrapped_checked contains an unnecessary 16 (#6659)\r\n* mono/mono@20e69fa1996 Centralize post-object creation code in mono_object_new_common_tail. (#6903)\r\n* mono/mono@a33cbb873c4 [interp] Fix native to interp transition (#6868)\r\n* mono/mono@7cac757e60c [aot] Emit the weak field indexes table using the MONO_AOT_TABLE code, so it works with separate aot data files/bitcode.\r\n* mono/mono@8c90350d114 Add denied assembly versions from previous ms extensions nugets\r\n* mono/mono@47187bbc9b5 [Mono.Posix] .NET Core compatibility - Use [In,Out] for arrays of structures\r\n* mono/mono@57f3f34e60e Revert \"[coop] Remove support for invoke thunk wrapper\" (#6927)\r\n* mono/mono@8d19e5a1c59 [runtime] Unboxing of nullable enums should throw for boxed ints. (#6958)\r\n* mono/mono@8f35227b886 [debugger] disable StepOutAsync test because it's flaky\r\n* mono/mono@545191f7732 Pass null-terminated string for logging\r\n* mono/mono@2c1f45f3791 [TermInfo] support new file format terminfo2 introduced with ncurses6.1 (#6960)\r\n* mono/mono@3012ce06e43 Update F# to 4.1.33\r\n* mono/mono@ff989895794 [runtime] Avoid recreating the icall table in lookup_icall_symbol (). (#6988)\r\n* mono/mono@17b4b28f050 [sdk] Fix the invocation of run-step.sh, the --timeout argument is mandatory. (#7013)\r\n* mono/mono@3fdbbe5e44b [sdks] Fix the tar command since the llvm binaries are in different directories now. (#7010)\r\n* mono/mono@f4d3da6d4ac [runtime] Fix merge conflict and Move code to its right place.\r\n* mono/mono@c3c6e6c9cdf [runtime] Ignore FireProcessExit if the method is missing on corlib.\r\n* mono/mono@b9b08c0d02e [runtime] Implement a domain resistant version of mono_domain_foreach and switch the unloading code to use it.\r\n* mono/mono@755c5bd7137 [runtime] Fix docstring for mono_unhandled_exception_checked.\r\n* mono/mono@4f8968cf6c9 [corlib] Fix minor style issue.\r\n* mono/mono@1fd32df7d1a [runtime] Introduce a non-fatal unhandled exceptions and use it for AppDomain::ProcessExit.\r\n* mono/mono@c9c7dad3a3a Bump mono/NUnitLite\r\n* mono/mono@dd2c320aa39 [runtime] Change domain before firing ProcessExit.\r\n* mono/mono@7500341ec03 [runtime] Run the ProcessExit events in the threadpool and enforce a 3 seconds limit. Fixes #10087\r\n* mono/mono@6e28ccb4e5b [utils] Add \"exec\" log category for misc runtime activity.\r\n* mono/mono@96f2d163a33 Merge pull request #6970 from dsyme/patch-1\r\n* mono/mono@e52ef6aedd1 [build] Fixes monolite build (#6982)\r\n* mono/mono@36cbab657f4 [msvc] Update csproj files\r\n* mono/mono@f61bc393d34 Simplify MonoError and managed Exception creation (#6123)\r\n* mono/mono@60d4907f48e [runtime] Revert mkbundle defaulting behavior made in ca8b8bd346 (#6687)\r\n* mono/mono@d8d3e29f382 Bump api-snapshot\r\n* mono/mono@03549126030 Bump F# mono version to 4.1.32\r\n* mono/mono@d573dec96ea Bump linker and update linker-analyzer references\r\n* mono/mono@d6e74834549 [interp] Fix CEE_UNBOX\r\n* mono/mono@7a528f6f97d [sre] Unlock loader lock on error paths (#6951)\r\n* mono/mono@e572acca552 [ci] Only create artifacts.json GitHub status on release branches\r\n* mono/mono@939d7207708 [ci] Disable monodoc tests on Windows for now\r\n* mono/mono@ea7b3849c48 Cleanup recent JIT fix to get it done in the right place. (#6895)\r\n* mono/mono@29d402d8e0d [handle] Have `MONO_HANDLE_*` macros use a uintptr_t instead of int (#6906)\r\n* mono/mono@25c41cbf419 Fix gshared support for default interface methods by always passing an mrgctx to them. (#6935)\r\n* mono/mono@1c631424d26 Merge pull request #6929 from mono/disable-test-TaskCancelWait1\r\n* mono/mono@dcecd8ff83b Disable flaky test\r\n* mono/mono@b97d0c43d1c [System]: WebConnection.Connect() needs to probe all IP addresses.\r\n* mono/mono@e43adf3cd5a Change mono_thread_resume_interruption to return void, one less raw pointer to worry about. (#6690)\r\n* mono/mono@c944c358f13 [scripts] Fix scripts/update_submodules.sh for use with git worktree\r\n* mono/mono@7f9167bc5b6 [runtime] Fix the --enable-icall-symbol-map build. (#6943)\r\n* mono/mono@921132a3622 [runtime] Make icall tables loadable. (#6905)\r\n* mono/mono@d8beb3ef110 [profiler] Remove obsolete code coverage support from the log profiler. (#6896)\r\n* mono/mono@48898cb810c [sdks] Fix ios+llvm. (#6939)\r\n* mono/mono@7f47f190859 [runtime] Fix a warning. (#6937)\r\n* mono/mono@b970e766fad [interp] Add class failure checks\r\n* mono/mono@52ebab86031 [interp] Fix varargs passing\r\n* mono/mono@3369b6e2143 [interp] Align vt stack in some places\r\n* mono/mono@6ffa48f6ada [interp] Add define for value type alignment\r\n* mono/mono@9f2b8595a34 …"},{"Id":"8092618453","Type":"IssuesEvent","CreatedAt":"2018-08-09T20:53:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2054","RelatedDescription":"Opened issue \"Review `<Target/>` and ensure that `@Inputs` and `@Outputs` are specified.\" (#2054) at xamarin/xamarin-android","RelatedBody":"Some of our targets specify e.g. `//Target/@Outputs` but not `//Target/@Inputs`, e.g. `_BuildRuntimes` in `mono-runtimes.targets`: https://github.com/xamarin/xamarin-android/blob/90edf815a679a7e5488733d7629ef45a6ba75751/src/mono-runtimes/mono-runtimes.targets#L388-L390\r\n\r\nAs a result, this target may be executed when it doesn't need to be.\r\n\r\nWe should (write a tool to?) audit our `.csproj` and `.targets` files to ensure that when `//Target/@Inputs` is used a `//Target/@Outputs` is also present, and vice versa."},{"Id":"8092439204","Type":"IssuesEvent","CreatedAt":"2018-08-09T20:17:14","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2053","RelatedDescription":"Opened issue \"Release installations are creating an .__override__ directory and should not be\" (#2053) at xamarin/xamarin-android","RelatedBody":"I'm seeing that an override directory is being created after installing and deploying a simple application in release mode, which should not be the case. \r\n\r\n### Steps to Reproduce\r\n1. Using your Android project of choice, open the AndroidManifest.xml file and add the following attribute to ensure the `run-as` command will work as expected.\r\n  `<application android:debuggable=\"true\" />`\r\n2. Install this app to a device in release mode, and launch it once.\r\n3. Run the following command to search for an `.__override__` directory:\r\n`adb shell run-as $(PackageName) ls -la /data/data/$(PackageName)/files/`\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThis dir (`/data/data/$(PackageName)/files/.__override__`) does not exist after deploying and launching an app in release mode.\r\n\r\n### Actual Behavior\r\n`/data/data/$(PackageName)/files/.__override__` is created in release mode.\r\n\r\n```\r\nC:\\Users\\peter>adb shell run-as mono.samples.button ls -la /data/data/mono.samples.button/files/\r\ntotal 40\r\ndrwxrwx--x 5 u0_a650 u0_a650 4096 2018-08-09 16:01 .\r\ndrwx------ 5 u0_a650 u0_a650 4096 2018-08-09 16:06 ..\r\ndrwxrwxrwx 2 u0_a650 u0_a650 4096 2018-08-09 16:01 .__override__\r\ndrwxr-xr-x 2 u0_a650 u0_a650 4096 2018-08-09 16:01 .config\r\ndrwxr-xr-x 3 u0_a650 u0_a650 4096 2018-08-09 16:01 .local\r\n```\r\n\r\n### Version Information\r\nmonodroid/master/983976b2\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8091038848","Type":"IssuesEvent","CreatedAt":"2018-08-09T15:40:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2052","RelatedDescription":"Opened issue \"Remove `$(CONFIGURATIONS)`\" (#2052) at xamarin/xamarin-android","RelatedBody":"Our `make` targets are a bit confusing: some use `$(CONFIGURATION)` and build for only one configuration, e.g. `make all`.  Some use `$(CONFIGURATIONS)` (plural) and build for *multiple* configurations at once, e.g. `make jenkins`, `make framework-assemblies`.\r\n\r\nWe should remove `$(CONFIGURATIONS)` and instead use `$(CONFIGURATION)` everywhere.  Jenkins will just need to call e.g. `make jenkins` twice for each configuration."},{"Id":"8090887696","Type":"PullRequestEvent","CreatedAt":"2018-08-09T15:15:53","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2051","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix for parallel builds\" (#2051) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2043\r\n\r\nWhen parallel builds occur, we can get `obj/Debug/lp` into a broken\r\nstate:\r\n\r\n    Resources/layout/abc_action_menu_layout.xml warning XA1001:\r\n        AndroidResgen: Warning while updating Resource XML '/var/folders/nx/rzr6lcqj6j3_vp7vtp28v2cw0000gn/T/tmp6bafd8e4.tmp': Root element is missing.\r\n\r\nThen later, `<Aapt />` fails on the empty file:\r\n\r\n    obj/Debug/lp/11/jl/res/layout/abc_action_menu_layout.xml(2,0): error APT0000: Error parsing XML: no element found\r\n\r\nIt appears that `ConvertResourcesCases` still copies the file, even if\r\n`AndroidResource.UpdateXmlResource` fails. Subsequent builds will\r\ncontinue to fail, because an empty file has been copied with a newer\r\ntimestamp. Once in this state, developers would have to `Rebuild` the\r\nproject or delete `obj`.\r\n\r\nThe fix here is to:\r\n- Return a `bool` indicating if `AndroidResource.UpdateXmlResource`\r\n  succeeds\r\n- Don't write the final file if `AndroidResource.UpdateXmlResource`\r\n  failed\r\n\r\nThis change doesn't fully fix #2043, as I think VS for Mac should\r\nprevent builds from happening in parallel. It *does*, however, fix the\r\nissue for the user so a `Rebuild` is not required.\r\n\r\nOther changes:\r\n- The original temp file can use `File.Copy` since it is empty\r\n- We can  use the `?` operator for invoking `logMessage`"},{"Id":"8090316092","Type":"PullRequestEvent","CreatedAt":"2018-08-09T13:48:27","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2050","RelatedDescription":"Opened pull request \"Provide warnings and errors around compileSdkVersion(TargetFrameworkVersion), targetSdkVersion, and minSdkVersion\" (#2050) at xamarin/xamarin-android","RelatedBody":"Google has the following guidance for these three values:\r\n\r\n> minSdkVersion (lowest possible) <= targetSdkVersion == compileSdkVersion (latest SDK)\r\n\r\nThis commit adds a new Task `CheckGoogleSdkRequirements` which is responsible for checking\r\nthese values. It will be enabled by default but the task can be disabled via the\r\n`AndroidEnableGooglePlayStoreChecks` property. "}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8102664644","Type":"IssuesEvent","CreatedAt":"2018-08-13T03:23:25","Actor":"chentotal","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3549","RelatedDescription":"Opened issue \"Implement BottomNavigationView.IOnNavigationItemReselectedListener for Bottom Tabbed Bar Android\" (#3549) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI tried to implement BottomNavigationView.IOnNavigationItemReselectedListener in TabbedPageRenderer.\r\nI set SetToolbarPlacement on Bottom, and keep pressing the same tab item.\r\nThe event BottomNavigationView.IOnNavigationItemReselectedListener.OnNavigationItemReselected wouldn't be triggered, but BottomNavigationView.IOnNavigationItemSelectedListener.OnNavigationItemSelected is triggered.\r\n\r\nMy code:\r\n\r\n\t\tvoid BottomNavigationView.IOnNavigationItemReselectedListener.OnNavigationItemReselected(IMenuItem item)\r\n\t\t{\r\n\t\t\tif (Element is MainBottomTabbedPage)\r\n\t\t\t{\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbool BottomNavigationView.IOnNavigationItemSelectedListener.OnNavigationItemSelected(IMenuItem item)\r\n\t\t{\r\n\t\t\tbase.OnNavigationItemSelected(item);\r\n\r\n\t\t\tif (Element is MainBottomTabbedPage)\r\n\t\t\t{\r\n\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\r\n### Basic Information\r\n- Version with issue:3.1\r\n- IDE:Visual Studio 2017\r\n\r\n"},{"Id":"8101639615","Type":"IssuesEvent","CreatedAt":"2018-08-12T15:55:58","Actor":"rodja","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3548","RelatedDescription":"Opened issue \"PlatformEffects does not work with Frame on Android\" (#3548) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nAdding an Effect to an Xamarin.Forms Frame does not call OnAttached().\r\n\r\n### Steps to Reproduce\r\n\r\n1. implement a simple PlattformEffect on Android\r\n```csharp\r\nusing Xamarin.Forms;\r\nusing Xamarin.Forms.Platform.Android;\r\n\r\n[assembly: ResolutionGroupName(\"EffectOnFrame\")]\r\n[assembly: ExportEffect(typeof(EffectOnFrame.Droid.DemoEffectDroid), \"DemoEffect\")]\r\nnamespace EffectOnFrame.Droid\r\n{\r\n    public class DemoEffectDroid : PlatformEffect\r\n    {\r\n        protected override void OnAttached() => System.Console.WriteLine(\"Attached\");\r\n        protected override void OnDetached() => System.Console.WriteLine(\"Detached\");\r\n    }\r\n}\r\n```\r\n2. Add Effect to a Frame:\r\n```csharp\r\nusing System;\r\nusing Xamarin.Forms;\r\n\r\nnamespace EffectOnFrame\r\n{\r\n    public class App : Application\r\n    {\r\n        public App()\r\n        {\r\n            var view = new Frame();\r\n            view.Effects.Add(Effect.Resolve(\"EffectOnFrame.DemoEffect\"));\r\n\r\n            MainPage = new ContentPage { Content = view };\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Expected Behavior\r\n\r\nWhen launching the App the OnAttached() method should be called.\r\n\r\n### Actual Behavior\r\n\r\nThe Effect is not called properly when view is a Frame. If using a Label, StackLayout or ContentView the Effect is called properly.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.1.0\r\n- Last known good version: ?\r\n- IDE: Visual Studio for Mac 7.5.4\r\n- Platform Target Frameworks: \r\n  - Android: 8.1"},{"Id":"8101123118","Type":"IssuesEvent","CreatedAt":"2018-08-12T09:38:10","Actor":"Chozarajan","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3547","RelatedDescription":"Opened issue \"Softkeyboard-text in landscape mode doesn't show all chars in KeyListener\" (#3547) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI have used the normal Entry with Custom Renderer. Inside customRenderer I have used the DigitsKeyListener. In portrait mode, if I have type 3.5 and I have rotated to Landscape mode, it shows 35\r\n### Steps to Reproduce\r\n1. Run the attached sample\r\n2. Type 3.5 in portrait mode\r\n3. With EditMode rotate to landscape mode\r\n4. The 35 has shown in landscape mode\r\n\r\n### Expected Behavior\r\nIn landscape edit mode also the dot has to show\r\n\r\n### Actual Behavior\r\nThe special characters are not shown in landscape edit mode\r\n\r\n### Basic Information\r\n- Version with issue: Xamarin Forms version 3.0\r\n- Last known good version: -\r\n- IDE: VS 2017 \r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 7.0\r\n- Android Support Library Version: N0\r\n- Nuget Packages: No\r\n- Affected Devices: Moto G4 plus\r\n\r\n### Screenshots\r\nPortrait Image:\r\n ![portraitimage](https://user-images.githubusercontent.com/42271947/44000606-cec6d846-9e40-11e8-8f3a-e58cf82565a4.png)\r\n\r\nLandscape Image:\r\n ![landscapeimage](https://user-images.githubusercontent.com/42271947/44000605-ce8d3488-9e40-11e8-8a91-c45c2e64a4fe.png)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\nReproduction Sample Link: [Sample.zip](https://github.com/xamarin/Xamarin.Forms/files/2280862/Sample.zip)\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8099968482","Type":"IssuesEvent","CreatedAt":"2018-08-11T15:50:03","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3546","RelatedDescription":"Opened issue \"Add DisplayText and Value to the ActionSheet\" (#3546) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nIn the ActionSheet, currently we van only add text and select based on the text but the text might change in the database as we rely on the id not the text so it will be great if you allow to attach a value to the actionsheet then we can do selection based on the value not the text.\r\n\r\n\r\nThanks,\r\nJassim"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8096971990","Type":"IssuesEvent","CreatedAt":"2018-08-10T15:52:33","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4041","RelatedDescription":"Closed issue \"Many crashes of log_callback(char const*, char const*, char const*, int, void*) by customers that i cannot repeat\" (#4041) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\nHi, our customers are getting many crashes of log_callback in my ios app.  But i cannot repeat it. I am able to get the crash report in hockeyapp.\r\n\r\n### Steps to Reproduce\r\n\r\nCan not reproduce\r\n\r\n### Environment\r\n\r\n```\r\nI am using AppCenter to build the ipa.  Mono version: 5.8\r\n```\r\n\r\n### Build Logs\r\n\r\nhere is hockeyapp \r\n\r\nhttps://s3.amazonaws.com/hockey-app-bucket/production/crashes/logs/177/972/347/original/4049f6f8bd9764b67bd7845cbe5f1d77.log?1525403286\r\n\r\nAny suggestion? thanks!"},{"Id":"8096926973","Type":"IssuesEvent","CreatedAt":"2018-08-10T15:44:11","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4088","RelatedDescription":"Closed issue \"Xamarin.iOS: Could not find the assembly 'Xamarin.iOS.dll' in the app. \" (#4088) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\n\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\n\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\nIPA submitted to Apple for review crashes on startup. Cannot reproduce locally, only with the Release IPA; cleaned the solution and re-submitted, startup crash persists. Crash log contains the following line:\r\n\r\nMay  4 16:47:50 iPhone-8plus AppName[407] <Notice>: Xamarin.iOS: Could not find the assembly 'Xamarin.iOS.dll' in the app. This is usually fixed by cleaning and rebuilding your project; if that doesn't work, please file a bug report: http://bugzilla.xamarin.com\r\n\r\nThe app is already published to the App Store, this is just an updated version.\r\n\r\n### Expected Behavior\r\nApp works correctly.\r\n\r\n### Actual Behavior\r\nSee above\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nVisual Studio Community 2017 for Mac Version 7.3.3(Build 17)\r\nXamarin .iOS Version 11.6.1.4\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\nNot possible at this time.\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8096434446","Type":"IssuesEvent","CreatedAt":"2018-08-10T14:18:31","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4611","RelatedDescription":"Opened issue \"[metal] Incorrect structs in Metal/Defs.cs\" (#4611) at xamarin/xamarin-macios","RelatedBody":"These structs are incorrect: https://github.com/xamarin/xamarin-macios/blob/master/src/Metal/Defs.cs#L278-L305\r\n\r\nThey do not match the native struct's size and potentially alignment.\r\n\r\n```\r\ntypedef struct {\r\n    /* NOTE: edgeTessellationFactor and insideTessellationFactor are interpreted as half (16-bit floats) */\r\n    uint16_t edgeTessellationFactor[4];\r\n    uint16_t insideTessellationFactor[2];\r\n} MTLQuadTessellationFactorsHalf;\r\n\r\ntypedef struct {\r\n    /* NOTE: edgeTessellationFactor and insideTessellationFactor are interpreted as half (16-bit floats) */\r\n    uint16_t edgeTessellationFactor[3];\r\n    uint16_t insideTessellationFactor;\r\n} MTLTriangleTessellationFactorsHalf;\r\n```\r\n\r\nWe cannot have `ushort[]` the ushort need to be inlined, fixed size.\r\n\r\nIn addition we should have tests that ensure the size of the managed struct is equal to the size of the native struct."},{"Id":"8096172137","Type":"IssuesEvent","CreatedAt":"2018-08-10T13:30:59","Actor":"vorotnyaknazar","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4610","RelatedDescription":"Opened issue \"*.dylib libraries are signed during full rebuild, but not the second time\" (#4610) at xamarin/xamarin-macios","RelatedBody":"In two words.\r\nI have a project that has *.dylibs in example.ipa/example.app/Frameworks.\r\nIf I do full rebuild all these libs are signed and everything deploys and runs fine.\r\nIf I change a file, click on run these libs aren't signed that causes the next error\r\n\r\ndyld: Library not loaded: @rpath/libswiftCore.dylib\r\n  Referenced from: /private/var/containers/Bundle/Application/72A745D9-0F6A-4A4A-B4B0-1D957D706291/example.app/Frameworks/iOSDFULibrary.framework/iOSDFULibrary\r\n  Reason: no suitable image found.  Did find:\r\n\t/private/var/containers/Bundle/Application/72A745D9-0F6A-4A4A-B4B0-1D957D706291/example.app/Frameworks/libswiftCore.dylib: code signature invalid for '/private/var/containers/Bundle/Application/72A745D9-0F6A-4A4A-B4B0-1D957D706291/exampleapp/Frameworks/libswiftCore.dylib'\r\n\t/private/var/containers/Bundle/Application/72A745D9-0F6A-4A4A-B4B0-1D957D706291/example.app/Frameworks/libswiftCore.dylib: code signature invalid for '/private/var/containers/Bundle/Application/72A745D9-0F6A-4A4A-B4B0-1D957D706291/example.app/Frameworks/libswiftCore.dylib'\r\n \r\n========================\r\nDuring full rebuild I see the log where libs are signed.\r\n_CodesignNativeLibraries:\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftCore.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftCoreFoundation.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftCoreGraphics.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftCoreImage.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftDarwin.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftDispatch.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftFoundation.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftMetal.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftObjectiveC.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftQuartzCore.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftUIKit.dylib\r\n2>  Tool /usr/bin/codesign execution started with arguments: -v --force --sign 08729008A0D2A6EEB29981EB65354E55BCAF97AE --timestamp=none bin/iPhone/Debug/device-builds/ipad5.1-10.3.2/Aquana.iOS.app/Frameworks/libswiftos.dylib\r\n========================\r\nIf I change some code and debug (this is not rebuild) app crashes on startup with error I described above. And in the log I don't have _CodesignNativeLibraries so libs are not signed.\r\nIf there is some quick fix for \"C:\\Program Files(x86)\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets\"\r\nto force signing always let me know in the comments or give a link to the commit when issue is fixed so I don't wait for next update. Thanks\r\n=======================\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.6\r\nVisualStudio.15.Release/15.7.6+27703.2047\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40625.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40608.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJetBrains ReSharper Ultimate 2017.1.2    Build 108.0.20170428.75743\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 173513e369ffb7a1c4d5dccf83696d9aac2ab2d0.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":46,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":169,"FavoriteCount":83,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":44,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":122,"FavoriteCount":56,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":260,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":28,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":39,"RawContent":null}]}},"RunOn":"2018-08-13T05:30:54.6500257Z","RunDurationInMilliseconds":4254}