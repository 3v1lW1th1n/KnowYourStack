{"Data":{"GitHub":{"Issues":[{"Id":"611089133","IsPullRequest":true,"CreatedAt":"2020-05-02T02:22:56","Actor":"frank-dong-ms","Number":"5081","RawContent":null,"Title":"fix x86 crash","State":"open","Body":"fixes https://github.com/dotnet/machinelearning/issues/1216.\r\n\r\nTreeEnsembleCombiner has a bug that causing byte array out of range and corrupts heap\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5081","RelatedDescription":"Open PR \"fix x86 crash\" (#5081)"},{"Id":"610983267","IsPullRequest":true,"CreatedAt":"2020-05-01T21:43:54","Actor":"mstfbl","Number":"5080","RawContent":null,"Title":"Added SQLite database to test loading of datasets in non-Windows builds","State":"open","Body":"Fix #4156 and related to #4175 \r\n\r\nMSSQL databases are not supported on Mac and Linux builds. As such, I've generated an equivalent SQLite database, and re-activated these disabled Iris tests so that these unit tests can run on non-Windows builds and produce equivalent test results.\r\n\r\nReactivated tests on Linux and MacOS list:\r\n\r\n- `IrisLightGbm()`\r\n- `IrisLightGbmWithLoadColumnName()`\r\n- `IrisVectorLightGbm()`\r\n- `IrisVectorLightGbmWithLoadColumnName()`\r\n- `IrisSdcaMaximumEntropy()`","Url":"https://github.com/dotnet/machinelearning/pull/5080","RelatedDescription":"Open PR \"Added SQLite database to test loading of datasets in non-Windows builds\" (#5080)"},{"Id":"610968953","IsPullRequest":true,"CreatedAt":"2020-05-01T21:07:13","Actor":"michaelgsharp","Number":"5079","RawContent":null,"Title":"ColumnSelectingTransformer now infers ONNX shape","State":"open","Body":"ColumnSelectingTransformer wasn't inferring the ONNX shape during ONNX export. This was causing issues when the shape needed to be known. This PR adds in the shape inference step by removing the skip flag to skip it.","Url":"https://github.com/dotnet/machinelearning/pull/5079","RelatedDescription":"Open PR \"ColumnSelectingTransformer now infers ONNX shape\" (#5079)"},{"Id":"610195701","IsPullRequest":false,"CreatedAt":"2020-05-01T16:41:55","Actor":"luistelmocosta","Number":"5073","RawContent":null,"Title":"Run Evaluation on full test dataset","State":"closed","Body":"Hello, I would like to know how do I run the evaluation on the full test dataset instead of doing it in a single line.\r\n\r\nI noticed that in `Program.cs` we are only running the prediction for one single line:\r\n\r\n```\r\n// Here (ModelInput object) you could provide new test data, hardcoded or from the end-user application, instead of the row from the file.\r\n            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false)\r\n                                                                        .First();\r\n```\r\n\r\nIs there any other option to run on the full test set? \r\n\r\nKind regards","Url":"https://github.com/dotnet/machinelearning/issues/5073","RelatedDescription":"Closed issue \"Run Evaluation on full test dataset\" (#5073)"},{"Id":"610603350","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:36","Actor":"frank-dong-ms","Number":"5074","RawContent":null,"Title":"try replace DotProductDense","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5074","RelatedDescription":"Closed or merged PR \"try replace DotProductDense\" (#5074)"},{"Id":"610605549","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:33","Actor":"frank-dong-ms","Number":"5075","RawContent":null,"Title":"Test ensemble combiner add scale","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5075","RelatedDescription":"Closed or merged PR \"Test ensemble combiner add scale\" (#5075)"},{"Id":"610607981","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:30","Actor":"frank-dong-ms","Number":"5076","RawContent":null,"Title":"Test ensemble combiner max abs","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5076","RelatedDescription":"Closed or merged PR \"Test ensemble combiner max abs\" (#5076)"},{"Id":"610612188","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:27","Actor":"frank-dong-ms","Number":"5077","RawContent":null,"Title":"Test ensemble combiner scale","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5077","RelatedDescription":"Closed or merged PR \"Test ensemble combiner scale\" (#5077)"},{"Id":"610613408","IsPullRequest":true,"CreatedAt":"2020-05-01T08:12:24","Actor":"frank-dong-ms","Number":"5078","RawContent":null,"Title":"Test ensemble combiner sum sq","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5078","RelatedDescription":"Closed or merged PR \"Test ensemble combiner sum sq\" (#5078)"},{"Id":"608918711","IsPullRequest":false,"CreatedAt":"2020-04-30T16:56:13","Actor":"luistelmocosta","Number":"5070","RawContent":null,"Title":"Test dataset using the command line","State":"closed","Body":"Hello, I am using MLNET using the CLI and I have a doubt regarding the test dataset. \r\n\r\n`mlnet auto-train --task multiclass-classification --dataset \"xxxx.tsv\" --ignore-columns \"Id,Task,CreatedOn\" --test-dataset \"xxx.tsv\" --max-exploration-time 600 --label-column-name Type`\r\n\r\nThe training results look very optimistic and I was wondering if it is not tuning on the test dataset which would not be ideal. Is the test dataset being used only for \"inference\" after the training is complete? Do I need to pass an evaluation dataset also so the fine-tuning will be made on that or is none is given it is doing Cross Validation?\r\n\r\nKind regards\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5070","RelatedDescription":"Closed issue \"Test dataset using the command line\" (#5070)"},{"Id":"609396695","IsPullRequest":true,"CreatedAt":"2020-04-30T03:53:04","Actor":"mstfbl","Number":"5072","RawContent":null,"Title":"Test PR to view CI Generated baselines","State":"closed","Body":"The purpose of this test PR is to view the benchmarks generated on CI builds, and to verify that the results are exactly the same as the expected benchmarks.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5072","RelatedDescription":"Closed or merged PR \"Test PR to view CI Generated baselines\" (#5072)"},{"Id":"608757001","IsPullRequest":true,"CreatedAt":"2020-04-29T21:03:40","Actor":"mstfbl","Number":"5068","RawContent":null,"Title":"Fixed baselines between Debug and Release builds","State":"closed","Body":"Most baselines in SingleDebug and SingleRelease test baseline folders are differing in fields that are not actively compared. Remaining baselines are differing in certain log-loss reduction values at the 10^-5'th digit, due to how the Release compiler does not round up or down values. \r\n\r\nThis PR handles such baselines by removing them from SingleDebug and SingleRelease folders, and by adding to Common folder. This PR also removes the checking of SingleDebug and SingleRelease folders in `BaseTestBaseline.GetBaselinePath()`.","Url":"https://github.com/dotnet/machinelearning/pull/5068","RelatedDescription":"Closed or merged PR \"Fixed baselines between Debug and Release builds\" (#5068)"},{"Id":"609256989","IsPullRequest":true,"CreatedAt":"2020-04-29T18:13:48","Actor":"LittleLittleCloud","Number":"5071","RawContent":null,"Title":"Fix MatrixFactorization trainer's warning","State":"open","Body":"### Problem to fix\r\nMatrixFactorization's default options will throw a warning msg `Warning: insufficient blocks may slow down the trainingprocess (4*nr_threads^2+1 blocks is suggested)` when running on PC with more than 10 threads.\r\n\r\n### Cause\r\nThe warning msg is from libmf, which will check nr_bin and nr_thread, if nr_bin <= 2* nr_thread, it will show that warning. \r\n\r\nMatrixFactorization uses `max(20, 2*nr_thread)` to initialize nr_bin, when nr_thread < 10, it's fine because nr_bin will be 20, which is greater than 2\\*nr_thread, but if nr_thread is >= 10, nr_bin's value will be 2\\*nr_thread, which is less than 2*nr_thread + 1 and trigger warning.\r\n\r\n### Fix\r\ninitialize nr_bin with 2 * nr_threads + 1. \r\n\r\n### Related issue\r\n#5067 ","Url":"https://github.com/dotnet/machinelearning/pull/5071","RelatedDescription":"Open PR \"Fix MatrixFactorization trainer's warning\" (#5071)"},{"Id":"608794323","IsPullRequest":false,"CreatedAt":"2020-04-29T05:44:02","Actor":"strikene","Number":"5069","RawContent":null,"Title":"Microsoft.ML with onnx can not get Column","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: win10 1909\r\n- **.NET Version (eg., dotnet --info)**: Core 3.1\r\n\r\n### Issue\r\n\r\nAn exception occurred while getting the inference result \r\nException:\r\nSystem.ArgumentOutOfRangeException: 'Cannot map column (name: loss, type: Microsoft.ML.Transforms.Onnx.OnnxSequenceType) in data to the user-defined type, ConsoleApp1.OutPut. (Parameter 'column')'\r\n\r\n### Source code / logs\r\nPackage \r\n    Microsoft.ML1.5.0-preview2\r\n    Microsoft.ML.ImageAnalytics1.5.0-preview2\r\n    Microsoft.ML.OnnxRuntime1.2.0\r\n    Microsoft.ML.OnnxTransformer1.5.0-preview2\r\n\r\nCode \r\n    Console.WriteLine(\"Hello World!\");\r\n            MLContext mlContext = new MLContext();\r\n            var data = mlContext.Data.LoadFromEnumerable(new List<ApiInput>());\r\n            var PIL = mlContext.Transforms.LoadImages(outputColumnName: \"data\",\r\n                imageFolder: null,\r\n                inputColumnName: \"ImagePath\")\r\n                .Append(mlContext.Transforms.ResizeImages(outputColumnName: \"data\", imageWidth: 224, imageHeight: 224, inputColumnName: \"data\"))\r\n                .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"data\"))\r\n                .Append(mlContext.Transforms.ApplyOnnxModel(outputColumnName: \"loss\", inputColumnName:  \"data\" , modelFile: \"model.onnx\"));\r\n            var model = PIL.Fit(data);\r\n            var ss = new List<ApiInput>\r\n            {\r\n                new ApiInput() { ImagePath = \"C:\\\\1.png\" }\r\n            };\r\n            var data1 = mlContext.Data.LoadFromEnumerable(ss);\r\n            var reml = model.Transform(data1);\r\n            var re = reml.GetColumn<OutPut>(\"loss\");\r\n\r\n public class ApiInput\r\n    {\r\n        public string ImagePath { get; set; }\r\n    }\r\n\r\n  public class OutPut\r\n    {\r\n        [OnnxSequenceType(typeof(string))]\r\n        public string n;\r\n        [OnnxSequenceType(typeof(float))]\r\n        public float n1;\r\n\r\n    }\r\nThe input and output of the model is shown below\r\n![_(($TF0ZVX43WZD)O4E~WHX](https://user-images.githubusercontent.com/62022463/80564103-77fe5f80-8a1f-11ea-9c61-8d2e3ae1ec55.png)\r\n\r\nThere are two kinds of output in this model. I can get the result in classLabel normally, but for loss I have not found any method that can get it correctly  \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5069","RelatedDescription":"Open issue \"Microsoft.ML with onnx can not get Column\" (#5069)"},{"Id":"608562065","IsPullRequest":true,"CreatedAt":"2020-04-29T00:15:12","Actor":"LittleLittleCloud","Number":"5066","RawContent":null,"Title":"Update CodeGenerator's console project to netcoreapp3.1","State":"closed","Body":"Issues\r\n- https://github.com/dotnet/machinelearning-modelbuilder/issues/684\r\n\r\nAnd it also fix this bug\r\n- https://github.com/dotnet/machinelearning-modelbuilder/issues/714","Url":"https://github.com/dotnet/machinelearning/pull/5066","RelatedDescription":"Closed or merged PR \"Update CodeGenerator's console project to netcoreapp3.1\" (#5066)"},{"Id":"608636254","IsPullRequest":false,"CreatedAt":"2020-04-28T21:45:16","Actor":"LittleLittleCloud","Number":"5067","RawContent":null,"Title":"Update NumberOfThreads default value for MatrixFactorization trainer ","State":"open","Body":"The default value for MatrixFactorization will use all threads, which might trigger a warning in [libmf](https://github.com/cjlin1/libmf/blob/e70b9a32f7df32cce961bbbb997da074759a16fe/mf.cpp#L4024) when it exceeds two times of nr_bins.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5067","RelatedDescription":"Open issue \"Update NumberOfThreads default value for MatrixFactorization trainer \" (#5067)"},{"Id":"608507166","IsPullRequest":false,"CreatedAt":"2020-04-28T17:59:32","Actor":"scorp-gitcontainer","Number":"5065","RawContent":null,"Title":"deterministic result in ML.net | KmeansTrainer vs EstimatorChain<ClusteringPredictionTransformer<Microsoft.ML.Trainers.KMeansModelParameters>>","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\n\r\n- **What did you do?** \r\nPerform a clustering on some datas using ML.net and clustering based on the iris sample on docs.microsoft.com\r\n- **What happened?**\r\nWe have noticed that the result are not deterministic for a specified feature vector when a non vector property of the class value changes.\r\n\r\n- **What did you expect?**\r\nWe expected the ml.net clustering algorithm to issue always the same result in the same conditions if the feature array remains the same even if another property of the data class is modified.\r\n\r\n### Source code / logs\r\n\r\nstring featuresColumnName = _featureColumnName;\r\n            var pipeline = _mlContext.Transforms\r\n                .Concatenate(featuresColumnName, featureArrayLabel)\r\n                .Append(_mlContext.Clustering.Trainers.KMeans(featuresColumnName, numberOfClusters: _cluster));\r\n           pipeline;\r\nwhen pipeline is EstimatorChain<ClusteringPredictionTransformer<Microsoft.ML.Trainers.KMeansModelParameters>> \r\nthe fit method is not derministic\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5065","RelatedDescription":"Open issue \"deterministic result in ML.net | KmeansTrainer vs EstimatorChain<ClusteringPredictionTransformer<Microsoft.ML.Trainers.KMeansModelParameters>>\" (#5065)"},{"Id":"607946041","IsPullRequest":true,"CreatedAt":"2020-04-28T17:25:11","Actor":"antoniovs1029","Number":"5063","RawContent":null,"Title":"Added time series and DateTimeTransformer tests that load its input from a file","State":"closed","Body":"* Modified a test in TimeSeriesDirectApi.cs to load its input from a file, instead of loading from an enumerable.\r\n* Added 2 tests for DateTimeTransformer to show and test how to load datetime objects from a text file.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5063","RelatedDescription":"Closed or merged PR \"Added time series and DateTimeTransformer tests that load its input from a file\" (#5063)"},{"Id":"608474995","IsPullRequest":true,"CreatedAt":"2020-04-28T17:05:21","Actor":"frank-dong-ms","Number":"5064","RawContent":null,"Title":"X86 test","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5064","RelatedDescription":"Open PR \"X86 test\" (#5064)"},{"Id":"606108479","IsPullRequest":true,"CreatedAt":"2020-04-28T04:31:44","Actor":"mstfbl","Number":"5060","RawContent":null,"Title":"Added logging for when specific configuration baseline is used","State":"closed","Body":"Certain unit tests require configuration specific baselines, for when they differ from \"normal\" baselines. A unit test may also use more than one configuration, such as `linux-x64` and `netcoreapp31`. \r\n\r\nThis PR adds logging for each unit test that utilizes a configuration specific baseline. This PR also corrects a small typo.","Url":"https://github.com/dotnet/machinelearning/pull/5060","RelatedDescription":"Closed or merged PR \"Added logging for when specific configuration baseline is used\" (#5060)"},{"Id":"606114582","IsPullRequest":false,"CreatedAt":"2020-04-27T10:21:56","Actor":"nathanlamplough-MeVitae","Number":"5061","RawContent":null,"Title":"Converting Naive Bayes Scores to Probabilities","State":"closed","Body":"Hello,\r\nWhat are the scores produced from the NaiveBayes classifier, are they log probabilities? As I seem to get very large minus values. Whereas I did something similar in sci-kit learns NaiveBayes and the log probabilities were much lower negative values. How do you suggest converting these scores to probabilities? Should I call an exponential function on them if they are in fact log probabilities?\r\n\r\nThanks\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5061","RelatedDescription":"Closed issue \"Converting Naive Bayes Scores to Probabilities\" (#5061)"},{"Id":"606057417","IsPullRequest":true,"CreatedAt":"2020-04-25T06:04:11","Actor":"frank-dong-ms","Number":"5059","RawContent":null,"Title":"simplify baseline files","State":"closed","Body":"many baseline file in SingleDebug and SingleRelease folder are identical, move them to Common folder to avoid duplication\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5059","RelatedDescription":"Closed or merged PR \"simplify baseline files\" (#5059)"},{"Id":"605927008","IsPullRequest":true,"CreatedAt":"2020-04-25T03:53:50","Actor":"mstfbl","Number":"5057","RawContent":null,"Title":"Fixed X64Fact tests","State":"closed","Body":"Fixed X64Fact tests with x86 specific baselines added\r\n\r\nCurrently obtaining baselines from x86 builds from CI","Url":"https://github.com/dotnet/machinelearning/pull/5057","RelatedDescription":"Closed or merged PR \"Fixed X64Fact tests\" (#5057)"},{"Id":"606526503","IsPullRequest":false,"CreatedAt":"2020-04-24T19:14:55","Actor":"MatiKingloom","Number":"5062","RawContent":null,"Title":"Can i use ML.NET do train a face recognition model","State":"open","Body":"Hi\r\n\r\nIm new to ML, so this might seem like a stupid question, but, id like to use C# to train a face recognition model.\r\n\r\nThe face detection part would be done by Dlib which will extract the face encodings  (double[128])\r\n\r\nSo the question would be can i use ML.NET to train a model that gets face vectors for input\r\nInput would be:\r\nLabel: string \r\nFeature: double array\r\n\r\nAnd trains a model that when an image comes in and i extract the face encodings from it, it could predict which person it is. (I have about 2000 person with 2-3 images per person (2-3 encodings))\r\n\r\nIs it possible and what algorithms are suitable for this task ?\r\n\r\nThanks for a answer\r\nMati","Url":"https://github.com/dotnet/machinelearning/issues/5062","RelatedDescription":"Open issue \"Can i use ML.NET do train a face recognition model\" (#5062)"},{"Id":"605921473","IsPullRequest":true,"CreatedAt":"2020-04-24T16:43:27","Actor":"antoniovs1029","Number":"5056","RawContent":null,"Title":"Let ImageLoadingTransformer dispose the last image it loads","State":"closed","Body":"Fixes #4126.\r\n\r\nBy investigating issue #4126 I found out that `ImageResizingTransformer `disposed the last input Bitmap object it resized (i.e. _only_ the last image object in the input dataset). When working with in-memory images (i.e. NOT loaded with `ImageLoaderTransformer`) this is inadequate, since the `ImageResizingTransformer `will dispose the last image in the dataset, and the user won't be able to use that image again. Particullarly, issue #4126 happened when running Cross Validation with a pipeline that included applying `ImageResizingTransformer `to in memory images: when scoring the first model during cross validation, the last image of the input dataset got disposed, and when trying to score the second model, the image wasn't there, and a exception was thrown.\r\n\r\nThe only reason I found as to why `ImageResizingTransformer` had this behavior, is because `ImageLoadingTransformer` actually disposes all the images it loads except for the last one ([link](https://github.com/dotnet/machinelearning/blob/919bc8b886a6bc20c5022e8dad00f84bc1248236/src/Microsoft.ML.ImageAnalytics/ImageLoader.cs#L226-L230)). So assuming this is the only reason for `ImageResizingTransformer's `disposer, I simply moved the disposal mechanism of the last image to `ImageLoadingTransformer`.\r\n\r\nI added two tests that used to throw exceptions without the changes on this PR. And I also manually tested with the debugger's profiler that the last image got correctly disposed when using `ImageLoadingTransformer`.","Url":"https://github.com/dotnet/machinelearning/pull/5056","RelatedDescription":"Closed or merged PR \"Let ImageLoadingTransformer dispose the last image it loads\" (#5056)"},{"Id":"605941817","IsPullRequest":true,"CreatedAt":"2020-04-23T23:42:26","Actor":"frank-dong-ms","Number":"5058","RawContent":null,"Title":"try put nuget packages to shared folder instead of local to save disk…","State":"open","Body":"… space\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5058","RelatedDescription":"Open PR \"try put nuget packages to shared folder instead of local to save disk…\" (#5058)"},{"Id":"605892251","IsPullRequest":false,"CreatedAt":"2020-04-23T21:39:34","Actor":"justinormont","Number":"5055","RawContent":null,"Title":"Investigate thresholding binary log-loss","State":"open","Body":"Multi-class log-loss has an `epsilon` value which thresholds the input probability between `epsilon` and `1.0`. This causes multi-class log-loss to never be `Infinity`.\r\n\r\nThe binary log-loss does not have an `epsilon` threshold, which causes the returned log-loss to be `Infinity` when the prediction is perfectly confident (p=0.0 or p=1.0) and incorrect about the true label.\r\n\r\nLog-loss for binary classification:\r\nhttps://github.com/dotnet/machinelearning/blob/062be280a9d6de23838d4db5ad93fea9d7d0c1f6/src/Microsoft.ML.Data/Evaluators/BinaryClassifierEvaluator.cs#L663-L677\r\n\r\nLog-loss for multi-class:\r\nhttps://github.com/dotnet/machinelearning/blob/062be280a9d6de23838d4db5ad93fea9d7d0c1f6/src/Microsoft.ML.Data/Evaluators/MulticlassClassificationEvaluator.cs#L450-L458\r\n\r\nAs part of thinking through the right behavior, we should investigate the behavior of other ML packages like scikit-learn/TensorFlow/PyTorch.","Url":"https://github.com/dotnet/machinelearning/issues/5055","RelatedDescription":"Open issue \"Investigate thresholding binary log-loss\" (#5055)"},{"Id":"605646052","IsPullRequest":false,"CreatedAt":"2020-04-23T18:18:55","Actor":"behroozbc","Number":"5054","RawContent":null,"Title":"Can speech recognition be done in ML.NET?","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**:Windows\r\n- **.NET Version (eg., dotnet --info)**: 3.1.201\r\n\r\n### Issue\r\nhi \r\ni want to Speech recognition in ml .net i see issue list in #2732 is same but i want know now i can do it or not ??","Url":"https://github.com/dotnet/machinelearning/issues/5054","RelatedDescription":"Closed issue \"Can speech recognition be done in ML.NET?\" (#5054)"},{"Id":"605620858","IsPullRequest":false,"CreatedAt":"2020-04-23T15:12:12","Actor":"mengaims","Number":"5053","RawContent":null,"Title":"Support entire timeseries anomaly detection for SrCnn model","State":"open","Body":"### New estimator for SrCnn Algorithm to support entire anomaly detection\r\nBy creating a SrCnnAnomalyEstimator, user could do anomaly detection using SrCnn algorithm, this estimator is implemented in streaming way, for each arrived point, it will use a window of cached previous points to do calculation. But if the entire timeseries is alreay known, it would be more time efficient to do anomaly detection in entire way instead of streaming way. SrCnnEntireAnomalyEstimator is implemented to provide this entire timeseries anomaly detection.\r\n\r\nBesides, by old SrCnnAnomalyEstimator, user could only get whether the point is an anomaly or not, but has no way to set sensitivity value for the anomaly. Sometimes an anomaly do happens, but with a low sensitivity setting, it may not be a valid alert. The SrCnnEntireAnomalyEstimator will allow user to set sensitivity, and output margin for the point according to the sensitivity, so that when you get an anomaly point, you could judge if it's a valid alert by comparing the value with upper boundary and lower boundary.\r\n\r\nThe new SrCnnEntireAnomalyEstimator provides 3 modes, and output varies depending on selected mode:\r\n\r\n* **AnomalyOnly.** Only do anomaly detection. Output 3-element Double vector of (IsAnomaly, RawScore, Mag)\r\n* **AnomalyAndExpectedValue.** Besides anomaly detection, calculate expected value for each point. Output 4-element Double vector of (IsAnomaly, RawScore, Mag, ExpectedValue)\r\n* **AnomalyAndMargin.** Besides anomaly detection and expected value calculation, also estimate boundaries under given sensitivity. Output a 7-element Double vector of (IsAnomaly, AnomalyScore, Mag, ExpectedValue, BoundaryUnit, UpperBoundary, LowerBoundary).\r\n\r\n### Benchmark report\r\n#### 1. Dataset\r\nWe evaluate on the Yahoo timeseries dataset, which has 367 timeseries and 572966 points in total.\r\n#### 2. Evaluation method and score\r\n\r\nWe calculate the Precision, Recall, and F1 score using the method of： [https://github.com/iopsai/iops/tree/master/evaluation](https://github.com/iopsai/iops/tree/master/evaluation).\r\n\r\nThe anomaly detection part is the same for 3 modes, so the scores are the same among each mode.\r\nPrecision | Recall | F1 | #TruePositive | #Positives | #Anomalies | Fine tuned   parameters\r\n-- | -- | -- | -- | -- | -- | --\r\n0.816 | 0.669 | 0.735 | 2619 | 3208 | 3915 | Threshold=0.35, BatchSize=512\r\n\r\n#### 3. Latency:\r\nAnd we ran the three modes on a machine with Intel(R) Xeon(R) CPU E5-2660 v3 @ 2.60GHz, 16GB memory, x64 operating system.\r\n\r\nWe divided the input series into different sizes of buckets to get the estimation of latency under different point counts and different modes, the unit is ms.\r\n\r\n#Point Count | AnomalyOnly(ms) | AnomalyAndExpectedValue(ms) | AnomalyAndMargin(ms)\r\n-- | -- | -- | --\r\n128 | 0.1276 | 0.1337 | 0.8583\r\n256 | 1.0798 | 1.0863 | 1.1234\r\n512 | 1.1746 | 1.2167 | 2.1904\r\n1024 | 2.2675 | 2.3639 | 4.9734\r\n2048 | 5.2353 | 5.6926 | 12.1360\r\n4096 | 11.3913 | 12.0261 | 25.9043\r\n8129 | 20.0000 | 24.5533 | 54.9933\r\n\r\nRelated PR: #4998 ","Url":"https://github.com/dotnet/machinelearning/issues/5053","RelatedDescription":"Open issue \"Support entire timeseries anomaly detection for SrCnn model\" (#5053)"},{"Id":"604976647","IsPullRequest":false,"CreatedAt":"2020-03-16T05:30:59","Actor":"luislhg","Number":"5052","RawContent":null,"Title":"ImageClassificationTrainer can't load model","State":"open","Body":"### System information\r\n\r\n- Windows 10 Pro\r\n- .NET 4.8 and .NET Core 3.1: \r\n- Memory 12GB\r\n- Processor Intel Core i7 CPU 950 @ 3.07GHz\r\n\r\n### Issue\r\n\r\n- Tried to train an image classification using the Model Builder.\r\n\r\nSteps: Create a project.\r\nAdd a Machine Learning through solution explorer, then in the ML.NET Model Builder:\r\n\r\n1. Scenario -> Image Classification\r\n2. Data -> A folder with around 8.000 images (.png) separated in 8 folders/categories.\r\n3. Train -> Start Training\r\n\r\nIt will result in a popup (image attached) saying \"Model Builder Error\".\r\n![Model Builder Error](https://user-images.githubusercontent.com/16278387/76725716-d1d7ee00-672d-11ea-8589-7ed8b803321e.png)\r\n\r\nOutput/log from Machine Learning output:\r\n|     Trainer                              MicroAccuracy  MacroAccuracy  Duration #Iteration                     |\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003974.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004556.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003859.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003999.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003329.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003310.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003954.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004090.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003738.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004048.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\nTensorflow exception triggered while loading model.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5052","RelatedDescription":"Open issue \"ImageClassificationTrainer can't load model\" (#5052)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-05-02T05:30:35.7082359Z","RunDurationInMilliseconds":599}