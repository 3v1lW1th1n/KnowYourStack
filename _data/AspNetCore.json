{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7692339953","Type":"IssuesEvent","CreatedAt":"2018-05-17T21:23:03","Actor":"dasMulli","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3156","RelatedDescription":"Opened issue \"Testing is hard to set up and may break on shared framework servicing\" (#3156) at aspnet/Home","RelatedBody":"Sort of a follow-up to @poke's https://github.com/dotnet/sdk/issues/2253 but orthogonal.\r\n\r\nTL;DR: Unit tests should have an option to run on the asp.net core shared framework using the same servicing strategy that the main subject-under-test application uses, which means referencing the shared framework using the latest known version of the web SDK and applying NuGet and assembly resolution accordingly.\r\n\r\nStory:\r\nAs a developer, I want to add a new test project with a reference to my asp.net core project so that I can write integration tests.\r\n\r\nNaive steps:\r\n* dotnet new razor -o ../RazorPagesProject\r\n* dotnet new xunit\r\n* dotnet add reference ../RazorPagesProject\r\n* dotnet add package Microsoft.AspNetCore.Mvc.Testing -v 2.1.0-rc1-final\r\n* add C# code\r\n```c#\r\n\r\n    public class SampleIntegrationTests : IClassFixture<WebApplicationFactory<Startup>>\r\n    {\r\n        public HttpClient Client { get; }\r\n\r\n        public SampleIntegrationTests(WebApplicationFactory<Startup> fixture)\r\n        {\r\n            Client = fixture.CreateDefaultClient();\r\n        }\r\n\r\n        [Fact]\r\n        public async Task ItShallWork()\r\n        {\r\n            var response = await Client.GetAsync(\"/\");\r\n            Assert.Equal(HttpStatusCode.OK, response.StatusCode);\r\n        }\r\n    }\r\n```\r\n * dotnet test\r\n\r\nExpected: Test passes\r\n\r\nActual:\r\n```\r\nStarting test execution, please wait...\r\n[xUnit.net 00:00:00.5209160]   Discovering: SampleTests\r\n[xUnit.net 00:00:00.5793000]   Discovered:  SampleTests\r\n[xUnit.net 00:00:00.5854810]   Starting:    SampleTests\r\n[xUnit.net 00:00:00.7291840]     SampleTests.SampleIntegrationTests.ItShallWork [FAIL]\r\n[xUnit.net 00:00:00.7305700]       System.IO.FileNotFoundException : Could not load file or assembly 'Microsoft.AspNetCore, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\n[xUnit.net 00:00:00.7306390]\r\n[xUnit.net 00:00:00.7461290]   Finished:    SampleTests\r\nFailed   SampleTests.SampleIntegrationTests.ItShallWork\r\nError Message:\r\n System.IO.FileNotFoundException : Could not load file or assembly 'Microsoft.AspNetCore, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. Thesystem cannot find the file specified.\r\n```\r\n\r\nWorkaround:\r\nAdd a Package reference to the test project (!):\r\n\r\n```xml\r\n<ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.1.0-rc1-final\" />\r\n</ItemGroup>\r\n```\r\n\r\nWhat I really want:\r\n* It should **just work** ™️ \r\n* Integration tests shall run on the asp.net core shared framework\r\n* Integration tests shall use the same patch level of asp.net core components that `dotnet run` or `dotnet publish` + `dotnet myapp.dll` would use\r\n\r\nWhat could be done here? an web-test-SDK maybe?"},{"Id":"7692253664","Type":"IssuesEvent","CreatedAt":"2018-05-17T21:04:02","Actor":"Ro3A","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3155","RelatedDescription":"Opened issue \".Net Core 2.1 Angular SPA + Service Worker?\" (#3155) at aspnet/Home","RelatedBody":"What is the correct implementation for using service workers in a .Net Core 2.1 Angular SPA?\r\n\r\nI'm hung up on not being able to successfully run ng build --prod and thus only able to run the site in development mode. \r\n\r\nMy question is, should I be following documentation on adding service worker to an Angular App, or should I be using the WebEssentials extension by Mads Kristensen? \r\n\r\nhttps://github.com/madskristensen/WebEssentials.AspNetCore.ServiceWorker\r\n"},{"Id":"7687677882","Type":"IssuesEvent","CreatedAt":"2018-05-17T06:51:08","Actor":"TadeuszSobol","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3154","RelatedDescription":"Opened issue \"Razor Pages do not have simple build-in ajax partial pages, it is enough to do not switch to Razor Pages\" (#3154) at aspnet/Home","RelatedBody":"Razor Pages do not have simple build-in ajax partial pages reload, it is enough to do not switch to Razor Pages\r\n"},{"Id":"7686820287","Type":"IssuesEvent","CreatedAt":"2018-05-17T01:36:25","Actor":"cilerler","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3153","RelatedDescription":"Opened issue \"IOptionsSnapshot is not working with non API/Web scenarios\" (#3153) at aspnet/Home","RelatedBody":"It looks like `IOptionsSnapshot` with `reloadOnChange: true` set on [`HostBuilder`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.hosting.hostbuilder?view=aspnetcore-2.1) is not updating the options value when the **appsettings.json** content changes.\r\n\r\nThis behavior works fine on `WebHost`.  As far as my understanding `IOptionsSnapshot` gets generated as `Scoped` in `WebHost` for each call.  However this doesn't apply to `HostBuilder` since there is no outside caller exist.\r\n\r\nWe should be able to detect setting changes and I would like you to consider this issue as a feature request.  \r\n\r\nThanks in advance"},{"Id":"7686434095","Type":"IssuesEvent","CreatedAt":"2018-05-16T23:13:46","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3152","RelatedDescription":"Closed issue \"Antiforgery not found on Ubuntu 18.04 TLS\" (#3152) at aspnet/Home","RelatedBody":"Just stumbled uppon this issue, that it won't find Antiforgery. I published a selfcontained app for Ubuntu(Windows works fine).\r\nusing this cli:\r\n`dotnet publish -c Release -r ubuntu.14.04-x64`\r\nor\r\n`dotnet publish -c Release -r ubuntu-x64`\r\ngrafik\r\n![grafik](https://user-images.githubusercontent.com/1398184/40144395-c3997d4c-595e-11e8-9ace-3b76251a15ed.png)\r\n\r\nAnd i don't understand why it tries to look in `/lib/*`\r\nAll files seem to be in the publish subfolder. As of now i even tried installing the sdk on my Ubuntu using\r\n`sudo apt-get install dotnet-sdk-2.1.200`\r\nInstallation went fine. But still no success :/\r\n\r\nThis is how my project looks like:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n\t<PublishWithAspNetCoreTargetManifest>false</PublishWithAspNetCoreTargetManifest>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <None Remove=\"Properties\\PublishProfiles\\FolderProfile1.pubxml\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Antiforgery\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting.Server.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.InMemory\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.2\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n\r\n```"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7693003060","Type":"IssuesEvent","CreatedAt":"2018-05-18T00:50:57","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2310","RelatedDescription":"Opened issue \"Flakey test: StreamDoesNotStartIfTokenAlreadyCanceled\" (#2310) at aspnet/SignalR","RelatedBody":"https://ci.appveyor.com/project/aspnetci/signalr/build/1.0.4713\r\n\r\n```\r\nMicrosoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.StreamDoesNotStartIfTokenAlreadyCanceled(protocolName: \"json\", transportType: ServerSentEvents, path: \"/hubT\")\r\nRUNDOTNET : error Message:  [C:\\Users\\appveyor\\.dotnet\\buildtools\\korebuild\\2.2.0-preview1-17051\\KoreBuild.proj]\r\n   System.Exception : 1 error(s) logged.\r\n  SERVER Microsoft.AspNetCore.Server.Kestrel - ApplicationError - Connection id \"0HLDSAJQ34UGH\", Request id \"0HLDSAJQ34UGH:00000002\": An unhandled exception was thrown by the application.\r\n  ===================\r\n  Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n     at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1MessageBody.<PumpAsync>d__4.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.IO.Pipelines.PipeCompletion.ThrowLatchedException()\r\n     at System.IO.Pipelines.Pipe.GetReadResult(ReadResult& result)\r\n     at System.IO.Pipelines.Pipe.GetReadAsyncResult()\r\n     at System.IO.Pipelines.Pipe.DefaultPipeReader.GetResult(Int16 token)\r\n     at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<CopyToAsync>d__22.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream.<CopyToAsyncInternal>d__23.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ProcessSend>d__16.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ExecuteAsync>d__7.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n     at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__186`1.MoveNext()\r\n  ===================\r\n  Stack Trace:\r\n     at Microsoft.AspNetCore.SignalR.Tests.VerifyNoErrorsScope.Dispose()\r\n     at Microsoft.AspNetCore.SignalR.Tests.ServerLogScope.Dispose()\r\n     at Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.<StreamDoesNotStartIfTokenAlreadyCanceled>d__13.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n  Standard Output Messages:\r\n   | [2018-05-17T17:19:50] TestLifetime Information: Starting test StreamDoesNotStartIfTokenAlreadyCanceled-json-ServerSentEvents-/hubT\r\n   | [2018-05-17T17:19:50] TestLifetime Information: Starting test StreamDoesNotStartIfTokenAlreadyCanceled_json_ServerSentEvents_hubT\r\n   | [2018-05-17T17:19:50] ServerLogScope Information: Server log scope started.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:239).\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Starting HubConnection.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting HttpConnection.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Establishing connection with server at 'http://127.0.0.1:2778/hubT'.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:2778/hubT/negotiate'.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDSAJQ34UGG\" started.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:2778/hubT/negotiate  0\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/hubT/negotiate'.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Debug: New connection 1mmwnIrViLbKKG0N7BbDhQ created.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: 1mmwnIrViLbKKG0N7BbDhQ - Sending negotiation response.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDSAJQ34UGG\" completed keep alive response.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 0.8054ms 200 application/json\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Established connection '1mmwnIrViLbKKG0N7BbDhQ' with the server.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Skipping transport WebSockets because it was disabled by the client.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting transport 'ServerSentEvents' with Url: http://127.0.0.1:2778/hubT?id=1mmwnIrViLbKKG0N7BbDhQ.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Information: Starting transport. Transfer mode: Text.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request GET 'http://127.0.0.1:2778/hubT?id=1mmwnIrViLbKKG0N7BbDhQ'.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:2778/hubT?id=1mmwnIrViLbKKG0N7BbDhQ  \r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/hubT'.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: 1mmwnIrViLbKKG0N7BbDhQ - Establishing new connection.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.SignalR.HubConnectionHandler Debug: 1mmwnIrViLbKKG0N7BbDhQ - OnConnectedAsync started.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Starting receive loop.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 3 bytes. Parsing SSE frame.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Starting the send loop.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Transport 'ServerSentEvents' started.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Started.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Using HubProtocol 'json v1'.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending Hub Handshake.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Sending 32 bytes to the server using url: http://127.0.0.1:2778/hubT?id=1mmwnIrViLbKKG0N7BbDhQ.\r\n   | [2018-05-17T17:19:50] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:2778/hubT?id=1mmwnIrViLbKKG0N7BbDhQ'.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDSAJQ34UGH\" started.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:2778/hubT?id=1mmwnIrViLbKKG0N7BbDhQ  32\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/hubT'.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: 1mmwnIrViLbKKG0N7BbDhQ - Connection id \"0HLDSAJQ34UGH\", Request id \"0HLDSAJQ34UGH:00000001\": started reading request body.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: 1mmwnIrViLbKKG0N7BbDhQ - Connection id \"0HLDSAJQ34UGH\", Request id \"0HLDSAJQ34UGH:00000001\": done reading request body.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Trace: 1mmwnIrViLbKKG0N7BbDhQ - Received 32 bytes.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDSAJQ34UGH\" completed keep alive response.\r\n   | [2018-05-17T17:19:50] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 0.878ms 200 text/plain\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver Debug: 1mmwnIrViLbKKG0N7BbDhQ - Found protocol implementation for requested protocol: json.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.SignalR.HubConnectionContext Information: 1mmwnIrViLbKKG0N7BbDhQ - Completed connection handshake. Using HubProtocol 'json'.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Message(s) sent successfully.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Trace: Scanning connections.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Trace: Scanned connections in 00:00:00.0000608.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Http.Connections.Internal.Transports.ServerSentEventsTransport Trace: 1mmwnIrViLbKKG0N7BbDhQ - Writing a 3 byte message.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 6 bytes. Parsing SSE frame.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 13 bytes. Parsing SSE frame.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Passing message to application. Payload size: 3.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Handshake with server complete.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Receive loop starting.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Starting server timeout timer. Duration: 30000.00ms\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: HubConnection started.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:281).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:364).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.Streaming Trace: Invocation 1 created.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Preparing streaming invocation '1' of 'Stream', with return type 'System.Int32' and 1 argument(s).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Registering Invocation ID '1' for tracking.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Issuing Invocation '1': System.Int32 Stream(System.Int32).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending StreamInvocationMessage message '1'.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending StreamInvocationMessage message '1' completed.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:339).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:382).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:297).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending Cancellation for Invocation '1'.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending CancelInvocationMessage message '1'.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending CancelInvocationMessage message '1' completed.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:356).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.Streaming Trace: Invocation 1 disposed.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:324).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Stopping HubConnection.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Terminating receive loop.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Waiting for the receive loop to terminate.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Sending 94 bytes to the server using url: http://127.0.0.1:2778/hubT?id=1mmwnIrViLbKKG0N7BbDhQ.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:2778/hubT?id=1mmwnIrViLbKKG0N7BbDhQ'.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:776).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:785).\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Disposing HttpConnection.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Information: Transport is stopping.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:2778/hubT?id=1mmwnIrViLbKKG0N7BbDhQ  94\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/hubT'.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: 1mmwnIrViLbKKG0N7BbDhQ - Connection id \"0HLDSAJQ34UGH\", Request id \"0HLDSAJQ34UGH:00000002\": started reading request body.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLDSAJQ34UGH\" received FIN.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDSAJQ34UGH\" disconnecting.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLDSAJQ34UGH\" sending FIN.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: 1mmwnIrViLbKKG0N7BbDhQ - Connection id \"0HLDSAJQ34UGH\", Request id \"0HLDSAJQ34UGH:00000002\": done reading request body.\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Server.Kestrel Information: Connection id \"0HLDSAJQ34UGH\" bad request data: \"Unexpected end of request content.\"\r\n   | Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1MessageBody.<PumpAsync>d__4.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.IO.Pipelines.PipeCompletion.ThrowLatchedException()\r\n   |    at System.IO.Pipelines.Pipe.GetReadResult(ReadResult& result)\r\n   |    at System.IO.Pipelines.Pipe.GetReadAsyncResult()\r\n   |    at System.IO.Pipelines.Pipe.DefaultPipeReader.GetResult(Int16 token)\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<CopyToAsync>d__22.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream.<CopyToAsyncInternal>d__23.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ProcessSend>d__16.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ExecuteAsync>d__7.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   |    at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__186`1.MoveNext()\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Server.Kestrel Error: Connection id \"0HLDSAJQ34UGH\", Request id \"0HLDSAJQ34UGH:00000002\": An unhandled exception was thrown by the application.\r\n   | Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1MessageBody.<PumpAsync>d__4.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.IO.Pipelines.PipeCompletion.ThrowLatchedException()\r\n   |    at System.IO.Pipelines.Pipe.GetReadResult(ReadResult& result)\r\n   |    at System.IO.Pipelines.Pipe.GetReadAsyncResult()\r\n   |    at System.IO.Pipelines.Pipe.DefaultPipeReader.GetResult(Int16 token)\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<CopyToAsync>d__22.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream.<CopyToAsyncInternal>d__23.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ProcessSend>d__16.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ExecuteAsync>d__7.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   |    at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__186`1.MoveNext()\r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 2.3377ms 400 \r\n   | [2018-05-17T17:19:51] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDSAJQ34UGH\" stopped.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Send loop canceled.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Send loop stopped.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Receive loop canceled.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Receive loop stopped.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Transport stopped.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Disposed.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Canceling all outstanding invocations.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Removing pending invocation 1.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.Streaming Trace: Invocation 1 disposed.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Shutting down connection.\r\n   | [2018-05-17T17:19:51] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: HubConnection stopped.\r\n   | [2018-05-17T17:19:51] ServerLogScope Information: Server log scope stopped.\r\n   | [2018-05-17T17:19:51] TestLifetime Information: Finished test StreamDoesNotStartIfTokenAlreadyCanceled_json_ServerSentEvents_hubT in 0.7541414s\r\n   | [2018-05-17T17:19:51] TestLifetime Information: Finished test StreamDoesNotStartIfTokenAlreadyCanceled-json-ServerSentEvents-/hubT in 0.8606917s\r\n```"},{"Id":"7692901794","Type":"PullRequestEvent","CreatedAt":"2018-05-18T00:09:47","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2306","RelatedDescription":"Merged pull request \"Fix #2291 by documenting how to debug TS tests\" (#2306) at aspnet/SignalR","RelatedBody":"Fix #2291 \r\n\r\nAdded some VSCode goop to allow launching the tests:\r\n\r\n![image](https://user-images.githubusercontent.com/7574/40200077-3a128088-59d0-11e8-9ad5-b0d72086b9f0.png)\r\n\r\nDocumented how to use the goop to debug a single test as well.\r\n"},{"Id":"7692578287","Type":"IssuesEvent","CreatedAt":"2018-05-17T22:21:30","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/381","RelatedDescription":"Closed issue \"Enable API Check\" (#381) at aspnet/SignalR","RelatedBody":"When we release we need to generate a baseline and enable the API Check"},{"Id":"7692577227","Type":"PullRequestEvent","CreatedAt":"2018-05-17T22:21:14","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2304","RelatedDescription":"Merged pull request \"Generate baselines and enable Api check\" (#2304) at aspnet/SignalR","RelatedBody":"#381 \r\n\r\nGenerated baselines on release/2.1\r\nReran on dev to verify we didn't change anything"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7692886258","Type":"IssuesEvent","CreatedAt":"2018-05-18T00:03:53","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7791","RelatedDescription":"Closed issue \"Feature Request: AsyncValidationAttribute\" (#7791) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\n\r\nFeature Request\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\n\r\nProposed API:\r\n\r\n```cs\r\npublic class MyValidationAttribute : AsyncValidationAttribute\r\n{\r\n    protected override async Task<ValidationResult> IsValidAsync(object value, ValidationContext validationContext, HttpContext httpContext)\r\n    {\r\n        var db = httpContext.RequestServices.GetRequiredService<MyDbContext>();\r\n    }\r\n}\r\n```\r\n\r\n#### Description of the problem:\r\n\r\nIntroduce new validation attribute for asynchronously validating a model. The method should:\r\n\r\n- Be `async` to allow `await`-ing asynchronous validations. For example: against a database table.\r\n\r\n- Accept `HttpContext` as parameter, to allow implementer to pull application services.\r\n\r\nThis feature will allow organizing validations purely in attributes, instead of having some validations in attributes and some in controllers.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n\\-\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n"},{"Id":"7691929506","Type":"IssuesEvent","CreatedAt":"2018-05-17T19:59:12","Actor":"ryanelian","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7791","RelatedDescription":"Opened issue \"Feature Request: AsyncValidationAttribute\" (#7791) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\n\r\nFeature Request\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\n\r\nProposed API:\r\n\r\n```cs\r\npublic class MyValidationAttribute : AsyncValidationAttribute\r\n{\r\n    protected override async Task<ValidationResult> IsValidAsync(object value, ValidationContext validationContext, HttpContext httpContext)\r\n    {\r\n        var db = httpContext.RequestServices.GetRequiredService<MyDbContext>();\r\n    }\r\n}\r\n```\r\n\r\n#### Description of the problem:\r\n\r\nIntroduce new validation attribute for asynchronously validating a model. This model state should be:\r\n\r\n- `async` to allow `await`-ing asynchronous validations. For example: against a database table.\r\n\r\n- Passes `HttpContext` as parameter, to allow implementer to pull application services.\r\n\r\nThis feature will allow organizing validations purely in attributes, instead of having some validations in attributes and some in controllers.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n\\-\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n"},{"Id":"7691567689","Type":"PullRequestEvent","CreatedAt":"2018-05-17T18:47:13","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7783","RelatedDescription":"Closed pull request \"Added logging to model binding requestpredicate shortcircuit\" (#7783) at aspnet/Mvc","RelatedBody":""},{"Id":"7691565669","Type":"PullRequestEvent","CreatedAt":"2018-05-17T18:46:51","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7790","RelatedDescription":"Merged pull request \"PR feedback fixes for logging requestpredicate shortcircuit logging\" (#7790) at aspnet/Mvc","RelatedBody":""},{"Id":"7691450816","Type":"IssuesEvent","CreatedAt":"2018-05-17T18:25:01","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5231","RelatedDescription":"Closed issue \"AssemblyCopyright in AssemblyInfo does not reflect Copyright at the top of the file\" (#5231) at aspnet/Mvc","RelatedBody":"This seems quite inconsistant:\n\n``` csharp\n// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\nusing System.Reflection;\nusing System.Resources;\nusing System.Runtime.CompilerServices;\n\n[assembly: AssemblyMetadata(\"Serviceable\", \"True\")]\n[assembly: NeutralResourcesLanguage(\"en-us\")]\n[assembly: AssemblyCompany(\"Microsoft Corporation.\")]\n[assembly: AssemblyCopyright(\"© Microsoft Corporation. All rights reserved.\")]\n[assembly: AssemblyProduct(\"Microsoft ASP.NET Core\")]\n```\n\nI decided to go for .NET because it is awesome **and** open source. I think those AssemblyCompany and AssemblyCopyright attributes should be updated to reflect that.\n\nI am opening a PR that copies the 2 lines on top of the file.\n"},{"Id":"7691416180","Type":"PullRequestEvent","CreatedAt":"2018-05-17T18:18:36","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7790","RelatedDescription":"Opened pull request \"PR feedback fixes for logging requestpredicate shortcircuit logging\" (#7790) at aspnet/Mvc","RelatedBody":""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7691549583","Type":"PullRequestEvent","CreatedAt":"2018-05-17T18:43:50","Actor":"kichalla","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1795","RelatedDescription":"Merged pull request \"Added test for verifying fallbacksrc data\" (#1795) at aspnet/Identity","RelatedBody":""},{"Id":"7689060238","Type":"IssuesEvent","CreatedAt":"2018-05-17T11:29:48","Actor":"adams-hub","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1796","RelatedDescription":"Opened issue \"Scaffold: Missing ShowRecoveryCodes\" (#1796) at aspnet/Identity","RelatedBody":"Scaffolding is missing the ShowRecoveryCodes page."},{"Id":"7686002481","Type":"PullRequestEvent","CreatedAt":"2018-05-16T21:22:30","Actor":"kichalla","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1795","RelatedDescription":"Opened pull request \"Added test for verifying fallbacksrc data\" (#1795) at aspnet/Identity","RelatedBody":""},{"Id":"7683307536","Type":"PullRequestEvent","CreatedAt":"2018-05-16T13:26:54","Actor":"kichalla","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1794","RelatedDescription":"Opened pull request \"Fixed sha-integrity content of script tags in IdentityUI's cshtml files\" (#1794) at aspnet/Identity","RelatedBody":"Related to https://github.com/aspnet/templating/issues/520"},{"Id":"7682747945","Type":"IssuesEvent","CreatedAt":"2018-05-16T11:44:06","Actor":"tidyui","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1793","RelatedDescription":"Opened issue \"Primary Key in RoleClaim & UserClaim provider dependent\" (#1793) at aspnet/Identity","RelatedBody":"This probably belongs in the EntityFrameworkCore repo, but I haven't bumped into it before using Identity. The migration generated for `RoleClaim` and `UserClaim` is provider dependent on the provider that was used when generating the migration.\r\n\r\nFor example the primary keys are generated with `Annotation(Sqlite:Autoincrement, true)` when using SQLite, and `Annotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn)` when creating the migration with SqlServer.\r\n\r\nWhile this probably works when generating a migration for a single application it totally breaks when using it in a reusable library that is not supposed to be database dependent because the migration only works on the same type of database as it was created for.\r\n\r\nIt also seems a bit odd as one of the main features of EntityFramework is to abstract the database provider from the application making it easy to change the underlying infrastructure.\r\n\r\nBest regards\r\n\r\nHåkan"},{"Id":"7681274275","Type":"IssuesEvent","CreatedAt":"2018-05-16T06:43:56","Actor":"iAmBipinPaul","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1658","RelatedDescription":"Closed issue \"Identity-UI MVC scaffolder\" (#1658) at aspnet/Identity","RelatedBody":"scaffolding UI in the from of MVC pattern, so that it will be easy to manage for application that is built using MVC template instead of Razor Page template."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7692920799","Type":"IssuesEvent","CreatedAt":"2018-05-18T00:17:11","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2225","RelatedDescription":"Closed issue \"Flaky test: MaxRequestBufferSizeTests.LargeUpload\" (#2225) at aspnet/KestrelHttpServer","RelatedBody":"This has failed 50% of the time for me on recent local builds, always with the same actual result.\r\n```\r\n[xUnit.net 00:00:44.2552397]     LargeUpload(maxRequestBufferSize: 5242880, connectionAdapter: True, expectPause: True) [FAIL]\r\n[xUnit.net 00:00:44.2588137]       Assert.InRange() Failure\r\n[xUnit.net 00:00:44.2591272]       Range:  (5238785 - 20971519)\r\n[xUnit.net 00:00:44.2592656]       Actual: 20971520\r\n[xUnit.net 00:00:44.2619018]       Stack Trace:\r\n[xUnit.net 00:00:44.2652259]         D:\\github\\AspNet\\KestrelHttpServer\\test\\Kestrel.FunctionalTests\\MaxRequestBufferSizeTests.cs(160,0): at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.MaxRequestBufferSizeTests.<LargeUpload>d__6.MoveNext()\r\n[xUnit.net 00:00:44.2657057]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:00:44.2658986]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:00:44.2660844]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:00:44.2682372]       Output:\r\n[xUnit.net 00:00:44.2684638]         | Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.0 POST http:///  20971520\r\nFailed   LargeUpload(maxRequestBufferSize: 5242880, connectionAdapter: True, expectPause: True)\r\nError Message:\r\n Assert.InRange() Failure\r\nRange:  (5238785 - 20971519)\r\nActual: 20971520\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.MaxRequestBufferSizeTests.<LargeUpload>d__6.MoveNext() in D:\\github\\AspNet\\KestrelHttpServer\\test\\Kestrel.FunctionalTests\\MaxRequestBufferSizeTests.cs:line 160\r\n```"},{"Id":"7692858698","Type":"PullRequestEvent","CreatedAt":"2018-05-17T23:53:53","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2586","RelatedDescription":"Merged pull request \"Improve reliability of MaxRequestBufferSizeTests.LargeUpload\" (#2586) at aspnet/KestrelHttpServer","RelatedBody":"- Increase _dataLength from 20MB to 40MB to improve test reliability when using Sockets transport on Windows\r\n- Addresses https://github.com/aspnet/KestrelHttpServer/issues/2225"},{"Id":"7692417946","Type":"IssuesEvent","CreatedAt":"2018-05-17T21:40:53","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2587","RelatedDescription":"Opened issue \"Flaky Test: BlockedHeartbeat*\" (#2587) at aspnet/KestrelHttpServer","RelatedBody":"```\r\n  [xUnit.net 00:00:15.0820201]     BlockedHeartbeatDoesntCauseOverlapsAndIsLoggedAsError [FAIL]\r\n  Failed   BlockedHeartbeatDoesntCauseOverlapsAndIsLoggedAsError\r\nRUNDOTNET : error Message:  [/home/travis/.dotnet/buildtools/korebuild/2.2.0-preview1-17051/KoreBuild.proj]\r\n   Assert.True() Failure\r\n  Expected: True\r\n  Actual:   False\r\n  Stack Trace:\r\n     at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.HeartbeatTests.BlockedHeartbeatDoesntCauseOverlapsAndIsLoggedAsError() in /_/test/Kestrel.Core.Tests/HeartbeatTests.cs:line 43\r\n```\r\n\r\n```\r\n  Failed   BlockedHeartbeatIsNotLoggedAsErrorIfDebuggerAttached\r\nRUNDOTNET : error Message:  [/home/travis/.dotnet/buildtools/korebuild/2.2.0-preview1-17051/KoreBuild.proj]\r\n   Moq.MockException : \r\n  Expected invocation on the mock once, but was 2 times: h => h.OnHeartbeat(5/17/18 9:18:41 PM +00:00)\r\n  \r\n  Configured setups:\r\n  h => h.OnHeartbeat(5/17/18 9:18:41 PM +00:00), Times.Exactly(2)\r\n  \r\n  Performed invocations:\r\n  IHeartbeatHandler.OnHeartbeat(5/17/18 9:18:41 PM +00:00)\r\n  IHeartbeatHandler.OnHeartbeat(5/17/18 9:18:41 PM +00:00)\r\n  Stack Trace:\r\n     at Moq.Mock.ThrowVerifyException(MethodCall expected, IEnumerable`1 setups, IEnumerable`1 actualCalls, Expression expression, Times times, Int32 callCount)\r\n     at Moq.Mock.VerifyCalls(Interceptor targetInterceptor, MethodCall expected, Expression expression, Times times)\r\n     at Moq.Mock.Verify[T](Mock`1 mock, Expression`1 expression, Times times, String failMessage)\r\n     at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.HeartbeatTests.BlockedHeartbeatIsNotLoggedAsErrorIfDebuggerAttached() in /_/test/Kestrel.Core.Tests/HeartbeatTests.cs:line 76\r\n  [xUnit.net 00:00:17.1678332]     BlockedHeartbeatIsNotLoggedAsErrorIfDebuggerAttached [FAIL]\r\n```\r\n\r\nhttps://travis-ci.org/aspnet/KestrelHttpServer/jobs/380397601"},{"Id":"7691995614","Type":"PullRequestEvent","CreatedAt":"2018-05-17T20:12:27","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2586","RelatedDescription":"Opened pull request \"Improve reliability of MaxRequestBufferSizeTests.LargeUpload\" (#2586) at aspnet/KestrelHttpServer","RelatedBody":"- Increase _dataLength from 20MB to 40MB to improve reliability of Sockets on Windows\r\n- Addresses https://github.com/aspnet/KestrelHttpServer/issues/2225"},{"Id":"7691978055","Type":"IssuesEvent","CreatedAt":"2018-05-17T20:09:01","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2456","RelatedDescription":"Closed issue \"Flaky test: ValidationFailureRejectsConnection\" (#2456) at aspnet/KestrelHttpServer","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=437930&tab=buildResultsDiv&buildTypeId=Releases_21Public_UbuntuUniverse#testNameId8147719698525128850) occasionally with the following message:\r\n\r\n```\r\nSystem.UnauthorizedAccessException : Access to the path '/home/aspnetagent/.dotnet/corefx/cryptography/x509stores/my' is denied.\r\n---- System.IO.IOException : Bad file descriptor\r\n   at System.IO.Enumeration.FileSystemEnumerator`1.FindNextEntry()\r\n   at System.IO.Enumeration.FileSystemEnumerator`1.MoveNext()\r\n   at Internal.Cryptography.Pal.DirectoryBasedStoreProvider.CloneTo(X509Certificate2Collection collection)\r\n   at System.Security.Cryptography.X509Certificates.X509Store.get_Certificates()\r\n   at Internal.Cryptography.Pal.OpenSslX509ChainProcessor.FindCandidates(X509Certificate2 leaf, X509Certificate2Collection extraStore, HashSet`1 downloaded, HashSet`1 systemTrusted, TimeSpan& remainingDownloadTime)\r\n   at Internal.Cryptography.Pal.ChainPal.BuildChain(Boolean useMachineContext, ICertificatePal cert, X509Certificate2Collection extraStore, OidCollection applicationPolicy, OidCollection certificatePolicy, X509RevocationMode revocationMode, X509RevocationFlag revocationFlag, DateTime verificationTime, TimeSpan timeout)\r\n   at System.Security.Cryptography.X509Certificates.X509Chain.Build(X509Certificate2 certificate, Boolean throwOnException)\r\n   at System.Security.Cryptography.X509Certificates.X509Chain.Build(X509Certificate2 certificate)\r\n   at System.Net.Security.CertificateValidation.BuildChainAndVerifyProperties(X509Chain chain, X509Certificate2 remoteCertificate, Boolean checkCertName, String hostName)\r\n   at System.Net.Security.SecureChannel.VerifyRemoteCertificate(RemoteCertValidationCallback remoteCertValidationCallback, ProtocolToken& alertToken)\r\n   at System.Net.Security.SslState.CompleteHandshake(ProtocolToken& alertToken)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__43_2(IAsyncResult iar)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.HttpsConnectionAdapterTests.ValidationFailureRejectsConnection(ClientCertificateMode mode) in /_/test/Kestrel.FunctionalTests/HttpsConnectionAdapterTests.cs:line 303\r\n--- End of stack trace from previous location where exception was thrown ---\r\n----- Inner Stack Trace -----\r\n```\r\n\r\nFuture instances of this issue will appear [here](http://aspnetci/httpAuth/app/rest/builds?locator=tag:BadFileDescriptor,sinceDate:201710010T000000-0001&fields=build(startDate,buildTypeId,status,branchName,webUrl,tags))."},{"Id":"7691795722","Type":"IssuesEvent","CreatedAt":"2018-05-17T19:32:05","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2570","RelatedDescription":"Closed issue \"Crash when disposing in 2.1.0-rc1-final\" (#2570) at aspnet/KestrelHttpServer","RelatedBody":"Our unit tests crashed with the following error. \r\nNote that our code has no way to actually capture this error and handle it.\r\n\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. (An existing connection was forcibly closed by the remote host) ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host\r\n   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n   at System.Net.Sockets.Socket.Shutdown(SocketShutdown how)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.Shutdown()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.Abort()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1OutputProducer.Abort(Exception error)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Abort(Exception error)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection.Abort(Exception ex)\r\n   at System.IO.Pipelines.PipeCompletionCallbacks.Execute()\r\n   --- End of inner exception stack trace ---\r\n   at System.IO.Pipelines.PipeCompletionCallbacks.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7692602917","Type":"PullRequestEvent","CreatedAt":"2018-05-17T22:28:22","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2358","RelatedDescription":"Merged pull request \"Add `ProjectPathProvider` abstract for document tracker creation.\" (#2358) at aspnet/Razor","RelatedBody":"- First iteration of live share replaced the document tracker factory entirely; however, this will be prone to breaking changes in the future when me make changes to document tracker to not rely on a file path. To pre-emptively prevent breaking changes I added a project path provider that can be overridden in the live share case. Note that one big difference here between old and new is that instead of being a MEF service implementation for the project path resolution we're bringing that to the Workspace service level.\r\n- Added tests to validate the two flows of the default project path provider.\r\n"},{"Id":"7691882399","Type":"PullRequestEvent","CreatedAt":"2018-05-17T19:49:41","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2358","RelatedDescription":"Opened pull request \"Add `ProjectPathProvider` abstract for document tracker creation.\" (#2358) at aspnet/Razor","RelatedBody":"- First iteration of live share replaced the document tracker factory entirely; however, this will be prone to breaking changes in the future when me make changes to document tracker to not rely on a file path. To pre-emptively prevent breaking changes I added a project path provider that can be overridden in the live share case. Note that one big difference here between old and new is that instead of being a MEF service implementation for the project path resolution we're bringing that to the Workspace service level.\r\n- Added tests to validate the two flows of the default project path provider.\r\n"},{"Id":"7691875976","Type":"PullRequestEvent","CreatedAt":"2018-05-17T19:48:25","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2357","RelatedDescription":"Merged pull request \"Add a LiveShare project snapshot base to make it easier to detect breaking changes.\" (#2357) at aspnet/Razor","RelatedBody":""},{"Id":"7691775468","Type":"PullRequestEvent","CreatedAt":"2018-05-17T19:27:50","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2357","RelatedDescription":"Opened pull request \"Add a LiveShare project snapshot base to make it easier to detect breaking changes.\" (#2357) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7687608828","Type":"IssuesEvent","CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n"},{"Id":"7686968343","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:31:07","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Opened issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40153549-85278454-59b4-11e8-9b07-621a5de873f8.png)\r\n"},{"Id":"7686951810","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7671761413","Type":"IssuesEvent","CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Opened issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301) at aspnet/Announcements","RelatedBody":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*"},{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996435611354447872","CreatedAt":"2018-05-15T17:02:17+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us as https://t.co/3dFxSj11IQ https://t.co/PAZDWtuk1r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"996432221497057285","CreatedAt":"2018-05-15T16:48:49+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us for an MVC Functional Testing overview with Javier Calvarro Nelson at… https://t.co/FavBvWbz0w","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":484,"FavoriteCount":271,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null}]}},"RunOn":"2018-05-18T05:30:14.4530808Z","RunDurationInMilliseconds":9356}