{"Data":{"Blog":{"FeedItems":[{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null},{"Title":"Mobile Development at Microsoft Build 2018","PublishedOn":"2018-05-04T22:03:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s almost time for Microsoft Build 2018 in Seattle, Washington and that means a full three days of keynotes, breakout and theater sessions, workshops, and all the latest updates to your...","Href":"https://blog.xamarin.com/mobile-development-microsoft-build-2018/","RawContent":null},{"Title":"Xamarin Developer Events in May","PublishedOn":"2018-05-02T18:35:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET user groups are hosting recap events around the world all month long to ensure every developer gets the most they can out of Microsoft Build. Continue your Xamarin development...","Href":"https://blog.xamarin.com/xamarin-developer-events-may/","RawContent":null},{"Title":"Implement Drawer and Split UI with the Xamarin.Forms MasterDetailPage","PublishedOn":"2018-04-26T18:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Drawer navigation and master-detail UI are two powerful patterns that guide users through content in applications with significant amounts of data or many pages. Xamarin.Forms provides the...","Href":"https://blog.xamarin.com/implement-drawer-split-ui-xamarin-forms-masterdetailpage/","RawContent":null},{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null},{"Title":"Community Books on Xamarin Development","PublishedOn":"2018-04-20T15:01:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin development is constantly growing and evolving to meet the needs of developers. To help you find the right resources for your development education, we&#8217;ve curated a list of community...","Href":"https://blog.xamarin.com/community-books-xamarin-development/","RawContent":null},{"Title":"Automatic Provisioning with Visual Studio 2017","PublishedOn":"2018-04-18T17:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS device provisioning is largely regarded by all iOS developers, Xamarin or otherwise, as being one of the biggest barriers to getting started with iOS. To test and deploy your app on a device, you...","Href":"https://blog.xamarin.com/automatic-provisioning-visual-studio-2017/","RawContent":null},{"Title":"A Brief History of .NET Standard","PublishedOn":"2018-04-16T16:21:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin (and before that, Mono) allowed .NET code to run on multiple platforms for years. These days, there&#8217;s a new push in cross-platform with .NET Core and .NET Standard. This post looks at...","Href":"https://blog.xamarin.com/history-dot-net-standard/","RawContent":null},{"Title":"Using the iOS 11 Drag and Drop APIs in Xamarin.iOS Apps","PublishedOn":"2018-04-13T17:07:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 introduced drag and drop, a feature that allows users to easily move or copy data within or between apps. With drag and drop, users can: Select items to drag Add extra items to a drag after it...","Href":"https://blog.xamarin.com/drag-and-drop-apis-for-xamarin-apps/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio 2017","PublishedOn":"2018-04-11T18:30:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 is now available, featuring significant improvements to the XAML experience for mobile developers. The Xamarin.Forms XAML editing experience is now powered by the same...","Href":"https://blog.xamarin.com/new-xamarin-forms-xaml-intellisense-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7639985208","Type":"PullRequestEvent","CreatedAt":"2018-05-07T20:57:28","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1656","RelatedDescription":"Closed pull request \"Bump to mono/2018-04\" (#1656) at xamarin/xamarin-android","RelatedBody":null},{"Id":"7639961890","Type":"PullRequestEvent","CreatedAt":"2018-05-07T20:52:50","Actor":"radical","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1656","RelatedDescription":"Opened pull request \"Bump to mono/2018-04\" (#1656) at xamarin/xamarin-android","RelatedBody":null},{"Id":"7639545937","Type":"PullRequestEvent","CreatedAt":"2018-05-07T19:27:08","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1655","RelatedDescription":"Opened pull request \"[CodeBehind] Generate codebehind source in design time build\" (#1655) at xamarin/xamarin-android","RelatedBody":"IDEs don't build the project until the user tells them to (either to debug or\r\njust build) and thus initially the codebehind sources are not generated. This\r\ncauses the lack of intellisense as well as error reports from the IDE about\r\nmissing types etc. However, IDE uses a so-called \"design-time build\" to update\r\nproject resources and generate source files related to this task. Layout\r\ncodebehind generation should be done at the same time and this patch is an\r\nattempt to make it so by adding the `_IncludeLayoutBindingSources` target\r\ndependency to the `_ManagedUpdateAndroidResgen` target used by\r\ndesign-time-build."},{"Id":"7639194722","Type":"PullRequestEvent","CreatedAt":"2018-05-07T18:16:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1653","RelatedDescription":"Merged pull request \"[CodeBehind] Make sure the generated binding is not linked out\" (#1653) at xamarin/xamarin-android","RelatedBody":"When the application with generated code-behind bindings is built in the Release\r\nconfiguration with binding enabled (the default), the binding classes might be\r\nlinked out as they are instantiated using `Activator.CreateInstance` and not\r\ndirectly. Prevent this from happening by decorating the binding constructor with\r\nthe `[Preserve]` custom attribute which tells the linker to keep the method in\r\nthe application."},{"Id":"7639051074","Type":"IssuesEvent","CreatedAt":"2018-05-07T17:48:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1642","RelatedDescription":"Closed issue \"ValidateJavaVersion should check both java and javac version\" (#1642) at xamarin/xamarin-android","RelatedBody":"The JDK and JRE are distinct releases from Oracle, and it is possible for the versions not to match within the same environment.\r\n\r\nWe warn the user if the JRE (`java` binary) is too new, but don't detect mismatches, and don't gracefully deal with the JDK (`javac` binary) being too new.\r\n\r\nRepro:\r\n1. `sudo apt install openjdk-9-jdk openjdk-8-jre`\r\n2. `sudo update-alternatives --config java` -> set to Java 8\r\n3. `sudo update-alternatives --config javac` -> set to Java 9\r\n\r\n```\r\ndirecthex@bubblegum:~/Projects/droidapp$ java -version\r\nopenjdk version \"1.8.0_162\"\r\nOpenJDK Runtime Environment (build 1.8.0_162-8u162-b12-1-b12)\r\nOpenJDK 64-Bit Server VM (build 25.162-b12, mixed mode)\r\ndirecthex@bubblegum:~/Projects/droidapp$ javac -version\r\njavac 9.0.4\r\ndirecthex@bubblegum:~/Projects/droidapp$ msbuild /p:AndroidSdkDirectory=/home/directhex/androidsdk\r\nMicrosoft (R) Build Engine version 15.6.0.0 ( Fri Apr  6 15:55:10 UTC 2018) for Mono\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 03/05/2018 22:16:35.\r\nProject \"/home/directhex/Projects/droidapp/droidapp.sln\" on node 1 (default targets).\r\nValidateSolutionConfiguration:\r\n  Building solution configuration \"Debug|Any CPU\".\r\nProject \"/home/directhex/Projects/droidapp/droidapp.sln\" (1) is building \"/home/directhex/Projects/droidapp/droidapp/droidapp.csproj\" (2) on node 1 (default targets).\r\n_SetLatestTargetFrameworkVersion:\r\n  Found Java SDK version 1.8.0.\r\n_ValidateAndroidPackageProperties:\r\n    PackageName: com.companyname.droidapp\r\n_ResolveMonoAndroidSdks:\r\n  MonoAndroid Tools: /usr/lib/xamarin.android/xbuild/Xamarin/Android/\r\n  Android Platform API level: 27\r\n  TargetFrameworkVersion: v8.1\r\n  Android NDK: /\r\n  Android SDK: /home/directhex/androidsdk/\r\n  Android SDK Build Tools: /home/directhex/androidsdk/build-tools/27.0.3/\r\n  Java SDK: /usr/\r\n_SetupApplicationJavaClass:\r\n  Application Java class: android.app.Application\r\n_ResolveLibraryProjectImports:\r\nSkipping target \"_ResolveLibraryProjectImports\" because all output files are up-to-date with respect to the input files.\r\n_BuildLibraryImportsCache:\r\nSkipping target \"_BuildLibraryImportsCache\" because all output files are up-to-date with respect to the input files.\r\n_BuildAdditionalResourcesCache:\r\nSkipping target \"_BuildAdditionalResourcesCache\" because all output files are up-to-date with respect to the input files.\r\n_CreateAdditionalResourceCache:\r\nSkipping target \"_CreateAdditionalResourceCache\" because it has no outputs.\r\n_GenerateAndroidResourceDir:\r\nSkipping target \"_GenerateAndroidResourceDir\" because all output files are up-to-date with respect to the input files.\r\n_GenerateLayoutBindings:\r\nSkipping target \"_GenerateLayoutBindings\" because all output files are up-to-date with respect to the input files.\r\n_DefineBuildTargetAbis:\r\n  Build target ABI: armeabi-v7a\r\n_UpdateAndroidResgen:\r\nSkipping target \"_UpdateAndroidResgen\" because all output files are up-to-date with respect to the input files.\r\n_CreateAdditionalResourceCache:\r\nSkipping target \"_CreateAdditionalResourceCache\" because it has no outputs.\r\n_GenerateJavaDesignerForComponent:\r\nSkipping target \"_GenerateJavaDesignerForComponent\" because it has no inputs.\r\nGenerateTargetFrameworkMonikerAttribute:\r\nSkipping target \"GenerateTargetFrameworkMonikerAttribute\" because all output files are up-to-date with respect to the input files.\r\nCoreCompile:\r\nSkipping target \"CoreCompile\" because all output files are up-to-date with respect to the input files.\r\n_CopyFilesMarkedCopyLocal:\r\n  Touching \"/home/directhex/Projects/droidapp/droidapp/obj/Debug/droidapp.csproj.CopyComplete\".\r\nCopyFilesToOutputDirectory:\r\n  droidapp -> /home/directhex/Projects/droidapp/droidapp/bin/Debug/droidapp.dll\r\n_ResolveAssemblies:\r\n    Adding assembly reference for droidapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, recursively...\r\n    Adding assembly reference for Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n      Adding assembly reference for System.Runtime, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.ComponentModel.Composition, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, recursively...\r\n      Adding assembly reference for System.Diagnostics.Debug, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Threading, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Collections.Concurrent, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Reflection, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Linq.Expressions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Reflection.Primitives, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Dynamic.Runtime, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.ObjectModel, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Linq, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Runtime.InteropServices, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Runtime.Extensions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Reflection.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n    Adding assembly reference for Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n      Adding assembly reference for System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n      Adding assembly reference for System.Runtime.Serialization, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e, recursively...\r\n        Adding assembly reference for System.ServiceModel.Internals, Version=0.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, recursively...\r\n    Adding assembly reference for mscorlib, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e, recursively...\r\n    Adding assembly reference for System.Core, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e, recursively...\r\n    Adding assembly reference for System, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e, recursively...\r\n      Adding assembly reference for Mono.Security, Version=2.0.5.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756, recursively...\r\n    Adding assembly reference for System.Xml, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e, recursively...\r\n_CreateIntermediateAssembliesDir:\r\nSkipping target \"_CreateIntermediateAssembliesDir\" because all output files are up-to-date with respect to the input files.\r\n_CollectConfigFiles:\r\nSkipping target \"_CollectConfigFiles\" because all output files are up-to-date with respect to the input files.\r\n_CopyConfigFiles:\r\nSkipping target \"_CopyConfigFiles\" because it has no outputs.\r\n_CopyIntermediateAssemblies:\r\nSkipping target \"_CopyIntermediateAssemblies\" because all output files are up-to-date with respect to the input files.\r\n_ConvertPdbFiles:\r\nSkipping target \"_ConvertPdbFiles\" because it has no outputs.\r\n_CopyPdbFiles:\r\nSkipping target \"_CopyPdbFiles\" because all output files are up-to-date with respect to the input files.\r\n_CopyMdbFiles:\r\nSkipping target \"_CopyMdbFiles\" because it has no outputs.\r\n_StripEmbeddedLibraries:\r\nSkipping target \"_StripEmbeddedLibraries\" because all output files are up-to-date with respect to the input files.\r\n_LinkAssembliesNoShrink:\r\nSkipping target \"_LinkAssembliesNoShrink\" because all output files are up-to-date with respect to the input files.\r\n_GenerateJavaStubs:\r\nSkipping target \"_GenerateJavaStubs\" because all output files are up-to-date with respect to the input files.\r\n_AddStaticResources:\r\nSkipping target \"_AddStaticResources\" because all output files are up-to-date with respect to the input files.\r\n_GeneratePackageManagerJava:\r\nSkipping target \"_GeneratePackageManagerJava\" because all output files are up-to-date with respect to the input files.\r\n_CreateAdditionalResourceCache:\r\nSkipping target \"_CreateAdditionalResourceCache\" because it has no outputs.\r\n_GenerateAndroidAssetsDir:\r\nSkipping target \"_GenerateAndroidAssetsDir\" because it has no outputs.\r\n_CreateBaseApk:\r\nSkipping target \"_CreateBaseApk\" because all output files are up-to-date with respect to the input files.\r\n_CreateAdditionalResourceCache:\r\nSkipping target \"_CreateAdditionalResourceCache\" because it has no outputs.\r\n_CompileJava:\r\n  /usr/bin/javac -J-Dfile.encoding=UTF8 -d obj/Debug/android/bin/classes -classpath /usr/lib/mono/xbuild-frameworks/MonoAndroid/v8.1/mono.android.jar -bootclasspath /home/directhex/androidsdk/platforms/android-27/android.jar -encoding UTF-8 \"@/tmp/tmp59542912.tmp\" \r\n  javac: option --boot-class-path not allowed with target 1.9\r\n/usr/lib/mono/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2148,3): error MSB6006: \"javac\" exited with code 2. [/home/directhex/Projects/droidapp/droidapp/droidapp.csproj]\r\nDone Building Project \"/home/directhex/Projects/droidapp/droidapp/droidapp.csproj\" (default targets) -- FAILED.\r\nDone Building Project \"/home/directhex/Projects/droidapp/droidapp.sln\" (default targets) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n\"/home/directhex/Projects/droidapp/droidapp.sln\" (default target) (1) ->\r\n\"/home/directhex/Projects/droidapp/droidapp/droidapp.csproj\" (default target) (2) ->\r\n(_CompileJava target) -> \r\n  /usr/lib/mono/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2148,3): error MSB6006: \"javac\" exited with code 2. [/home/directhex/Projects/droidapp/droidapp/droidapp.csproj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.31\r\n```"},{"Id":"7639050100","Type":"PullRequestEvent","CreatedAt":"2018-05-07T17:48:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1644","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Check `javac -version`\" (#1644) at xamarin/xamarin-android","RelatedBody":"@directhex notes:\r\n\r\n> Jdk and jre aren't the same thing.\r\n> If jre (java) is 8 but Jdk (javac) is 9, javac throws exit 2\r\n> Yes I know it's an edge case\r\n> But we should check both java and javac version for XA0030\r\n\r\nUpdate `<ResolveSdks/>` to validate versions from *both*\r\n`java -version` *and* `javac -version`, to ensure that we don't\r\ninadvertently use JDK 9 tooling (see also 9c9e5e53)."},{"Id":"7638624242","Type":"PullRequestEvent","CreatedAt":"2018-05-07T16:19:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1654","RelatedDescription":"Opened pull request \"[mono-runtime] Remap Mono.Cecil for utilities\" (#1654) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1652\r\n\r\nXamarin.Android doesn't ship `Mono.Cecil.dll`, as it is not fully\r\nAPI-stable, and there have been historical problems when multiple\r\ndifferent versions of `Mono.Cecil.dll` were being used within the same\r\nprocess at the same time.\r\n\r\nOur solution to this was to \"vendorize\" `Mono.Cecil` into\r\n`Xamarin.Android.Cecil.dll`, and update any utilities which reference\r\n`Mono.Cecil.dll` to instead reference `Xamarin.Android.Cecil.dll` by\r\nusing `remap-assembly-ref.exe`; see also e814528c.\r\n\r\nUnfortunately we overlooked some utilities.\r\n\r\nUpdate `mono-runtimes.targets` so that `illinkanalyzer.exe`,\r\n`mono-symbolicate.exe`, and `mkbundle.exe` have any assembly\r\nreferences to `Mono.Cecil` remap'd to target `Xamarin.Android.Cecil`."},{"Id":"7638533226","Type":"PullRequestEvent","CreatedAt":"2018-05-07T16:02:13","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1653","RelatedDescription":"Opened pull request \"[CodeBehind] Make sure the generated binding is not linked out\" (#1653) at xamarin/xamarin-android","RelatedBody":"When the application with generated code-behind bindings is built in the Release\r\nconfiguration with binding enabled (the default), the binding classes might be\r\nlinked out as they are instantiated using `Activator.CreateInstance` and not\r\ndirectly. Prevent this from happening by decorating the binding constructor with\r\nthe `[Preserve]` custom attribute which tells the linker to keep the method in\r\nthe application."},{"Id":"7638449967","Type":"IssuesEvent","CreatedAt":"2018-05-07T15:46:55","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1652","RelatedDescription":"Opened issue \"Links against ABI-unstable system Mono.Cecil\" (#1652) at xamarin/xamarin-android","RelatedBody":"Mono.Cecil is a very unstable library (which has hurt us in the past). It's dangerous to trust the version in the GAC will ever be the same between minor Mono point releases\r\n\r\nCurrently, the linking for `$PREFIX/xamarin.android/xbuild/Xamarin/Android/illinkanalyzer.exe` uses the GAC version of Mono.Cecil, which should be avoided where possible (e.g. if XA was built with Mono 5.10, but runs on 5.12, who knows how many symbols won't even be there any more in Cecil?)"},{"Id":"7638133598","Type":"IssuesEvent","CreatedAt":"2018-05-07T14:52:37","Actor":"tranb3r","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1651","RelatedDescription":"Opened issue \"Bundled app initialization error (vs 15.7 preview)\" (#1651) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a xamarin app for Android\r\n2. Enable \"Bundle Assemblies into Native Code\" option : <BundleAssemblies>true</BundleAssemblies> in csproj\r\n3. Build and launch app in VS 2017 15.7 preview\r\n\r\n### Expected Behavior\r\n\r\nNo crash.\r\nThis is actually what happens with VS 2017 15.6.7\r\n\r\n### Actual Behavior\r\n\r\nApp crashes (when using VS 2017 15.7 preview) with the following error:\r\nbundled app initialization error: dlopen failed: cannot locate symbol \"mono_jit_set_aot_mode\" referenced by libmonodroid_bundle_app.so\r\n\r\n### Version Information (causing the error)\r\n\r\nVersion 15.7.0 Preview 5.0\r\nVisualStudio.15.Preview/15.7.0-pre.5.0+27625.0\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nXamarin   4.10.0.440 (943b34d9d)\r\nXamarin.Android SDK   8.3.0.18 (HEAD/1f8462ef1)\r\n\r\n### Version Information (no error)\r\n\r\nVersion 15.6.7\r\nVisualStudio.15.Release/15.6.7+27428.2043\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nXamarin   4.9.0.753 (f0f46392f)\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\n"},{"Id":"7637814796","Type":"PullRequestEvent","CreatedAt":"2018-05-07T13:58:18","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1650","RelatedDescription":"Merged pull request \"Update LayoutCodeBehind.md\" (#1650) at xamarin/xamarin-android","RelatedBody":"* Drop the `partial` modifier in the *Binding* examples. Our templates don't generate partial classes and it may create the impression that `partial` must be added, which it is not. \r\n* Fix a typo"},{"Id":"7637663125","Type":"PullRequestEvent","CreatedAt":"2018-05-07T13:31:13","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1650","RelatedDescription":"Opened pull request \"Update LayoutCodeBehind.md\" (#1650) at xamarin/xamarin-android","RelatedBody":"* Drop the `partial` modifier in the *Binding* examples. Our templates don't generate partial classes and it may create the impression that `partial` must be added, which it is not. \r\n* Fix a typo"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7640857798","Type":"PullRequestEvent","CreatedAt":"2018-05-08T01:11:53","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2623","RelatedDescription":"Opened pull request \"Enable Droid Shared Runtime + Fast Deploy\" (#2623) at xamarin/Xamarin.Forms","RelatedBody":"Flip on Shared Runtime + Fast Deploy for Android Gallery Project. We'd like 'em flipped on because the deploys should be faster. They've been off up to now because we've thought the debugger is more stable with 'em off. However the debugger seems to be working well enough with 'em flipped on in my recent testing. And if we flip it on then we can find more VS debugger bugs in our preferred configuration. \r\n"},{"Id":"7640809030","Type":"PullRequestEvent","CreatedAt":"2018-05-08T00:53:00","Actor":"rookiejava","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2622","RelatedDescription":"Opened pull request \"[Tizen] ScaleX and ScaleY\" (#2622) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR is extension of #1280 for tizen backend.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/1029134/39731920-5b13a35c-52a5-11e8-9956-a373894edd5e.gif\" width=320>\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7640796189","Type":"IssuesEvent","CreatedAt":"2018-05-08T00:48:09","Actor":"pingzing","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2621","RelatedDescription":"Opened issue \"[Enhancement] Ellipse/Circle Control\" (#2621) at xamarin/Xamarin.Forms","RelatedBody":"# Rationale\r\n\r\nCurrently, there's no way to draw a blob of rounded pixels in Xamarin Forms without either employing a library, doing some brittle hackery with rounded BoxView, or drawing it yourself with Skia. None of these are _great_ options.\r\n\r\n- Judging quality and completeness of libraries is often a difficult task.\r\n- Rounded BoxViews don't respond well to resizing, or behave consistently between platforms.\r\n- The Skia solution requires either throwing out XAML entirely and drawing everything yourself, or creating a ContentView that contains a Skia canvas, and a single circle. Furthermore, exposing all the useful properties of that circle via `BindableProperties` would be a fair bit of boilerplate.\r\n\r\n# API\r\n\r\nI'd expect at least the following properties, shameless stolen from the [UWP Ellipse definition](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.shapes.ellipse#properties-):\r\n\r\n- `Stroke : Color`\r\n- `Fill : Color`\r\n- `StrokeThickness : double`\r\n- `HeightRequest  : double`\r\n- `WidthRequest : double`"},{"Id":"7640609350","Type":"PullRequestEvent","CreatedAt":"2018-05-07T23:41:40","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2620","RelatedDescription":"Opened pull request \"[UWP] NRE when checking IsInNativeLayout during OnScrollToRequested\" (#2620) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n- Added null check on ScrollView Element in UWP Scroll View Renderer\r\n- unsubscribe from ScrollToRequested in dispose to improve cleanup\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/2336\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7640540165","Type":"IssuesEvent","CreatedAt":"2018-05-07T23:18:31","Actor":"cshearercooper","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2619","RelatedDescription":"Opened issue \"Event registration is overwriting existing delegate\" (#2619) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWe are limiting the # of characters a user can enter into an Entry field by creating an iOS-specific renderer, and in the renderer's OnElementChanged() we are getting the UITextField and setting its Delegate property to a delegate object of our own creation.  Our delegate only implements ShouldChangeCharacters(), and if it sees the change would cause the # of characters to exceed the limit, it disallows it.\r\n\r\nAs of the latest update to Xamarin.Forms, when we navigate away from the screen that contains the entry field, and then back again, we are now getting\r\n\r\nException InvalidOperationException: Event registration is overwriting existing delegate. Either just use events or your own delegate: Company.Controls.iOS.MyDelegate UIKit.UITextField+_UITextFieldDelegate\r\n\r\nWe are not registering any events on the UITextField.  Is Xamarin Forms now registering such events, so that I am no longer allowed to set my own delegate?\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.0.0.446417\r\n\r\n- Last known good version:\r\n- IDE: Visual Studio Windows 15.7.0\r\n\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7641504719","Type":"PullRequestEvent","CreatedAt":"2018-05-08T05:24:24","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4043","RelatedDescription":"Merged pull request \"[docs] Update optimizations document with upstream changes.\" (#4043) at xamarin/xamarin-macios","RelatedBody":"Ref: https://github.com/MicrosoftDocs/xamarin-docs-pr/pull/204"},{"Id":"7641395236","Type":"PullRequestEvent","CreatedAt":"2018-05-08T04:39:21","Actor":"vargaz","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4048","RelatedDescription":"Opened pull request \"Remove the llvm submodule, its now managed by mono.\" (#4048) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7639764925","Type":"PullRequestEvent","CreatedAt":"2018-05-07T20:12:41","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4040","RelatedDescription":"Merged pull request \"[scenekit] SCNPhysicsShape's Create should take a SCNMatrix4 array, not SCNVector3\" (#4040) at xamarin/xamarin-macios","RelatedBody":"- Fixes #4030: SCNPhysicsShape.Create transforms param is bound incorrectly\n(https://github.com/xamarin/xamarin-macios/issues/4030)"},{"Id":"7639638443","Type":"IssuesEvent","CreatedAt":"2018-05-07T19:46:34","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4045","RelatedDescription":"Closed issue \"Visual Studio for Mac Crashing after latest update\" (#4045) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Simply open Visual Studio\r\n2. Open my Project.\r\n\r\n\r\n### Expected Behavior\r\nIt should work properly..\r\n### Actual Behavior\r\nBut it crashes before I can even start working...\r\n\r\nI tried to install the mono framwork from Visual Studio channel, but it still crashes...\r\n### Environment\r\n\r\n\r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.5 (build 1254)\r\nInstallation UUID: 0c2d93b7-6a6a-4881-98a7-06167af8b034\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.0.5\r\n\t1.0.0-rc2-3002702\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.4\r\n\t1.0.0-preview1-002702\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.176 (Visual Studio Professional)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.177 (Visual Studio Professional)\r\nHash: 7e782c1e\r\nBranch: d15-7\r\nBuild date: 2018-04-25 15:27:13-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Professional)\r\nAndroid SDK: /Users/yakir/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t6.0   (API level 23)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 23.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705001254\r\nGit revision: 498923ea36d2c7fe440c4e4b8cfb75bd50bbd748\r\nBuild date: 2018-05-05 10:35:24-04\r\nXamarin addins: 219f1c4943b4693b837b4173dd10ea982a47c852\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Fri Apr 13 19:32:32 PDT 2018\r\n    root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nNuGet Package Explorer 0.2\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\nI simply can't work :/\r\n\r\nIf you need any other logs let me know and I will post it here in a reply.\r\n\r\n![image](https://user-images.githubusercontent.com/19772782/39716613-87b1db0c-5239-11e8-8a27-54777b835f76.png)\r\n\r\n\r\n"},{"Id":"7639555141","Type":"PullRequestEvent","CreatedAt":"2018-05-07T19:29:04","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4047","RelatedDescription":"Opened pull request \"[msbuild] Updated MetalTaskBase to use the new -m{os}-version-min arg…\" (#4047) at xamarin/xamarin-macios","RelatedBody":"…ument\r\n\r\nFixes issue #4019"},{"Id":"7639139863","Type":"IssuesEvent","CreatedAt":"2018-05-07T18:05:45","Actor":"dannyatftecu","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4046","RelatedDescription":"Opened issue \"VS MacOS build fails with: error MT0000: Unexpected error\" (#4046) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<--\r\nPlease fill in the *entire* template below.\r\n\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\n\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Update to the latest VS Mac as of 5/7/2018 10AM PDT.\r\n2. Build for iPhone [hardware]\r\n3. Fail with \"Unexpected error.\"\r\n4. This build was working fine last week before I upgraded VS Mac.\r\n\r\n### Expected Behavior\r\n\r\nBuild like iOS Simulator without error.\r\n\r\n### Actual Behavior\r\n\r\nBuild error only for iOS device build.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5 (build 1254)\r\nInstallation UUID: 0cdcd297-61e0-41a3-80cc-ce8ccd7de743\r\nRuntime:\r\n\tMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 510010047\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Community)\r\nAndroid SDK: /Users/nikhilshinde/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t5.0 (API level 21)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home\r\njava version \"1.8.0_172\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_172-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.172-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.176 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.177 (Visual Studio Community)\r\nHash: 7e782c1e\r\nBranch: d15-7\r\nBuild date: 2018-04-25 15:27:13-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705001254\r\nGit revision: 498923ea36d2c7fe440c4e4b8cfb75bd50bbd748\r\nBuild date: 2018-05-05 10:35:24-04\r\nXamarin addins: 219f1c4943b4693b837b4173dd10ea982a47c852\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\nMain error:     MTOUCH : error MT0000: Unexpected error - Please file a bug report at http://bugzilla.xamarin.com\r\n[error_build050618.log](https://github.com/xamarin/xamarin-macios/files/1980924/error_build050618.log)\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7639060905","Type":"IssuesEvent","CreatedAt":"2018-05-07T17:50:11","Actor":"yakeer","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4045","RelatedDescription":"Opened issue \"Visual Studio for Mac Crashing after latest update\" (#4045) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<--\r\nPlease fill in the *entire* template below.\r\n\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\n\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Simply open Visual Studio\r\n2. Open my Project.\r\n\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.5 (build 1254)\r\nInstallation UUID: 0c2d93b7-6a6a-4881-98a7-06167af8b034\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.0.5\r\n\t1.0.0-rc2-3002702\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.4\r\n\t1.0.0-preview1-002702\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.176 (Visual Studio Professional)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.177 (Visual Studio Professional)\r\nHash: 7e782c1e\r\nBranch: d15-7\r\nBuild date: 2018-04-25 15:27:13-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Professional)\r\nAndroid SDK: /Users/yakir/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t6.0   (API level 23)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 23.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705001254\r\nGit revision: 498923ea36d2c7fe440c4e4b8cfb75bd50bbd748\r\nBuild date: 2018-05-05 10:35:24-04\r\nXamarin addins: 219f1c4943b4693b837b4173dd10ea982a47c852\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Fri Apr 13 19:32:32 PDT 2018\r\n    root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nNuGet Package Explorer 0.2\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\nI simply can't work :/\r\n\r\nIf you need any other logs let me know and I will post it here in a reply.\r\n\r\n\r\n\r\n"},{"Id":"7638934708","Type":"PullRequestEvent","CreatedAt":"2018-05-07T17:24:48","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4044","RelatedDescription":"Opened pull request \"[tests] Remove outdated and broken tests we've never executed.\" (#4044) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7638625141","Type":"PullRequestEvent","CreatedAt":"2018-05-07T16:20:06","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4043","RelatedDescription":"Opened pull request \"[docs] Update optimizations document with upstream changes.\" (#4043) at xamarin/xamarin-macios","RelatedBody":"Ref: https://github.com/MicrosoftDocs/xamarin-docs-pr/pull/204"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"993570225420406784","CreatedAt":"2018-05-07T19:16:16+00:00","UserScreenname":"xamarinhq","Text":"Try the latest release of #XamarinForms 3.0: https://t.co/UlSNk3NClU https://t.co/dGpHZriLc4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":103,"FavoriteCount":72,"RawContent":null},{"Id":"993251599811252224","CreatedAt":"2018-05-06T22:10:09+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/Lx7JBLnvef","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":18,"RawContent":null},{"Id":"992875335762042888","CreatedAt":"2018-05-05T21:15:01+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/P30tFLl74x","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"992545763069779971","CreatedAt":"2018-05-04T23:25:25+00:00","UserScreenname":"xamarinhq","Text":"Mobile development sessions and content at #MSBuild 2018: https://t.co/0hp43y9gvJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":29,"RawContent":null},{"Id":"992422850337353729","CreatedAt":"2018-05-04T15:17:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":13,"RawContent":null},{"Id":"992062985194614784","CreatedAt":"2018-05-03T15:27:01+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/xM3dAE2jRZ https://t.co/StTCYvCVUt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":25,"RawContent":null},{"Id":"991751130630774784","CreatedAt":"2018-05-02T18:47:50+00:00","UserScreenname":"xamarinhq","Text":"Find a #Xamarin event near you this May: https://t.co/vMnGQGQnV3 https://t.co/RU9X9RQVq4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":18,"FavoriteCount":6,"RawContent":null},{"Id":"991706887317008384","CreatedAt":"2018-05-02T15:52:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/wxkCjOh2B8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":38,"RawContent":null}]}},"RunOn":"2018-05-08T05:30:42.7218463Z","RunDurationInMilliseconds":4226}