{"Data":{"Vue-Issues":{"Issues":[{"Id":"604383909","IsPullRequest":false,"CreatedAt":"2020-04-22T01:23:02","Actor":"SwankyTigerYY","Number":"11334","RawContent":null,"Title":"Beginners start with vue3, too few documents.","State":"closed","Body":"Thanks for your link.","Url":"https://github.com/vuejs/vue/issues/11334","RelatedDescription":"Closed issue \"Beginners start with vue3, too few documents.\" (#11334)"},{"Id":"604367877","IsPullRequest":false,"CreatedAt":"2020-04-22T00:29:40","Actor":"xixihahaoula","Number":"11333","RawContent":null,"Title":"父组件select选择的id值需要props传递给子组件，子组件监听id，当select选择的id值从空字符串切换到有值的状态的时候是可以监听到的，但是从有值的id切换到空字符串的id的时候就无法监听到。有碰见这种情况的朋友吗？","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/11333","RelatedDescription":"Closed issue \"父组件select选择的id值需要props传递给子组件，子组件监听id，当select选择的id值从空字符串切换到有值的状态的时候是可以监听到的，但是从有值的id切换到空字符串的id的时候就无法监听到。有碰见这种情况的朋友吗？\" (#11333)"},{"Id":"603686951","IsPullRequest":true,"CreatedAt":"2020-04-21T03:58:59","Actor":"andrehrferreira","Number":"11332","RawContent":null,"Title":"correction when nodeOps.tagName returns value other than string","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11332","RelatedDescription":"Open PR \"correction when nodeOps.tagName returns value other than string\" (#11332)"},{"Id":"603298152","IsPullRequest":false,"CreatedAt":"2020-04-20T15:09:37","Actor":"adamvleggett","Number":"11331","RawContent":null,"Title":"Stress Test Mode","State":"closed","Body":"### What problem does this feature solve?\r\nIt would be nice if there were a build of Vue that is designed to destroy and recreate components unnecessarily, perhaps at every render, to stress test code that may be assuming a component will remain alive.\r\n\r\n### What does the proposed API look like?\r\nThis could be implemented as a separate build of Vue, or as a flag of some kind.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11331","RelatedDescription":"Closed issue \"Stress Test Mode\" (#11331)"},{"Id":"603211564","IsPullRequest":true,"CreatedAt":"2020-04-20T12:48:27","Actor":"GTRgoSky","Number":"11330","RawContent":null,"Title":"注释","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11330","RelatedDescription":"Closed or merged PR \"注释\" (#11330)"},{"Id":"603164767","IsPullRequest":false,"CreatedAt":"2020-04-20T11:28:20","Actor":"bnping","Number":"11329","RawContent":null,"Title":"what the class-Based API, function-based API and composition API meanings","State":"closed","Body":"When I started working with vue 3, I saw these notions :\r\n\r\nObject-based API\r\nFunction-based API\r\nClass-Based API\r\nComposition API\r\nOption API\r\n\r\nCan some one tell us the definitions of these?.\r\nSame question in stackoverflow [https://stackoverflow.com/questions/61301989/vue-3-what-the-class-based-api-function-based-api-and-composition-api-meanings,](url) may be a response their is better than here so every body can see the anwser.\r\n\r\nThanks\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11329","RelatedDescription":"Closed issue \"what the class-Based API, function-based API and composition API meanings\" (#11329)"},{"Id":"602963609","IsPullRequest":false,"CreatedAt":"2020-04-20T07:47:43","Actor":"leevscript","Number":"11328","RawContent":null,"Title":"Cannot read property 'key' of undefined","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/leevscript/pen/gOawPgP](https://codepen.io/leevscript/pen/gOawPgP)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\n<template>\r\n  <ul>\r\n    <li v-for=\"num in nums\" :key=\"num\">{{num}}</li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data () {\r\n      return {\r\n        nums: [1, 2, 3]\r\n      }\r\n    },\r\n    mounted () {\r\n      this.nums = [2, 2]\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nnormal\r\n\r\n### What is actually happening?\r\nerror\r\n\r\n---\r\n英文不太好，问题又比较复杂，所以就用中文了，抱歉。\r\n当 oldCh 里的元素跟 newCh 里的元素匹配到且该元素不在 oldCh 的首尾且 newCh 里该元素有多个时，diff 算法会报错。\r\n我知道 key 应该是唯一标识，但我理解这种情况不应该报错，因为很多数据由服务端返回，我们不能保证不会有重复元素。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11328","RelatedDescription":"Closed issue \"Cannot read property 'key' of undefined\" (#11328)"},{"Id":"602665602","IsPullRequest":true,"CreatedAt":"2020-04-19T09:18:14","Actor":"JunilHwang","Number":"11327","RawContent":null,"Title":"fix(types): template of BundleRendererOptions be can Function","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nI was looking at the official API documentation for SSR.\r\nAnd I looked at the explanation related to the template and tried the same.\r\n\r\nLink: https://ssr.vuejs.org/api/#template\r\n\r\nThe example says:\r\n\r\n`` `js\r\nconst renderer = createRenderer ({\r\n  template: (result, context) => {\r\n    return `<html>\r\n      <head> $ {context.head} </ head>\r\n      <body> $ {result} </ body>\r\n    <html> `\r\n  }\r\n})\r\n`` `\r\n\r\nHowever, there was only one type defined `string` in the template defined in RendererOptions.\r\n\r\n```js\r\ninterface RendererOptions {\r\n  template ?: string; // only defined string type\r\n  inject ?: boolean;\r\n  shouldPreload ?: (file: string, type: string) => boolean;\r\n  shouldPrefetch ?: (file: string, type: string) => boolean;\r\n  cache ?: RenderCache;\r\n  directives ?: {\r\n    [key: string]: (vnode: VNode, dir: VNodeDirective) => void\r\n  };\r\n}\r\n```\r\n\r\nSo I modified it as follows:\r\n\r\n```js\r\ninterface RendererOptions {\r\n  template ?: string | ((result: string, context: object) => string); // append function type\r\n  inject ?: boolean;\r\n  shouldPreload ?: (file: string, type: string) => boolean;\r\n  shouldPrefetch ?: (file: string, type: string) => boolean;\r\n  cache ?: RenderCache;\r\n  directives ?: {\r\n    [key: string]: (vnode: VNode, dir: VNodeDirective) => void\r\n  };\r\n}\r\n```","Url":"https://github.com/vuejs/vue/pull/11327","RelatedDescription":"Open PR \"fix(types): template of BundleRendererOptions be can Function\" (#11327)"},{"Id":"602577453","IsPullRequest":true,"CreatedAt":"2020-04-18T23:46:27","Actor":"zupolgec","Number":"11326","RawContent":null,"Title":"fix(v-on): stop triggering callback on key* events with modifier but without key info (e.g. autocomplete)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Other information:**\r\n\r\nChromium browsers (and Safari) trigger a `keydown`/`keyup` event on autocomplete. An `Event` object without `key` or `keyCode` is generated.\r\nVue, when listening with modifiers, is triggering the callback even if the modifier key doesn't match the `undefined` keyCode of the event.\r\n\r\nCurrent behaviour: https://codepen.io/zupolgec/pen/RwWRxdK\r\nNew behaviour: https://codepen.io/zupolgec/pen/qBONxMj\r\n\r\nTry autocompleting the first field: in the first demo is counted, in the second demo is ignored.\r\n\r\nSee also same kind of issue on another JS library: https://github.com/alpinejs/alpine/pull/389#issuecomment-615935688","Url":"https://github.com/vuejs/vue/pull/11326","RelatedDescription":"Open PR \"fix(v-on): stop triggering callback on key* events with modifier but without key info (e.g. autocomplete)\" (#11326)"},{"Id":"602448233","IsPullRequest":false,"CreatedAt":"2020-04-18T12:23:23","Actor":"victortwc","Number":"11325","RawContent":null,"Title":"nextTick implementation breaks with core-js@3 Promise polyfill on Tizen 2016","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust cross-linking the issues here, it was opened in core-js repo:\r\nhttps://github.com/zloirock/core-js/issues/814\r\n\r\nThe reproduction is not easily doable as it requires a Samsung Tizen 2016 device (which I have because I develop specifically for TVs).\r\n\r\n### What is expected?\r\nUI updates correctly after events\r\n\r\n### What is actually happening?\r\nUI will only update if another task is queue.\r\n\r\n---\r\nIn the nextTick implementation there's a check for `isIOS` to trigger an extra `setTimeout` which, while hacky, works also for Tizen 2016.\r\n\r\nPerhaps a PR could be made adding an exception for Samsung Tizen as well?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11325","RelatedDescription":"Open issue \"nextTick implementation breaks with core-js@3 Promise polyfill on Tizen 2016\" (#11325)"},{"Id":"602427019","IsPullRequest":false,"CreatedAt":"2020-04-18T10:36:59","Actor":"jan-scorl","Number":"11324","RawContent":null,"Title":"transition-group move-class only triggers when an element gets added to the group","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/frosty-frost-tjt8y](https://codesandbox.io/s/frosty-frost-tjt8y)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nPress the left and right arrow keys to add and remove lines to the bar. \r\n\r\n### What is expected?\r\nThe transition is supposed to trigger when a line gets removed from the bar.\r\n\r\n### What is actually happening?\r\nThe transition only triggers if a line gets added to the bar. \r\n\r\nEven then, the line that is furthest to the left does not transition correctly.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11324","RelatedDescription":"Closed issue \"transition-group move-class only triggers when an element gets added to the group\" (#11324)"},{"Id":"602348205","IsPullRequest":false,"CreatedAt":"2020-04-18T01:15:35","Actor":"mjmnagy","Number":"11323","RawContent":null,"Title":"Best practices with v-if in a loop","State":"closed","Body":"I am curious if it is better to include methods within loops instead of using v-if. Assume the following codes work (they are incomplete and do not)\r\n\r\nEX: Method\r\n`\r\n<template >\r\n    <div>\r\n        <div v-for=\"(d, i) in data\" v-bind:key=\"i\">\r\n            <span v-on:click=\"insertPrompt($event)\">\r\n                {{ d }}\r\n            </span>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    data() {\r\n        data:[\r\n            .....\r\n        ]\r\n    },\r\n    methods:{\r\n        insertPrompt(e){\r\n            body.insertBefore(PROMPT)\r\n        }\r\n    }\r\n}\r\n</script>\r\n`\r\nThe DOM would be updated via the insertPrompt() function which is just for display\r\n\r\nEX: V-IF\r\n\r\n//Parent\r\n`\r\n<template >\r\n    <div>\r\n        <div v-for=\"(d, i) in data\" v-bind:key=\"i\">\r\n            <child v-bind:data=\"d\"/>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport child from './child'\r\n\r\nexport default {\r\n    components:{\r\n        child\r\n    },\r\n    data() {\r\n        data:[\r\n            .....\r\n        ]\r\n    },\r\n}\r\n</script>\r\n`\r\n//Child\r\n`\r\n<template>\r\n    <div>\r\n        <span v-on:click=\"display != display\">\r\n            {{ d }}\r\n        </span>\r\n        <PROMPT v-if=\"display\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport child from './child'\r\n\r\nexport default {\r\n    components:{\r\n        child\r\n    },\r\n    data(){\r\n        return {\r\n            display:false\r\n        }\r\n    },\r\n    props: {\r\n        data:{\r\n            .....\r\n        }\r\n    },\r\n}\r\n</script>\r\n`\r\nThe PROMPT is a basic template that is rendered with the data from the loop data click.\r\n\r\nBoth methods can accomplish the same end result. My initial thought is having additional conditions within a loop would negatively impact performance?!?!\r\n\r\nAny guidance is greatly appreciated","Url":"https://github.com/vuejs/vue/issues/11323","RelatedDescription":"Closed issue \"Best practices with v-if in a loop\" (#11323)"},{"Id":"602177073","IsPullRequest":false,"CreatedAt":"2020-04-17T19:52:09","Actor":"Etheryte","Number":"11322","RawContent":null,"Title":"Allow $refs to be undefined in Typescript types","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently, when you add `$refs` annotations to a class-based component, the types are defined as follows:\r\n\r\n```ts\r\n@Component\r\nexport default class Foo extends Vue {\r\n    $refs!: {\r\n        bar: Bar;\r\n    };\r\n}\r\n```\r\n\r\nThis is handy and allows you to use refs as expected in class methods:\r\n```ts\r\nfooMethod() {\r\n    this.$refs.bar.method();\r\n}\r\n```\r\n\r\nHowever, the types incorrectly assume that the ref is always present, while it might not be so.\r\n\r\n```ts\r\nasync fooMethod() {\r\n    await longApiRequest();\r\n    this.$refs.bar.method();\r\n}\r\n```\r\n\r\nIn the above situation, the ref would be `undefined` if the component unmounted during the async request.  \r\n\r\n\r\n### What does the proposed API look like?\r\nThe correct types would ideally mark refs as possibly undefined automatically, or alternatively allow the user to do so.\r\n\r\n```ts\r\n@Component\r\nexport default class Foo extends Vue {\r\n    $refs!: {\r\n        bar: Bar | undefined;\r\n    };\r\n}\r\n```\r\n\r\nCurrently types don't allow this.  \r\n\r\nThe above types would ensure the user correctly checks for the ref before calling a method on it:  \r\n\r\n```ts\r\nasync fooMethod() {\r\n    await longApiRequest();\r\n    this.$refs.bar?.method();\r\n    // -----------^\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11322","RelatedDescription":"Closed issue \"Allow $refs to be undefined in Typescript types\" (#11322)"},{"Id":"602033323","IsPullRequest":false,"CreatedAt":"2020-04-17T14:52:54","Actor":"ThomasLandauer","Number":"11321","RawContent":null,"Title":"In Firefox, radiobuttons with `required` and `v-model` are marked as invalid immediately","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/t1po5sdh/](https://jsfiddle.net/t1po5sdh/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn Firefox 75.0, I get the two radio buttons marked as invalid (i.e. surrounded by a red border) immediately on pageload. This does not happen if I either remove `required` or `v-model`\r\n\r\n### What is expected?\r\nThe radios should only be marked as invalid after form submission - as with other required input controls.\r\n\r\n### What is actually happening?\r\nSee above\r\n\r\n---\r\nI've been observing this for years already.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11321","RelatedDescription":"Open issue \"In Firefox, radiobuttons with `required` and `v-model` are marked as invalid immediately\" (#11321)"},{"Id":"600851380","IsPullRequest":false,"CreatedAt":"2020-04-16T08:34:47","Actor":"00King00","Number":"11320","RawContent":null,"Title":"Conditional event binding","State":"closed","Body":"v-on=\"{ contextmenu: { native: {prevent: contextMenuCondition ? $event => openContext($event, item) : null} } }\" \r\nWhy this does not work?\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/11320","RelatedDescription":"Closed issue \"Conditional event binding\" (#11320)"},{"Id":"600824901","IsPullRequest":false,"CreatedAt":"2020-04-16T08:06:10","Actor":"yannisgu","Number":"11319","RawContent":null,"Title":"Transition-Group doens't work when a child component has an falsy if on the template","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/u5kba8ty/](https://jsfiddle.net/u5kba8ty/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNo steps needed on the repro.\r\nThe repro should render a, b, c, d, however it only renders a, c\r\n\r\nAlso the console shows an error message \r\n\r\n### What is expected?\r\nThe repro should render a, b, c, d,.\r\n\r\n### What is actually happening?\r\nThe repro should renders a,c and there is an JavaScript error\r\n\r\n```\r\nTypeError: \"c$1.elm.getBoundingClientRect is not a function\"\r\n```\r\n\r\n---\r\nThe merge request to fix this issue is already created: https://github.com/vuejs/vue/pull/11128/files\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11319","RelatedDescription":"Closed issue \"Transition-Group doens't work when a child component has an falsy if on the template\" (#11319)"},{"Id":"600725581","IsPullRequest":false,"CreatedAt":"2020-04-16T08:03:25","Actor":"bosens-China","Number":"11316","RawContent":null,"Title":"How to cache the same keep alive component","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/elastic-boyd-t4y6f?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/elastic-boyd-t4y6f?fontsize=14&hidenavigation=1&theme=dark)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nI have two pages, and their contents are very similar, so I'm going to use the factory mode to return them, but nesting `< keep alive / >` outside will cause the contents of the two pages to be exactly the same. What should I do to achieve the correct effect\r\n\r\n---\r\n\r\n我有两个页面，他的内容很相似，所以我准备用工厂模式给他返回，但是在外面嵌套使用`<keep-alive/>`会导致两个页面内容完全一致，我应该怎么做才能实现正确的效果\r\n\r\n### What is expected?\r\nThe input does not affect at all. For example, the default component input 'demo' will not be repeated when clicking to switch to foo route\r\n\r\n---\r\n\r\n输入的内容完全不影响，例如默认组件输入'demo'点击切换到foo路由的时候不会是重复的\r\n\r\n### What is actually happening?\r\nConsistent switching content\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11316","RelatedDescription":"Closed issue \"How to cache the same keep alive component\" (#11316)"},{"Id":"600748625","IsPullRequest":false,"CreatedAt":"2020-04-16T08:01:30","Actor":"thearyanahmed","Number":"11318","RawContent":null,"Title":"Allow components to be called dynamically based on condition","State":"closed","Body":"### What problem does this feature solve?\r\nIt allows the developer to control what to render without having to use a bunch of if-else statement and also allows us to call the component from outside of the scope. \r\n\r\n### What does the proposed API look like?\r\nSuppose I'm creating a package/module that takes the data from the outside. And based on the data, it can call let's say different components. \r\n\r\n```\r\nComponent A // takes 2 props. (propA,propB)\r\nComponent B // takes 3 props (propA,propB,propC)\r\nComponent C // takes 1 prop (propD)\r\n```\r\n\r\nIn my parent component, \r\n\r\nI would call \r\n\r\n```\r\n\r\n// SomeParentComponent.vue that accepts \"items (array)\" as props\r\n\r\n<template>\r\n    <div>\r\n       <div v-for=\"item in items\">\r\n            <div v-render-component=\"item.componentName\" v-component-props=\"item.props\" /> // item.props = { propA: value, propB: value ... }\r\n       </div> // props are being passed down, sort of like vue router's params and query props.\r\n    <div>\r\n</template>\r\n```\r\n\r\nSuppose we have 3 different Card Components with unique and some similar functionalities. We are rendering a single item and based on the condition we are calling the component. \r\n\r\nBut with the current API, we might need to do something like \r\n\r\n```\r\n... \r\n// inside the loop\r\n<div v-if=\"item.componentName ==== 'ComponentA'\" />\r\n    <ComponentA :propA=\"item.propA\" ... />\r\n</div>\r\n\r\n<div v-if=\"item.componentName ==== 'ComponentB'\" />\r\n    <ComponentB :propA=\"item.propA\" ... />\r\n</div>\r\n\r\n<div v-if=\"item.componentName ==== 'ComponentC'\" />\r\n    <ComponentC :propA=\"item.propA\" ... />\r\n</div>\r\n...\r\n```\r\n\r\nAlso, in the SomeParentComponent, there is no way to call on different components for another purpose. If we think of maybe a table, the data is different but we would be able to use the same component (SomeParentComponent) etc. \r\nExample\r\n```\r\n//Users.vue \r\n\r\n<SomeParentComponent :items=\"users\" />\r\n\r\n// Orders.vue\r\n\r\n<SomeParentComponent :items=\"orders\" />\r\n```\r\n\r\nThis way, not only the template portion remains the same but also the logical portion of a component. Thus, letting us comprehend the idea of 'component', a component handles a responsibility.\r\n\r\nWe can have vue directives for \"v-render-component\" and \"v-component-props\" and obviously these are pseudo names.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11318","RelatedDescription":"Closed issue \"Allow components to be called dynamically based on condition\" (#11318)"},{"Id":"600727264","IsPullRequest":false,"CreatedAt":"2020-04-16T07:25:39","Actor":"dash-","Number":"11317","RawContent":null,"Title":"Responsive Style Tags","State":"closed","Body":"### What problem does this feature solve?\r\nMedia queries are a regular concern for anyone building a complex responsive web application in Vue.  Today, this means each component has a style section with base css as well as media queries.  Though this functionality is not broken, it is error prone and can cause subtle consistency issues unless development teams actively work to set up strong foundations.  So the current state of media queries in Vue is more of a hill of failure than a pit of success.\r\n\r\nThe existence of packages like `vue-mq` demonstrate that there is demand for improving this situation, and while those kinds of packages can already help, it would be cleaner and more consistent to build this into Vue itself.  Vue is presentation layer software, and this is a reasonably global presentation layer concern.\r\n\r\nThe proposed feature would make working with media queries easier, less error-prone, and more consistent.\r\n\r\n### What does the proposed API look like?\r\n## Usage\r\n\r\n```html\r\n<style size=\"base\">\r\n/**\r\n * `base` is an optional label for readability - anything that lacks a size\r\n * descriptor would automatically be base\r\n */\r\n...\r\n</style>\r\n\r\n<style size=\"xs\">\r\n...\r\n</style>\r\n\r\n<style size=\"sm\">\r\n...\r\n</style>\r\n\r\n<style size=\"md\">\r\n...\r\n</style>\r\n\r\n<style size=\"lg\">\r\n...\r\n</style>\r\n\r\n<style size=\"xl\">\r\n...\r\n</style>\r\n```\r\n\r\nThis allows developers to separate code by size without media queries, in a\r\nclean and consistent fashion.\r\n\r\n## Configuration\r\n\r\nThere should be reasonable defaults, with the ability to override via config.\r\nFor example, the default configuration could be based on bootstrap's well-known\r\nlabelled screen sizes.\r\n\r\nOverriding the configuration via `vue.config.js` might look like:\r\n\r\n```js\r\nmodule.exports = {\r\n  ...\r\n  styleSizes: [\r\n    { name: 'base', type: 'base' },\r\n    { name: 'xs', maxWidth: 575 },\r\n    { name: 'sm', minWidth: 576, maxWidth: 767 },\r\n    { name: 'md', minWidth: 768, maxWidth: 991 },\r\n    { name: 'lg', minWidth: 992, maxWidth: 1199 },\r\n    { name: 'xl', minWidth: 1200 },\r\n  },\r\n  ...\r\n}\r\n```\r\n\r\nAlthough it would be completely configurable to use whatever labels and size\r\ncutoffs desired:\r\n\r\n```js\r\nmodule.exports = {\r\n  ...\r\n  styleSizes: [\r\n    { name: 'extra-small', type: 'base' },\r\n    { name: 'small', minWidth: 576, maxWidth: 767 },\r\n    { name: 'large', minWidth: 992, maxWidth: 1199 },\r\n    { name: 'extra-large', minWidth: 1200, maxWidth: 3839 },\r\n    { name: 'ginormous', minWidth: 3840 },\r\n  },\r\n  ...\r\n}\r\n```\r\n\r\n## Functionality\r\n\r\nWhen size attributes are assigned to a style, it should be transformed into a media query within a style tag with the same attributes as the original tag, except without the size attribute.\r\n\r\n### Example\r\n\r\nSo this:\r\n\r\n```html\r\n<style scoped size=\"md\">\r\n.generic-item {\r\n  ...\r\n}\r\n</style>\r\n```\r\n\r\nMight be transformed into this:\r\n\r\n```html\r\n<style scoped>\r\n@media only screen and (max-width: 768px) and (max-width: 991px) {\r\n  .generic-item {\r\n    ...\r\n  }\r\n}\r\n</style>\r\n```\r\n\r\n### Combining styles of same type\r\n\r\nI'm not sure how the internals work, but it might be preferable to combine different style sizes into a single style of the same type (so `scoped` or no `scoped`).\r\n\r\nSo this:\r\n\r\n```html\r\n<style scoped>\r\n.generic-item {\r\n  ...\r\n}\r\n</style>\r\n\r\n<style scoped size=\"md\">\r\n.generic-item {\r\n  ...\r\n}\r\n</style>\r\n```\r\n\r\nMight be transformed into this:\r\n\r\n```html\r\n<style scoped>\r\n.generic-item {\r\n  ...\r\n}\r\n\r\n@media only screen and (max-width: 768px) and (max-width: 991px) {\r\n  .generic-item {\r\n    ...\r\n  }\r\n}\r\n</style>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11317","RelatedDescription":"Closed issue \"Responsive Style Tags\" (#11317)"},{"Id":"600587722","IsPullRequest":false,"CreatedAt":"2020-04-15T21:06:09","Actor":"Aleksandras-Novikovas","Number":"11315","RawContent":null,"Title":"Components slots are not rendered inside svg foreignObject","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/AleksandrasNovikovas/w042x1c8/](https://jsfiddle.net/AleksandrasNovikovas/w042x1c8/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun provided fiddle. There are three svg boxes with foreignObject:\r\n1. contains simple html tags\r\n2. contains simple vue component\r\n3. contains complex (with slot) vue component\r\n\r\n\r\n### What is expected?\r\nAll three boxes should show link and input elements\r\n\r\n### What is actually happening?\r\nThird box does not show link and input elements.\r\n\r\n---\r\nWhile inspecting DOM (in chrome or in firefox) you will find that elements of second box and third box are identical.\r\nProblem is their types: (in chome dev console select element and tab properties)\r\nselect input element from second box and you will find following list: Object->EventTarget->Node->Element->HTMLElement->HTMLInputElement->input;\r\nselect input element from third box and you will find following list: Object->EventTarget->Node->Element->SVGElement->input;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11315","RelatedDescription":"Open issue \"Components slots are not rendered inside svg foreignObject\" (#11315)"},{"Id":"600201546","IsPullRequest":false,"CreatedAt":"2020-04-15T10:43:23","Actor":"iceshu","Number":"11313","RawContent":null,"Title":"vue-server-render/build.dev.js error","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[no](no)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\njust webpack hot update\r\n\r\n### What is expected?\r\nwithout error\r\n\r\n### What is actually happening?\r\nline :9072\r\ncode\r\n\r\n  var file= ref.file;\r\ntypeError : Cannot red property 'file' of undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11313","RelatedDescription":"Closed issue \"vue-server-render/build.dev.js error\" (#11313)"},{"Id":"600046922","IsPullRequest":false,"CreatedAt":"2020-04-15T07:01:30","Actor":"zhanyuzhang","Number":"11312","RawContent":null,"Title":"What's the meaning of `wtf flow` ?","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/0551226f8bf0884e31bb686b7116b60f1eaf77e6/src/core/instance/lifecycle.js#L270](https://github.com/vuejs/vue/blob/0551226f8bf0884e31bb686b7116b60f1eaf77e6/src/core/instance/lifecycle.js#L270)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI found `wtf flow` on the source code at line:\r\n\r\nhttps://github.com/vuejs/vue/blob/0551226f8bf0884e31bb686b7116b60f1eaf77e6/src/core/instance/lifecycle.js#L270\r\n\r\n### What is expected?\r\nhttps://github.com/vuejs/vue/blob/0551226f8bf0884e31bb686b7116b60f1eaf77e6/src/core/instance/lifecycle.js#L270\r\n\r\n### What is actually happening?\r\nhttps://github.com/vuejs/vue/blob/0551226f8bf0884e31bb686b7116b60f1eaf77e6/src/core/instance/lifecycle.js#L270\r\n\r\n---\r\nI found `wtf flow` on the source code at line:\r\n\r\nhttps://github.com/vuejs/vue/blob/0551226f8bf0884e31bb686b7116b60f1eaf77e6/src/core/instance/lifecycle.js#L270\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11312","RelatedDescription":"Closed issue \"What's the meaning of `wtf flow` ?\" (#11312)"},{"Id":"600044760","IsPullRequest":false,"CreatedAt":"2020-04-15T06:06:29","Actor":"zhanyuzhang","Number":"11311","RawContent":null,"Title":"what's the meaning of  `wtf flow` ?","State":"closed","Body":"I found `wtf flow` on vue source code:\r\nhttps://github.com/vuejs/vue/blob/0551226f8bf0884e31bb686b7116b60f1eaf77e6/src/core/instance/lifecycle.js#L270","Url":"https://github.com/vuejs/vue/issues/11311","RelatedDescription":"Closed issue \"what's the meaning of  `wtf flow` ?\" (#11311)"},{"Id":"599803577","IsPullRequest":false,"CreatedAt":"2020-04-14T22:04:24","Actor":"angudon","Number":"11309","RawContent":null,"Title":"The email field is vulnerable to html injection which leads to xss","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://app.snov.io/login](https://app.snov.io/login)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI know that snov.io is not your website.I request you to see the framework vulnerability\r\n1)The website https://app.snov.io/login uses the vue.js version 2.5.13 which is vulnerable. \r\n2)login and add new member/profile in the https://app.snov.io/prospects/new-profile/1841654#\r\n3)there is a email field which is vulnerable to html injection \r\n4)Actually these codes execute when i finish the code which can able to produce generic xss  \r\n\r\n### What is expected?\r\nneed to sanitize the email field\r\n\r\n### What is actually happening?\r\nHtml injection ,Generic xss,click hijacking\r\n\r\n---\r\nThe email field should  accept only the email address not any html codes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11309","RelatedDescription":"Closed issue \"The email field is vulnerable to html injection which leads to xss\" (#11309)"},{"Id":"599857304","IsPullRequest":false,"CreatedAt":"2020-04-14T21:02:40","Actor":"callumacrae","Number":"11310","RawContent":null,"Title":"List move transitions not working as expected in SVG elements","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/callumacrae/pen/eac1209c4a6f0dab5c75a3612145a465](https://codepen.io/callumacrae/pen/eac1209c4a6f0dab5c75a3612145a465)\r\n\r\n### Steps to reproduce\r\nClick the shuffle button\r\n\r\n### What is expected?\r\nBoth transitions should be identical\r\n\r\n### What is actually happening?\r\nSome of the elements are reappearing at the top - possible being deleted from the DOM and new ones being created? Not sure how to debug this, but something isn't right!\r\n\r\nIt's not happening very time to every element - sometimes they work as expected.\r\n\r\nAlso, sometimes the flip-list-move class isn't being removed at all.\r\n\r\n---\r\nCopied the HTML example from the docs to make as similar as possible to a working example: https://vuejs.org/v2/guide/transitions.html#List-Move-Transitions\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11310","RelatedDescription":"Open issue \"List move transitions not working as expected in SVG elements\" (#11310)"},{"Id":"598761102","IsPullRequest":false,"CreatedAt":"2020-04-13T08:48:11","Actor":"veratechnz","Number":"11308","RawContent":null,"Title":"Re-ordering array items in vue lists via v-for DOM/View output","State":"closed","Body":"Had issues with array sorting not showing correctly in vue list items when updating a vue data instance in a component. \r\n\r\nPush, pop and shift work, but trying to _re-order_ the array items (due to using sortable.js) would not correctly render. The list would update and change, but the bottom item would appear first. Tried various fixes, (array clone and replacement) via slice(). Not sure what was the issue, but the setTimeouts() worked to resolve it. I hate to use these, but sometimes they work, and work well. The data would update perfectly, just the list in the DOM would be slightly out.... \r\n\r\n`    updateAllLocationsReferenceAfterSort: function (start, finish, event) {\r\n      // The vue method\r\n      var v = this\r\n\r\n      // Create a clone copy of the current allLocations ref data\r\n      var dataRef = v.currentLocationsData.allLocationsReference.slice()\r\n\r\n      // The array reOrder function for re-sorting the array data after drag sort\r\n      // so it matches the list after ui drag and drop\r\n      function reOrderArray (arr, from, to) {\r\n        var time = arr.splice(to, 0, arr.splice(from, 1)[0])\r\n        return arr\r\n      }\r\n\r\n      // 13-04-2020: After various issues with array sorting not showing correctly in the vue list items via vue data instance - 'allLocationsReference'\r\n      // the only thing that worked was these slight setTimeouts. I suspect it is an issue with vue reactivity and \r\n      // sortable.js (drag and drop). Checked, array mutations for vue, filter and slice for array cloning to entirely update the array\r\n      // data (Which is what was done). Unfortunately nothing would stop the list from slightly re-ordering incorrectly even though the vue data\r\n      // for the reOrderArray above is fine. Not sure, but the timeouts worked. \r\n\r\n      setTimeout(function () {\r\n        // Update the vue data instance\r\n        v.currentLocationsData.allLocationsReference = timing\r\n\r\n        setTimeout(function () {\r\n          // Reset the pin\r\n          v.updateFirstListItem()\r\n        }, 1)\r\n\r\n      }, 1)\r\n\r\n    }`\r\n\r\n![image](https://user-images.githubusercontent.com/7610017/79107106-dee90b00-7dc7-11ea-88f1-62cfaf64205f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/7610017/79107137-f0321780-7dc7-11ea-87cf-133b2d80b797.png)\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11308","RelatedDescription":"Closed issue \"Re-ordering array items in vue lists via v-for DOM/View output\" (#11308)"},{"Id":"598685959","IsPullRequest":true,"CreatedAt":"2020-04-13T05:35:40","Actor":"godky","Number":"11307","RawContent":null,"Title":"refactor: improve option type check warnings","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/vuejs/vue/pull/11307","RelatedDescription":"Open PR \"refactor: improve option type check warnings\" (#11307)"},{"Id":"598474097","IsPullRequest":true,"CreatedAt":"2020-04-12T12:28:14","Actor":"zhangzhonghe","Number":"11306","RawContent":null,"Title":"fix(optimizer): change FULL to CHILDREN when v-if and v-html or v-tex…","State":"open","Body":"…t are used together (#11299)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11306","RelatedDescription":"Open PR \"fix(optimizer): change FULL to CHILDREN when v-if and v-html or v-tex…\" (#11306)"},{"Id":"598337762","IsPullRequest":false,"CreatedAt":"2020-04-11T19:56:32","Actor":"hutchings90","Number":"11305","RawContent":null,"Title":"Allow template tags to use the v-text directive","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ey867nzs/2/](https://jsfiddle.net/ey867nzs/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a Vue app and display a string using mustache syntax, `v-text` on a `div` element, and `v-text` on a `template` element.\r\n\r\n### What is expected?\r\nThe string is displayed by all three methods.\r\n\r\n### What is actually happening?\r\nThe string is displayed by mustache syntax and `v-text` on a `div` element, but the string is not displayed by the `v-text` on a `template` element.\r\n\r\n---\r\nThis is a feature request similar to #7726. I created a new issue since the other one is closed, it is 2 years old, and I have reasons for requesting this feature that were not provided in that issue.\r\n\r\nA problem with mustache syntax is that the UI could get cluttered with curly braces if there is a delay in rendering or if there is a bug. A problem with using `v-text` on a DOM element is that undesired CSS styles could get applied to the DOM element. Allowing `v-text` to be used on `template` elements would avoid these problems.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11305","RelatedDescription":"Closed issue \"Allow template tags to use the v-text directive\" (#11305)"},{"Id":"598326528","IsPullRequest":false,"CreatedAt":"2020-04-11T19:14:29","Actor":"pSnehanshu","Number":"11304","RawContent":null,"Title":"val and oldVal passed to watchers are incorrect when watching an array","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/p_snehanshu/9g8m2bu1/10/](https://jsfiddle.net/p_snehanshu/9g8m2bu1/10/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn a vue component, watch an array.\r\nThen change the array, either push or splice or pop.\r\nInside the watcher, compare the `val` and the `oldVal`\r\n\r\n### What is expected?\r\nthe `val` and the `oldVal` are expected to be different.\r\nThe `val` should have the current value, and `oldVal` should have the previous value.\r\n\r\n### What is actually happening?\r\nthe `val` and the `oldVal` are exactly the same.\r\nWhile `val` is correct in its place, the `oldVal` should have been different, but it's not.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11304","RelatedDescription":"Closed issue \"val and oldVal passed to watchers are incorrect when watching an array\" (#11304)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"604276535","IsPullRequest":false,"CreatedAt":"2020-04-21T21:23:06","Actor":"ajmas","Number":"3179","RawContent":null,"Title":"Documentation: Clarify how to navigate to current page, while avoiding NavigationDuplicated","State":"closed","Body":"### What problem does this feature solve?\r\nSuggestion to provide an example and counter example on how to navigate to current page with updated query parameters. To be added  https://router.vuejs.org/guide/essentials/navigation.html\r\n\r\nThis is partly to counter outdated examples I have found on the internet and provide a 'supported' approach and also some knowledge that is currently only in the issues tracker.\r\n\r\nInitially I was dealing with code that looks like:\r\n\r\n```\r\n        const query = this.$route.query;\r\n        query.page = page;\r\n        query.limit = rowsPerPage;\r\n        await this.$router.push({ query }); \r\n```\r\n\r\nand resolved with:\r\n\r\n```\r\n        const query = Object.assign({}, this.$route.query);\r\n        query.page = page;\r\n        query.limit = rowsPerPage;\r\n        await this.$router.push({ query }); \r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nThis is a documentation update suggestion. I can make it if the idea is approved.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3179","RelatedDescription":"Closed issue \"Documentation: Clarify how to navigate to current page, while avoiding NavigationDuplicated\" (#3179)"},{"Id":"603769534","IsPullRequest":true,"CreatedAt":"2020-04-21T07:23:07","Actor":"Jinjiang","Number":"3178","RawContent":null,"Title":"docs(zh): update","State":"open","Body":"https://github.com/vuejs/vue-router/compare/a8fe4fc...11e779a\r\n/cc @Justineo for review. Thanks.","Url":"https://github.com/vuejs/vue-router/pull/3178","RelatedDescription":"Open PR \"docs(zh): update\" (#3178)"},{"Id":"602426487","IsPullRequest":true,"CreatedAt":"2020-04-18T10:17:36","Actor":"lscobe16","Number":"3177","RawContent":null,"Title":"Docs: Add Lighttpd config for history-mode","State":"open","Body":"On [this site](https://router.vuejs.org/guide/essentials/history-mode.html#example-server-configurations) added a config to use history-mode for Lighttpd just like for Apache/nginx/etc.\r\n\r\nThe solution was taken from: https://alexdespaindev.blogspot.com/2018/09/lighttpd-and-vuejs-router-history-mode.html","Url":"https://github.com/vuejs/vue-router/pull/3177","RelatedDescription":"Open PR \"Docs: Add Lighttpd config for history-mode\" (#3177)"},{"Id":"602406961","IsPullRequest":false,"CreatedAt":"2020-04-18T08:41:44","Actor":"mostafa6765","Number":"3176","RawContent":null,"Title":"addRoutes existing vue spa project","State":"closed","Body":"### What problem does this feature solve?\r\nI have a spa project which is already built as app.js . now I want to add routes that existing spa projects. please share any idea. laravel nova already uses this type of method.\r\n\r\nlaravel nova use this type functionality for adding route with existing vue spa\r\n\r\n```js\r\nNova.booting((Vue, router) => {\r\n    router.addRoutes([\r\n        {\r\n            name: 'nova-log-viewer-dashboard',\r\n            path: '/nova-log-viewer/dashboard',\r\n            component: require('./components/Dashboard'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-list',\r\n            path: '/nova-log-viewer/list',\r\n            component: require('./components/Logs/LogsTool'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-show',\r\n            path: '/nova-log-viewer/list/:date/:level',\r\n            component: require('./components/Show/Logs'),\r\n        },\r\n    ])\r\n})\r\n```\r\n\r\n### What does the proposed API look like?\r\n~ larave nova code sample \r\n\r\n```js\r\nNova.booting((Vue, router) => {\r\n    router.addRoutes([\r\n        {\r\n            name: 'nova-log-viewer-dashboard',\r\n            path: '/nova-log-viewer/dashboard',\r\n            component: require('./components/Dashboard'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-list',\r\n            path: '/nova-log-viewer/list',\r\n            component: require('./components/Logs/LogsTool'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-show',\r\n            path: '/nova-log-viewer/list/:date/:level',\r\n            component: require('./components/Show/Logs'),\r\n        },\r\n    ])\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3176","RelatedDescription":"Closed issue \"addRoutes existing vue spa project\" (#3176)"},{"Id":"602406113","IsPullRequest":false,"CreatedAt":"2020-04-18T08:14:49","Actor":"mostafa6765","Number":"3175","RawContent":null,"Title":"addRoutes existing vue spa project !","State":"closed","Body":"I have a spa project which is already built as app.js . now I want to add routes that existing spa projects. please share any idea. laravel nova already uses this type of method.\r\n\r\n* laravel nova use this type functionality for adding route with existing vue spa\r\n\r\n```js\r\nNova.booting((Vue, router) => {\r\n    router.addRoutes([\r\n        {\r\n            name: 'nova-log-viewer-dashboard',\r\n            path: '/nova-log-viewer/dashboard',\r\n            component: require('./components/Dashboard'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-list',\r\n            path: '/nova-log-viewer/list',\r\n            component: require('./components/Logs/LogsTool'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-show',\r\n            path: '/nova-log-viewer/list/:date/:level',\r\n            component: require('./components/Show/Logs'),\r\n        },\r\n    ])\r\n})\r\n```","Url":"https://github.com/vuejs/vue-router/issues/3175","RelatedDescription":"Closed issue \"addRoutes existing vue spa project !\" (#3175)"},{"Id":"600892896","IsPullRequest":true,"CreatedAt":"2020-04-16T09:35:40","Actor":"SimonSiefke","Number":"3174","RawContent":null,"Title":"better error message when component is a promise (fix #3167)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3174","RelatedDescription":"Open PR \"better error message when component is a promise (fix #3167)\" (#3174)"},{"Id":"599455378","IsPullRequest":false,"CreatedAt":"2020-04-14T10:58:20","Actor":"jousi592","Number":"3173","RawContent":null,"Title":"Getting NavigationDuplicated when pushing new query params to router","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/flamboyant-fermat-lhb7u](https://codesandbox.io/s/flamboyant-fermat-lhb7u)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nInstall and configure Vue-router,  in any component try to add a query parametr with: `this.$router.push({ query: { test: 'test' } })` in `mounted` hook for example.\r\n\r\n### What is expected?\r\nThe query parameter gets added without errors.\r\n\r\n### What is actually happening?\r\nA uncaught error \"NavigationDuplicated\" gets thrown and blocks further js execution (when developer tools open)\r\n\r\n---\r\nI thought this has been fixed before, but it doesnt seem like it has and adding `.catch(() => {});` doesnt work 100% of the time.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3173","RelatedDescription":"Closed issue \"Getting NavigationDuplicated when pushing new query params to router\" (#3173)"},{"Id":"599176347","IsPullRequest":true,"CreatedAt":"2020-04-13T22:35:49","Actor":"joeldenning","Number":"3172","RawContent":null,"Title":"feat(history): Remove event listeners when all apps are destroyed.","State":"open","Body":"This resolves #3152 and resolves #2341\r\n\r\nThis is my first PR to vue-router and I am not sure if this was the best approach to solving the problem - please let me know! I also need to think of a good way of testing this behavior in either the e2e or unit tests. The unit tests only use the the abstract mode, but the feature only applies to html5/hash modes. And for e2e tests, I need to brainstorm the best way to verify that the hashchange and popstate listeners are being removed.","Url":"https://github.com/vuejs/vue-router/pull/3172","RelatedDescription":"Open PR \"feat(history): Remove event listeners when all apps are destroyed.\" (#3172)"},{"Id":"598746596","IsPullRequest":false,"CreatedAt":"2020-04-13T08:18:49","Actor":"mahmoudbassam","Number":"3171","RawContent":null,"Title":"router link not work inside li tag","State":"closed","Body":"  <ul class=\"main-search-list-defaultlist d-none\">\r\n\r\n           <li class=\"auto-suggestion d-flex align-items-center cursor-pointer\" v-for=\"(user, index) in userFromSearch\"  :key=\"index\" >\r\n               <router-link class=\"d-flex align-items-center justify-content-between w-100\"  :to=\"'/Userprofile/'+user.id\" >\r\n               <div class=\"d-flex\">\r\n                   <div v-if=\"user.channel.image\">\r\n                       <div class=\"mr-50\"><img :src=\"userSearchImage(user.channel.image)\" alt=\"png\"  height=\"50\"></div>\r\n                   </div>\r\n                   <div class=\"search-data\" >\r\n                       <p class=\"search-data-title mb-0\"></p><span class=\"text-muted\">{{user.name}}</span>\r\n                   </div>\r\n               </div><button class=\"search-data-size mr-50 text-muted\" >17kb</button>\r\n           </router-link>\r\n             </li>\r\n\r\n       </ul>\r\n**this menu appear after user search for another user but router link refresh the page and go to the true url I need do it without refresh the page **","Url":"https://github.com/vuejs/vue-router/issues/3171","RelatedDescription":"Closed issue \"router link not work inside li tag\" (#3171)"},{"Id":"598477703","IsPullRequest":true,"CreatedAt":"2020-04-12T14:39:35","Actor":"Alex-Sokolov","Number":"3170","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3170","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#3170)"},{"Id":"598042950","IsPullRequest":false,"CreatedAt":"2020-04-10T19:44:58","Actor":"6etacat","Number":"3169","RawContent":null,"Title":"Vue Router Dynamic Class Issue","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/zhoLsm6b/11/](https://jsfiddle.net/zhoLsm6b/11/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen a router-view tries to dynamically add classes to the router-links, some changes are overridden. \r\n\r\n### What is expected?\r\nDynamically added classes are preserved. \r\n\r\n### What is actually happening?\r\nWhen vue-router sees it needs to modify the classes, it does not preserve the previous classes. \r\n\r\n---\r\nI need to add another class for CSS modifications on the navigation bar for my 404 page. This requires me to reactively add a class to the router-links. \r\n\r\nMaybe rather than create a new classList, we can simply use `classList.add` or `classList.remove` so the user-added classes can be preserved when vue-router updates the elements?\r\n\r\nOr is this configurable in the router setup?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3169","RelatedDescription":"Closed issue \"Vue Router Dynamic Class Issue\" (#3169)"},{"Id":"595945573","IsPullRequest":false,"CreatedAt":"2020-04-07T15:16:37","Actor":"cartok","Number":"3168","RawContent":null,"Title":"Make asynch code possible in RouteConfig.redirect functions","State":"closed","Body":"### What problem does this feature solve?\r\nYou might be required to execute async code in order to be able to make a decision on where to redirect to.  \r\n\r\n**For example:**\r\n1. Some external service generates a URI like */foo?value=value*\r\n2. A user clicks on the link that came via email\r\n3. The app should redirect from */foo* to */bar or /baz*. The decision on where to redirect to depends on another service (elastic for example). If it found data for *value=value* you want to redirect to */bar*. If not to */baz*. (could be a check if some product still exists where you want to let the user create a review for)\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n// This redirect should execute properly\r\nconst route: RouteConfig = {\r\n  path: '/foo',\r\n  redirect: async function (to) {\r\n    const info = await someApiRequest({ value: to.query.value })\r\n\r\n    if (info) {\r\n      return '/bar'\r\n    } else {\r\n      return '/baz'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3168","RelatedDescription":"Closed issue \"Make asynch code possible in RouteConfig.redirect functions\" (#3168)"},{"Id":"595918906","IsPullRequest":false,"CreatedAt":"2020-04-07T14:38:26","Actor":"SimonSiefke","Number":"3167","RawContent":null,"Title":"Better error message Component type is invalid ","State":"open","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-em6dm?file=/router/index.js](https://codesandbox.io/s/vue-routing-example-em6dm?file=/router/index.js)\r\n\r\nVisit the `/hello` page in the codesandbox reproduction and open the console to see the error message\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSetup lazy-loaded routes and make a mistake by forgetting that it must not be an import but a function that returns the import statement\r\n```\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: import(/* webpackChunkName: \"Home\" */ '../views/Home.vue'),\r\n  }\r\n]\r\n```\r\n\r\n### What is expected?\r\nAn error message that says the component is not valid (because it is a promise) and that the expected type is a function\r\n\r\n### What is actually happening?\r\nVue shows the following error message: \r\n```\r\nFailed to mount component: template or render function not defined.\r\n```\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3167","RelatedDescription":"Open issue \"Better error message Component type is invalid \" (#3167)"},{"Id":"595030290","IsPullRequest":false,"CreatedAt":"2020-04-06T11:22:37","Actor":"bponomarenko","Number":"3166","RawContent":null,"Title":"Provide access to the router instance and component options in \"beforeRouteEnter\" guard","State":"open","Body":"### What problem does this feature solve?\r\nThere are some use cases, when it is required to have access to the router instance and component options inside `beforeRouteEnter` guard. While `beforeRouteUpdate` and `beforeRouteLeave` could get such access through `this.$router` and `this.$options`, it seems not way to achieve it in `beforeRouteEnter`. Importing router instance (similar to store import suggestion [here](https://github.com/vuejs/vue-router/issues/2118#issuecomment-484037415)) is not an option for us because we have shared set of router components, which are re-used in different vue applications, so there is no single place to import it from.\r\n\r\n### Use case\r\n\r\nI'm trying to create generic plugin for our applications which will define hook to pre-load data. In some component data pre-load will happen via vuex store, so it should be accessible in this hook.\r\n\r\nHere is simplified code for the plugin:\r\n```js\r\nexport default function install(Vue) {\r\n  Vue.mixin({\r\n    async beforeRouterEnter(to, from, next) {\r\n      if (componentOptions.preloadData) {\r\n        try {\r\n          const nextCallback = componentOptions.preloadData.call(null, router.app.$store);\r\n          next(nextCallback);\r\n        } catch (error) {\r\n          // Custom error for a generic error handler\r\n          next(new DataPreloadError(error));\r\n        }\r\n      } else {\r\n        next();\r\n      }\r\n    },\r\n  });\r\n};\r\n```\r\n\r\nThis plugin will make it possible to define custom `preloadData() { ... }` component option for a generic data pre-load as part of routing process. The only missing  references to make it work are `componentOptions` and `router`.\r\n\r\nNote that it is possible to provide `router` access in this particular example by passing it as plugin argument – `export default function install(Vue, router) { ... }`. However, it might be still beneficial to have access to router in the `beforeRouteEnter` guard, as it will be a solution for #3157.\r\n\r\n### What does the proposed API look like?\r\nProposal is to add additional `guardContext` argument to the guard function:\r\n```js\r\nbeforeRouteEnter(to, from, next, context) {\r\n // where context is { router: ..., componentOptions: ... }\r\n}\r\n```\r\n\r\nHowever if it should be implemented in different way – would be great to hear it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3166","RelatedDescription":"Open issue \"Provide access to the router instance and component options in \"beforeRouteEnter\" guard\" (#3166)"},{"Id":"593057325","IsPullRequest":false,"CreatedAt":"2020-04-03T08:06:23","Actor":"hengyizhangcn","Number":"3165","RawContent":null,"Title":"Is there the possibility of coexisting with hash mode and history mode in one program","State":"closed","Body":"### What problem does this feature solve?\r\nIs there the possibility of coexisting with hash mode and history mode in one program\r\n\r\n### What does the proposed API look like?\r\nIs there the possibility of coexisting with hash mode and history mode in one program\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3165","RelatedDescription":"Closed issue \"Is there the possibility of coexisting with hash mode and history mode in one program\" (#3165)"},{"Id":"593055233","IsPullRequest":false,"CreatedAt":"2020-04-03T03:42:28","Actor":"hengyizhangcn","Number":"3164","RawContent":null,"Title":"Is there the possibility of coexisting with hash mode and history mode in one program","State":"closed","Body":"Is there the possibility of coexisting with hash mode and history mode in one program","Url":"https://github.com/vuejs/vue-router/issues/3164","RelatedDescription":"Closed issue \"Is there the possibility of coexisting with hash mode and history mode in one program\" (#3164)"},{"Id":"591671724","IsPullRequest":false,"CreatedAt":"2020-04-01T06:51:14","Actor":"hengyizhangcn","Number":"3163","RawContent":null,"Title":" nothing","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/3163","RelatedDescription":"Closed issue \" nothing\" (#3163)"},{"Id":"591603172","IsPullRequest":false,"CreatedAt":"2020-04-01T04:00:35","Actor":"zhgt1997","Number":"3162","RawContent":null,"Title":"在 ie11 浏览器中，通过 window.open() 打开一个新页面，这个页面的路由是二级路由，但是ie 的地址栏的地址会闪一下，又变成了根目录","State":"closed","Body":"在 ie11 浏览器中，通过 window.open() 打开一个新页面，这个页面的路由是二级路由，但是ie 的地址栏的地址会闪一下，又变成了根目录，页面没有内容，有什么解决的方法吗\r\n","Url":"https://github.com/vuejs/vue-router/issues/3162","RelatedDescription":"Closed issue \"在 ie11 浏览器中，通过 window.open() 打开一个新页面，这个页面的路由是二级路由，但是ie 的地址栏的地址会闪一下，又变成了根目录\" (#3162)"},{"Id":"590433621","IsPullRequest":false,"CreatedAt":"2020-03-30T17:37:56","Actor":"evont","Number":"3161","RawContent":null,"Title":"getMatchedComponents 在base 模式下没有返回正确路由","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/evont/vue-multi-ssr](https://github.com/evont/vue-multi-ssr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSSR 下，如果使用了base 选项，比如： { routes: [{ path: '/page1', component: Page1 }], base: '/test' }，访问/pc2/page1, getMatchedComponents 将不会匹配到Page1，会抛出not found\r\n\r\n### What is expected?\r\ngetMatchedComponents 在base 模式下能够正确匹配到组件\r\n\r\n### What is actually happening?\r\ngetMatchedComponents 会直接使用routes中的path 去和fullPath 比对，导致无法获得正确路由组件\r\n\r\n---\r\n在尝试修改源码，在addRouteRecord 添加base 到 normalizedPath，即record.path 加上了base 之后，运行正常，但由于对源码改动比较大，且不确定这一问题是否为正常行为，希望解答或修复，感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3161","RelatedDescription":"Closed issue \"getMatchedComponents 在base 模式下没有返回正确路由\" (#3161)"},{"Id":"590110975","IsPullRequest":false,"CreatedAt":"2020-03-30T09:37:36","Actor":"anihCevol","Number":"3159","RawContent":null,"Title":"beforeRouteLeave","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E7%BB%84%E4%BB%B6%E5%86%85%E7%9A%84%E5%AE%88%E5%8D%AB](https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E7%BB%84%E4%BB%B6%E5%86%85%E7%9A%84%E5%AE%88%E5%8D%AB)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nB页面：\r\n```\r\nexport default {\r\n  beforeRouteLeave (to, from, next) {\r\n    next(false)\r\n  }\r\n}\r\n```\r\n假如A页面高度300，A页面滑动到底部，然后路由跳转到B页面，假如B页面高度400，在B页面点击浏览器返回键， 虽然阻止了页面返回，但是页面滚动到了300的位置。\r\n\r\n### What is expected?\r\n页面位置不变\r\n\r\n### What is actually happening?\r\n页面位置滚动上一个页面位置高度\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3159","RelatedDescription":"Closed issue \"beforeRouteLeave\" (#3159)"},{"Id":"590112810","IsPullRequest":false,"CreatedAt":"2020-03-30T09:37:05","Actor":"951759534","Number":"3160","RawContent":null,"Title":"NavigationDuplicated error","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n````\r\nexport const dataRouter= [\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'NormalWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  }\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'ContractWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  },\r\n  {\r\n    path: '',\r\n    redirect: {\r\n      path: 'normalWrites'\r\n    }\r\n  }\r\n];\r\n\r\nrouter.js\r\nconst routes = [\r\n {\r\n        path: '/secondReviewList',\r\n        name: 'SecondReviewList',\r\n        component: SecondReviewList,\r\n        meta: {\r\n          requiresAuth: true\r\n        },\r\n        children: dataRouter\r\n      }\r\n]\r\nnew Router({\r\nroutes,\r\nmode: 'history',\r\n})\r\n\r\nview\r\n\r\n<button @click=\"changurl\">\r\n   change url\r\n<button>\r\n<router-view></router-view>\r\n\r\n\r\njs\r\n\r\nchangeUrl() {\r\n  this.$router.push({\r\n   url: '/secondReviewList/contractWrites'\r\n})\r\n}\r\n````\r\n\r\n### What is expected?\r\nno error\r\n\r\n### What is actually happening?\r\ntrigger this onClick event throw NavigationDuplicated error and this url isn't changed\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3160","RelatedDescription":"Closed issue \"NavigationDuplicated error\" (#3160)"},{"Id":"590110891","IsPullRequest":false,"CreatedAt":"2020-03-30T08:54:23","Actor":"951759534","Number":"3158","RawContent":null,"Title":"NavigationDuplicated error ","State":"closed","Body":"```\r\nexport const dataRouter= [\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'NormalWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  }\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'ContractWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  },\r\n  {\r\n    path: '',\r\n    redirect: {\r\n      path: 'normalWrites'\r\n    }\r\n  }\r\n];\r\n\r\nrouter.js\r\nconst routes = [\r\n {\r\n        path: '/secondReviewList',\r\n        name: 'SecondReviewList',\r\n        component: SecondReviewList,\r\n        meta: {\r\n          requiresAuth: true\r\n        },\r\n        children: dataRouter\r\n      }\r\n]\r\nnew Router({\r\nroutes,\r\nmode: 'history',\r\n})\r\n\r\nview\r\n\r\n<button @click=\"changurl\">\r\n   change url\r\n<button>\r\n<router-view></router-view>\r\n\r\n\r\njs\r\n\r\nchangeUrl() {\r\n  this.$router.push({\r\n   url: '/secondReviewList/contractWrites'\r\n})\r\n}\r\n```\r\n\r\n\r\ntrigger this onClick event    throw NavigationDuplicated error and this url isn't changed\r\n","Url":"https://github.com/vuejs/vue-router/issues/3158","RelatedDescription":"Closed issue \"NavigationDuplicated error \" (#3158)"},{"Id":"589214905","IsPullRequest":false,"CreatedAt":"2020-03-28T17:53:45","Actor":"bponomarenko","Number":"3157","RawContent":null,"Title":"Add possibility to handle aborted navigations globally","State":"closed","Body":"### What problem does this feature solve?\r\nAdds possibility to handle aborted navigations globally.\r\n\r\nInitiated vue-router navigation could have different outcomes:\r\n* successful navigation\r\n* errored navigation (in case there is non-internal js error in one of the guards or hooks)\r\n* aborted navigation\r\n\r\nIn cases, when application logic depends on these navigation results, `vue-router` has very limited support to catch aborted navigations, and no support to do it globally.\r\n\r\nSuccessful navigation can be catched in global `afterEach` hook or in `beforeResolve` guard (however error still can be thrown there). Also there is optional `onComplete` callback for `router.push`, but there is no way to set it from `<router-link>`.\r\nNavigation with error (because of JS error in one of the guards or hooks) can be catched in global `onError` hook. Also there is optional `onAbort` callback for `router.push` (which will be called for both navigation with error and aborted navigation), but there is no way to set it from `<router-link>`.\r\nWhen it comes to aborted navigations, the only place where it can be catched – `onAbort` callback for `router.push`. However, as mentioned before, it is not possible to set it from `<router-link>`. Moreover, there is no global hook to catch aborted navigations at all.\r\n\r\n### Use case\r\n\r\nIn our application we would like to simply display loading indicator in the root App component while navigation is in progress. Also, we would like to have this functionality be generic, so it can be applied to different applications. The easiest way to achieve it is by creating separate ES module like this `navigation-state-plugin.js`:\r\n``` js\r\nimport Vue from 'vue';\r\n\r\nexport const state = Vue.observable({ navigating: false });\r\n\r\nexport default router => {\r\n  // When navigation initiated – update state and proceed\r\n  router.beforeEach((to, from, next) {\r\n    state.navigating = true;\r\n    next();\r\n  });\r\n\r\n  // When navigation successfully finished – update state accordingly\r\n  router.afterEach(() => {\r\n    state.navigating = false;\r\n  });\r\n\r\n  // When navigation failed –also update state\r\n  router.onError(error => {\r\n    state.navigating = false;\r\n  });\r\n};\r\n```\r\n\r\nIn this way in can be applied in the `main.js`:\r\n```js\r\nimport VueRouter from 'vue-router';\r\nimport applyPlugin from './navigation-state-plugin.js`;\r\n\r\n// do other initializations\r\n\r\nconst router = new VueRouter(...);\r\napplyPlugin(router);\r\n\r\n// init application\r\n```\r\n\r\nAlso state from this file can be imported in App.vue and used to display loading indicator when `state.navigating` is `true`.\r\n\r\nHowever, when navigation is aborted there is no way to track it in a global manner, which leads to loading indicator to stay visible on a screen.\r\n\r\nAs possible solution, [it was suggested](https://github.com/vuejs/vue-router/issues/3027#issuecomment-599474646) to _\"use `router.push` or the v-slot api and get the promise returned from `navigate`\"_ (which is currently not available because #3042 has no PR). However this solution would require to create wrappers around vue-router API, which should always be used throughout entire application instead of native `vue-router` api. Even though it is easy to do for `router.push`, it is cumbersome to do for `<router-link>` because wrapper should be able to support the same rendering scenarios (without slot content, with slot content, with scoped slot content, etc.)\r\nIt is also not suitable for us, because we have shared set of router components, which are re-used in different vue applications. And not all applications will have `navigation-state-plugin.js`. So we need to have possibility to use native `router.push` and `<router-link>` with an option to globally manage navigation state.\r\n\r\n### What does the proposed API look like?\r\nMost obvious would be to introduce global `onAbort` hook:\r\n```js\r\n  router.onAbort(function callback(abortedRoute, reason) { ... });\r\n```\r\nwhere `reason` can be one of the errors from #3047\r\n\r\nIt may be possible to call existing `onError` or `afterEach` hooks also for aborted navigations, but that would be a breaking change, and probably would make API more confusing.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3157","RelatedDescription":"Closed issue \"Add possibility to handle aborted navigations globally\" (#3157)"},{"Id":"586168513","IsPullRequest":false,"CreatedAt":"2020-03-25T08:50:13","Actor":"Mafii","Number":"3154","RawContent":null,"Title":"Using Router with Office.js: router tries using push state even tho it's reset manually by the office js script","State":"closed","Body":"### What problem does this feature solve?\r\nWhen using Microsofts Offic.js (e.g. in Word: https://docs.microsoft.com/en-us/javascript/api/word?view=word-js-preview), and using Vue with vue router, the router tries using push state, but the office js script deletes the push state since the excel web pane is not supporting the push state. The check in push state wheter push state can be used, checks for `window.history && 'pushState' in window.history`, but office.js resets the fields on window.history, not window.history itself (see https://stackoverflow.com/a/42703406/). I propose we check if Office.js is available in the context, and if so, we disable the push state.\r\n\r\n### What does the proposed API look like?\r\nWe would add a check at this position:\r\n\r\nhttps://github.com/vuejs/vue-router/blob/c0d3376f4e3527bd761bd325873366ed74f5736b/src/util/push-state.js#L17\r\n\r\nThe additional check could look like this:\r\n\r\n```const officeJsLoaded = window.Office && window.Office.context;```\r\n\r\nso the whole function might look like this:\r\n\r\n```\r\nexport const supportsPushState =\r\n  inBrowser &&\r\n  (function () {\r\n    const ua = window.navigator.userAgent\r\n    const officeJsLoaded = window.Office && window.Office.context\r\n\r\n    if (\r\n      officeJsLoaded ||\r\n      ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\r\n      ua.indexOf('Mobile Safari') !== -1 &&\r\n      ua.indexOf('Chrome') === -1 &&\r\n      ua.indexOf('Windows Phone') === -1)\r\n    ) {\r\n      return false\r\n    }\r\n\r\n    return window.history && 'pushState' in window.history\r\n  })()\r\n```\r\n\r\n\r\n\r\nAlternatively, we could check if `window.history.pushState` is null, but I am not sure of the implications of this. Maybe someone who knows the expected state in the browsers can shed a light wheter that would make sense.\r\n\r\nThis would result in this return statement, the rest of the function not being changed:\r\n```\r\nreturn window.history && 'pushState' in window.history && window.history.pushState !== null\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3154","RelatedDescription":"Closed issue \"Using Router with Office.js: router tries using push state even tho it's reset manually by the office js script\" (#3154)"},{"Id":"586418841","IsPullRequest":false,"CreatedAt":"2020-03-23T18:18:19","Actor":"rfftrifork","Number":"3156","RawContent":null,"Title":"Allow nested routes without parent component","State":"open","Body":"### What problem does this feature solve?\r\nThis issue already exist, but was closed: https://github.com/vuejs/vue-router/issues/2105 I do believe it shouldn't have been.\r\n\r\nThe `PassThrough` solution will most likely do it, but it is a workaround. I do not want to specify every view as a pass through.\r\n\r\nThis should imo. be supported by vue-router directly, making it easier to design ones system as small sub components, allowing each component to know it's own navigation and be loosely coupled.\r\n\r\n\r\nAlso, I don't know if it's the same or another issue, but `name` hierarchies would make this feature quite powerful\r\n\r\n### What does the proposed API look like?\r\nInterface wise I would say it makes sense to simply default to this behavior if `component` isn't specified.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3156","RelatedDescription":"Open issue \"Allow nested routes without parent component\" (#3156)"},{"Id":"586418167","IsPullRequest":false,"CreatedAt":"2020-03-23T18:17:10","Actor":"rfftrifork","Number":"3155","RawContent":null,"Title":"Allow nested routes without parent component","State":"closed","Body":"This issue already exist, but was closed: https://github.com/vuejs/vue-router/issues/2105 I do believe it shouldn't have been.\r\n\r\nThe `PassThrough` solution will most likely do it, but it is a workaround. I do not want to specify every view as a pass through.\r\n\r\nThis should imo. be supported by vue-router directly, making it easier to design ones system as small sub components, allowing each component to know it's own navigation and be loosely coupled.\r\n\r\nInterface wise I would say it makes sense to simply default to this behavior if `component` isn't specified.\r\n\r\nAlso, I don't know if it's the same or another issue, but `name` hierarchies would make this feature quite powerful","Url":"https://github.com/vuejs/vue-router/issues/3155","RelatedDescription":"Closed issue \"Allow nested routes without parent component\" (#3155)"},{"Id":"586001267","IsPullRequest":false,"CreatedAt":"2020-03-23T08:58:46","Actor":"snowtreetree","Number":"3153","RawContent":null,"Title":"router back not work when loading","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/snowtreetree/router-back](https://github.com/snowtreetree/router-back)\r\n\r\n**[youtube video](https://www.youtube.com/watch?v=dxpUgt-fCSo) ,  I upload my video to youtube , you can watch it in 15 second.**\r\n\r\n### Description\r\n**It's not js, just image**\r\n** in my  [app](https://github.com/snowtreetree/router-back), you can change network to slow3g，**when browser top left conrner show loading**,  click `to button`, the page show correctly,  then click browser back, the router params have changed, but the page show no change.**\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n![image](https://user-images.githubusercontent.com/30932683/77144357-a142dc00-6ac0-11ea-8740-ef99a6b34770.png)\r\n\r\n### What is expected?\r\nrouter back immediately.\r\n\r\n### What is actually happening?\r\nwhen something is loading，i want to let router go back, but the page does not change immediately,  when browser loading end,  the page show correctly.\r\n\r\n---\r\nIn my app , I need to do something in router change(log my page path, title), but when the internet speed is slow,  use the function of back or go(-1), I can not back 🤷‍♀️。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3153","RelatedDescription":"Closed issue \"router back not work when loading\" (#3153)"},{"Id":"585778650","IsPullRequest":false,"CreatedAt":"2020-03-22T18:12:46","Actor":"joeldenning","Number":"3152","RawContent":null,"Title":"Ability to detach and reattach popstate listeners","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\nhttps://codesandbox.io/s/nostalgic-mahavira-y0m7q\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n#### Memory leak\r\n\r\nCall `new VueRouter()` multiple times. It is impossible to clean up its popstate listener.\r\n\r\n#### Basepath bug\r\n\r\nIf you have multiple vue applications, each using vue-router, they must all share the same base path, even if you ensure only one of them is active at a time by destroying / remounting when navigating between them. Otherwise they will all attempt to ensure that every route starts with their base path.\r\n\r\nSame goes for if you have one vue-router and one react-router. The vue-router will force all urls to start with its base path within the react-owned pages, even if you have destroyed the vue application before navigating to the react application.\r\n\r\n### What is expected?\r\nI think the best solution is to call `window.addEventListener('popstate', handler)` when `const intance = new Vue({router})` is called, instead of when `new VueRouter()` is called. And then call `window.removeEventListener('popstate', handler)` when `instance.$destroy()` is called.\r\n\r\nAlternatively, it could be cleaned up like so:\r\n\r\n```js\r\n// Alternative solution (not my preferred one, but works)\r\n\r\nconst router = new VueRouter({...})\r\n// later, to clean up event listeners:\r\nrouter.detach()\r\n// later, to reattach event listeners\r\nrouter.attach()\r\n```\r\n\r\n### What is actually happening?\r\nwindow.addEventListener is called during `new VueRouter()`, and there is no way to ever remove that event listener.\r\n\r\n---\r\nSee related https://github.com/single-spa/single-spa/issues/488. I am a maintainer of single-spa, which has dozens of organizations using one or more instances of vue-router. For us, cleaning up the event listener when the application is unmounted is important to being able to have isolated apps on the same page.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3152","RelatedDescription":"Open issue \"Ability to detach and reattach popstate listeners\" (#3152)"},{"Id":"585149522","IsPullRequest":false,"CreatedAt":"2020-03-21T11:22:13","Actor":"Mister-Hope","Number":"3151","RawContent":null,"Title":"Types: Missing options on instance.$router","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Steps to reproduce\r\n```\r\nthis.$router.options // should be the options that user passed to vue-rotuer\r\n```\r\n\r\n## Solution\r\n\r\nI think we should change \r\n\r\n```ts\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $router: VueRouter\r\n    $route: Route\r\n  }\r\n}\r\n```\r\nto \r\n\r\n\r\n```ts\r\nimport { RouterOptions } from './router'\r\n\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $router: VueRouter & { options: RouterOptions }\r\n    $route: Route\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3151","RelatedDescription":"Closed issue \"Types: Missing options on instance.$router\" (#3151)"},{"Id":"584909405","IsPullRequest":false,"CreatedAt":"2020-03-20T08:25:15","Actor":"snowtreetree","Number":"3150","RawContent":null,"Title":"router back not work when loading","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/snowtreetree/router-back](https://github.com/snowtreetree/router-back)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n![image](https://user-images.githubusercontent.com/30932683/77144357-a142dc00-6ac0-11ea-8740-ef99a6b34770.png)\r\n\r\n### What is expected?\r\nrouter back immediately.\r\n\r\n### What is actually happening?\r\nwhen something is loading，i want to let router go back, but the page does not change immediately,  when browser loading end,  the page show correctly.\r\n\r\n---\r\nIn my app , I need to do something in router change(log my page path, title), but when the internet speed is slow,  use the function of back or go(-1), I can not back 🤷‍♀️。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3150","RelatedDescription":"Closed issue \"router back not work when loading\" (#3150)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"604158924","IsPullRequest":true,"CreatedAt":"2020-04-21T17:32:34","Actor":"Alex-Sokolov","Number":"1723","RawContent":null,"Title":"docs: [RU] Update testing.md","State":"open","Body":"Ref: https://github.com/vuejs/vuex/pull/1425","Url":"https://github.com/vuejs/vuex/pull/1723","RelatedDescription":"Open PR \"docs: [RU] Update testing.md\" (#1723)"},{"Id":"604118936","IsPullRequest":true,"CreatedAt":"2020-04-21T16:36:15","Actor":"kiaking","Number":"1722","RawContent":null,"Title":"docs(ja): add `hasModule` api translation","State":"open","Body":"This PR add the Japanese translation for the new `hasModule` API.","Url":"https://github.com/vuejs/vuex/pull/1722","RelatedDescription":"Open PR \"docs(ja): add `hasModule` api translation\" (#1722)"},{"Id":"603917875","IsPullRequest":false,"CreatedAt":"2020-04-21T11:25:56","Actor":"nainardev","Number":"1721","RawContent":null,"Title":"Why store() instead of just a store object","State":"closed","Body":"### Current API\r\n```js\r\nimport { createStore } from 'vuex'\r\n\r\nconst store = createStore({\r\n  state () {\r\n    return {\r\n      count: 1\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nWhy should we have store() return the state object instead of just writing the store?\r\n\r\n### What does the proposed API look like?\r\n```js\r\nimport { createStore } from 'vuex'\r\n\r\nconst store = createStore({\r\n  count: 1\r\n})\r\n```\r\nIs there a specific reason for having a function return store object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1721","RelatedDescription":"Closed issue \"Why store() instead of just a store object\" (#1721)"},{"Id":"603849083","IsPullRequest":true,"CreatedAt":"2020-04-21T10:09:28","Actor":"Alex-Sokolov","Number":"1720","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"Latest updates","Url":"https://github.com/vuejs/vuex/pull/1720","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1720)"},{"Id":"603676755","IsPullRequest":true,"CreatedAt":"2020-04-21T08:05:10","Actor":"Jinjiang","Number":"1718","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"https://github.com/vuejs/vuex/compare/a5dd20c...b40ee5d\r\n/cc @justineo for review. Thanks.","Url":"https://github.com/vuejs/vuex/pull/1718","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1718)"},{"Id":"603680606","IsPullRequest":true,"CreatedAt":"2020-04-21T04:12:35","Actor":"Jinjiang","Number":"1719","RawContent":null,"Title":"docs: unified the tips format","State":"closed","Body":"I found in docs, we both use `> note: xxx` and `:::tip xxx` so I unified them into `vuepress` specific format. Hope it would be better.\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1719","RelatedDescription":"Closed or merged PR \"docs: unified the tips format\" (#1719)"},{"Id":"600845131","IsPullRequest":true,"CreatedAt":"2020-04-20T12:22:02","Actor":"kiaking","Number":"1715","RawContent":null,"Title":"build: align build system with vue 3","State":"closed","Body":"This PR updates the build system for Vuex 4 to align with Vue 3.\r\n\r\n- Bundles are now aligned with Vue 3 such as `vuex.esm-bundler.js` and `vuex.global.js`.\r\n- Using `__DEV__` global variable and rollup replace plugin to handle `process.env.NODE_ENV !== 'production'` replacement.\r\n- Remove `dist` folder from commit expect for `logger.d.ts`, plus organize `.gitignore` file to match the latest repository structure.\r\n- Make `index.js` to be the primary esm entry point by renaming `index.esm.js` to `index.js`, and renaming `index.js` to `index.cjs`.\r\n- Use index file without the build in test cases.\r\n- ~⚠️ The \"release script\" should be updated once #1707 is merged in `dev` branch.~ Included the \"release script\" as well.","Url":"https://github.com/vuejs/vuex/pull/1715","RelatedDescription":"Closed or merged PR \"build: align build system with vue 3\" (#1715)"},{"Id":"592622128","IsPullRequest":true,"CreatedAt":"2020-04-19T10:20:48","Actor":"kiaking","Number":"1707","RawContent":null,"Title":"build: add conventional changelog support","State":"closed","Body":"This PR adds Conventional Changelog support to enhance release process and to align with recent Vue ecosystems.\r\n\r\n- Generate initial CHANGELOG.md including all past releases.\r\n- Add Contribution guideline taken from Vue & Vue next. The contents are modified slightly to fit into Vuex context.\r\n- Update release shell file to support changeling generation.","Url":"https://github.com/vuejs/vuex/pull/1707","RelatedDescription":"Closed or merged PR \"build: add conventional changelog support\" (#1707)"},{"Id":"602380309","IsPullRequest":true,"CreatedAt":"2020-04-18T05:07:20","Actor":"kiaking","Number":"1717","RawContent":null,"Title":"types: add typing support","State":"open","Body":"fix #994\r\n\r\nCelebrating Vue Beta 2 release, now we can argument type our `$store` custom property in Vue Component 🎉  This PR adds typing support for Vuex 4.\r\n\r\n- Add missing types, and update Vue interfaces.\r\n- Upgrade TS to 3.8.\r\n- Upgrade tsconfig to align with Vue 3 (support Map and such).\r\n- Bring back type test in testing.","Url":"https://github.com/vuejs/vuex/pull/1717","RelatedDescription":"Open PR \"types: add typing support\" (#1717)"},{"Id":"601706924","IsPullRequest":true,"CreatedAt":"2020-04-18T01:05:41","Actor":"mohamedhayibor","Number":"1716","RawContent":null,"Title":"Use currentCount getter instead of accessing $store.state.count on Counter component","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1716","RelatedDescription":"Closed or merged PR \"Use currentCount getter instead of accessing $store.state.count on Counter component\" (#1716)"},{"Id":"600545534","IsPullRequest":true,"CreatedAt":"2020-04-16T06:20:30","Actor":"alexesprit","Number":"1714","RawContent":null,"Title":"docs(ru): fix punctuation and typos","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1714","RelatedDescription":"Closed or merged PR \"docs(ru): fix punctuation and typos\" (#1714)"},{"Id":"595621726","IsPullRequest":true,"CreatedAt":"2020-04-14T15:43:48","Actor":"baojie223","Number":"1708","RawContent":null,"Title":"refactor: normalizeMap uses Map instead of Object","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1708","RelatedDescription":"Closed or merged PR \"refactor: normalizeMap uses Map instead of Object\" (#1708)"},{"Id":"599328444","IsPullRequest":true,"CreatedAt":"2020-04-14T06:33:54","Actor":"Alex-Sokolov","Number":"1713","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1713","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1713)"},{"Id":"598478643","IsPullRequest":true,"CreatedAt":"2020-04-14T06:28:02","Actor":"Alex-Sokolov","Number":"1712","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1712","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1712)"},{"Id":"596338483","IsPullRequest":true,"CreatedAt":"2020-04-14T04:40:05","Actor":"corgiyun","Number":"1710","RawContent":null,"Title":"docs: update getters.md","State":"closed","Body":"docs: update getters.md","Url":"https://github.com/vuejs/vuex/pull/1710","RelatedDescription":"Closed or merged PR \"docs: update getters.md\" (#1710)"},{"Id":"590380264","IsPullRequest":true,"CreatedAt":"2020-04-12T12:39:50","Actor":"kiaking","Number":"1706","RawContent":null,"Title":"docs: add docs and typings for the new `hasModule` method","State":"closed","Body":"This PR adds docs and typing for the new `hasModule` API which was added at #834.","Url":"https://github.com/vuejs/vuex/pull/1706","RelatedDescription":"Closed or merged PR \"docs: add docs and typings for the new `hasModule` method\" (#1706)"},{"Id":"597702504","IsPullRequest":true,"CreatedAt":"2020-04-10T05:23:52","Actor":"godky","Number":"1711","RawContent":null,"Title":"refactor: Register nested modules through more uniform naming ","State":"open","Body":"Usually people prefer to register nested modules `nested / myModule`  by passing in ` nested / myModule` instead of `['nested', 'myModule']`, which is more unified with the namespace.In addition,this modification will consider a single empty string path to be the root module.","Url":"https://github.com/vuejs/vuex/pull/1711","RelatedDescription":"Open PR \"refactor: Register nested modules through more uniform naming \" (#1711)"},{"Id":"596259791","IsPullRequest":false,"CreatedAt":"2020-04-08T02:12:46","Actor":"bangbala","Number":"1709","RawContent":null,"Title":"vuex性能问题","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nstore:xxx.js内容\r\n...\r\n  current(state) {\r\n    ...\r\n  }\r\n\r\n  platform(state, getters) {\r\n    return getters.current.platform;\r\n  },\r\n\r\n\r\n  groups(state, getters) {\r\n    const platform = getters.platform;\r\n    return [platform]\r\n  }\r\n..\r\n\r\n\r\n组件：\r\n...\r\ncomputed:{\r\n  ...mapGetters(\"xxx\", [\"groups\"])\r\n}\r\n...\r\n\r\n发现current改变，但current.platform的值没有变化情况下发现groups会调用多次","Url":"https://github.com/vuejs/vuex/issues/1709","RelatedDescription":"Closed issue \"vuex性能问题\" (#1709)"},{"Id":"584741692","IsPullRequest":true,"CreatedAt":"2020-04-02T09:06:37","Actor":"andrewminer","Number":"1699","RawContent":null,"Title":"Throw an error when an unknown mutation is requested","State":"closed","Body":"I noticed when I was running my unit tests that I got a number of `[vuex] unknown mutation type` errors in the log, but without any tests actually failing.  This was due to my having (deliberately) removed a store which provided those mutations.  This also removed those tests which were explicitly exercising that mutation, so there were no longer any tests which actually checked that the mutation worked.  So, that all checks out.\r\n\r\nHowever...  there still were all the the places which were calling the now unknown mutation without triggering any errors of their own in _their_ tests.  This pull request changes the reaction to not finding a mutation to thow an error instead of swallowing the problem.  This will (correctly, to my mind) cause upstream code which erroneously commits a non-existant mutation to fail.","Url":"https://github.com/vuejs/vuex/pull/1699","RelatedDescription":"Closed or merged PR \"Throw an error when an unknown mutation is requested\" (#1699)"},{"Id":"589214433","IsPullRequest":true,"CreatedAt":"2020-03-30T11:09:28","Actor":"brycehipp","Number":"1703","RawContent":null,"Title":"Correcting typo in README","State":"closed","Body":"I was reading through the changes coming to v4 and noticed a minor typo.","Url":"https://github.com/vuejs/vuex/pull/1703","RelatedDescription":"Closed or merged PR \"Correcting typo in README\" (#1703)"},{"Id":"589517974","IsPullRequest":false,"CreatedAt":"2020-03-28T06:16:08","Actor":"shredmaster","Number":"1705","RawContent":null,"Title":"fluent API to access to actions/getters/state/mutations","State":"open","Body":"### What problem does this feature solve?\r\nour team just adopted VueJS recently and I really don't like using the mapXXX helpers for a couple of reasons. \r\n\r\n1. bad readability\r\n2. magic strings are hard to maintain and refactor\r\n3. can't navigate to the source in the IDE\r\n\r\nI think it would be nice to access the module directly.\r\n\r\n### What does the proposed API look like?\r\n\r\n```js\r\nconst cart = {\r\n  actions: {\r\n    checkout ({ commit, state }, products) {\r\n    }\r\n  }\r\n}\r\n```\r\nto dispatch checkout action, you can call the method directly.\r\n\r\n```js\r\n$store.cart.actions.checkout(products)\r\n```\r\n\r\nI made a simple plugin [vuex-help](https://github.com/shredmaster/vuex-help) to access modules directly, but I think this would be a nice addition to the existing API.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1705","RelatedDescription":"Open issue \"fluent API to access to actions/getters/state/mutations\" (#1705)"},{"Id":"589517507","IsPullRequest":false,"CreatedAt":"2020-03-28T06:12:25","Actor":"shredmaster","Number":"1704","RawContent":null,"Title":"More fluent API to access to actions/getters/state/mutations","State":"closed","Body":"## What problem does this feature solve?\r\nour team just adopted VueJS recently and I really don't like using the mapXXX helpers for a couple of reasons. \r\n\r\n1. bad readability\r\n2. magic strings are hard to maintain and refactor\r\n3. can't navigate to the source in the IDE\r\n\r\nI think it would be nice to access the module directly.\r\n\r\n## What does the proposed API look like?\r\n\r\n```js\r\nconst cart = {\r\n  actions: {\r\n    checkout ({ commit, state }, products) {\r\n    }\r\n  }\r\n}\r\n```\r\nto dispatch checkout action, you can call the method directly.\r\n\r\n```js\r\n$store.cart.actions.checkout(products)\r\n```\r\n\r\nI made a simple plugin [vuex-help](https://github.com/shredmaster/vuex-help) to access modules directly, but I think this would be a nice addition to the existing API. ","Url":"https://github.com/vuejs/vuex/issues/1704","RelatedDescription":"Closed issue \"More fluent API to access to actions/getters/state/mutations\" (#1704)"},{"Id":"586791755","IsPullRequest":true,"CreatedAt":"2020-03-24T14:40:47","Actor":"sunnyke","Number":"1702","RawContent":null,"Title":"modify test description","State":"closed","Body":"spell error:\r\nfile path:  /vuex/test/unit/util.spec.js \r\ndiff: change nornal to normal","Url":"https://github.com/vuejs/vuex/pull/1702","RelatedDescription":"Closed or merged PR \"modify test description\" (#1702)"},{"Id":"585149548","IsPullRequest":true,"CreatedAt":"2020-03-24T14:36:24","Actor":"kootoopas","Number":"1701","RawContent":null,"Title":"Fix getter type optional params","State":"closed","Body":"Fix getter type to match implementation by marking optional params.","Url":"https://github.com/vuejs/vuex/pull/1701","RelatedDescription":"Closed or merged PR \"Fix getter type optional params\" (#1701)"},{"Id":"583179440","IsPullRequest":false,"CreatedAt":"2020-03-23T21:03:34","Actor":"kossa","Number":"1698","RawContent":null,"Title":"Doc got empty page","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[http://localhost:8080/](http://localhost:8080/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClone repo\r\nrun : npm i\r\nrun : npm run docs\r\n\r\nin browser open : http://localhost:8080/\r\n\r\n### What is expected?\r\nSee the documentation\r\n\r\n### What is actually happening?\r\nBlank page\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1698","RelatedDescription":"Closed issue \"Doc got empty page\" (#1698)"},{"Id":"584889928","IsPullRequest":false,"CreatedAt":"2020-03-20T07:30:21","Actor":"sunlulu8","Number":"1700","RawContent":null,"Title":"老项目vuex不能共享","State":"closed","Body":"老项目，在每个模块都有一个入口文件会创建vue实例然后注入store，这种写法vuex好像不能共享啊，应该怎么修改才可以在一个模块修改state之后另一个模块getters可以自己获取","Url":"https://github.com/vuejs/vuex/issues/1700","RelatedDescription":"Closed issue \"老项目vuex不能共享\" (#1700)"},{"Id":"583168608","IsPullRequest":true,"CreatedAt":"2020-03-19T15:14:49","Actor":"atilacamurca","Number":"1696","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1696","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1696)"},{"Id":"583173233","IsPullRequest":false,"CreatedAt":"2020-03-17T17:20:44","Actor":"kossa","Number":"1697","RawContent":null,"Title":"Doc got empty page","State":"closed","Body":"Hello,\r\n\r\nI try to run : `npm run docs` after cloning and npm install command\r\n\r\nConsole :\r\n![image](https://user-images.githubusercontent.com/1175584/76883229-15d90900-687c-11ea-88e7-7ffbdd9db559.png)\r\n\r\nBrowser :\r\n![image](https://user-images.githubusercontent.com/1175584/76883027-c7c40580-687b-11ea-87a0-77705e94de50.png)\r\n ","Url":"https://github.com/vuejs/vuex/issues/1697","RelatedDescription":"Closed issue \"Doc got empty page\" (#1697)"},{"Id":"581694787","IsPullRequest":false,"CreatedAt":"2020-03-15T14:25:10","Actor":"h311x","Number":"1695","RawContent":null,"Title":"Add useStoreModule","State":"open","Body":"### What problem does this feature solve?\r\nWhile I was looking through the examples of the 4.0 alpha version, I thought that when you have a large store it can become a bit annoying to declare getters and actions locally in every component you need. So I think it would be nice to have a some sort of a helper function that returns only (hopefully typed) store module you want to use. \r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst myModule = useStoreModule(\"module namespace\")\r\n\r\nconsole.log(myModule.state) // returns state of a module etc.\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1695","RelatedDescription":"Open issue \"Add useStoreModule\" (#1695)"},{"Id":"579102344","IsPullRequest":false,"CreatedAt":"2020-03-11T08:54:30","Actor":"enjkvbej","Number":"1694","RawContent":null,"Title":"How to update item of deep array in mutation","State":"closed","Body":"````\r\nstate = {\r\n  list: [\r\n      {\r\n          config: {\r\n              children: []\r\n          },\r\n      },\r\n  ]\r\n}\r\n\r\nmutation:\r\nconst copyRow = cloneDeep(state.list[0]) // lodash cloneDeep\r\ncopyRow.config.children.push({xxx: xxx})\r\nstate.list.splice(0, 1, copyRow)\r\n````\r\nexpect: add item in chlidren\r\nerror: [vuex] do not mutate vuex store state outside mutation handlers.\r\nPlease help me! Thanks!","Url":"https://github.com/vuejs/vuex/issues/1694","RelatedDescription":"Closed issue \"How to update item of deep array in mutation\" (#1694)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-04-22T05:30:45.8744773Z","RunDurationInMilliseconds":1960}