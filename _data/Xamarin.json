{"Data":{"Blog":{"FeedItems":[{"Title":"Go Large with iOS 11","PublishedOn":"2017-10-26T19:36:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>One of the more obvious user interface changes in iOS 11 is the larger titles that are used across the system apps, from the App Store and Apple Music to Notes and Mail. The Health and Contact apps are shown below: The title animates off the screen and shrinks to a normal-sized navigation bar when [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/go-large-ios-11/\">Go Large with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/go-large-ios-11/","RawContent":null},{"Title":"Introducing the Android SDK Manager","PublishedOn":"2017-10-25T19:55:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>To make the process of managing Android SDKs as smooth as possible, we’ve revamped the Android SDK Manager in Visual Studio for Mac to create a seamless, integrated experience. Not only does this new SDK Manager offer a one-stop shop for all things Android SDK, we&#8217;re also introducing support for automatic SDK dependency resolution. So, let’s [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/introducing-android-sdk-manager/\">Introducing the Android SDK Manager</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/introducing-android-sdk-manager/","RawContent":null},{"Title":"3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release","PublishedOn":"2017-10-24T19:52:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Over the past year we’ve been working on a couple of &#8220;big things&#8221; that enable you to create more performant applications on more platforms. With our latest stable release, version 2.4.0, we introduced performance optimized renderers on Android, nicknamed Fast Renderers. While faster platform renderers are a clear win, you really start to see the big [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/\">3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/","RawContent":null},{"Title":"Five-Star Apps with Mobile Center Test","PublishedOn":"2017-10-20T12:33:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Five-star mobile apps are all about consistent and predictable output. It&#8217;s not a good experience for users when an app suddenly crashes or doesn’t format correctly on their mobile screens. Developers can easily avoid these scenarios by testing for various scenarios on different devices, and Visual Studio Mobile Center makes it easy to test your mobile [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/\">Five-Star Apps with Mobile Center Test</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/","RawContent":null},{"Title":"Upcoming Webinar | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-10-19T18:51:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Register now to join David Antognoli on Tuesday, November 7 at 9 am PT to learn how to take your Unity games to the next level with powerful cloud services. He’ll walk through how to connect your apps to Microsoft Azure, adding compelling features that users love, like leaderboards and heatmaps, and demo how new [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/\">Upcoming Webinar | Build Better Games with Unity and Microsoft Azure</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Plugin and Permission Changes with iOS 11","PublishedOn":"2017-10-18T20:24:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>iOS 11 introduced some fun updates around permissions when accessing certain features on the device. I first noticed these changes when trying to access a user location with the Geolocator Plugin in a Xamarin.Forms application. To my surprise, nothing happened. Upon further investigation of the application&#8217;s Output, I noticed a message explaining exactly what I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/plugin-permission-changes-ios-11/\">Plugin and Permission Changes with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/plugin-permission-changes-ios-11/","RawContent":null},{"Title":"Adaptive UI with Xamarin.Forms","PublishedOn":"2017-10-16T20:58:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Xamarin.Forms has supported iOS, Android, and Windows for a long time. We&#8217;ve also added new platforms to keep up with the changing landscape, such as Tizen and macOS, with Linux and Windows WPF on the horizon. These platforms run on a wide variety of devices including phones, tablets, desktops, and TVs. This presents an interesting [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/adaptive-ui-xamarin-forms/\">Adaptive UI with Xamarin.Forms</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/adaptive-ui-xamarin-forms/","RawContent":null},{"Title":"Give the Visual Studio 2017 Version 15.5 Preview a Try!","PublishedOn":"2017-10-13T20:06:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>With Visual Studio 2017 version 15.4 now stable and sporting some awesome new features, such as Xamarin Live integration, Android Oreo / iOS 11 support, and a smarter, smaller installation, it&#8217;s time to turn our attention to the next version of Visual Studio 2017, version 15.5! This upcoming release is now available as a preview [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/\">Give the Visual Studio 2017 Version 15.5 Preview a Try!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/","RawContent":null},{"Title":"Bring 3D Models To Life in Augmented Reality with UrhoSharp","PublishedOn":"2017-10-12T19:28:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>UrhoSharp brings 3D to a variety of platforms and uses its own binary mdl format for model files. There are many sources for 3D models, including cgtrader and TurboSquid, and formats such as FBX, OBJ, DAE and BLEND. Urho3D provides tools like AssetImporter and the Urho3D Blender Add-in so you can use these models. In [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/\">Bring 3D Models To Life in Augmented Reality with UrhoSharp</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/","RawContent":null},{"Title":"Updating Xamarin.iOS Apps for the iPhone X","PublishedOn":"2017-10-11T18:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>There&#8217;s no doubt that one of the biggest announcements from Apple this year was the iPhone X. The new Super Retina display is edge-to-edge on the device, creating an immersive experience we had yet to see on iPhones. With the new screen changes on the iPhone X, developers may be asking themselves, &#8220;What do I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/\">Updating Xamarin.iOS Apps for the iPhone X</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6778688926","Type":"PullRequestEvent","CreatedAt":"2017-10-28T14:09:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/989","RelatedDescription":"Merged pull request \"[build] fix for JdkInfo task in PrepareWindows.targets\" (#989) at xamarin/xamarin-android","RelatedBody":"On Windows after formatting my machine (don't ask), `PrepareWindows.targets` was failing with:\r\n\r\nSystem.InvalidOperationException: Could not determine Android SDK location.\r\n\r\nLooking into it, there appear to be two things wrong:\r\n- `PrepareWindows.targets` should import `Configuration.props`\r\n- The incoming variables are `AndroidSdkDirectory` and `AndroidNdkDirectory` not `AndroidSdkPath` and `AndroidNdkPath`\r\n\r\nI'm not quite sure how this _ever_ worked, unless `AndroidSdkInfo` was able to find _some_ Android SDK on your machine."},{"Id":"6777427910","Type":"PullRequestEvent","CreatedAt":"2017-10-27T22:12:54","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/989","RelatedDescription":"Opened pull request \"[build] fix for JdkInfo task in PrepareWindows.targets\" (#989) at xamarin/xamarin-android","RelatedBody":"On Windows after formatting my machine (don't ask), `PrepareWindows.targets` was failing with:\r\n\r\nSystem.InvalidOperationException: Could not determine Android SDK location.\r\n\r\nLooking into it, there appear to be two things wrong:\r\n- `PrepareWindows.targets` should import `Configuration.props`\r\n- The incoming variables are `AndroidSdkDirectory` and `AndroidNdkDirectory` not `AndroidSdkPath` and `AndroidNdkPath`\r\n\r\nI'm not quite sure how this _ever_ worked, unless `AndroidSdkInfo` was able to find _some_ Android SDK on your machine."},{"Id":"6776897199","Type":"PullRequestEvent","CreatedAt":"2017-10-27T19:44:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/988","RelatedDescription":"Merged pull request \"[xabuild.exe] handle AndroidSdkDirectory like the script\" (#988) at xamarin/xamarin-android","RelatedBody":"Context:\r\nhttps://github.com/xamarin/xamarin-android/blob/master/tools/scripts/xabuild#L105\r\n\r\n`xabuild`, the shell script, has some logic to set MSBuild properties\r\nfor `AndroidSdkDirectory` and `AndroidNdkDirectory`. The issue here is\r\non Windows, `xabuild.exe` is not invoked from this shell script. So we\r\nneed to replicate the logic in C# in `xabuild.exe`, but not break what\r\nwas fixed in #977.\r\n\r\nChanges:\r\n- check for `ANDROID_SDK_PATH` or `ANDROID_NDK_PATH` environment\r\nvariables\r\n- Run `Paths.targets` via a new MSBuild process, the same way as\r\n`xabuild`, the script\r\n- Set the `AndroidSdkDirectory` and `AndroidNdkDirectory` values in the\r\nconfig file if they are not blank\r\n- `AndroidSdkDirectory` and `AndroidNdkDirectory` can still be\r\noverridden by a user, because incoming values supersede what is found\r\nin the config file"},{"Id":"6776743520","Type":"PullRequestEvent","CreatedAt":"2017-10-27T19:05:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/987","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Fix BuildAppCheckDebugSymbols for monodroid\" (#987) at xamarin/xamarin-android","RelatedBody":"The BuildAppCheckDebugSymbols test does not take into account\r\nthat when building in debug mode on monodroid the assemblies\r\nare not embedded in the apk. As a result when trying to get\r\n`Library1.pdb` from the apk we get a null back. This causes\r\na Null Ref exception when we try to get a length.\r\n\r\nThe fix is to look in the `assets` directory if we can't get\r\nthe file from the zip. This will allow the test to work in\r\nboth xamarin-android and monodroid."},{"Id":"6776718026","Type":"PullRequestEvent","CreatedAt":"2017-10-27T18:59:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/978","RelatedDescription":"Merged pull request \"Bump to Java.Interop/master/00ad8d6\" (#978) at xamarin/xamarin-android","RelatedBody":"Changes as needed by #949"},{"Id":"6775418265","Type":"PullRequestEvent","CreatedAt":"2017-10-27T14:13:40","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/988","RelatedDescription":"Opened pull request \"[xabuild.exe] handle AndroidSdkDirectory like the script\" (#988) at xamarin/xamarin-android","RelatedBody":"Context:\r\nhttps://github.com/xamarin/xamarin-android/blob/master/tools/scripts/xabuild#L105\r\n\r\n`xabuild`, the shell script, has some logic to set MSBuild properties\r\nfor `AndroidSdkDirectory` and `AndroidNdkDirectory`. The issue here is\r\non Windows, `xabuild.exe` is not invoked from this shell script. So we\r\nneed to replicate the logic in C# in `xabuild.exe`, but not break what\r\nwas fixed in #977.\r\n\r\nChanges:\r\n- check for `ANDROID_SDK_PATH` or `ANDROID_NDK_PATH` environment\r\nvariables\r\n- Run `Paths.targets` via a new MSBuild process, the same way as\r\n`xabuild`, the script\r\n- Set the `AndroidSdkDirectory` and `AndroidNdkDirectory` values in the\r\nconfig file if they are not blank\r\n- `AndroidSdkDirectory` and `AndroidNdkDirectory` can still be\r\noverridden by a user, because incoming values supersede what is found\r\nin the config file"},{"Id":"6774941608","Type":"PullRequestEvent","CreatedAt":"2017-10-27T12:32:04","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/987","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tests] Fix BuildAppCheckDebugSymbols for monodroid\" (#987) at xamarin/xamarin-android","RelatedBody":"The BuildAppCheckDebugSymbols test does not take into account\r\nthat when building in debug mode on monodroid the assemblies\r\nare not embedded in the apk. As a result when trying to get\r\n`Library1.pdb` from the apk we get a null back. This causes\r\na Null Ref exception when we try to get a length.\r\n\r\nThe fix is to look in the `assets` directory if we can't get\r\nthe file from the zip. This will allow the test to work in\r\nboth xamarin-android and monodroid."},{"Id":"6772643857","Type":"PullRequestEvent","CreatedAt":"2017-10-27T00:12:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/979","RelatedDescription":"Merged pull request \"[build] Add `make prepare-image-dependencies` target.\" (#979) at xamarin/xamarin-android","RelatedBody":"We are investigating building Xamarin.Android atop\r\nVisual Studio Team System (VSTS) in addition to our current Jenkins\r\nsetup, and one of the issues we're running into is \"bootstrapping\":\r\nVSTS is configured to create a \"fresh\" VM for each build.\r\n\r\n**Pro**: It should allow builds to be more reliable, as previous build\r\nartifacts won't be present, and thus won't cause/hide errors.\r\n\r\n**Con**: *Previous build artifacts are not present*. Previous build\r\nartifacts such as *downloading and extracting* the Android NDK & SDK,\r\nusing `brew` to install dependencies, building MXE...\r\n\r\nEnsuring that the dependencies are installed through `make prepare`\r\ncan be quite time consuming. What we want is a way to ensure that the\r\n\"build image\" -- *what's already installed* when the VM boots --\r\ncontains all of our desired dependencies.\r\n\r\nFurthermore, we *don't* want to have the responsible parties checkout\r\nand build xamarin-android in order to determine what the dependencies\r\nshould be.\r\n\r\nAttempt to square this circle by adding a new\r\n`make prepare-image-dependencies` target, which processes\r\n`@(AndroidSdkItem)`, `@(AndroidNdkItem)`, `@(AntItem)`, and\r\n`@(RequiredProgram)` to create a `prepare-image-dependencies.sh`\r\nscript which will download and install the required dependencies.\r\n\r\nThe generated shell script does *not* take the state of the machine\r\nrunning `make prepare-image-dependencies` into consideration. This\r\nallows the target to be executed on one machine, and the output run\r\non another.\r\n\r\n        $ make prepare-image-dependencies\r\n        # creates `prepare-image-dependencies.sh`\r\n\r\n*Note*: `make prepare-image-dependencies` does not currently deal\r\nwith MXE.  (Building MXE on the VSTS VM is *very* time consuming, so\r\nit's something we need to take care of. It is not *yet* dealt with.)\r\n"},{"Id":"6772478044","Type":"PullRequestEvent","CreatedAt":"2017-10-26T23:09:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/986","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Move DesignTime Cache files to designtime folder.\" (#986) at xamarin/xamarin-android","RelatedBody":"The DesignTime build is generally run before any nuget packages\r\nhave been restore. As a result we end up with empty cache files.\r\nBecause those files exist and are considered uptodate, when the\r\nmain build finally happens they are not re-generated.\r\nThis causes errors like\r\n\r\n\terror: Error: No resource found that matches the given name: attr 'colorAccent'.\r\n\r\non a new default template.\r\n\r\nSo the DesignTime build should have its own set of cache files which\r\ndo not conflict with the main build. This way when the main build\r\nruns the cache files will not be in place."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6778244565","Type":"PullRequestEvent","CreatedAt":"2017-10-28T08:01:17","Actor":"workgroupengineering","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1093","RelatedDescription":"Closed pull request \"[Internal] Fixed test StringFormatNonStringType failed, when current culture is not en-US or tr-TR.\" (#1093) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUsing InvariantCulture instead of CurrentCulture.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nnone\r\n\r\n### Behavioral Changes ###\r\nnone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6777764555","Type":"PullRequestEvent","CreatedAt":"2017-10-28T00:48:35","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1239","RelatedDescription":"Opened pull request \"Allow RecycleElement with null Template\" (#1239) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nExpected RecycleElement with null DataTemplateSelector to not throw exception on Android. Actually throws an exception. Simply, supply a dummy prototypical cell that does nothing (context insensitive).\r\n\r\n### Bugs Fixed ###\r\n\r\nFound while investigating 60382 (which turned out to be by design)\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60382\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6777752621","Type":"PullRequestEvent","CreatedAt":"2017-10-28T00:40:36","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1212","RelatedDescription":"Merged pull request \"[Android] Clear MainPage renderer if exists after reload (non-appCompat)\" (#1212) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSee also: https://github.com/xamarin/Xamarin.Forms/pull/1200\r\n\r\nCustomer expected MainPage could be re-initialized after reloading app. Actually, existence of a renderer for the MainPage prevented MainPage from being attached to the new activity. Preventing the MainPage from being attached is correct as the old MainPage renderer existed in a different context. \r\n\r\nThe fix is to clear the MainPage renderer so a new renderer is created in the correct context. This fix will not reuse the existing renderer so the customer will _not_ see the same performance benefit as was achieved previously. However that performance gain was likely hiding more insidious bugs stemming from using views from a deleted context. \r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=59882\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nAllow MainPage to be re-initialized after re-launch.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6777238060","Type":"PullRequestEvent","CreatedAt":"2017-10-27T21:13:30","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1236","RelatedDescription":"Merged pull request \"[UITests] Make test work on iOS11\" (#1236) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf all goes good make iOS11 test lane green\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6776689231","Type":"PullRequestEvent","CreatedAt":"2017-10-27T18:52:09","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1238","RelatedDescription":"Opened pull request \"[iOS] Fixes for iOS11 \" (#1238) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixes and new features for iOS11 support.\r\n\r\nPlatform specifics for safe area, large titles\r\n\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=60054\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=59927\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n -\r\n\r\n### Behavioral Changes ###\r\n\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6777527333","Type":"PullRequestEvent","CreatedAt":"2017-10-27T22:50:01","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2935","RelatedDescription":"Opened pull request \"[Xcode9] Fix HealthKit xtro output\" (#2935) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6777340516","Type":"PullRequestEvent","CreatedAt":"2017-10-27T21:44:23","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2923","RelatedDescription":"Merged pull request \"Add XM Modern to BCL test suite\" (#2923) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6777216250","Type":"PullRequestEvent","CreatedAt":"2017-10-27T21:07:14","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2933","RelatedDescription":"Closed pull request \"Revert \"bumped max Mono version to 5.8.99\"\" (#2933) at xamarin/xamarin-macios","RelatedBody":"Reverts xamarin/xamarin-macios#2928\r\n\r\nBump includes a Cecil update with a breaking change (and we can't be sure which version is installed between MIN and MAX)"},{"Id":"6777211931","Type":"PullRequestEvent","CreatedAt":"2017-10-27T21:06:03","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2934","RelatedDescription":"Merged pull request \"[monotouch-test] Fix 2 issues when running on iOS 9.\" (#2934) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6776893269","Type":"PullRequestEvent","CreatedAt":"2017-10-27T19:43:24","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2932","RelatedDescription":"Merged pull request \"[NSObject] Embrace Unified in exception messages.\" (#2932) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6776879435","Type":"PullRequestEvent","CreatedAt":"2017-10-27T19:39:46","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2931","RelatedDescription":"Merged pull request \"[generator] Improve the BI1001 error message to include the actual parameter type\" (#2931) at xamarin/xamarin-macios","RelatedBody":"E.g. from\n\n\terror BI1001: bgen: Do not know how to make a trampoline for IKVM.Reflection.Reader.ParameterInfoImpl\n\nto\n\n\terror BI1001: bgen: Do not know how to make a trampoline for Foundation.NSError&"},{"Id":"6776551118","Type":"PullRequestEvent","CreatedAt":"2017-10-27T18:18:47","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2934","RelatedDescription":"Opened pull request \"[monotouch-test] Fix 2 issues when running on iOS 9.\" (#2934) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6776412017","Type":"PullRequestEvent","CreatedAt":"2017-10-27T17:45:30","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2933","RelatedDescription":"Opened pull request \"Revert \"bumped max Mono version to 5.8.99\"\" (#2933) at xamarin/xamarin-macios","RelatedBody":"Reverts xamarin/xamarin-macios#2928\r\n\r\nBump includes a Cecil update with a breaking change (and we can't be sure which version is installed between MIN and MAX)"},{"Id":"6776284685","Type":"PullRequestEvent","CreatedAt":"2017-10-27T17:14:59","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2926","RelatedDescription":"Merged pull request \"[tests][mtouch] Add test case for bug #59617.\" (#2926) at xamarin/xamarin-macios","RelatedBody":"This amounts to running the MT4162 test with the linker enabled.\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=59617"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"924464051752787968","CreatedAt":"2017-10-29T02:33:00+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @davidortinau shares his top 5 ways to boost your #XamarinForms start up time (+ a couple bonus tips!): https://t.co/OqbHBRux5G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":11,"RawContent":null},{"Id":"923943119493713920","CreatedAt":"2017-10-27T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to add local notifications to a native #Xamarin.Mac app using our Pomodoro sample project: https://t.co/fmHnM8m18Z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"923637228332552193","CreatedAt":"2017-10-26T19:47:30+00:00","UserScreenname":"xamarinhq","Text":"Add large titles to your iOS 11 apps in this post from @conceptdev: https://t.co/RDyk6GDVUU https://t.co/ZOsrbAC1sc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"923566386881974272","CreatedAt":"2017-10-26T15:06:00+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's Charles Petzold shows you how to get started with #SkiaSharp for #XamarinForms: https://t.co/mlySNk9fev","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":17,"RawContent":null},{"Id":"923279245887135745","CreatedAt":"2017-10-25T20:05:00+00:00","UserScreenname":"xamarinhq","Text":"Introducing the Android SDK Manager: https://t.co/U1OxP9CeeJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null},{"Id":"923217836167847937","CreatedAt":"2017-10-25T16:00:59+00:00","UserScreenname":"xamarinhq","Text":"Have you saved the date yet? Visit https://t.co/swPXPdFtSt and add a calendar reminder to join us live online Novem… https://t.co/uLp7HDcxD4","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":28,"FavoriteCount":14,"RawContent":null},{"Id":"923216833938935809","CreatedAt":"2017-10-25T15:57:00+00:00","UserScreenname":"xamarinhq","Text":"Try out the latest new features for #Xamarin in #VS2017 without affecting your production environment: https://t.co/6QFngIYygP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":19,"RawContent":null},{"Id":"923005188637646853","CreatedAt":"2017-10-25T01:56:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss our 11/7 webinar on building better games with #Unity3D and Microsoft #Azure! Register now to join us: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"922915335824478210","CreatedAt":"2017-10-24T19:58:57+00:00","UserScreenname":"xamarinhq","Text":"Check out 3 BIG new features to explore in the #XamarinForms 2.5.0 Pre-Release: https://t.co/Du28Gz40ru","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":75,"RawContent":null},{"Id":"922491050886868992","CreatedAt":"2017-10-23T15:53:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":29,"RawContent":null},{"Id":"922284943169990659","CreatedAt":"2017-10-23T02:14:00+00:00","UserScreenname":"xamarinhq","Text":"Add #pushnotifications to your Android apps with #Xamarin, #Firebase Cloud Messaging, and #Azure Notification Hubs: https://t.co/9uyWpi2qlp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":38,"RawContent":null},{"Id":"921881787009249280","CreatedAt":"2017-10-21T23:32:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":31,"RawContent":null},{"Id":"921466915117260801","CreatedAt":"2017-10-20T20:03:27+00:00","UserScreenname":"xamarinhq","Text":"Get five-star app quality every time with testing from #VSMobileCenter: https://t.co/sUR6Ctm1xk https://t.co/gGQOYtNmkC","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":14,"RawContent":null},{"Id":"921409932993482752","CreatedAt":"2017-10-20T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/8uG0wblORA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":19,"RawContent":null},{"Id":"921089184667983872","CreatedAt":"2017-10-19T19:02:29+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar on building better games with #Unity3D and Microsoft #Azure: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":35,"RawContent":null},{"Id":"921044016610922496","CreatedAt":"2017-10-19T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"920749716610207745","CreatedAt":"2017-10-18T20:33:33+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/jFJho4InOr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":42,"RawContent":null},{"Id":"920684397212438529","CreatedAt":"2017-10-18T16:14:00+00:00","UserScreenname":"xamarinhq","Text":"Request reviews with iOS 10.3’s SKStoreReviewController: https://t.co/HgugUTrN81","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":5,"RawContent":null},{"Id":"920320046701989894","CreatedAt":"2017-10-17T16:06:12+00:00","UserScreenname":"xamarinhq","Text":"Try out updates to Xamarin Live, a new Mac connection workflow, and more in the Visual Studio 2017 15.5 Preview:… https://t.co/iB8bIZkhW1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":85,"FavoriteCount":41,"RawContent":null}]}},"RunOn":"2017-10-29T05:30:39.5226171Z","RunDurationInMilliseconds":3844}