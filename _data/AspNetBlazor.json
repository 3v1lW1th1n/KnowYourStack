{"Data":{"GitHubIssues":{"Issues":[{"Id":"330071351","IsPullRequest":false,"CreatedAt":"2018-06-06T23:53:04","Actor":"xxyuze","Number":"940","RawContent":null,"Title":"Can initialize the program after a certain JS initialization is completed?","State":"open","Body":"Can  initialize the program after a certain JS initialization is completed?","Url":"https://github.com/aspnet/Blazor/issues/940","RelatedDescription":"Open issue \"Can initialize the program after a certain JS initialization is completed?\" (#940)"},{"Id":"329893215","IsPullRequest":true,"CreatedAt":"2018-06-06T23:35:43","Actor":"mattferderer","Number":"938","RawContent":null,"Title":"Update Steve Sanderson's demo to latest NDC talk","State":"closed","Body":"Steve recently did another NDC talk which is much more up to date. Suggesting that one be linked to instead of the older talk.","Url":"https://github.com/aspnet/Blazor/pull/938","RelatedDescription":"Closed or merged PR \"Update Steve Sanderson's demo to latest NDC talk\" (#938)"},{"Id":"329906691","IsPullRequest":false,"CreatedAt":"2018-06-06T19:17:44","Actor":"abhishekgoenka","Number":"939","RawContent":null,"Title":"Lazy assembly download","State":"closed","Body":"**Current behavior** - All the .NET assemblies are downloaded asynchronously during the first page load\r\n**New feature requirement** - It would be nice if only required assemblies get downloaded during the first-page load. Remaining assemblies should get download as a user navigates to other pages. \r\n","Url":"https://github.com/aspnet/Blazor/issues/939","RelatedDescription":"Closed issue \"Lazy assembly download\" (#939)"},{"Id":"329841423","IsPullRequest":true,"CreatedAt":"2018-06-06T12:44:55","Actor":"SteveSandersonMS","Number":"937","RawContent":null,"Title":"Don't preventDefault on events. Fixes #803","State":"closed","Body":"It seems that we started calling `event.preventDefault` on all .NET-handled events in this commit: https://github.com/aspnet/Blazor/commit/36f5c5898820899831447b3dbde5e8658cc0baaa\r\n\r\nIt's not explicitly stated why I added that line in that commit, but my guess now is that it was needed because we didn't yet have the \"internal link click\" handling logic that we now do (which does call `preventDefault` when it recognizes clicks on internal links).\r\n\r\nSo it looks like we can fix #803 and all related issues trivially just be removing the `event.preventDefault` call. It doesn't appear to affect anything else negatively, and conceptually should be the right thing to do because saying you want to handle an event is not the same as saying you want to prevent its default actions.","Url":"https://github.com/aspnet/Blazor/pull/937","RelatedDescription":"Closed or merged PR \"Don't preventDefault on events. Fixes #803\" (#937)"},{"Id":"329808988","IsPullRequest":true,"CreatedAt":"2018-06-06T12:44:15","Actor":"SteveSandersonMS","Number":"936","RawContent":null,"Title":"Stevesa/pr 868 updated","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/936","RelatedDescription":"Closed or merged PR \"Stevesa/pr 868 updated\" (#936)"},{"Id":"329803131","IsPullRequest":true,"CreatedAt":"2018-06-06T10:49:56","Actor":"SteveSandersonMS","Number":"935","RawContent":null,"Title":"Add more struct readonlyness hints","State":"closed","Body":"These suggestions come from ErrorProne.NET, a set of Roslyn analyzers that warn about suboptimal `struct` usage.","Url":"https://github.com/aspnet/Blazor/pull/935","RelatedDescription":"Closed or merged PR \"Add more struct readonlyness hints\" (#935)"},{"Id":"329547681","IsPullRequest":true,"CreatedAt":"2018-06-06T10:12:19","Actor":"toddlang","Number":"931","RawContent":null,"Title":"Refactoring SimpleJson.EatWhiteSpace","State":"closed","Body":"-Replacing arbitrary length IndexOf call with unrolled switch statement\r\n-Reduces deserialization runtime on ~310KB test data from 13s to 5s.","Url":"https://github.com/aspnet/Blazor/pull/931","RelatedDescription":"Closed or merged PR \"Refactoring SimpleJson.EatWhiteSpace\" (#931)"},{"Id":"329745717","IsPullRequest":false,"CreatedAt":"2018-06-06T07:33:40","Actor":"furoraest","Number":"934","RawContent":null,"Title":"passing arguments to onclick in svg","State":"open","Body":"when doing: button onclick=@(() => MyFunction(my.Variable)) it works as expected\r\nwhen binding svg onclick without arguments, eg: onclick=@TestFunction, also works as expected\r\nwhen trying to bind onclick with variables within svg, errors begin:\r\n\r\nUncaught Error: Microsoft.AspNetCore.Blazor.Browser.Interop.JavaScriptException: Cannot set attribute on non-element child\r\nError: Cannot set attribute on non-element child\r\n    at BrowserRenderer.applyEdits (BrowserRenderer.ts:76)\r\n    at BrowserRenderer.updateComponent (BrowserRenderer.ts:33)\r\n    at renderBatch (Renderer.ts:45)\r\n    at Array.<anonymous> (mono.js:1)\r\n    at _emscripten_asm_const_iiiiii (mono.js:1)\r\n    at wasm-function[2679]:25\r\n    at wasm-function[3541]:44\r\n    at wasm-function[3548]:408\r\n    at wasm-function[3550]:224\r\n    at wasm-function[3766]:189\r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,T2,TRes] (System.String identifier, T0 arg0, T1 arg1, T2 arg2) <0x1c21a40 + 0x00054> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,TRes] (System.String identifier, T0 arg0, T1 arg1) <0x1c21958 + 0x00022> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.UpdateDisplay (Microsoft.AspNetCore.Blazor.Rendering.RenderBatch batch) <0x1c21870 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.ProcessRenderQueue () <0x1a497b0 + 0x000a4> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f67f70 + 0x00074> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f67e08 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (System.String eventDescriptorJson, System.String eventArgsJson) <0x1f5f478 + 0x0005a> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n    at BrowserRenderer.applyEdits (BrowserRenderer.ts:76)\r\n    at BrowserRenderer.updateComponent (BrowserRenderer.ts:33)\r\n    at renderBatch (Renderer.ts:45)\r\n    at Array.<anonymous> (mono.js:1)\r\n    at _emscripten_asm_const_iiiiii (mono.js:1)\r\n    at wasm-function[2679]:25\r\n    at wasm-function[3541]:44\r\n    at wasm-function[3548]:408\r\n    at wasm-function[3550]:224\r\n    at wasm-function[3766]:189\r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,T2,TRes] (System.String identifier, T0 arg0, T1 arg1, T2 arg2) <0x1c21a40 + 0x00054> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,TRes] (System.String identifier, T0 arg0, T1 arg1) <0x1c21958 + 0x00022> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.UpdateDisplay (Microsoft.AspNetCore.Blazor.Rendering.RenderBatch batch) <0x1c21870 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.ProcessRenderQueue () <0x1a497b0 + 0x000a4> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f67f70 + 0x00074> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f67e08 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (System.String eventDescriptorJson, System.String eventArgsJson) <0x1f5f478 + 0x0005a> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n    at Object.callMethod (MonoPlatform.ts:70)\r\n    at raiseEvent (BrowserRenderer.ts:327)\r\n    at EventDelegator.onEvent (BrowserRenderer.ts:19)\r\n    at EventDelegator.onGlobalEvent (EventDelegator.ts:83)","Url":"https://github.com/aspnet/Blazor/issues/934","RelatedDescription":"Open issue \"passing arguments to onclick in svg\" (#934)"},{"Id":"328778133","IsPullRequest":true,"CreatedAt":"2018-06-06T03:03:05","Actor":"danroth27","Number":"918","RawContent":null,"Title":"Fix base type of UIErrorEventArgs","State":"closed","Body":"I don't believe `UIErrorEventArgs` should derive from `UIProgressEventArgs`. Switching base type to `UIEventArgs` instead.","Url":"https://github.com/aspnet/Blazor/pull/918","RelatedDescription":"Closed or merged PR \"Fix base type of UIErrorEventArgs\" (#918)"},{"Id":"329642137","IsPullRequest":true,"CreatedAt":"2018-06-06T02:58:51","Actor":"rynowak","Number":"933","RawContent":null,"Title":"Add type checking for component parameters","State":"closed","Body":"Introduces a new primitive used by the compiler for type checking. Type\r\nchecking applies to component parameters when setting the value directly\r\nand when using bind. This is nice because it also adds error checking\r\nfor bind.","Url":"https://github.com/aspnet/Blazor/pull/933","RelatedDescription":"Closed or merged PR \"Add type checking for component parameters\" (#933)"},{"Id":"329632715","IsPullRequest":false,"CreatedAt":"2018-06-05T21:31:41","Actor":"galvesribeiro","Number":"932","RawContent":null,"Title":"Can we drop Sellenium?","State":"open","Body":"Hello all, \r\n\r\nAs pointed to @danroth27 on Gitter, I think Sellenium is too much of a friction to get set up and working and that blocks people to contribute more as they have to install Java and its friends and not to mention it has to be kept running. \r\n\r\nSo, my suggestion was to use a modern and simpler framework for E2E tests and I have two to suggest:\r\n\r\n1. https://www.cypress.io/ -> would be a good alternative that is simple to install and easy to code the tests\r\n2. http://phantomjs.org/ -> could be used as the core headless browser so any widely used test framework like Jasmine, QUnit, Mocha, Capybara, WebDriver, etc. could be used.\r\n\r\nI'm all for the first option as it makes contributions easier.\r\n\r\nThat is for E2E tests. Unit tests would still be ran in C#.\r\n\r\nWhat the others on the team think? Is a PR acceptable with that?","Url":"https://github.com/aspnet/Blazor/issues/932","RelatedDescription":"Open issue \"Can we drop Sellenium?\" (#932)"},{"Id":"329260392","IsPullRequest":true,"CreatedAt":"2018-06-05T16:40:01","Actor":"javiercn","Number":"928","RawContent":null,"Title":"Update README.md","State":"closed","Body":"Indicate where and what version of Java to get.","Url":"https://github.com/aspnet/Blazor/pull/928","RelatedDescription":"Closed or merged PR \"Update README.md\" (#928)"},{"Id":"329520574","IsPullRequest":false,"CreatedAt":"2018-06-05T15:54:41","Actor":"rynowak","Number":"930","RawContent":null,"Title":"Blazor doesn't update tag helpers on 15.8-preview2","State":"open","Body":"We made some changes to how Razor + WTE interact around tag helpers during the 15.8 timeframe. \r\n\r\nThose changes shipped in preview2, and break the old hack we've been using to update tag helpers in VS. We'll need to make some changes to make this work the new way.","Url":"https://github.com/aspnet/Blazor/issues/930","RelatedDescription":"Open issue \"Blazor doesn't update tag helpers on 15.8-preview2\" (#930)"},{"Id":"329186102","IsPullRequest":true,"CreatedAt":"2018-06-05T15:42:32","Actor":"Suchiman","Number":"926","RawContent":null,"Title":"Add support for binding long / float / double / decimal","State":"closed","Body":"Based on #630 this adds support for binding float, double and decimal as well as long.\r\nChanges were re-done on dev to solve merge conflicts and related testcases added (hope this is in time for 0.4 @SteveSandersonMS 😀)","Url":"https://github.com/aspnet/Blazor/pull/926","RelatedDescription":"Closed or merged PR \"Add support for binding long / float / double / decimal\" (#926)"},{"Id":"329508019","IsPullRequest":false,"CreatedAt":"2018-06-05T15:35:01","Actor":"abhishekgoenka","Number":"929","RawContent":null,"Title":"fetch request removes header information","State":"closed","Body":"I am passing valid header to fetch api\r\n![image](https://user-images.githubusercontent.com/14522198/40985765-6bf49e7e-6902-11e8-8c0a-5eafa8317501.png)\r\n\r\nfetch api code(Http.ts)\r\n![image](https://user-images.githubusercontent.com/14522198/40985815-8103ad46-6902-11e8-8a87-58d0741875c4.png)\r\n\r\nBut request removes my headers. \r\n![image](https://user-images.githubusercontent.com/14522198/40985885-9ab93652-6902-11e8-96c1-6cc7f0717041.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/929","RelatedDescription":"Closed issue \"fetch request removes header information\" (#929)"},{"Id":"329078760","IsPullRequest":false,"CreatedAt":"2018-06-05T15:33:54","Actor":"abhishekgoenka","Number":"924","RawContent":null,"Title":"Fetch request hangs","State":"closed","Body":"Interestingly, fetch request hangs. This happens during HttpClient.GetAsync(...). After debugging, I found that call reaches successfully till HTTP.ts but it hangs in sendAsync method. _See below screenshot_ \r\n\r\n![image](https://user-images.githubusercontent.com/14522198/40922902-10e552e8-6831-11e8-850e-42d47ba82737.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/924","RelatedDescription":"Closed issue \"Fetch request hangs\" (#924)"},{"Id":"329207800","IsPullRequest":false,"CreatedAt":"2018-06-04T20:38:52","Actor":"danroth27","Number":"927","RawContent":null,"Title":"Config","State":"open","Body":"Provide a model for app configuration, like specifying the URL for an API endpoint. \r\n\r\nWould we use Microsoft.Extensions.Configuration for this? \r\nWhere config source would we use? Local storage? Embedded resources?\r\nHow would change notification work?\r\n","Url":"https://github.com/aspnet/Blazor/issues/927","RelatedDescription":"Open issue \"Config\" (#927)"},{"Id":"329114884","IsPullRequest":false,"CreatedAt":"2018-06-04T16:37:56","Actor":"enetstudio","Number":"925","RawContent":null,"Title":"Is it currently possible to use Rx.NET in Blazor?","State":"closed","Body":"\r\nI'm trying to implement the Angular tutorial Tour of Heroes (HTTP) section in our dear Blazor. Here is the Angular sample: https://stackblitz.com/angular/xkyalvboyrj\r\n\r\nAs you can see, there is an input textbox to enter a search term. The search is performed whenever the user changes the content of the text box. To make the search efficient, rxjs is used. Now I want to emulate this functionality in Blazor, and I wondered if this can be done employing Rx.NET...\r\n\r\nGod Blazor you!","Url":"https://github.com/aspnet/Blazor/issues/925","RelatedDescription":"Closed issue \"Is it currently possible to use Rx.NET in Blazor?\" (#925)"},{"Id":"328621784","IsPullRequest":false,"CreatedAt":"2018-06-04T10:06:05","Actor":"InnovationGB","Number":"914","RawContent":null,"Title":"Javascript interop/not linking as I would expect","State":"closed","Body":"I understand that I may be doing this wrong, but with the knowledge I have this is confusing and I am hoping someone can clear this up for me, as I am trying to understand how I can link javascript files that are already functioning with my app components. \r\nhttps://github.com/InnovationGB/BlazorRainEffect\r\nThis isn't anything I made but rather a project from 2015 utilizing webgl in order to give a rainy effect. I moved all my resources into my wwwroot folder, (index.html,css/images/js) and within my index.html i remove blazor boot script and <app></app>. This works just as I would expect normal .js and html would work.\r\n\r\nBut if I take the body contents from index.html, and slap it into my mainlayout.cshtml, when I load my index.cshtml component/page I get a console error\r\n\r\n```\r\nUncaught (in promise) TypeError: Cannot set property 'width' of null\r\nat s (index.min.js:7)\r\n```\r\nI tried reading into https://learn-blazor.com/architecture/interop/ but there are A LOT of functions that I would have to recreate functions for. Is what I am trying to do impossible/or am I missing a very key fundamental aspect to this situation? Sorry for the nooby question.\r\nBlazor just really interests me and is a lot less confusing than MVC theres just kind of a lack of areas for me to go in order to receive help \r\n(Stack over flow tells me that my situation is not related to blazor no matter what the case)\r\n\r\nThanks, \r\np.s. Im kind of new to github so Im not sure if this is an appropriate issue to even post here.","Url":"https://github.com/aspnet/Blazor/issues/914","RelatedDescription":"Closed issue \"Javascript interop/not linking as I would expect\" (#914)"},{"Id":"328734076","IsPullRequest":false,"CreatedAt":"2018-06-04T10:02:21","Actor":"james-world","Number":"916","RawContent":null,"Title":"With .NET Core 2.1 SDK RTM, Default project template fails with HTTP Error 502.5 - Process Failure","State":"closed","Body":"The template for the Server project currently references the 2.1.0-preview2-final of Microsoft.AspNetCore.App, which does not restore since the RTM.\r\n\r\nAs a workaround until the project template is updated, edit the .csproj file, remove the `-preview2-final` suffix so that this line:\r\n\r\n     <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.0-preview2-final\" />\r\n\r\nreads\r\n\r\n     <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.0\" />\r\n\r\n*and then rebuild the solution*.","Url":"https://github.com/aspnet/Blazor/issues/916","RelatedDescription":"Closed issue \"With .NET Core 2.1 SDK RTM, Default project template fails with HTTP Error 502.5 - Process Failure\" (#916)"},{"Id":"328769598","IsPullRequest":false,"CreatedAt":"2018-06-04T09:53:31","Actor":"PaulOst","Number":"917","RawContent":null,"Title":"Blazor on Electron","State":"closed","Body":"Are there any thoughts or interest in having the ability to write **Electron** framework apps using Blazor?","Url":"https://github.com/aspnet/Blazor/issues/917","RelatedDescription":"Closed issue \"Blazor on Electron\" (#917)"},{"Id":"328795291","IsPullRequest":false,"CreatedAt":"2018-06-04T09:52:45","Actor":"CosDevelopment","Number":"920","RawContent":null,"Title":"WebClient/webRequest classes","State":"closed","Body":"Hi, I have an existing dll that contains a class whose functions do WebRequest.Create(string url), and WebClient.Encoding. I created an instance of the class with Blazor and it locks up, and doesnt even return the normal styling or default side panel. Any help would be appreciated. The dll contains a private class whose code im not comfortable sharing all of. here is the main functions im using tho.\r\n```C#\r\n        public static T Deserialization<T>(string input) {\r\n            using (var web = new WebClient()) {\r\n                web.Encoding = System.Text.Encoding.UTF8;\r\n                var jsonString = CallServer(input);\r\n                return JsonConvert.DeserializeObject<T>(jsonString);\r\n            }\r\n        }\r\n```\r\nand\r\n````C#\r\n  private static string CallServer(in string apicall) {\r\n            var request = WebRequest.Create($\"{BaseURL}/{apicall}\"); // Makes the Request to the server\r\n            var response = request.GetResponse(); // Gets the server's response\r\n            var stream = response.GetResponseStream();\r\n            var reader = new StreamReader(stream);\r\n            var responseFromServer = reader.ReadToEnd();\r\n            reader.Close();\r\n            response.Close();\r\n\r\n            return responseFromServer;\r\n        }\r\n``` ","Url":"https://github.com/aspnet/Blazor/issues/920","RelatedDescription":"Closed issue \"WebClient/webRequest classes\" (#920)"},{"Id":"328878598","IsPullRequest":false,"CreatedAt":"2018-06-04T09:50:10","Actor":"vertonghenb","Number":"922","RawContent":null,"Title":"Codebehind - BL9993 : Component parameters should not be public.","State":"closed","Body":"Just wondering if it's a flaw in the analyzer or it's on purpose. While following the docs to get a \r\n[code behind experience](https://blazor.net/docs/components/index.html#base-class-inheritance-for-a-code-behind-experience). The analyzer is throwing the warning to make the parameters of the component Private, however if we want to use the parameters in the .cshtml they have to be public. \r\n\r\n**MyButton.cshtml**\r\n```\r\n@inherits MyButton\r\n<button>\r\n    @Text\r\n</button>\r\n```\r\n**MyButton.cs**\r\n```\r\n    public class MyButton : BlazorComponent\r\n    {\r\n        [Parameter] public string Text { get; set; }\r\n    }\r\n```\r\nThen again, which road are we heading towards, more Code Behind exp. or rather mixing both via Functions, which is preferred? \r\n\r\nThx!","Url":"https://github.com/aspnet/Blazor/issues/922","RelatedDescription":"Closed issue \"Codebehind - BL9993 : Component parameters should not be public.\" (#922)"},{"Id":"328888449","IsPullRequest":false,"CreatedAt":"2018-06-04T09:49:18","Actor":"alexanderjwoods","Number":"923","RawContent":null,"Title":"Passing arguments to onclick","State":"closed","Body":"Not sure if this is doable in 0.3.0, but I want to pass arguments to my onclick method like so:\r\n\r\nbutton onclick=@MyMethod(MyParam)\r\n\r\nDoing so results in a compile error of \"CS 1503 cannot convert from 'void' to 'string'\"","Url":"https://github.com/aspnet/Blazor/issues/923","RelatedDescription":"Closed issue \"Passing arguments to onclick\" (#923)"},{"Id":"328790131","IsPullRequest":false,"CreatedAt":"2018-06-04T04:06:48","Actor":"vertonghenb","Number":"919","RawContent":null,"Title":"Setting a component as parameter","State":"closed","Body":"Let's say you keep certain state of the application in AppState (e.g. IsRightMenuOpen , UserLoggedIn,..) But what I would like to see if it's possible to set the content of a component based on a parameter in the AppState. So in the MainContent there is a button that triggers the RightMenu to open and set it's Content (a BlazorComponent)\r\n\r\n```\r\nAppState.cs\r\n    public class AppState : IAppState\r\n    {\r\n        public bool IsRightMenuOpen { get; set; }\r\n        public BlazorComponent ContentOfTheRightMenu{ get; set; }\r\n    }\r\n```\r\n```\r\nMainContent.cshtml\r\n@inject IAppState appState\r\n<div>\r\n    <button onclick=\"@ToggleRightMenu\"> Open Right Menu With Content</button>\r\n</div>\r\n\r\n@functions{\r\n    void ToggleRightMenu()\r\n    {\r\n        appState.RightContent = //MyComponentName <= How can we instantiate this?\r\n        appState.ToggleRightMenu();\r\n    }\r\n}\r\n```\r\n\r\nRightMenu.cshtml\r\n```\r\n@inject IAppState appState\r\n<div>\r\n@appState.ContentOfTheRightMenu\r\n</div>\r\n```\r\n\r\nWhere I fail to succeed seems to be the following line:\r\n`        appState.RightContent = MyComponentName\r\n`\r\nHow can we instantiate a component like this?\r\n\r\nAn alternative would be to create an enum of each components you want to render and create a switch statement in the RightMenu.cshtml but I doubt that this is the way it should work. Please note that this issue is not about tracking changes or triggering a StateHasChanged on the right component, it's simply setting the component to make it possible to render later.\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/919","RelatedDescription":"Closed issue \"Setting a component as parameter\" (#919)"},{"Id":"328712139","IsPullRequest":false,"CreatedAt":"2018-06-03T23:30:35","Actor":"alexanderjwoods","Number":"915","RawContent":null,"Title":"Default project throws \"CS0234 - The type or namespace name 'Mvc' does not exist in the namespace 'Microsoft.AspNetCore'\"","State":"closed","Body":"Apologize if this is the wrong spot, but when created a blank Blazer app using VS 15.7.3 I get 110 errors of CS0234.  I can't find any references to MVC, and have not made any code changes, but the error appears to be on any function call, i.e., onclick=@ToggleNavMenu.","Url":"https://github.com/aspnet/Blazor/issues/915","RelatedDescription":"Closed issue \"Default project throws \"CS0234 - The type or namespace name 'Mvc' does not exist in the namespace 'Microsoft.AspNetCore'\"\" (#915)"},{"Id":"328800586","IsPullRequest":false,"CreatedAt":"2018-06-03T05:22:14","Actor":"danroth27","Number":"921","RawContent":null,"Title":"Exception in VS when renaming a Blazor component in a Blazor component library","State":"open","Body":"I got an exception in VS when renaming a Blazor component in a Blazor component library.\r\n\r\nhttps://github.com/danroth27/BlazorClipboard/commit/5c5a31716324fdf09f5af0afa35011e4130eedf3\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/40883477-f59ff526-66b2-11e8-8b3f-a456206e6d2c.png)\r\n\r\n[ActivityLog.xml.txt](https://github.com/aspnet/Blazor/files/2065696/ActivityLog.xml.txt)\r\n","Url":"https://github.com/aspnet/Blazor/issues/921","RelatedDescription":"Open issue \"Exception in VS when renaming a Blazor component in a Blazor component library\" (#921)"},{"Id":"328574583","IsPullRequest":true,"CreatedAt":"2018-06-01T16:17:13","Actor":"danroth27","Number":"913","RawContent":null,"Title":"Update survey links for 0.4.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/913","RelatedDescription":"Closed or merged PR \"Update survey links for 0.4.0\" (#913)"},{"Id":"328562329","IsPullRequest":false,"CreatedAt":"2018-06-01T15:37:59","Actor":"Andrew-Hanlon","Number":"912","RawContent":null,"Title":"Layered approach for core technologies","State":"closed","Body":"Hi there,\r\n\r\nThe Blazor initiative is really exciting, and the framework itself (over and above the .net wasm aspect) has lots of potential and nice features that I am excited to use. But, as we are all aware, SPA frameworks and approaches waver in and out of favour (fervor) quite rapidly. And, rightly or wrongly, the current front-end ecosystem thrives in a state of rapid change. Case in point, there are already several alternate '.net wasm' projects sprouting up.\r\n\r\nWith this in mind, would it make sense to push this initiative into more of a layered approach - separating out the core enabling technologies from the front-end SPA parts - to ensure that the core technologies can be developed, shared, and maintained even _if_ differing SPA approaches develop / are desired?\r\n\r\nFor example, I could imagine separating the following into composible pieces:\r\n\r\n- wasm framework / bootstrapper,\r\n- JS / Dom interop APIs,\r\n- virtual dom APIs,\r\n- routing,\r\n- Razor components, etc.\r\n\r\nIn the back-end world (while more could be done) many of the ASP pieces can be composed and used in significantly different scenarios.\r\n\r\nApologies if I have missed something and a similar discussion is already in the pipeline.\r\n\r\nThank you kindly,\r\n","Url":"https://github.com/aspnet/Blazor/issues/912","RelatedDescription":"Closed issue \"Layered approach for core technologies\" (#912)"},{"Id":"328451954","IsPullRequest":false,"CreatedAt":"2018-06-01T13:02:13","Actor":"Worble","Number":"911","RawContent":null,"Title":"Having trouble understanding BL9980: \"Expressions like 'Title' inside of a tag must be part of an attribute.\"","State":"closed","Body":"I'm having a little trouble understanding the error here.\r\n\r\nThe error being raised is specifically to do with:\r\n`<div class=\"divider text-center\" data-content=\"@Title\"></div>`\r\n\r\nThe full error is:\r\n`BL9980 Expressions like 'Title' inside of a tag must be part of an attribute. Previous releases of Blazor supported constructs like '@onclick(...)' or '@bind(...)'.These features have been changed to use attribute syntax. Use 'onclick=\"@...\"' or 'bind=\"...\" respectively.`\r\n\r\nThe full code is:\r\n```\r\n<div class=\"divider text-center\" data-content=\"@Title\"></div>\r\n<div class=\"columns\">\r\n    <div class=\"column form-group\">\r\n        <textarea class=\"form-input\" bind-value-onchange=\"Text\"></textarea>\r\n    </div>\r\n</div>\r\n<br />\r\n<div class=\"columns\">\r\n    <div class=\"column\">\r\n        <button class=\"btn float-right\" disabled=@ButtonDisabled onclick=@OnClick>Submit</button>\r\n    </div>\r\n</div>\r\n<div class=\"column col-12 divider\"></div>\r\n\r\n@functions {\r\n    [Parameter]\r\n    View ViewType { get; set; }\r\n\r\n    bool ButtonDisabled { get; set; } = false;\r\n\r\n    string Title => (ViewType == View.Thread ? \"New Thread\" : \"New Post\");\r\n\r\n    string Text { get; set; }\r\n\r\n    public async void OnClick()\r\n    {\r\n           --Removed for verbosities sake--\r\n    }\r\n}\r\n```\r\n\r\nFrom what I can tell, its saying that the blazor code should be specifically inside a html attribute, not just inside the tag, but it looks like it already is? I've also tried directly putting the logic in the attribute:\r\n`<div class=\"divider text-center\" data-content=\"@(ViewType == View.Thread ? \"New Thread\" : \"New Post\")\"></div>`\r\n as well as several variations with and without quotes. I am on Blazor 0.3.0 and Visual Studio 15.8.0 Preview 2.0.","Url":"https://github.com/aspnet/Blazor/issues/911","RelatedDescription":"Closed issue \"Having trouble understanding BL9980: \"Expressions like 'Title' inside of a tag must be part of an attribute.\"\" (#911)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-06-07T05:30:02.7031461Z","RunDurationInMilliseconds":1238}