{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR for ASP.NET Core 2.0","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core is... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":44,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":104,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6606081554","Type":"IssuesEvent","CreatedAt":"2017-09-18T22:03:26","Actor":"lorenz31","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2202","RelatedDescription":"Opened issue \"ASP.NET CORE Web API: Value are always null when doing HTTP Post requests.\" (#2202) at aspnet/Home","RelatedBody":"I'm experiencing a problem doing post requests via ASP.NET Core Web API. I'm a bit confused of the articles I read/found while Googling.\r\n\r\nSo here's my scenario:\r\n\r\nI'm trying to do a HTTP Post request to an api endpoint with a complex parameter\r\nExample:\r\n[HttpPost]\r\n[Route(\"add\")]\r\npublic async Task<IActionResult> PostStock([FromBody]Stock model)\r\n{\r\n       if (model != null)\r\n       {\r\n               var isStockAdded = await _inventorySvc.AddStockAsync(model);\r\n\r\n                if (isStockAdded)\r\n                    return Ok();\r\n                else\r\n                    return BadRequest();\r\n            }\r\n\r\n            return BadRequest();\r\n        }\r\n}\r\n\r\nMy problem is that every time I make a post request to this endpoint the model value(s) are always null even if there's the [FromBody] parameter attribute.\r\n\r\nIs this a bug in ASP.NET Core 2?"},{"Id":"6604828247","Type":"PullRequestEvent","CreatedAt":"2017-09-18T17:17:01","Actor":"jkotalik","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Home/pull/2197","RelatedDescription":"Merged pull request \"Update contributing information to be more chronological\" (#2197) at aspnet/Home","RelatedBody":"As discussed, I believe that the contributing section should be laid out in chronological order from \"I see a fix I would like to make\" to merging a pull request.\r\n@natemcmaster @Eilon @davidfowl "},{"Id":"6601778984","Type":"IssuesEvent","CreatedAt":"2017-09-18T04:01:18","Actor":"ahdung","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2201","RelatedDescription":"Opened issue \"dotnet xxx.dll --urls not work\" (#2201) at aspnet/Home","RelatedBody":"Env: win2k8r2, VS2017, dotnet core 2.0\r\n![1](https://user-images.githubusercontent.com/12094247/30528805-e84141d8-9c68-11e7-8b11-839c68106bab.png)\r\n"},{"Id":"6601157991","Type":"IssuesEvent","CreatedAt":"2017-09-17T20:55:37","Actor":"dazinator","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2200","RelatedDescription":"Closed issue \"[Question] - Support Asp.net core 1 and asp.net core 2 in single package?\" (#2200) at aspnet/Home","RelatedBody":"Am I correct in thinking it's not currently possible to build a nuget package, that scopes its dependencies to the version of asp.net core being consumed in an application? For example if the nuget package is installed into an asp.net core 1.0 application it carries one set of dependencies, if its being installed into an asp.net core 1.1 application it carries another?\r\n\r\nI know you can target tfm's but this doesn't really equate to asp.net core versions. For example you can have an aspnet core 1.0 application that targets `net46`.\r\n\r\nIf that is correct, is there anything in the pipeline that could help enable this?\r\n\r\nThe scenario is you want to develop a package that supports asp.net core 1.0, 1.1 and 2.0 but you don't want to have to have `Foo.Package.AspNetCore1` `Foo.Package.AspNetCore11` and `Foo.Package.AspNetCore20` because this is pain for both developers and consumers (when consumers upgrade their projects accross asp.net versions they have to locate and consume entirely new packages).\r\n"},{"Id":"6600847440","Type":"IssuesEvent","CreatedAt":"2017-09-17T17:14:12","Actor":"dazinator","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2200","RelatedDescription":"Opened issue \"[Question] - Support Asp.net core 1 and asp.net core 2 in single package?\" (#2200) at aspnet/Home","RelatedBody":"Am I correct in thinking it's not currently possible to build a nuget package, that scopes its dependencies to the version of asp.net core being used in an application? For example if the nuget package is installed into an application using asp.net core 1.0 it carries one set of dependencies, if its being installed into an asp.net core 1.1 application it carries another?\r\n\r\nIf that is correct, is there anything in the pipeline that could help enable this?\r\n\r\nThe scenario is you want to develop a package that supports asp.net core 1.0, 1.1 and 2.0 but you don't want to have to have `Foo.Package.AspNetCore1` Foo.Package.AspNetCore11` and `Foo.Package.AspNetCore20` because this is pain for both developers and consumers (when consumers upgrade their projects accross asp.net versions they have to locate and consume entirely new packages).\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6606791195","Type":"PullRequestEvent","CreatedAt":"2017-09-19T02:38:08","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/909","RelatedDescription":"Opened pull request \"Adding support for multiple callbacks per client side method\" (#909) at aspnet/SignalR","RelatedBody":"...and a possibility to remove callbacks\r\n\r\nFixes: #807"},{"Id":"6606658401","Type":"IssuesEvent","CreatedAt":"2017-09-19T01:43:38","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/908","RelatedDescription":"Closed issue \"Add a simple AspNetCore SignalR client using c# console example\" (#908) at aspnet/SignalR","RelatedBody":"Hi,\r\n\r\nThis is really my first time creating a github issue. I'm trying to create a PoC using SignalR for communicating between two console applications and a hub. I couldn't find an example that used c# console client. Could someone help me with this?"},{"Id":"6606511507","Type":"IssuesEvent","CreatedAt":"2017-09-19T00:40:23","Actor":"wallid","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/908","RelatedDescription":"Opened issue \"Add a simple SignalR Core c# console example\" (#908) at aspnet/SignalR","RelatedBody":"Hi,\r\n\r\nThis is really my first time creating a github issue. I'm trying to create a PoC using SignalR for communicating between two console applications and a hub. I couldn't find an example that used c# console client. Could someone help me with this?"},{"Id":"6606479366","Type":"PullRequestEvent","CreatedAt":"2017-09-19T00:26:03","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/907","RelatedDescription":"Merged pull request \"Removing AspNetCoreVersion for a package reference\" (#907) at aspnet/SignalR","RelatedBody":"I think this occurrence was missed. We are using lineups in the dev branch and should not define versions for package references. \r\n\r\n/cc @natemcmaster "},{"Id":"6606377297","Type":"IssuesEvent","CreatedAt":"2017-09-18T23:44:33","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/899","RelatedDescription":"Closed issue \"Stream Method is asynchronous but without Async suffix \" (#899) at aspnet/SignalR","RelatedBody":"Stream Method is asynchronous but without Async suffix in its name, it should be StreamAsync \r\n\r\n"},{"Id":"6606376721","Type":"PullRequestEvent","CreatedAt":"2017-09-18T23:44:19","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/902","RelatedDescription":"Merged pull request \"Turned Stream into StreamAsync\" (#902) at aspnet/SignalR","RelatedBody":"- Before we were fire and forgetting the invocation that initiated\r\nthe streaming, this changes that so that the caller now has to await\r\nto get the channel.\r\n\r\n#899"},{"Id":"6606370683","Type":"IssuesEvent","CreatedAt":"2017-09-18T23:42:01","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/877","RelatedDescription":"Closed issue \"Javascript client breaks if relative url doesn't start with a slash\" (#877) at aspnet/SignalR","RelatedBody":"```JS\r\nlet connection = new signalR.HubConnection('chat');\r\n```\r\n\r\n```\r\nInformation: Normalizing 'chat' to 'http://localhost:5000chat'\r\nsignalr-client-1.0.0-alpha1.min.js:1 Error: Failed to start the connection. SyntaxError: Failed to execute 'open' on 'XMLHttpRequest': Invalid URL\r\n```\r\n\r\nWe should check if the path doesn't start with a slash and add it."},{"Id":"6605899841","Type":"IssuesEvent","CreatedAt":"2017-09-18T21:16:09","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/885","RelatedDescription":"Closed issue \"Add support for unsubscribing from an IObservable<T> streaming result\" (#885) at aspnet/SignalR","RelatedBody":"This is likely related to #481\r\n\r\nI have ported my `PersistentConnection` from SignalR 2.2 to a Hub method returning an `IObservable<T>`. By desing, this observable doesn't complete throughout the lifetime of the application.\r\n\r\nWhenever a client disconnects (I call connection.stop() in TS), the subscribed observer doesn't unsubscribe and all of them just pile up in my observable. SignalR just loses the subscription:\r\nhttps://github.com/aspnet/SignalR/blob/rel/1.0.0-alpha1/src/Microsoft.AspNetCore.SignalR.Core/Internal/AsyncEnumeratorAdapters.cs#L39\r\nI've quickly hacked an unsubscribe tied to the Hub's `Dispose` method:\r\n\r\n```cs\r\npublic class MyHub : Hub\r\n{\r\n    private readonly MyObservable myObservable;\r\n\r\n    private IDisposable disposeSubscription;\r\n\r\n    public MyHub(MyObservable myObservable) => this.myObservable = myObservable;\r\n\r\n    public IObservable<object> Data() => new wrappingObservable(myObservable, this);\r\n\r\n    protected override void Dispose(bool disposing)\r\n    {\r\n        disposeSubscription?.Dispose();\r\n        base.Dispose(disposing);\r\n    }\r\n\r\n    private class wrappingObservable : IObservable<object>\r\n    {\r\n        private readonly IObservable<object> original;\r\n        private readonly MyHub myHub;\r\n\r\n        public wrappingObservable(\r\n            IObservable<object> original,\r\n            MyHub myHub\r\n        )\r\n        {\r\n            this.original = original;\r\n            this.myHub = myHub;\r\n        }\r\n\r\n        public IDisposable Subscribe(IObserver<object> observer)\r\n        {\r\n            var disposable = original.Subscribe(observer);\r\n            myHub.disposeSubscription = disposable;\r\n            return disposable;\r\n        }\r\n    }\r\n}\r\n```"},{"Id":"6605899196","Type":"IssuesEvent","CreatedAt":"2017-09-18T21:15:59","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/481","RelatedDescription":"Closed issue \"Cancellation in Streamed results\" (#481) at aspnet/SignalR","RelatedBody":"We need to review how cancellation works in Streamed results. If the connection terminates, we need to be able to stop enumerating the sequence the user gave us, and ideally signal cancellation back to it in order to cancel any other async operations.\r\n\r\nOn a similar note, we may want to add support for passing a `CancellationToken` in to a Hub method."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6607112331","Type":"IssuesEvent","CreatedAt":"2017-09-19T04:59:58","Actor":"doublnt","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6850","RelatedDescription":"Opened issue \"I have a name puzzle about Content in MVC\" (#6850) at aspnet/Mvc","RelatedBody":"Here is the defaults MVC folder structure.\r\n![img3](https://user-images.githubusercontent.com/13679242/30576418-54a2d18a-9d3a-11e7-952e-9defa7419c8e.png)\r\nWhy Content is call Content, Why not use Contents?\r\n"},{"Id":"6606618858","Type":"PullRequestEvent","CreatedAt":"2017-09-19T01:27:02","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6849","RelatedDescription":"Opened pull request \"WIP: Auto validate models on types decorated with ApiController\" (#6849) at aspnet/Mvc","RelatedBody":""},{"Id":"6606586850","Type":"PullRequestEvent","CreatedAt":"2017-09-19T01:13:17","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6708","RelatedDescription":"Merged pull request \"Improvements to the testing package.\" (#6708) at aspnet/Mvc","RelatedBody":"* Detect a ConfigureDefaultBuilder static method on Program.cs of the test site\r\nand use it to initialize the IWebHostBuilder instance that we configure for testing.\r\n* Make use of the new service configuration extensibility points in Hosting to override\r\nservices for testing.\r\n* Get rid of MvcWebApplicationBuilder and move MVC specific methods into extension methods."},{"Id":"6606497843","Type":"IssuesEvent","CreatedAt":"2017-09-19T00:34:06","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6848","RelatedDescription":"Opened issue \"ApiController: Convert null-valued results to NotFoundResult in ActionResult<>\" (#6848) at aspnet/Mvc","RelatedBody":"Consider the following API:\r\n\r\n```C#\r\npublic async Task<ActionResult<Contact>> Get(int id)\r\n{\r\n    var contact = await DbContext.Contacts.Where(item => item.ContactId == id).SingleOrDefaultAsync();\r\n    if (contact == null)\r\n    {\r\n        return NotFound();\r\n    }\r\n    \r\n    return contact;\r\n}\r\n```\r\n\r\nWe could reduce this by assuming ActionResult<T>(null) indicates a NotFoundResult rather than an ObjectResult with a null value (which is what we do now). Resulting code:\r\n\r\n```C#\r\npublic Task<ActionResult<Contact>> Get(int id)\r\n{\r\n    return DbContext.Contacts.Where(item => item.ContactId == id).SingleOrDefaultAsync();\r\n}\r\n```"},{"Id":"6606461915","Type":"IssuesEvent","CreatedAt":"2017-09-19T00:18:48","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6847","RelatedDescription":"Opened issue \"For types annotated with ApiControllerAttribute, consider making complex type parameters FromBody by default\" (#6847) at aspnet/Mvc","RelatedBody":"As part of producing, more opinionated APIs via `ApiControllerAttribute` we can assume any complex type parameter in your action without binding information is interpreted as `FromBody`. This will reduce the amount of typing \\ clutter in user code:\r\n\r\n```C#\r\n[ApiController]\r\npublic class OrdersController\r\n{\r\n   // ...\r\n   [HttpPost]\r\n   public IActionResult Create(Book book); // Assumes FromBody\r\n\r\n   [HttpPut]\r\n   public IActionResult Update([FromQuery] Book book); // Opt out\r\n}\r\n```\r\n\r\nWe could add a switch to `ApiControllerOptions` to disable this behavior globally.\r\n\r\n"},{"Id":"6606422097","Type":"PullRequestEvent","CreatedAt":"2017-09-19T00:02:23","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6663","RelatedDescription":"Closed pull request \"Add an extensibility point to configure the WebHost on the MvcWebApplicationBuilder\" (#6663) at aspnet/Mvc","RelatedBody":"This enables applications to setup their configuration and logging for testing in the same way that they are setup by default for running on a non testing environment."},{"Id":"6606327025","Type":"IssuesEvent","CreatedAt":"2017-09-18T23:25:04","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6771","RelatedDescription":"Reopened issue \"FileExtension localization problem\" (#6771) at aspnet/Mvc","RelatedBody":"_From @Stefanone91 on September 1, 2017 9:9_\n\nHello everyone,\r\nI'm trying to localize the error message of \"FileExtension\" attribute but it seems not working.\r\nI've successfully implemented the localization for \"Required\" attribute as explained in the official ASP.NET core guide.\r\nI've created a simple project to reproduce the issue:\r\nInside the \"registration\" page i've added an input elemente for file upload wich is linked to RegisterViewModel, containing the \"Immagine\" IFormFile variable.\r\nThis IFormFile has the Required attribute and the FileExtension attribute. They are working well but not the translation of FileExtension's ErrorMessage .\r\n\r\nLink to GIT:\r\nhttps://github.com/Stefanone91/LocalizationFileSizeIssue\n\n_Copied from original issue: aspnet/Localization#412_"},{"Id":"6606326313","Type":"PullRequestEvent","CreatedAt":"2017-09-18T23:24:48","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6844","RelatedDescription":"Merged pull request \"Added attribute adapter for DataAnnotation's FileExtensionsAttribute\" (#6844) at aspnet/Mvc","RelatedBody":"[Fixes #6771] https://github.com/aspnet/Mvc/issues/6771"},{"Id":"6606326311","Type":"IssuesEvent","CreatedAt":"2017-09-18T23:24:48","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6771","RelatedDescription":"Closed issue \"FileExtension localization problem\" (#6771) at aspnet/Mvc","RelatedBody":"_From @Stefanone91 on September 1, 2017 9:9_\n\nHello everyone,\r\nI'm trying to localize the error message of \"FileExtension\" attribute but it seems not working.\r\nI've successfully implemented the localization for \"Required\" attribute as explained in the official ASP.NET core guide.\r\nI've created a simple project to reproduce the issue:\r\nInside the \"registration\" page i've added an input elemente for file upload wich is linked to RegisterViewModel, containing the \"Immagine\" IFormFile variable.\r\nThis IFormFile has the Required attribute and the FileExtension attribute. They are working well but not the translation of FileExtension's ErrorMessage .\r\n\r\nLink to GIT:\r\nhttps://github.com/Stefanone91/LocalizationFileSizeIssue\n\n_Copied from original issue: aspnet/Localization#412_"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6607117938","Type":"IssuesEvent","CreatedAt":"2017-09-19T05:02:26","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1434","RelatedDescription":"Closed issue \"Dev branch not resolving EntityFrameworkCore packages?\" (#1434) at aspnet/Identity","RelatedBody":"I'm trying to do a clean build of the dev branch, but it won't get all packages.\r\nI was hoping to test the Identity.Service packages.\r\n\r\nAll I did was:\r\n-Clone: git clone https://github.com/aspnet/Identity.git\r\n-Build: build.cmd\r\n\r\nResulting in these kind of errors with EntityFrameworkCore packages:\r\n`C:\\Source\\Repos\\Identity\\src\\Microsoft.AspNetCore.Identity.EntityFrameworkCore\\Microsoft.AspNetCore.Identity.EntityFrameworkCore.csproj : error NU1603: Microsoft.AspNetCore.Identity.EntityFrameworkCore depends on Microsoft.EntityFrameworkCore.Relational (>= 2.1.0-preview1) but Microsoft.EntityFrameworkCore.Relational 2.1.0-preview1 was not found. An approximate best match of Microsoft.EntityFrameworkCore.Relational 2.1.0-preview1-26623 was resolved. [C:\\Source\\Repos\\Identity\\Identity.sln]`\r\n\r\nWhat am I missing?\r\n"},{"Id":"6606080132","Type":"PullRequestEvent","CreatedAt":"2017-09-18T22:03:03","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1436","RelatedDescription":"Opened pull request \"[Prototype] Add CookieAuthentication\" (#1436) at aspnet/Identity","RelatedBody":"Work for https://github.com/aspnet/Identity/issues/1409"},{"Id":"6605877761","Type":"PullRequestEvent","CreatedAt":"2017-09-18T21:10:56","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1435","RelatedDescription":null,"RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1189\r\n\r\n@ajcvickers "},{"Id":"6605826638","Type":"PullRequestEvent","CreatedAt":"2017-09-18T20:59:08","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1435","RelatedDescription":"Closed pull request \"Always validate email\" (#1435) at aspnet/Identity","RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1189\r\n\r\n@ajcvickers "},{"Id":"6605817925","Type":"PullRequestEvent","CreatedAt":"2017-09-18T20:57:07","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1435","RelatedDescription":"Opened pull request \"Always validate email\" (#1435) at aspnet/Identity","RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1189\r\n\r\n@ajcvickers "},{"Id":"6605484529","Type":"PullRequestEvent","CreatedAt":"2017-09-18T19:41:30","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1431","RelatedDescription":"Merged pull request \"[2.0.1] Update version.props and add list of dependendencies that are also being updated\" (#1431) at aspnet/Identity","RelatedBody":"CI will fail until we actually have a candidate build of the EF dependencies.\r\n\r\n:watch: will wait until those are available to merge"},{"Id":"6605115458","Type":"IssuesEvent","CreatedAt":"2017-09-18T18:18:20","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/836","RelatedDescription":"Closed issue \"Consider protecting tokens in IUserAuthenticationTokenStore\" (#836) at aspnet/Identity","RelatedBody":"Since this seems geared for storing user's access tokens back to whatever external IdP, and given that you have no idea what scope those access tokens might provide access to, storing the values in plain text in the store seems a bit open. Sure, perhaps most of these tokens will be for something like a user info endpoint, but even that is indirectly PII you might be leaking if the DB is compromised. \n\nSeems like a perfect use of a decorator (only if the DI system allowed named instances/decorators).\n\nAnyway, just interested in a conversation and awareness about this.\n"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6606110478","Type":"PullRequestEvent","CreatedAt":"2017-09-18T22:12:15","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2064","RelatedDescription":"Merged pull request \"Fix flakiness in KeepAliveTimeoutTests.ConnectionKeptAliveBetweenRequests (#1684)\" (#2064) at aspnet/KestrelHttpServer","RelatedBody":"#1684\r\n\r\n[`Task.Delay` is unreliable.](https://github.com/aspnet/KestrelHttpServer/issues/1684#issuecomment-330285740)"},{"Id":"6606095990","Type":"PullRequestEvent","CreatedAt":"2017-09-18T22:07:48","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2052","RelatedDescription":"Merged pull request \"Updating toolset compiler\" (#2052) at aspnet/KestrelHttpServer","RelatedBody":"- minor bug fixes\r\n- recent merge from Roslyn master   \r\n- should be running on 2.0 \r\n\r\nThe corresponding VSIX is:  \r\nhttps://dotnet.myget.org/F/roslyn/vsix/0b48e25b-9903-4d8b-ad39-d4cca196e3c7-2.6.0.6211106.vsix\r\n\r\n"},{"Id":"6605931019","Type":"PullRequestEvent","CreatedAt":"2017-09-18T21:23:42","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2065","RelatedDescription":"Opened pull request \"Expose connection features to HTTP/2 connections\" (#2065) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6604882420","Type":"PullRequestEvent","CreatedAt":"2017-09-18T17:31:17","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2064","RelatedDescription":"Opened pull request \"Fix flakiness in KeepAliveTimeoutTests.ConnectionKeptAliveBetweenRequests (#1684)\" (#2064) at aspnet/KestrelHttpServer","RelatedBody":"#1684\r\n\r\nSince [`Task.Delay` is unreliable](https://github.com/aspnet/KestrelHttpServer/issues/1684#issuecomment-330285740), I've changed the test to continuously send requests over a period of three times the keep-alive timeout period. In the spirit of the original test, that verifies the timeout is reset between requests (the error situation being to time out the connection after the keep-alive timeout period, even if there's activity)."},{"Id":"6601508971","Type":"IssuesEvent","CreatedAt":"2017-09-18T01:26:08","Actor":"vinhhrv","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2032","RelatedDescription":"Closed issue \"Kestrel Hangs\" (#2032) at aspnet/KestrelHttpServer","RelatedBody":"```\r\n\r\n(lldb) clrstack\r\nOS Thread Id: 0x10bd (19)\r\n        Child SP               IP Call Site\r\n00007F77F19A8BF0 00007f7cf6f106d5 [HelperMethodFrame: 00007f77f19a8bf0]\r\n00007F77F19A8D10 00007F7C7D88160D Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n00007F77F19A8D20 00007F7C7D88079F Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadResult ByRef)\r\n00007F77F19A8D60 00007F7C7D8806D1 Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\r\n00007F77F19A8DE0 00007F7C7D8853DD Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult()\r\n00007F77F19A8E00 00007F7C7CD00B6C Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvOutputConsumer+<WriteOutputAsync>d__6.MoveNext()\r\n00007F77F19A8F30 00007F7C7C151011 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007F77F19A8F80 00007F7C7D88C0D5 Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe+<>c.<.cctor>b__67_3(System.Object)\r\n00007F77F19A8F90 00007F7C7CD03B02 Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread+CallbackAdapter`1+<>c[[System.__Canon, System.Private.CoreLib]].<.cctor>b__3_0(System.Object, System.Object)\r\n00007F77F19A8FC0 00007F7C7CCF7F8D Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n00007F77F19A9070 00007F7C7CCF7E4F Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.OnPost()\r\n00007F77F19A90A0 00007F7C7CCFBE87 Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvAsyncHandle.AsyncCb(IntPtr)\r\n00007F77F19A90B0 00007F7C7CD0383E Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvAsyncHandle+<>c.<.cctor>b__9_1(IntPtr)\r\n00007F77F19A90C0 00007F7C810460E9 DomainBoundILStubClass.IL_STUB_ReversePInvoke(Int64)\r\n00007F77F19AC7B8 00007f7cf58ecf6e [InlinedCallFrame: 00007f77f19ac7b8] Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions+NativeMethods.uv_run(Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle, Int32)\r\n00007F77F19AC7B8 00007f7c81045c6c [InlinedCallFrame: 00007f77f19ac7b8] Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions+NativeMethods.uv_run(Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle, Int32)\r\n00007F77F19AC7A0 00007F7C81045C6C DomainBoundILStubClass.IL_STUB_PInvoke(Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle, Int32)\r\n00007F77F19AC840 00007F7C7CCFB1A8 Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.run(Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle, Int32)\r\n00007F77F19AC860 00007F7C7CCF7BED Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.ThreadStart(System.Object)\r\n00007F77F19AC8C0 00007F7C81515033 System.Threading.Thread.ThreadMain_ParameterizedThreadStart(System.Object)\r\n00007F77F19AC8E0 00007F7C7C151011 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007F77F19ACC58 00007f7cf58ebf07 [GCFrame: 00007f77f19acc58]\r\n00007F77F19ACD30 00007f7cf58ebf07 [DebuggerU2MCatchHandlerFrame: 00007f77f19acd30]\r\n\r\n(lldb) sos Threads\r\nThreadCount:      58\r\nUnstartedThread:  0\r\nBackgroundThread: 54\r\nPendingThread:    0\r\nDeadThread:       2\r\nHosted Runtime:   no\r\n                                                                                                        Lock\r\n       ID OSID ThreadOBJ           State GC Mode     GC Alloc Context                  Domain           Count Apt Exception\r\n   3    1 10a8 00000000006E0370    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Finalizer)\r\n   1    2 10a6 00000000006E2CB0  2020020 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  10    3 10af 00000000006DEA00    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  11    4 10b0 0000000000923D30    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  12    5 10b3 00000000009E05E0    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  13    6 10b4 0000000000A2C680  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker) System.OperationCanceledException 00007f7841c36be0 (nested exceptions)\r\n  15    7 10b6 00007F7800004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  16    8 10b7 0000000000A4BB90    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  17    9 10b8 00007F77F8004BC0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  18   10 10b9 00007F77E00044F0  1020220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  19   11 10ba 00007F77F8006D50  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  21   12 10bc 0000000000A98050    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  19   13 10bd 0000000000A98C90    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException 00007f784201dab8\r\n  23   14 10be 00007F77E4009D10    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  24   15 10bf 00007F77F800BD00  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  25   16 10c0 00007F77E40327B0  2021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  26   18 10c2 00007F780007FA70  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn (Threadpool Worker)\r\n  27   19 10c3 00007F77F803EB30  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  28   20 10c4 00007F77C4004BC0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  29   21 10c5 00007F77B8004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  30   22 10c6 00007F77BC004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  31   23 10c7 00007F77B0004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn (Threadpool Worker)\r\n  32   24 10c8 00007F77B4004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  34   25 10ca 00007F77A8004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  33   26 10c9 00007F77A0004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  35   27 10cb 0000000000A47F80  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  36   28 10cc 00007F77A000ABC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  37   29 10cd 00007F77A800ABC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  38   32 10d4 00007F781C0044F0    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  39   33 10d5 00007F781C0060E0    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  40   34 10d6 00007F781C008050    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  41   35 10d7 00007F781C00A030    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  42   37 10dd 00007F7800081B80    21020 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn\r\n  43   30 10e6 00007F77E010D790  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  44   38 10e8 00007F77A0080DA0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  45   17 10ec 00007F77D40A73C0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  46   31 1116 00007F77B0055E20  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  47   42 1117 00007F77B004D620  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  48   41 1118 00007F77C403C1B0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  49   36 1119 00007F77C003C020  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  50   40 111a 00007F7C6C00BF20  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  51   45 111b 00007F77E010E670  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  52   47 111d 00007F781000C7B0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker) System.OperationCanceledException 00007f78412b0230 (nested exceptions)\r\n  53   48 111e 00007F77E8025250  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  54   49 111f 00007F77D41115A0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  55   50 1120 00007F77F80335E0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  56   51 1121 00007F77C0040540  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  57   52 1122 0000000000A951C0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  58   53 1123 00007F77C40404F0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  59   43 1128 00007F77A80A9EC0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  60   39 1153 000000000099B930  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker) System.OperationCanceledException 00007f7841bdc638 (nested exceptions)\r\n  61   58 1154 00007F78001A3960  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  62   44 1155 00007F7818063200  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  63   54 1156 00007F77F400BE10  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  64   46 11ce 00007F77A81B5E80  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  65   59 11cf 00007F78001B3FC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn (Threadpool Worker)\r\nXXXX   61    0 00007F77A0012DE0    31820 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\nXXXX   62    0 00007F77B80105E0    31820 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n(lldb)\r\n\r\n\r\n```"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6606731116","Type":"PullRequestEvent","CreatedAt":"2017-09-19T02:13:24","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1689","RelatedDescription":"Opened pull request \"[Design] Create Template engine from project snapshot\" (#1689) at aspnet/Razor","RelatedBody":""},{"Id":"6606729406","Type":"PullRequestEvent","CreatedAt":"2017-09-19T02:12:42","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/1688","RelatedDescription":"Closed pull request \"Add a background listener for notifications\" (#1688) at aspnet/Razor","RelatedBody":"This change adds an actual background worker for listening to project\r\nchange notifications and starts sending updates when the project's razor\r\ndependencies change.\r\n\r\nI had to do a litle surgery to get things working. There were plenty of\r\nsmall bug fixes.\r\n\r\nAdditionally I got rid of the WeakReferences for tracking listeners. I\r\nwas seeing TextBuffers hanging around in VS longer than I expected and\r\nthe WeakReferences weren't getting cleaned up. I think it's better that\r\nwe just track the lifetime."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6504000070","Type":"IssuesEvent","CreatedAt":"2017-08-23T19:03:38","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/269","RelatedDescription":"Opened issue \"ExpandoObjectAdapter does not assume case insensitivity\" (#269) at aspnet/Announcements","RelatedBody":"When applying a json patch to `ExpandoObject`s, case insensitive search will not be used to match the path segment to the object's dictionary keys. Instead, the path segment will be resolved using the `NamingStrategy` defined in the `IContractResolver`.\r\n\r\nAddresses https://github.com/aspnet/JsonPatch/issues/102\r\n\r\nSee https://github.com/aspnet/JsonPatch/issues/103 for discussion\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":25,"RawContent":null},{"Id":"897126323298209792","CreatedAt":"2017-08-14T16:02:37+00:00","UserScreenname":"aspnet","Text":"Announcing ASPNet Core 2.0 - https://t.co/5RTzwS9Ym2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":196,"FavoriteCount":158,"RawContent":null},{"Id":"877222209667960834","CreatedAt":"2017-06-20T17:50:47+00:00","UserScreenname":"aspnet","Text":"Check out the latest Code Conversation episode where @LadyNaggaga chats with @BaggaJaspreet about ASPNet Core TagHe… https://t.co/xeyH9UaAso","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2017-09-19T05:30:07.2269527Z","RunDurationInMilliseconds":5963}