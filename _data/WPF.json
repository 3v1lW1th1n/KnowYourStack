{"Data":{"GitHub":{"Issues":[{"Id":"433512025","IsPullRequest":true,"CreatedAt":"2019-04-16T23:17:35","Actor":"vatsan-madhavan","Number":"588","RawContent":null,"Title":"Update targets to adapt to ref-pack based references","State":"closed","Body":"- Update related targets, esp. SdkReferences.targets and related mechanisms used to filter `NetCoreReference`\r\n- Update RuntimeFrameworkReference targets to exclude test projects because they currently depend on WindowsDesktop SDK.","Url":"https://github.com/dotnet/wpf/pull/588","RelatedDescription":"Closed or merged PR \"Update targets to adapt to ref-pack based references\" (#588)"},{"Id":"433904999","IsPullRequest":true,"CreatedAt":"2019-04-16T23:16:55","Actor":"vatsan-madhavan","Number":"596","RawContent":null,"Title":"Add AssemblyMetadata[Language] attribute","State":"closed","Body":"This PR addresses #587 \r\n\r\n/cc @fadimounir ","Url":"https://github.com/dotnet/wpf/pull/596","RelatedDescription":"Closed or merged PR \"Add AssemblyMetadata[Language] attribute\" (#596)"},{"Id":"434015789","IsPullRequest":true,"CreatedAt":"2019-04-16T22:39:49","Actor":"stevenbrix","Number":"598","RawContent":null,"Title":"convert gentracesources to tt","State":"open","Body":"This PR updates the WpfArcadeSdk to move our gentracesources.pl and gentracestrings.pl to using design time t4 generation.\r\n\r\nThere are a few caveats in order to get this to work:\r\n1. We have to ensure BuildDependsOn variable that T4 targets update doesn't get overwritten. So with SDK style projects, we have to manually import the Sdk.targets and then include the T4 targets after.\r\n2. I wanted to decouple the GenTraceSources and GenAvMessages (similar to how we had 2 separate perl scripts before). In order to do this, those targets can't include the T4 targets, since then you get MSBuild authoring errors about the same target being imported twice.\r\n\r\nBelow is an example of how WindowsBase uses these targets. PresentationFramework and PresentationCore are similar, only without the `GenTraceSources.targets` import.\r\n\r\n```\r\n  <Import Project=\"Sdk.targets\" Sdk=\"Microsoft.NET.Sdk\" />\r\n  <Import Project=\"$(WpfCodeGenDir)AvTrace\\GenTraceSources.targets\" />\r\n  <Import Project=\"$(WpfCodeGenDir)AvTrace\\GenAvMessages.targets\" />\r\n  <Import Project=\"$(WpfCodeGenDir)DesignTimeTextTemplating.targets\" />\r\n```\r\n\r\nThere will be an internal PR that shows how these changes are consumed. The goal here is that we will continue to move more and more of our codegen scripts to T4 templates, where we should be able to use this as a starting point for completing that work.","Url":"https://github.com/dotnet/wpf/pull/598","RelatedDescription":"Open PR \"convert gentracesources to tt\" (#598)"},{"Id":"433895678","IsPullRequest":true,"CreatedAt":"2019-04-16T19:32:25","Actor":"vatsan-madhavan","Number":"595","RawContent":null,"Title":"Ensure that newer files are always updated under artifacts\\packaging","State":"closed","Body":"This fixes #564 ","Url":"https://github.com/dotnet/wpf/pull/595","RelatedDescription":"Closed or merged PR \"Ensure that newer files are always updated under artifacts\\packaging\" (#595)"},{"Id":"433947456","IsPullRequest":false,"CreatedAt":"2019-04-16T19:27:56","Actor":"miguep","Number":"597","RawContent":null,"Title":"Printing fails in WPF","State":"open","Body":"* .NET Core Version: 3.0.0-preview4-27613-07\r\n* Windows version: Win7, Win8.1, Win10\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\n\r\nattempt to print using the following code snippet\r\n\r\n```csharp\r\nPrintQueue.CreateXpsDocumentWriter(LocalPrintServer.GetDefaultPrintQueue()).Write(visual);\r\n```\r\n \r\n **Actual behavior:** \r\nException Info: System.IO.IOException: Cannot retrieve parts of writeonly container\r\n   at System.IO.Packaging.Package.ThrowIfWriteOnly()\r\n   at System.IO.Packaging.Package.GetRelationshipsByType(String relationshipType)\r\n   at System.Windows.Xps.Packaging.XpsManager.GetXpsDocumentStartingPart(Package package)\r\n   at System.Windows.Xps.Packaging.XpsDocument.AddFixedDocumentSequence()\r\n   at System.Windows.Xps.Serialization.XpsPackagingPolicy.AcquireXmlWriterForFixedDocumentSequence()\r\n   at System.Windows.Xps.Serialization.XpsSerializationManager.AcquireXmlWriter(Type writerType)\r\n   at System.Windows.Xps.Serialization.ReachHierarchySimulator.SimulateBeginFixedDocumentSequence()\r\n   at System.Windows.Xps.Serialization.ReachHierarchySimulator.BeginConfirmToXPSStructure(Boolean mode)\r\n   at System.Windows.Xps.Serialization.XpsSerializationManager.SaveAsXaml(Object serializedObject)\r\n   at System.Windows.Xps.XpsDocumentWriter.SaveAsXaml(Object serializedObject, Boolean isSync)\r\n \r\n **Expected behavior:**\r\nPrinting succeds \r\n\r\nIn Win7 this may or may not be an issue depending on the printer capabilities (Xps capable printer). In RS2+ this is also not an issue\r\n\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/597","RelatedDescription":"Open issue \"Printing fails in WPF\" (#597)"},{"Id":"433633209","IsPullRequest":false,"CreatedAt":"2019-04-16T17:37:23","Actor":"weltkante","Number":"591","RawContent":null,"Title":"Thread safety issue in PresentationBuildTasks","State":"closed","Body":"During the bugfix for #350 and #378 in PR #570 the static initialization of `KnownAssemblyInfoRecord` on `BamlMapTable` was moved into the [constructor](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Markup/BamlMapTable.cs#L82) while keeping the initialized [field](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Markup/BamlMapTable.cs#L1806) static. This can lead to potential race conditions when the `BamlMapTable` is instantiated multiple times on separate threads.\r\n\r\nConsidering the post-merge [comments](https://github.com/dotnet/wpf/pull/570#issuecomment-482547850) in the PR its probably safe to make the field an instance field instead of a static field.","Url":"https://github.com/dotnet/wpf/issues/591","RelatedDescription":"Closed issue \"Thread safety issue in PresentationBuildTasks\" (#591)"},{"Id":"433523014","IsPullRequest":true,"CreatedAt":"2019-04-16T17:36:06","Actor":"ryalanms","Number":"589","RawContent":null,"Title":"BamlMapTable's KnownAssemblyInfoRecord should be an instance field","State":"closed","Body":"System.Reflection.Assembly.ReflectionOnlyLoad is not supported on .NET core and has been replaced with MetadataLoadContext.  MetadataLoadContext is cleared between markup compile passes, invalidating all System.Relection.Assembly instances loaded by MetadataLoadContext.  \r\n\r\nVarious markup compilation errors were occuring because of failed property lookups due to comparisons against an invalid System.Reflection.Assembly instance (PresentationFramework) in BamlMapTable.KnownAssemblyInfoRecord.  PresentationFramework is now loaded each time BamlMapTable is created by XamlTypeMapper, per markup compile pass.\r\n\r\nThis change includes the recommendation from @weltkante's review to update BamlAssemblyInfoRecord on BamlMapTable to be an instance field.  ","Url":"https://github.com/dotnet/wpf/pull/589","RelatedDescription":"Closed or merged PR \"BamlMapTable's KnownAssemblyInfoRecord should be an instance field\" (#589)"},{"Id":"433765456","IsPullRequest":true,"CreatedAt":"2019-04-16T13:02:19","Actor":"dotnet-maestro[bot]","Number":"593","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190416.01\r\n- **Date Produced**: 4/16/2019 8:46 AM\r\n- **Commit**: e32693473d394c9d019d81448e44d171cc9f7d04\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27616-01\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview5.19215.16 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/593","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#593)"},{"Id":"433743518","IsPullRequest":true,"CreatedAt":"2019-04-16T12:16:47","Actor":"dotnet-maestro[bot]","Number":"592","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190415.12\r\n- **Date Produced**: 4/16/2019 12:12 AM\r\n- **Commit**: 517bf671ea342965d007aa48f5bfd4926e58d582\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19215.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19215.12\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/592","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#592)"},{"Id":"433768652","IsPullRequest":false,"CreatedAt":"2019-04-16T10:21:40","Actor":"AHero11","Number":"594","RawContent":null,"Title":"WPF multiple ShowDialogs","State":"open","Body":"# General\r\n\r\nwith DotNetCore 3 Preview 3:\r\nIn a console-application starting a simple modal \"Hello world\" WPF dialog with \"ShowDialog();\" works fine. But after it closes, starting the same view again with ShowDialog does absolutely nothing: no view, no runtimeerror, no nothing - the programm just ignores it,\r\n\r\nExample:\r\n        private void Application_Startup(object sender, StartupEventArgs e)\r\n        {\r\n            new TestWindow().ShowDialog();\r\n            new TestWindow().ShowDialog();\r\n        }\r\n","Url":"https://github.com/dotnet/wpf/issues/594","RelatedDescription":"Open issue \"WPF multiple ShowDialogs\" (#594)"},{"Id":"433554615","IsPullRequest":false,"CreatedAt":"2019-04-16T02:25:28","Actor":"vsfeedback","Number":"590","RawContent":null,"Title":"Vs2019 when using WPF Click event Clicks No response","State":"open","Body":"VSF_TYPE_MARKDOWNFor example, when I click the Click event in the right property when I use the button control in WPF, I can't jump to restart the vs2019 and then click on the specific question of producing the Click event to see how many times the picture in the attachment has happened.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/533400/vs2019-在使用wpf的时候click事件点击没有反应.html\nVSTS ticketId: 847720_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/590","RelatedDescription":"Open issue \"Vs2019 when using WPF Click event Clicks No response\" (#590)"},{"Id":"433405207","IsPullRequest":false,"CreatedAt":"2019-04-15T22:23:50","Actor":"Ebenezer94","Number":"586","RawContent":null,"Title":"Exception thrown 'Unable to find an entry point named 'CopyMemory' in DLL 'kernel32.dll'.' on WPF project with .NET Core 3.0","State":"closed","Body":"We have used the CopyMemory method in our project to copies memory from source to destination. While copying, exception thrown like \"'Unable to find an entry point named 'CopyMemory' in DLL 'kernel32.dll'.'\". This code works fine in WPF with .NET Framework. But, we are facing an issue in WPF with .NET Core. I have added the simple code snippet to reproduce the issue in WPF with .NETCore. The simple sample can be download from below link,\r\n\r\n.NET Core3.0\r\n\r\nhttp://www.syncfusion.com/downloads/support/directtrac/general/ze/NETCOR~1263359629.zip\r\n\r\n.NET Framework\r\n\r\nhttp://www.syncfusion.com/downloads/support/directtrac/general/ze/CopyMemory_NetFramework542091517.zip\r\n\r\nCode snippet :\r\n\r\n```\r\n[DllImport(\"kernel32.dll\", EntryPoint = \"CopyMemory\", SetLastError = false)]\r\npublic static extern void CopyMemory(IntPtr dest, IntPtr src, uint count);\r\npublic MainWindow()\r\n{\r\n    const int size = 200;\r\n    IntPtr memorySource = Marshal.AllocHGlobal(size);\r\n    Marshal.WriteInt32(memorySource, 35);\r\n    IntPtr memoryTarget = Marshal.AllocHGlobal(size);\r\n    CopyMemory(memoryTarget, memorySource, size);\r\n    bool val = Marshal.ReadInt32(memoryTarget) == 35;\r\n}\r\n```\r\n\r\n\r\nPlease find the required configuration below.\r\n\r\n.NET Framework                                 : 4.6\r\n.NET Core                                           : 3.0\r\nOperating System                              : Windows 10\r\nPreferred Programming Language    : C#\r\nVisual Studio                                      : Visual Studio 2017","Url":"https://github.com/dotnet/wpf/issues/586","RelatedDescription":"Closed issue \"Exception thrown 'Unable to find an entry point named 'CopyMemory' in DLL 'kernel32.dll'.' on WPF project with .NET Core 3.0\" (#586)"},{"Id":"433431340","IsPullRequest":false,"CreatedAt":"2019-04-15T18:59:45","Actor":"fadimounir","Number":"587","RawContent":null,"Title":"Add attribute to C++/CLI assemblies","State":"open","Body":"<!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n\r\nAs discussed over email, we need to add some attribute to the IJW assemblies (DirectWriteForwarder.dll and System.Printing.dll to help with this bug: https://github.com/dotnet/coreclr/issues/23872\r\n\r\nFor Preview 5, the coreclr bug might not get fixed in time, so we'll use the assembly attribute as a way to exclude these 2 problematic assemblies from being compiled into ReadyToRun images.\r\n\r\nProposed attribute to add:\r\n`[assembly: AssemblyMetadata(\"Language\", \"C++\")]`","Url":"https://github.com/dotnet/wpf/issues/587","RelatedDescription":"Open issue \"Add attribute to C++/CLI assemblies\" (#587)"},{"Id":"433242571","IsPullRequest":true,"CreatedAt":"2019-04-15T17:50:33","Actor":"v-zbsail","Number":"582","RawContent":null,"Title":"LOC CHECKIN | dotnet/wpf master | 20190415","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/582","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/wpf master | 20190415\" (#582)"},{"Id":"433382640","IsPullRequest":false,"CreatedAt":"2019-04-15T16:51:37","Actor":"ojhad","Number":"585","RawContent":null,"Title":"Behavior change regarding seekability of streams returned for ZipArchive","State":"open","Body":"* .NET Core Version: 3.0.100-preview4\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nThere is a behavior change regarding the seekability of returned ZipArchiveEntry streams.\r\n\r\n **.NET Framework behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\nThe WindowsBase implementation of Zip had the necessary functionality that operated on the returned deflate streams which provided support for seeking (However, in doing so, it incurred a lot of extra CPU and file system usage)\r\n\r\n **.NET Core behavior:**\r\nThe current implementation in CoreFX (System.IO.Packaging) no longer provides this functionality, resulting in [streams that are being returned](https://github.com/dotnet/corefx/blob/6322a406f88e854c5b827ab838f988f8992048f8/src/System.IO.Packaging/src/System/IO/Packaging/ZipStreamManager.cs#L86) to be non-seekable. \r\n\r\n**Related Issue:**\r\nhttps://github.com/dotnet/corefx/issues/34219\r\n","Url":"https://github.com/dotnet/wpf/issues/585","RelatedDescription":"Open issue \"Behavior change regarding seekability of streams returned for ZipArchive\" (#585)"},{"Id":"433266774","IsPullRequest":true,"CreatedAt":"2019-04-15T13:00:58","Actor":"dotnet-maestro[bot]","Number":"584","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190414.10\r\n- **Date Produced**: 4/15/2019 7:19 AM\r\n- **Commit**: f9decfe63aadb21139c048ce3ea43982982e5000\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27614-10\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview5.19214.16 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/584","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#584)"},{"Id":"433245323","IsPullRequest":true,"CreatedAt":"2019-04-15T12:11:27","Actor":"dotnet-maestro[bot]","Number":"583","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190414.2\r\n- **Date Produced**: 4/14/2019 4:07 PM\r\n- **Commit**: bcf1186cb0db792906fd319ae49bdbc41f44f8ec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19214.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/583","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#583)"},{"Id":"432971096","IsPullRequest":true,"CreatedAt":"2019-04-14T12:49:28","Actor":"dotnet-maestro[bot]","Number":"581","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190413.11\r\n- **Date Produced**: 4/14/2019 7:38 AM\r\n- **Commit**: 4a01e55806b0849a08b820518e8cdcbeaaf07476\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27613-11\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/581","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#581)"},{"Id":"432966534","IsPullRequest":true,"CreatedAt":"2019-04-14T12:15:15","Actor":"dotnet-maestro[bot]","Number":"580","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190413.2\r\n- **Date Produced**: 4/13/2019 9:02 PM\r\n- **Commit**: 10655eec2ab92accc1487d077979935127f16b4e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19213.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/580","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#580)"},{"Id":"432889982","IsPullRequest":false,"CreatedAt":"2019-04-13T19:30:23","Actor":"jbe2277","Number":"579","RawContent":null,"Title":"RichTextBox: Copy to Clipboard throws NotSupportedException","State":"open","Body":"* .NET Core SDK: 3.0.100-preview5-011256 \\[e6f157e5a4\\]\r\n* Microsoft.WindowsDesktop.App 3.0.0-preview5-27610-56\r\n* VS 2019: 16.1.0 Preview 1.0\r\n* Windows version: Win10 1809 (Azure VM, connected via Remote Desktop)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\nCopy to Clipboard (e.g. press Ctrl+C) within the RichTextBox throws a NotSupportedException with the message: `No data is available for encoding 1252. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.`\r\n\r\n**Reproduce:**\r\n* Clone [https://github.com/jbe2277/waf.git](https://github.com/jbe2277/waf.git)\r\n* Checkout the **netcoreapp3.0** branch\r\n* Open `System.Waf.sln` in VS 2019.\r\n* Set `Samples/Writer/Writer.Presentation` as start-up project\r\n* Start the application and click on New.\r\n* Insert some text, select the text and press Ctrl + C.\r\n\r\n**Expected:** The selected text should be copied to the Clipboard. You could compare this with the **master** branch (targets .NET 4.6.1)\r\n\r\n**Actual:** The application crashes.\r\n\r\n**Related issue:** I get the same exception when I try to save the RichTextBox content as RTF file. Just press Save in the Writer application.\r\n\r\n**Details:** Copy to Clipboard throws the exception:\r\n```\r\nSystem.NotSupportedException\r\n  HResult=0x80131515\r\n  Message=No data is available for encoding 1252. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.Text.Encoding.GetEncoding(Int32 codepage) in F:\\workspace\\_work\\1\\s\\src\\System.Private.CoreLib\\shared\\System\\Text\\Encoding.cs:line 287\r\n\r\nSystem.Private.CoreLib.dll!System.Text.Encoding.GetEncoding(int codepage) Line 287\r\nPresentationFramework.dll!System.Windows.Documents.FontTableEntry.ComputePreferredCodePage()\r\nPresentationFramework.dll!System.Windows.Documents.XamlToRtfWriter.XamlToRtfWriter(string xaml)\r\nPresentationFramework.dll!System.Windows.Documents.XamlRtfConverter.ConvertXamlToRtf(string xamlContent)\r\nPresentationFramework.dll!System.Windows.Documents.TextEditorCopyPaste._CreateDataObject(System.Windows.Documents.TextEditor This, bool isDragDrop)\r\nPresentationFramework.dll!System.Windows.Documents.TextEditorCopyPaste.Copy(System.Windows.Documents.TextEditor This, bool userInitiated)\r\nPresentationCore.dll!System.Windows.Input.CommandBinding.OnExecuted(object sender, System.Windows.Input.ExecutedRoutedEventArgs e)\r\nPresentationCore.dll!System.Windows.Input.CommandManager.ExecuteCommandBinding(object sender, System.Windows.Input.ExecutedRoutedEventArgs e, System.Windows.Input.CommandBinding commandBinding)\r\nPresentationCore.dll!System.Windows.Input.CommandManager.FindCommandBinding(object sender, System.Windows.RoutedEventArgs e, System.Windows.Input.ICommand command, bool execute)\r\nPresentationCore.dll!System.Windows.Input.CommandManager.OnExecuted(object sender, System.Windows.Input.ExecutedRoutedEventArgs e)\r\nPresentationCore.dll!System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate handler, object target)\r\nPresentationCore.dll!System.Windows.EventRoute.InvokeHandlersImpl(object source, System.Windows.RoutedEventArgs args, bool reRaised)\r\nPresentationCore.dll!System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject sender, System.Windows.RoutedEventArgs args)\r\nPresentationCore.dll!System.Windows.UIElement.RaiseTrustedEvent(System.Windows.RoutedEventArgs args)\r\nPresentationCore.dll!System.Windows.Input.RoutedCommand.ExecuteImpl(object parameter, System.Windows.IInputElement target, bool userInitiated)\r\nPresentationCore.dll!System.Windows.Input.CommandManager.TranslateInput(System.Windows.IInputElement targetElement, System.Windows.Input.InputEventArgs inputEventArgs)\r\nPresentationCore.dll!System.Windows.UIElement.OnKeyDownThunk(object sender, System.Windows.Input.KeyEventArgs e)\r\nPresentationCore.dll!System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate handler, object target)\r\nPresentationCore.dll!System.Windows.EventRoute.InvokeHandlersImpl(object source, System.Windows.RoutedEventArgs args, bool reRaised)\r\nPresentationCore.dll!System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject sender, System.Windows.RoutedEventArgs args)\r\nPresentationCore.dll!System.Windows.UIElement.RaiseTrustedEvent(System.Windows.RoutedEventArgs args)\r\nPresentationCore.dll!System.Windows.Input.InputManager.ProcessStagingArea()\r\nPresentationCore.dll!System.Windows.Input.InputProviderSite.ReportInput(System.Windows.Input.InputReport inputReport)\r\nPresentationCore.dll!System.Windows.Interop.HwndKeyboardInputProvider.ProcessKeyAction(ref System.Windows.Interop.MSG msg, ref bool handled)\r\nPresentationCore.dll!System.Windows.Interop.HwndSource.CriticalTranslateAccelerator(ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers)\r\nPresentationCore.dll!System.Windows.Interop.HwndSource.OnPreprocessMessage(object param)\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs)\r\nPresentationCore.dll!System.Windows.Interop.HwndSource.OnPreprocessMessageThunk(ref System.Windows.Interop.MSG msg, ref bool handled)\r\nWindowsBase.dll!System.Windows.Interop.ComponentDispatcherThread.RaiseThreadMessage(ref System.Windows.Interop.MSG msg)\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame frame)\r\nPresentationFramework.dll!System.Windows.Application.RunDispatcher(object ignore)\r\nPresentationFramework.dll!System.Windows.Application.RunInternal(System.Windows.Window window)\r\nWriter.dll!Waf.Writer.Presentation.App.Main()\r\n```","Url":"https://github.com/dotnet/wpf/issues/579","RelatedDescription":"Open issue \"RichTextBox: Copy to Clipboard throws NotSupportedException\" (#579)"},{"Id":"432858423","IsPullRequest":true,"CreatedAt":"2019-04-13T16:04:48","Actor":"dotnet-maestro[bot]","Number":"578","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190413.1\r\n- **Date Produced**: 4/13/2019 2:49 PM\r\n- **Commit**: b1ee29b8b8e14c1200adff02847391dde471d0d2\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview4.19213.1\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Reflection.Emit** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Security.AccessControl** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Security.Permissions** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Windows.Extensions** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.CodeDom** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.Drawing.Common** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n- **System.DirectoryServices** -> 4.6.0-preview4.19212.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview4-27612-09 (parent: Microsoft.Private.Winforms)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/578","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#578)"},{"Id":"432843959","IsPullRequest":true,"CreatedAt":"2019-04-13T12:56:14","Actor":"dotnet-maestro[bot]","Number":"577","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190413.02\r\n- **Date Produced**: 4/13/2019 11:52 AM\r\n- **Commit**: 09ee70255ebbce00bae4e4ff188241b42d001d89\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27613-02\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview5.19212.14 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/577","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#577)"},{"Id":"432840315","IsPullRequest":true,"CreatedAt":"2019-04-13T12:10:45","Actor":"dotnet-maestro[bot]","Number":"576","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190412.2\r\n- **Date Produced**: 4/12/2019 4:37 PM\r\n- **Commit**: 9d0fd805448082c8d55e2434607b481bca70a146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19212.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/576","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#576)"},{"Id":"432683987","IsPullRequest":false,"CreatedAt":"2019-04-12T18:10:35","Actor":"jbe2277","Number":"575","RawContent":null,"Title":"XpsDocument.GetFixedDocumentSequence throws an exception","State":"open","Body":"* .NET Core SDK: 3.0.100-preview5-011256 \\[e6f157e5a4\\]\r\n* Microsoft.WindowsDesktop.App 3.0.0-preview5-27610-56\r\n* VS 2019: 16.1.0 Preview 1.0\r\n* Windows version: Win10 1809 (Azure VM, connected via Remote Desktop)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n**Reproduce:**\r\n* Clone [https://github.com/jbe2277/waf.git](https://github.com/jbe2277/waf.git)\r\n* Checkout the **netcoreapp3.0** branch\r\n* Open `System.Waf.sln` in VS 2019.\r\n* Set `Samples/Writer/Writer.Presentation` as start-up project\r\n* Start the application and click on New.\r\n* Click on _Ribbon menu_ and then on _Print preview_.\r\n\r\n**Expected:** The Print preview should be shown. You could compare this with the **master** branch (targets .NET 4.6.1)\r\n\r\n**Actual:** The exception `System.Windows.Markup.XamlParseException: 'Add value to collection of type 'System.Windows.Documents.DocumentReferenceCollection' threw an exception.' Line number '1' and line position '136'. ---> System.UriFormatException: Invalid URI: The format of the URI could not be determined.` is thrown.\r\n\r\n**Details:**\r\nThe line [`FixedDocumentSequence documentSequence = xpsDocument.GetFixedDocumentSequence();`](https://github.com/jbe2277/waf/blob/68dc52b02358cefc46f5f6aea6dc7ddd24971313/src/System.Waf/Samples/Writer/Writer.Applications/Controllers/PrintController.cs#L88) results in the following exception:\r\n\r\n```\r\nSystem.UriFormatException\r\n  HResult=0x80131537\r\n  Message=Invalid URI: The format of the URI could not be determined.\r\n  Source=System.Private.Uri\r\n  StackTrace:\r\n   at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n\r\n------ Call stack:\r\nSystem.Private.Uri.dll!System.Uri.CreateThis(string uri, bool dontEscape, System.UriKind uriKind)\r\nSystem.Private.Uri.dll!System.Uri.Uri(string uriString)\r\nWindowsBase.dll!MS.Internal.IO.Packaging.PackUriHelper.GetPackageUriComponent(System.Uri packUri)\r\nWindowsBase.dll!MS.Internal.IO.Packaging.PackUriHelper.ValidateAndGetPackUriComponents(System.Uri packUri, out System.Uri packageUri, out System.Uri partUri)\r\nPresentationCore.dll!System.IO.Packaging.PackWebRequestFactory.System.Net.IWebRequestCreate.Create(System.Uri uri)\r\nPresentationCore.dll!System.IO.Packaging.PackWebRequest.GetRequest(bool allowPseudoRequest)\r\nPresentationCore.dll!System.IO.Packaging.PackWebRequest.GetResponse()\r\nPresentationCore.dll!MS.Internal.WpfWebRequestHelper.GetResponse(System.Net.WebRequest request)\r\nPresentationCore.dll!MS.Internal.WpfWebRequestHelper.GetResponseStream(System.Net.WebRequest request, out MS.Internal.ContentType contentType)\r\nPresentationFramework.dll!System.Windows.Documents.DocumentReference._LoadDocument()\r\nPresentationFramework.dll!System.Windows.Documents.DocumentReference.GetDocument(bool forceReload)\r\nPresentationFramework.dll!System.Windows.Documents.FixedDocumentSequence.GetPaginator(System.Windows.Documents.DocumentReference docRef)\r\nPresentationFramework.dll!System.Windows.Documents.FixedDocumentSequence.PageCount.get()\r\nPresentationFramework.dll!System.Windows.Documents.FixedDocumentSequence._OnCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs args)\r\n[Native to Managed Transition]\r\n[Managed to Native Transition]\r\nSystem.Xaml.dll!System.Xaml.Schema.SafeReflectionInvoker.InvokeMethodCritical(System.Reflection.MethodInfo method, object instance, object[] args)\r\nSystem.Xaml.dll!System.Xaml.Schema.XamlTypeInvoker.AddToCollection(object instance, object item)\r\nSystem.Xaml.dll!MS.Internal.Xaml.Runtime.ClrObjectRuntime.Add(object collection, System.Xaml.XamlType collectionType, object value, System.Xaml.XamlType valueXamlType)\r\nSystem.Xaml.dll!System.Xaml.XamlObjectWriter.Logic_DoAssignmentToParentCollection(MS.Internal.Xaml.Context.ObjectWriterContext ctx)\r\nSystem.Xaml.dll!System.Xaml.XamlObjectWriter.WriteEndObject()\r\nPresentationFramework.dll!System.Windows.Markup.WpfXamlLoader.TransformNodes(System.Xaml.XamlReader xamlReader, System.Xaml.XamlObjectWriter xamlWriter, bool onlyLoadOneNode, bool skipJournaledProperties, bool shouldPassLineNumberInfo, System.Xaml.IXamlLineInfo xamlLineInfo, System.Xaml.IXamlLineInfoConsumer xamlLineInfoConsumer, MS.Internal.Xaml.Context.XamlContextStack<System.Windows.Markup.WpfXamlFrame> stack, System.Windows.Markup.IStyleConnector styleConnector)\r\nPresentationFramework.dll!System.Windows.Markup.WpfXamlLoader.Load(System.Xaml.XamlReader xamlReader, System.Xaml.IXamlObjectWriterFactory writerFactory, bool skipJournaledProperties, object rootObject, System.Xaml.XamlObjectWriterSettings settings, System.Uri baseUri)\r\nPresentationFramework.dll!System.Windows.Markup.WpfXamlLoader.Load(System.Xaml.XamlReader xamlReader, bool skipJournaledProperties, System.Uri baseUri)\r\nPresentationFramework.dll!System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader xamlReader, System.Windows.Markup.ParserContext parserContext)\r\nPresentationFramework.dll!System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader reader, System.Windows.Markup.ParserContext parserContext, System.Windows.Markup.XamlParseMode parseMode, bool useRestrictiveXamlReader)\r\nPresentationFramework.dll!System.Windows.Markup.XamlReader.Load(System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext, bool useRestrictiveXamlReader)\r\nReachFramework.dll!System.Windows.Xps.Packaging.XpsDocument.GetFixedDocumentSequence()\r\nWaf.Writer.Applications.dll!Waf.Writer.Applications.Controllers.PrintController.ShowPrintPreview()\r\nSystem.Waf.Core.dll!System.Waf.Applications.DelegateCommand..ctor.AnonymousMethod__0(object p)\r\nSystem.Waf.Core.dll!System.Waf.Applications.DelegateCommand.Execute(object parameter)\r\nPresentationFramework.dll!MS.Internal.Commands.CommandHelpers.CriticalExecuteCommandSource(System.Windows.Input.ICommandSource commandSource, bool userInitiated)\r\nPresentationFramework.dll!System.Windows.Controls.MenuItem.InvokeClickAfterRender(object arg)\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\r\nWindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\nWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(object obj)\r\nSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) Line 172\r\n\tat F:\\workspace\\_work\\1\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\ExecutionContext.cs(172)\r\nWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\r\nWindowsBase.dll!System.Windows.Threading.DispatcherOperation.Invoke()\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.ProcessQueue()\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.WndProcHook(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\r\nWindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\r\nWindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o)\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs)\r\nWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\r\n[Native to Managed Transition]\r\n[Managed to Native Transition]\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame frame)\r\nPresentationFramework.dll!System.Windows.Application.RunDispatcher(object ignore)\r\nPresentationFramework.dll!System.Windows.Application.RunInternal(System.Windows.Window window)\r\nWriter.dll!Waf.Writer.Presentation.App.Main()\r\n```","Url":"https://github.com/dotnet/wpf/issues/575","RelatedDescription":"Open issue \"XpsDocument.GetFixedDocumentSequence throws an exception\" (#575)"},{"Id":"432676664","IsPullRequest":false,"CreatedAt":"2019-04-12T17:50:20","Actor":"jbe2277","Number":"574","RawContent":null,"Title":"Microsoft.Win32.OpenFileDialog.ShowDialog does not work","State":"open","Body":"* .NET Core SDK: 3.0.100-preview5-011256 \\[e6f157e5a4\\]\r\n* Microsoft.WindowsDesktop.App 3.0.0-preview5-27610-56\r\n* VS 2019: 16.1.0 Preview 1.0\r\n* Windows version: Win10 1809 (Azure VM, connected via Remote Desktop)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\nCalling `Microsoft.Win32.OpenFileDialog.ShowDialog(ownerWindow)` does not work as expected. It does not show the dialog but returns immediately with `true`. The property FileName is set to empty string \"\".\r\n\r\n**Reproduce:**\r\n* Clone [https://github.com/jbe2277/waf.git](https://github.com/jbe2277/waf.git)\r\n* Checkout the **netcoreapp3.0** branch\r\n* Open `System.Waf.sln` in VS 2019.\r\n* Set `Samples/Writer/Writer.Presentation` as start-up project\r\n* Start the application and click on Open.\r\n\r\n**Expected:** The OpenFileDialog should be shown. You could compare this with the **master** branch (targets .NET 4.6.1)\r\n\r\n**Actual:** A error message comes from the application that a file with empty file name cannot be opened.","Url":"https://github.com/dotnet/wpf/issues/574","RelatedDescription":"Open issue \"Microsoft.Win32.OpenFileDialog.ShowDialog does not work\" (#574)"},{"Id":"432549591","IsPullRequest":true,"CreatedAt":"2019-04-12T12:53:25","Actor":"dotnet-maestro[bot]","Number":"573","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190411.18\r\n- **Date Produced**: 4/12/2019 7:20 AM\r\n- **Commit**: b159f4bf9614203a0c60a20f5469d5226f3f12e7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27611-18\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview5.19211.22 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/573","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#573)"},{"Id":"432533120","IsPullRequest":true,"CreatedAt":"2019-04-12T12:10:36","Actor":"dotnet-maestro[bot]","Number":"572","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190411.2\r\n- **Date Produced**: 4/11/2019 10:43 PM\r\n- **Commit**: e7b5230799a6db9121d90cf548d5a2313bd682dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19211.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19211.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/572","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#572)"},{"Id":"432363772","IsPullRequest":true,"CreatedAt":"2019-04-12T02:51:40","Actor":"ryalanms","Number":"571","RawContent":null,"Title":"Remove temporary files created by GenerateTemporaryTargetAssembly compilation","State":"open","Body":"GenerateTemporaryTargetAssembly creates intermediate files that should be deleted along with the temporary project when compilation is complete.  (Fixes #510)","Url":"https://github.com/dotnet/wpf/pull/571","RelatedDescription":"Open PR \"Remove temporary files created by GenerateTemporaryTargetAssembly compilation\" (#571)"},{"Id":"432330316","IsPullRequest":true,"CreatedAt":"2019-04-12T02:01:08","Actor":"ryalanms","Number":"570","RawContent":null,"Title":"BamlMapTable should always reinitialize KnownAssemblyInfoRecord","State":"closed","Body":"NETFX Regression: No longer can set name property to MarkupExtension in certain places #378.\r\n\r\nMove KnownAssemblyInfoRecord initialization out of BamlMapTable's static constructor to its constructor. (Fixes #378)","Url":"https://github.com/dotnet/wpf/pull/570","RelatedDescription":"Closed or merged PR \"BamlMapTable should always reinitialize KnownAssemblyInfoRecord\" (#570)"},{"Id":"432230754","IsPullRequest":false,"CreatedAt":"2019-04-11T20:44:20","Actor":"ryalanms","Number":"569","RawContent":null,"Title":"PresentationBuildTasks satellite assemblies need to be packed in to WindowsDesktop SDK","State":"closed","Body":"Localized resource assembly generation was added for PresentationBuildTasks.  These new localized resource assemblies ('satellite assemblies') need to be added to the WindowsDesktop SDK.  ","Url":"https://github.com/dotnet/wpf/issues/569","RelatedDescription":"Closed issue \"PresentationBuildTasks satellite assemblies need to be packed in to WindowsDesktop SDK\" (#569)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-17T05:30:47.173722Z","RunDurationInMilliseconds":466}