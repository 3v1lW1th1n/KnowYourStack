{"Data":{"Blog":{"FeedItems":[{"Title":"Help us plan the future of .NET!","PublishedOn":"2018-04-20T16:55:37+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"We’re currently planning our next major .NET releases and would love to hear your feedback on how you interact with .NET Framework and .NET Core today. Please fill out the survey below and help shape...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/20/help-us-plan-the-future-of-net/","RawContent":null},{"Title":"Performance Improvements in .NET Core 2.1","PublishedOn":"2018-04-18T19:29:45+00:00","CommentsCount":34,"FacebookCount":0,"Summary":"Back before .NET Core 2.0 shipped, I wrote a post highlighting various performance improvements in .NET Core 2.0 when compared with .NET Core 1.1 and the .NET Framework. As .NET Core 2.1 is in its...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/","RawContent":null},{"Title":".NET Highlights in Visual Studio 2017 version 15.7 Preview 4","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"As you know we continue to incrementally improve Visual Studio 2017 (version 15), and our 7th significant update is currently well under way with the 4th preview shipping today. As we’re winding down...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/visual-studio-2017-15-7-preview-4/","RawContent":null},{"Title":".NET Core April 2018 Update","PublishedOn":"2018-04-17T23:50:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2018 Update. This update includes .NET Core 1.0.11, 1.1.8 and 2.0.7. There are no new security fixes in this update. See April 2018 .NET Updates for other...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 2","PublishedOn":"2018-04-11T18:02:40+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today we’re releasing the second preview of EF Core 2.1, alongside .NET Core 2.1 Preview 2 and ASP.NET Core 2.1 Preview 2. Thank you so much to everyone who has tried our early builds and has helped...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-entity-framework-core-2-1-preview-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 2","PublishedOn":"2018-04-11T17:53:44+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 2. The release is now ready for broad testing, as we get closer to a final build within the next two to three months. We&#8217;d appreciate any feedback...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/","RawContent":null},{"Title":"Explore Azure Cosmos DB with .NET Core and MongoDB","PublishedOn":"2018-04-09T16:00:47+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Have you had to design general purpose &#8220;metadata&#8221; tables in your SQL database that basically store column names and values? Do you often serialize/de-serialize XML or JSON from your SQL...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/09/explore-cosmosdb-with-net-core-and-mongodb/","RawContent":null},{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":65,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7559882384","Type":"PullRequestEvent","CreatedAt":"2018-04-20T06:42:59","Actor":"Cheesebaron","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Opened pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project"},{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"},{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7575942861","Type":"PullRequestEvent","CreatedAt":"2018-04-24T04:42:25","Actor":"janvorli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17743","RelatedDescription":"Merged pull request \"Delete unused variables from CMakeLists.txt\" (#17743) at dotnet/coreclr","RelatedBody":""},{"Id":"7575430282","Type":"PullRequestEvent","CreatedAt":"2018-04-24T01:39:25","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17734","RelatedDescription":"Merged pull request \"Fix dotnet/corefx#29266\" (#17734) at dotnet/coreclr","RelatedBody":"@jkotas @adityamandaleeka Given I do not have a OSX platform to test.  This is my proposed fix.\r\n\r\nFixes dotnet/corefx#29266"},{"Id":"7575394207","Type":"PullRequestEvent","CreatedAt":"2018-04-24T01:26:52","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17749","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26424-01 (master)\" (#17749) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7575330229","Type":"PullRequestEvent","CreatedAt":"2018-04-24T01:04:30","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17748","RelatedDescription":"Opened pull request \"WIP NO MERGE dummy change\" (#17748) at dotnet/coreclr","RelatedBody":""},{"Id":"7575318435","Type":"PullRequestEvent","CreatedAt":"2018-04-24T01:00:20","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17721","RelatedDescription":"Closed pull request \"WIP NO MERGE dummy change\" (#17721) at dotnet/coreclr","RelatedBody":""},{"Id":"7575300075","Type":"PullRequestEvent","CreatedAt":"2018-04-24T00:54:02","Actor":"weshaggard","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17747","RelatedDescription":"Opened pull request \"Remove Alpine 3.6 builds\" (#17747) at dotnet/coreclr","RelatedBody":"The alpine 3.6 builds have been replaced with the more generic\r\nlinux-musl builds so removing them.\r\n\r\ncc @eerhardt @janvorli "},{"Id":"7575299057","Type":"PullRequestEvent","CreatedAt":"2018-04-24T00:53:42","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17746","RelatedDescription":"Merged pull request \"Fix Ubuntu arm corefx triggers: no cron trigger on build job\" (#17746) at dotnet/coreclr","RelatedBody":""},{"Id":"7575247212","Type":"PullRequestEvent","CreatedAt":"2018-04-24T00:35:02","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17746","RelatedDescription":"Opened pull request \"Fix Ubuntu arm corefx triggers: no cron trigger on build job\" (#17746) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7575976153","Type":"PullRequestEvent","CreatedAt":"2018-04-24T04:56:08","Actor":"dotnet-maestro-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9125","RelatedDescription":"Opened pull request \"Update clicommandlineparser, climigrate, coresetup, coresetup, coresetup, fsharp, roslyn, sdk, templating, templating, templating, websdk to alpha-62823-01, alpha-62823-01, rc1-26423-06, rc1-26423-06, rc1-26423-06, rtm-180422-0, beta4-62823-05, rc1-62823-01, beta3-20180422-1618305, beta3-20180422-1618305, beta3-20180422-1618305, rc1-20180422-1618307, respectively (release/2.1.3xx)\" (#9125) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7575092004","Type":"IssuesEvent","CreatedAt":"2018-04-23T23:43:43","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9124","RelatedDescription":"Opened issue \"do not set BaseIntermediateOutputPath in temp project of dotnet install\" (#9124) at dotnet/cli","RelatedBody":"After https://github.com/NuGet/NuGet.Client/pull/2131 and https://github.com/Microsoft/msbuild/pull/3059\r\n\r\nSet BaseIntermediateOutputPath after common target will cause target not loading correctly. And it will trigger warning. Use MSBuildProjectExtensionsPath and set that property instead.\r\n\r\n"},{"Id":"7574745410","Type":"PullRequestEvent","CreatedAt":"2018-04-23T22:04:14","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9123","RelatedDescription":"Opened pull request \"Mark both CLI NuPkgs as \"NonShipping=true\"\" (#9123) at dotnet/cli","RelatedBody":"Both 'Microsoft.DotNet.Cli.Utils.*.nupkg' and 'Microsoft.DotNet.MSBuildSdkResolver.*.nupkg' should not be published to NuGet.org; mark both NuPkgs as \"NonShipping=true\" Therefore, these NuPkgs will not be signed.\r\n"},{"Id":"7574674436","Type":"PullRequestEvent","CreatedAt":"2018-04-23T21:47:15","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9122","RelatedDescription":"Opened pull request \"do not set BaseIntermediateOutputPath in temp project of dotnet install\" (#9122) at dotnet/cli","RelatedBody":"Should use MsBuildProjectExtensionsPath instead.\r\n\r\n- Change the property passin by project file instead of command line. It is more reliable passing path in xml and also the timing of MsBuildProjectExtensionsPath is controlled. (Before loading SDK)\r\n- Change mock fake project to use “;” instead, since c:\\path contains “:”."},{"Id":"7574303317","Type":"IssuesEvent","CreatedAt":"2018-04-23T20:32:23","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9105","RelatedDescription":"Closed issue \"`dotnet.exe msbuild` exits code 1 even if MSBuild succeeds\" (#9105) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nSo far, this only reproduces on our Windows 2012 R2 machines, but **it is consistent**. I can get you access to a machine to investigate more.\r\n\r\nWe are trying to upgrade ASP.NET Core to build with the 2.1.300-preview3-008646 SDK. \r\nPreviously we were building with 2.1.300-preview2-008530. https://github.com/aspnet/BuildTools/commit/ed5ca9de3c652347dbb0158a9a65eff3471d2114\r\n\r\n## Expected  behavior\r\n\r\nExit code 0 when a build completes\r\n\r\n## Actual behavior\r\n\r\ndotnet.exe exits code 1, even though MSBuild succeeds.\r\n\r\n```\r\n[18:35:10]  EventNotification     | \r\n[18:35:10]  EventNotification     | Build succeeded.\r\n[18:35:10]  EventNotification     |     0 Warning(s)\r\n[18:35:10]  EventNotification     |     0 Error(s)\r\n[18:35:10]  EventNotification     | \r\n[18:35:10]  EventNotification     | Time Elapsed 00:00:37.68\r\n[18:35:11]  dotnet.exe failed with exit code: 1\r\n[18:35:11]  At C:\\b\\w\\6e78c7aba2f17cd5\\.dotnet\\buildtools\\korebuild\\2.1.0-rc1-15774\\scripts\r\n[18:35:11]  \\common.psm1:11 char:9\r\n[18:35:11]  +         throw \"$cmdName failed with exit code: $exitCode\"\r\n[18:35:11]  +         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n[18:35:11]      + CategoryInfo          : OperationStopped: (dotnet.exe failed with exit c \r\n[18:35:11]     ode: 1:String) [], RuntimeException\r\n[18:35:11]      + FullyQualifiedErrorId : dotnet.exe failed with exit code: 1\r\n```\r\n![image](https://user-images.githubusercontent.com/2696087/39026843-fbb3a498-4403-11e8-99fd-38668d8285e4.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n2.1.300-preview3-008646\r\n\r\ncc @muratg @pranavkm \r\n\r\n\r\n\r\n"},{"Id":"7574287644","Type":"PullRequestEvent","CreatedAt":"2018-04-23T20:29:30","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9097","RelatedDescription":"Merged pull request \"Add bundled aspnetcore runtime framework versions\" (#9097) at dotnet/cli","RelatedBody":"- Add integration test for implicit Microsoft.AspNetCore.App versions\r\n\r\nAddresses https://github.com/aspnet/Universe/issues/967. I'm adding the bundled AspNetCore runtime frameworks versions required by the Web SDK. I have run these tests locally but the PR's tests won't pass until we have a build with the Web SDK updates to ingest. We can review the PR but since it's ask mode, please wait for ship-room approval before merging. "},{"Id":"7574282138","Type":"IssuesEvent","CreatedAt":"2018-04-23T20:28:27","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9120","RelatedDescription":"Closed issue \"Need better warning/error message when ASP.NET Core 1.1 project is opened using CLI for .NET Core 2.1\" (#9120) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nWith VS 15.7 + CLI for .NET Core 2.1 (CLI 2.1.300 or higher) installed,\r\n\r\n1. Open ASP.NET Core 1.1 project that was created using a previous version of the CLI\r\n2. View Error list \r\n\r\n## Actual behavior\r\nYou see the warnings below\r\n![image](https://user-images.githubusercontent.com/8246794/39138907-a150cbaa-46d5-11e8-8300-340e4835f48b.png)\r\n\r\nFor the ASP.NET Core 1.1 / 1.0 cases, the warning shows the incorrect message. Removing the tool from csproj as suggested by the message will not put you in a working state. \r\n\r\n## Expected  behavior\r\n- Warning/Error should not say that the tools \"can be removed from this project\"\r\n- It should point to an fwlink where we explicitly ask the user to drop a global.json and pin their CLI version, assuming other places such as the build server will also have that pinned version of the CLI installed\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7574274823","Type":"IssuesEvent","CreatedAt":"2018-04-23T20:27:06","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9103","RelatedDescription":"Closed issue \"Remove -f short hand in dotnet tool install\" (#9103) at dotnet/cli","RelatedBody":"`--framework` usage in `dotnet tool install` and `update` is uncommon, it is not necessary to take the shorthand `-f`. And  `-f` can be used for future commands\r\n\r\nhttps://github.com/dotnet/cli/issues/9073#issuecomment-382138783\r\nhttps://github.com/dotnet/cli/issues/9064#issuecomment-382240361 \r\n"},{"Id":"7574257116","Type":"PullRequestEvent","CreatedAt":"2018-04-23T20:23:36","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9102","RelatedDescription":"Merged pull request \"Remove -f short hand in dotnet tool install\" (#9102) at dotnet/cli","RelatedBody":"fix https://github.com/dotnet/cli/issues/9103"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7568617377","Type":"IssuesEvent","CreatedAt":"2018-04-22T21:34:56","Actor":"EltonGarcia","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/716","RelatedDescription":"Opened issue \"MarkupExtension not found with net standard 2.0\" (#716) at dotnet/standard","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nMarkupExtension not found with net standard 2.0\r\n\r\n### Steps to Reproduce\r\n\r\n1. Clone the issue project sample (https://github.com/EltonGarcia/XamarinMarkupExtensionIssue)\r\n2. Build the project\r\n\r\n### Expected Behavior\r\nBuild successful\r\n\r\n### Actual Behavior\r\nBuild fails with error: Type design:HslColorExtension not found in xmlns clr-namespace:Design.Extensions;assembly:Design (MarkupIssue)\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.444934\r\n- Last known good version: ?\r\n- IDE: Visual Studio for Mac\r\n- Nuget Packages: Xamarin Forms and System.ComponentModel\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/EltonGarcia/XamarinMarkupExtensionIssue\r\n"},{"Id":"7558497238","Type":"PullRequestEvent","CreatedAt":"2018-04-19T22:28:34","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/715","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02719-03 (master)\" (#715) at dotnet/standard","RelatedBody":""},{"Id":"7558201336","Type":"PullRequestEvent","CreatedAt":"2018-04-19T21:18:29","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/714","RelatedDescription":"Merged pull request \"Mark 2.0.3 version of NETStandard.Library package stable\" (#714) at dotnet/standard","RelatedBody":"Release notes for 2.0.3:\r\n - Issue https://github.com/dotnet/standard/issues/708 Wrong reference path in NETStandard.Library.targets - fixed in https://github.com/dotnet/standard/pull/713"},{"Id":"7557781012","Type":"PullRequestEvent","CreatedAt":"2018-04-19T19:53:40","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/714","RelatedDescription":"Opened pull request \"Mark 2.0.3 version of NETStandard.Library package stable\" (#714) at dotnet/standard","RelatedBody":"Release notes for 2.0.3:\r\n - Issue https://github.com/dotnet/standard/issues/708 Wrong reference path in NETStandard.Library.targets - fixed in https://github.com/dotnet/standard/pull/713"},{"Id":"7557590498","Type":"PullRequestEvent","CreatedAt":"2018-04-19T19:16:00","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/713","RelatedDescription":"Merged pull request \"[release/2.0.0] Fix old project system warnings\" (#713) at dotnet/standard","RelatedBody":"When NETStandard.Library was referenced in a .NETFramework project using the old project system,\r\nit would evaluate the project ignoring conditions on ItemGroups. Apparently this is done to\r\ndisplay the superset of project configurations (eg both debug and release) in the solution heirarchy.\r\nThe warnings were a result of the items never being resolved after design time build finished\r\nresolving references (because of course the items were conditioned out for the target framework).\r\n\r\nWe can workaround this using choose/when. Apparently the evaluation of the project is bold\r\nenough to ignore the conditions on an itemgroup, but not bold enough to choose one of many\r\nwhen (or all) clauses. :)\r\n\r\nFixes #708\r\n\r\nRelease version of https://github.com/dotnet/standard/pull/710"},{"Id":"7557190776","Type":"IssuesEvent","CreatedAt":"2018-04-19T17:59:07","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/standard/issues/708","RelatedDescription":"Reopened issue \"Wrong reference path in NETStandard.Library.targets\" (#708) at dotnet/standard","RelatedBody":"@cannehag commented on [Thu Apr 12 2018](https://github.com/dotnet/core/issues/1440)\n\n# After installing NetStandard.Library 2.0.2, a lot of warning occur.\r\nNetStandard.Library.targets 2.0.2 have \r\n<Reference Include=\"$(MSBuildThisFileDirectory)\\ref\\Microsoft.Win32.Primitives.dll...\r\nAccording to documentation MSBuildThisFileDirectory will include a final slash, thus giving a path with double slash and the error message \r\nThe referenced component 'C:\\Users\\xxx\\.nuget\\packages\\netstandard.library\\2.0.2\\build\\netstandard2.0\\\\ref\\Microsoft.Win32.Primitives.dll could not be found'\r\n\r\nVersion 2.0.1 does not have this issue since the targets file is including *.dll from another path\r\n<ReferenceCopyLocalPaths Condition=\"'$(_NetStandardLibraryLibPath)' != ''\" Include=\"$(_NetStandardLibraryLibPath)*.dll\">\r\n\n\n---\n\n@elementalpete commented on [Mon Apr 16 2018](https://github.com/dotnet/core/issues/1440#issuecomment-381640157)\n\nI experienced the same issue after upgrading (path in warning message contains a double slash, actual path has only a single slash).  Downgrading to 2.0.1 solved the issue for now.\n\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7575992183","Type":"PullRequestEvent","CreatedAt":"2018-04-24T05:01:59","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29299","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx, CoreSetup to rc1-26423-02, rc1-26423-06, rc1-26423-06, respectively (release/2.1)\" (#29299) at dotnet/corefx","RelatedBody":""},{"Id":"7575986040","Type":"IssuesEvent","CreatedAt":"2018-04-24T04:59:57","Actor":"natemcmaster","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29298","RelatedDescription":"Opened issue \"Rollforward from .NET Core 2.0 to 2.1 throws with MissingMethodException when System.Memory package is referenced\" (#29298) at dotnet/corefx","RelatedBody":"**Conditions**\r\n\r\nAn application that is:\r\n - compiled against netcoreapp2.0\r\n - has a package reference to System.Memory (v4.5.0-rc1-26423-06)\r\n - runs on a machine **without** Microsoft.NETCore.App 2.0.x installed, but has a Microsoft.NETCore.App 2.1.0 version... \r\n\r\n**Result**\r\nThe application\r\n - rolls to execute on Microsoft.NETCore.App 2.1 ✅ , but\r\n - some System.IO apis throw MissingMethodException :x:\r\n\r\n```\r\nSystem.MissingMethodException: Method not found: '!!0 ByRef System.Runtime.InteropServices.MemoryMarshal.GetReference(System.Span`1<!!0>)'.\r\n   at Interop.Sys.LStat(ReadOnlySpan`1 path, FileStatus& output)\r\n   at System.IO.FileStatus.Refresh(ReadOnlySpan`1 path)\r\n   at System.IO.FileStatus.EnsureStatInitialized(ReadOnlySpan`1 path, Boolean continueOnError)\r\n   at System.IO.FileStatus.GetAttributes(ReadOnlySpan`1 path, ReadOnlySpan`1 fileName)\r\n   at System.IO.FileSystemInfo.get_Attributes()\r\n   at System.IO.FileInfo.get_Length()\r\n```\r\n\r\n**Repro**\r\nIn a directory, create 3 files, `Dockerfile`, `program.cs`, and `test.csproj` and run `docker build .`:\r\n\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.0-sdk as builder\r\nWORKDIR /code\r\nCOPY Program.cs .\r\nCOPY test.csproj .\r\nRUN dotnet publish -o pub/\r\n\r\nFROM microsoft/dotnet-nightly:2.1-runtime\r\nWORKDIR /app\r\nCOPY --from=builder /code/pub .\r\nRUN dotnet test.dll\r\n```\r\n```xml\r\n<!-- test.csproj-->\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <LangVersion>7.1</LangVersion>\r\n    <RestoreSources>\r\n      https://dotnet.myget.org/F/dotnet-core/api/v3/index.json;\r\n      https://api.nuget.org/v3/index.json;\r\n    </RestoreSources>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Memory\" Version=\"4.5.0-rc1-26423-06\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n```csharp\r\n// Program.cs\r\nusing System;\r\nusing System.IO;\r\n\r\nclass Program\r\n{\r\n    public static int Main(string[] args)\r\n    {\r\n        try\r\n        {\r\n            var path = Path.Combine(AppContext.BaseDirectory, \"test.txt\");\r\n            File.WriteAllText(path, \"hello\");\r\n            var fileinfo = new FileInfo(path);\r\n            Console.WriteLine(\"System.IO.File.Exists = \" + File.Exists(path));\r\n            Console.WriteLine(\"System.IO.FileInfo.Exists = \" + fileinfo.Exists);\r\n            Console.WriteLine(\"System.IO.FileInfo.FullName = \" + fileinfo.FullName);\r\n            Console.WriteLine(\"System.IO.FileInfo.Length = \" + fileinfo.Length);\r\n            return 0;\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            Console.Error.WriteLine(ex.ToString());\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Details**\r\nInside the container:\r\n```\r\ndotnet --info\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-rc1-26419-02\r\n  Commit:  515f580aa0\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.1.0-rc1-26419-02 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```"},{"Id":"7575737990","Type":"PullRequestEvent","CreatedAt":"2018-04-24T03:25:00","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29297","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to preview1-26424-01, preview3-26424-01, respectively (master)\" (#29297) at dotnet/corefx","RelatedBody":""},{"Id":"7575430271","Type":"IssuesEvent","CreatedAt":"2018-04-24T01:39:25","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29266","RelatedDescription":"Closed issue \"Reflection.Emit.ILGeneration.Tests test fails in CI for OSX\" (#29266) at dotnet/corefx","RelatedBody":"From https://github.com/dotnet/corefx/pull/29259\r\nhttps://mc.dot.net/#/user/dotnet-maestro-bot/pr~2Fjenkins~2Fdotnet~2Fcorefx~2Fmaster~2F/test~2Ffunctional~2Fcli~2F/b2c471b57bdf01d46ed9c2855b460880d2fc1c12/workItem/System.Reflection.Emit.ILGeneration.Tests/wilogs\r\nOSX.1012.Amd64.Open-x64:Debug\r\n System.Reflection.Emit.ILGeneration.Tests\r\n```text\r\n2018-04-21 07:07:20,391: INFO: proc(54): run_and_log_output: Output: Discovering: System.Reflection.Emit.ILGeneration.Tests\r\n2018-04-21 07:07:20,532: INFO: proc(54): run_and_log_output: Output: Discovered:  System.Reflection.Emit.ILGeneration.Tests\r\n2018-04-21 07:07:20,595: INFO: proc(54): run_and_log_output: Output: Starting:    System.Reflection.Emit.ILGeneration.Tests\r\n2018-04-21 07:07:20,824: INFO: proc(54): run_and_log_output: Output: 0\r\n2018-04-21 07:07:20,824: INFO: proc(54): run_and_log_output: Output: emitWriteLine\r\n2018-04-21 07:07:20,824: INFO: proc(54): run_and_log_output: Output: False\r\n2018-04-21 07:07:26,786: INFO: proc(54): run_and_log_output: Output: /Users/dotnet-bot/dotnetbuild/work/e9b67638-12f9-4fe2-9c10-da8dac0aea76/Work/bf31de7e-072c-41df-a5da-15dd5fe59d9c/Unzip/RunTests.sh: line 129: 87728 Segmentation fault: 11  (core dumped) $RUNTIME_PATH/dotnet xunit.console.netcore.exe System.Reflection.Emit.ILGeneration.Tests.dll -xml testResults.xml -notrait Benchmark=true -notrait category=nonnetcoreapptests -notrait category=nonosxtests -notrait category=OuterLoop -notrait category=failing\r\n2018-04-21 07:07:27,085: INFO: proc(54): run_and_log_output: Output: Traceback (most recent call last):\r\n2018-04-21 07:07:27,085: INFO: proc(54): run_and_log_output: Output:   File \"/Users/dotnet-bot/.dumpling/dumpling.py\", line 33, in <module>\r\n2018-04-21 07:07:27,085: INFO: proc(54): run_and_log_output: Output:     import psutil\r\n2018-04-21 07:07:27,085: INFO: proc(54): run_and_log_output: Output: ImportError: No module named psutil\r\n2018-04-21 07:07:27,096: INFO: proc(54): run_and_log_output: Output: Trying to find crash dumps for project: System.Reflection.Emit.ILGeneration.Tests\r\n2018-04-21 07:07:27,096: INFO: proc(54): run_and_log_output: Output: Uploading dump file: /Users/dotnet-bot/dotnetbuild/work/e9b67638-12f9-4fe2-9c10-da8dac0aea76/Work/bf31de7e-072c-41df-a5da-15dd5fe59d9c/Unzip/core.87728\r\n2018-04-21 07:07:27,103: INFO: proc(54): run_and_log_output: Output: ~/dotnetbuild/work/e9b67638-12f9-4fe2-9c10-da8dac0aea76/Work/bf31de7e-072c-41df-a5da-15dd5fe59d9c/Unzip\r\n2018-04-21 07:07:27,107: INFO: proc(54): run_and_log_output: Output: ----- end 07:07:27 ----- exit code 139 ----------------------------------------------------------\r\n2018-04-21 07:07:27,107: INFO: proc(54): run_and_log_output: Output: exit code 139 means SIGSEGV Illegal memory access. Deref invalid pointer, overrunning buffer, stack overflow etc. Core dumped.\r\n2018-04-21 07:07:27,111: INFO: proc(58): run_and_log_output: Exit Code: 139\r\n2018-04-21 07:07:27,111: ERROR: scriptrunner(91): _main: Error: No exception thrown, but XUnit results not created\r\n2018-04-21 07:07:27,111: ERROR: helix_test_execution(83): report_error: Error running xunit None\r\n```"},{"Id":"7575388320","Type":"PullRequestEvent","CreatedAt":"2018-04-24T01:24:52","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29297","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26424-01 (master)\" (#29297) at dotnet/corefx","RelatedBody":""},{"Id":"7575301044","Type":"PullRequestEvent","CreatedAt":"2018-04-24T00:54:23","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29296","RelatedDescription":"Opened pull request \"Disable StartInfo_TextFile_ShellExecute for NETFX\" (#29296) at dotnet/corefx","RelatedBody":"Relates to https://github.com/dotnet/corefx/issues/20388\r\n\r\nIt's now disabled for several platforms, and for 3 frameworks, but still has value running for netcoreapp where it seems to be stable currently.\r\n\r\nMultiple ActiveIssue attributes are allowed."},{"Id":"7575274236","Type":"IssuesEvent","CreatedAt":"2018-04-24T00:44:50","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/20388","RelatedDescription":"Reopened issue \"Desktop: System.Diagnostics.Tests.ProcessStartInfoTests.StartInfo_TextFile_ShellExecute failed with \"System.NullReferenceException\"\" (#20388) at dotnet/corefx","RelatedBody":"Failed test: System.Diagnostics.Tests.ProcessStartInfoTests.StartInfo_TextFile_ShellExecute (from System.Diagnostics.Process.Tests) \r\n\r\nDetail: https://ci.dot.net/job/dotnet_corefx/job/master/job/outerloop_netfx_windows_nt_debug/67/testReport/System.Diagnostics.Tests/ProcessStartInfoTests/StartInfo_TextFile_ShellExecute/\r\n\r\nConfiguration: outerloop_netfx_windows_nt_debug\r\n\r\nMESSAGE:\r\n~~~\r\nSystem.NullReferenceException : Object reference not set to an instance of an object.\r\n~~~\r\nSTACK TRACE:\r\n~~~\r\nat System.Diagnostics.Tests.ProcessStartInfoTests.StartInfo_TextFile_ShellExecute() \r\nin D:\\j\\workspace\\outerloop_net---903ddde6\\src\\System.Diagnostics.Process\\tests\\ProcessStartInfoTests.cs:line 1013\r\n~~~"},{"Id":"7575266298","Type":"PullRequestEvent","CreatedAt":"2018-04-24T00:41:55","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29286","RelatedDescription":"Merged pull request \"Always use DnsEndPoint in SocketHttpHandler's ConnectAsync\" (#29286) at dotnet/corefx","RelatedBody":"We had a minor optimization here, but there's a long-standing issue with Socket.ConnectAsync where it's leaving for finalization a socket when the connect with an IP address fails.  It's more important to address that issue, and using DnsEndPoint does so (it's also the code we want, anyway).\r\n\r\nContributes to https://github.com/dotnet/corefx/issues/26517\r\nContributes to https://github.com/dotnet/corefx/issues/29285\r\n\r\ncc: @geoffkizer, @davidsh "},{"Id":"7575262408","Type":"PullRequestEvent","CreatedAt":"2018-04-24T00:40:30","Actor":"weshaggard","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29295","RelatedDescription":"Opened pull request \"Remove Alpine 3.6 builds\" (#29295) at dotnet/corefx","RelatedBody":"The alpine 3.6 builds have been replaced with the more generic\r\nlinux-musl builds so removing them.\r\n\r\ncc @eerhardt @janvorli "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7575865999","Type":"PullRequestEvent","CreatedAt":"2018-04-24T04:10:41","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26356","RelatedDescription":"Opened pull request \"Handle nested nullability in assignments and local declarations\" (#26356) at dotnet/roslyn","RelatedBody":""},{"Id":"7575834990","Type":"PullRequestEvent","CreatedAt":"2018-04-24T03:59:36","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26355","RelatedDescription":"Opened pull request \"Add support for generating fields/properties for property patterns.\" (#26355) at dotnet/roslyn","RelatedBody":"Fixes #9090\r\n\r\nReopening https://github.com/dotnet/roslyn/pull/10873"},{"Id":"7575435963","Type":"PullRequestEvent","CreatedAt":"2018-04-24T01:41:17","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26301","RelatedDescription":"Closed pull request \"Fix issue where a write wasn't detected in make-readonly.\" (#26301) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/26262"},{"Id":"7575426641","Type":"PullRequestEvent","CreatedAt":"2018-04-24T01:38:06","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26339","RelatedDescription":"Merged pull request \"Use ITextBufferCloneService if available in AsText\" (#26339) at dotnet/roslyn","RelatedBody":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/604150\r\n\r\n/cc @minestarks\r\n\r\n### Customer scenario\r\n\r\nA customer attempts to reformat an HTML document, and Visual Studio crashes. Pasting the following into an HTML document will reproduce the issue.\r\n\r\n```html\r\n<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <title></title>\r\n    <script>    \r\n        function foo() {}\r\n    </script>\r\n</head>\r\n<body>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n### Bugs this fixes\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/604150\r\n\r\n### Workarounds, if any\r\n\r\nNone.\r\n\r\n### Risk\r\n\r\nLow. Of multiple possible places to fix the sequence of events leading to a product crash, this one provides the strongest assurances that 15.7 release will continue to behave like 15.6 w.r.t. text differencing.\r\n\r\n### Performance impact\r\n\r\nAside from fixing a possible crash, performance is improved in the impacted scenarios by allowing the use of `ITextBufferCloneService` rather than falling back to the slower path.\r\n\r\n### Is this a regression from a previous update?\r\n\r\nYes, introduced by #25558.\r\n\r\n### Root cause analysis\r\n\r\nTwo changes in the causal PR resulted in a behavior change:\r\n\r\n* The `AsText(ITextSnapshot)` extension method failed to use the `ITextBufferCloneService` assigned to the source text buffer for the snapshot.\r\n* Roslyn only uses text buffers created by `ITextBufferFactoryService`. The TypeScript implementation, on the other hand, uses projection buffers created by `IProjectionBufferFactoryService`. The events notifying extension code that a buffer is created differs for these two services.\r\n\r\nWhile the fallback behavior of Roslyn was intended to be slower but functionally equivalent, the text differencing algorithm differed between the two approaches - the one used when `ITextBufferCloneService` was not available threw an exception if the set of changes made to a buffer were not ordered.\r\n\r\n### How was the bug found?\r\n\r\nDogfooding / reported by TypeScript team\r\n\r\n### Test documentation updated?\r\n\r\nN/A"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7576031342","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:16:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/issues/5742","RelatedDescription":"Reopened issue \"Link error occured when sample code build\" (#5742) at dotnet/corert","RelatedBody":"I tring to build corert sample project in https://github.com/dotnet/corert/tree/master/samples/HelloWorld, but link error is occured\r\n\r\n```jerry@orange-Samsung-DeskTop-System:~/Downloads/Test/HelloWorld$ dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 15.6.84.34536 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for /home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj...\r\n  Generating MSBuild file /home/jerry/Downloads/Test/HelloWorld/obj/HelloWorld.csproj.nuget.g.targets.\r\n  Restore completed in 1.24 sec for /home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj.\r\n  HelloWorld -> /home/jerry/Downloads/Test/HelloWorld/bin/release/netcoreapp2.0/linux-x64/HelloWorld.dll\r\n  /usr/bin/clang-3.9\r\n  Generating native code\r\n  /usr/bin/ld: cannot find -lcurl\r\n  /usr/bin/ld: cannot find -lgssapi_krb5\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj]\r\n/home/jerry/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/build/Microsoft.NETCore.Native.targets(219,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.0/linux-x64/native/HelloWorld.o\" -o \"bin/release/netcoreapp2.0/linux-x64/native/HelloWorld\" /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/sdk/libbootstrapper.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/sdk/libRuntime.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/sdk/libSystem.Private.CoreLib.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Globalization.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.IO.Compression.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Net.Http.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Net.Security.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -pthread -lstdc++ -ldl -lm -lcurl -lz -lgssapi_krb5 -lrt\" exited with code 1. [/home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj]\r\n```"},{"Id":"7576021575","Type":"PullRequestEvent","CreatedAt":"2018-04-24T05:12:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5743","RelatedDescription":"Merged pull request \"Respect allowReentrantWait in PalCompatibleWaitAny\" (#5743) at dotnet/corert","RelatedBody":"Fixes #5736"},{"Id":"7576021567","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:12:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5736","RelatedDescription":"Closed issue \"GC in GCLatencyMode.Interactive mode causes the app hang\" (#5736) at dotnet/corert","RelatedBody":"This is call stack from attached VS2017 debugger\r\n```\r\n     [External Code]    \r\n>    Core2D.Avalonia.exe!PalCompatibleWaitAny(unsigned int alertable, unsigned int timeout, unsigned int handleCount, void * * pHandles, unsigned int allowReentrantWait) Line 225    C++\r\n     Core2D.Avalonia.exe!CLREventStatic::Wait(unsigned int dwMilliseconds, bool bAlertable, bool bAllowReentrantWait) Line 107    C++\r\n     Core2D.Avalonia.exe!Thread::WaitForGC(void * pTransitionFrame) Line 90    C++\r\n     [Inline Frame] Core2D.Avalonia.exe!Thread::ReversePInvokeAttachOrTrapThread(ReversePInvokeFrame *) Line 1203    C++\r\n     Core2D.Avalonia.exe!RhpReversePInvokeAttachOrTrapThread2(ReversePInvokeFrame * pFrame) Line 1365    C++\r\n     [External Code]    \r\n     Core2D.Avalonia.exe!PalCompatibleWaitAny(unsigned int alertable, unsigned int timeout, unsigned int handleCount, void * * pHandles, unsigned int allowReentrantWait) Line 225    C++\r\n     Core2D.Avalonia.exe!CLREventStatic::Wait(unsigned int dwMilliseconds, bool bAlertable, bool bAllowReentrantWait) Line 107    C++\r\n     Core2D.Avalonia.exe!Thread::WaitForGC(void * pTransitionFrame) Line 90    C++\r\n     [Inline Frame] Core2D.Avalonia.exe!Thread::ReversePInvokeAttachOrTrapThread(ReversePInvokeFrame *) Line 1203    C++\r\n     Core2D.Avalonia.exe!RhpReversePInvokeAttachOrTrapThread2(ReversePInvokeFrame * pFrame) Line 1365    C++\r\n     [External Code]    \r\n     Core2D.Avalonia.exe!PalCompatibleWaitAny(unsigned int alertable, unsigned int timeout, unsigned int handleCount, void * * pHandles, unsigned int allowReentrantWait) Line 225    C++\r\n     Core2D.Avalonia.exe!CLREventStatic::Wait(unsigned int dwMilliseconds, bool bAlertable, bool bAllowReentrantWait) Line 107    C++\r\n     Core2D.Avalonia.exe!Thread::WaitForGC(void * pTransitionFrame) Line 90    C++\r\n     [Inline Frame] Core2D.Avalonia.exe!Thread::ReversePInvokeAttachOrTrapThread(ReversePInvokeFrame *) Line 1203    C++\r\n     Core2D.Avalonia.exe!RhpReversePInvokeAttachOrTrapThread2(ReversePInvokeFrame * pFrame) Line 1365    C++\r\n     [External Code]    \r\n     Core2D.Avalonia.exe!PalCompatibleWaitAny(unsigned int alertable, unsigned int timeout, unsigned int handleCount, void * * pHandles, unsigned int allowReentrantWait) Line 225    C++\r\n     Core2D.Avalonia.exe!CLREventStatic::Wait(unsigned int dwMilliseconds, bool bAlertable, bool bAllowReentrantWait) Line 107    C++\r\n     Core2D.Avalonia.exe!Thread::WaitForGC(void * pTransitionFrame) Line 90    C++\r\n     [Inline Frame] Core2D.Avalonia.exe!Thread::ReversePInvokeAttachOrTrapThread(ReversePInvokeFrame *) Line 1203    C++\r\n     Core2D.Avalonia.exe!RhpReversePInvokeAttachOrTrapThread2(ReversePInvokeFrame * pFrame) Line 1365    C++\r\n     [External Code]    \r\n     Core2D.Avalonia.exe!PalCompatibleWaitAny(unsigned int alertable, unsigned int timeout, unsigned int handleCount, void * * pHandles, unsigned int allowReentrantWait) Line 225    C++\r\n     Core2D.Avalonia.exe!CLREventStatic::Wait(unsigned int dwMilliseconds, bool bAlertable, bool bAllowReentrantWait) Line 107    C++\r\n     Core2D.Avalonia.exe!Thread::WaitForGC(void * pTransitionFrame) Line 90    C++\r\n     [Inline Frame] Core2D.Avalonia.exe!Thread::ReversePInvokeAttachOrTrapThread(ReversePInvokeFrame *) Line 1203    C++\r\n     Core2D.Avalonia.exe!RhpReversePInvokeAttachOrTrapThread2(ReversePInvokeFrame * pFrame) Line 1365    C++\r\n     [External Code]    \r\n     Core2D.Avalonia.exe!PalCompatibleWaitAny(unsigned int alertable, unsigned int timeout, unsigned int handleCount, void * * pHandles, unsigned int allowReentrantWait) Line 225    C++\r\n     Core2D.Avalonia.exe!CLREventStatic::Wait(unsigned int dwMilliseconds, bool bAlertable, bool bAllowReentrantWait) Line 107    C++\r\n     Core2D.Avalonia.exe!WKS::gc_heap::user_thread_wait(CLREventStatic * event, unsigned int no_mode_change, int time_out_ms) Line 543    C++\r\n     [Inline Frame] Core2D.Avalonia.exe!WKS::gc_heap::wait_to_proceed() Line 26825    C++\r\n     [Inline Frame] Core2D.Avalonia.exe!WKS::gc_heap::do_background_gc() Line 26855    C++\r\n     Core2D.Avalonia.exe!WKS::gc_heap::garbage_collect(int n) Line 16852    C++\r\n     Core2D.Avalonia.exe!WKS::GCHeap::GarbageCollectGeneration(unsigned int gen, gc_reason reason) Line 35231    C++\r\n     Core2D.Avalonia.exe!WKS::gc_heap::try_allocate_more_space(alloc_context * acontext, unsigned __int64 size, int gen_number) Line 13083    C++\r\n     [Inline Frame] Core\r\n```\r\n\r\nThis is my code where it hangs: https://github.com/wieslawsoltes/Core2D/blob/b1a1267b45a886f277580a0d62d24592179bc470/src/Core2D.Editor/ProjectEditor.Impl.cs#L182-L188\r\n\r\nWhen I set this flag:\r\n```\r\nSystem.Runtime.GCSettings.LatencyMode = System.Runtime.GCLatencyMode.Batch;\r\n```\r\nthan the app works.\r\n\r\nNuGet: microsoft.dotnet.ilcompiler.1.0.0-alpha-26421-01\r\n\r\n![devenv_2018-04-22_13-03-10](https://user-images.githubusercontent.com/2297442/39094314-dbe13e88-462d-11e8-9411-59e9dabe38fc.png)\r\n![devenv_2018-04-22_13-03-38](https://user-images.githubusercontent.com/2297442/39094315-dbff0e0e-462d-11e8-9e1d-a49603f9cae2.png)\r\n![devenv_2018-04-22_13-03-45](https://user-images.githubusercontent.com/2297442/39094316-dc1bcd82-462d-11e8-8bc1-23225eecd574.png)\r\n"},{"Id":"7576006868","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:06:53","Actor":"Reevid","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5742","RelatedDescription":"Closed issue \"Link error occured when sample code build\" (#5742) at dotnet/corert","RelatedBody":"I tring to build corert sample project in https://github.com/dotnet/corert/tree/master/samples/HelloWorld, but link error is occured\r\n\r\n```jerry@orange-Samsung-DeskTop-System:~/Downloads/Test/HelloWorld$ dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 15.6.84.34536 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for /home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj...\r\n  Generating MSBuild file /home/jerry/Downloads/Test/HelloWorld/obj/HelloWorld.csproj.nuget.g.targets.\r\n  Restore completed in 1.24 sec for /home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj.\r\n  HelloWorld -> /home/jerry/Downloads/Test/HelloWorld/bin/release/netcoreapp2.0/linux-x64/HelloWorld.dll\r\n  /usr/bin/clang-3.9\r\n  Generating native code\r\n  /usr/bin/ld: cannot find -lcurl\r\n  /usr/bin/ld: cannot find -lgssapi_krb5\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj]\r\n/home/jerry/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/build/Microsoft.NETCore.Native.targets(219,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.0/linux-x64/native/HelloWorld.o\" -o \"bin/release/netcoreapp2.0/linux-x64/native/HelloWorld\" /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/sdk/libbootstrapper.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/sdk/libRuntime.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/sdk/libSystem.Private.CoreLib.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Globalization.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.IO.Compression.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Net.Http.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Net.Security.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -pthread -lstdc++ -ldl -lm -lcurl -lz -lgssapi_krb5 -lrt\" exited with code 1. [/home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj]\r\n```"},{"Id":"7575895844","Type":"PullRequestEvent","CreatedAt":"2018-04-24T04:22:53","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5743","RelatedDescription":"Opened pull request \"Respect allowReentrantWait in PalCompatibleWaitAny\" (#5743) at dotnet/corert","RelatedBody":"Fixes #5736"},{"Id":"7575609417","Type":"IssuesEvent","CreatedAt":"2018-04-24T02:40:32","Actor":"Reevid","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5742","RelatedDescription":"Opened issue \"Link error occured when sample code build\" (#5742) at dotnet/corert","RelatedBody":"I tring to build corert sample project in https://github.com/dotnet/corert/tree/master/samples/HelloWorld, but link error is occured\r\n\r\n```jerry@orange-Samsung-DeskTop-System:~/Downloads/Test/HelloWorld$ dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 15.6.84.34536 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for /home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj...\r\n  Generating MSBuild file /home/jerry/Downloads/Test/HelloWorld/obj/HelloWorld.csproj.nuget.g.targets.\r\n  Restore completed in 1.24 sec for /home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj.\r\n  HelloWorld -> /home/jerry/Downloads/Test/HelloWorld/bin/release/netcoreapp2.0/linux-x64/HelloWorld.dll\r\n  /usr/bin/clang-3.9\r\n  Generating native code\r\n  /usr/bin/ld: cannot find -lcurl\r\n  /usr/bin/ld: cannot find -lgssapi_krb5\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj]\r\n/home/jerry/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/build/Microsoft.NETCore.Native.targets(219,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.0/linux-x64/native/HelloWorld.o\" -o \"bin/release/netcoreapp2.0/linux-x64/native/HelloWorld\" /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/sdk/libbootstrapper.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/sdk/libRuntime.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/sdk/libSystem.Private.CoreLib.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Globalization.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.IO.Compression.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Net.Http.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Net.Security.Native.a /home/jerry/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26424-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -pthread -lstdc++ -ldl -lm -lcurl -lz -lgssapi_krb5 -lrt\" exited with code 1. [/home/jerry/Downloads/Test/HelloWorld/HelloWorld.csproj]```"},{"Id":"7574851665","Type":"PullRequestEvent","CreatedAt":"2018-04-23T22:31:58","Actor":"luqunl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5741","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5741) at dotnet/corert","RelatedBody":""},{"Id":"7574554728","Type":"PullRequestEvent","CreatedAt":"2018-04-23T21:22:00","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5741","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5741) at dotnet/corert","RelatedBody":""},{"Id":"7574137951","Type":"PullRequestEvent","CreatedAt":"2018-04-23T20:00:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5740","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5740) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7573811835","Type":"PullRequestEvent","CreatedAt":"2018-04-23T18:56:24","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5740","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5740) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7573477708","Type":"PullRequestEvent","CreatedAt":"2018-04-23T17:53:49","Actor":"tarekgh","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5739","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5739) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7573303590","Type":"PullRequestEvent","CreatedAt":"2018-04-23T17:21:56","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5739","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5739) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7575119234","Type":"PullRequestEvent","CreatedAt":"2018-04-23T23:52:56","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2174","RelatedDescription":"Opened pull request \"Set ProjectAssetsFile property in SDK if it's not already set\" (#2174) at dotnet/sdk","RelatedBody":"Fixes #2173"},{"Id":"7575093142","Type":"IssuesEvent","CreatedAt":"2018-04-23T23:44:07","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2173","RelatedDescription":"Opened issue \"Fix breaking change from removal of SDK defaulting ProjectAssetsFile\" (#2173) at dotnet/sdk","RelatedBody":"See #2170.  With #2010, we introduced a breaking change in a scenario that was not supported, but could sometimes work.  We decided to fix the breaking change for 2.1.3xx, which we'll track with this bug.  Separately, we will probably bring back the breaking change, making sure that we have a clear error or warning message, in a subsequent release.  We'll track that with #2170."},{"Id":"7572969406","Type":"IssuesEvent","CreatedAt":"2018-04-23T16:19:57","Actor":"Pilchie","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2172","RelatedDescription":"Opened issue \".net core  dll as a reference behaves differently from .net\" (#2172) at dotnet/sdk","RelatedBody":"_From @karelz on April 21, 2018 17:40_\n\n_From @ankgupta067 on April 16, 2018 12:25_\n\ncreate a .net standard dll , name it as Paas dll, and change the output path ..\\Output\\\r\n\r\nadd a class logger like below-\r\n\r\n```c#\r\npublic class Logger \r\n    {\r\n        public void LogMessage()\r\n        {\r\n            Console.Write(\"test\");\r\n        }\r\n    }\r\n```\r\n\r\nNow create another .net core console project in solution and add dll as a refrence ( not project refrence) for pass.dll and make copy local to false.\r\n\r\nAlso change output directory of console app to ..\\Output\\\r\n\r\nadd below code in console app -\r\n\r\n ```c#\r\nvar logger = new Logger();\r\n  logger.LogMessage();\r\n  Console.Read();\r\n```\r\n\r\nBuild and run .net core app, but now application goes in break mode with below error\r\n\r\n```\r\nCould not load file or assembly 'Paas, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified.\r\n```\r\n\r\nBut if you perform same steps with .net framework 4.6.1 projects it works, why this different behavior with .net core exists and how to fix it?\r\n\r\nGithub project for more clarity -\r\nhttps://github.com/ankgupta067/DependencyInjection\r\n\r\n[EDIT] Change code & exception formatting by @karelz\n\n_Copied from original issue: dotnet/corefx#29143_\n\n_Copied from original issue: dotnet/project-system#3487_"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"987375741204508673","CreatedAt":"2018-04-20T17:01:35+00:00","UserScreenname":"dotnet","Text":"Help us plan the future of .NET! https://t.co/R0QoZVvXx4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":124,"FavoriteCount":93,"RawContent":null},{"Id":"986692696507953152","CreatedAt":"2018-04-18T19:47:25+00:00","UserScreenname":"dotnet","Text":"Performance Improvements in .NET Core 2.1 https://t.co/6YMK8P99cZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":248,"FavoriteCount":152,"RawContent":null},{"Id":"986692437211987969","CreatedAt":"2018-04-18T19:46:23+00:00","UserScreenname":"dotnet","Text":"Announcing Visual Studio 2017 15.7 Preview 4 https://t.co/XYIzXNDMhn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null},{"Id":"986400394786914304","CreatedAt":"2018-04-18T00:25:55+00:00","UserScreenname":"dotnet","Text":".NET Core April 2018 Update https://t.co/PuT2Jc7GBy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":70,"FavoriteCount":32,"RawContent":null},{"Id":"985915431499259904","CreatedAt":"2018-04-16T16:18:50+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz and his pair-programming guest @fiercekittenz tomorrow for some LIVE CODING and discussion ab… https://t.co/Vll8gfdlKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-04-24T05:30:22.5133582Z","RunDurationInMilliseconds":7958}