{"Data":{"Blog":{"FeedItems":[{"Title":"Podcast: Android 8.1, Xamarin Device Manager, and Visual Studio versions 15.5 & 15.6","PublishedOn":"2018-01-12T20:59:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover Android 8.1, the new Xamarin Device Manager Preview, what&#8217;s new for mobile developers in Visual Studio versions 15.5/15.6,...","Href":"https://blog.xamarin.com/podcast-android-8-1-xamarin-device-manager-visual-studio-versions-15-5-15-6/","RawContent":null},{"Title":"Xamarin.Android Now Double Stuffed with Oreo 8.1","PublishedOn":"2018-01-11T19:55:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android Oreo 8.1 introduces new features, including Android Go, Neural Networks API, Autofill framework enhancements, SharedMemory API, and many more. We&#8217;re excited to announce Xamarin.Android...","Href":"https://blog.xamarin.com/xamarin-android-now-double-stuffed-with-oreo-8-1/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-11T14:55:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join Mark Smith, Director of Xamarin University, on Thursday, January 25 at 9 am PT / 12 pm ET / 5 pm GMT to learn how to automate your app development pipeline with Visual Studio App Center. You’ll...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Preview Available Today!","PublishedOn":"2018-01-10T19:16:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last month, we released Visual Studio 2017 version 15.5, which came with awesome new features, including the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-preview-available-today/","RawContent":null},{"Title":"Delivering Rich Media Experiences with the Xamarin.Forms Video Player","PublishedOn":"2018-01-09T18:42:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Adam Fisher. Adam is the founder of Octane Software, focused on the creation of consumer Internet products. You can find Adam on Twitter at @adamgfisher and on Github at...","Href":"https://blog.xamarin.com/delivering-rich-media-experiences-xamarin-forms-video-player/","RawContent":null},{"Title":"Colonial Life Drives Field Sales Productivity with .NET, Mobile, and DevOps","PublishedOn":"2018-01-05T19:59:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET community is millions of developers strong, with people around the world turning ideas into apps across web, mobile, desktop, and the newest connected device platforms. Colonial Life’s...","Href":"https://blog.xamarin.com/colonial-life-drives-field-sales-productivity-net-mobile-devops/","RawContent":null},{"Title":"CoreML Programming with Xamarin.Mac and F#","PublishedOn":"2018-01-04T18:08:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Xamarin technologies are most commonly used to develop mobile applications, Xamarin.Mac makes it easy to use your preferred .NET language to develop desktop Mac apps. There are many C#...","Href":"https://blog.xamarin.com/coreml-programming-xamarin-mac-f/","RawContent":null},{"Title":"Xamarin Developer Events This January","PublishedOn":"2018-01-03T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s only the beginning of the year, but there are already many opportunities to get out and start building on your mobile app development education! Network with local user groups to learn...","Href":"https://blog.xamarin.com/xamarin-developer-events-january/","RawContent":null},{"Title":"The Top 12 Xamarin Blog Posts of 2017","PublishedOn":"2018-01-02T20:36:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2017 marked our first full year as part of the Microsoft family. Along the way, we saw new operating systems, new devices, and updates to the tools we use every day, and the many authors behind the...","Href":"https://blog.xamarin.com/top-12-xamarin-blog-posts-2017/","RawContent":null},{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7098083229","Type":"IssuesEvent","CreatedAt":"2018-01-15T02:13:39","Actor":"borrrden","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1194","RelatedDescription":"Opened issue \"Runtime unable to handle certain IL\" (#1194) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nConsider the following struct:\r\n\r\n```c#\r\nunsafe partial struct C4BlobKey\r\n{\r\n    public fixed byte bytes[20];\r\n}\r\n```\r\n\r\nand a corresponding C struct\r\n\r\n```c\r\ntypedef struct C4BlobKey {\r\n    uint8_t bytes[20];\r\n} C4BlobKey;\r\n```\r\n\r\nI want to determine equality so I write the following `Equals()` function:\r\n\r\n```c#\r\npublic override bool Equals(object obj)\r\n{\r\n    if(!(obj is C4BlobKey)) {\r\n        return false;\r\n    }\r\n\r\n    var other = (C4BlobKey)obj;\r\n    fixed(byte* b = bytes) {\r\n        for(int i = 0; i < _Size; i++) {\r\n            if(b[i] != other.bytes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n }\r\n```\r\n\r\nDebug and release mode both have the same following symptoms, but obviously with different lines since the release mode is optimized.\r\n\r\n> Invalid IL code in LiteCore.Interop.C4BlobKey.Equals (object); IL_001c: stloc.2\r\n\r\nIn fact I have to instances of this type of class that do similar things and they both fail in the same way.  Here is the IL code (up to around the line in question):\r\n\r\n    .method public hidebysig virtual instance bool \r\n    Equals(\r\n      object obj\r\n    ) cil managed \r\n    {\r\n    .maxstack 3\r\n    .locals init (\r\n      [0] valuetype LiteCore.Interop.C4BlobKey other,\r\n      [1] unsigned int8* b,\r\n      [2] unsigned int8*& pinned V_2,\r\n      [3] int32 i\r\n    )\r\n\r\n    // [51 13 - 51 36]\r\n    IL_0000: ldarg.1      // obj\r\n    IL_0001: isinst       LiteCore.Interop.C4BlobKey\r\n    IL_0006: brtrue.s     IL_000a\r\n\r\n    // [52 17 - 52 30]\r\n    IL_0008: ldc.i4.0     \r\n    IL_0009: ret          \r\n\r\n    // [55 13 - 55 40]\r\n    IL_000a: ldarg.1      // obj\r\n    IL_000b: unbox.any    LiteCore.Interop.C4BlobKey\r\n    IL_0010: stloc.0      // other\r\n    IL_0011: ldarg.0      // this\r\n    IL_0012: ldflda       valuetype LiteCore.Interop.C4BlobKey/'<bytes>e__FixedBuffer' LiteCore.Interop.C4BlobKey::bytes\r\n    IL_0017: ldflda       unsigned int8 LiteCore.Interop.C4BlobKey/'<bytes>e__FixedBuffer'::FixedElementField\r\n    IL_001c: stloc.2      // V_2\r\n\r\n    // [56 19 - 56 34]\r\n    IL_001d: ldloc.2      // V_2\r\n    IL_001e: conv.u       \r\n    IL_001f: stloc.1      // b\r\n\r\n    // [57 21 - 57 30]\r\n    IL_0020: ldc.i4.0     \r\n    IL_0021: stloc.3      // i\r\n\r\n    IL_0022: br.s         IL_0040\r\n    // start of loop, entry point: IL_0040\r\n\r\nThis same IL works fine on UWP, and .NET Core. This problem also appears to exist in Xamarin iOS. \r\n\r\n### Expected Behavior\r\n\r\nThe IL gets handled as on other platforms\r\n\r\n### Actual Behavior\r\n\r\nThe above exception\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.5.3\r\nVisualStudio.15.Release/15.5.3+27130.2020\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual Basic 2017   00369-60000-00001-AA631\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00369-60000-00001-AA631\r\nMicrosoft Visual C# 2017\r\n\r\nVisual C++ 2017   00369-60000-00001-AA631\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# 4.1   00369-60000-00001-AA631\r\nMicrosoft Visual F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.31127.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   4.0.20601.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51007.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.3.1    Build 111.0.20171221.145902\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProject System Tools   1.0\r\nTools for working with C#, VisualBasic, and F# projects.\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27130.2020\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.8.0.757 (7f9ec2a)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.3.0 (HEAD/ef47226b7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.2 (6857dfc)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\nNothing of interest.  This exception was caught and reported by our unit test runner.\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7095466308","Type":"IssuesEvent","CreatedAt":"2018-01-13T17:18:02","Actor":"tuyen-vuduc","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1193","RelatedDescription":"Opened issue \"MSB4018: The \"XamarinBuildAndroidAarProguardConfigs\" task failed unexpectedly.\" (#1193) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Clone http://github.com/naxam/accountkit-android-binding\r\n2. Build the solution\r\n\r\n### Expected Behavior\r\nBuild successfully\r\n\r\n### Actual Behavior\r\nBuild failed\r\n```\r\nXamarin.Build.Download.targets(135,3): error MSB4018: The \"XamarinBuildAndroidAarProguardConfigs\" task failed unexpectedly.\r\nXamarin.Build.Download.targets(135,3): error MSB4018: System.IO.InvalidDataException: Central Directory corrupt. ---> System.IO.IOException: Attempted to Seek before the beginning of the stream\r\nXamarin.Build.Download.targets(135,3): error MSB4018:   at System.IO.FileStream.Seek (System.Int64 offset, System.IO.SeekOrigin origin) [0x000be] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/FileStream.cs:782 \r\nXamarin.Build.Download.targets(135,3): error MSB4018:   at System.IO.Compression.ZipArchive.ReadEndOfCentralDirectory () [0x00000] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs:553 \r\nXamarin.Build.Download.targets(135,3): error MSB4018:    --- End of inner exception stack trace ---\r\nXamarin.Build.Download.targets(135,3): error MSB4018:   at System.IO.Compression.ZipArchive.ReadEndOfCentralDirectory () [0x00207] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs:631 \r\nXamarin.Build.Download.targets(135,3): error MSB4018:   at System.IO.Compression.ZipArchive.Init (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, System.Boolean leaveOpen) [0x001c8] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs:511 \r\nXamarin.Build.Download.targets(135,3): error MSB4018:   at System.IO.Compression.ZipArchive..ctor (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, System.Boolean leaveOpen, System.Text.Encoding entryNameEncoding) [0x0001c] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs:129 \r\nXamarin.Build.Download.targets(135,3): error MSB4018:   at System.IO.Compression.ZipArchive..ctor (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode) [0x00000] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs:57 \r\nXamarin.Build.Download.targets(135,3): error MSB4018:   at Xamarin.Build.Download.XamarinBuildAndroidAarProguardConfigs.Execute () [0x00105] in <dc3c3cbb6f924684ab0c214189899b4c>:0 \r\nXamarin.Build.Download.targets(135,3): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00023] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/msbuild-15.4/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs:631 \r\nXamarin.Build.Download.targets(135,3): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__26.MoveNext () [0x0022d] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/msbuild-15.4/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs:787 \r\n```\r\n### Version Information\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 5)\r\nInstallation UUID: a9ca3c9c-8010-48fc-9c68-07250cac8c03\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.2/Sdks\r\nSDK Versions:\r\n\t2.0.2\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.3.0 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/tuyen/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t4.4.87 (API level 20)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 27.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.3 (Visual Studio Enterprise)\r\nHash: f70a1348\r\nBranch: xcode9.2\r\nBuild date: 2017-12-18 14:47:16-0500\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.215 (Visual Studio Enterprise)\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.3.2\r\nHash: 461f09a\r\nBranch: 1.3-release\r\nBuild date: Tue, 03 Oct 2017 18:26:57 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030005\r\nGit revision: b1c2982e201e71ef758866c9ade05f253a8c6f47\r\nBuild date: 2017-12-21 11:04:40-05\r\nXamarin addins: f397ddfbacfb39e60c9cc8d9e410f73faf8c2cbc\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.2\r\nDarwin 17.3.0 Darwin Kernel Version 17.3.0\r\n    Thu Nov  9 18:09:22 PST 2017\r\n    root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nLiveXAML 1.3.31\r\nInternet of Things (IoT) development (Preview) 7.1\r\n"},{"Id":"7093678136","Type":"PullRequestEvent","CreatedAt":"2018-01-12T21:34:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1192","RelatedDescription":"Opened pull request \"[Mono.Android] API-27/v8.1 is stable\" (#1192) at xamarin/xamarin-android","RelatedBody":"The API-27 binding has been considered stable (-ish) since commit\r\n914f95fc, give or take a few problems (c2811327, 9cc80d7a, etc.).\r\n\r\nEnsure that the generated `AndroidApiInfo.xml` files (8942eca0)\r\nstate that API-27 is stable."},{"Id":"7091688329","Type":"PullRequestEvent","CreatedAt":"2018-01-12T14:03:57","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1190","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Ignore AndroidAsset items which are folders.\" (#1190) at xamarin/xamarin-android","RelatedBody":"When adding a new subfolder in the IDE (VSForMac) we end up\r\nwith a folder which has a build action of AndroidAsset.\r\nThis causes the copy task to fail with\r\n\r\n\tCannot copy <folder> to <destfolder>, as the source file doesn't exist\",\r\n\r\nThis is because we assume that all items in AndroidAsset (and\r\nAndroidResource) and files. It looks like this is not the case.\r\nWhile a work around is easy .. simply remove the item. It does\r\nrequire that the user manually update the csproj.\r\n\r\nSo this commit uses `Directory.Exists` to check to see if the\r\nitem is a directory or not. If it is we skip over it. Otherwise\r\nits a file so we should copy.\r\n\r\nWe do this in `Files.cs` but also in `AndroidUpdateResDir.cs`.\r\nThe latter has been changed to output a list of the \"Resolved\"\r\nfiles which will not include any folders."},{"Id":"7091093395","Type":"IssuesEvent","CreatedAt":"2018-01-12T11:34:33","Actor":"ctrl-shift","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1189","RelatedDescription":"Opened issue \"Generic RecyclerView.Adapter crashes\" (#1189) at xamarin/xamarin-android","RelatedBody":"Xamarin android version included in latest VS Preview does not handle generic RecyclerView Adapters.\r\nCheck attached test project. Everything runs fine from current stable version of VS.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create generic RecyclerView.Adapter\r\n2. Set it as adapter to RecyclerView\r\n3. Observe crash on runtime without stacktrace\r\n\r\n[TestApp.zip](https://github.com/xamarin/xamarin-android/files/1625843/TestApp.zip)\r\n\r\n### Expected Behavior\r\nEverything runs fine\r\n### Actual Behavior\r\nApp crashes without output or catching exception in debug\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Community 2017 Preview (2)\r\nVersion 15.6.0 Preview 2.0\r\nVisualStudio.15.Preview/15.6.0-pre.2.0+27309.0\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community"},{"Id":"7090981651","Type":"IssuesEvent","CreatedAt":"2018-01-12T11:05:39","Actor":"Belorus","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1188","RelatedDescription":"Opened issue \"Random NullRef crashes in SSL/TLS stack\" (#1188) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nWe have a big game that communicates with server via HTTP.\r\n<AndroidLinkMode>SdkOnly</AndroidLinkMode>\r\n<AotAssemblies>True</AotAssemblies>\r\n<EnableLLVM>True</EnableLLVM>\r\n <AndroidEnableSGenConcurrent>**false**</AndroidEnableSGenConcurrent>\r\n\r\n\r\n### Actual Behavior\r\n\r\nCrashes on Androids:\r\n\r\n1. \r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\n  at (wrapper remoting-invoke-with-check) Mono.Security.Protocol.Tls.SslStreamBase:set_CheckCertRevocationStatus (bool)\r\n```\r\n2.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\n  at Mono.Security.Protocol.Tls.SslClientStream.add_ServerCertValidation2 (Mono.Security.Protocol.Tls.CertificateValidationCallback2 value) <0x9d0ee038 + 0x0005c> in <cdde401f4fc64c87a9a513ce5f60d5ad>:0 \r\n  at (wrapper remoting-invoke-with-check) Mono.Security.Protocol.Tls.SslClientStream:add_ServerCertValidation2 (Mono.Security.Protocol.Tls.CertificateValidationCallback2)\r\n```\r\n3.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'SslStream'.\r\nSystem.Net.Security.SslStream.get_Impl()\r\nSystem.Net.Security.SslStream.get_Impl()(wrapper remoting-invoke-with-check)\r\n```\r\n4.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\nSystem.Net.HttpWebRequest.get_ClientCertificates()\r\nSystem.Net.HttpWebRequest.get_ClientCertificates()(wrapper remoting-invoke-with-check)\r\n```\r\n5.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\nSystem.Net.HttpWebRequest.get_ServerCertValidationCallback()\r\nSystem.Net.HttpWebRequest.get_ServerCertValidationCallback()(wrapper remoting-invoke-with-check)\r\n```\r\n6.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\nMono.Security.Protocol.Tls.TlsStream.ToArray()\r\nMono.Security.Protocol.Tls.TlsStream.ToArray()(wrapper remoting-invoke-with-check)\r\n```\r\n\r\nAn so on. \r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.5.2\r\nVisualStudio.15.Release/15.5.2+27130.2010\r\nMicrosoft .NET Framework\r\nVersion 4.7.02053\r\n\r\nInstalled Version: Professional\r\n\r\nXamarin   4.8.0.753 (6575bd113)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android SDK   8.1.0.25 (HEAD/d8c6e504f)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n"},{"Id":"7090937516","Type":"IssuesEvent","CreatedAt":"2018-01-12T10:55:10","Actor":"alanmcgovern","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1187","RelatedDescription":"Opened issue \"Java invocation failure with master/15.6\" (#1187) at xamarin/xamarin-android","RelatedBody":"With the latest master/15.6 builds of X.A i am triggering this issue inside the forms previewer:\r\n```\r\nJava.Lang.InstantiationException: android.view.ViewGroup\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <808e27c157614d6b865c43847235b62d>:0 \r\n  at Java.Interop.JniEnvironment+Object.AllocObject (Java.Interop.JniObjectReference type) [0x0003c] in <8e80eb3ca41f4c3eb745bd7c73458796>:0 \r\n  at Java.Interop.JniType.AllocObject () [0x0000c] in <8e80eb3ca41f4c3eb745bd7c73458796>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.StartCreateInstance (System.String constructorSignature, System.Type declaringType, Java.Interop.JniArgumentValue* parameters) [0x0003e] in <8e80eb3ca41f4c3eb745bd7c73458796>:0 \r\n  at Android.Views.ViewGroup..ctor (Android.Content.Context context) [0x0005b] in <9ca7528089f0437883d939fbe90c65ab>:0 \r\n  at Xamarin.Forms.Platform.Android.PlatformRenderer..ctor (Android.Content.Context context, Xamarin.Forms.Platform.Android.IPlatformLayout canvas) [0x00000] in C:\\Users\\hartez\\Documents\\Xamarin\\Xamarin.Forms\\Xamarin.Forms.Platform.Android\\PlatformRenderer.cs:16\r\n```\r\n\r\nThe code in question is the chaining to the base constructor here https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.Android/PlatformRenderer.cs#L16\r\n\r\nThe latest stable release of X.A works fine, so this looks like a regression between then and now."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7096076004","Type":"IssuesEvent","CreatedAt":"2018-01-14T00:53:38","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1579","RelatedDescription":"Opened issue \"[Android] AndroidDeviceInfo is setting ScaledScreenSize with Width for Height\" (#1579) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\n\r\nHere's the issue:\r\n\r\n`ScaledScreenSize = new Size(_pixelScreenSize.Width / _scalingFactor, _pixelScreenSize.Width / _scalingFactor);`\r\n\r\nWhen `Size` is being allocated, we're using `Width` for `Height`.\r\n"},{"Id":"7096064549","Type":"IssuesEvent","CreatedAt":"2018-01-14T00:42:32","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1514","RelatedDescription":"Closed issue \"[Internal] VS2017 does not recognize .NET Standard 2.0 in Xamarin.Forms\" (#1514) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nCan't build Xamarin.Forms after checking it out because VS does not recognize .NET Standard 2.0 in some projects.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Make sure you're running a Windows 10 instance (Enterprise in my case)\r\n2. Install VS2017 Enterprise (15.5.2 with .NET 4.7)\r\n3. Check out Xamarin.Forms\r\n4. Rebuild Xamarin.Forms.ControlGallery.Android\r\n\r\n### Expected Behavior\r\n\r\nCompilation should succeed without errors.\r\n\r\n### Actual Behavior\r\n\r\n11 projects cannot be built because VS does not recognize .NET Standard 2.0 in their target framework list. Right click a project and go to Properties. Note that the dropdown shows 1.6 as the maximum version recognizable by VS. Since it can't find 2.0, the current selection is empty.\r\n\r\n![capture](https://user-images.githubusercontent.com/16855542/34627056-be6b42a2-f224-11e7-89ae-03e2dc079d85.PNG)\r\n\r\n![capture2](https://user-images.githubusercontent.com/16855542/34627153-1bdb3c9e-f225-11e7-93bf-47f4bb816eaf.PNG)\r\n\r\n.NET Core 2.0 is installed. If I create a blank .NET Standard library, VS does recognize .NET Standard 2.0 in that case. This seems to be isolated to XF solution.\r\n\r\n![capture3](https://user-images.githubusercontent.com/16855542/34627173-347bbbd4-f225-11e7-989c-709df3e21982.PNG)\r\n\r\nYou should try replicating this on a clean install of Win10. Maybe I'm missing something that needs to be installed. Running VS in admin mode did not make a difference.\r\n  "},{"Id":"7096048930","Type":"PullRequestEvent","CreatedAt":"2018-01-14T00:27:51","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/619","RelatedDescription":"Closed pull request \"[Core] Register renderers conditionally based on OS version\" (#619) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nOn iOS, `ExportRendererAttribute` allows us to supply two different renderers for MDP on phones and tablets with `UIUserInterfaceIdiom` attribute parameter. We can build upon this to extend the behavior of the exporter such that different renderers can be utilized based on OS version.\r\n\r\nWe can now do the following:\r\n\r\n```\r\n[assembly:ExportRenderer(typeof(Entry), typeof(MyRenderer1), MaximumSdkVersion = 9)]\r\nnamespace fgfg789.iOS\r\n{\r\n\tpublic class MyRenderer1 : EntryRenderer\r\n\t{\r\n\t\tpublic MyRenderer1()\r\n\t\t{\r\n\t\t\t; // Put a breakpoint here. It won't be hit because the renderer \r\n                          // has not been registered on iOS 10.\r\n\t\t}\r\n\t}\r\n}\r\n\r\n[assembly: ExportRenderer(typeof(Entry), typeof(MyRenderer2), MinimumSdkVersion = 10)]\r\nnamespace fgfg789.iOS\r\n{\r\n\tpublic class MyRenderer2 : EntryRenderer\r\n\t{\r\n\t\tpublic MyRenderer2()\r\n\t\t{\r\n\t\t\t; // on iOS 10+, This renderer will be registered.\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nWe can also use more than two renderers if we like so long as we make sure only one renderer is registered per version:\r\n\r\n```\r\n[assembly: ExportRenderer(typeof(Entry), typeof(MyRenderer1), MinimumSdkVersion = 6, MaximumSdkVersion = 7)]\r\n[assembly: ExportRenderer(typeof(Entry), typeof(MyRenderer2), MinimumSdkVersion = 8, MaximumSdkVersion = 9]\r\n[assembly: ExportRenderer(typeof(Entry), typeof(MyRenderer3), MinimumSdkVersion = 10)]\r\n```\r\n\r\nFor further discussion, see [here](https://forums.xamarin.com/discussion/80341/methods-for-registering-renderers-during-runtime-instead-of-using-exportrenderer-attribute#latest).\r\n\r\nNote that I do not know how to get OS version in RT (not sure if it's possible either) so I left it out.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7096048655","Type":"PullRequestEvent","CreatedAt":"2018-01-14T00:27:36","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1578","RelatedDescription":"Opened pull request \"[Core] Conditional renderers based on OS version\" (#1578) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRedoing #619. \r\n"},{"Id":"7095348329","Type":"IssuesEvent","CreatedAt":"2018-01-13T15:59:47","Actor":"owlstack","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1577","RelatedDescription":"Opened issue \"[UWP] Intermittently keyboard pushes part of the view up outside of device screen\" (#1577) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI noticed this happen intermittently across my application across several screens. When I focus inside an Entry and the keyboard pops up, it forces some of the screen out of the device screen view. However, this behavior is really hard to reproduce consistently but I notice it happen from time to time. \r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a page with an entry near the top of the page\r\n2. Focus/click on the Entry and wait for keyboard to pop up \r\n3. Intermittently, the keyboard pushes the top of the page outside the device screen area. \r\n\r\n### Expected Behavior\r\n\r\nPage and it's element should remain fixed on the device screen and should not be moved up because of the keyboard. \r\n\r\n### Actual Behavior\r\n\r\nKeyboard pushes page up outside the device screen area. \r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: \r\n  - UWP:   10.0.14393.0\r\n- Nuget Packages:\r\nXamarin.Forms: 2.4.0.282\r\n- Affected Devices:\r\nPanasonic fZ-E1\r\n\r\nI recently however upgraded to the latest Xamarin.Forms version 2.5.0.122 but haven't gotten the chance to test if it still occurs with the latest. I'm wondering if something like this has been reported before and is known to be fixed in latest or not? \r\n\r\n\r\n"},{"Id":"7095120975","Type":"PullRequestEvent","CreatedAt":"2018-01-13T13:18:45","Actor":"breyed","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1576","RelatedDescription":"Opened pull request \"Fix UWP button image rendering crash\" (#1576) at xamarin/Xamarin.Forms","RelatedBody":"On UWP, if you click around an app quickly, you can get it crash with this error:\r\n> Xamarin.Forms.Platform.UAP.dll!Xamarin.Forms.Platform.UWP.ButtonRenderer.UpdateContent.AnonymousMethod__0(object sender, Windows.UI.Xaml.RoutedEventArgs args)\r\n\r\nSince image loading is deferred, if you navigate quickly (or if you load the image from a slow source), the Xamarin.Forms element may no longer be present when `ImageOpened` is raised. The null check in this PR should fix that.\r\n\r\n(I made the change in the GitHub web editor - since it's only one character. I haven't tested. The editor caused the newline change at the bottom of the file. No need to keep that change obviously.)"},{"Id":"7095078066","Type":"IssuesEvent","CreatedAt":"2018-01-13T12:44:35","Actor":"breyed","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1575","RelatedDescription":"Opened issue \"False binding error in ListView when ItemsSource and parent BindingContext set\" (#1575) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen using `ListView`, if you set its `ItemsSource`, and also set the parent's `BindingContext`, the binding engine will report an error that parent couldn't bind to the item property. This is a false error because the parent doesn't need to bind.\r\n\r\nThe false errors make is very difficult to find actual errors when debugging. I wouldn't be surprised if they hurt production performance, too.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the [repro](https://github.com/breyed/repro-xamarin.forms-edit-and-continue). (This repro is used for two different bugs. That's why the repro name does match this bug.)\r\n\r\n### Expected Behavior\r\nThe app works. No error in the VS Output window.\r\n\r\n### Actual Behavior\r\nThe app works. The following error in the VS Output window:\r\n> Binding:'Hello' property not found on 'ClassLibrary1.Page1', target property: 'Xamarin.Forms.TextCell.Text'\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- IDE: Visual Studio\r\n- Platform Target Frameworks: \r\n  - iOS: Haven't tried.\r\n  - Android: Haven't tried.\r\n  - UWP: 16299\r\n"},{"Id":"7094591807","Type":"IssuesEvent","CreatedAt":"2018-01-13T05:29:18","Actor":"breyed","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1574","RelatedDescription":"Opened issue \"Edit and Continue doesn't work with .NET Standard\" (#1574) at xamarin/Xamarin.Forms","RelatedBody":"When a Xamarin.Forms cross-platform library uses .NET Standard, Edit and Continue doesn't work on UWP. (I didn't try other ways of incorporating the cross-platform code, so I don't know whether this is specific to .NET Standard.)\r\n\r\nRepro:\r\n1. Create a new UWP project.\r\n2. Verify that Edit and Continue works. (Start the app. Debug > Break All. Edit some code. Continue.)\r\n3. Add a .NET Standard class library.\r\n4. Add Xamarin.Forms to the class library and UWP project. Add a page to the class library. Add the standard startup code to the UWP project.\r\n5. Test whether Edit and Continue works. Notice that it doesn't.\r\n\r\n[Repro project](https://github.com/breyed/repro-xamarin.forms-edit-and-continue)"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7097126661","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:59:20","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3221","RelatedDescription":"Opened pull request \"[foundation] Reduce duplication inside NSData.FromString methods\" (#3221) at xamarin/xamarin-macios","RelatedBody":"and ensure the temporary `NSString` instance is disposed asap.\n\nFound will debugging something else. Unit tests added to confirm there\nis no behavior change when the API are used."},{"Id":"7097090768","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:37:48","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3220","RelatedDescription":"Opened pull request \"[macos][mediatoolbox] Add a macOS specific API for XM\" (#3220) at xamarin/xamarin-macios","RelatedBody":"- added unit test (not much to test)\n- xtro data updated"},{"Id":"7095406996","Type":"IssuesEvent","CreatedAt":"2018-01-13T16:39:13","Actor":"verybadcat","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3219","RelatedDescription":"Opened issue \"A project with two shared projects crashes VS Mac\" (#3219) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Create a Xamarin.IOS project\r\n2. Create two shared projects inside it. Add references to them.\r\n3. Have a class in one shared project refer to a class in the other shared project\r\n\r\n### Expected Behavior\r\n\r\nYou can edit, build, and run the solution.\r\n\r\n### Actual Behavior\r\n\r\nXamarin.IOS frequently crashes, and if it doesn't crash, the references may fail to resolve at build time.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 5)\r\nInstallation UUID: a4c66b52-bdb0-462b-b8a8-b29cac21f1e8\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Version: 2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.3 (Visual Studio Community)\r\nHash: f70a1348\r\nBranch: xcode9.2\r\nBuild date: 2017-12-18 14:47:16-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.3.0 (Visual Studio Community)\r\nAndroid SDK: /Users/william/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.2 (API level 17)\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 25.0.5\r\nSDK Build Tools Version: 25.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.3.2\r\nHash: 461f09a\r\nBranch: 1.3-release\r\nBuild date: Tue, 03 Oct 2017 18:26:57 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.215 (Visual Studio Community)\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030005\r\nGit revision: b1c2982e201e71ef758866c9ade05f253a8c6f47\r\nBuild date: 2017-12-21 11:04:40-05\r\nXamarin addins: f397ddfbacfb39e60c9cc8d9e410f73faf8c2cbc\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.6\r\nDarwin 16.7.0 Darwin Kernel Version 16.7.0\r\n    Mon Nov 13 21:56:25 PST 2017\r\n    root:xnu-3789.72.11~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nxUnit.NET 2 testing framework support 0.7.14\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n[SharedProjectTest.zip](https://github.com/xamarin/xamarin-macios/files/1628501/SharedProjectTest.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\nIn the particular solution, I was attempting to edit ClassB to add an ivar \"public ClassA A {get;set;} and then type \"A = new ClassA();\" in the constructor, but this always crashes VS Mac."},{"Id":"7093903682","Type":"IssuesEvent","CreatedAt":"2018-01-12T22:39:44","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3200","RelatedDescription":"Closed issue \"Incorrect debug symbols should warn (not error) during builds\" (#3200) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nThe issue can be seen with the (unmerged) tests from https://github.com/xamarin/xamarin-macios/pull/3079 or bugzilla [61142](https://bugzilla.xamarin.com/show_bug.cgi?id=61142)\r\n\r\n### Expected Behavior\r\n\r\nA **warning** reporting that the debugging symbols are incorrect (e.g. out of date) and that it might affect how the application can be debugged.\r\n\r\n### Actual Behavior\r\n\r\nAn `MT0009` **error**. Beside the details being non-obvious (to solve) the workarounds are not ideal, e.g. deleting a .pdb from nuget would need to be done overtime it's cloned/refreshed and _maybe_ updated (until fixed)\r\n\r\nnote: in 15.6 and earlier this was ignored.\r\n\r\n### Additional information\r\n\r\nThe reason for the error comes from fixing https://bugzilla.xamarin.com/show_bug.cgi?id=60277\r\nSo this needs to still work after the move to a warning."},{"Id":"7093903402","Type":"PullRequestEvent","CreatedAt":"2018-01-12T22:39:39","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3203","RelatedDescription":"Merged pull request \"[mtouch][mmp] Report invalid debug symbols files. Fixes #3200\" (#3203) at xamarin/xamarin-macios","RelatedBody":"Try to read the assembly with symbols and, if that fails, warn and\nfallback to loading them without symbols.\n\nThis fixes cases were it's not easy to update or delete (e.g. nuget)\nbad symbols files - so this cannot be an error without causing a lot\nof pain.\n\nHowever it needs to be reported, otherwise it wont be fixed (by the\npublisher) and it can limit the debugability of the application and\nthe usefulness of the stacktraces.\n\nFinally merge most of the resolver's code between mtouch and mmp so\nwe don't have to fix such issue twice anymore.\n\nnote: this needs to be slightly updated once we get a version of cecil\nthat can give us a more precise error message.\n\nAlso bring Rolf's tests from\nhttps://github.com/xamarin/xamarin-macios/pull/3079\n\nreference:\nhttps://github.com/xamarin/xamarin-macios/issues/3200"},{"Id":"7093849254","Type":"PullRequestEvent","CreatedAt":"2018-01-12T22:23:15","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3079","RelatedDescription":"Closed pull request \"[tests] Add tests to verify that out-of-date symbols don't cause problems.\" (#3079) at xamarin/xamarin-macios","RelatedBody":"https://bugzilla.xamarin.com/show_bug.cgi?id=60923"},{"Id":"7093814558","Type":"PullRequestEvent","CreatedAt":"2018-01-12T22:13:09","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3218","RelatedDescription":"Merged pull request \"[msbuild] DetectSigningIdentity fix for Mac when RequireProvisioningP…\" (#3218) at xamarin/xamarin-macios","RelatedBody":"…rofile is false\r\n\r\n* [msbuild] DetectSigningIdentity fix for Mac when RequireProvisioningProfile is false\r\n\r\nFixes https://github.com/xamarin/maccore/issues/612\r\n\r\n* Disable some tests since they don't make correct assumptions anymore\r\n\r\n* Added comment to explain why tests are disabled"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"952587115417821191","CreatedAt":"2018-01-14T17:04:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/WfBaPE3aMD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":14,"RawContent":null},{"Id":"952220954310127617","CreatedAt":"2018-01-13T16:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/olv2ycerlY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":164,"FavoriteCount":65,"RawContent":null},{"Id":"951923977278164992","CreatedAt":"2018-01-12T21:08:56+00:00","UserScreenname":"xamarinhq","Text":"Start your weekend on a high note with this week's episode of the @XamarinPodcast, covering Android 8.1, the new… https://t.co/nyDaQnMQOM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":14,"RawContent":null},{"Id":"951862087931789312","CreatedAt":"2018-01-12T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with Android Oreo Notification Channels: https://t.co/1XmtfYAaLv https://t.co/Drj1AHQYPg","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":12,"RawContent":null},{"Id":"951544245466423296","CreatedAt":"2018-01-11T20:00:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the exciting new features in Android Oreo 8.1 with updated support in #Xamarin.Android:… https://t.co/7RaFvwrg4V","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"951505598268563456","CreatedAt":"2018-01-11T17:26:27+00:00","UserScreenname":"xamarinhq","Text":"Ready to start building better apps, faster? Learn how to get started with #VSAppCenter in our upcoming @XamarinU w… https://t.co/zkJdTZ6JTX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":30,"RawContent":null},{"Id":"951487872753946625","CreatedAt":"2018-01-11T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/TGqFOONLio","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"951172797337866240","CreatedAt":"2018-01-10T19:24:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio 2017 version 15.6 Preview is now available! Get started today: https://t.co/KG2CJ20AHH https://t.co/e5VR78hTLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":29,"RawContent":null},{"Id":"951133533246025738","CreatedAt":"2018-01-10T16:48:00+00:00","UserScreenname":"xamarinhq","Text":"Get the most out of Binding in #XamarinForms with this overview of the powerful features that you should be using: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":23,"RawContent":null},{"Id":"950803363595243521","CreatedAt":"2018-01-09T18:56:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/V8JfqCj42s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":40,"RawContent":null},{"Id":"950774673335341058","CreatedAt":"2018-01-09T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/G6BluXZvLM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"950410272363163649","CreatedAt":"2018-01-08T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/k8IzINY3SW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":135,"FavoriteCount":65,"RawContent":null},{"Id":"950049897843105792","CreatedAt":"2018-01-07T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDfY3Ep https://t.co/6yNTVxdVbh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":18,"RawContent":null},{"Id":"949688768231104512","CreatedAt":"2018-01-06T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/EvDnR69pjy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":105,"FavoriteCount":48,"RawContent":null},{"Id":"949372052758302723","CreatedAt":"2018-01-05T20:08:30+00:00","UserScreenname":"xamarinhq","Text":"Learn how Colonial Life drives field sales productivity with #dotNET and #DevOps using #XamarinForms:… https://t.co/Y1wBTN0TJA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"949323858972233734","CreatedAt":"2018-01-05T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":21,"RawContent":null},{"Id":"948981959132368901","CreatedAt":"2018-01-04T18:18:24+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/VAkrZo84pP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":40,"RawContent":null},{"Id":"948961974766972934","CreatedAt":"2018-01-04T16:59:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":16,"RawContent":null},{"Id":"948635192490590211","CreatedAt":"2018-01-03T19:20:29+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/sV84us2Np4 https://t.co/tduUDgg9oS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2018-01-15T05:30:38.732273Z","RunDurationInMilliseconds":4340}