{"Data":{"GitHub":{"Issues":[{"Id":"533417542","IsPullRequest":true,"CreatedAt":"2019-12-06T01:13:35","Actor":"hughbe","Number":"2470","RawContent":null,"Title":"Cleanup GetDpiForWindow and add tests","State":"closed","Body":"## Proposed Changes\r\n- Cleanup GetDpiForWindow and add tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2470)","Url":"https://github.com/dotnet/winforms/pull/2470","RelatedDescription":"Closed or merged PR \"Cleanup GetDpiForWindow and add tests\" (#2470)"},{"Id":"533636814","IsPullRequest":true,"CreatedAt":"2019-12-05T22:32:17","Actor":"OliaG","Number":"2474","RawContent":null,"Title":"Updated the link to the latest blogpost","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2474)","Url":"https://github.com/dotnet/winforms/pull/2474","RelatedDescription":"Open PR \"Updated the link to the latest blogpost\" (#2474)"},{"Id":"533580076","IsPullRequest":true,"CreatedAt":"2019-12-05T21:36:38","Actor":"mmitche","Number":"2473","RawContent":null,"Title":"[release/3.1] Move to RTM sdk","State":"closed","Body":"Pull in timestamp fixes\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2473)","Url":"https://github.com/dotnet/winforms/pull/2473","RelatedDescription":"Closed or merged PR \"[release/3.1] Move to RTM sdk\" (#2473)"},{"Id":"530983672","IsPullRequest":true,"CreatedAt":"2019-12-05T19:05:11","Actor":"gpetrou","Number":"2456","RawContent":null,"Title":"Move IsThemeBackgroundPartiallyTransparent to Interop UxTheme","State":"closed","Body":"## Proposed changes\r\n\r\n- Move IsThemeBackgroundPartiallyTransparent to Interop UxTheme\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2456)","Url":"https://github.com/dotnet/winforms/pull/2456","RelatedDescription":"Closed or merged PR \"Move IsThemeBackgroundPartiallyTransparent to Interop UxTheme\" (#2456)"},{"Id":"533504060","IsPullRequest":true,"CreatedAt":"2019-12-05T17:54:15","Actor":"hughbe","Number":"2472","RawContent":null,"Title":"Add more ScrollableControl tests","State":"open","Body":"## Proposed Changes\r\n- Add more ScrollableControl tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2472)","Url":"https://github.com/dotnet/winforms/pull/2472","RelatedDescription":"Open PR \"Add more ScrollableControl tests\" (#2472)"},{"Id":"533694143","IsPullRequest":false,"CreatedAt":"2019-12-05T16:11:46","Actor":"coderesx","Number":"2475","RawContent":null,"Title":"Windows.Forms.MonthCalendar control throws NullReferenceException","State":"open","Body":"Windows.Forms.MonthCalendar controls throws NullReferenceException when the user clicks to change the date\r\n\r\n# General\r\n\r\nThis is a new issue in  .NET Core 3.1. It worked fine in .NET Core 3.0\r\nOperating System is Windows 10 Pro.\r\nThis happens if the MinDate and MaxDate are set.\r\n\r\nI attached a sample to reproduce the issue.\r\n\r\n[WindowsFormsCoreApp1.zip](https://github.com/dotnet/core/files/3927891/WindowsFormsCoreApp1.zip)\r\n\r\nI should have posted this to dotnet/winforms. Sorry about that.","Url":"https://github.com/dotnet/winforms/issues/2475","RelatedDescription":"Open issue \"Windows.Forms.MonthCalendar control throws NullReferenceException\" (#2475)"},{"Id":"533442499","IsPullRequest":false,"CreatedAt":"2019-12-05T16:00:55","Actor":"hughbe","Number":"2471","RawContent":null,"Title":"Code coverage appears to be broken","State":"open","Body":"Looks like reports are missing a “base” and we don’t have anything popping up on PRs ","Url":"https://github.com/dotnet/winforms/issues/2471","RelatedDescription":"Open issue \"Code coverage appears to be broken\" (#2471)"},{"Id":"533409828","IsPullRequest":true,"CreatedAt":"2019-12-05T15:07:25","Actor":"hughbe","Number":"2469","RawContent":null,"Title":"Add NativeWindow tests","State":"open","Body":"## Proposed Changes\r\n- Add NativeWindow tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2469)","Url":"https://github.com/dotnet/winforms/pull/2469","RelatedDescription":"Open PR \"Add NativeWindow tests\" (#2469)"},{"Id":"533337515","IsPullRequest":true,"CreatedAt":"2019-12-05T13:16:53","Actor":"dotnet-maestro[bot]","Number":"2468","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191204.4\r\n- **Date Produced**: 12/5/2019 1:13 AM\r\n- **Commit**: f2999360b70f05d7738cbfa2b61d1fdaff4ee77d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19604.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19604.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19604.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19604.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2468)","Url":"https://github.com/dotnet/winforms/pull/2468","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2468)"},{"Id":"533186507","IsPullRequest":false,"CreatedAt":"2019-12-05T07:59:56","Actor":"valoni","Number":"2467","RawContent":null,"Title":"winform designer do not work after update into vs2019 v16.4.0 ","State":"open","Body":"* .NET Core Version: (e.g. 3.0 rtm and 3.1 rtm)\r\n\r\n**Problem description:**\r\ni did update of VS2019 to v16.4.0 from 16.3x (after update Windows form designer do not work)\r\n\r\nafter this i did unistalled vsix to reinstall again but now it show me message :\r\n\r\nThe extension  is already installed to all applicable products.????","Url":"https://github.com/dotnet/winforms/issues/2467","RelatedDescription":"Open issue \"winform designer do not work after update into vs2019 v16.4.0 \" (#2467)"},{"Id":"529987304","IsPullRequest":true,"CreatedAt":"2019-12-05T07:42:06","Actor":"M-Lipin","Number":"2449","RawContent":null,"Title":"Fixing ComboBox handlers and accessibility object initialization","State":"closed","Body":"Adding IsHandleCreated checks to prevent accessing AccessibleObject properties and calls to UIAutomation which may lead to application crash/hung.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2432 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding IsHandleCreated checks to prevent accessing AccessibleObject properties for not fully initialized control.\r\n- Fixed the reference to child list window to prevent NullReferenceException on child control recreating.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will not experience application crash/hung in some cases when ComboBox control is being reinitialized while application/form lifecycle.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nException and application hung.\r\n<!-- callstack for crashes / exceptions -->\r\n`NullReferenceException` and application crash:\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Windows.Forms.ComboBox.WmParentNotify(Message& m)\r\n   at System.Windows.Forms.ComboBox.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n```\r\n\r\n### After\r\n\r\nNo exception.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Automation tests.\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-015763\r\n Commit:    0d0c902b77\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-015763\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.19564.1\r\n  Commit:  c77948d92a\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview3-014645 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha1-015763 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2449)","Url":"https://github.com/dotnet/winforms/pull/2449","RelatedDescription":"Closed or merged PR \"Fixing ComboBox handlers and accessibility object initialization\" (#2449)"},{"Id":"532597399","IsPullRequest":false,"CreatedAt":"2019-12-05T04:55:28","Actor":"Lohnegrim","Number":"2464","RawContent":null,"Title":"Microsoft.VisualBasic.PowerPacks doesn't work with .Net Core 3.1","State":"closed","Body":"* .NET Core Version: 3.1\r\n* Have you experienced this same bug with .NET Framework?: YeNo\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n.Net Core 3.1 removed ContextMenu, but the Microsoft.VisualBasic.PowerPacks (https://docs.microsoft.com/en-us/dotnet/visual-basic/developing-apps/windows-forms/power-packs-controls)\r\nMaking it possible to create but not dispose them.\r\n\r\n**Actual behavior:** \r\n```\r\nSystem.TypeLoadException: Could not load type 'System.Windows.Forms.ContextMenu' from assembly 'System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\n   at Microsoft.VisualBasic.PowerPacks.Shape.set_ContextMenu\r\n   at Microsoft.VisualBasic.PowerPacks.Shape.Dispose(Boolean disposing)\r\n```\r\n\r\n**Expected behavior:**\r\nDispose should work\r\n\r\n**Minimal repro:**\r\n1. Download and reference Microsoft.VisualBasic.PowerPacks from the line above.\r\n2. Create a LineShape and Dispose it again.\r\n\r\nor sample .csproj\r\n```<Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Reference Include=\"Microsoft.VisualBasic.PowerPacks\">\r\n      <HintPath>C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\VBPowerPacks\\v12.0\\Microsoft.VisualBasic.PowerPacks.dll</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nProgram.cs:\r\n```cs\r\n\t\t\ttry\r\n            {\r\n                var sc = new Microsoft.VisualBasic.PowerPacks.ShapeContainer();\r\n                sc.Dispose();\r\n                var sc2 = new Microsoft.VisualBasic.PowerPacks.ShapeContainer();\r\n                sc2.Shapes.Add(new Microsoft.VisualBasic.PowerPacks.LineShape());\r\n                sc2.Dispose();\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex.ToString());\r\n                throw;\r\n            }\r\n```","Url":"https://github.com/dotnet/winforms/issues/2464","RelatedDescription":"Closed issue \"Microsoft.VisualBasic.PowerPacks doesn't work with .Net Core 3.1\" (#2464)"},{"Id":"532507780","IsPullRequest":true,"CreatedAt":"2019-12-05T04:41:26","Actor":"RussKie","Number":"2463","RawContent":null,"Title":"fix: Incorrect invocation of `PeekMessageW`","State":"closed","Body":"Fixes #2462\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- During the refactor in d52e526 a number of calls to `PeekMessageW` lost `PM.REMOVE` argument that led to situations where callers would get stuck in a infinite loop peeking for messages.\r\nFor example, a form with a `TabControl` with two `TabPage` controls added to it would dead lock and hang.\r\n\r\nFix affected calls by restoring the correct argument.\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- `TabControl` and other affected controls will work again\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual creation of a test app as described in #2462 and checking that it works as expected\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2463)","Url":"https://github.com/dotnet/winforms/pull/2463","RelatedDescription":"Closed or merged PR \"fix: Incorrect invocation of `PeekMessageW`\" (#2463)"},{"Id":"532488091","IsPullRequest":false,"CreatedAt":"2019-12-05T04:41:26","Actor":"RussKie","Number":"2462","RawContent":null,"Title":"`TabControl` is broken","State":"closed","Body":"* .NET Core Version: master\r\n* Have you experienced this same bug with .NET Core?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nA form that has a `TabControl` with more than one tabpage hangs.\r\n\r\nIt appears an instance of a `TabControl` gets stuck in the infinite loop because the messages do not get removed:\r\nhttps://github.com/dotnet/winforms/blob/716397fe0a1a60c77b2e68fa8cab5b1b4b6d6eba/src/System.Windows.Forms/src/System/Windows/Forms/TabControl.cs#L2110-L2115\r\n\r\n\r\n\r\nThe regression was introduced in d52e526cdd3563eef99b6941972e8c5854c30246\r\nThe original code:\r\nhttps://github.com/dotnet/winforms/blob/cecb4861c569fb05f7411a20623b76d627bae489/src/System.Windows.Forms/src/System/Windows/Forms/TabControl.cs#L2138-L2144\r\n\r\nThe change defaults to `PM.NOREMOVE`:\r\nhttps://github.com/dotnet/winforms/blob/d52e526cdd3563eef99b6941972e8c5854c30246/src/Common/src/Interop/User32/Interop.PeekMessageW.cs#L14-L34\r\n\r\n**Expected behavior:**\r\n\r\nThe form / tabcontrol all its children are rendered correctly without hangs\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a new app\r\n```\r\ndotnet new winforms -n TabControlFail\r\ncd TabControlFail\r\n```\r\n2. Modify `Form1.cs` as follows:\r\n```cs\r\nusing System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nnamespace TabControlFail\r\n{\r\n    public partial class Form1 : Form\r\n    {\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n\t\t\t\r\n\t\t\tvar comboBox1 = new System.Windows.Forms.ComboBox();\r\n\t\t\t\r\n\t\t\tvar tabPage1 = new System.Windows.Forms.TabPage();\r\n            tabPage1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;\r\n            tabPage1.Controls.Add(comboBox1);\r\n            tabPage1.Location = new System.Drawing.Point(4, 22);\r\n            tabPage1.Name = \"tabPage1\";\r\n            tabPage1.Padding = new System.Windows.Forms.Padding(3);\r\n            tabPage1.Size = new System.Drawing.Size(192, 74);\r\n            tabPage1.TabIndex = 0;\r\n            tabPage1.Text = \"tabPage1\";\r\n            tabPage1.UseVisualStyleBackColor = true;\r\n\r\n\t\t\tvar tabPage2 = new System.Windows.Forms.TabPage();\r\n\r\n\t\t\tvar tabControl = new TabControl();\r\n            tabControl.Controls.Add(tabPage1);\r\n            //tabControl.Controls.Add(tabPage2); \t<-- uncomment to repro the hang\r\n\t\t\ttabControl.Size = new Size(300, 200);\r\n\t\t\t\r\n\t\t\tthis.Controls.Add(tabControl);\r\n        }\r\n\r\n    }\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2462","RelatedDescription":"Closed issue \"`TabControl` is broken\" (#2462)"},{"Id":"532821402","IsPullRequest":false,"CreatedAt":"2019-12-04T17:13:06","Actor":"SirIntellegence","Number":"2466","RawContent":null,"Title":"NullReferenceException in ToolStripControlHost","State":"open","Body":"* .NET Core Version: 3.0.100\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**\r\nNullReferenceException while calling various methods on ToolStripControlHost after disposal.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n`NullReferenceException` thrown\r\n> System.NullReferenceException: Object reference not set to an instance of an object.\r\n>   \\+ System.Windows.Forms.ToolStripControlHost.SetVisibleCore(bool)\r\n\r\n**Expected behavior:**\r\n`ObjectDisposedException` thrown\r\n\r\n**Minimal repro:**\r\nThe following code was used in Roslin to reproduce the issue\r\n> #r \"System.Windows.Forms\"\r\n> using System.Windows.Forms;\r\n> Button btnTest = new Button();\r\n> ToolStripControlHost host = new ToolStripControlHost(btnTest);\r\n> host.Dispose();\r\n> host.Visible = true;\r\n\r\nNote: From what I see in the source code, it does not need to be on a visible form to reproduce.\r\n\r\n**Suspected Cause**\r\n`Dispose` sets `control` to `null`\r\n\r\n**Suggested Solution**\r\nCheck for null in the Control property and throw an `ObjectDisposedException` if it is null","Url":"https://github.com/dotnet/winforms/issues/2466","RelatedDescription":"Open issue \"NullReferenceException in ToolStripControlHost\" (#2466)"},{"Id":"532684533","IsPullRequest":true,"CreatedAt":"2019-12-04T13:27:29","Actor":"hughbe","Number":"2465","RawContent":null,"Title":"Fix Tab Control Text and add more TabControl tests","State":"open","Body":"## Proposed Changes\r\n- This was never set in #2258 \r\n\r\nContributes to https://github.com/dotnet/winforms/issues/2462\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2465)","Url":"https://github.com/dotnet/winforms/pull/2465","RelatedDescription":"Open PR \"Fix Tab Control Text and add more TabControl tests\" (#2465)"},{"Id":"532339304","IsPullRequest":true,"CreatedAt":"2019-12-04T00:06:44","Actor":"OliaG","Number":"2461","RawContent":null,"Title":"Update readme.md","State":"closed","Body":"Updated docs to the latest release.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2461)","Url":"https://github.com/dotnet/winforms/pull/2461","RelatedDescription":"Closed or merged PR \"Update readme.md\" (#2461)"},{"Id":"532178721","IsPullRequest":true,"CreatedAt":"2019-12-03T18:28:54","Actor":"kpreisser","Number":"2460","RawContent":null,"Title":"Fix issues in Interop.User32.GetWindowText","State":"open","Body":"Fixes #2424\r\n\r\n\r\n## Proposed changes\r\nFix the following issues that appear to have been overlooked in the review of #923:\r\n- Ensure the buffer passed to `GetWindowTextW()` has at least the length specified in that call, to prevent an out-of-bounds write.\r\n- Fix the condition to detect if the text length has increased, to ensure the returned text is not truncated.\r\n- Avoid an infinite loop (if the control text changes back and forth between a small and long text) by keeping the `actualTextLength` value as minimum text length.\r\n\r\nAdditional improvements:\r\n- Avoid unnecessary loops by specifying the full buffer length as maximum number of characters, rather than the initial text length value.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nCustomers will not experience invalid memory access, an infinite loop, or truncated text being returned when the window/control text changes while the code in `GetWindowText` is executing, e.g. if the window/control is owned by a different thread or process, or if the WndProc alters the text between receiving a `WM_GETTEXTLENGTH` and a `WM_GETTEXT` message.\r\n\r\n## Regression? \r\n\r\nYes (The out-of-bounds write is a regression from #923; the other items are not regressions)\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing as described in https://github.com/dotnet/winforms/issues/2424#issuecomment-559819764\r\n- The text truncation and infinite loop are tested by unit tests.\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-015759\r\n Commit:    28f22a7729\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-015759\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.19564.1\r\n  Commit:  c77948d92a\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview3-014645 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha1-015759 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2460)","Url":"https://github.com/dotnet/winforms/pull/2460","RelatedDescription":"Open PR \"Fix issues in Interop.User32.GetWindowText\" (#2460)"},{"Id":"531718434","IsPullRequest":true,"CreatedAt":"2019-12-03T04:51:07","Actor":"RussKie","Number":"2459","RawContent":null,"Title":"WIP: Move LV related data structures","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2459)","Url":"https://github.com/dotnet/winforms/pull/2459","RelatedDescription":"Open PR \"WIP: Move LV related data structures\" (#2459)"},{"Id":"530981096","IsPullRequest":true,"CreatedAt":"2019-12-03T01:49:33","Actor":"gpetrou","Number":"2455","RawContent":null,"Title":"Move GetMessageTime to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move GetMessageTime to Interop User32\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2455)","Url":"https://github.com/dotnet/winforms/pull/2455","RelatedDescription":"Closed or merged PR \"Move GetMessageTime to Interop User32\" (#2455)"},{"Id":"531428589","IsPullRequest":true,"CreatedAt":"2019-12-02T18:45:44","Actor":"chcosta","Number":"2458","RawContent":null,"Title":"updates from Arcade","State":"open","Body":"Validating Arcade script changes\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2458)","Url":"https://github.com/dotnet/winforms/pull/2458","RelatedDescription":"Open PR \"updates from Arcade\" (#2458)"},{"Id":"531259852","IsPullRequest":true,"CreatedAt":"2019-12-02T16:35:30","Actor":"hughbe","Number":"2457","RawContent":null,"Title":"Add UpDownBase tests and related Control tests","State":"open","Body":"## Proposed Changes\r\n- Add UpDownBase tests and related Control tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2457)","Url":"https://github.com/dotnet/winforms/pull/2457","RelatedDescription":"Open PR \"Add UpDownBase tests and related Control tests\" (#2457)"},{"Id":"530210338","IsPullRequest":true,"CreatedAt":"2019-12-01T22:58:50","Actor":"gpetrou","Number":"2452","RawContent":null,"Title":"Move GetAncestor to Interop User32 and add GA enum","State":"closed","Body":"## Proposed changes\r\n\r\n- Move GetAncestor to Interop User32.\r\n- Add GA enum.\r\n- Remove GA constants and replace their usages with the above enum.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2452)","Url":"https://github.com/dotnet/winforms/pull/2452","RelatedDescription":"Closed or merged PR \"Move GetAncestor to Interop User32 and add GA enum\" (#2452)"},{"Id":"530612771","IsPullRequest":true,"CreatedAt":"2019-12-01T22:43:16","Actor":"hughbe","Number":"2454","RawContent":null,"Title":"Cleanup WindowFromPoint interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup WindowFromPoint interop\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2454)","Url":"https://github.com/dotnet/winforms/pull/2454","RelatedDescription":"Closed or merged PR \"Cleanup WindowFromPoint interop\" (#2454)"},{"Id":"530585138","IsPullRequest":false,"CreatedAt":"2019-11-30T14:24:21","Actor":"hughbe","Number":"2453","RawContent":null,"Title":"Question: Application.RenderWithVisualStyles is always false - how can we set it to true?","State":"open","Body":"Basically I want to test some code that is conditional on `Application.RenderWithVisualStyles`\r\n\r\nThe issue is that `Application.RenderWithVisualStyles` is always false\r\n\r\nThe docs (https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.application.renderwithvisualstyles?view=netframework-4.8 say\r\n![image](https://user-images.githubusercontent.com/1275900/69901708-ed84d780-137c-11ea-9a89-c7f8f5654cf5.png)\r\n\r\nDoing research, I found that `VisualStyleInformation.IsEnabledByUser` is always `false`\r\n\r\n`VisualStyleInformation.IsEnabledByUser` is implemented as\r\n```\r\n/// <summary>\r\n///  Returns true if a visual style has currently been applied by the user, else false.\r\n/// </summary>\r\npublic static bool IsEnabledByUser => UxTheme.IsAppThemed().IsTrue();\r\n```\r\n\r\nIs there a way to make `UxTheme.IsAppThemed` return `true` when running tests from `dotnet test`? When we call `dotnet run`, this works!\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2453","RelatedDescription":"Open issue \"Question: Application.RenderWithVisualStyles is always false - how can we set it to true?\" (#2453)"},{"Id":"530139890","IsPullRequest":false,"CreatedAt":"2019-11-29T03:33:32","Actor":"tcostin","Number":"2451","RawContent":null,"Title":"FormClosed event is raised twice for owned modal window when owner window is closed programatically","State":"open","Body":"See attached sources. I can reproduce this issue with .Net Core 3.0 and .Net Framework 4.7.2\r\n\r\nThe second call to OnFormClosed() seems to be a side effect of shutting down the modal message loop that was created to run the child window.\r\n\r\n[BugFormClosedRaisedTwice.zip](https://github.com/dotnet/winforms/files/3903629/BugFormClosedRaisedTwice.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/2451","RelatedDescription":"Open issue \"FormClosed event is raised twice for owned modal window when owner window is closed programatically\" (#2451)"},{"Id":"529974454","IsPullRequest":true,"CreatedAt":"2019-11-29T02:29:05","Actor":"hughbe","Number":"2448","RawContent":null,"Title":"Add GroupBox tests and related Control methods","State":"closed","Body":"## Proposed Changes\r\n- Add GroupBox tests and related Control methods\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2448)","Url":"https://github.com/dotnet/winforms/pull/2448","RelatedDescription":"Closed or merged PR \"Add GroupBox tests and related Control methods\" (#2448)"},{"Id":"530024002","IsPullRequest":true,"CreatedAt":"2019-11-28T23:00:08","Actor":"hughbe","Number":"2450","RawContent":null,"Title":"Add ColorDialog tests","State":"closed","Body":"## Proposed Changes\r\n- Add ColorDialog tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2450)","Url":"https://github.com/dotnet/winforms/pull/2450","RelatedDescription":"Closed or merged PR \"Add ColorDialog tests\" (#2450)"},{"Id":"529746778","IsPullRequest":true,"CreatedAt":"2019-11-28T22:58:38","Actor":"gpetrou","Number":"2446","RawContent":null,"Title":"Move SetWindowTheme to Interop UxTheme","State":"closed","Body":"## Proposed changes\r\n\r\n- Move SetWindowTheme to Interop UxTheme.\r\n- Remove some unused namespaces.\r\n- Fix GetCurrentThemeName return type.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2446)","Url":"https://github.com/dotnet/winforms/pull/2446","RelatedDescription":"Closed or merged PR \"Move SetWindowTheme to Interop UxTheme\" (#2446)"},{"Id":"529762324","IsPullRequest":true,"CreatedAt":"2019-11-28T08:27:49","Actor":"gpetrou","Number":"2447","RawContent":null,"Title":"[WIP] Remove GetWindowLong and SetWindowLong from UnsafeNativeMethods.cs an…","State":"open","Body":"…d GWL constants from NativeMethods.cs\r\n\r\n## Proposed changes\r\n\r\n- Remove GetWindowLong and SetWindowLong from UnsafeNativeMethods.cs\r\n- Remove GWL constants from NativeMethods.cs\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2447)","Url":"https://github.com/dotnet/winforms/pull/2447","RelatedDescription":"Open PR \"[WIP] Remove GetWindowLong and SetWindowLong from UnsafeNativeMethods.cs an…\" (#2447)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-06T05:30:58.8175914Z","RunDurationInMilliseconds":552}