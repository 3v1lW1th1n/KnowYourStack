{"Data":{"Blog":{"FeedItems":[{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in Visual Studio 15.8, you can...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8322291630","Type":"IssuesEvent","CreatedAt":"2018-09-26T05:13:31","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2217","RelatedDescription":"Closed issue \"any caching support libraries for http responses?\" (#2217) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8321794834","Type":"PullRequestEvent","CreatedAt":"2018-09-26T02:14:18","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2225","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] set $(AndroidSdkDirectory) if blank\" (#2225) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2204\r\n\r\nIn d6009efa, I fixed the issue if `$(AndroidSdkDirectory)` is set to a\r\nnon-existent directory.\r\n\r\nHowever, downstream in `monodroid`, there is a test project with an MSBuild target such as:\r\n\r\n    <Exec Command=\"&quot;$(JavaSdkDirectory)\\bin\\javac&quot; -etc\" />\r\n\r\n`/p:JavaSdkDirectory` is not passed in here at the command line or\r\nimported, and so `/bin/javac` is attempted to be used--which won't\r\nquite work...\r\n\r\nThis brings up an important point.\r\n\r\n`$(AndroidSdkDirectory)`, `$(AndroidNdkDirectory)` and\r\n`$(JavaSdkDirectory)` were public properties that were set if blank.\r\nSo we can't just remove them! There could be unknown projects, NuGet\r\npackages, etc. relying on them.\r\n\r\nSo I think the fix here, is to set these properties if they are blank.\r\nInternally in xamarin-android's MSBuild targets, we should always use\r\nthe private underscore-prefixed versions such as\r\n`$(_AndroidSdkDirectory)`.\r\n\r\nI suspect we will need this change for `monodroid:master` and\r\n`monodroid:d16-0-p1` to build."},{"Id":"8320402858","Type":"PullRequestEvent","CreatedAt":"2018-09-25T20:06:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2224","RelatedDescription":"Opened pull request \"[tests] Run tests in parallel on non-Windows\" (#2224) at xamarin/xamarin-android","RelatedBody":"What do we want?  Faster unit test execution!\r\n\r\nHow do we do that?  By running things in parallel!\r\n\r\nSome of our existing tests are already run in parallel, such as the\r\n`src/Xamarin.Android.Build.Tasks/Tests` tests which specify\r\n`[Parallelizable (ParallelScope.Children)]`, but there is currently no\r\nway to run the NUnit tests *concurrently* with the on-device `.apk`\r\ntests.\r\n\r\nWe *think* there might be a \"win\" here, as the\r\n`Xamarin.Android.Build.Tasks` unit tests are heavily I/O bound, while\r\nthe `.apk` BCL tests are -- presumably -- CPU bound, so executing\r\nthese at the same time might net some nice time savings.\r\n\r\nSpike the idea by adding a new\r\n`build-tools/scripts/parallel-targets.sh` shell script, which will\r\nexecute the `-t TARGET` separately against the specified commandline,\r\nbackgrounding the command and then `wait`ing for them all to finish.\r\nFor example:\r\n\r\n\t$ ./build-tools/scripts/parallel-targets.sh -t A -t B -t C echo\r\n\t/t:A\r\n\t/t:B\r\n\t/t:C\r\n\r\nUpdate the `RunAllTests` target to use `parallel-targets.sh` to\r\nexecute the unit test execution targets, allowing each target to be\r\nrun concurrently."},{"Id":"8320165972","Type":"PullRequestEvent","CreatedAt":"2018-09-25T19:21:54","Actor":"alexischr","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1965","RelatedDescription":"Closed pull request \"[WIP] Enable System.Native build on Android\" (#1965) at xamarin/xamarin-android","RelatedBody":"https://github.com/mono/mono/pull/9575"},{"Id":"8319961059","Type":"PullRequestEvent","CreatedAt":"2018-09-25T18:44:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/609","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add support for new InstantRun\" (#609) at xamarin/xamarin-android","RelatedBody":"This commit does a couple of things.\r\n\r\n1) It reworks the monodroid-glue to copy any .so file it finds\r\nin the .__override__ directory over to the local app directory.\r\nThis should allow us to fast deploy native libraries. Which means\r\nwe no longer need to re-build the apk if a native library changes.\r\n\r\n2) Removes and replaces the `StubApplication` with a new `MultiDexLoader`\r\nContentProvider. This provider is responsible for doing some the things\r\nthe previous StubApplication used to do. But because it is not\r\nderived from an Application it means we should be able to support\r\ncustom Application types for our debug builds. The MultiDexLoader will\r\nrun before EVERYTHING else. This is so we can use dex files from the \r\noverride directory.\r\n\r\n3) Move the Resource Patching code from StubApplication over to a \r\ndedicated `MonkeyPatcher` class so it is all in one place.\r\n\r\n4) Introduce a `ResourceLoader` ContentProvider which will deal with\r\npatching the resource in a FastDev environment.  This is to support [Custom\r\nApplication classes](https://bugzilla.xamarin.com/show_bug.cgi?id=55050).\r\nThe problem we had with this is the resource patching requires that the application\r\nbe created. But because the code was in the `MultiDexLoader` or `StubApplication` \r\nthis could not happen since it would require the app to exist. So the solution is to move\r\nthe patching to a dedicated ContentProvider which is loaded AFTER the user app has\r\nbeen created.\r\n\r\n\r\n\r\n"},{"Id":"8319190469","Type":"PullRequestEvent","CreatedAt":"2018-09-25T16:30:46","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2223","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] optimize $(AssemblySearchPaths)\" (#2223) at xamarin/xamarin-android","RelatedBody":"Context: https://docs.microsoft.com/en-us/visualstudio/msbuild/resolveassemblyreference-task?view=vs-2017\r\nContext: https://twitter.com/KirillOsenkov/status/1043725067081764865\r\n\r\nKirill added a new analyzer to the Windows binlog viewer, noting\r\n`$(AssemblySearchPaths)` that are unused during a build.\r\n\r\nLooking at what we are using currently, it reports:\r\n\r\n    Unused AssemblySearchPaths locations\r\n        {AssemblyFolders}\r\n        {AssemblyFoldersFromConfig:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\AssemblyFolders.config,v9.0}\r\n        {CandidateAssemblyFiles}\r\n        {Registry:Software\\Microsoft\\MonoAndroid,v9.0,AssemblyFoldersEx}\r\n        bin\\Debug\\\r\n\r\nLuckily, we already had MSBuild logic in place to remove `{GAC}` from\r\nthis list.\r\n\r\nBut we certainly are probing search paths that are nonsensical for\r\nXamarin.Android:\r\n- `{AssemblyFolders}`: Specifies the task will use the Visual\r\n  Studio.NET 2003 finding-assemblies-from-registry scheme.\r\n- `{AssemblyFoldersFromConfig:*}`: this probes the system-wide config\r\n  file in the MSBuild / Visual Studio install\r\n- `{CandidateAssemblyFiles}`: The `CandidateAssemblyFiles` property on\r\n  `ResolveAssemblyReferences` is blank. Docs say: Assemblies in this\r\n  list will be considered when the SearchPaths parameter contains\r\n  `{CandidateAssemblyFiles}` as one of the paths to consider.\r\n- `{Registry:*}`: probe the Windows registry...\r\n- `bin\\Debug` or `$(OutputPath)`: not needed, and a potential cause of\r\n  confusion. This would be if there was an arbitrary extra assembly\r\n  sitting in `$(OutputPath)`.\r\n\r\nAnd if we look further, we see odd things:\r\n\r\n    Primary reference \"System, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\".\r\n        Resolved file path is \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\System.dll\".\r\n        Reference found at search path location \"{TargetFrameworkDirectory}\".\r\n        For SearchPath \"{TargetFrameworkDirectory}\".\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\System.winmd\", but it didn't exist.\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\System.dll\", but it didn't exist.\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\System.exe\", but it didn't exist.\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\System.winmd\", but it didn't exist.\r\n\r\nWhy are we looking for `.winmd` files? This is a UWP thing...\r\n\r\nAnd then apparently, our build also will look for `.pri` files?\r\nAnother UWP thing...\r\n\r\n    AllowedRelatedFileExtensions\r\n        .pdb\r\n        .xml\r\n        .pri\r\n        .dll.config\r\n        .exe.config\r\n        .dll.mdb\r\n        .exe.mdb\r\n\r\nSo the first fix is to trim `$(AssemblySearchPaths)` to precisely what\r\nXamarin.Android needs:\r\n\r\n    <AssemblySearchPaths>\r\n        {HintPathFromItem};\r\n        {TargetFrameworkDirectory};\r\n        {RawFileName};\r\n    </AssemblySearchPaths>\r\n\r\nWe shouldn't be concerned about other system-wide places.\r\n\r\nNext, we should only be looking at these file extensions:\r\n\r\n    <AllowedReferenceAssemblyFileExtensions>\r\n        .dll;\r\n        .exe;\r\n    </AllowedReferenceAssemblyFileExtensions>\r\n    <AllowedReferenceRelatedFileExtensions>\r\n        .pdb;\r\n        .xml;\r\n        .dll.config;\r\n        .exe.config;\r\n        .dll.mdb;\r\n        .exe.mdb\r\n    </AllowedReferenceRelatedFileExtensions>\r\n\r\nRemoving `.winmd` from `$(AllowedReferenceAssemblyFileExtensions)` and\r\n`.pri` from `$(AllowedReferenceRelatedFileExtensions)`.\r\n\r\nThis makes the log probing for `System.dll` much cleaner:\r\n\r\n    Primary reference \"System, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\".\r\n        Resolved file path is \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\System.dll\".\r\n        Reference found at search path location \"{TargetFrameworkDirectory}\".\r\n        For SearchPath \"{TargetFrameworkDirectory}\".\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\System.dll\", but it didn't exist.\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\System.exe\", but it didn't exist.\r\n\r\nHere is the log of changes made to these properties here at MSBuild\r\nevaluation time:\r\n\r\n    Property reassignment: $(AssemblySearchPaths)=\"\r\n            {HintPathFromItem};\r\n            {TargetFrameworkDirectory};\r\n            {RawFileName};\r\n        \" (previous value: \"\r\n        {CandidateAssemblyFiles};\r\n        ;\r\n        {HintPathFromItem};\r\n        {TargetFrameworkDirectory};\r\n        {AssemblyFoldersFromConfig:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\AssemblyFolders.config,v9.0};\r\n        {Registry:Software\\Microsoft\\MonoAndroid,v9.0,AssemblyFoldersEx};\r\n        {AssemblyFolders};\r\n        {GAC};\r\n        {RawFileName};\r\n        bin\\Debug\\\r\n        \") at xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Common.targets (338,2)\r\n\r\n    Property reassignment: $(AllowedReferenceAssemblyFileExtensions)=\"\r\n            .dll;\r\n            .exe;\r\n        \" (previous value: \"\r\n        .winmd;\r\n        .dll;\r\n        .exe\r\n        \") at xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Common.targets (343,2)\r\n\r\n    Property reassignment: $(AllowedReferenceRelatedFileExtensions)=\"\r\n            .pdb;\r\n            .xml;\r\n            .dll.config;\r\n            .exe.config;\r\n            .dll.mdb;\r\n            .exe.mdb\r\n        \" (previous value: \"\r\n        .pdb;\r\n        .xml;\r\n        .pri;\r\n        .dll.config;\r\n        .exe.config\r\n        \") at xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Common.targets (347,2)\r\n\r\n## Results\r\n\r\nI timed the Xamarin.Forms Control Gallery project, since I felt this\r\nchange would improve larger projects the most.\r\n\r\nProject here:\r\nhttps://github.com/jonathanpeppers/Xamarin.Forms/tree/msbuild-timing\r\n\r\nBefore:\r\n\r\n     1106 ms  ResolveAssemblies                          2 calls\r\n     1401 ms  ResolveAssemblyReference                  18 calls\r\n     Time Elapsed 00:00:11.65\r\n\r\nAfter:\r\n\r\n      909 ms  ResolveAssemblies                          2 calls\r\n     1088 ms  ResolveAssemblyReference                  18 calls\r\n     Time Elapsed 00:00:09.71\r\n\r\nThis seems to directly save ~500ms to these targets in incremental\r\nbuilds. There is some variance to the overall build time, so it is\r\nhard to know if savings are also occurring in other tasks.\r\n\r\n## Upstream\r\n\r\nOn MacOS, I also see probing for `.winmd` files!\r\n\r\n    Considered \"xamarin-android/bin/Debug/lib/xamarin.android/xbuild-frameworks/MonoAndroid/v9.0/System.winmd\", but it didn't exist.\r\n\r\nPerhaps we need some upstream changes to MSBuild as well..."},{"Id":"8318555410","Type":"PullRequestEvent","CreatedAt":"2018-09-25T14:56:32","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2219","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix typo for `AndroidAapt2LinkExtraArgs`\" (#2219) at xamarin/xamarin-android","RelatedBody":"Fixes #2218\r\n\r\nThere was a typo in the property group definition for\r\n`AndroidAapt2LinkExtraArgs`. It was `AndroidAap2LinkExtraArgs`.\r\nAs a result the extra args would never be picked up."},{"Id":"8318555378","Type":"IssuesEvent","CreatedAt":"2018-09-25T14:56:32","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2218","RelatedDescription":"Closed issue \"Error using <AndroidAapt2LinkExtraArgs> tag, there is a typo\" (#2218) at xamarin/xamarin-android","RelatedBody":"You can see the tag `AndroidAap2LinkExtraArgs` must be `AndroidAapt2LinkExtraArgs`\r\n\r\nThis is neccesary to this rule to work.\r\n\r\nShould I made a PR, or you're OK fixing it by yourselves?\r\n\r\n_Originally posted by @pulimento in https://github.com/xamarin/xamarin-android/commit/a29c2c06374a25bcd54beb59960a07eefc2b4e52#commitcomment-30635203"},{"Id":"8318480325","Type":"PullRequestEvent","CreatedAt":"2018-09-25T14:46:41","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2222","RelatedDescription":"Opened pull request \"Don't ignore IntentFilter attribute on content provider classes\" (#2222) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2202\r\nContext: https://forums.xamarin.com/discussion/96028/android-documentsprovider-intent-filter\r\n\r\nWhen generating `AndroidManifest.xml` we currently fail to take into account any\r\ninstances of the `IntentFilterAttribute` custom attribute decorating all the\r\ncontent provider classes (that is ones with another custom attribute -\r\n`ContentProviderAttribute`). This forces the developer to manually edit the\r\nmanifest to add appropriate entry for the provider and its intent filters.\r\n\r\nThis commit removes the limitation by making sure our manifest generator looks\r\nfor and processes the `IntentFilter` custom attribute."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8321687580","Type":"PullRequestEvent","CreatedAt":"2018-09-26T01:37:04","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3900","RelatedDescription":"Opened pull request \"Test fork PR\" (#3900) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8321229061","Type":"IssuesEvent","CreatedAt":"2018-09-25T23:03:23","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3856","RelatedDescription":"Closed issue \"[Android] MaxLines on Label not working with FastRenderers 3.3.0-pre1\" (#3856) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nAdded MaxLines to Label and it's not working for Android. iOS is ok.\r\n\r\n```\r\n<Label MaxLines=\"4\" LineBreakMode=\"TailTruncation\" Text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam mattis quam non enim pellentesque, ut placerat purus finibus. Nulla quis tincidunt ante. Ut mauris lectus, aliquam a sagittis vitae, consequat eget elit. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque convallis nunc nisi, a imperdiet elit efficitur et. Duis in lectus mollis, interdum ipsum et, tincidunt orci. Fusce ipsum metus, imperdiet non lacus vitae, facilisis feugiat magna. Nulla volutpat nisl tortor, a consectetur felis consectetur non. Curabitur in enim vulputate sem volutpat bibendum id nec lorem. Mauris laoreet lacus ac volutpat tempus.\"/>\r\n```\r\n\r\n### Screenshots\r\n\r\n<img width=\"927\" alt=\"screenshot 2018-09-20 21 02 45\" src=\"https://user-images.githubusercontent.com/41873/45856124-d9752d00-bd18-11e8-9845-3b750e2e5822.png\">\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/blob/3.3.0-pre/TheLittleThingsPlayground/Views/ThreeThreePage.xaml\r\n"},{"Id":"8321228066","Type":"IssuesEvent","CreatedAt":"2018-09-25T23:03:06","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3857","RelatedDescription":"Closed issue \"[Android] Label underline doesn't work in 3.3.0-pre1 with Fast Renderers\" (#3857) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nUnderline works in iOS but **not** Android.\r\n\r\n```\r\n<Label Text=\"Label/Span Underline and Strikethrough\" TextDecorations=\"Underline\"  class=\"featureHeader\" Margin=\"0,0,0,10\"/>\r\n```\r\n\r\n### Screenshots\r\n\r\n<img width=\"927\" alt=\"screenshot 2018-09-20 21 02 45\" src=\"https://user-images.githubusercontent.com/41873/45856180-12ad9d00-bd19-11e8-8389-31b56545c513.png\">\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/blob/3.3.0-pre/TheLittleThingsPlayground/Views/ThreeThreePage.xaml\r\n"},{"Id":"8320568869","Type":"PullRequestEvent","CreatedAt":"2018-09-25T20:36:51","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3879","RelatedDescription":"Merged pull request \"[Enhancement] Create a bindable property for AutomationId\" (#3879) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded a bindable AutomationId property. It's Sunday morning, and I'm half asleep still. Part of me says the work that goes into this isn't as trivial as I made it to be. :)\r\n\r\nI believe Xamarin takes care of documentation now.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3845\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - string AutomationId { get; set; } //Bindable Property\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8320568850","Type":"IssuesEvent","CreatedAt":"2018-09-25T20:36:51","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3845","RelatedDescription":"Closed issue \"[Enhancement] Make AutomationID Bindable\" (#3845) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nSee https://xamarin.uservoice.com/forums/144858/suggestions/13865469\r\n\r\n## Implementation\r\n\r\nTBD\r\n\r\n## API\r\n\r\nTBD\r\n"},{"Id":"8320554775","Type":"PullRequestEvent","CreatedAt":"2018-09-25T20:34:16","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3899","RelatedDescription":"Opened pull request \"[Android] Prevent double time/date picker dialogs on Android when setting focus\" (#3899) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf the Android Date- or TimePicker controls get a focus request while the picker dialog is visible, they launch a second picker dialog which covers the first. \r\n\r\nThis change verifies that the picker dialog is not already visible before launching a new one.\r\n\r\n### Issues Resolved ### \r\n\r\n- Breaking UI tests 42074/41424 (and following tests, as the dialogs do not dismiss properly).\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nRun UI tests 42074 and 41424; in each one, tap the \"Click to focus X\" button. Then tap the hardware back button. Without this change, a picker dialog will still be visible. With this change, there will be no picker dialog visible.\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has automated tests \r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"8319620865","Type":"IssuesEvent","CreatedAt":"2018-09-25T17:44:12","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3612","RelatedDescription":"Closed issue \"Accessibility on popups\" (#3612) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nAccessibility does not work correctly. When the popup appears, the focus remains on the page behind the popup. When you click on an element, it focuses properly, but as soon as the element passes to the end, the focus moves back to the page behind the popup\r\n\r\n### Steps to Reproduce\r\n\r\n1. Turn on VoiceOver / Talkback\r\n2. Set AutomationProperties.IsInAccessibleTree=\"true\" and AutomationProperties.Hint on element in popup page\r\n3. Open popup window and try navigate across elements on popup page\r\n\r\n### Expected Behavior\r\nOn page appear focus on first element\r\nStay focus on page when escaping last element\r\n\r\n### Actual Behavior\r\nNo focus on page appear\r\nLeaving focus from page after last element\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.482510\r\n- Last known good version: \r\n- IDE: VS 2017 (15.8)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.4\r\n  - Android: 8.1 \r\n  - UWP: 16299"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8320934693","Type":"PullRequestEvent","CreatedAt":"2018-09-25T21:48:56","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4880","RelatedDescription":"Opened pull request \"Update tests/README to document XM_TEST_NAME\" (#4880) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/3609"},{"Id":"8320856631","Type":"PullRequestEvent","CreatedAt":"2018-09-25T21:32:02","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4879","RelatedDescription":"Opened pull request \"Update MM0134 with url to fix #3577\" (#4879) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/3577"},{"Id":"8320333910","Type":"IssuesEvent","CreatedAt":"2018-09-25T19:53:28","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4874","RelatedDescription":"Closed issue \"[XM]NSCustomView sample fails to build in Release mode with\"error MM5109: Native linking failed with error code 1\" when Target Framework is set to \"Unsupported Framework\"\" (#4874) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Download NSCustomView Sample from https://github.com/xamarin/mac-samples\r\n2. Open NSCustomView Sample in VSFM\r\n3. Change Config to Release Mode\r\n4. Open Project properties >>General >> Select Unsupported framework\r\n5. Build the application\r\n\r\n### Expected Behavior\r\nNSCustomView Sample should build and run successfully.\r\n\r\n### Actual Behavior\r\n[XM]NSCustomView sample fails to build in Release mode with\"error MM5109: Native linking failed with error code 1\" when Target Framework is set to \"Unsupported Framework\"\r\n\r\n### Environment\r\nhttps://gist.github.com/p-lad/e9e7ecd0cf27caf6e292d0e2693c8adb\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\nhttps://gist.github.com/p-lad/0f9cec282a8773fc8ded4081961473a8\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\nmac samples/NSCustomView\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8319894131","Type":"PullRequestEvent","CreatedAt":"2018-09-25T18:32:23","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4877","RelatedDescription":"Merged pull request \"[xtro] Only return 1 in case of failure in reporter.\" (#4877) at xamarin/xamarin-macios","RelatedBody":"This solves two problems:\n\n* xharness thinks it crashed if the exit code is neither 0 nor 1, and\n  helpfully says so and tries to collect crash reports, which only ends up\n  being confusing.\n\n* The exit code is byte-sized on macOS. This means that trying to return 256\n  actually returns 0 (success)."},{"Id":"8319720880","Type":"PullRequestEvent","CreatedAt":"2018-09-25T18:01:34","Actor":"MSylvia","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4878","RelatedDescription":"Opened pull request \"Bump master versions\" (#4878) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":199,"FavoriteCount":107,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":44,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":178,"FavoriteCount":88,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-09-26T05:30:56.5513628Z","RunDurationInMilliseconds":3946}