{"Data":{"GitHub":{"Issues":[{"Id":"606633158","IsPullRequest":false,"CreatedAt":"2020-04-24T23:19:16","Actor":"AdamYoblick","Number":"3140","RawContent":null,"Title":"Move tests to helix","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/3140","RelatedDescription":"Open issue \"Move tests to helix\" (#3140)"},{"Id":"606517937","IsPullRequest":true,"CreatedAt":"2020-04-24T18:57:11","Actor":"dotnet-maestro[bot]","Number":"3139","RawContent":null,"Title":"[release/5.0-preview4] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NetCore.ILAsm)\r\n- **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NetCore.ILAsm)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:440f0db1-50fd-4e00-9b1a-08d7e1735b84)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 440f0db1-50fd-4e00-9b1a-08d7e1735b84\r\n- **Build**: 20200423.9\r\n- **Date Produced**: 4/24/2020 9:30 PM\r\n- **Commit**: 0ce44af8241fafb5c6080b111cc00391308db681\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Drawing.Common**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Security.Permissions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n\r\n[marker]: <> (End:440f0db1-50fd-4e00-9b1a-08d7e1735b84)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3139)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3139","RelatedDescription":"Open PR \"[release/5.0-preview4] Update dependencies from dotnet/runtime\" (#3139)"},{"Id":"606511974","IsPullRequest":true,"CreatedAt":"2020-04-24T18:45:25","Actor":"dotnet-maestro[bot]","Number":"3138","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200424.4\r\n- **Date Produced**: 4/24/2020 5:49 PM\r\n- **Commit**: 64a95836accecd617b14041778883af2eed52e5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20224.4\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3138)","Url":"https://github.com/dotnet/winforms/pull/3138","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#3138)"},{"Id":"606461337","IsPullRequest":true,"CreatedAt":"2020-04-24T17:10:49","Actor":"M-Lipin","Number":"3137","RawContent":null,"Title":"Fixing Issue 3124 property grid view list box accessibility issues","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3124\r\n\r\n\r\n## Proposed changes\r\n\r\n- Reworking PropertyGridView ListBox AccessibleObject implementation to inherit from standalone ListBox AccessibleObject.\r\n- Adding safer calls to system IAccessible object (COM) to prevent unexpected exceptions while accessing native accessibility when this is not found.\r\n- Improving accessibility navigation to ListBox within the PropertyGrid to prevent navigating to the list when this is hidden.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will not experience unexpected errors when working with PropertyGridView with assist of Accessibility client apps.\r\n- Customers will be able to navigate correctly thru the list of PropertyGridView properties and distinct Properties' lists of available options.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![Before](https://user-images.githubusercontent.com/23213980/80238646-74598a00-8667-11ea-87ca-88b7205bd763.gif)\r\n\r\n### After\r\n![After](https://user-images.githubusercontent.com/23213980/80238676-7d4a5b80-8667-11ea-930e-8b0c161cb869.png)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Unit testing.\r\n- Automation test.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20073.10\r\n Commit:    29f4d693a9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.20072.3\r\n  Commit:  c3dc1fdfdc\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3137)","Url":"https://github.com/dotnet/winforms/pull/3137","RelatedDescription":"Open PR \"Fixing Issue 3124 property grid view list box accessibility issues\" (#3137)"},{"Id":"606303078","IsPullRequest":false,"CreatedAt":"2020-04-24T13:12:21","Actor":"M-Lipin","Number":"3136","RawContent":null,"Title":"PropertyGridView DropDownHolder is not covered by unit tests","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nDropDownHolder control implementation is not covered by unit tests.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3136","RelatedDescription":"Open issue \"PropertyGridView DropDownHolder is not covered by unit tests\" (#3136)"},{"Id":"606262273","IsPullRequest":true,"CreatedAt":"2020-04-24T12:27:30","Actor":"dotnet-maestro[bot]","Number":"3135","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200424.1\r\n- **Date Produced**: 4/24/2020 11:03 AM\r\n- **Commit**: 4034228a3d3fa093e21479765f03c10c0443fc68\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3135)","Url":"https://github.com/dotnet/winforms/pull/3135","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3135)"},{"Id":"606261969","IsPullRequest":true,"CreatedAt":"2020-04-24T12:01:43","Actor":"dotnet-maestro[bot]","Number":"3134","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200421.14\r\n- **Date Produced**: 4/21/2020 10:41 PM\r\n- **Commit**: e13ae00db986456a5012f2d9d479d893b3f5aff6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3134)","Url":"https://github.com/dotnet/winforms/pull/3134","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3134)"},{"Id":"606252581","IsPullRequest":false,"CreatedAt":"2020-04-24T11:44:01","Actor":"hughbe","Number":"3133","RawContent":null,"Title":"Should we validate pointers more/better in WndProc","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nWe've turned a lot of `WndProc` related code into pointers. This is great, as it helps with marshalling etc., is so much cleaner and avoids allocations.\r\n\r\nHowever, I've noticed this may lead to problems.\r\nConsider `ListView.WmReflectNotify` which handles `WM.REFLECT | WM.NOTIFY`, as below.\r\n\r\n```cs\r\nprivate unsafe void WmReflectNotify(ref Message m)\r\n{\r\n    User32.NMHDR* nmhdr = (User32.NMHDR*)m.LParam;\r\n\r\n    switch (nmhdr->code)\r\n    {\r\n        case (int)NM.CUSTOMDRAW:\r\n            CustomDraw(ref m);\r\n            break;\r\n\r\n        case (int)LVN.BEGINLABELEDITW:\r\n            {\r\n                NMLVDISPINFO* dispInfo = (NMLVDISPINFO*)m.LParam;\r\n                LabelEditEventArgs e = new LabelEditEventArgs(dispInfo->item.iItem);\r\n                ...\r\n            }\r\n\r\n        ...\r\n    }\r\n}\r\n```\r\n\r\nThe code `switch (nmhdr->code)` can now throw `AccessViolationException` (I think it used to throw NRE in .NET Framework)\r\n\r\nThe code `dispInfo->item.iItem` can now also throw `AccessViolationException` (I think it used to throw NRE in .NET Framework)\r\n\r\nShould we harden these against crashes/null dereferences? I don't really see how the native code in comctl32 would send `NULL` pointers but I obviously don't have the code. Also theres a chance that people could pass bogus data into the method.\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\nMaybe validate things, how? Early returns? Throwing - probably not.\r\n\r\n**Will this feature affect UI controls?**\r\nNo","Url":"https://github.com/dotnet/winforms/issues/3133","RelatedDescription":"Open issue \"Should we validate pointers more/better in WndProc\" (#3133)"},{"Id":"606251274","IsPullRequest":true,"CreatedAt":"2020-04-24T11:41:23","Actor":"v-chmart","Number":"3132","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20200424","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nLocalization update\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3132)","Url":"https://github.com/dotnet/winforms/pull/3132","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/winforms master | 20200424\" (#3132)"},{"Id":"605754674","IsPullRequest":true,"CreatedAt":"2020-04-24T06:12:39","Actor":"dotnet-maestro[bot]","Number":"3128","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200423.4\r\n- **Date Produced**: 4/23/2020 5:27 PM\r\n- **Commit**: dc3c4dc076171bc9a7c27c527d4d814eaae06cb2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3128)","Url":"https://github.com/dotnet/winforms/pull/3128","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3128)"},{"Id":"606020639","IsPullRequest":false,"CreatedAt":"2020-04-24T03:55:45","Actor":"cston","Number":"3131","RawContent":null,"Title":"Support creating \"single instance\" applications","State":"open","Body":"Consider support for creating \"single instance\" applications similar to the [VisualBasic Application Model](https://docs.microsoft.com/en-us/dotnet/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model?view=netframework-4.8#uses-for-the-application-model).\r\n\r\nIn the VisualBasic model, an application opts-in by setting `WindowsFormsApplicationBase.IsSingleInstance = True`.\r\n\r\nWhen a second instance of the application is launched, the first instance fires a `WindowsFormsApplicationBase.StartupNextInstance` event, and the second instance terminates.\r\n","Url":"https://github.com/dotnet/winforms/issues/3131","RelatedDescription":"Open issue \"Support creating \"single instance\" applications\" (#3131)"},{"Id":"604596298","IsPullRequest":false,"CreatedAt":"2020-04-23T23:51:08","Actor":"Vino-Wang","Number":"3118","RawContent":null,"Title":"The Editing Rectangle of TreeNode is truncated by the border of TreeView control","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-preview.5.20221.6\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n<!-- Yes / No -->\r\n\r\n**More info:**\r\n1. This issue is a not regression issue, also can reproduce with VS2015, VS2017 and VS2019 from .NET framework 3.5 to 4.8.\r\n2. This issue also reproduce with .NET Core 3.1.\r\n\r\n**Problem description:**\r\nThe Editing rectangle of the first Node is truncated.\r\n![Actual](https://user-images.githubusercontent.com/18568603/79964200-f22d6200-84bc-11ea-9776-369e989cecf3.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThere should no truncation.\r\n![Expected](https://user-images.githubusercontent.com/18568603/79964223-fa859d00-84bc-11ea-9887-ec06467ee48b.png)\r\n\r\n**Minimal repro:**\r\n1.\tCreate a .NET Core winforms project.\r\n2.\tDrag a TreeView control, set the LabelEdit property to True.\r\n3.\tClick the smart tag in the top-right corner to show the TreeView Tasks window.\r\n4.\tClick the ‘Edit Nodes…’, add 2 Root Nodes with default name: Node0 & Node1.\r\n5.\tBuild and run it, double click on the Nodes to edit.\r\n\r\nOr \r\n1.\tRun the attached project.\r\n[TreeViewEditingRectangleTruncated.zip](https://github.com/dotnet/winforms/files/4515070/TreeViewEditingRectangleTruncated.zip)\r\n2.\tClick the Node0, then click button1.","Url":"https://github.com/dotnet/winforms/issues/3118","RelatedDescription":"Closed issue \"The Editing Rectangle of TreeNode is truncated by the border of TreeView control\" (#3118)"},{"Id":"605925336","IsPullRequest":true,"CreatedAt":"2020-04-23T23:06:09","Actor":"AdamYoblick","Number":"3130","RawContent":null,"Title":"add dotnet tools feed","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3130)","Url":"https://github.com/dotnet/winforms/pull/3130","RelatedDescription":"Closed or merged PR \"add dotnet tools feed\" (#3130)"},{"Id":"605772805","IsPullRequest":true,"CreatedAt":"2020-04-23T18:46:14","Actor":"weltkante","Number":"3129","RawContent":null,"Title":"make tests more robust","State":"open","Body":"Fixes #3121\r\n\r\n## Proposed changes\r\nMake tests more robust against machine specific environments:\r\n* taskbar not docked to the bottom\r\n* having more than one monitor (or a real large monitor)\r\n* having monitors with different DPI settings\r\n\r\n## Customer Impact\r\n- none outside of this repository, this only affects tests\r\n- for developers on this repository, more people should be able to successfully run tests locally\r\n\r\n## Regression? \r\n- arguably adding tests which are written against a specific machine are a regression ;-)\r\n\r\n## Risk\r\n- making tests slightly more tolerant may hide something, but its unlikely\r\n\r\n## Test methodology\r\n- running tests locally now succeeds\r\n- manually debugging tests to make sure the changes are minimal invasive\r\n\r\n## Test environment(s)\r\n- a machine with two monitors having different DPIs\r\n- secondary monitor placed to the right of the primary monitor\r\n- task bar docket to the left on the primary monitor, to the right on secondary monitor\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3129)","Url":"https://github.com/dotnet/winforms/pull/3129","RelatedDescription":"Open PR \"make tests more robust\" (#3129)"},{"Id":"605703419","IsPullRequest":false,"CreatedAt":"2020-04-23T17:10:35","Actor":"hughbe","Number":"3127","RawContent":null,"Title":"TreeNode.UpdateNode doesn't check if the node's TreeView is disposed","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nMaster\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nMany functions and properties in `TreeNode` check `if (TreeView.IsDisposed)` before doing anything. This prevents `ObjectDisposedExceptions` thrown.\r\n\r\nHowever, `UpdateNode` doesn't cause this check, meaning `ObjectDisposedException` is thrown\r\n\r\n**Expected behavior:**\r\n\r\nNo exception thrown, setting is succesful.\r\n\r\n**Minimal repro:**\r\n```cs\r\n[WinFormsTheory]\r\n[MemberData(nameof(Text_SetWithTreeView_TestData))]\r\npublic void TreeNode_Text_SetWithTreeViewDisposed_GetReturnsExpected(bool scrollable, string value, string expected)\r\n{\r\n    using var control = new TreeView\r\n    {\r\n        Scrollable = scrollable\r\n    };\r\n    var node = new TreeNode();\r\n    control.Nodes.Add(node);\r\n    Assert.NotEqual(IntPtr.Zero, control.Handle);\r\n    control.Dispose();\r\n\r\n    node.Text = value;\r\n    Assert.Equal(expected, node.Text);\r\n    Assert.False(control.IsHandleCreated);\r\n\r\n    // Set same\r\n    node.Text = value;\r\n    Assert.Equal(expected, node.Text);\r\n    Assert.False(control.IsHandleCreated);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/3127","RelatedDescription":"Open issue \"TreeNode.UpdateNode doesn't check if the node's TreeView is disposed\" (#3127)"},{"Id":"605554539","IsPullRequest":true,"CreatedAt":"2020-04-23T13:50:32","Actor":"hughbe","Number":"3126","RawContent":null,"Title":"Add TreeNode property tests, add missing argument validation and make idempotent","State":"open","Body":"## Proposed Changes\r\n- Add TreeNode property tests\r\n- Fix TreeNode image index validation and make idempotent\r\n- Return from `UpdateNode` the node's tree view is disposed: fixes #3127\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3126)","Url":"https://github.com/dotnet/winforms/pull/3126","RelatedDescription":"Open PR \"Add TreeNode property tests, add missing argument validation and make idempotent\" (#3126)"},{"Id":"605440657","IsPullRequest":true,"CreatedAt":"2020-04-23T11:21:15","Actor":"dotnet-maestro[bot]","Number":"3125","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200423.1\r\n- **Date Produced**: 4/23/2020 10:08 AM\r\n- **Commit**: bac79b9f62595924f71cf6666283e9fc60a8beea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Security.Permissions**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Drawing.Common**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3125)","Url":"https://github.com/dotnet/winforms/pull/3125","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3125)"},{"Id":"605305914","IsPullRequest":false,"CreatedAt":"2020-04-23T07:29:53","Actor":"M-Lipin","Number":"3124","RawContent":null,"Title":"Accessibility: PropertyGrid ListBox accessibility issues","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20073.10\r\n Commit:    29f4d693a9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\\\r\n\r\n**Have you experienced this same bug with .NET Framework?**\r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nPropertyGrid ListBox items are inaccessible when hovering over by mouse: Inspect does not show the focus rectangle around the item and in some cases there are exceptions thrown when getting info from system IAccessible.\r\n\r\n**Expected behavior:**\r\n- No issues with accessing PropertyGrid ListBox and ListBox items.\r\n\r\n**Minimal repro:**\r\n- Create WinForms app with PropertyGrid, set SelectedObject to some entity (for instance button added to the same Form)\r\n- Run app and Inspect, analyze with Inspect the ListBox items of some List property (for instance Accessible Role)","Url":"https://github.com/dotnet/winforms/issues/3124","RelatedDescription":"Open issue \"Accessibility: PropertyGrid ListBox accessibility issues\" (#3124)"},{"Id":"604420856","IsPullRequest":true,"CreatedAt":"2020-04-23T05:54:42","Actor":"RussKie","Number":"3115","RawContent":null,"Title":"Validate requested clipboard formats","State":"closed","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nContributes to tests stability work.\r\n\r\n## Proposed changes\r\n\r\nCertain clipboard tests failed because they fed in `null` and empty string as formats. These would ultimately lead to failure when we attempted to register these formats with `RegisterClipboardFormatW` call.\r\n\r\n```\r\n[xUnit.net 00:00:09.54]     System.Windows.Forms.Tests.ClipboardTests.Clipboard_ContainsData_InvokeMultipleTimes_Success(format: \"\") [FAIL]\r\n[xUnit.net 00:00:09.54]     System.Windows.Forms.Tests.ClipboardTests.Clipboard_ContainsData_InvokeMultipleTimes_Success(format: null) [FAIL]\r\n  X System.Windows.Forms.Tests.ClipboardTests.Clipboard_ContainsData_InvokeMultipleTimes_Success(format: \"\") [3ms]\r\n  Error Message:\r\n   System.ComponentModel.Win32Exception : Clipboard format registration did not succeed.\r\n  Stack Trace:\r\n     at System.Windows.Forms.DataFormats.GetFormat(String format) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\DataFormats.cs:line 188\r\n   at System.Windows.Forms.DataObject.OleConverter.GetDataPresentInner(String format) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\DataObject.cs:line 1764\r\n   at System.Windows.Forms.DataObject.OleConverter.GetDataPresent(String format, Boolean autoConvert) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\DataObject.cs:line 1782      \r\n   at System.Windows.Forms.DataObject.GetDataPresent(String format, Boolean autoConvert) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\DataObject.cs:line 229\r\n   at System.Windows.Forms.Clipboard.ContainsData(String format) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Clipboard.cs:line 255\r\n   at System.Windows.Forms.Tests.ClipboardTests.Clipboard_ContainsData_InvokeMultipleTimes_Success(String format) in C:\\Development\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ClipboardTests.cs:line 56\r\n\r\n  X System.Windows.Forms.Tests.ClipboardTests.Clipboard_ContainsData_InvokeMultipleTimes_Success(format: null) [2ms]\r\n  Error Message:\r\n   System.ComponentModel.Win32Exception : Clipboard format registration did not succeed.\r\n  Stack Trace:\r\n     at System.Windows.Forms.DataFormats.GetFormat(String format) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\DataFormats.cs:line 188\r\n   at System.Windows.Forms.DataObject.OleConverter.GetDataPresentInner(String format) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\DataObject.cs:line 1764\r\n   at System.Windows.Forms.DataObject.OleConverter.GetDataPresent(String format, Boolean autoConvert) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\DataObject.cs:line 1782      \r\n   at System.Windows.Forms.DataObject.GetDataPresent(String format, Boolean autoConvert) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\DataObject.cs:line 229\r\n   at System.Windows.Forms.Clipboard.ContainsData(String format) in C:\\Development\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Clipboard.cs:line 255\r\n   at System.Windows.Forms.Tests.ClipboardTests.Clipboard_ContainsData_InvokeMultipleTimes_Success(String format) in C:\\Development\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ClipboardTests.cs:line 56\r\n                                                                                                                                                                                                                [xUnit.net 00:00:09.67]     System.Windows.Forms.Tests.ClipboardTests.Clipboard_GetDataObject_InvokeMultipleTimes_Success [FAIL]\r\n```\r\n\r\nClamp down on this and ensure these formats are rejected up front.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Some customers may see it as a breaking changes, since instead of `Win32Exception` we'll now be throwing `ArgumentException` if `null`, empty string or whitespaces are passed in.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal, handling of an edge-case scenario\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- existing `ClipboardTests` now succeed\r\n- new tests to `DataFormatsTests`\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3115)","Url":"https://github.com/dotnet/winforms/pull/3115","RelatedDescription":"Closed or merged PR \"Validate requested clipboard formats\" (#3115)"},{"Id":"605139588","IsPullRequest":true,"CreatedAt":"2020-04-23T02:51:11","Actor":"Anipik","Number":"3123","RawContent":null,"Title":"Manually add publishing for p4 and p5 channels in preview4","State":"closed","Body":"The change got merged in master, it needed to be in preview4 \r\nso just cherry-picking the change\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3123)","Url":"https://github.com/dotnet/winforms/pull/3123","RelatedDescription":"Closed or merged PR \"Manually add publishing for p4 and p5 channels in preview4\" (#3123)"},{"Id":"604963368","IsPullRequest":true,"CreatedAt":"2020-04-22T23:18:41","Actor":"kpreisser","Number":"3119","RawContent":null,"Title":"Remove dead code in TaskDialogPage.Bind()","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove code which would set `TaskDialogRadioButton.Checked` to `false` after binding it, in case another radio button was already checked.\r\nThis code (`radioButton.Checked = false;`) will never execute since `TaskDialogPage.Validate()` will already have ensured that only a single button is checked. Additionally, that code would actually throw if executed here as the button has already been bound.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None; the condition (more than one radio button is checked) cannot be met in the current code.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing and code review\r\n\r\nThanks!\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3119)","Url":"https://github.com/dotnet/winforms/pull/3119","RelatedDescription":"Closed or merged PR \"Remove dead code in TaskDialogPage.Bind()\" (#3119)"},{"Id":"605120765","IsPullRequest":false,"CreatedAt":"2020-04-22T22:45:11","Actor":"weltkante","Number":"3122","RawContent":null,"Title":"Bugfixes from Xunit.StaFact nuget package not consumed","State":"open","Body":"**.NET Core Version:**\r\n5.0 master\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nnot applicable\r\n\r\n**Problem description:**\r\n\r\nThe nuget package `Xunit.StaFact` used by WinForms had a bug which prevents execution of tests inside VS: <details><summary>VS test error message</summary>\r\n\r\n```\r\n[xUnit.net 00:00:00.47] System.Windows.Forms.Tests: Catastrophic error during deserialization: System.InvalidOperationException: Could not de-serialize type 'Xunit.Sdk.WinFormsTheoryTestCase' because it lacks a parameterless constructor.\r\n   at Xunit.Serialization.XunitSerializationInfo.DeserializeSerializable(Type type, String serializedValue) in C:\\Dev\\xunit\\xunit\\src\\common\\XunitSerializationInfo.cs:line 213\r\n   at Xunit.Serialization.XunitSerializationInfo.Deserialize(Type type, String serializedValue) in C:\\Dev\\xunit\\xunit\\src\\common\\XunitSerializationInfo.cs:line 110\r\n   at Xunit.Sdk.SerializationHelper.Deserialize[T](String serializedValue) in C:\\Dev\\xunit\\xunit\\src\\common\\SerializationHelper.cs:line 40\r\n   at Xunit.Sdk.XunitTestFrameworkExecutor.Deserialize(String value) in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\XunitTestFrameworkExecutor.cs:line 84\r\n   at Xunit.DefaultTestCaseBulkDeserializer.<BulkDeserialize>b__2_0(String serialization) in C:\\Dev\\xunit\\xunit\\src\\xunit.runner.utility\\Descriptor\\DefaultTestCaseBulkDeserializer.cs:line 22\r\n   at System.Linq.Utilities.<>c__DisplayClass2_0`3.<CombineSelectors>b__0(TSource x)\r\n   at System.Linq.Enumerable.SelectListIterator`2.ToList()\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Xunit.DefaultTestCaseBulkDeserializer.BulkDeserialize(List`1 serializations) in C:\\Dev\\xunit\\xunit\\src\\xunit.runner.utility\\Descriptor\\DefaultTestCaseBulkDeserializer.cs:line 22\r\n   at Xunit.Xunit2.BulkDeserialize(List`1 serializations) in C:\\Dev\\xunit\\xunit\\src\\xunit.runner.utility\\Frameworks\\v2\\Xunit2.cs:line 74\r\n   at Xunit.Runner.VisualStudio.VsTestRunner.RunTestsInAssembly(IRunContext runContext, IFrameworkHandle frameworkHandle, LoggerHelper logger, TestPlatformContext testPlatformContext, RunSettings runSettings, IMessageSinkWithTypes reporterMessageHandler, AssemblyRunInfo runInfo) in C:\\Dev\\xunit\\xunit\\src\\xunit.runner.visualstudio\\VsTestRunner.cs:line 562\r\n```\r\n\r\n</details>\r\n\r\n The package is referenced in version `0.3.18` and the issue has been [brought up](https://github.com/AArnott/Xunit.StaFact/issues/30) and [fixed](https://github.com/AArnott/Xunit.StaFact/pull/37) in the origin repository, it is available in nuget package `1.0.19-beta`\r\n\r\nUnfortunately just updating the nuget package doesn't work, because to properly support `WinFormsStaFact` they also added a dependency on `FrameworkReference` on `Microsoft.WindowsDesktop.App` to the nuget package.\r\n\r\nWhen updating the nuget package this leads to referencing the SDK WinForms in addition to the locally built WinForms, causing conflicts in all test projects.\r\n\r\nI have no idea how to properly fix this, but I can [work around](https://github.com/dotnet/winforms/compare/master...weltkante:stafact) by dropping all `TransitiveFrameworkReference` obtained from nuget packages to prevent upgrading the SDK to a DesktopApp. No idea what the proper resolution is to consume the `XUnit.StaFact` bugfixes, I don't understand the arcade build system.\r\n\r\n**Expected behavior:**\r\nBugfixes for Xunit.StaFact should be consumed\r\n\r\n**Minimal repro:**\r\nTry to run StaTheory or WinFormsTheory with complex MemberData inside Visual Studio\r\n\r\n/cc @hughbe @RussKie FYI","Url":"https://github.com/dotnet/winforms/issues/3122","RelatedDescription":"Open issue \"Bugfixes from Xunit.StaFact nuget package not consumed\" (#3122)"},{"Id":"605110370","IsPullRequest":false,"CreatedAt":"2020-04-22T22:18:39","Actor":"weltkante","Number":"3121","RawContent":null,"Title":"Some tests depend on machine specifics","State":"open","Body":"**.NET Core Version:**\r\n5.0 master branch\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nnot applicable\r\n\r\n**Problem description:**\r\nAfter removing culture-specific test failures (tracked by #2734) there are a few more tests failing for me which I believe happen due to relying on machine specific conditions.\r\n\r\n<details><summary>list of failed tests</summary>\r\n\r\n```\r\n* System.Windows.Forms.Tests.CursorTests.Cursor_Clip_Set_GetReturnsExpected\r\nAssert.Equal() Failure\r\nExpected: {X=0,Y=0,Width=3456,Height=1080}\r\nActual:   {X=0,Y=0,Width=3840,Height=1080}\r\n   at System.Windows.Forms.Tests.CursorTests.Cursor_Clip_Set_GetReturnsExpected() in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\CursorTests.cs:line 176\r\n\r\n* System.Windows.Forms.Tests.ListViewTests.ListView_GetItemRect_InvokeWithHandle_ReturnsExpected\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at System.Windows.Forms.Tests.ListViewTests.ListView_GetItemRect_InvokeWithHandle_ReturnsExpected() in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ListViewTests.cs:line 3680\r\n\r\n* System.Windows.Forms.Tests.ListViewTests.ListView_GetItemRect_InvokeWithoutHandle_ReturnsExpectedAndCreatedHandle\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at System.Windows.Forms.Tests.ListViewTests.ListView_GetItemRect_InvokeWithoutHandle_ReturnsExpectedAndCreatedHandle() in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ListViewTests.cs:line 3645\r\n\r\n* System.Windows.Forms.Tests.MonthCalendarTests.MonthCalendar_CalendarDimensions_SetAreaOfTwelve_GetReturnsExpected(width: 12, height: 1)\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at System.Windows.Forms.Tests.MonthCalendarTests.MonthCalendar_CalendarDimensions_SetAreaOfTwelve_GetReturnsExpected(Int32 width, Int32 height) in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\MonthCalendarTests.cs:line 586\r\n\r\n* System.Windows.Forms.Tests.MonthCalendarTests.MonthCalendar_CalendarDimensions_SetWithHandleAreaOfTwelve_GetReturnsExpected(width: 12, height: 1)\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at System.Windows.Forms.Tests.MonthCalendarTests.MonthCalendar_CalendarDimensions_SetWithHandleAreaOfTwelve_GetReturnsExpected(Int32 width, Int32 height) in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\MonthCalendarTests.cs:line 644\r\n\r\n* System.Windows.Forms.Tests.MonthCalendarTests.MonthCalendar_SingleMonthSize_GetWithHandle_ReturnsExpected\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at System.Windows.Forms.Tests.MonthCalendarTests.MonthCalendar_SingleMonthSize_GetWithHandle_ReturnsExpected() in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\MonthCalendarTests.cs:line 2338\r\n\r\n* System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Ctor_Default\r\nAssert.Equal() Failure\r\nExpected: 2\r\nActual:   79\r\n   at System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Ctor_Default() in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ToolStripDropDownTests.cs:line 142\r\n\r\n* System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Location_Set_GetReturnsExpected(value: {X=-1,Y=-2}, expected: {X=0,Y=0}, expectedLocationChangedCallCount: 0)\r\nAssert.Equal() Failure\r\nExpected: 0\r\nActual:   77\r\n   at System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Location_Set_GetReturnsExpected(Point value, Point expected, Int32 expectedLocationChangedCallCount) in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ToolStripDropDownTests.cs:line 1966\r\n\r\n* System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Location_Set_GetReturnsExpected(value: {X=0,Y=2}, expected: {X=0,Y=2}, expectedLocationChangedCallCount: 1)\r\nAssert.Equal() Failure\r\nExpected: 0\r\nActual:   77\r\n   at System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Location_Set_GetReturnsExpected(Point value, Point expected, Int32 expectedLocationChangedCallCount) in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ToolStripDropDownTests.cs:line 1966\r\n\r\n* System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Location_Set_GetReturnsExpected(value: {X=1,Y=0}, expected: {X=1,Y=0}, expectedLocationChangedCallCount: 1)\r\nAssert.Equal() Failure\r\nExpected: 1\r\nActual:   77\r\n   at System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Location_Set_GetReturnsExpected(Point value, Point expected, Int32 expectedLocationChangedCallCount) in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ToolStripDropDownTests.cs:line 1966\r\n\r\n* System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Location_Set_GetReturnsExpected(value: {X=1,Y=2}, expected: {X=1,Y=2}, expectedLocationChangedCallCount: 1)\r\nAssert.Equal() Failure\r\nExpected: 1\r\nActual:   77\r\n   at System.Windows.Forms.Tests.ToolStripDropDownTests.ToolStripDropDown_Location_Set_GetReturnsExpected(Point value, Point expected, Int32 expectedLocationChangedCallCount) in D:\\projects\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ToolStripDropDownTests.cs:line 1966\r\n```\r\n\r\n</details>\r\n\r\nThere is a compromise to make between developer convenience and how exactly you require tests matching their OS environment, if they are too strict developers can run tests only in a VM.\r\n\r\nSo far I could identify:\r\n- Some MonthCalendar tests generate a _huge_ control and rely on the OS cutting them off. If you actually have a big work area (e.g. two screens) this leads to test failures since the controls are no longer cut off and are larger than the test expects.\r\n- Some tests mix up coordinate spaces and do not consider the fact that the taskbar is not necessarily at the bottom. When the OS ensures the taskbar is not covered some tests fail because the forms/controls are not at the location they expect them to be. This is easily worked around by considering the work area inside the test, not the virtual screen space.\r\n\r\nI'll put together a PR, so you can then decide which of the changes are reasonable enough to take.\r\n\r\n**Expected behavior:**\r\nTests are (within reason) coded to be independent of machine characteristics.\r\n\r\n**Minimal repro:**\r\nHaving either of these characteristics will fail some tests:\r\n* Set the taskbar to the left side of the monitor (instead of default bottom) and run the tests\r\n* Use a multi-screen machine and run the tests (very wide or very high work area)","Url":"https://github.com/dotnet/winforms/issues/3121","RelatedDescription":"Open issue \"Some tests depend on machine specifics\" (#3121)"},{"Id":"605029634","IsPullRequest":true,"CreatedAt":"2020-04-22T19:57:16","Actor":"lonitra","Number":"3120","RawContent":null,"Title":"Fix: Incorrect Editor for StringCollection","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3049 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Add a mapping for `StringCollection` in `UITypeEditor`so correct editor opens \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will see the correct editor for an editor on type `StringCollection`\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n**Incorrect Editor:**\r\n![image](https://user-images.githubusercontent.com/30007367/79895874-70560f80-83bc-11ea-9887-3f15537e421d.png)\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n**Correct Editor shown:**\r\n![image](https://user-images.githubusercontent.com/30007367/79896267-012ceb00-83bd-11ea-854c-05d6fb0dc41e.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual testing\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3120)","Url":"https://github.com/dotnet/winforms/pull/3120","RelatedDescription":"Open PR \"Fix: Incorrect Editor for StringCollection\" (#3120)"},{"Id":"604528882","IsPullRequest":false,"CreatedAt":"2020-04-22T07:39:04","Actor":"weltkante","Number":"3117","RawContent":null,"Title":"Fix VB InputBox issues","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\n.NET Core 5.0 preview / current master branch\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nYes\r\n\r\n**Problem description:**\r\nSince it was decided against providing a generalized InputDialog in #2891 and people who need it should be using the [InputBox](https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualbasic.interaction.inputbox?view=net-5.0) method from VB assemblies also in C# (it's available out of the box without adding references). I'm opening this follow-up issue for things that were brought up in discussion that need to be fixed.\r\n\r\nIssues with the existing input form:\r\n- As you can see for example on a german OS the cancel button doesn't fit its label and is cut off (should spell 'Abbrechen') - see screenshot below\r\n- Accessibility should be checked to match the quality requirements of WinForms if guidance for C# users is to use the VB input form\r\n- The current button layout is probably from a previous era (Windows 3.11 used this layout), you usually have ok/cancel buttons at the bottom of the dialog these days. I don't know if Microsoft still has general guidelines how the layout of simple dialogs should look like, but if in doubt I'd say keep it as similar to a message box as possible.\r\n\r\nIf you think updating the button layout is out of scope feel free to drop it from the issue and just ensure localization/accessibility (which I do think are important).\r\n\r\n![image](https://user-images.githubusercontent.com/5845814/75037525-a8bc9880-54b4-11ea-8e1b-555a42d71fcd.png)\r\n\r\nThe underlying form for inspection can be found [here](https://github.com/dotnet/winforms/blob/master/src/Microsoft.VisualBasic.Forms/src/Microsoft/VisualBasic/Helpers/VBInputBox.vb). Note that the designer part (InitializeComponent) is inline and not in a .designer.vb file, it still is intended to be edited with the VS designer. If this is currently not possible and it needs to be edited manually then you may want to remove InitializeComponent in order to not have future designers break the form.\r\n\r\n**Expected behavior:**\r\n\r\n* no cutoff in any localization provided out of the box\r\n* accessibility should match quality requirements\r\n* dialog button layout should match modern win32 dialogs like MessageBox and SaveFileDialog\r\n\r\n**Minimal repro:**\r\nCall [`Interaction.InputBox`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualbasic.interaction.inputbox?view=net-5.0)","Url":"https://github.com/dotnet/winforms/issues/3117","RelatedDescription":"Open issue \"Fix VB InputBox issues\" (#3117)"},{"Id":"604429265","IsPullRequest":true,"CreatedAt":"2020-04-22T03:55:13","Actor":"RussKie","Number":"3116","RawContent":null,"Title":"Disable tests that rely on RemoteExecutor","State":"closed","Body":"See: https://github.com/dotnet/arcade/issues/5325\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3116)","Url":"https://github.com/dotnet/winforms/pull/3116","RelatedDescription":"Closed or merged PR \"Disable tests that rely on RemoteExecutor\" (#3116)"},{"Id":"604280305","IsPullRequest":true,"CreatedAt":"2020-04-22T01:00:07","Actor":"mmitche","Number":"3113","RawContent":null,"Title":"Remove unnecessary coherency attributes and prepare for strict coherency","State":"closed","Body":"Remove the unnecessary coherency attributes. These coherency attributes\r\nare not needed because the packages are produced in the same build as\r\nthe CPD parent.\r\n\r\nThis also prepares this repo for 'strict' coherency\r\nhttps://github.com/dotnet/arcade/issues/5195. Strict coherency is\r\nsignificantly simpler and resolves a few cases where legacy CPD can\r\ndowngrade dependencies in incremental servicing. It looks in the CPD\r\nparent's version.details.xml file to find the the CPD dependency, then\r\nupdates to that version. In winforms case, the CPD's dependencies are not\r\ndependended on within runtime's own build, and the CPD attribute should be removed.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3113)","Url":"https://github.com/dotnet/winforms/pull/3113","RelatedDescription":"Closed or merged PR \"Remove unnecessary coherency attributes and prepare for strict coherency\" (#3113)"},{"Id":"604341975","IsPullRequest":true,"CreatedAt":"2020-04-22T00:44:36","Actor":"dotnet-maestro[bot]","Number":"3114","RawContent":null,"Title":"[release/5.0-preview4] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NetCore.ILAsm)\r\n- **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7 (parent: Microsoft.NetCore.ILAsm)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:440f0db1-50fd-4e00-9b1a-08d7e1735b84)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 440f0db1-50fd-4e00-9b1a-08d7e1735b84\r\n- **Build**: 20200421.7\r\n- **Date Produced**: 4/21/2020 9:58 PM\r\n- **Commit**: b7cdadcc6de83f2138dc86dac14870af3b27d373\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **System.Drawing.Common**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **System.Security.Permissions**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.7\r\n\r\n[marker]: <> (End:440f0db1-50fd-4e00-9b1a-08d7e1735b84)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3114)","Url":"https://github.com/dotnet/winforms/pull/3114","RelatedDescription":"Closed or merged PR \"[release/5.0-preview4] Update dependencies from dotnet/runtime\" (#3114)"},{"Id":"604201416","IsPullRequest":true,"CreatedAt":"2020-04-21T18:42:31","Actor":"hughbe","Number":"3112","RawContent":null,"Title":"Add some initial DataGridViewColumnCollection tests","State":"open","Body":"## Proposed Changes\r\n- Add some initial DataGridViewColumnCollection tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3112)","Url":"https://github.com/dotnet/winforms/pull/3112","RelatedDescription":"Open PR \"Add some initial DataGridViewColumnCollection tests\" (#3112)"},{"Id":"604183995","IsPullRequest":true,"CreatedAt":"2020-04-21T18:13:11","Actor":"lonitra","Number":"3111","RawContent":null,"Title":"Fix: StringCollectionEditor Unable to Create Instance of Type System.String","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelates to issue mentioned in comments of #3049\r\n\r\n\r\n## Proposed changes\r\n\r\n- Explicit checks if `itemType` is of type `string` so user will still be able to create instances of a `string` if we don't have a mapping for the editor on the collection of `string` that the user is trying to invoke\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will no longer see an error message when trying to create instances of `string` with an editor on a collection of `string` we don't have a mapping to\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n**Error Message:**\r\n![image](https://user-images.githubusercontent.com/30007367/79897115-16564980-83be-11ea-9464-fc23430b0bda.png)\r\n\r\n### After\r\n\r\n**Fixed error for the case we don't have mapping for an editor on the collection of string user is trying to invoke:**\r\n![image](https://user-images.githubusercontent.com/30007367/79896737-96c87a80-83bd-11ea-9f7d-d5c60691eb2d.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Did some manual testing, but will need to be tested further\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3111)","Url":"https://github.com/dotnet/winforms/pull/3111","RelatedDescription":"Open PR \"Fix: StringCollectionEditor Unable to Create Instance of Type System.String\" (#3111)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-04-25T05:30:52.979476Z","RunDurationInMilliseconds":785}