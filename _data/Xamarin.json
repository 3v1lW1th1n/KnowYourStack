{"Data":{"Blog":{"FeedItems":[{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null},{"Title":"Iterate Faster with the Xamarin Live Player and iOS Coded User Interface","PublishedOn":"2017-12-13T17:25:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Live Player is a fantastic tool to rapidly iterate and develop Xamarin applications without ever having to compile. One can easily update an application&#8217;s user interface and business...","Href":"https://blog.xamarin.com/iterate-faster-xamarin-live-player-ios-coded-user-interface/","RawContent":null},{"Title":"Updates to the Xamarin iOS Designer","PublishedOn":"2017-12-12T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Designer for iOS is a visual designer that allows you to edit Storyboard and Xib files directly in Visual Studio and Visual Studio for Mac. Crafting your UI with a designer instead of...","Href":"https://blog.xamarin.com/updates-xamarin-ios-designer/","RawContent":null},{"Title":"Introduction to tvOS","PublishedOn":"2017-12-11T20:03:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Apple announced the AppleTV 4K, an improved version of the AppleTV launched in 2015, which brought us a new platform to develop for in tvOS. With the touch-enabled Siri remote, we have a new...","Href":"https://blog.xamarin.com/introduction-to-tvos/","RawContent":null},{"Title":"Native Forms is Polished and Shiny in Xamarin.Forms 2.5.0","PublishedOn":"2017-12-08T20:37:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since we previewed Native Forms in June, we’ve been working to smooth the rough edges and polish it up for Xamarin.Forms 2.5.0 by fixing bugs and integrating the excellent feedback from the community....","Href":"https://blog.xamarin.com/native-forms-polished-shiny-xamarin-forms-2-5-0/","RawContent":null},{"Title":"Even Easier iOS App Provisioning in Visual Studio for Mac ","PublishedOn":"2017-12-07T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS provisioning is a notoriously hard concept to grasp; even the best developers can be stumped by a signing identity. As a content developer at Xamarin, I’ve created thorough documentation on the...","Href":"https://blog.xamarin.com/even-easier-ios-app-provisioning-visual-studio-mac/","RawContent":null},{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null},{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7025150122","Type":"PullRequestEvent","CreatedAt":"2017-12-23T05:26:47","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1142","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix classes-zip inception\" (#1142) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=61073\r\nContext: a296784\r\n\r\nWhen we added the new `classes.zip` functionality, there was one oddity\r\npresent. On the first build, everything appears to be normal. On the\r\nsecond build, `classes.zip` appeared to contain itself inside itself???\r\n\r\nTo make things even stranger, I wrote a unit test that contains a\r\n`Java.Lang.Object` subclass in which its type and namespace names change\r\non each write. This worked fine on macOS, even with the oddity of\r\n`classes.zip` continually zipping itself inside itself... The new java\r\nsources would appear at the bottom of the list within the zip file.\r\n\r\nEverything broke down when I tried my unit test on Windows, the case of\r\n`classes.zip` trying to compress itself inside itself was silently\r\nfailing. It was not processing any further files after the failing zip\r\nentry, and so *in theory* this situation would cause many Java stubs to\r\nbe missing from the zip.\r\n\r\nSolution? Let's just put `classes.zip` up one directory.\r\n\r\nSo instead of:\r\n```\r\nobj/Debug/android/bin/classes/classes.zip\r\n```\r\nMove it to:\r\n```\r\nobj/Debug/android/bin/classes.zip\r\n```\r\n\r\nThis prevents the `classes` directory from containing `classes.zip`, and\r\nour strange case of `classes.zip` inception.\r\n\r\nMerry Christmas! I'm going to go play Skylanders now."},{"Id":"7024569616","Type":"PullRequestEvent","CreatedAt":"2017-12-22T21:51:16","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1141","RelatedDescription":"Opened pull request \"Fix MonoAndroid path resolution on Linux\" (#1141) at xamarin/xamarin-android","RelatedBody":"Currently, we indiscriminately set TargetFrameworkRootPath in a way that breaks on Linux, so make that setting Windows-specific and add a more generic one for Linux. As for OSX, it's not clear to me why OSX was never affected by the issue."},{"Id":"7024231749","Type":"IssuesEvent","CreatedAt":"2017-12-22T19:37:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1140","RelatedDescription":"Closed issue \"Cannot change TimePicker format\" (#1140) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1. Turn the \"Use 24-hour format\" device setting off on your test device\r\n2. Create a TimePicker\r\n3. Change the format sometime later on (e.g. when the user clicks a button)\r\n\r\n### Expected Behavior\r\nTimePicker displays time in new format\r\n\r\n### Actual Behavior\r\nTimePicker still displays time in original format\r\n\r\n### Version Information\r\nXamarin.Forms 2.5.0.91635\r\n\r\n### Proposed Fix\r\nI can see the problem in Xamarin.Forms.Platform.Android.TimePickerRenderer. The format is cached in OnElementChanged then never gets updated. Presumably, the format just needs to be refreshed in OnElementPropertyChanged if FormatProperty has changed."},{"Id":"7023896102","Type":"IssuesEvent","CreatedAt":"2017-12-22T17:46:41","Actor":"mattavadine","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1140","RelatedDescription":"Opened issue \"Cannot change TimePicker format\" (#1140) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1. Create a TimePicker\r\n2. Change the format sometime later on (e.g. when the user clicks a button)\r\n\r\n### Expected Behavior\r\nTimePicker displays time with new format\r\n\r\n### Actual Behavior\r\nTimePicker still displays time with original format\r\n\r\n### Version Information\r\nXamarin.Forms 2.5.0.91635\r\n\r\n### Proposed Fix\r\nI can see the problem in Xamarin.Forms.Platform.Android.TimePickerRenderer. The format is cached in OnElementChanged then never gets updated. Presumably, the format just needs to be refreshed in OnElementPropertyChanged when if FormatProperty has changed."},{"Id":"7023664688","Type":"PullRequestEvent","CreatedAt":"2017-12-22T16:34:07","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1139","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] <Aapt /> task showing warnings as errors\" (#1139) at xamarin/xamarin-android","RelatedBody":"Fixes: #1134\r\nContext: 2135856e\r\n\r\nDean’s changes in 2135856e were more accurate at picking out warnings\r\n& errors, but if the `level` value from the `Regex` was blank, it was\r\ncounting the message as an error. The `level` value is matching against\r\nthe words `warning` or `error`, ignoring case.\r\n\r\nI think the fix here is to count the message as a warning if the\r\n`level` is blank.\r\n\r\nI added a Regex test case of what was on #1134. I added another test case\r\nthat verifies a message with a blank `level` comes through the build output\r\nas a `warning`."},{"Id":"7023229946","Type":"PullRequestEvent","CreatedAt":"2017-12-22T14:34:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1137","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] ProGuard/MultiDex fix parentheses in path\" (#1137) at xamarin/xamarin-android","RelatedBody":"Fixes: #1135\r\nContext: #1068\r\n\r\nWhen making changes in #1068, I added a unit test that builds an\r\napplication with both spaces and parentheses in its path. However, this\r\nwas not enough to test everything; the test also needed an\r\n`AndroidJavaLibrary` build item with spaces and parentheses in its name!\r\n\r\nChanges:\r\n- Made a `Hello (World).jar` file, that has a single class in it\r\n- Added the jar file as a `AndroidJavaLibrary`, in\r\nthe `BuildApplicationWithSpacesInPath` test\r\n- Reverted `Proguard.cs` and `CreateMultiDexMainDexClassList.cs` from\r\nwhat I did in #1068 -- Dean tried to warn me\r\n- Move the `(!META-INF/MANIFEST.MF)` filter expression outside the\r\nsingle quotes\r\n- For the `-injars` expression to work on *both* macOS and Windows,\r\nI had to enclose the entire expression in double-quotes\r\n\r\nPR #1068 was a good attempt at trying to cleanup the code, but I could\r\nnot get the manifest filter to work along with a path including a\r\nparentheses."},{"Id":"7023229941","Type":"IssuesEvent","CreatedAt":"2017-12-22T14:34:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1135","RelatedDescription":"Closed issue \"Encountering new path escaping issues when using multidex/proguard on Windows\" (#1135) at xamarin/xamarin-android","RelatedBody":"I'm encountering new path escaping issues on Windows due when using proguard and/or multidex in certain projects. I see a recent and seemingly related change in this area in this commit https://github.com/xamarin/xamarin-android/commit/2c2d47c4a28eeb398500a8c0a9a0a803324de014.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Attempt to build a project with multidex and or proguard enabled.\r\n2. msbuild /t:SignAndroidPackage KitKat.csproj /p:Configuration=Release /p:AndroidEnableProguard=true\r\nhttps://github.com/xamarin/monodroid-samples/tree/master/KitKat\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProguard and multidex tool invocations succeed without issue on Windows.\r\n\r\n### Actual Behavior\r\nVarious path escaping issues are preventing proguard and multidex from executing successfully:\r\n```\r\n Environment Variables passed to tool: (TaskId:339)\r\n    PROGUARD_HOME=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard (TaskId:339)\r\n    JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8 (TaskId:339)\r\n  C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin\\java.exe -jar \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar\" -include \"C:\\Program Files (x86)\\Android\\android-sdk\\\\tools\\proguard\\proguard-android.txt\" -include \"obj\\Release\\proguard\\proguard_xamarin.cfg\" -include \"obj\\Release\\proguard\\proguard_project_references.cfg\" -include \"obj\\Release\\proguard\\proguard_project_primary.cfg\" -injars \"obj\\Release\\android\\bin\\classes\\classes.zip(!META-INF/MANIFEST.MF)\";\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v8.0\\mono.android.jar(!META-INF/MANIFEST.MF)\" -libraryjars \"C:\\Program Files (x86)\\Android\\android-sdk\\platforms\\android-26\\android.jar\" -outjars obj\\Release\\proguard\\__proguard_output__.jar -optimizations !code/allocation/variable  (TaskId:339)\r\nPROGUARD : error : C:\\Program Files (Access is denied) [C:\\xqatmp\\b1b545ee\\KitKat\\KitKat.csproj]\r\n  Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 (TaskId:339)\r\n  The command exited with code 1. (TaskId:339)\r\nDone executing task \"Proguard\" -- FAILED. (TaskId:339)\r\n```\r\n```\r\nToolPath: C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin (TaskId:1130)\r\n    ProguardJarPath: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar (TaskId:1130)\r\n    ProguardInputJarFilter: (!META-INF/MANIFEST.MF) (TaskId:1130)\r\n  C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin\\java.exe -jar \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar\" -injars \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v7.1\\mono.android.jar(!META-INF/MANIFEST.MF)\";\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\android-support-multidex.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\0\\jl\\formsviewgroup.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\10\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\11\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\12\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\13\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\14\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\15\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\16\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\17\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\18\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\19\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\20\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\21\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\27\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\28\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\29\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\30\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\31\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\32\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\33\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\34\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\35\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\36\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\37\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\38\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\6\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\8\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\9\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\android\\bin\\classes\\classes.zip(!META-INF/MANIFEST.MF)\" -dontwarn -forceprocessing -outjars C:\\agent\\_work\\_temp\\h24rcf4d.bej.jar -libraryjars \"\\\"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\26.0.2\\lib\\shrinkedAndroid.jar\\\"\" -dontoptimize -dontobfuscate -dontpreverify -include \"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\26.0.2\\mainDexClasses.rules\"  (TaskId:1130)\r\nCREATEMULTIDEXMAINDEXCLASSLIST : error : Expecting class path separator ';' before '\\Microsoft' in argument number 2 [C:\\xqatmp\\Bug15162\\Bug15162\\Bug15162.csproj]\r\n  The command exited with code 1. (TaskId:1130)\r\nDone executing task \"CreateMultiDexMainDexClassList\" -- FAILED. (TaskId:1130)\r\n```\r\n\r\n### Version Information\r\nXA 8.0.0.2 (d15-6)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\nhttp://xqa.blob.core.windows.net/gist/log-7c8201b17c434ec9bee20eac7ddb8f93.txt\r\nhttp://xqa.blob.core.windows.net/gist/log-33e409f0ca854d3c93c92f4a9849df57.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7021599561","Type":"IssuesEvent","CreatedAt":"2017-12-22T05:50:15","Actor":"sushihangover","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1138","RelatedDescription":"Opened issue \"Android Binding Library using `class-parse` (Error CS1519: Invalid token 'params')\" (#1138) at xamarin/xamarin-android","RelatedBody":"**Error CS1519: Invalid token 'params' in class, struct, or interface member declaration (CS1519)** \r\n\r\n### Steps to Reproduce\r\n\r\n1) Create Xamarin.Android binding library of the `.aar` : https://github.com/michael-rapp/AndroidUtil\r\n\r\nVia Maven: http://central.maven.org/maven2/com/github/michael-rapp/android-util/1.18.2/android-util-1.18.2.aar\r\n\r\n2) Use `class-parse`\r\n\r\n`<AndroidClassParser>class-parse</AndroidClassParser>`\r\n\r\n### Repro project:\r\n\r\n[android-util-1.18.2.zip](https://github.com/xamarin/xamarin-android/files/1581521/android-util-1.18.2.zip)\r\n\r\n\r\n### Expected Behavior\r\n\r\nA beautifully generated binding project with no errors 😺 🍣 \r\n\r\n### Actual Behavior\r\n\r\nGenerated code includes `params` keyword incorrectly, i.e. `params global:: Java.Lang.Object[] p2;`\r\n\r\n### Example:\r\n```\r\npublic partial class LoadDataEventArgs : global::System.EventArgs {\r\n\r\n\tpublic LoadDataEventArgs (bool handled, global::DE.Mrapp.Android.Util.Multithreading.AbstractDataBinder p0, global::Java.Lang.Object p1, params global:: Java.Lang.Object[] p2)\r\n\t{\r\n\t\tthis.handled = handled;\r\n\t\tthis.p0 = p0;\r\n\t\tthis.p1 = p1;\r\n\t\tthis.p2 = p2;\r\n\t}\r\n\r\n\tbool handled;\r\n\tpublic bool Handled {\r\n\t\tget { return handled; }\r\n\t\tset { handled = value; }\r\n\t}\r\n\r\n\tglobal::DE.Mrapp.Android.Util.Multithreading.AbstractDataBinder p0;\r\n\tpublic global::DE.Mrapp.Android.Util.Multithreading.AbstractDataBinder P0 {\r\n\t\tget { return p0; }\r\n\t}\r\n\r\n\tglobal::Java.Lang.Object p1;\r\n\tpublic global::Java.Lang.Object P1 {\r\n\t\tget { return p1; }\r\n\t}\r\n\r\n\tparams global:: Java.Lang.Object[] p2;\r\n\tpublic params global:: Java.Lang.Object[] P2 {\r\n\t\tget { return p2; }\r\n\t}\r\n}\r\n\r\n```\r\n\r\n### Version Information\r\n\r\n* Xamarin.Android Version: 8.1.0.25 \r\n* Mono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)"},{"Id":"7020728204","Type":"PullRequestEvent","CreatedAt":"2017-12-21T23:06:34","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1137","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] ProGuard/MultiDex fix parentheses in path\" (#1137) at xamarin/xamarin-android","RelatedBody":"Fixes: #1135\r\nContext: #1068\r\n\r\nWhen making changes in #1068, I added a unit test that builds an\r\napplication with both spaces and parentheses in its path. However, this\r\nwas not enough to test everything; the test also needed an\r\n`AndroidJavaLibrary` build item with spaces and parentheses in its name!\r\n\r\nChanges:\r\n- Made a `Hello (World).jar` file, that has a single class in it\r\n- Added the jar file as a `AndroidJavaLibrary`, in\r\nthe `BuildApplicationWithSpacesInPath` test\r\n- Reverted `Proguard.cs` and `CreateMultiDexMainDexClassList.cs` from\r\nwhat I did in #1068 -- Dean tried to warn me\r\n- Move the `(!META-INF/MANIFEST.MF)` filter expression outside the\r\nsingle quotes\r\n- For the `-injars` expression to work on *both* macOS and Windows,\r\nI had to enclose the entire expression in double-quotes\r\n\r\nPR #1068 was a good attempt at trying to cleanup the code, but I could\r\nnot get the manifest filter to work along with a path including a\r\nparentheses."},{"Id":"7020290806","Type":"IssuesEvent","CreatedAt":"2017-12-21T20:56:18","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1135","RelatedDescription":"Opened issue \"Encountering new path escaping issues when using multidex/proguard on Windows\" (#1135) at xamarin/xamarin-android","RelatedBody":"I'm encountering new path escaping issues on Windows due when using proguard and/or multidex in certain projects. I see a recent and seemingly related change in this area in this commit https://github.com/xamarin/xamarin-android/commit/2c2d47c4a28eeb398500a8c0a9a0a803324de014.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Attempt to build a project with multidex and or proguard enabled.\r\n2. msbuild /t:SignAndroidPackage KitKat.csproj /p:Configuration=Release /p:AndroidEnableProguard=true\r\nhttps://github.com/xamarin/monodroid-samples/tree/master/KitKat\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProguard and multidex tool invocations succeed without issue on Windows.\r\n\r\n### Actual Behavior\r\nVarious path escaping issues are preventing proguard and multidex from executing successfully:\r\n```\r\n Environment Variables passed to tool: (TaskId:339)\r\n    PROGUARD_HOME=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard (TaskId:339)\r\n    JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8 (TaskId:339)\r\n  C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin\\java.exe -jar \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar\" -include \"C:\\Program Files (x86)\\Android\\android-sdk\\\\tools\\proguard\\proguard-android.txt\" -include \"obj\\Release\\proguard\\proguard_xamarin.cfg\" -include \"obj\\Release\\proguard\\proguard_project_references.cfg\" -include \"obj\\Release\\proguard\\proguard_project_primary.cfg\" -injars \"obj\\Release\\android\\bin\\classes\\classes.zip(!META-INF/MANIFEST.MF)\";\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v8.0\\mono.android.jar(!META-INF/MANIFEST.MF)\" -libraryjars \"C:\\Program Files (x86)\\Android\\android-sdk\\platforms\\android-26\\android.jar\" -outjars obj\\Release\\proguard\\__proguard_output__.jar -optimizations !code/allocation/variable  (TaskId:339)\r\nPROGUARD : error : C:\\Program Files (Access is denied) [C:\\xqatmp\\b1b545ee\\KitKat\\KitKat.csproj]\r\n  Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 (TaskId:339)\r\n  The command exited with code 1. (TaskId:339)\r\nDone executing task \"Proguard\" -- FAILED. (TaskId:339)\r\n```\r\n```\r\nToolPath: C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin (TaskId:1130)\r\n    ProguardJarPath: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar (TaskId:1130)\r\n    ProguardInputJarFilter: (!META-INF/MANIFEST.MF) (TaskId:1130)\r\n  C:\\Program Files\\Java\\jdk1.8.0_144\\\\bin\\java.exe -jar \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\proguard\\lib\\proguard.jar\" -injars \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v7.1\\mono.android.jar(!META-INF/MANIFEST.MF)\";\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\android-support-multidex.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\0\\jl\\formsviewgroup.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\10\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\11\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\12\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\13\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\14\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\15\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\16\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\17\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\18\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\19\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\20\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\21\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\27\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\28\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\29\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\30\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\31\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\32\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\33\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\34\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\35\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\36\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\37\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\38\\jl\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\6\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\8\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\lp\\9\\jl\\bin\\classes.jar(!META-INF/MANIFEST.MF)\";\"obj\\Debug\\android\\bin\\classes\\classes.zip(!META-INF/MANIFEST.MF)\" -dontwarn -forceprocessing -outjars C:\\agent\\_work\\_temp\\h24rcf4d.bej.jar -libraryjars \"\\\"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\26.0.2\\lib\\shrinkedAndroid.jar\\\"\" -dontoptimize -dontobfuscate -dontpreverify -include \"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\26.0.2\\mainDexClasses.rules\"  (TaskId:1130)\r\nCREATEMULTIDEXMAINDEXCLASSLIST : error : Expecting class path separator ';' before '\\Microsoft' in argument number 2 [C:\\xqatmp\\Bug15162\\Bug15162\\Bug15162.csproj]\r\n  The command exited with code 1. (TaskId:1130)\r\nDone executing task \"CreateMultiDexMainDexClassList\" -- FAILED. (TaskId:1130)\r\n```\r\n\r\n### Version Information\r\nXA 8.0.0.2 (d15-6)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\nhttp://xqa.blob.core.windows.net/gist/log-7c8201b17c434ec9bee20eac7ddb8f93.txt\r\nhttp://xqa.blob.core.windows.net/gist/log-33e409f0ca854d3c93c92f4a9849df57.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7020219318","Type":"PullRequestEvent","CreatedAt":"2017-12-21T20:36:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1096","RelatedDescription":"Merged pull request \"Add \"AndroidManifest resource collection and generate information\" tool.\" (#1096) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7020055674","Type":"IssuesEvent","CreatedAt":"2017-12-21T19:52:05","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1134","RelatedDescription":"Opened issue \"New APT0000 msbuild errors are being reported from aapt output parsing\" (#1134) at xamarin/xamarin-android","RelatedBody":"This was previously discussed, however there still appear to be some corner cases that weren't addressed by the latest relevant change in commit https://github.com/xamarin/xamarin-android/commit/2135856e.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/Xamarin.Android.JcwGen-Tests.csproj with msbuild.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nBuild should succeed without incorrectly reporting aapt warnings as msbuild errors.\r\n\r\n### Actual Behavior\r\nBuild fails with the following:\r\n```\r\nExecuting package -f -m -M /Users/xamarinqa/agent/_work/_temp/r0o3reuu.zcl/manifest/AndroidManifest.xml -J /Users/xamarinqa/agent/_work/_temp/r0o3reuu.zcl --custom-package xamarin.android.jcwgen_tests -F /Users/xamarinqa/agent/_work/_temp/r0o3reuu.zcl/resources.apk.bk -S obj/Release/res/ -S /Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/obj/Release/lp/3/jl/res -S /Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/obj/Release/lp/5/jl/res -S /Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/obj/Release/resourcecache/6ECC701C56CAE8576696DE7B3605BB4A/res -j obj/Release/lp/4/jl/__reference__empty-1.jar -j obj/Release/lp/4/jl/__reference__empty-2.jar -j obj/Release/lp/4/jl/xamarin-test.jar -I /Users/xamarinqa/Library/Developer/Xamarin/android-sdk-macosx/platforms/android-10/android.jar --auto-add-overlay --max-res-version 10 (TaskId:1230)\r\naapt : error APT0000: max res 10, skipping values-sw720dp-land-v13 \"max res 10, skipping values-sw720dp-land-v13\". [/Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/Xamarin.Android.JcwGen-Tests.csproj]\r\nDone executing task \"Aapt\" -- FAILED. (TaskId:1230)\r\n```\r\n\r\n### Version Information\r\nXA 8.2.0.0.\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-f69375a71be042929c3d54c25ecfd34b.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7020026133","Type":"PullRequestEvent","CreatedAt":"2017-12-21T19:44:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1131","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] <GenerateJavaStubs /> generates a shorter acw-map.txt\" (#1131) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=61073\r\nContext: xamarin/java.interop#227\r\n\r\nThe Java-to-Managed typemaps list types such as:\r\n```\r\nandroid/app/Activity\r\nAndroid.App.Activity, Mono.Android, Version=0.0.0.0, Culture=neutral,\r\nPublicKeyToken=84e04ff9cfb79065\r\n```\r\nThis is found in the intermediate dir after a  build in `acw-map.txt`,\r\nor `$(_AcwMapFile)`.\r\n\r\nLet’s assume you have an Android project with the following\r\nassembly-level attribute:\r\n```\r\n[assembly:AssemblyVersion(\"1.0.0.*\")]\r\n```\r\n\r\nThen on *every* build, the typemap is invalidated because your version\r\nnumber has been incremented.\r\n\r\nChanges:\r\n- Bumped Java.Interop to master/429dc2a\r\n- `JNIEnv` needs to use the shorter type name when calling\r\n`monodroid_typemap_managed_to_java`\r\n- `GenerateJavaStubs` should not be writing lines for\r\n`type.GetAssemblyQualifiedName` into `acw-map.txt`\r\n- `JnienvTest` needed some updates to use the new type name format\r\n- Wrote a test using `[assembly:AssemblyVersion(\"1.0.0.*\")]` that\r\nchecks `acw-map.txt` contents"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7027359335","Type":"IssuesEvent","CreatedAt":"2017-12-24T19:06:44","Actor":"scxp","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1466","RelatedDescription":"Opened issue \"[Internal] Can't clone submodules when checking out Xamarin.Forms\" (#1466) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nChecking out Xamarin.Forms project is unsuccessful because submodules can't be cloned. This used to work without users having to uncheck the option to clone submodules.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Checkout Xamarin.Forms on VS for Mac or Windows\r\n2. On Mac, the top level repository gets cloned but submodules can't. Windows fails completely."},{"Id":"7025539619","Type":"PullRequestEvent","CreatedAt":"2017-12-23T12:13:27","Actor":"workgroupengineering","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1465","RelatedDescription":"Opened pull request \"Feature AutoCommandExtension\" (#1465) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAutoCommand Extension allows to simplify the use of the Command through conventions, making the ViewModel more readable.\r\n\r\nAutoCommand searches on viewModel the methods that have the following signature:\r\n\r\nbool Can[CommadName] (object paramter); \r\n\r\nvoid [CommandName](object paramter)\r\n\r\nwhere [CommandName] is the value of the Commad parameter of AutoCommand\r\n\r\nExample:\r\n```xml\r\n  ...\r\n  <StackLayout>\r\n        <Label Text=\"Enable Button 1\" />\r\n\t<Switch IsToggled =\"{Binding EnableExecute}\"/>\r\n\t<Label Text=\"Enable Button 2\" />\r\n        <Button Command=\"{AutoCommand Do}\"\r\n    \t\t      Text=\"Execute\"/>\r\n   </StackLayout>\r\n  ...\r\n```\r\n\r\n```csharp\r\nclass ViewModel : INotifyPropertyChanged\r\n{\r\n\tpublic event PropertyChangedEventHandler PropertyChanged;\r\n\tbool  _enableExecute;\r\n\tpublic bool  EnableExecute\r\n\t{\r\n\t\tget { return _enableExecute; }\r\n\t\tset\r\n\t\t{\r\n\t\t\tif (_enableExecute == value)\r\n\t\t\t\treturn;\r\n\t\t\t__enableExecute = value;\r\n\t\t\tOnPropertyChanged();\r\n\t\t}\r\n\t}\r\n\r\n\t[DependedOn(nameof(EnableExecute))]\r\n\tbool CanDo(object parameter)\r\n\t{\r\n\t\treturn EnableExecute;\r\n\t}\r\n\r\n\tvoid Do(object parameter)\r\n\t{\r\n\r\n\t}\r\n\tprotected void OnPropertyChanged([CallerMemberName] string propertyName = null)\r\n\t{\r\n\t\tPropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\r\n\t}\r\n}\r\n```\r\n### Bugs Fixed ###\r\n\r\nnone\r\n\r\n### API Changes ###\r\n\r\nList all API changes here:\r\n\r\nAdded:\r\n -AutoCommandExtension \r\n -DependedOn\r\n\r\n### Behavioral Changes ###\r\n\r\nnone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7025281588","Type":"IssuesEvent","CreatedAt":"2017-12-23T07:49:42","Actor":"paradisehuman","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1464","RelatedDescription":"Opened issue \"Trowing \"NullReferenceException\" in pop NavigationPage at MasterDetailPage in iOS\" (#1464) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI'm using push notification. I track which notification pressed and navigate to the correct page.\r\nHere is my code : \r\n ```csharp\r\n public MainPageMasterDetail(string type,string data)\r\n        {\r\n            var dependencyInjection = App.DependencyInjection();\r\n            _masterPage = new MasterPage { BindingContext = new MasterPageViewModel() };\r\n            Master = _masterPage;\r\n            var mainNavigation = new NavigationPage(new MainPage\r\n            {\r\n                BindingContext = dependencyInjection.Resolve<MainPageViewModel>(),\r\n                Title = Taxi.Resources.Common.ResourceManager.GetString(\"BetaVersion\",\r\n                    new CultureInfo(Application.Current.Properties[\"Culture\"].ToString()))\r\n            });\r\n                switch (type)\r\n                {\r\n                    case nameof(NotificationTypes.SubmitRequestByWorker):\r\n                    {\r\n                        mainNavigation.PushAsync(new TripArchivePage\r\n                        {\r\n                            BindingContext = new TripArchivePageViewModel()\r\n                        });\r\n                        var model = App.DependencyInjection().Resolve<RequestDetailPageViewModel>();\r\n                        model.RequestId = data;\r\n                        mainNavigation.PushAsync(new RequestDetailPage { BindingContext = model });\r\n                        break;\r\n                        }\r\n                    case nameof(NotificationTypes.SendChat):\r\n                    {\r\n                        mainNavigation.PushAsync(new TripArchivePage\r\n                            {\r\n                                BindingContext = new TripArchivePageViewModel()\r\n                            });\r\n                            var requestDetailPageModel = App.DependencyInjection().Resolve<RequestDetailPageViewModel>();\r\n                            requestDetailPageModel.RequestId = data;\r\n                            mainNavigation.PushAsync(new RequestDetailPage { BindingContext = requestDetailPageModel });\r\n                            var chatModel = App.DependencyInjection().Resolve<ChatPageViewModel>();\r\n                            chatModel.RequestId = data;\r\n                            mainNavigation.PushAsync(new ChatPage\r\n                            {\r\n                                BindingContext = chatModel\r\n                            });\r\n                        break;\r\n                    }\r\n                }\r\n            if (Device.RuntimePlatform == Device.Android)\r\n                mainNavigation.BarBackgroundColor = Color.FromHex(\"9649cb\");\r\n                Detail = mainNavigation;\r\n                if (Device.RuntimePlatform == Device.iOS)\r\n                Master.Icon = \"Hamburger.png\";\r\n            _masterPage.FirstListView.ItemSelected += OnItemSelected;\r\n\r\n            _masterPage.SecondListView.ItemSelected += OnItemSelected;\r\n        }\r\n```\r\nEverything is working fine on Android but in iOS for example when I going to chatPage and going back by navigation back button , first pop ,every thing is working as expected , second pop,every thing is working as expected until it reaches to root page and when trying to pop the root page , I got this error in iOS : \r\n\r\n> System.NullReferenceException: Object reference not set to an instance of an object\r\n\r\nHere is my StackTrace:\r\n\r\n> 1-MainPage+<>c__DisplayClass36_0+<<-ctor>b__2>d.MoveNext () C:\\Visual Studio Projects\\Eela\\Eela.Taxi\\Eela.Taxi\\Pages\\MainPage.cs:468\r\n> \r\n> 2-ExceptionDispatchInfo.Throw () /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152\r\n> \r\n> 3-AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_0 (System.Object state) /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/AsyncMethodBuilder.cs:1018\r\n> \r\n> 4-UIKitSynchronizationContext+<Post>c__AnonStorey0.<>m__0 () /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIKitSynchronizationContext.cs:24\r\n> \r\n> 5-NSAsyncActionDispatcher.Apply () /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/Foundation/NSAction.cs:163\r\n> \r\n> 6-(wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n> \r\n> 7-UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:79\r\n> \r\n> 8-UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:63\r\n> \r\n> 9-Application.Main (System.String[] args) C:\\Visual Studio Projects\\Eela\\Eela.Taxi\\Eela.Taxi.iOS\\Main.cs:17\r\n\r\n \r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Navigation page in master detail page and initial the Detail property in constructor with it\r\n2. Push a page in navigation at master detail page constructor.\r\n3. Pop the pages by back button until it reaches to root page.\r\n\r\n### Expected Behavior\r\nPop the pages to root page\r\n### Actual Behavior\r\nWhen pop the pages until reaches to root, it throws this exception : \r\n\r\n> System.NullReferenceException: Object reference not set to an instance of an object\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.121934\r\n- Last known good version:-\r\n- IDE: Visual Studio 2017 15.5.2\r\n- Platform Target Frameworks: .netstandatd 2.0\r\n  - iOS:  11.2\r\n  - Android: 7.1 \r\n  - UWP:  -\r\n- Android Support Library Version: 26.1.0.1\r\n- Nuget Packages:-\r\n- Affected Devices:\r\niPhone 5s , Android emulator\r\n\r\n"},{"Id":"7024887988","Type":"PullRequestEvent","CreatedAt":"2017-12-23T00:59:31","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1463","RelatedDescription":"Opened pull request \"Fix IndexOutOfRangeException for iOS ListView\" (#1463) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf iOS requests height for a cell whose item we just removed then when we ask for the item we'll generate an IndexOutOfRangeException. \r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=59412\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/1333 (possible, but no repro)\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7024475076","Type":"IssuesEvent","CreatedAt":"2017-12-22T21:10:55","Actor":"ianvink","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1462","RelatedDescription":"Opened issue \"Android Custom Tabbed Page Renderer causes NullReferenceException\" (#1462) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nAndroid Custom Tabbed Page Renderer causes NullReferenceException\r\n\r\n### Steps to Reproduce\r\n\r\nCreate a TabbedPage Renderer on XF 2.5 and show a basic tabbed page using it:\r\n\r\n         [assembly: ExportRenderer(typeof(RootTab), typeof(CoApp.Droid.Renderers.RootTabRenderer))]\r\n\r\n    namespace CoApp.Droid.Renderers\r\n    {\r\n     public class RootTabRenderer : TabbedPageRenderer, TabLayout.IOnTabSelectedListener\r\n     {\r\n\r\n        private RootTab _page;\r\n\r\n        public RootTabRenderer(Context context) : base(context)\r\n        {\r\n        }\r\n\r\n        protected override void OnElementChanged(ElementChangedEventArgs<TabbedPage> e)\r\n        {\r\n            base.OnElementChanged(e);\r\n            if (e != null)\r\n            {\r\n                if (e.NewElement != null)\r\n                {\r\n                    _page = (RootTab) e.NewElement;\r\n                }\r\n                else\r\n                {\r\n                    _page = (RootTab) e.OldElement;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        async void TabLayout.IOnTabSelectedListener.OnTabReselected(TabLayout.Tab tab)\r\n        {\r\n            if (_page?.CurrentPage?.Navigation != null)\r\n                await _page.CurrentPage.Navigation.PopToRootAsync();\r\n        }\r\n        }\r\n    }\r\n\r\n\r\nFrom HockeyApp\r\n```\r\n\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\nXamarin.Forms.Platform.Android.AppCompat.Platform.Xamarin.Forms.Platform.Android.IPlatformLayout.OnLayout(bool changed, int l, int t, int r, int b)<aa25dff89f734b22b9ab88fd01c78705>:0\r\nXamarin.Forms.Platform.Android.PlatformRenderer.OnLayout(bool changed, int l, int t, int r, int b)<aa25dff89f734b22b9ab88fd01c78705>:0\r\nAndroid.Views.ViewGroup.n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b)<28e323a707a2414f8b493f6d4bb27c8d>:0\r\nat (wrapper dynamic-method) System.Object:a5e32371-d898-4fc4-abf9-46e453ff61e8 (intptr,intptr,bool,int,int,int,int)\r\nmd5b60ffeb829f638581ab2bb9b1a7f4f3f.PlatformRenderer.n_onLayout(Native Method)\r\nmd5b60ffeb829f638581ab2bb9b1a7f4f3f.PlatformRenderer.onLayout()PlatformRenderer.java:63\r\nandroid.view.View.layout()View.java:17637\r\nandroid.view.ViewGroup.layout()ViewGroup.java:5575\r\nandroid.widget.RelativeLayout.onLayout()RelativeLayout.java:1079\r\nandroid.view.View.layout()View.java:17637\r\nandroid.view.ViewGroup.layout()ViewGroup.java:5575\r\nandroid.widget.FrameLayout.layoutChildren()FrameLayout.java:323\r\nandroid.widget.FrameLayout.onLayout()FrameLayout.java:261\r\nandroid.view.View.layout()View.java:17637\r\nandroid.view.ViewGroup.layout()ViewGroup.java:5575:\r\n```\r\n\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\nXamarin Forms 2.5\r\nAndroid Emulator\r\nWindows Visual Studio "},{"Id":"7024230951","Type":"IssuesEvent","CreatedAt":"2017-12-22T19:37:15","Actor":"jonpryor","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1461","RelatedDescription":"Opened issue \"Cannot change TimePicker format \" (#1461) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n\r\n### Steps to Reproduce\r\n1. Turn the \"Use 24-hour format\" device setting off on your test device\r\n2. Create a TimePicker\r\n3. Change the format sometime later on (e.g. when the user clicks a button)\r\n\r\n### Expected Behavior\r\nTimePicker displays time in new format\r\n\r\n### Actual Behavior\r\nTimePicker still displays time in original format\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 2.5.0.91635\r\n\r\n### Proposed Fix\r\nI can see the problem in Xamarin.Forms.Platform.Android.TimePickerRenderer. The format is cached in OnElementChanged then never gets updated. Presumably, the format just needs to be refreshed in OnElementPropertyChanged if FormatProperty has changed."},{"Id":"7024218566","Type":"IssuesEvent","CreatedAt":"2017-12-22T19:33:49","Actor":"ianvink","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1460","RelatedDescription":"Opened issue \"Missing ListView.RowHeight causes iOS crash\" (#1460) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\n\r\nIn Xamarin Forms 2.4.x and 2.5.x, when you fail to set the ListView.RowHeight, you get the error:\r\n**System.InvalidCastException: Specified cast is not valid.**\r\n\r\nin Xamarin.Forms file D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs, line 534\r\nFor example, this ListView has the RowHeight. Remove it and it crashes in iOS. Android is fine.\r\n\r\n    <ContentView.Content>\r\n        <Grid>\r\n            <ActivityIndicator IsRunning=\"{Binding IsBusy}\" />\r\n            <ListView\r\n                SeparatorVisibility=\"None\"\r\n                ItemsSource=\"{Binding ListViewData}\"\r\n                HasUnevenRows=\"True\"\r\n                RowHeight=\"114\"\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7028013951","Type":"IssuesEvent","CreatedAt":"2017-12-25T05:51:29","Actor":"HobDev","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3138","RelatedDescription":"Opened issue \"Unable to Install System.Threading.Overlapped\" (#3138) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new xamarin.forms project\r\n2. Add Xamarin.Mac cocoa project\r\n3. Install SerialPortStreamCore nuget to it.\r\n\r\n### Expected Behavior\r\nThe nuget should be added successfully to the project\r\n\r\n### Actual Behavior\r\nThe nuget adds itself successfully to netstandard shared project. But fails to add to Xamarin.Mac. I need this package for Serial port programming. \r\n\r\n### Environment\r\nVisual Studio for Mac Community version 7.3.2(build 12)\r\nXamarin.Mac Version: 4.0.0.214 (Visual Studio Community)\r\nOperating System: Mac OS X 10.13.2\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.2 (build 12)\r\nInstallation UUID: ff0b8bd1-b591-48e7-8748-666f21ab8827\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.3\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.3/Sdks\r\nSDK Versions:\r\n\t2.0.3\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.2 (Visual Studio Community)\r\nHash: 6857dfcc\r\nBranch: xcode9.2\r\nBuild date: 2017-12-04 21:20:41-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.0.25 (Visual Studio Community)\r\nAndroid SDK: /Users/paramjit/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.0\r\nSDK Build Tools Version: 27.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.3.2\r\nHash: 461f09a\r\nBranch: 1.3-release\r\nBuild date: Tue, 03 Oct 2017 18:26:57 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.214 (Visual Studio Community)\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703020012\r\nGit revision: 7d0c9d7ad46b125cf4b7bbf9532c0531b6433ce6\r\nBuild date: 2017-12-12 14:03:18-05\r\nXamarin addins: 6dddaa49fbecb2695fcdcd6b712eb269e288518c\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.2\r\nDarwin 17.3.0 Darwin Kernel Version 17.3.0\r\n    Thu Nov  9 18:09:22 PST 2017\r\n    root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nMFractor 3.03.00\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nPackage 'System.Threading.Overlapped.4.3.0 : Microsoft.NETCore.Platforms [1.1.0, ), System.Resources.ResourceManager [4.3.0, ), System.Runtime [4.3.0, ), System.Runtime.Handles [4.3.0, )' does not exist in project 'CallTech.MacOS'\r\n\r\nCould not install package 'System.Threading.Overlapped 4.3.0'. You are trying to install this package into a project that targets 'Xamarin.Mac,Version=v2.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7026633068","Type":"IssuesEvent","CreatedAt":"2017-12-24T07:18:51","Actor":"PerfectedTech","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3137","RelatedDescription":"Opened issue \"WKWebView MediaTypesRequiringUserActionForPlayback\" (#3137) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Setup application to load HTML5 audio page in WKWebView\r\n2. WKWebView MediaTypesRequiringUserActionForPlayback configuration set for 'None' \r\n3. Run app to see if audio autostarts\r\n\r\nOne should note that the same code for iOS Swift works without a problem.\r\n\r\n### Expected Behavior\r\nThe audio should play on page load.\r\n### Actual Behavior\r\nThe audio does not play and requires user interaction to start the audio. Does not respect the MediaTypesRequiringUserActionForPlayback param.\r\n### Environment\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3 (build 799)\r\nInstallation UUID: a2d3a4a7-526c-464e-971f-b895e9683478\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.0\r\n\t1.1.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Versions:\r\n\t2.0.0\r\n\t1.0.0-preview2-1-003177\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.2 (Visual Studio Community)\r\nHash: 6857dfcc\r\nBranch: xcode9.2\r\nBuild date: 2017-12-04 21:20:41-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.0.24 (Visual Studio Community)\r\nAndroid SDK: /Users/perfectedtech/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.2    (API level 17)\r\n\t\t4.3    (API level 18)\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.0\r\nSDK Build Tools Version: 27.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_152\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_152-b16)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.3.2\r\nHash: 461f09a\r\nBranch: 1.3-release\r\nBuild date: Tue, 03 Oct 2017 18:26:57 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.214 (Visual Studio Community)\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703000799\r\nGit revision: df590420ea5bc681994baefff2eabdaad889fba9\r\nBuild date: 2017-12-05 09:23:45-05\r\nXamarin addins: 51068d6eaf3b6fb4fbc72b33cb869b0ebff04ec5\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.0\r\nDarwin 17.0.0 Darwin Kernel Version 17.0.0\r\n    Thu Aug 24 21:48:19 PDT 2017\r\n    root:xnu-4570.1.46~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n\r\n```\r\nWebView = new WKWebView(instance.webview.Frame, new WKWebViewConfiguration()\r\n                {\r\n                    AllowsInlineMediaPlayback = true,\r\n                    MediaTypesRequiringUserActionForPlayback = WKAudiovisualMediaTypes.None,\r\n                    RequiresUserActionForMediaPlayback = false\r\n                });\r\n```\r\n"},{"Id":"7024552116","Type":"PullRequestEvent","CreatedAt":"2017-12-22T21:43:43","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3136","RelatedDescription":"Opened pull request \"[macos][photosui] Make PHLivePhotoView available on macOS\" (#3136) at xamarin/xamarin-macios","RelatedBody":"xtro results:\n!missing-enum! PHLivePhotoViewContentMode not bound\n!missing-enum! PHLivePhotoViewPlaybackStyle not bound\n!missing-protocol! PHLivePhotoViewDelegate not bound\n!missing-selector! PHLivePhotoView::audioVolume not bound\n!missing-selector! PHLivePhotoView::contentMode not bound\n!missing-selector! PHLivePhotoView::delegate not bound\n!missing-selector! PHLivePhotoView::isMuted not bound\n!missing-selector! PHLivePhotoView::livePhoto not bound\n!missing-selector! PHLivePhotoView::livePhotoBadgeView not bound\n!missing-selector! PHLivePhotoView::setAudioVolume: not bound\n!missing-selector! PHLivePhotoView::setContentMode: not bound\n!missing-selector! PHLivePhotoView::setDelegate: not bound\n!missing-selector! PHLivePhotoView::setLivePhoto: not bound\n!missing-selector! PHLivePhotoView::setMuted: not bound\n!missing-selector! PHLivePhotoView::startPlaybackWithStyle: not bound\n!missing-selector! PHLivePhotoView::stopPlaybackAnimated: not bound\n!missing-type! PHLivePhotoView not bound"},{"Id":"7024425341","Type":"IssuesEvent","CreatedAt":"2017-12-22T20:50:14","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3135","RelatedDescription":"Opened issue \"Create XM version of \"link sdk\", \"link all\" and \"dont link\" tests\" (#3135) at xamarin/xamarin-macios","RelatedBody":"This PR does not have an auto test https://github.com/xamarin/xamarin-macios/pull/3134\r\n\r\nand in general we don't have a grand spot for one.\r\n\r\nWe should do the infrastructure work to create one, possibly porting any relevant iOS tests as we go."},{"Id":"7024400806","Type":"PullRequestEvent","CreatedAt":"2017-12-22T20:40:21","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3133","RelatedDescription":"Merged pull request \"[xtro] Don't assume a nested type when no namespace is available\" (#3133) at xamarin/xamarin-macios","RelatedBody":"That fix a NRE while running xtro\n\n12:55:31.4682580 System.NullReferenceException: Object reference not set to an instance of an object\n12:55:31.4682960   at Extrospection.Helpers.GetFramework (Mono.Cecil.TypeReference type) [0x00012] in /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tests/xtro-sharpie/Helpers.cs:284\n12:55:31.4683110   at Extrospection.EnumCheck.VisitManagedType (Mono.Cecil.TypeDefinition type) [0x0006c] in /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tests/xtro-sharpie/EnumCheck.cs:28\n12:55:31.4683210   at Extrospection.AssemblyReader.ProcessType (Extrospection.BaseVisitor v, Mono.Cecil.TypeDefinition type) [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tests/xtro-sharpie/Runner.cs:78\n12:55:31.4683320   at Extrospection.AssemblyReader.Load (System.String filename) [0x00079] in /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tests/xtro-sharpie/Runner.cs:71\n12:55:31.4684210   at Extrospection.Runner.Execute (System.String pchFile, System.Collections.Generic.IEnumerable`1[T] assemblyNames) [0x000f2] in /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tests/xtro-sharpie/Runner.cs:41\n12:55:31.4684400   at Extrospection.MainClass.Main (System.String[] args) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tests/xtro-sharpie/Program.cs:20\n\nhttps://jenkins.mono-project.com/job/xamarin-macios-pr-builder/5845/Test_Report/\n\nShort story: PR #3096 adds **non public** attributes without a namespace\nso they take precedence over existing ones.\n\nxtro enum check also needed to discard them."},{"Id":"7024380459","Type":"PullRequestEvent","CreatedAt":"2017-12-22T20:32:00","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3091","RelatedDescription":"Closed pull request \"Fix behaviour of NSMenuItem.Activated on top of modal windows.\" (#3091) at xamarin/xamarin-macios","RelatedBody":"Setting NSMenuItem.Activated internally creates the ActionDispatcher object that is assigned to the Target property. When the menu item gets activated the system calls NSApplication.SendAction, which internally checks the WorksWhenModal property on the Target object before proceeding with the action. Since ActionDispatcher is not part of the normal NSResponder chain it needs to implement the property itself to ensure the event is fired even when the menu is opened from a modal window."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"944704928630693888","CreatedAt":"2017-12-23T23:03:01+00:00","UserScreenname":"xamarinhq","Text":"Today in the #12DaysofXamarin, learn how to make your UIs adaptive with #XamarinForms with the 7th most popular… https://t.co/0g7tgzIrEZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":110,"FavoriteCount":53,"RawContent":null},{"Id":"944297266629705728","CreatedAt":"2017-12-22T20:03:07+00:00","UserScreenname":"xamarinhq","Text":"Get started with async/await in the 8th post of the #12DaysofXamarin: https://t.co/MgpLPtLd2z https://t.co/Yt2iACcgfI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":13,"RawContent":null},{"Id":"944251690777284608","CreatedAt":"2017-12-22T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Don't miss your chance to win a three-month @XamarinU subscription just for checking out our new Getting Started Gu… https://t.co/QhYiE3ZQJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"943931836278935554","CreatedAt":"2017-12-21T19:51:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to add face tracking and live recognition to your Android apps with this tutorial from @nishanil, coming… https://t.co/hAo63TPY8D","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":24,"RawContent":null},{"Id":"943888044314255360","CreatedAt":"2017-12-21T16:57:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/hAQHh5mO3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":23,"RawContent":null},{"Id":"943570956777414656","CreatedAt":"2017-12-20T19:57:01+00:00","UserScreenname":"xamarinhq","Text":"The #12DaysofXamarin continues, with @pierceboggan explaining how to build #XamarinForms apps with #dotNET Standard… https://t.co/ITkVs5QaQ6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":26,"RawContent":null},{"Id":"943522130012057600","CreatedAt":"2017-12-20T16:43:00+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":76,"FavoriteCount":37,"RawContent":null},{"Id":"943210078836023297","CreatedAt":"2017-12-19T20:03:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to \"Build Android Apps with Entity Framework\" in post 11 of our #12DaysofXamarin countdown:… https://t.co/RWQ4wzrunW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":28,"RawContent":null},{"Id":"943165786780258304","CreatedAt":"2017-12-19T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"#dotNET Standard comes to the #XamarinForms project templates: https://t.co/ZSlHPxw0IV https://t.co/N9tLs5p3hh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":58,"RawContent":null},{"Id":"942806196209307649","CreatedAt":"2017-12-18T17:18:08+00:00","UserScreenname":"xamarinhq","Text":"The #12DaysofXamarin is back for the 4th year in a row, counting down the top blog posts of 2017! Will your favorit… https://t.co/pwK3cBUg2s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":22,"RawContent":null},{"Id":"942789304971091968","CreatedAt":"2017-12-18T16:11:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with Android Oreo Notification Channels: https://t.co/1XmtfYAaLv https://t.co/pXSan0xaif","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":20,"RawContent":null},{"Id":"942545953113935872","CreatedAt":"2017-12-18T00:04:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/GSLirxwKNb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":32,"RawContent":null},{"Id":"942199665780551680","CreatedAt":"2017-12-17T01:08:00+00:00","UserScreenname":"xamarinhq","Text":"Dive into the world of build configurations to see how they can improve your build times and productivity: https://t.co/KxvabUJIue","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":22,"RawContent":null},{"Id":"941775247119921152","CreatedAt":"2017-12-15T21:01:30+00:00","UserScreenname":"xamarinhq","Text":"Win a three-month @XamarinU subscription just for checking out our new Getting Started Guide! Details on how to ent… https://t.co/At0addXQsO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":26,"RawContent":null},{"Id":"941710442497441798","CreatedAt":"2017-12-15T16:44:00+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @nishanil shows you how to add #facetracking and live recognition to your Android app: https://t.co/5R7K2hNJXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":22,"RawContent":null},{"Id":"941412780158128128","CreatedAt":"2017-12-14T21:01:12+00:00","UserScreenname":"xamarinhq","Text":"Introducing the open source suite of SmartHotel360 reference #XamarinForms, Xamarin.iOS, and… https://t.co/iYMEQSAb2H","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":208,"FavoriteCount":104,"RawContent":null},{"Id":"941351074564329477","CreatedAt":"2017-12-14T16:56:00+00:00","UserScreenname":"xamarinhq","Text":"Starting NOW—update your iOS apps in our webinar, \"Get the Most Out of iOS 11 with #VisualStudio Tools for #Xamarin… https://t.co/yHfdYJiwE2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":10,"RawContent":null},{"Id":"940998780735901697","CreatedAt":"2017-12-13T17:36:06+00:00","UserScreenname":"xamarinhq","Text":"Our own @jamesmontemagno shows you how to leverage the #Xamarin Live Player with your iOS applications:… https://t.co/S9D0tIvHrH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":24,"RawContent":null}]}},"RunOn":"2017-12-26T05:30:38.3018997Z","RunDurationInMilliseconds":3888}