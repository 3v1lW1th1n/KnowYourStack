{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11466393560","Type":"PullRequestEvent","CreatedAt":"2020-02-07T22:53:18","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7840","RelatedDescription":"Merged pull request \"Enable using managed identities for KeyVault\" (#7840) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2970\r\n"},{"Id":"11464620337","Type":"IssuesEvent","CreatedAt":"2020-02-07T18:29:57","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7128","RelatedDescription":"Closed issue \"[Azure Search] Add ID prefix matching for search\" (#7128) at NuGet/NuGetGallery","RelatedBody":"Visual Studio Package Manager UI searches when you pause typing in the search box. Thus, intermediate searches should be pretty good too.\r\n\r\nTarget queries | Expected results\r\n------------- | -----------------\r\nnewton, new, n | Newtonsoft.Json\r\ns | System.*, AWSSDK.S3, Serilog, Swashbuckle\r\nmi, micro | Microsoft.Extensions.\\*, Micorsoft.AspNetCore.\\*,Microsoft.AspNet.\\*,Micrsoft.Owin,Microsoft.\\*\r\nen, e, enti, ent | EntityFramework, Microsft.EntityFrameworkCore\r\nm | Moq, System.Memory, Microsoft.*\r\nlog4 | log4net\r\na | AutoMapper, Antlr, AWSSDK.*, Autofac\r\nswash, swa | Swashbuckle.AspNet.Core.Swagger, Swashbuckle, Swashbuckle.*\r\n\r\n"},{"Id":"11457487384","Type":"PullRequestEvent","CreatedAt":"2020-02-06T23:55:09","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7840","RelatedDescription":"Opened pull request \"Enable using managed identities for KeyVault\" (#7840) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2970\r\n"},{"Id":"11456397114","Type":"PullRequestEvent","CreatedAt":"2020-02-06T21:08:21","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7837","RelatedDescription":"Merged pull request \"Remove the SemVer 2.0.0 warnings from push and display packages\" (#7837) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/7836\r\n\r\n# Push from command line\r\n\r\n## Before\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895268-defee480-4833-11ea-9c75-3f06f84d3cda.png)\r\n\r\n## After\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895274-e8884c80-4833-11ea-9794-36e2eea8c1b3.png)\r\n\r\n# UI upload\r\n\r\n## Before\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895620-0ace9a00-4835-11ea-95a4-dd7f672c10ed.png)\r\n\r\n## After\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895603-ff7b6e80-4834-11ea-9cab-db34aba32eca.png)\r\n\r\n# Package details page\r\n\r\n## Before\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895639-1d48d380-4835-11ea-9ec0-f4856af403a9.png)\r\n\r\n## After\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73895674-36ea1b00-4835-11ea-824c-acedafcb9983.png)\r\n"},{"Id":"11456260165","Type":"PullRequestEvent","CreatedAt":"2020-02-06T20:50:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7838","RelatedDescription":"Merged pull request \"Block version ranges that NuGet pack does not allow\" (#7838) at NuGet/NuGetGallery","RelatedBody":"When you try to pack a .nuspec with a floating version in it, NuGet pack prevents this by taking out the floating part and substituting in min version. \"12.*\" turns into \"12.0.0\". However, someone can hand-craft a .nuspec to get around it.\r\n\r\nWhen we moved from 2.x APIs to 3.x APIs in gallery, we started supporting this without realizing it. Our .nuspec validation looks at each dependency version and parses it as a `VersionRange` which supports floating (since it's the same model that is used for `<PackageReference>` version).\r\n\r\nThese are the only packages that have utilized this:\r\n\r\nId | Version | Created\r\n-- | -- | --\r\nPInvokeCompiler  |  1.0.0-rc1 |  2017-01-09\r\nScissorhands.Helpers |   1.0.0-alpha-17  |  2016-01-13\r\nScissorhands.Helpers |   1.0.0-alpha-16  | 2016-01-13\r\n\r\nThanks @zivkan for the data.\r\n\r\nWe should block these since it has unpredictable impact on the restore graph and is a totally undocumented case for transitive package dependencies.\r\n\r\nIf we want to open the flood gates later we can but it would be coupled with official client support and a well thought through plan of how this will impact package consumers as a whole.\r\n\r\n"},{"Id":"11455939931","Type":"IssuesEvent","CreatedAt":"2020-02-06T20:08:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7839","RelatedDescription":"Opened issue \"Consider blocking non-sense version range: [X, Y) where X > Y\" (#7839) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/Home/issues/9145\r\n\r\nSteps.\r\n\r\n1. [ ] Analyze the existing packages and see if anyone has done it\r\n1. [ ] Block it\r\n\r\nThere's no known scenario for this range. It's a contradiction."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11473818343","Type":"IssuesEvent","CreatedAt":"2020-02-10T01:24:31","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9138","RelatedDescription":"Closed issue \"[Test Failure] PMC and PM UI were disappeared after installing NuGet client dev-cmanu-cpvm01\\5.5.0.10112 \" (#9138) at NuGet/Home","RelatedBody":"## Installiation\r\nInstall VS:  https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3443381&view=results \r\nNuGet Version：dev-cmanu-cpvm01\\5.5.0.10112 \r\n## Repro steps \r\n1. Install a clean machine with OS: Windows-10-Enterprise-RS5. \r\n2. Install Visual Studio 2019 Preview Master\\29804.172 \r\n3. Install NuGet Client dev-cmanu-cpvm01\\5.5.0.10112. \r\n4. Launch Visual Studio 2019 Preview and try to open PMC & PM UI. \r\n## Expected\r\nPMC and PM UI can be opened successfully. \r\n## Actual\r\nPMC and PM UI were disappeared after installing NuGet client dev-cmanu-cpvm01\\5.5.0.10112. \r\n## Notes\r\n1.The implicit NuGet Client is 5.5.0.6412 instead of 5.5.0.10112 after installing “NuGet Build tools” through “Quick Query”. \r\n2.It didn’t repro before installing NuGet client dev-cmanu-cpvm01\\5.5.0.10112.\r\n3.Below error prompt when creating ASP.NET Web Application(.Net Framework) after step 4 as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/73830419-9f3dfa00-483f-11ea-90ec-c7281bbcf7db.png)"},{"Id":"11467616600","Type":"IssuesEvent","CreatedAt":"2020-02-08T06:27:49","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9156","RelatedDescription":"Opened issue \"non-SDK style project with PackageReference with no version has bad error in Visual Studio\" (#9156) at NuGet/Home","RelatedBody":"See this Developer Community issue: https://developercommunity.visualstudio.com/content/problem/905757/nuget-restore-fails-with-error-systemargumentexcep.html\r\n\r\nSteps to reproduce:\r\n\r\n1. Create .NET Framework project (console app or class lib, it doesn't matter. Just needs to be not SDK style project).\r\n2. Add a package to the project, using `PackageReference`\r\n3. Unload the project\r\n4. Edit the `PackageReference` and set the version to an empty string\r\n5. Reload the project\r\n6. Restore\r\n\r\nExpected: error message saying which project has a bad package reference\r\n\r\nActual:\r\n> Error occurred while restoring NuGet packages: '' is not a valid version string."},{"Id":"11467282020","Type":"IssuesEvent","CreatedAt":"2020-02-08T03:31:24","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9077","RelatedDescription":"Reopened issue \"Review Accessibility bugs\" (#9077) at NuGet/Home","RelatedBody":"Query: https://devdiv.visualstudio.com/DevDiv/_queries/query/db727d15-1a7a-41dc-b8ab-5c813706be26/\n\nBug 1: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049204\nBug 2: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049209\nBug 3: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049251"},{"Id":"11467006063","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:30:53","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9155","RelatedDescription":"Opened issue \"Design API Spec for opening the PMUI Window + specific Tabs & pre-selected Packages\" (#9155) at NuGet/Home","RelatedBody":"Define the specification for a new API that would allow the Package Management UI window to be opened to a specific tab. \r\n\r\nThe Updates tab should also be capable of being opened with a set of Packages pre-selected. Automatically focusing on a particular element (likely the Update button) should be considered from an Accessibility perspective, as well as from a  general UX perspective.\r\n\r\nThe current use-case is only for the Updates tab. Whether the API should support all 4 tabs would be an open question.\r\n\r\nProject System will need the capability of invoking this API for this Epic.\r\n"},{"Id":"11466988102","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:24:17","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9154","RelatedDescription":"Opened issue \"Design API Spec for providing Available Updates for a given Project\" (#9154) at NuGet/Home","RelatedBody":"Define the specification for a new API that would provide the number of currently available updates for NuGet packages  in a given project within a Solution.\r\n\r\nPerformance would be critical, as the primary use-case will be a call from Project System to display the # of available updates in the nodes of Solution Explorer.\r\n\r\nProject System will need the capability of invoking this API for this Epic.\r\n"},{"Id":"11466932206","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:10:23","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5521","RelatedDescription":"Closed issue \"Upgrading NuGet packages in Visual Studio doesn't work when project targets multiple frameworks\" (#5521) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: Visual Studio UI\r\n\r\ndotnet.exe --version: 1.0.0\r\n\r\nVS version: Visual Studio 2017\r\n\r\nOS version: 10.0.16193.1001\r\n\r\nWorked before? If so, with which NuGet version: Unknown\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nSample `csproj`:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <Description>JSPool facilitates easy integration of JavaScript scripting into a .NET application in a scalable and performant manner. It does so by creating a pool of engines that can be reused multiple times, making it easy to use JavaScript libraries that have long initialisation times without having to create a new engine every time.\r\n    \r\nSee https://dan.cx/projects/jspool for usage instructions.</Description>\r\n    <Copyright>Daniel Lo Nigro</Copyright>\r\n    <VersionPrefix>3.0.0</VersionPrefix>\r\n    <TargetFrameworks>net40-client;net451;netstandard1.3</TargetFrameworks>\r\n    <GenerateDocumentationFile>true</GenerateDocumentationFile>\r\n    <AssemblyName>JSPool</AssemblyName>\r\n    <AssemblyOriginatorKeyFile>../key.snk</AssemblyOriginatorKeyFile>\r\n    <SignAssembly>true</SignAssembly>\r\n    <PublicSign Condition=\" '$(OS)' != 'Windows_NT' \">true</PublicSign>\r\n    <PackageId>JSPool</PackageId>\r\n    <PackageTags>javascript;js;javascriptengineswitcher;msiejavascriptengine;v8;clearscript</PackageTags>\r\n    <PackageProjectUrl>http://dan.cx/projects/jspool</PackageProjectUrl>\r\n    <PackageLicenseUrl>https://github.com/Daniel15/JSPool/blob/master/LICENSE</PackageLicenseUrl>\r\n    <NetStandardImplicitPackageVersion Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">1.6.0</NetStandardImplicitPackageVersion>\r\n    <GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>\r\n    <GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>\r\n    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>\r\n    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>\r\n    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>\r\n    <GenerateAssemblyCopyrightAttribute>false</GenerateAssemblyCopyrightAttribute>\r\n  </PropertyGroup>\r\n\r\n  <!-- https://github.com/dotnet/sdk/issues/294 -->\r\n  <PropertyGroup Condition=\"'$(TargetFramework)' == 'net40-client'\">\r\n    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>\r\n    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>\r\n    <TargetFrameworkProfile>client</TargetFrameworkProfile>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"JavaScriptEngineSwitcher.Core\" Version=\"2.4.9\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"System.Diagnostics.TraceSource\" Version=\"4.0.0\" />\r\n    <PackageReference Include=\"System.IO.FileSystem.Watcher\" Version=\"4.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nNote that this `csproj` is conditionally including a few NuGet packages (`System.Diagnostics.TraceSource` and `System.IO.FileSystem.Watcher`) just for `netstandard1.3`.\r\n\r\nTry to upgrade `System.IO.FileSystem.Watcher` to the latest version in the Visual Studio UI.\r\n\r\nExpected behaviour: It works\r\nActual behavior: It throws:\r\n```\r\nPackage System.IO.FileSystem.Watcher 4.3.0 is not compatible with net40-client (.NETFramework,Version=v4.0,Profile=Client). Package System.IO.FileSystem.Watcher 4.3.0 supports:\r\n  - monoandroid10 (MonoAndroid,Version=v1.0)\r\n  - monotouch10 (MonoTouch,Version=v1.0)\r\n  - net46 (.NETFramework,Version=v4.6)\r\n  - netstandard1.3 (.NETStandard,Version=v1.3)\r\n  - xamarinios10 (Xamarin.iOS,Version=v1.0)\r\n  - xamarinmac20 (Xamarin.Mac,Version=v2.0)\r\n  - xamarintvos10 (Xamarin.TVOS,Version=v1.0)\r\n  - xamarinwatchos10 (Xamarin.WatchOS,Version=v1.0)\r\nOne or more packages are incompatible with .NETFramework,Version=v4.0,Profile=Client.\r\n```\r\n\r\nIt looks like the upgrade is not taking the condition (`'$(TargetFramework)' == 'netstandard1.3'`) into account and is instead trying to upgrade it for **all** target frameworks.\r\n"},{"Id":"11466890446","Type":"IssuesEvent","CreatedAt":"2020-02-08T00:53:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8456","RelatedDescription":"Closed issue \"\"Error occurred while restoring NuGet Package\" and InvalidOperationException in Output window when the assembly name is different for different TFMs\" (#8456) at NuGet/Home","RelatedBody":"I get the following message on the Package Manager Output window when I open my project in Visual Studio 2019 (16.2.2):\r\n```\r\nError occurred while restoring NuGet packages: The operation failed as details for project Foo could not be loaded.\r\n```\r\n\r\nThe same message precedes the _1>------ Rebuild All started: Project: Foo, Configuration: Release Any CPU ------_ line on the Build Output window when I rebuild my project.\r\n\r\nI see the following in my Tests Output window:\r\n```\r\n[8/14/2019 10:22:03.270 AM Informational] Store opened in 1.189 sec.\r\n[8/14/2019 10:22:06.987 AM Error] System.InvalidOperationException: The operation failed as details for project Foo could not be loaded.\r\n   at NuGet.PackageManagement.VisualStudio.NetCorePackageReferenceProject.GetPackageSpecsAsync(DependencyGraphCacheContext context)\r\n   at NuGet.VisualStudio.VsPackageInstallerServices.<GetPackagesPathResolverAsync>d__8.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.VisualStudio.VsPackageInstallerServices.<>c__DisplayClass7_0.<<GetInstalledPackages>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\r\n   at Microsoft.VisualStudio.Threading.JoinableTask`1.CompleteOnCurrentThread()\r\n   at Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[T](Func`1 asyncMethod, JoinableTaskCreationOptions creationOptions)\r\n   at NuGet.VisualStudio.VsPackageInstallerServices.GetInstalledPackages()\r\n   at Microsoft.VisualStudio.TestWindow.Controller.UnitTestExtensionDiscoverer.GetNugetAdapters()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n[8/14/2019 10:22:07.039 AM Informational] ---------- Discovery started ----------\r\n[8/14/2019 10:22:07.182 AM Informational] ========== Discovery skipped: All test containers are up to date ==========\r\n```\r\n\r\nHere is my .csproj file:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net461;netcoreapp2.0</TargetFrameworks>\r\n    <AssemblyName>Foo</AssemblyName>\r\n    <SignAssembly>true</SignAssembly>\r\n    <AssemblyOriginatorKeyFile>AwDotNetCore.snk</AssemblyOriginatorKeyFile>\r\n    <GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>\r\n    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>\r\n    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>\r\n    <GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>\r\n    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>\r\n    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>\r\n    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>\r\n    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>\r\n    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>\r\n    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(TargetFramework)'=='net461'\">\r\n    <AssemblyName>Foo4</AssemblyName>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <Optimize>false</Optimize>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup Condition=\"'$(TargetFramework)'=='net461'\">\r\n    <Reference Include=\"System\" />\r\n    <Reference Include=\"System.Core\" />\r\n    <Reference Include=\"System.Data\" />    \r\n    <Reference Include=\"System.EnterpriseServices\" />\r\n    <Reference Include=\"System.Runtime.Remoting\" />\r\n    <Reference Include=\"System.Security\" />\r\n    <Reference Include=\"System.Web\" />\r\n    <Reference Include=\"System.Xml\" />\r\n  </ItemGroup>\r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting.Abstractions\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Abstractions\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Razor.Runtime\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Win32.Registry\" Version=\"4.4.0\" />\r\n    <PackageReference Include=\"System.Data.SqlClient\" Version=\"4.4.0\" />\r\n    <PackageReference Include=\"System.Security.Principal.Windows\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n  \r\n  <ItemGroup>\r\n    <Compile Include=\"..\\..\\Version\\generated\\cpp\\ProductVersion.cs\">\r\n      <Link>ProductVersion.cs</Link>\r\n    </Compile>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThis seems to be related to the conditional PropertyGroup where the AssemblyName is different than the project name. When I remove the following lines from my .csproj file the errors go away:\r\n\r\n```\r\n  <PropertyGroup Condition=\"'$(TargetFramework)'=='net461'\">\r\n    <AssemblyName>Foo4</AssemblyName>\r\n  </PropertyGroup>\r\n```"},{"Id":"11466738540","Type":"IssuesEvent","CreatedAt":"2020-02-08T00:10:48","Actor":"casz","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9153","RelatedDescription":"Opened issue \"csproj, nuspec merging not documented and some replacements tokens are not documented\" (#9153) at NuGet/Home","RelatedBody":"having csproj and nuspec named the same and merging them is not explained at all\n\nTokens such as `$CommonMetadataElements$` and `$CommonFileElements$` are not documented and google searches are not great either for explaining them.\n\nI wonder if there are other special tokens I am not aware of.\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 06a19d7d-253d-f17f-6421-624c9867473d\n* Version Independent ID: cc37eb17-f715-080c-7bfc-9eae868d50ba\n* Content: [.nuspec File Reference for NuGet](https://docs.microsoft.com/en-us/nuget/reference/nuspec#feedback)\n* Content Source: [docs/reference/nuspec.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/reference/nuspec.md)\n* Product: **nuget**\n* GitHub Login: @karann-msft\n* Microsoft Alias: **karann**"},{"Id":"11466409278","Type":"IssuesEvent","CreatedAt":"2020-02-07T22:56:22","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9136","RelatedDescription":"Closed issue \"Insertion of 5.5.0-rtm.6412\" (#9136) at NuGet/Home","RelatedBody":"VS:\r\n - [x] https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/226652\r\n\r\n.NET Core 3.0\r\n - [x] https://github.com/dotnet/sdk/pull/10599\r\n - [x] https://github.com/dotnet/cli/pull/13214\r\n - [x] https://github.com/dotnet/toolset/pull/4227\r\n\r\n.NET Core 5.0\r\n - [ ] https://github.com/dotnet/toolset/pull/4228\r\n - [ ] Last insertion is not yet merged. https://github.com/dotnet/sdk/pull/4217 \r\nThe PR is the same with last insertion. Checking with SDK team if further action needed."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-02-10T05:30:43.7749025Z","RunDurationInMilliseconds":1876}