{"Data":{"GitHub":{"Issues":[{"Id":"400994017","IsPullRequest":true,"CreatedAt":"2019-01-19T13:10:24","Actor":"dotnet-maestro[bot]","Number":"278","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19068.4\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/278","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#278)"},{"Id":"400933430","IsPullRequest":false,"CreatedAt":"2019-01-19T00:03:41","Actor":"vsfeedback","Number":"277","RawContent":null,"Title":"WPF ShowDialog() never returns when a dialog's owner is closed and that owner is another dialog","State":"open","Body":"I'm attaching a project that succinctly shows the bug, but here's the idea:\n\n1. Create a WPF app with a main window.\n2. Click a button that does two things:\n2a. Immediately shows another window as a dialog (using ShowDialog())\n2b. After a short delay, shows a third window as a dialog whose owner is the second window (the first dialog)\n3. In the first dialog's Loaded handler, the dialog closes itself after a short delay.\n\nWhat should happen:\nBoth dialogs close and both dialogs' ShowDialog() methods return.\n\nWhat actually happens:\nBoth dialogs close but neither dialog's ShowDialog() method returns.\n\nIn the attached sample, a counter is used to keep track of how many dialogs are currently being shown, based on the number of ShowDialog() calls.  Clicking the button multiple times keeps increasing the number of dialogs open (ShowDialog() calls).  Commenting out the indicated line in MainWindow.xaml.cs works around the bug.\n\nMotivating example:\nIn my app the first thing the user does is create a &quot;workspace&quot;.  Creating a workspace involves a number of steps and we show a progress dialog while those steps are being performed.  That progress dialog is dialog #1 from the sample.  Meanwhile, the app also checks for updates in the background during startup.  If an update is found, a separate dialog is shown telling the user about the update.  That is dialog #2.  If the user happens to tell the app to create a workspace and, while creating the workspace, an update is found, this bug is hit.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/51151/wpf-showdialog-never-returns-when-a-dialogs-owner.html\nVSTS ticketId: 428554_\n_These are the original issue comments:_\n\nHenning Dampel on 5/24/2018, 02:15 AM (239 days ago): <p>ShowDialog() also never returns if the dialog's owner is a normal window that closes.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/277","RelatedDescription":"Open issue \"WPF ShowDialog() never returns when a dialog's owner is closed and that owner is another dialog\" (#277)"},{"Id":"400720746","IsPullRequest":true,"CreatedAt":"2019-01-18T13:22:18","Actor":"dotnet-maestro[bot]","Number":"276","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.Windows.Extensions - 4.6.0-preview.19067.6\r\n- System.CodeDom - 4.6.0-preview.19067.6\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19067.6\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19067.6\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19067.6\r\n- System.Security.AccessControl - 4.6.0-preview.19067.6\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19067.6\r\n- System.Security.Permissions - 4.6.0-preview.19067.6\r\n- System.Security.Principal.Windows - 4.6.0-preview.19067.6\r\n- System.Reflection.Emit - 4.6.0-preview.19067.6\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19067.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/276","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#276)"},{"Id":"400716847","IsPullRequest":true,"CreatedAt":"2019-01-18T13:11:00","Actor":"dotnet-maestro[bot]","Number":"275","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19067.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/275","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#275)"},{"Id":"400269294","IsPullRequest":false,"CreatedAt":"2019-01-17T17:16:22","Actor":"pavelovcharov","Number":"273","RawContent":null,"Title":"Reference markup extension is missed","State":"closed","Body":"The System.Windows.Markup.Reference class is missed in NetCore3, although the WPF implementation seems to work as expected\r\n```\r\n[ContentProperty(\"Name\")]\r\npublic class Reference : MarkupExtension {\r\n    public Reference() {\r\n    }\r\n\r\n    public Reference(string name) {\r\n        Name = name;\r\n    }\r\n\r\n    [ConstructorArgument(\"name\")]\r\n    public string Name { get; set; }\r\n\r\n    public override object ProvideValue(IServiceProvider serviceProvider) {\r\n        if(serviceProvider == null)\r\n            throw new ArgumentNullException(nameof(serviceProvider));\r\n        IXamlNameResolver service = serviceProvider.GetService(typeof(IXamlNameResolver)) as IXamlNameResolver;\r\n        if(service == null)\r\n            throw new InvalidOperationException(\"MissingNameResolver\");\r\n        if(string.IsNullOrEmpty(Name))\r\n            throw new InvalidOperationException(\"MustHaveName\");\r\n        object obj = service.Resolve(Name);\r\n        if(obj == null) {\r\n            string[] strArray = new string[1] { Name };\r\n            obj = service.GetFixupToken(strArray, true);\r\n        }\r\n        return obj;\r\n    }\r\n}\r\n```\r\n[ReferenceTest.zip](https://github.com/dotnet/wpf/files/2768688/ReferenceTest.zip)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/273","RelatedDescription":"Closed issue \"Reference markup extension is missed\" (#273)"},{"Id":"400274875","IsPullRequest":true,"CreatedAt":"2019-01-17T13:27:46","Actor":"dotnet-maestro[bot]","Number":"274","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19066.2\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19066.2\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19066.2\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19066.2\r\n- System.Security.AccessControl - 4.6.0-preview.19066.2\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19066.2\r\n- System.Security.Permissions - 4.6.0-preview.19066.2\r\n- System.Security.Principal.Windows - 4.6.0-preview.19066.2\r\n- System.Reflection.Emit - 4.6.0-preview.19066.2\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19066.2\r\n- System.Windows.Extensions - 4.6.0-preview.19066.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/274","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#274)"},{"Id":"400268785","IsPullRequest":true,"CreatedAt":"2019-01-17T13:11:26","Actor":"dotnet-maestro[bot]","Number":"272","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19066.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/272","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#272)"},{"Id":"400147205","IsPullRequest":false,"CreatedAt":"2019-01-17T07:41:32","Actor":"jongleur1983","Number":"271","RawContent":null,"Title":"WPF template used by dotnet cli should include a glob to add auto-dependency between .xaml and .xaml.cs files","State":"open","Body":"I'd be happy to create a PR for this, but couldn't find where the project template is defined:\r\n\r\nIn classic .NET Framework WPF applications the XAML files (.xaml) are dependentUpon their code-behind partials (.xaml.cs).\r\nThis is reflected in the VS solution explorer.\r\n\r\nFor WPF on Core3 this is not yet the case. It would be easy to add a glob that wildcards this dependency by default:\r\n\r\n```xml\r\n<ItemGroup>\r\n  <Compile Update=\"**\\*.xaml.cs\" DependentUpon=\"%(Filename)\" />\r\n</ItemGroup>\r\n```\r\n\r\nIf someone could point me to the repository and/or location where the wpf project template is defined I'd be happy to issue a PR to add that.","Url":"https://github.com/dotnet/wpf/issues/271","RelatedDescription":"Open issue \"WPF template used by dotnet cli should include a glob to add auto-dependency between .xaml and .xaml.cs files\" (#271)"},{"Id":"400001034","IsPullRequest":true,"CreatedAt":"2019-01-16T21:55:18","Actor":"stevenbrix","Number":"270","RawContent":null,"Title":"fixing up some changes that didn't make it in the last pr","State":"closed","Body":"@AdamYoblick made some comments on PR #264 that didn't make it until after the merge","Url":"https://github.com/dotnet/wpf/pull/270","RelatedDescription":"Closed or merged PR \"fixing up some changes that didn't make it in the last pr\" (#270)"},{"Id":"399942868","IsPullRequest":false,"CreatedAt":"2019-01-16T20:47:26","Actor":"danzil","Number":"268","RawContent":null,"Title":"A recent change in XamlObjectReader introduced the use of Linq, which is unnecessary","State":"closed","Body":"* .NET Core Version: 3.0.100-preview-010024\r\n* Windows version: 17763\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n**Problem description:**\r\nA recent change in XamlObjectReader #73 introduced the use of Linq, which is unnecessary and ads extra dll loads.","Url":"https://github.com/dotnet/wpf/issues/268","RelatedDescription":"Closed issue \"A recent change in XamlObjectReader introduced the use of Linq, which is unnecessary\" (#268)"},{"Id":"399944197","IsPullRequest":true,"CreatedAt":"2019-01-16T19:18:34","Actor":"danzil","Number":"269","RawContent":null,"Title":"Revert back to not using Linq, which ads unnecessary dll loads","State":"closed","Body":"This addresses #268 by reverting back to the code that was there before the change.","Url":"https://github.com/dotnet/wpf/pull/269","RelatedDescription":"Closed or merged PR \"Revert back to not using Linq, which ads unnecessary dll loads\" (#269)"},{"Id":"399804284","IsPullRequest":true,"CreatedAt":"2019-01-16T13:21:56","Actor":"dotnet-maestro[bot]","Number":"267","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19065.3\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19065.3\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19065.3\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19065.3\r\n- System.Security.AccessControl - 4.6.0-preview.19065.3\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19065.3\r\n- System.Security.Permissions - 4.6.0-preview.19065.3\r\n- System.Security.Principal.Windows - 4.6.0-preview.19065.3\r\n- System.Reflection.Emit - 4.6.0-preview.19065.3\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19065.3\r\n- System.Windows.Extensions - 4.6.0-preview.19065.3\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/267","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#267)"},{"Id":"399800040","IsPullRequest":true,"CreatedAt":"2019-01-16T13:10:37","Actor":"dotnet-maestro[bot]","Number":"266","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19065.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/266","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#266)"},{"Id":"399598440","IsPullRequest":false,"CreatedAt":"2019-01-16T00:41:36","Actor":"TeddyAlbina","Number":"265","RawContent":null,"Title":"Merging Avalonia with WPF","State":"open","Body":"After a lot of code reading i think it's possible to merge Avalonia with Wpf code to produces a cross platform standardized UI for .net core. \r\n\r\nIt's someone interested to start ?","Url":"https://github.com/dotnet/wpf/issues/265","RelatedDescription":"Open issue \"Merging Avalonia with WPF\" (#265)"},{"Id":"399556006","IsPullRequest":true,"CreatedAt":"2019-01-15T23:34:09","Actor":"stevenbrix","Number":"264","RawContent":null,"Title":"use new arcade templates","State":"closed","Body":"using new arcade templates as the old \"phases\" has been deprecated\r\n\r\nFixes #251 ","Url":"https://github.com/dotnet/wpf/pull/264","RelatedDescription":"Closed or merged PR \"use new arcade templates\" (#264)"},{"Id":"397976793","IsPullRequest":false,"CreatedAt":"2019-01-15T23:34:09","Actor":"stevenbrix","Number":"251","RawContent":null,"Title":"WPF is building with deprecated Arcade templates","State":"closed","Body":"we should be using jobs/job.yml, instead of phases/base.yml\r\n","Url":"https://github.com/dotnet/wpf/issues/251","RelatedDescription":"Closed issue \"WPF is building with deprecated Arcade templates\" (#251)"},{"Id":"399339535","IsPullRequest":true,"CreatedAt":"2019-01-15T13:19:08","Actor":"dotnet-maestro[bot]","Number":"263","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19064.4\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19064.4\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19064.4\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19064.4\r\n- System.Security.AccessControl - 4.6.0-preview.19064.4\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19064.4\r\n- System.Security.Permissions - 4.6.0-preview.19064.4\r\n- System.Security.Principal.Windows - 4.6.0-preview.19064.4\r\n- System.Reflection.Emit - 4.6.0-preview.19064.4\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19064.4\r\n- System.Windows.Extensions - 4.6.0-preview.19064.4\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/263","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#263)"},{"Id":"399336366","IsPullRequest":true,"CreatedAt":"2019-01-15T13:10:25","Actor":"dotnet-maestro[bot]","Number":"262","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19064.4\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/262","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#262)"},{"Id":"398048307","IsPullRequest":true,"CreatedAt":"2019-01-14T21:22:33","Actor":"stevenbrix","Number":"254","RawContent":null,"Title":"build against latest core fx packages","State":"closed","Body":"I've added the darc subscription for the \".NET Core 3 Dev\" channel from the CoreFX repo to the WPF (this) repo. This change checks-in the files required by darc to allow Maestro to update these files and get the latest packages that come from the CoreFX build\r\n\r\n\r\nI've also added other packages that are required for building WPF that come from the prototype branch.\r\n\r\nFixes #248 ","Url":"https://github.com/dotnet/wpf/pull/254","RelatedDescription":"Closed or merged PR \"build against latest core fx packages\" (#254)"},{"Id":"398700317","IsPullRequest":true,"CreatedAt":"2019-01-14T08:33:40","Actor":"alxnull","Number":"261","RawContent":null,"Title":"Add License Badge","State":"closed","Body":"Many popular repositories have a license badge at the top of the readme (e.g. https://github.com/dotnet/winforms/pull/258), so I thought we could also add one here.","Url":"https://github.com/dotnet/wpf/pull/261","RelatedDescription":"Closed or merged PR \"Add License Badge\" (#261)"},{"Id":"398507540","IsPullRequest":true,"CreatedAt":"2019-01-12T01:40:28","Actor":"dotnet-maestro[bot]","Number":"260","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19061.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/260","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#260)"},{"Id":"398468518","IsPullRequest":false,"CreatedAt":"2019-01-11T22:03:19","Actor":"tmat","Number":"259","RawContent":null,"Title":"Avoid calling Path.GetTempFileName","State":"open","Body":"`System.Windows.Input.Cursor.LoadFromStream` may throw IOException.\r\n`DevDiv\\FX\\Rel\\Net471Rel1Last\\wpf\\src\\Core\\CSharp\\System\\Windows\\Input\\Cursor.cs` calls `Path.GetTempFileName` which will throw if the `%TEMP%` directory contains too many temp files (65k).\r\n\r\nReported by customer as [VS Feedback issue](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/537936)\r\n","Url":"https://github.com/dotnet/wpf/issues/259","RelatedDescription":"Open issue \"Avoid calling Path.GetTempFileName\" (#259)"},{"Id":"398382963","IsPullRequest":true,"CreatedAt":"2019-01-11T17:50:09","Actor":"stevenbrix","Number":"258","RawContent":null,"Title":"moving to new feed","State":"closed","Body":"the dotnet-core feed is too contested and causes builds to timeout. thanks @AdamYoblick for this fix!","Url":"https://github.com/dotnet/wpf/pull/258","RelatedDescription":"Closed or merged PR \"moving to new feed\" (#258)"},{"Id":"398185825","IsPullRequest":false,"CreatedAt":"2019-01-11T16:14:07","Actor":"lupj","Number":"256","RawContent":null,"Title":"WPF for Linux?","State":"closed","Body":"<!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n\r\nWill WPF support Linux?","Url":"https://github.com/dotnet/wpf/issues/256","RelatedDescription":"Closed issue \"WPF for Linux?\" (#256)"},{"Id":"398280866","IsPullRequest":true,"CreatedAt":"2019-01-11T13:10:10","Actor":"dotnet-maestro[bot]","Number":"257","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19060.8\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/257","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#257)"},{"Id":"398076230","IsPullRequest":false,"CreatedAt":"2019-01-11T00:24:18","Actor":"ericstj","Number":"255","RawContent":null,"Title":"Microsoft.NET.Sdk.WindowsDesktop.props references System.Windows.Controls.Ribbon on .NET 4.0","State":"open","Body":" **Problem description:**\r\nWhen targeting net40 from a WPF app the build emits a warning. \r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n Warning:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010046\\Microsoft.Common.CurrentVersion.targets(2114,5): warning MSB3267: The primary reference \"System.Windows.Controls.Ribbon\", which is a framework assembly, could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.0\". To resolve this problem, either remove the reference \"System.Windows.Controls.Ribbon\" or retarget your application to a framework version which contains \"System.Windows.Controls.Ribbon\".\r\n```\r\n\r\n **Expected behavior:**\r\nNo warning\r\n \r\n **Minimal repro:**\r\ndotnet new wpf\r\nchange targetframework to `net40` or make it cross-target.\r\ndotnet build\r\n\r\n(project also attached)\r\n[net40.zip](https://github.com/dotnet/wpf/files/2747557/net40.zip)\r\n\r\nI believe the fix is here is to put a condition on the _SDKImplicitReference items defined in Microsoft.NET.Sdk.WindowsDesktop.props.\r\n\r\nOriginally reported here: https://github.com/dotnet/core/issues/2085#issuecomment-453309364\r\n","Url":"https://github.com/dotnet/wpf/issues/255","RelatedDescription":"Open issue \"Microsoft.NET.Sdk.WindowsDesktop.props references System.Windows.Controls.Ribbon on .NET 4.0\" (#255)"},{"Id":"397977480","IsPullRequest":true,"CreatedAt":"2019-01-10T20:01:14","Actor":"stevenbrix","Number":"253","RawContent":null,"Title":"removing specific version of microbuild so we don't timeout","State":"closed","Body":"Fixes #252 ","Url":"https://github.com/dotnet/wpf/pull/253","RelatedDescription":"Closed or merged PR \"removing specific version of microbuild so we don't timeout\" (#253)"},{"Id":"397977260","IsPullRequest":false,"CreatedAt":"2019-01-10T20:01:14","Actor":"stevenbrix","Number":"252","RawContent":null,"Title":"incorrect version of Microbuild plugin is being used","State":"closed","Body":"We are using outdated templates (tracked by #251). This issue is just to fix the version so that we use the correct microbuild and so our signed builds can complete","Url":"https://github.com/dotnet/wpf/issues/252","RelatedDescription":"Closed issue \"incorrect version of Microbuild plugin is being used\" (#252)"},{"Id":"397821883","IsPullRequest":true,"CreatedAt":"2019-01-10T13:10:31","Actor":"dotnet-maestro[bot]","Number":"250","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19058.5\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/250","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#250)"},{"Id":"397716598","IsPullRequest":false,"CreatedAt":"2019-01-10T08:15:51","Actor":"deanchalk","Number":"249","RawContent":null,"Title":"GridViewRowPresenter adds Margin to ContentPresenter in code when creating cells","State":"open","Body":"Bug has been in WPF since the beginning\r\n\r\n **Problem description:**\r\nWhen GridViewRowPresenter  creates a cell in a ListView/GridView combination, it arbitrarily adds a Margin of 6,0,6,0 in code to the ContentPresenter. This means that you cannot style the GridView correctly unless you add a negative margin in your style to reverse this behaviour - which is what some of us have had to do for years. Would be great if this  could be fixed","Url":"https://github.com/dotnet/wpf/issues/249","RelatedDescription":"Open issue \"GridViewRowPresenter adds Margin to ContentPresenter in code when creating cells\" (#249)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-01-20T05:30:57.0342582Z","RunDurationInMilliseconds":582}