{"Data":{"Vue":{"Events":[{"Id":"7127817106","Type":"IssuesEvent","CreatedAt":"2018-01-21T02:51:48","Actor":"inuscript","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7492","RelatedDescription":"Opened issue \"Functional single file component with components option.\" (#7492) at vuejs/vue","RelatedBody":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n\r\nNG pattern (functional)\r\nhttps://codesandbox.io/s/004vv2onw0\r\n\r\nOK pattern (no functional)\r\nhttps://codesandbox.io/s/q9k5q8qq56\r\n\r\n### Steps to reproduce\r\nI found can't use `components` option when  `functional` single file component.\r\n\r\n```html\r\n<template functional>\r\n  <div>\r\n    <some-children />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SomeChildren from \"./SomeChildren\"\r\n\r\nexport default {\r\n  components: {\r\n    SomeChildren\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nIt's occure `Unknown custom element`.\r\n\r\n### What is expected?\r\nNot occure `Unknown custom element` and use child component\r\n\r\n### What is actually happening?\r\nIt's occure `Unknown custom element`\r\n\r\n---\r\n\r\nIn workaround, it not occure when use `Vue.component`.\r\n\r\n```js\r\nimport Vue from \"vue\"\r\nimport SomeChildren from \"./SomeChildren\"\r\nVue.component(\"some-children\", SomeChildren);\r\n\r\nexport default {}\r\n\r\n// can use  <some-children />\r\n```\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7126521301","Type":"PullRequestEvent","CreatedAt":"2018-01-20T11:23:43","Actor":"SerikDM","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2013","RelatedDescription":"Opened pull request \"Mask for urls\" (#2013) at vuejs/vue-router","RelatedBody":"Related issue #1858 \r\n\r\nAdding support to hide real path by 'ninja' mask\r\nPass object with 'ninjaPath' property to 'push' or 'replace' method, 'ninjaPath' will be displayed in address bar.\r\n\r\nUse case:\r\nDynamic short urls like 'domain/fancyShortUrl' which will be caught in '*' route and lead to 'domain/user/userId' or 'domain/note/noteId' based on response from server, but URL in address bar will remain 'domain/fancyShortUrl'\r\n\r\nps. I'm beginner."},{"Id":"7122484905","Type":"IssuesEvent","CreatedAt":"2018-01-19T12:00:21","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2011","RelatedDescription":"Closed issue \"Add a way to catch a route cancel\" (#2011) at vuejs/vue-router","RelatedBody":"There are occasions where a route should be handled everytime it’s considered. For example, I’ve seen it suggested that VueRouter could be used to show a loading indicator by doing the following:\r\n\r\n```\r\nrouter.beforeEach((to, from, next) => {\r\n    LoadIndicator.show();\r\n    next();\r\n});\r\nrouter.afterEach((to, from) => {\r\n    LoadIndicator.hide();\r\n});\r\n```\r\nA route can be cancelled in a component’s `beforeRouteEnter` method with `next(false)`, but `AfterEach` won’t fire since the route never actually loaded and the loading indicatior is stuck.  \r\n\r\nSomething like that would be great: \r\n\r\n```\r\nrouter.cancel((to, from) => {\r\n    LoadIndicator.hide();\r\n});\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7123508914","Type":"IssuesEvent","CreatedAt":"2018-01-19T15:38:30","Actor":"posva","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1138","RelatedDescription":"Closed issue \"$store对象中带下划线的函数为什么不能直接调用\" (#1138) at vuejs/vuex","RelatedBody":" #<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nthis.$store._actions.getAllProducts;无效\r\nthis.$store.dispatch('getAllProducts')  有用\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-01-21T05:30:35.4403474Z","RunDurationInMilliseconds":2064}