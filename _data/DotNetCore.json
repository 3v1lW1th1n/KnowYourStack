{"Data":{"Blog":{"FeedItems":[{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-11-14T20:30:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/14/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":".NET Framework November 2018 Security and Quality Rollup","PublishedOn":"2018-11-14T00:24:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework September 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-framework-november-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2017 version 15.9","PublishedOn":"2018-11-13T18:09:43+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Starting with Visual Studio 2017 version 15.9, we’ve changed how the Visual Studio tooling for .NET consumes .NET Core SDKs. Prior to this change, installing a preview version of the .NET Core SDK...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-core-tooling-update-for-visual-studio-2017-version-15-9/","RawContent":null},{"Title":"Cross-platform Time Zones with .NET Core","PublishedOn":"2018-11-13T18:00:21+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Developing applications that span multiple operating systems in .NET Core while working with Time Zone information can lead to unexpected results for developers not familiar with the differences in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/cross-platform-time-zones-with-net-core/","RawContent":null},{"Title":"Building C# 8.0","PublishedOn":"2018-11-13T00:00:02+00:00","CommentsCount":143,"FacebookCount":0,"Summary":"Building C# 8.0 The next major version of C# is C# 8.0. It&#8217;s been in the works for quite some time, even as we built and shipped the minor releases C# 7.1, 7.2 and 7.3, and I&#8217;m quite...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/","RawContent":null},{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":107,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8637227393","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:32:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Merged pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8637225303","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:31:49","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8578321898","Type":"PullRequestEvent","CreatedAt":"2018-11-13T04:22:33","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8573927252","Type":"PullRequestEvent","CreatedAt":"2018-11-12T13:30:25","Actor":"scottbrady91","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Opened pull request \"Update to IdentityManager project\" (#116) at dotnet/foundation","RelatedBody":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo."},{"Id":"8573265026","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:25:41","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Opened pull request \"Create identitymodel.md\" (#115) at dotnet/foundation","RelatedBody":""},{"Id":"8573235551","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:20:18","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8640354907","Type":"PullRequestEvent","CreatedAt":"2018-11-24T04:38:10","Actor":"wfurt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21179","RelatedDescription":"Opened pull request \"publish symbols on FreeBSD\" (#21179) at dotnet/coreclr","RelatedBody":"This was disabled while back before we figure out how to add build-id to binaries.\r\nThis is another step to make it more like a Linux.   \r\n\r\nI did CM test build with Release, Debug and Checked configuration:\r\nhttps://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=2231375&view=logs\r\nhttps://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=2231384&view=logs\r\nhttps://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=2231393&view=logs\r\n\r\nsymbol publishing finished in all three cases. (overall build failed as coreclr build is currently failing) \r\n\r\n"},{"Id":"8640203336","Type":"PullRequestEvent","CreatedAt":"2018-11-24T02:18:38","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21178","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview-27124-01, preview-27123-02, respectively (master)\" (#21178) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"8639941540","Type":"PullRequestEvent","CreatedAt":"2018-11-23T22:55:56","Actor":"erozenfeld","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21177","RelatedDescription":"Opened pull request \"Don't assume objects don't escape in pure helpers.\" (#21177) at dotnet/coreclr","RelatedBody":"We can't assume objects don't escape in helpers marked as pure for the following reasons:\r\n\r\n1. The helpers may call user code that may make objects escape, e.g.,\r\nhttps://github.com/dotnet/coreclr/blob/c94d8e68222d931d4bb1c4eb9a52b4b056e85f12/src/vm/jithelpers.cpp#L2371\r\n\r\n2. The helpers usually protect gc pointers with GCPROTECT_BEGIN() so the pointers are reported as normal pointers to the gc.\r\nPointers to stack-allocated objects need to be reported as interior so they have to be protected with\r\nGCPROTECT_BEGININTERIOR().\r\n\r\n3. The helpers may cause these asserts in ValidateInner on stack-allocated objects:\r\nhttps://github.com/dotnet/coreclr/blob/c94d8e68222d931d4bb1c4eb9a52b4b056e85f12/src/vm/object.cpp#L723\r\nhttps://github.com/dotnet/coreclr/blob/c94d8e68222d931d4bb1c4eb9a52b4b056e85f12/src/vm/object.cpp#L730"},{"Id":"8639653022","Type":"PullRequestEvent","CreatedAt":"2018-11-23T20:30:57","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21160","RelatedDescription":"Closed pull request \"[WIP] [NO MERGE] Combine 21149 and 21097 to try and get a dump of the arm64 failure\" (#21160) at dotnet/coreclr","RelatedBody":""},{"Id":"8639310237","Type":"PullRequestEvent","CreatedAt":"2018-11-23T18:14:04","Actor":"janvorli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21175","RelatedDescription":"Merged pull request \"Fix debugger thread statics access for collectible classes\" (#21175) at dotnet/coreclr","RelatedBody":"The CordbClass::GetStaticFieldValue2 was missing support for accessing\r\nthread statics in collectible classes. Fortunately the fix was simple,\r\nwe can use the same code path as for non-collectible thread statics."},{"Id":"8639193761","Type":"PullRequestEvent","CreatedAt":"2018-11-23T17:34:43","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21158","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup, PgoData to preview-27123-02, preview.18573.2, preview-27123-01, master-20181123-0042, respectively (master)\" (#21158) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8639663006","Type":"PullRequestEvent","CreatedAt":"2018-11-23T20:35:32","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10383","RelatedDescription":"Merged pull request \"Update dependency files\" (#10383) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n\r\n"},{"Id":"8639642532","Type":"IssuesEvent","CreatedAt":"2018-11-23T20:26:14","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10359","RelatedDescription":"Closed issue \"dotnet can never find dependencies after a dll is moved\" (#10359) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nHave a project with a dependency, in my case `Ben.Demystifier.dll`\r\n`dotnet publish -c Release -o out`\r\nMove the compiled project to another machine with the dotnet runtime\r\n`dotnet mydll.dll`\r\n\r\n## Expected  behavior\r\nProject runs fine.\r\n\r\n## Actual behavior\r\n```\r\nError:\r\n  An assembly specified in the application dependencies manifest (mydll.deps.json) was not found:\r\n    package: 'Ben.Demystifier', version: '0.1.0'\r\n    path: 'lib/netstandard2.0/Ben.Demystifier.dll'\r\n```\r\n\r\nI have tried moving that 'missing' dll everything. I have moved it to the same dir under the path specified above, but it's unable to find it every time.\r\n\r\nWhere is this path set and why can't it find my dll? It will run properly on the machine that ran the public and `dotnet restore`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"8639637910","Type":"IssuesEvent","CreatedAt":"2018-11-23T20:24:17","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10387","RelatedDescription":"Closed issue \"dotnet build & dotnet publish do not include runtimeconfig.json for referenced applications\" (#10387) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Create new .NET Core 2.1 Console App solution/project in your favorite IDE (Project A)\r\n2. Create a new .NET Core 2.1 Console App project in the same solution. (Project B)\r\n3. Reference Project B in Project A\r\n4. `dotnet build` and/or `dotnet publish` Project A\r\n5. Notice that Project B's .runtimeconfig.json file is not in Project A's bin/*/netcoreapp2.1/ folder\r\n\r\n## Expected  behavior\r\n\r\nProject B's .runtimeconfig.json is included in the bin directory of Project A.\r\n\r\n## Actual behavior\r\n\r\nProject B's .runtimeconfig.json is not in the bin directory of Project A.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n````"},{"Id":"8639634772","Type":"IssuesEvent","CreatedAt":"2018-11-23T20:22:57","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10385","RelatedDescription":"Closed issue \"Current stable download URL\" (#10385) at dotnet/cli","RelatedBody":"I'd like to install the .NET CLI on a Raspberry Pi. Since there are no packages for `apt` yet, this needs to be done manually. I'm writing a script that does that automatically. But it still needs the URL to download the archive from. It can easily be looked up on the web, but I believe this could also be automatic.\r\n\r\nSo I'm looking for a URL like this: `https://download.microsoft.com/dotnet/runtime/linux/arm/latest.tar.gz`"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8633204741","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:11:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Merged pull request \"Update dependency files\" (#980) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n"},{"Id":"8633148967","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:01:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Opened pull request \"Update dependency files\" (#980) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n"},{"Id":"8628628658","Type":"PullRequestEvent","CreatedAt":"2018-11-21T17:57:16","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/978","RelatedDescription":"Merged pull request \"Make sure Signing target finds packages to sign\" (#978) at dotnet/standard","RelatedBody":"This will fix a build error where we can't find any packages to sign. The problem was caused by me moving the `PackageOutputPath` property from `Directory.Build.props` to `Directory.Build.targets`, which was a workaround to allow us to continue outputting packages to the bin dir while using Arcade's packaging tasks. Once we're outputting packages to `artifacts`, we can revert this PR.\r\n\r\nCC @danmosemsft @JohnTortugo"},{"Id":"8626741279","Type":"PullRequestEvent","CreatedAt":"2018-11-21T13:11:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/979","RelatedDescription":"Merged pull request \"Update dependency files\" (#979) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18570.17\r\n\r\n"},{"Id":"8626683193","Type":"PullRequestEvent","CreatedAt":"2018-11-21T13:01:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/979","RelatedDescription":"Opened pull request \"Update dependency files\" (#979) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18570.17\r\n\r\n"},{"Id":"8623146917","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:38:08","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/978","RelatedDescription":"Opened pull request \"Make sure Signing target finds packages to sign\" (#978) at dotnet/standard","RelatedBody":"This will fix a build error where we can't find any packages to sign. The problem was caused by me moving the `PackageOutputPath` property from `Directory.Build.props` to `Directory.Build.targets`, which was a workaround to allow us to continue outputting packages to the bin dir while using Arcade's packaging tasks. Once we're outputting packages to `artifacts`, we can revert this PR.\r\n\r\nCC @danmosemsft "},{"Id":"8619716551","Type":"PullRequestEvent","CreatedAt":"2018-11-20T13:11:36","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/977","RelatedDescription":"Merged pull request \"Update dependency files\" (#977) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18569.4\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8640202481","Type":"PullRequestEvent","CreatedAt":"2018-11-24T02:17:50","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33679","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview-27124-01, preview-27123-02, respectively (master)\" (#33679) at dotnet/corefx","RelatedBody":""},{"Id":"8640138184","Type":"PullRequestEvent","CreatedAt":"2018-11-24T01:21:45","Actor":"fabriciomurta","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33678","RelatedDescription":"Opened pull request \"System.Collections.Generic.SortedSet: Format black-red tree comment\" (#33678) at dotnet/corefx","RelatedBody":"I think this comment has been lost in a monospace font transition in IDEs used by the project. :)\r\n\r\nI didn't study it in-depth, but it looks congruent with https://en.wikipedia.org/wiki/Red%E2%80%93black_tree."},{"Id":"8640117752","Type":"IssuesEvent","CreatedAt":"2018-11-24T01:04:40","Actor":"dhuyvett","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33677","RelatedDescription":"Opened issue \"Unexpected behavior of HttpClientHandler.ServerCertificateCustomValidationCallback\" (#33677) at dotnet/corefx","RelatedBody":"I have a dotnet core 2.1 application that is doing an explicit DNS lookup before using HttpClient to call the URL with the IP address substituted for the hostname.\r\n\r\nAs expected, for https URLS this results in \r\n\r\n    System.Security.Authentication.AuthenticationException : The remote certificate is invalid according to the validation procedure.\r\n\r\nI add the original hostname to the request in the Host header, and the exception persists.\r\n\r\nI add a trivial ServerCertificateCustomValidationCallback . and the exception is no longer thrown.\r\n\r\n    httpHandler.ServerCertificateCustomValidationCallback = (message, cert, chain, errors) => errors == SslPolicyErrors.None;\r\n\r\nI remove the Host header from the request, or but bad data in that header, and AuthenticationException returns.\r\n\r\nIt appears that the very existence of ServerCertificateCustomValidationCallback changes the way that the HttpClientHandler validates the hostname/certificate match.\r\n\r\nIs this dependable behavior?  Is there a better way in 2.1 to trigger host name validation to prefer the Host header? Is this documented anywhere?  (I haven't been able to find any discussion of the current behavior)"},{"Id":"8640091904","Type":"IssuesEvent","CreatedAt":"2018-11-24T00:43:01","Actor":"jnm2","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33676","RelatedDescription":"Opened issue \"TypeExtensions.GetInterface is missing\" (#33676) at dotnet/corefx","RelatedBody":"TypeExtensions makes traditional instance methods such as `Type.GetMethod` available as extension methods for .NET Standard 1.x which minimises the amount of preprocessor-conditional sections you have to write.\r\n\r\nAmong the many extension methods I expected to find method `GetInterface(string)`, but it is not there. (https://source.dot.net/#System.Reflection.TypeExtensions/System/Reflection/TypeExtensions.cs)"},{"Id":"8639934517","Type":"PullRequestEvent","CreatedAt":"2018-11-23T22:51:57","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33664","RelatedDescription":"Merged pull request \"Add back DefaultTraceListenerClassTests.netcoreapp.cs file\" (#33664) at dotnet/corefx","RelatedBody":""},{"Id":"8639715824","Type":"PullRequestEvent","CreatedAt":"2018-11-23T20:59:18","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33647","RelatedDescription":"Merged pull request \"Unix: change SetCreationTime to match better with GetCreationTime\" (#33647) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/33601\r\n\r\nCC @danmosemsft @WernerMairl"},{"Id":"8639715814","Type":"IssuesEvent","CreatedAt":"2018-11-23T20:59:18","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/33601","RelatedDescription":"Closed issue \"FileInfo.CreationTimeUtc setter seems not working (do nothing without exception) on Linux\" (#33601) at dotnet/corefx","RelatedBody":"Hi\r\nUsing Dotnet Core 2.1 \r\n\r\nThe following test is working on my Windows machine\r\n\r\nBUT it is failing on the assert in the last line if i execute the code using \r\n(linux) docker image \"microsoft/dotnet:sdk\" (on Bitbucket Pipeline)\r\n\r\n```c#\r\n        [Fact]\r\n        public void CreationTimeUtc_Bug()\r\n        {\r\n\r\n            string proposedFileName = Path.GetTempFileName();\r\n\r\n            File.Delete(proposedFileName);\r\n            File.WriteAllText(proposedFileName, \"dummy file content as text\");\r\n\r\n            FileInfo localFile = new System.IO.FileInfo(proposedFileName);\r\n            DateTime newCreationTimeUTC = System.DateTime.UtcNow.Subtract(TimeSpan.FromDays(365));\r\n\r\n            localFile.CreationTimeUtc = newCreationTimeUTC;\r\n            Assert.True(localFile.CreationTimeUtc == newCreationTimeUTC, \"thats a BUG!!\");\r\n\r\n        }\r\n```\r\n\r\nmay be something like  #16782 ?\r\n\r\nExpected Behavior: value should be assigned or Exception (PlatformNotSupported....)\r\n\r\nregards\r\nWerner\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8640397232","Type":"IssuesEvent","CreatedAt":"2018-11-24T05:19:30","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31317","RelatedDescription":"Closed issue \"Nullability annotations for variables are inferred incorrectly for deconstruction declarations\" (#31317) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\nBranch C# 8.0: Nullable reference type (29 Oct 2018)\r\nhttps://github.com/dotnet/csharplang/blob/master/proposals/nullable-reference-types.md\r\nLatest commit 2f8fef by AlekseyTs:\r\nCompare Nullable modifiers while comparing type symbols by default. (#30770)\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code\r\n```cs\r\n#nullable enable\r\nclass C\r\n{\r\n    void M()\r\n    {\r\n        var s1 = default(string);\r\n        var (s2, s3) = (default(string), s1);\r\n        s1.ToString(); // warning CS8602: Possible dereference of a null reference.\r\n        s2.ToString(); // no warning\r\n        s3.ToString(); // no warning\r\n\r\n        s1 = null;\r\n        s2 = null; // warning CS8600: Converting null literal or possible null value to non-nullable type.\r\n        s3 = null; // warning CS8600: Converting null literal or possible null value to non-nullable type.\r\n    }\r\n}\r\n```\r\n\r\nhttps://sharplab.io/#v2:EYLgZgpghgLgrgJwgZwLQDk4BstWFiAJQkiQDsBjCAFQE8AHFAHwGIztd8IACCMvAgFgAUAAEATNwDCIgN4jui7qIAs3ALIAKAJQKl84UqPcAblATdkARm4BebgBMSUbDE2irABm0BuPcdNzbk1kcQAaSwBmbTtgpzAXLDcPbwjrX39jawA6agB7AGUYBABLMgBzHR9uAHoa7gB3czIy8ukCgA4ANk9xEG4ABTzkZBKuRwgkUj4qbjywbihudhxuKcmZiGzMo1DcwuLWqtr6sjzG5tadpWRI/aLSiuO65fOmhBaKkWvFa1iVrB+QwBSySewA6ovd6fNpSTo9Tz9KR5MgmSYwVrLDjcLAlGCTKBYOYWejDUbjAGBLBwHgwc5nMioAECWkMLY/KL/DiQ+rQzFw7qeRHSFFohAYipY1a4/EIQnE7ikkZjAhSolmam0+kopkcFncGBs7bAxQAXxEpqAA\r\n\r\n**Expected Behavior**:\r\n\r\nThe variables `s2` and `s3` have `string?` type. Warnings for their dereference and no warnings for assigning null values to them.\r\n\r\n**Actual Behavior**:\r\n\r\nRoslyn infers that `s2` and `s3` are non-nullable.\r\n\r\n**Notes**\r\n\r\nSimilar to https://github.com/dotnet/roslyn/issues/31298"},{"Id":"8640394991","Type":"IssuesEvent","CreatedAt":"2018-11-24T05:17:19","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31329","RelatedDescription":"Closed issue \"C# - private implicit backing field for properties\" (#31329) at dotnet/roslyn","RelatedBody":"For properties where the backing field is (or should be) only used within the body of the property, I think it would be nice if there were an auto-implemented, implicit backing field that could be accessed using a keyword like `field`. For example:\r\n\r\n```c#\r\npublic int MaxValue\r\n{\r\n    get => field; // Field is a contextual keyword, like value, used to access the implicit backing variable\r\n    set\r\n    {\r\n        if (value < 0)\r\n            throw new ArgumentException(\"MaxValue cannot be negative.\")\r\n        field = value;\r\n    }\r\n}\r\n```\r\n\r\nThis saves the programmer from having to declare a backing variable that will only be used inside a property. Also, it makes it so that code _within_ a class has to go through the property to access the value rather than getting or setting the backing variable directly.\r\n\r\nTo prevent backing variables from being created for properties where they are not used, the compiler could simply not create the backing variable if \"field\" (or the equivalent key word) is never used in the property."},{"Id":"8640063661","Type":"IssuesEvent","CreatedAt":"2018-11-24T00:19:04","Actor":"HopefulToad","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31329","RelatedDescription":"Opened issue \"C# - private implicit backing field for properties\" (#31329) at dotnet/roslyn","RelatedBody":"For properties where the backing field is (or should) only be used within the body of the property, I think it would be nice if there were an auto-implemented, implicit backing field that could be accessed using a keyword like `field`. For example:\r\n\r\n```c#\r\npublic int MaxValue\r\n{\r\n    get => field; // Field is a contextual keyword, like value, used to access the implicit backing variable\r\n    set\r\n    {\r\n        if (value < 0)\r\n            throw new ArgumentException(\"MaxValue cannot be negative.\")\r\n        field = value;\r\n    }\r\n}\r\n```\r\n\r\nThis saves the programmer from having to declare a backing variable that will only be used inside a property. Also, it makes it so that code _within_ a class has to go through the property to access the value rather than getting or setting the backing variable directly."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8639625792","Type":"PullRequestEvent","CreatedAt":"2018-11-23T20:18:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6610","RelatedDescription":"Opened pull request \"Delete CORECLR ifdef\" (#6610) at dotnet/corert","RelatedBody":"This ifdef should not be needed anymore."},{"Id":"8639278986","Type":"PullRequestEvent","CreatedAt":"2018-11-23T18:02:56","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6609","RelatedDescription":"Merged pull request \"Implement new math helpers\" (#6609) at dotnet/corert","RelatedBody":"Fixes #6577."},{"Id":"8639278982","Type":"IssuesEvent","CreatedAt":"2018-11-23T18:02:56","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6577","RelatedDescription":"Closed issue \"Update the native compiler to support the new math functions\" (#6577) at dotnet/corert","RelatedBody":"https://github.com/dotnet/coreclr/pull/20788 added some new functions to `System.Math` and `System.MathF`, we should update the CoreRT native compiler to support these new methods."},{"Id":"8638828916","Type":"IssuesEvent","CreatedAt":"2018-11-23T16:04:44","Actor":"JaggerJo","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6384","RelatedDescription":"Closed issue \"UWP - .Net Native - \" (#6384) at dotnet/corert","RelatedBody":"# Problem\r\nWhen compiling in release mode with the .net native toolchain (which I think is required for publishing to the store) the application throws the following exception:\r\n\r\n`\r\nSystem.IO.FileNotFoundException: 'The system cannot find the file specified. (Exception from HRESULT: 0x80070002)'\r\n`\r\n\r\nhere is the stack trace, I think it could origin from the \"CanRestoreSessionState\" but I am not sure.\r\n\r\n![image](https://user-images.githubusercontent.com/13090415/46176585-3f7d2980-c2b0-11e8-86b8-671f552364a7.png)\r\n\r\nIf I compile the code in Debug mode or disable \"compile with .net native toolchain\" in Release mode everything works as expected.\r\n\r\n**Default.rd.xml**\r\n`\r\n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">\r\n  <Application>\r\n    <Assembly Name=\"*Application*\" Dynamic=\"Required All\" />\r\n  </Application>\r\n</Directives>\r\n`\r\n\r\n# Configuration\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.3\r\nVisualStudio.15.Release/15.8.3+28010.2019\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\n"},{"Id":"8638225677","Type":"PullRequestEvent","CreatedAt":"2018-11-23T14:04:10","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6609","RelatedDescription":"Opened pull request \"Implement new math helpers\" (#6609) at dotnet/corert","RelatedBody":"Fixes #6577."},{"Id":"8637959989","Type":"PullRequestEvent","CreatedAt":"2018-11-23T13:10:32","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6607","RelatedDescription":"Merged pull request \"Add two xunit packages to runtime.depproj to unblock about 90 tests\" (#6607) at dotnet/corert","RelatedBody":"This change adds the packages \"xunit.core\" and \"xunit.performance.core\"\r\nrequired by some CoreCLR tests to external test dependencies. I have\r\ncopied the clauses from external.depproj in CoreCLR and their versions\r\nfrom dependency.props. This change reduces the number of failures from\r\n346 to 254.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8637332628","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:53:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6606","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#6606) at dotnet/corert","RelatedBody":"Picks up dotnet/coreclr#21163. Fixes #6601."},{"Id":"8637332615","Type":"IssuesEvent","CreatedAt":"2018-11-23T10:53:29","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6601","RelatedDescription":"Closed issue \"Report CORINFO_FIELD_INTRINSIC_EMPTY_STRING to RyuJIT\" (#6601) at dotnet/corert","RelatedBody":"We are not reporting `CORINFO_FIELD_INTRINSIC_EMPTY_STRING` to RyuJIT because it's hitting what appears to be a RyuJIT bug in late devirtualization (see assert in the jitdump). Likely because our string literals are different than string literals RyuJIT normally sees in CoreCLR.\r\n\r\nTo repro, uncomment the line in CorInfoImpl.cs that references this issue and build a multimodule release System.Private.CoreLib.\r\n\r\n[jitdump.txt](https://github.com/dotnet/corert/files/2604999/jitdump.txt)\r\n"},{"Id":"8637331485","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:53:16","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6608","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#6608) at dotnet/corert","RelatedBody":""},{"Id":"8637330646","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:53:07","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6608","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#6608) at dotnet/corert","RelatedBody":""},{"Id":"8636904067","Type":"PullRequestEvent","CreatedAt":"2018-11-23T09:27:52","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6607","RelatedDescription":"Opened pull request \"Add two xunit packages to runtime.depproj to unblock about 90 tests\" (#6607) at dotnet/corert","RelatedBody":"This change adds the packages \"xunit.core\" and \"xunit.performance.core\"\r\nrequired by some CoreCLR tests to external test dependencies. I have\r\ncopied the clauses from external.depproj in CoreCLR and their versions\r\nfrom dependency.props. This change reduces the number of failures from\r\n346 to 254.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8636801403","Type":"PullRequestEvent","CreatedAt":"2018-11-23T09:05:39","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6606","RelatedDescription":"Opened pull request \"Update RyuJIT\" (#6606) at dotnet/corert","RelatedBody":"Picks up dotnet/coreclr#21163. Fixes #6601."},{"Id":"8635389234","Type":"PullRequestEvent","CreatedAt":"2018-11-22T22:23:09","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6605","RelatedDescription":"Merged pull request \"Typos\" (#6605) at dotnet/corert","RelatedBody":""},{"Id":"8635098871","Type":"PullRequestEvent","CreatedAt":"2018-11-22T20:18:20","Actor":"github-john-doe","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6605","RelatedDescription":"Opened pull request \"Typos\" (#6605) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8639669177","Type":"IssuesEvent","CreatedAt":"2018-11-23T20:38:25","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2690","RelatedDescription":"Closed issue \"SDK 2.1.500 fails to set IsTestProject in net40 projects\" (#2690) at dotnet/sdk","RelatedBody":"Here's a full repro: [DotnetTestBug.zip](https://github.com/Microsoft/vstest/files/2608701/DotnetTestBug.zip)\r\n\r\nProjects like this worked in all SDKs up to 2.1.500 because Microsoft.NET.Test.Sdk sets `<IsTestProject>true</IsTestProject>`:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <!-- This works in all SDK versions until 2.1.500: -->\r\n    <TargetFramework>net40</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"NUnit\" Version=\"3.11.0\" />\r\n    <PackageReference Include=\"NUnit3TestAdapter\" Version=\"3.11.0\" />\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"15.9.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nE.g. using SDK 2.1.403, you get this output for `dotnet test`:\r\n\r\n```\r\nTest run for C:\\Users\\Joseph\\Desktop\\DotnetTestBug\\Using SDK 2.1.403\\bin\\Debug\\net40\\TestProject1.dll(.NETFramework,Version=v4.0)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.8.0\r\n...\r\nTest Run Successful.\r\n```\r\n\r\nStarting with SDK 2.1.500, `<IsTestProject>true</IsTestProject>` is no longer set. `dotnet test` gives:\r\n\r\n```\r\nSkipping running test for project C:\\Users\\Joseph\\Desktop\\DotnetTestBug\\Using SDK 2.1.500\\TestProject1.csproj. To run tests with dotnet test add \"\\<IsTestProject>true\\<IsTestProject>\" property to project file.\r\n```\r\n\r\nNote that the same `<PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"15.9.0\" />` is used in both cases.\r\nWasn't sure if this belonged here or at https://github.com/Microsoft/vstest/issues.\r\n\r\n### Issues\r\n\r\n- Is it your intention to require test projects which include a `net40` target to have to manually include `<IsTestProject>true</IsTestProject>` directly in the test csproj? Why isn't this the case for `net45`, since VSTest 15.9 supports `net40` and `net45` equally?\r\n\r\n- > To run tests with dotnet test add \"\\<IsTestProject>true\\<IsTestProject>\"\r\n  \r\n  This is invalid XML. Second tag should be a closing tag: \\<IsTestProject>true\\</IsTestProject>\r\n"},{"Id":"8639661831","Type":"PullRequestEvent","CreatedAt":"2018-11-23T20:35:03","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2689","RelatedDescription":"Merged pull request \"Update dependency files\" (#2689) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1064967345070882817","CreatedAt":"2018-11-20T19:42:55+00:00","UserScreenname":"dotnet","Text":"Find out what's new in F# 4.5 from Phillip Carter (@_cartermp) in this episode of the #OnDotNet show.\n\nhttps://t.co/B5Q1Xt828F","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":65,"FavoriteCount":34,"RawContent":null},{"Id":"1062754536018898946","CreatedAt":"2018-11-14T17:10:01+00:00","UserScreenname":"dotnet","Text":"Hear the latest and greatest on the future of .NET and check out demos of #dotNET Core . You'll also get a chance t… https://t.co/yskyvl0xjt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":78,"FavoriteCount":40,"RawContent":null}]}},"RunOn":"2018-11-24T05:30:28.0683115Z","RunDurationInMilliseconds":7052}