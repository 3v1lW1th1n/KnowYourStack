{"Data":{"GitHub":{"Issues":[{"Id":"518949547","IsPullRequest":true,"CreatedAt":"2019-11-07T04:38:51","Actor":"hughbe","Number":"2307","RawContent":null,"Title":"Structify CONTROLINFO","State":"closed","Body":"## Proposed Changes\r\n- Structify CONTROLINFO\r\n- Make CTRLINFO_ constants into enum\r\n- Cleanup IOleControl interface\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2307)","Url":"https://github.com/dotnet/winforms/pull/2307","RelatedDescription":"Closed or merged PR \"Structify CONTROLINFO\" (#2307)"},{"Id":"518952542","IsPullRequest":true,"CreatedAt":"2019-11-06T23:39:16","Actor":"hughbe","Number":"2309","RawContent":null,"Title":"Cleanup GetDCEx interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup GetDCEx interop\r\n- Cleanup DCX_ constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2309)","Url":"https://github.com/dotnet/winforms/pull/2309","RelatedDescription":"Open PR \"Cleanup GetDCEx interop\" (#2309)"},{"Id":"518951894","IsPullRequest":true,"CreatedAt":"2019-11-06T23:37:17","Actor":"vladimir-krestov","Number":"2308","RawContent":null,"Title":"WIP: Porting FormatStringEditor ","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2281\r\nRelated issue #1115 \r\nRelated PR #2287\r\n\r\n\r\n## Proposed changes\r\n\r\n- Port FormatStringEditor \r\n- Make code refactoring\r\n- Add TypeForwardedTo statement for FormatStringEditor \r\n- Add unit tests cases\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Changed FormatStringEditor editor to compliance with .Net 4.8.\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/68347243-5fb02680-0107-11ea-96cb-a6f6e88f839c.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/49272759/68347102-fd572600-0106-11ea-8e02-a512a3f6873e.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n- CTI\r\n- Unit testing\r\n\r\n <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net Core version: 3.1.0-preview3.19553.2\r\n- Microsoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2308)","Url":"https://github.com/dotnet/winforms/pull/2308","RelatedDescription":"Open PR \"WIP: Porting FormatStringEditor \" (#2308)"},{"Id":"518457490","IsPullRequest":true,"CreatedAt":"2019-11-06T23:00:08","Actor":"dotnet-maestro[bot]","Number":"2295","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191105.7\r\n- **Date Produced**: 11/6/2019 2:04 AM\r\n- **Commit**: 82c69e4d687077689fae4826e755ff5bf296c9c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19555.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19555.7\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19555.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19555.7\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2295)","Url":"https://github.com/dotnet/winforms/pull/2295","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2295)"},{"Id":"518703000","IsPullRequest":true,"CreatedAt":"2019-11-06T20:02:52","Actor":"vladimir-krestov","Number":"2306","RawContent":null,"Title":"WIP: Porting HelpNamespaceEditor","State":"open","Body":"Fixes issue #2283\r\nRelated issue #1115\r\n\r\n## Proposed changes\r\n\r\n- Port `HelpNamespaceEditor`\r\n- Add `TypeForwardedTo` statement for `HelpNamespaceEditor`\r\n- Make code refactoring\r\n- Add a unit test case to check HelpNamespaceEditor\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Changed HelpNamespace editor to compliance with .Net 4.8.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/68332719-55326480-00e8-11ea-8a8a-8f3cef73df5c.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/49272759/68332732-5a8faf00-00e8-11ea-887e-766167abad8f.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n- CTI\r\n- Unit testing\r\n\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net Core version: 3.1.0-preview3.19553.2\r\n- Microsoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2306)","Url":"https://github.com/dotnet/winforms/pull/2306","RelatedDescription":"Open PR \"WIP: Porting HelpNamespaceEditor\" (#2306)"},{"Id":"518696765","IsPullRequest":true,"CreatedAt":"2019-11-06T19:50:24","Actor":"vladimir-krestov","Number":"2305","RawContent":null,"Title":"WIP: Porting SelectedPathEditor","State":"open","Body":"Fixes issue #2282\r\nRelated issue #1115\r\n\r\n## Proposed changes\r\n\r\n- Port `SelectedPathEditor`\r\n- Add **`TypeForwardedTo`** statement for `SelectedPathEditor`\r\n- Make code refactoring\r\n- Add a unit test case to check SelectedPathEditor\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Changed SelectedPath editor to compliance with .Net 4.8.\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/68331673-6ed2ac80-00e6-11ea-8efa-acb6f1af164d.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/49272759/68331406-fcfa6300-00e5-11ea-811f-d2b26f1035cd.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n- CTI\r\n- Unit testing\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net Core version: 3.1.0-preview3.19553.2\r\n- Microsoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2305)","Url":"https://github.com/dotnet/winforms/pull/2305","RelatedDescription":"Open PR \"WIP: Porting SelectedPathEditor\" (#2305)"},{"Id":"518668776","IsPullRequest":true,"CreatedAt":"2019-11-06T18:55:55","Actor":"hughbe","Number":"2304","RawContent":null,"Title":"Cleanup PostMessage interop","State":"open","Body":"Has to be `HandleRef` not `IHandle` as this is used e.g. in `System.Windows.Forms.Design` and `System.Windows.Forms.Design.Editors`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2304)","Url":"https://github.com/dotnet/winforms/pull/2304","RelatedDescription":"Open PR \"Cleanup PostMessage interop\" (#2304)"},{"Id":"518660521","IsPullRequest":true,"CreatedAt":"2019-11-06T18:40:41","Actor":"hughbe","Number":"2303","RawContent":null,"Title":"Cleanup MapWindowPoints interop","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2303)","Url":"https://github.com/dotnet/winforms/pull/2303","RelatedDescription":"Open PR \"Cleanup MapWindowPoints interop\" (#2303)"},{"Id":"518653554","IsPullRequest":true,"CreatedAt":"2019-11-06T18:29:11","Actor":"hughbe","Number":"2302","RawContent":null,"Title":"Consolidate IsWindowUnicode interop","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2302)","Url":"https://github.com/dotnet/winforms/pull/2302","RelatedDescription":"Open PR \"Consolidate IsWindowUnicode interop\" (#2302)"},{"Id":"518650738","IsPullRequest":true,"CreatedAt":"2019-11-06T18:24:40","Actor":"hughbe","Number":"2301","RawContent":null,"Title":"Cleanup PBS and PBM constants","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2301)","Url":"https://github.com/dotnet/winforms/pull/2301","RelatedDescription":"Open PR \"Cleanup PBS and PBM constants\" (#2301)"},{"Id":"518650453","IsPullRequest":false,"CreatedAt":"2019-11-06T18:24:10","Actor":"hughbe","Number":"2300","RawContent":null,"Title":"Standardise between User32.SendMessageW(this, ...) and this.SendMessage(...)","State":"open","Body":"There are multiple different ways of sending a message to a control:\r\n```\r\n                SendMessage((int)ComCtl32.PBM.SETRANGE32, _minimum, _maximum);\r\n                SendMessage((int)ComCtl32.PBM.SETSTEP, _step, 0);\r\n                SendMessage((int)ComCtl32.PBM.SETPOS, _value, 0);\r\n                User32.SendMessageW(this, (User32.WindowMessage)ComCtl32.PBM.SETBKCOLOR, IntPtr.Zero, (IntPtr)ColorTranslator.ToWin32(BackColor));\r\n                User32.SendMessageW(this, (User32.WindowMessage)ComCtl32.PBM.SETBARCOLOR, IntPtr.Zero, (IntPtr)ColorTranslator.ToWin32(ForeColor));\r\n```\r\n\r\nThese two (`User32.SendMessageW` and `SendMessage`) are functionally the same but we're not consistent in how we use them\r\n\r\nWhat should we standardise on?\r\n/cc @JeremyKuhne ","Url":"https://github.com/dotnet/winforms/issues/2300","RelatedDescription":"Open issue \"Standardise between User32.SendMessageW(this, ...) and this.SendMessage(...)\" (#2300)"},{"Id":"518604277","IsPullRequest":true,"CreatedAt":"2019-11-06T16:59:44","Actor":"hughbe","Number":"2299","RawContent":null,"Title":"Cleanup CCM and TCM constants","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2299)","Url":"https://github.com/dotnet/winforms/pull/2299","RelatedDescription":"Open PR \"Cleanup CCM and TCM constants\" (#2299)"},{"Id":"518576131","IsPullRequest":true,"CreatedAt":"2019-11-06T16:14:49","Actor":"M-Lipin","Number":"2298","RawContent":null,"Title":"Porting LinkAreaEditor","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2284 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Porting LinkAreaEditor;\r\n- Porting LinkAreaEditor resources.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Users will be able to edit LinkArea (LinkLabel property) via LinkAreaEditor\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/68315733-45efee80-00c9-11ea-9fc7-7b687845e8c0.png)\r\n\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/68315887-8cdde400-00c9-11ea-8862-106f238a25e7.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- Automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\n.NET Core SDKs installed:\r\n3.1.100-preview3-014642 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2298)","Url":"https://github.com/dotnet/winforms/pull/2298","RelatedDescription":"Open PR \"Porting LinkAreaEditor\" (#2298)"},{"Id":"518486182","IsPullRequest":true,"CreatedAt":"2019-11-06T13:52:53","Actor":"M-Lipin","Number":"2297","RawContent":null,"Title":"UI Type Editors: Porting MaskedTextBoxTextEditor and MaskPropertyEditor","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2285 \r\nFixes #2286 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding MaskTextBoxTextEditor, MaskPropertyEditor and related entitity definitions to System.Windows.Forms.Design project.\r\n- Adding required resources.\r\n- Updating System.Design façade to allow using ported editors.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Users will be able to use MaskTextBoxTextEditor with MaskedTextBox control and MaskPropertyEditor with Mask property of the MaskTextBox.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\nOnly simple text edit is available.\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/68303755-8a718f00-00b5-11ea-9078-c51745f5e411.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- UI automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview3-014642 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2297)","Url":"https://github.com/dotnet/winforms/pull/2297","RelatedDescription":"Open PR \"UI Type Editors: Porting MaskedTextBoxTextEditor and MaskPropertyEditor\" (#2297)"},{"Id":"518473549","IsPullRequest":true,"CreatedAt":"2019-11-06T13:31:45","Actor":"hughbe","Number":"2296","RawContent":null,"Title":"Cleanup LVIF constants","State":"open","Body":"## Proposed Changes\r\n- Cleanup LVIF_ constants\r\n- Remove LVITEM.Reset\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2296)","Url":"https://github.com/dotnet/winforms/pull/2296","RelatedDescription":"Open PR \"Cleanup LVIF constants\" (#2296)"},{"Id":"518379071","IsPullRequest":true,"CreatedAt":"2019-11-06T10:27:36","Actor":"hughbe","Number":"2294","RawContent":null,"Title":"Remove SYSTEMTIMEARRAY","State":"open","Body":"## Proposed Changes\r\n- Use Span<SYSTEMTIME>\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2294)","Url":"https://github.com/dotnet/winforms/pull/2294","RelatedDescription":"Open PR \"Remove SYSTEMTIMEARRAY\" (#2294)"},{"Id":"518321913","IsPullRequest":true,"CreatedAt":"2019-11-06T08:42:26","Actor":"Amy-Li02","Number":"2293","RawContent":null,"Title":"Add the case MauiLabelTests","State":"open","Body":"Porting a Winforms Maui test **MauiLabelTests** to xUnit\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2293)","Url":"https://github.com/dotnet/winforms/pull/2293","RelatedDescription":"Open PR \"Add the case MauiLabelTests\" (#2293)"},{"Id":"517932448","IsPullRequest":false,"CreatedAt":"2019-11-05T17:52:40","Actor":"SaravananAyyanar","Number":"2292","RawContent":null,"Title":"ForeignKey constraint impropered performing when added the data in relatedview with DataRelation","State":"open","Body":"**Problem description:**\r\n1.\"ForeignKeyConstraint Employee requires the child key values () to exist in the parent table \" exception thrown when given the value is not equal foreignkey. (Refer the attached screenshot1)\r\n2.Exception not thrown when given the value is equal foreignKey and also added the data correctly in relatedview.\r\n3.Exception not thrown when given the value is null for foreign key and also not added the data in relatedview.\r\n(Refer the screenshot2)\r\nCan you please given the proper solution for it(3rd point).\r\n\r\n**Coding:**      \r\n\r\n```cs\r\n         DataTable employeeCollection = new DataTable();\r\n\r\n        DataTable employeeCollection1 = new DataTable();\r\n        DataSet ds = new DataSet();\r\n        DataTable dataTable;\r\n\r\n         dataTable = this.GetDataTable();\r\n\r\n\t public DataTable GetDataTable()\r\n           {\r\n            employeeCollection.Columns.Add(\"EmployeeID\", typeof(int));            \r\n            employeeCollection.Columns.Add(\"EmployeeName\", typeof(string));\r\n            employeeCollection.Columns[\"EmployeeName\"].ColumnName = \"Employee Name\";\r\n            employeeCollection.Columns.Add(\"CustomerID\", typeof(string));\r\n            employeeCollection.Columns[\"CustomerID\"].ColumnName = \"Customer ID\";\r\n            employeeCollection.Columns.Add(\"Country\", typeof(string));\r\n            employeeCollection.Columns.Add(\"Date\", typeof(DateTime));\r\n\r\n            employeeCollection.Rows.Add(1001, \"Belgim\", \"Yhgtr\", \"US\", new DateTime(2019, 10, 15));\r\n            employeeCollection.Rows.Add(1002, \"Oliver\", \"Johanesberg\", \"UK\", new DateTime(2018, 11, 29));            \r\n            employeeCollection.Rows.Add(1004, \"James\", \"Yhgtr\", \"Chicago\", new DateTime(2016, 5, 13));\r\n            employeeCollection.Rows.Add(1005, \"Beverton\", \"Bergs\", \"Spain\", new DateTime(2015, 6, 29));                        \r\n            employeeCollection.Rows.Add(1009, \"Dintin\", \"Britain\", \"Britain\", new DateTime(2014, 3, 10));            \r\n            employeeCollection.Rows.Add(1010, \"Joysie\", \"Oregon\", \"China\", new DateTime(2012, 11, 11));            \r\n            employeeCollection.Rows.Add(1017, \"George\", \"Oregon\", \"SwitzerLand\", new DateTime(2017, 7, 17));\r\n            \r\n\r\n            employeeCollection1.Columns.Add(\"EmployeeID\", typeof(int));            \r\n            employeeCollection1.Columns.Add(\"Country\", typeof(string));\r\n            employeeCollection1.Columns.Add(\"Date\", typeof(DateTime));\r\n\r\n            employeeCollection1.Rows.Add(1001,\"US\", new DateTime(2019, 10, 15));\r\n            employeeCollection1.Rows.Add(1002,\"UK\", new DateTime(2018, 11, 29));\r\n            employeeCollection1.Rows.Add(1004,\"Chicago\", new DateTime(2016, 5, 13));\r\n            employeeCollection1.Rows.Add(1005,\"Spain\", new DateTime(2015, 6, 29));\r\n            employeeCollection1.Rows.Add(1009,\"Britain\", new DateTime(2014, 3, 10));\r\n            employeeCollection1.Rows.Add(1010,\"China\", new DateTime(2012, 11, 11));\r\n            employeeCollection1.Rows.Add(1017,\"SwitzerLand\", new DateTime(2017, 7, 17));\r\n\r\n            ds.Tables.Add(employeeCollection);\r\n            ds.Tables.Add(employeeCollection1);\r\n\r\n            ds.Relations.Add(new DataRelation(\"Employee\", ds.Tables[0].Columns[\"Country\"],   ds.Tables[1].Columns[\"Country\"]));\r\n  return ds.Tables[0];\r\n}\r\n\r\n private void button1_Click(object sender, EventArgs e)\r\n  {\r\n            DataTable parentDataTable = dataTable;\r\n            \r\n            DataView relatedView = parentDataTable.DefaultView[0][\"Employee\"] as DataView;\r\n\r\n            System.Data.DataRow dataRow = relatedView.Table.NewRow();\r\n            dataRow[\"EmployeeID\"] = 101;\r\n            dataRow[\"Country\"] = null;\r\n            relatedView.Table.Rows.Add(dataRow);            \r\n}\r\n```\r\n\r\n![screenshot1](https://user-images.githubusercontent.com/44993310/68232356-f2c36080-0022-11ea-8ba9-ba5fe83edd38.png)\r\n\r\n![screenshot1](https://user-images.githubusercontent.com/44993310/68232385-fc4cc880-0022-11ea-9ddb-f9e2a47dd0a1.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/2292","RelatedDescription":"Open issue \"ForeignKey constraint impropered performing when added the data in relatedview with DataRelation\" (#2292)"},{"Id":"517929335","IsPullRequest":true,"CreatedAt":"2019-11-05T17:47:47","Actor":"gpetrou","Number":"2291","RawContent":null,"Title":"Add IHandle and HandleRef overloads to GetWindow","State":"open","Body":"## Proposed changes\r\n\r\n- Add IHandle/HandleRef overloads to GetWindow.\r\n- Based on similar feedback on https://github.com/dotnet/winforms/pull/2277\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2291)","Url":"https://github.com/dotnet/winforms/pull/2291","RelatedDescription":"Open PR \"Add IHandle and HandleRef overloads to GetWindow\" (#2291)"},{"Id":"517803513","IsPullRequest":false,"CreatedAt":"2019-11-05T14:22:33","Actor":"hughbe","Number":"2290","RawContent":null,"Title":"Can we have something like [HighContrastFact]","State":"open","Body":"I want to test some behaviour on high contrast devices. We should have some sort of `Fact` attribute that makes the test/thread high contrast\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2290","RelatedDescription":"Open issue \"Can we have something like [HighContrastFact]\" (#2290)"},{"Id":"517759704","IsPullRequest":true,"CreatedAt":"2019-11-05T13:54:43","Actor":"dotnet-maestro[bot]","Number":"2289","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191104.3\r\n- **Date Produced**: 11/4/2019 10:32 PM\r\n- **Commit**: ec6a0344dd2b1237cd63b38281295ce1e4b71458\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19554.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19554.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19554.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19554.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2289)","Url":"https://github.com/dotnet/winforms/pull/2289","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2289)"},{"Id":"517742448","IsPullRequest":true,"CreatedAt":"2019-11-05T12:27:08","Actor":"RussKie","Number":"2288","RawContent":null,"Title":"Porting several outstanding `UITypeEditor`s","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nContributes to #1115\r\n\r\n\r\n## Proposed changes\r\n\r\n- Porting several outstanding `UITypeEditor`s\r\n\t* `ImageIndexEditor` (Closes #2115)\r\n\t* `IconEditor` (Closes #2020)\r\n\t* `TabPageCollectionEditor` (Closes #1281)\r\n\t* `ContentAlignmentEditor` (Closes #2018)\r\n\t* `ListControlStringCollectionEditor` (Closes #1271)\r\n\t* `BinaryEditor` (Closes #2017)\r\n\t* `DateTimeEditor`  (Closes #2019)\r\n\t* `ListViewSubItemCollectionEditor` (Closes #1277)\r\n\t* `ListViewGroupCollectionEditor` (Closes #1275)\r\n\t* `ListViewItemCollectionEditor` (Closes #1276)\r\n- Add test scaffolds for UITypeEditors\r\n\t* Add editors we missed to the table of intrinsic editors\r\n\t* Add positive ack test for editors associated in the table\r\n\t* Add entries in test for editors only attached with editor attribute\r\n\t* Add editor type to editor test and create basic test for properties\r\n\t* Add stubs for all known editors requiring porting\r\n- Partially revert \"Porting DataMemberFieldConverter\"  f477b2a\r\nWhilst we do not support nor cant be expected to support customers who reference our internals, in some scenarios like `UITypeEditor`s and `TypeConverter`s may still be used by consumers to enhance their runtime experience.\r\nE.g. https://github.com/dotnet/winforms/pull/2078#discussion_r337777751\r\nType forward `DataMemberFieldConverter` to avoid breaking existing customers.\r\n\r\nRelates to #1545\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers should have access to more UITypeEditors at runtime if they use `PropertyGrid` control. \r\nNB: The VS Desginer has its own set of editors.\r\n\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual\r\n- CTI \r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2288)","Url":"https://github.com/dotnet/winforms/pull/2288","RelatedDescription":"Open PR \"Porting several outstanding `UITypeEditor`s\" (#2288)"},{"Id":"517508097","IsPullRequest":true,"CreatedAt":"2019-11-05T06:19:45","Actor":"Zheng-Li01","Number":"2280","RawContent":null,"Title":"Adding the Core RT cases","State":"closed","Body":"Hi @AdamYoblick , @RussKie. Winforms CTI Team try to add some Core RT cases to the dotnet/winfoms repro, please have a review and give some guidance if there have something wrong.\r\n\r\nThanks\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2280)","Url":"https://github.com/dotnet/winforms/pull/2280","RelatedDescription":"Closed or merged PR \"Adding the Core RT cases\" (#2280)"},{"Id":"517545712","IsPullRequest":true,"CreatedAt":"2019-11-05T04:46:02","Actor":"JuditRose","Number":"2287","RawContent":null,"Title":"Port FormatString Editor WIP","State":"open","Body":"Fixes #2281\r\nContributes to #1115 \r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2287)","Url":"https://github.com/dotnet/winforms/pull/2287","RelatedDescription":"Open PR \"Port FormatString Editor WIP\" (#2287)"},{"Id":"517544395","IsPullRequest":false,"CreatedAt":"2019-11-05T04:39:59","Actor":"JuditRose","Number":"2286","RawContent":null,"Title":"Port MaskedTextBoxTextEditor","State":"open","Body":"Porting the missing UITypeEditors\r\nRelated to #1115\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2286","RelatedDescription":"Open issue \"Port MaskedTextBoxTextEditor\" (#2286)"},{"Id":"517544295","IsPullRequest":false,"CreatedAt":"2019-11-05T04:39:33","Actor":"JuditRose","Number":"2285","RawContent":null,"Title":"Port MaskPropertyEditor","State":"open","Body":"Porting the missing UITypeEditors\r\nRelated to #1115\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2285","RelatedDescription":"Open issue \"Port MaskPropertyEditor\" (#2285)"},{"Id":"517544159","IsPullRequest":false,"CreatedAt":"2019-11-05T04:38:51","Actor":"JuditRose","Number":"2284","RawContent":null,"Title":"Port LinkAreaEditor","State":"open","Body":"Porting the missing UITypeEditors\r\nRelated to #1115","Url":"https://github.com/dotnet/winforms/issues/2284","RelatedDescription":"Open issue \"Port LinkAreaEditor\" (#2284)"},{"Id":"517543930","IsPullRequest":false,"CreatedAt":"2019-11-05T04:37:46","Actor":"JuditRose","Number":"2283","RawContent":null,"Title":"Port HelpNamespaceEditor","State":"open","Body":"Porting the missing UITypeEditors\r\nRelated to #1115 \r\n","Url":"https://github.com/dotnet/winforms/issues/2283","RelatedDescription":"Open issue \"Port HelpNamespaceEditor\" (#2283)"},{"Id":"517543633","IsPullRequest":false,"CreatedAt":"2019-11-05T04:36:25","Actor":"JuditRose","Number":"2282","RawContent":null,"Title":"Port  SelectedPathEditor","State":"open","Body":"Porting the missing UITypeEditors  \r\nRelated to #1115 \r\n","Url":"https://github.com/dotnet/winforms/issues/2282","RelatedDescription":"Open issue \"Port  SelectedPathEditor\" (#2282)"},{"Id":"517543458","IsPullRequest":false,"CreatedAt":"2019-11-05T04:35:34","Actor":"JuditRose","Number":"2281","RawContent":null,"Title":"Port FormatStringEditor","State":"open","Body":"Porting the missing UITypeEditors  \r\nRelated to #1115 \r\n","Url":"https://github.com/dotnet/winforms/issues/2281","RelatedDescription":"Open issue \"Port FormatStringEditor\" (#2281)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-11-07T05:30:58.3350329Z","RunDurationInMilliseconds":909}