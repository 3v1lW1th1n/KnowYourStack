{"Data":{"GitHub":{"Issues":[{"Id":"519594624","IsPullRequest":false,"CreatedAt":"2019-11-08T00:46:34","Actor":"benquan","Number":"4459","RawContent":null,"Title":"pipeline fails to load when I convert my project to a class","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWIN10\r\n\r\n- **.NET Version (eg., dotnet --info)**: \r\nML.NET 1.4.0\r\nFramework 4.7.2\r\n\r\n### Issue\r\nI have a full working console application using the framework. All access to ML.NET is in a separate class and I simply call on it. When I try to convert the project to a class DLL it starts showing: \"System.IO.FileNotFoundException: Could not load file or assembly 'System.Drawing.Common\".\r\n\r\n- **What did you do?**\r\nTry to convert to class DLL\r\n\r\n\r\n- **What happened?**\r\n\"System.IO.FileNotFoundException: Could not load file or assembly 'System.Drawing.Common\". Error\r\n\r\n- **What did you expect?**\r\nshould work as the normal program.\r\n\r\n\r\n### Source code / logs\r\n\r\n`\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.Drawing.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'System.Drawing.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n   at Microsoft.ML.Transforms.Image.ImageDataViewType..ctor(Int32 height, Int32 width)\r\n   at Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions..ctor(String name, Int32 imageWidth, Int32 imageHeight, String inputColumnName, ResizingKind resizing, Anchor anchor)\r\n   at Microsoft.ML.ImageEstimatorsCatalog.ResizeImages(TransformsCatalog catalog, String outputColumnName, Int32 imageWidth, Int32 imageHeight, String inputColumnName, ResizingKind resizing, Anchor cropAnchor)\r\n   at MLQuickID.TFModelScorer.LoadModel(String tsvFile, String inceptionPb) in \\\\Mac\\Home\\Downloads\\QuickID-winforms-test4\\QuickID-winforms-test2\\TFModelScorer.cs:line 67\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = System.Drawing.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\n (Fully-specified)\r\nLOG: Appbase = file://Mac/Home/Downloads/QuickID-winforms-test4/client/bin/x64/Debug/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : Microsoft.ML.ImageAnalytics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51.\r\n\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: \\\\Mac\\Home\\Downloads\\QuickID-winforms-test4\\client\\bin\\x64\\Debug\\client.exe.Config\r\nLOG: Using host configuration file: \r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: System.Drawing.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nLOG: Attempting download of new URL file://Mac/Home/Downloads/QuickID-winforms-test4/client/bin/x64/Debug/System.Drawing.Common.DLL.\r\nLOG: Attempting download of new URL file://Mac/Home/Downloads/QuickID-winforms-test4/client/bin/x64/Debug/System.Drawing.Common/System.Drawing.Common.DLL.\r\nLOG: Attempting download of new URL file://Mac/Home/Downloads/QuickID-winforms-test4/client/bin/x64/Debug/System.Drawing.Common.EXE.\r\nLOG: Attempting download of new URL file://Mac/Home/Downloads/QuickID-winforms-test4/client/bin/x64/Debug/System.Drawing.Common/System.Drawing.Common.EXE.\r\n`\r\n\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4459","RelatedDescription":"Open issue \"pipeline fails to load when I convert my project to a class\" (#4459)"},{"Id":"519580553","IsPullRequest":true,"CreatedAt":"2019-11-07T23:57:30","Actor":"eerhardt","Number":"4458","RawContent":null,"Title":"Fix a flaky Extensions.ML test.","State":"open","Body":"Make the reload model tests more resistant to timing changes.","Url":"https://github.com/dotnet/machinelearning/pull/4458","RelatedDescription":"Open PR \"Fix a flaky Extensions.ML test.\" (#4458)"},{"Id":"519537667","IsPullRequest":true,"CreatedAt":"2019-11-07T21:59:56","Actor":"harshithapv","Number":"4457","RawContent":null,"Title":"Retro-fitted changes made to the ML docs repo into ML.NET","State":"open","Body":"Retro-fitted changes made to the ML docs repository into ML.NET.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4457","RelatedDescription":"Open PR \"Retro-fitted changes made to the ML docs repo into ML.NET\" (#4457)"},{"Id":"519536274","IsPullRequest":true,"CreatedAt":"2019-11-07T21:56:46","Actor":"ashbhandare","Number":"4456","RawContent":null,"Title":"Reduce time taken for first prediction, Fixes #4428","State":"open","Body":"Fixes #4428 \r\nAs reported in the issue, the first prediction takes a lot longer than the subsequent predictions.\r\nThis is due to the tensorflow initialization/graph optimizations happenning on at the time of the first prediction. \r\nIn order to mask the time within the PredictionEngine creation, this change runs the prediction \r\n on the tensorflow graph with a dummy tensor of the same size as an Imagenet image, of zeros. \r\n","Url":"https://github.com/dotnet/machinelearning/pull/4456","RelatedDescription":"Open PR \"Reduce time taken for first prediction, Fixes #4428\" (#4456)"},{"Id":"519399770","IsPullRequest":true,"CreatedAt":"2019-11-07T19:34:29","Actor":"codemzs","Number":"4453","RawContent":null,"Title":"Increment stable API version and add new stable packages to the list.","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4453","RelatedDescription":"Closed or merged PR \"Increment stable API version and add new stable packages to the list.\" (#4453)"},{"Id":"519424587","IsPullRequest":true,"CreatedAt":"2019-11-07T18:00:36","Actor":"harishsk","Number":"4455","RawContent":null,"Title":"Added onnx export support for KeyToValueMappingTransformer","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4455","RelatedDescription":"Open PR \"Added onnx export support for KeyToValueMappingTransformer\" (#4455)"},{"Id":"519420715","IsPullRequest":true,"CreatedAt":"2019-11-07T17:52:52","Actor":"harishsk","Number":"4454","RawContent":null,"Title":"Added onnx export support for OptionalColumnTransform ","State":"open","Body":"Optional columns in ML.NET are supported through initializers in Onnx runtime, support for which was added in the v1 release of ORT. This PR adds support for integrating initializers in ML.NET and adding the corresponding OptionalColumnTransform support in ML.NET.","Url":"https://github.com/dotnet/machinelearning/pull/4454","RelatedDescription":"Open PR \"Added onnx export support for OptionalColumnTransform \" (#4454)"},{"Id":"519021863","IsPullRequest":false,"CreatedAt":"2019-11-07T03:57:22","Actor":"luisquintanilla","Number":"4452","RawContent":null,"Title":"[Image Classification API] Bottleneck phase values always computed","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 2.1\r\n- **ML.NET Version (eg., dotnet --info)**: 1.4.0\r\n\r\n### Issue\r\n\r\nSetting `ReuseTrainSetBottleneckCachedValues` and `ReuseValidationSetBottleneckCachedValues` parameters in `ImageClassificationTrainer.Options` to `true`, does the bottleneck computation on subsequent runs. I believe once the bottleneck values are computed on the first run, by setting both of those parameters to `true`, bottleneck computation should be skipped and the model should go directly into the training phase.  Is this no longer the case?\r\n\r\n### Source code / logs\r\n\r\nSee sample source code at this link: https://github.com/luisquintanilla/machinelearning-samples/blob/33f87d226f350fb36552dd8b1cee6a7c3f12da89/samples/csharp/getting-started/DeepLearning_ImageClassification_Binary/DeepLearning_ImageClassification_Binary/Program.cs#L53","Url":"https://github.com/dotnet/machinelearning/issues/4452","RelatedDescription":"Closed issue \"[Image Classification API] Bottleneck phase values always computed\" (#4452)"},{"Id":"518988708","IsPullRequest":true,"CreatedAt":"2019-11-07T01:41:13","Actor":"harishsk","Number":"4451","RawContent":null,"Title":"Added onnx export support for WordTokenizingTransformer and NgramExtractingTransformer","State":"open","Body":"PR contents:\r\n* Onnx export support for for WordTokenizingTransformer and NgramExtractingTransformer\r\n* Related bug fixes in ValueToKeyMappingTransformer\r\n* Bug fixes for string handling in OnnxUtils.cs\r\n* Related unit tests\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4451","RelatedDescription":"Open PR \"Added onnx export support for WordTokenizingTransformer and NgramExtractingTransformer\" (#4451)"},{"Id":"518978102","IsPullRequest":false,"CreatedAt":"2019-11-07T01:04:54","Actor":"LittleLittleCloud","Number":"4450","RawContent":null,"Title":"LightGBMMulticlass doesn't normalize its Score column","State":"open","Body":"when I try AutoML v0.16.0 multi-classification, sometimes I get prediction score <0, and the summation of all scores doesn't equal to 1. which is unexpected. Maybe some trainer's output doesn't normalize.\r\n\r\n![image](https://user-images.githubusercontent.com/16876986/68351051-2a7be800-00b7-11ea-97fc-2622dcc659e3.png)\r\n\r\nI publish a mini-reproducible project in this [repo](https://github.com/LittleLittleCloud/AutoMLMultiClassificationBug) for facilitating debug.","Url":"https://github.com/dotnet/machinelearning/issues/4450","RelatedDescription":"Open issue \"LightGBMMulticlass doesn't normalize its Score column\" (#4450)"},{"Id":"518968133","IsPullRequest":false,"CreatedAt":"2019-11-07T00:27:57","Actor":"benquan","Number":"4449","RawContent":null,"Title":"System.FormatException: Tensorflow exception triggered while loading model.","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWin10\r\n- **.NET Version (eg., dotnet --info)**: \r\n.net core\r\n\r\n### Issue\r\nI upgraded from ML.NET 1.3.1 to 1.4.0. Everything worked fine in 1.3.1 but after upgrading I get the following error:\r\n\r\n```\r\nSystem.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow' or one of its dependencies: The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.TensorflowCatalog.LoadTensorFlowModel(ModelOperationsCatalog catalog, String modelLocation)\r\n   at ImageClassification.ModelScorer.TFModelScorer.LoadModel(String dataLocation, String imagesFolder, String modelLocation) in \\\\Mac\\Home\\Downloads\\QuickID-netcore-sample\\ImageClassification\\ModelScorer\\TFModelScorer.cs:line 94\r\n   at ImageClassification.ModelScorer.TFModelScorer.Score() in \\\\Mac\\Home\\Downloads\\QuickID-netcore-sample\\ImageClassification\\ModelScorer\\TFModelScorer.cs:line 80\r\n   at ImageClassification.Program.Main(String[] args) in \\\\Mac\\Home\\Downloads\\QuickID-netcore-sample\\ImageClassification\\Program.cs:line 22\r\n```\r\n\r\n\r\n\r\n- **What did you do?**\r\nupgraded from ML.NET 1.3.1 to 1.4.0\r\n- **What happened?**\r\nError\r\n- **What did you expect?**\r\nThe program ran just fine before\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4449","RelatedDescription":"Open issue \"System.FormatException: Tensorflow exception triggered while loading model.\" (#4449)"},{"Id":"518887333","IsPullRequest":true,"CreatedAt":"2019-11-06T22:32:41","Actor":"Lynx1820","Number":"4448","RawContent":null,"Title":"Fixes onnx exports for regression trainers","State":"open","Body":"\r\nThis PR fixes the issues with exporting the following regression trainers to onnx:\r\n- LbfgsPoissonRegression\r\n- FastTreeTweedie\r\n- FastForest\r\n\r\nAnd adds onnx conversion tests for the following regression trainers: \r\n- FastTree\r\n- OnlineGradientDescent\r\n- Ols\r\n- LightGbm\r\n- Sdca","Url":"https://github.com/dotnet/machinelearning/pull/4448","RelatedDescription":"Open PR \"Fixes onnx exports for regression trainers\" (#4448)"},{"Id":"518695258","IsPullRequest":true,"CreatedAt":"2019-11-06T19:47:08","Actor":"harshithapv","Number":"4447","RawContent":null,"Title":"Modified Tensorflow ImageClassification tests to make them faster","State":"open","Body":"1. Added a IClassFixture to create a workspace path only once before all the tests are run.\r\n2. Allow re-use of cached values wherever possible.","Url":"https://github.com/dotnet/machinelearning/pull/4447","RelatedDescription":"Open PR \"Modified Tensorflow ImageClassification tests to make them faster\" (#4447)"},{"Id":"518688777","IsPullRequest":true,"CreatedAt":"2019-11-06T19:34:33","Actor":"bpstark","Number":"4446","RawContent":null,"Title":"Stabilize the LR test","State":"open","Body":"Found issue with how we were using random for our\r\nImageClassificationTrainer. This caused instability in our unit test, as\r\nwe were not able to control the random seed. Modified the code to now\r\nuse the same random object throughout, the trainer, thus allowing us to\r\ncontrol the seed and therefor have predictable output.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4446","RelatedDescription":"Open PR \"Stabilize the LR test\" (#4446)"},{"Id":"518627588","IsPullRequest":false,"CreatedAt":"2019-11-06T17:41:28","Actor":"justinormont","Number":"4445","RawContent":null,"Title":"Hotlinking to blob store","State":"open","Body":"We need aka.ms links to the CDN instead of direct link to blob store:\r\n* https://github.com/dotnet/machinelearning/blob/cc0b7869d50df819783f30b3f7da4d5c3725bb8f/test/Microsoft.ML.Tests/ScenariosWithDirectInstantiation/TensorflowTests.cs#L1902-L1903\r\n* https://github.com/dotnet/machinelearning/blob/9215ba9e0ee8caa1e97e2666743644baf8c8139c/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/MulticlassClassification/ImageClassification/LearningRateSchedulingCifarResnetTransferLearning.cs#L263\r\n\r\nThe unit test and sample will stop working in a month as we close down that blob store.\r\n\r\nWe should add a check-in test to ensure that no blob-store links are added in the future. All links should be an aka.ms link to the CDN.","Url":"https://github.com/dotnet/machinelearning/issues/4445","RelatedDescription":"Open issue \"Hotlinking to blob store\" (#4445)"},{"Id":"517921979","IsPullRequest":true,"CreatedAt":"2019-11-06T16:08:44","Actor":"codemzs","Number":"4439","RawContent":null,"Title":"Remove duplicate lines from project file.","State":"closed","Body":"fixes #4427\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4439","RelatedDescription":"Closed or merged PR \"Remove duplicate lines from project file.\" (#4439)"},{"Id":"518255830","IsPullRequest":true,"CreatedAt":"2019-11-06T05:55:46","Actor":"frank-dong-ms","Number":"4444","RawContent":null,"Title":"nightly build pipeline","State":"open","Body":"new nightly build pipeline:\r\n\r\n1. add new nightly build pipeline project, disable project build from solution\r\n2. add NuGet package version updater project\r\n3. add new Azure nightly build pipeline and template file\r\n4. TestFrameworkCommon project use conditional reference to source code:\r\n    a. when reference from functional test, use project reference\r\n    b. when reference from nightly build test, use package reference\r\n5. process of nightly build pipeline:\r\n    a. get latest NuGet package version from public NuGet feed\r\n    b. update version to .props file\r\n    c. build nightly build project\r\n    d. run nightly build tests, which is functional test for now\r\n    e. output test results\r\n6. a sample test pipeline can be seems here: https://dev.azure.com/dnceng/public/_build?definitionId=644&_a=summary ","Url":"https://github.com/dotnet/machinelearning/pull/4444","RelatedDescription":"Open PR \"nightly build pipeline\" (#4444)"},{"Id":"517447238","IsPullRequest":true,"CreatedAt":"2019-11-06T05:23:17","Actor":"frank-dong-ms","Number":"4437","RawContent":null,"Title":"Nightly build pipeline","State":"closed","Body":"new nightly build pipeline:\r\n\r\n1. add new nightly build pipeline project, disable project build from solution\r\n2. add NuGet package version updater project\r\n3. add new Azure nightly build pipeline and template file\r\n4. TestFrameworkCommon project use conditional reference to source code:\r\n     a. when reference from functional test, use project reference\r\n     b. when reference from nightly build test, use package reference\r\n5. process of nightly build pipeline:\r\n     a. get latest NuGet package version from public NuGet feed\r\n     b. update version to .props file\r\n     c. build nightly build project\r\n     d. run nightly build tests, which is functional test for now\r\n     e. output test results\r\n6. a sample test pipeline can be seems here: https://dev.azure.com/dnceng/public/_build?definitionId=644&_a=summary\r\n7. have issue in Ubuntu platform, disable for now, will continue investigate and send out update later\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4437","RelatedDescription":"Closed or merged PR \"Nightly build pipeline\" (#4437)"},{"Id":"518035830","IsPullRequest":true,"CreatedAt":"2019-11-05T21:12:21","Actor":"codemzs","Number":"4443","RawContent":null,"Title":"Hash Transform API that takes in advanced options.","State":"open","Body":"fixes #4422\r\n\r\nNeeded by a 1P customer.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4443","RelatedDescription":"Open PR \"Hash Transform API that takes in advanced options.\" (#4443)"},{"Id":"517961406","IsPullRequest":false,"CreatedAt":"2019-11-05T18:51:09","Actor":"daholste","Number":"4442","RawContent":null,"Title":"TimeSeriesImputer to use multiple imputation strategies","State":"open","Body":"For imputed rows, this is a feature request for TimeSeriesImputer to be able to support multiple imputation strategies across different columns. For instance, numeric feature columns could be imputed by median, date feature columns by forward fill, and target column by median.","Url":"https://github.com/dotnet/machinelearning/issues/4442","RelatedDescription":"Open issue \"TimeSeriesImputer to use multiple imputation strategies\" (#4442)"},{"Id":"517960117","IsPullRequest":false,"CreatedAt":"2019-11-05T18:48:29","Actor":"daholste","Number":"4441","RawContent":null,"Title":"TimeSeriesImputer to error if dataset has grains with different frequencies","State":"open","Body":"This is a feature request for TimeSeriesImputer to raise an error if a dataset has grains with different frequencies.\r\n\r\nFor instance, another time series imputer (one used by Azure AutoML) raises the error:\r\n“More than one series is in the input data, and their frequencies differ. Please separate series by frequency and build separate models. If frequencies were incorrectly inferred, please fill in gaps in series.”\r\n\r\nAlso, in TimeSeriesImputer today, if grains grains have frequencies that are relatively prime, this appears to lead to odd behavior","Url":"https://github.com/dotnet/machinelearning/issues/4441","RelatedDescription":"Open issue \"TimeSeriesImputer to error if dataset has grains with different frequencies\" (#4441)"},{"Id":"517957259","IsPullRequest":false,"CreatedAt":"2019-11-05T18:42:09","Actor":"daholste","Number":"4440","RawContent":null,"Title":"TimeSeriesImputer to accept datetime format","State":"open","Body":"This is a request for TimeSeriesImputer to accept datetime format for both:\r\n* time series column, and\r\n* input value columns to impute","Url":"https://github.com/dotnet/machinelearning/issues/4440","RelatedDescription":"Open issue \"TimeSeriesImputer to accept datetime format\" (#4440)"},{"Id":"517453542","IsPullRequest":true,"CreatedAt":"2019-11-04T23:53:54","Actor":"codemzs","Number":"4438","RawContent":null,"Title":"Recreate workspace directory when fit() is called, fix documentation, free up unmanaged memory.","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4438","RelatedDescription":"Closed or merged PR \"Recreate workspace directory when fit() is called, fix documentation, free up unmanaged memory.\" (#4438)"},{"Id":"517003700","IsPullRequest":true,"CreatedAt":"2019-11-04T15:28:18","Actor":"adamsitnik","Number":"4435","RawContent":null,"Title":"update the CI feed url","State":"closed","Body":"While working on https://github.com/dotnet/performance/pull/988 I've realized that readme points to an old CI feed (last update in March)\r\n\r\n/cc @eerhardt ","Url":"https://github.com/dotnet/machinelearning/pull/4435","RelatedDescription":"Closed or merged PR \"update the CI feed url\" (#4435)"},{"Id":"517037972","IsPullRequest":true,"CreatedAt":"2019-11-04T09:40:18","Actor":"frank-dong-ms","Number":"4436","RawContent":null,"Title":"Nightly build pipeline","State":"closed","Body":"new nightly build pipeline:\r\n\r\n1. add new nightly build pipeline project, disable project build from solution\r\n2. add NuGet package version updater project\r\n3. add new Azure nightly build pipeline and template file\r\n4. TestFrameworkCommon project use conditional reference to source code:\r\n        a. when reference from functional test, use project reference\r\n        b. when reference from nightly build test, use package reference\r\n5. process of nightly build pipeline:\r\n        a. get latest NuGet package version from public NuGet feed\r\n        b. update version to .props file\r\n        c. build nightly build project\r\n        d. run nightly build tests, which is functional test for now\r\n        e. output test results\r\n6. have issue in Ubuntu platform, disable for now\r\n7. a sample test pipeline can be seems here: https://dev.azure.com/dnceng/public/_build?definitionId=644&_a=summary\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4436","RelatedDescription":"Closed or merged PR \"Nightly build pipeline\" (#4436)"},{"Id":"516875652","IsPullRequest":false,"CreatedAt":"2019-11-03T19:19:59","Actor":"ericjohannsen","Number":"4434","RawContent":null,"Title":"Can't specify categorical columns","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\n\r\nThe AutoML API Getting Started [documentation](https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/how-to-use-the-automl-api) states:\r\n\r\n> Explore other overloads for Execute() if you want to pass in validation data, column information indicating the column purpose, or prefeaturizers.\r\n\r\nOne overload accepts `ColumnInformation`. However, most of the properties of that class including `CategoricalColumnNames` are get-only. If domain information dictates that a column contains categorical data, how do I provide that insight to AutoML?\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4434","RelatedDescription":"Open issue \"Can't specify categorical columns\" (#4434)"},{"Id":"516873493","IsPullRequest":false,"CreatedAt":"2019-11-03T19:07:23","Actor":"t-smirnov","Number":"4433","RawContent":null,"Title":"[Feature] Markov chains","State":"closed","Body":"First of all, there aren't any libraries for text processing\r\nMaybe someone wants to deal with Markov chains for example.  Or it'll be better not to include some of these things to ml lib?","Url":"https://github.com/dotnet/machinelearning/issues/4433","RelatedDescription":"Closed issue \"[Feature] Markov chains\" (#4433)"},{"Id":"516871759","IsPullRequest":false,"CreatedAt":"2019-11-03T18:48:54","Actor":"ericjohannsen","Number":"4432","RawContent":null,"Title":"Trailing comma in header crashes AutoML wizard & VS 2019","State":"open","Body":"### System information\r\n\r\n- Windows 10\r\n- .NET Core 3.0.\r\n\r\n### Issue\r\n\r\n- Used the AutoML plugin in VS2019 (right-click project/Add/Machine learning)\r\n- VS2019 crashed to the desktop\r\n- The wizard did its thing.\r\n\r\n### Source code / logs\r\n\r\nThe issue is caused by a trailing comma in the header. Our data extraction tool created a CSV header like:\r\n\r\nC1, C2, C3,..CMany,Label,\r\n\r\nRemoving the trailing comma (in a text editor, or by opening the CSV in Excel and saving it) corrects the issue.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4432","RelatedDescription":"Open issue \"Trailing comma in header crashes AutoML wizard & VS 2019\" (#4432)"},{"Id":"516374191","IsPullRequest":false,"CreatedAt":"2019-11-01T22:16:26","Actor":"codemzs","Number":"4431","RawContent":null,"Title":"Cleanup residual from passing validation set to ImageClassification API in AutoML","State":"open","Body":"Pursuant to https://github.com/dotnet/machinelearning/pull/4430#discussion_r341755273\r\n\r\nCC: @justinormont ","Url":"https://github.com/dotnet/machinelearning/issues/4431","RelatedDescription":"Open issue \"Cleanup residual from passing validation set to ImageClassification API in AutoML\" (#4431)"},{"Id":"516338397","IsPullRequest":true,"CreatedAt":"2019-11-01T22:02:04","Actor":"codemzs","Number":"4430","RawContent":null,"Title":"Do not pass validation set and metrics callback to Image Classification API.","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4430","RelatedDescription":"Closed or merged PR \"Do not pass validation set and metrics callback to Image Classification API.\" (#4430)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-11-08T05:30:45.0325251Z","RunDurationInMilliseconds":689}