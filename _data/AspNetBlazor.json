{"Data":{"GitHubIssues":{"Issues":[{"Id":"361983899","IsPullRequest":true,"CreatedAt":"2018-09-20T01:26:11","Actor":"rynowak","Number":"1453","RawContent":null,"Title":"Add Type Inference for Generic-Typed Components","State":"open","Body":"This change allows you to use generic-typed components without\r\nexplicitly specify type arguments.\r\n\r\n**Before:**\r\n```\r\n<Grid Items=\"@MyItems\" TItem=\"Person\">\r\n...\r\n</Grid>\r\n```\r\n\r\n**After:**\r\n```\r\n<Grid Items=\"@MyItems\">\r\n...\r\n</Grid>\r\n```\r\n\r\nWhere possible, the type of the component will be inferred based on the\r\nvalues passed to component parameters. This won't work like magic, you\r\nhave to specify parameters that provide type arguments for all of the\r\ncomponent's type parameters.\r\n\r\nThis is a best effort system, and it's largely based on the limitations\r\nand behaviours of generic type inference in C#. We think it will work\r\nwell with most Blazor features and for most reasonable components. You\r\nshould not forget it's easy to specify type arguments, because you may\r\nstill have to in some cases.\r\n\r\nIn particular you may notice issues if you are trying to use a generic\r\ntyped component where all of the parameters are delegates or templates.\r\nType inference for delegates/lambdas in C# is based on the context. Any\r\ntime you combine generics and delegates it's easy to get into a scenario\r\nwhere the compiler won't infer the correct type, or will give up.\r\n\r\n----\r\nThe type inference feature works by generating a 'thunk' method in\r\n*caller* that can act as a site for type inference (C# does not support\r\ninference on constructors).\r\n\r\nFor our grid example above, the non-inferenced code will look something\r\nlike:\r\n```\r\nbuilder.OpenComponent<Grid<Person>>(0);\r\nbuilder.AddAttribute(1, \"Items\", MyItems);\r\nbuilder.CloseComponent();\r\n```\r\n\r\nNote that we can only write the type `Grid<Person>` because you wrote\r\n`Person` in your code. What you type in the `TItem` attribute value gets\r\ninserted into the generated code such that it fills in the generic type\r\nparameter.\r\n\r\nOn the other hand, if you want is to infer the type, we have to do some\r\ncompiler magic. That looks like:\r\n```\r\n__Blazor.(long generated name).TypeInference.CreateGrid_0(builder, 0, 1, MyItems);\r\n...\r\n\r\n// elsewhere in the file\r\ninternal static class TypeInference\r\n{\r\n    public static void CreateGrid_0<TItem>(RenderTreeBuilder builder, int seq, int __seq0, global::System.Collections.Generic.List<TItem> __arg0)\r\n    {\r\n\tbuilder.OpenComponent<Grid<TItem>>(seq);\r\n\tbuilder.AddAttribute(__seq0, \"Items\", __arg0);\r\n        builder.CloseComponent();\r\n    }\r\n}\r\n```\r\n\r\nThis allows us to rely on the C# compiler for itype inference.","Url":"https://github.com/aspnet/Blazor/pull/1453","RelatedDescription":"Open PR \"Add Type Inference for Generic-Typed Components\" (#1453)"},{"Id":"361957345","IsPullRequest":false,"CreatedAt":"2018-09-19T22:54:20","Actor":"OmarTawfik","Number":"1452","RawContent":null,"Title":"Microsoft.JSInterop.d.ts not available","State":"open","Body":"I looked through the codebase, npm, and nuget, but couldn't figure out where it is published to.\r\nI want to write my client side interop in TypeScript, and I want to refer to `DotNet.invokeMethod` and other functions in that file, but I cannot figure out where to reference the `.d.ts` from. Is that a WIP?\r\n\r\nhttps://github.com/aspnet/Blazor/blob/0.5.1/src/Microsoft.JSInterop/JavaScriptRuntime/src/Microsoft.JSInterop.ts","Url":"https://github.com/aspnet/Blazor/issues/1452","RelatedDescription":"Open issue \"Microsoft.JSInterop.d.ts not available\" (#1452)"},{"Id":"361632114","IsPullRequest":true,"CreatedAt":"2018-09-19T18:36:15","Actor":"conficient","Number":"1447","RawContent":null,"Title":"Amend link for [docs]","State":"closed","Body":"The current link for docs points to the wiki which does not have a lot of documentation. Suggest pointing to https://blazor.net/docs/index.html","Url":"https://github.com/aspnet/Blazor/pull/1447","RelatedDescription":"Closed or merged PR \"Amend link for [docs]\" (#1447)"},{"Id":"361867630","IsPullRequest":false,"CreatedAt":"2018-09-19T18:15:22","Actor":"mercersoft","Number":"1451","RawContent":null,"Title":"JsonConvert.SerializeObject fails","State":"open","Body":"I am trying to serialize a simple class to JSON (using Newtonsoft.JSON) using the code below, but the request fails with the following error: \r\n\r\n**WASM: [Newtonsoft.Json.JsonSerializationException] Error setting value to 'Name' on 'Blazor1.Client.Pages.Index+Foo'.**\r\n\r\nI have added the following block to the default Blazor (0.5.0) Project:\r\n\r\n```\r\n@functions\r\n{\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        string content = \"{ \\\"name\\\" : \\\"PHS\\\" }\";\r\n        Foo foo = JsonConvert.DeserializeObject<Foo>(content);\r\n        var bar = JsonConvert.SerializeObject(foo);\r\n    }\r\n\r\n    public class Foo\r\n    {\r\n        public string Name { get; set; }\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1451","RelatedDescription":"Open issue \"JsonConvert.SerializeObject fails\" (#1451)"},{"Id":"361812403","IsPullRequest":false,"CreatedAt":"2018-09-19T15:47:56","Actor":"panesofglass","Number":"1450","RawContent":null,"Title":"Unable to create Blazor app with fsproj","State":"open","Body":"I've attempted to create an all-F# Blazor app with each release, but it seems that the current solution requires a `csproj` and expects all files to be C#. I suspect this is because the Blazor tooling is inspecting the solution to find `.cshtml` files and generate the `.g.cs` files the compiler will use. I've built a F# renderer, [Trail](https://github.com/panesofglass/trail), that doesn't require this step, and I would love to build Blazor apps with just the `fsproj`. The only thing in the `csproj` in my Trail sample apps is the [call to build and run the host builder](https://github.com/panesofglass/trail/blob/master/sample/standalone/BlazorApp1/Program.cs).\r\n\r\nI think this should be possible as the mono wasm tooling appears able to generate wasm from F# projects. I would be very glad to help out with investigating whether this is possible and desirable from a Blazor project perspective.","Url":"https://github.com/aspnet/Blazor/issues/1450","RelatedDescription":"Open issue \"Unable to create Blazor app with fsproj\" (#1450)"},{"Id":"361742196","IsPullRequest":false,"CreatedAt":"2018-09-19T13:17:36","Actor":"awesomeaaron","Number":"1449","RawContent":null,"Title":"Authentication / Authorization for server side Blazor","State":"closed","Body":"Hi,\r\nI would like to implement authentication/authorization for a server side Blazor app. For MVC app, we use session/cookie and for api we can use oauth / openid. What is the preffered way of doing authentication / authorization for a server side Blazor app.","Url":"https://github.com/aspnet/Blazor/issues/1449","RelatedDescription":"Closed issue \"Authentication / Authorization for server side Blazor\" (#1449)"},{"Id":"361245858","IsPullRequest":true,"CreatedAt":"2018-09-19T12:35:02","Actor":"SteveSandersonMS","Number":"1441","RawContent":null,"Title":"Include TPN file in VSIX and all nupkg files built from \"src\" directory. Fixes #335","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1441","RelatedDescription":"Closed or merged PR \"Include TPN file in VSIX and all nupkg files built from \"src\" directory. Fixes #335\" (#1441)"},{"Id":"361312368","IsPullRequest":false,"CreatedAt":"2018-09-19T12:34:10","Actor":"kwaclaw","Number":"1442","RawContent":null,"Title":"Webcomponents","State":"closed","Body":"Webcomponents are part of the HTML standard. They are custom tags recognized by the browser directly.\r\nOne can write them with Javascript or TypeScript.\r\n\r\nBoth Vue and Angular support the creation of web components, Vue through their \"web-component-wrapper\" and Angular through \"Angular Elements\".\r\n\r\nCan I write webcomponents with Blazor? Preferably in a direct fashion like with Javascript, not indirectly through a wrapper for some \"Blazor component\".","Url":"https://github.com/aspnet/Blazor/issues/1442","RelatedDescription":"Closed issue \"Webcomponents\" (#1442)"},{"Id":"361391820","IsPullRequest":false,"CreatedAt":"2018-09-19T12:32:52","Actor":"gthvidsten","Number":"1443","RawContent":null,"Title":"Blazor in self hosted OWIN on .NET Framework","State":"closed","Body":"I have a service written in .NET Framework that hosts its own webserver using OWIN. Having read about Blazor, I want to start experimenting with it and try to host a Blazor webapp in this service.\r\n\r\nHowever, I haven't found any good instructions on how to do self-hosting with Blazor, especially not on OWIN and .Net Framework. I'd really like a native solution, and converting my solution to .NET Core is not viable. Also, I would really like not to have to compile the Blazor webapp in another solution then copying the files to be hosted using i.e. `Microsoft.Owin.StaticFiles` middleware.\r\n\r\nThe question, then, is quite basic:\r\n\r\nHow can I host a Blazor webapp in my existing OWIN service?","Url":"https://github.com/aspnet/Blazor/issues/1443","RelatedDescription":"Closed issue \"Blazor in self hosted OWIN on .NET Framework\" (#1443)"},{"Id":"361725163","IsPullRequest":true,"CreatedAt":"2018-09-19T12:29:47","Actor":"SteveSandersonMS","Number":"1448","RawContent":null,"Title":"Fix method wiping","State":"open","Body":"While investigating linking, I found that `ilwipe` couldn't process certain assemblies, and in other cases wasn't throwing the expected clear message if you called a wiped method. This PR fixes the generated IL and adds an E2E test for it.","Url":"https://github.com/aspnet/Blazor/pull/1448","RelatedDescription":"Open PR \"Fix method wiping\" (#1448)"},{"Id":"361402175","IsPullRequest":false,"CreatedAt":"2018-09-18T23:23:21","Actor":"kant2002","Number":"1444","RawContent":null,"Title":"Rename of the variables does not works","State":"closed","Body":"1. press Ctrl+R, R in the Blazor component view (Client-side)\r\n2. start typing to rename variable\r\nVariable name does not changed in the editor, but some indication in the refactoring view helper\r\n\r\n![image](https://user-images.githubusercontent.com/4257079/45703842-3d6fe800-bb97-11e8-8300-cab57d6f8f9b.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1444","RelatedDescription":"Closed issue \"Rename of the variables does not works\" (#1444)"},{"Id":"361511490","IsPullRequest":false,"CreatedAt":"2018-09-18T23:16:42","Actor":"KnottStudios","Number":"1446","RawContent":null,"Title":"Select is having issues","State":"closed","Body":"VS 2017 15.8.4\r\n<Select> causes a page not to load.\r\nTested with code directly from this github site.\r\nSee attached file.\r\n![snippet](https://user-images.githubusercontent.com/17166749/45720595-6af26c80-bb6a-11e8-8eea-490012f7beae.PNG)\r\n  \r\n","Url":"https://github.com/aspnet/Blazor/issues/1446","RelatedDescription":"Closed issue \"Select is having issues\" (#1446)"},{"Id":"361486536","IsPullRequest":true,"CreatedAt":"2018-09-18T21:16:39","Actor":"SteveSandersonMS","Number":"1445","RawContent":null,"Title":"Update VSTS queue name","State":"closed","Body":"Hopefully fixes the signed builds. These changes are equivalent to some that @natemcmaster recently made elsewhere.","Url":"https://github.com/aspnet/Blazor/pull/1445","RelatedDescription":"Closed or merged PR \"Update VSTS queue name\" (#1445)"},{"Id":"361100715","IsPullRequest":true,"CreatedAt":"2018-09-18T10:53:23","Actor":"IEvangelist","Number":"1440","RawContent":null,"Title":"Update Startup.cs","State":"closed","Body":"Use `nameof` instead of string literal.","Url":"https://github.com/aspnet/Blazor/pull/1440","RelatedDescription":"Closed or merged PR \"Update Startup.cs\" (#1440)"},{"Id":"360819064","IsPullRequest":false,"CreatedAt":"2018-09-18T10:12:26","Actor":"stsrki","Number":"1436","RawContent":null,"Title":"HttpClient response headers are empty","State":"closed","Body":"I'm trying to read custom headers from the HttpResponseHeaders using the following code. \r\n\r\n```\r\npublic static class ExtensionMethods\r\n{\r\n    #region HttpClient\r\n\r\n    public static async Task<IPage<T>> GetPageAsync<T>( this HttpClient httpClient, string requestUri ) where T : class\r\n    {\r\n        using ( var response = await httpClient.GetAsync( requestUri ) )\r\n        {\r\n            response.EnsureSuccessStatusCode();\r\n\r\n            var entries = Json.Deserialize<List<T>>( await response.Content.ReadAsStringAsync() );\r\n            var totalCount = response.Headers.ParseInt( \"X-Total-Count\" );\r\n            var offset = response.Headers.ParseInt( \"X-Offset\" );\r\n            var limit = response.Headers.ParseInt( \"X-Limit\" );\r\n\r\n            return await Task.FromResult( new Page<T>\r\n            {\r\n                TotalCount = totalCount,\r\n                Entries = entries,\r\n                Offset = offset,\r\n                Limit = limit,\r\n            } );\r\n        }\r\n    }\r\n\r\n    private static int ParseInt( this HttpResponseHeaders headers, string key )\r\n    {\r\n        var value = headers?.FirstOrDefault( x => x.Key == key ).Value?.FirstOrDefault();\r\n\r\n        if ( string.IsNullOrEmpty( value ) )\r\n            return 0;\r\n\r\n        int.TryParse( value, out var number );\r\n\r\n        return number;\r\n    }\r\n\r\n    #endregion\r\n}\r\n```\r\n\r\nHelper classes:\r\n```\r\npublic interface IPage<T>\r\n{\r\n    int TotalCount { get; }\r\n\r\n    List<T> Entries { get; }\r\n\r\n    int Limit { get; }\r\n\r\n    int Offset { get; }\r\n}\r\n\r\n[DataContract]\r\npublic class Page<T> : IPage<T> where T : class\r\n{\r\n    [DataMember]\r\n    public int TotalCount { get; set; }\r\n\r\n    [DataMember]\r\n    public List<T> Entries { get; set; }\r\n\r\n    [DataMember]\r\n    public int Offset { get; set; }\r\n\r\n    [DataMember]\r\n    public int Limit { get; set; }\r\n}\r\n```\r\n\r\nI can see the headers in **Postman** and the code works when I run it in **ConsoleApp** without any problems. But in **Blazor** the `response.Headers` are always missing. The only value that I can get is Content-Type.\r\n\r\nIs there any way that I can get custom headers with the HttpClient in Blazor?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1436","RelatedDescription":"Closed issue \"HttpClient response headers are empty\" (#1436)"},{"Id":"360976293","IsPullRequest":false,"CreatedAt":"2018-09-18T10:08:54","Actor":"footysteve","Number":"1439","RawContent":null,"Title":"Blazor source, a little advice needed.","State":"closed","Body":"Hi \r\n\r\nI'm looking into seo with Blazor. At the moment google & co don't appear to work well with WebAssembly apps.\r\n\r\n![Google Indexing](https://github.com/footysteve/blazor.space/blob/master/images/blazor-seo.jpg)\r\n\r\nLooked at some seo related posts here, #24 for example. I think, maybe, I might have a practical and efficient solution though I'm still getting to know the internals of wasm/mono. \r\n\r\nI've downloaded and built Blazor and have been familiarising myself with the codebase though I haven't been able to step through code yet as I need to change the language services extension version numbers or uninstall the extension I guess. \r\n\r\nIt's a big project, lots of code so I wondered if someone might be able to give me a little info about, or point me to a document that details the process flow of Blazor, what happens under he hood. I'm looking for the point in code where a page has been constructed but not yet packed ready for download. \r\n\r\nThanks\r\nSteve\r\n\r\nPS. Sorry the image isn't showing up, still figuring out GitHub, clicking the link shows the image.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1439","RelatedDescription":"Closed issue \"Blazor source, a little advice needed.\" (#1439)"},{"Id":"360596834","IsPullRequest":false,"CreatedAt":"2018-09-17T23:32:42","Actor":"tyler0814","Number":"1430","RawContent":null,"Title":"Question: Is it possible to use Local IIS to serve blazor on local machine?","State":"closed","Body":"Hello,\r\nI have been trying to set up a new blazor up on IIS using a virtual directory like \"localhost/blazorapp\". However, I keep running into one of two issues:\r\n1) If I start it without debugging (CTRL+F5), I get an IIS HTTP Error 502.5: Process Failure\r\n2) If I start it with debugging (F5):\r\n- On every first run after opening the project, I get \"Caesium.Core.TestRunner> Version for package `Microsoft.AspNetCore.Blazor.Cli` could not be resolved\" in the output window\r\n- On every subsequent run, the browser opens and then closes without loading the site and the output window shows a load of \"Loading\" statement followed by \"The program '[12408] dotnet.exe' has exited with code 1 (0x1).\"\r\n\r\nThe app does work with IIS Express if I change the app URL to localhost instead of localhost/BlazorApp and I also tried a default MVC project and that also serves fine. \r\n\r\nIs serving an unpublished blazor app with Local IIS supported?\r\n\r\nCurrently I have found #1342 and #833 but I do not think my issue fits those exactly since I am not trying to publish the blazor app.\r\n\r\nAny help is much appreciated!","Url":"https://github.com/aspnet/Blazor/issues/1430","RelatedDescription":"Closed issue \"Question: Is it possible to use Local IIS to serve blazor on local machine?\" (#1430)"},{"Id":"360546828","IsPullRequest":false,"CreatedAt":"2018-09-17T23:25:30","Actor":"grahamehorner","Number":"1429","RawContent":null,"Title":"Blazor - Adaptive Cards","State":"closed","Body":"Please consider adding support to blazor for adaptive cards; rendering/injecting interactive cards into the DOM and receiving events from the card. ","Url":"https://github.com/aspnet/Blazor/issues/1429","RelatedDescription":"Closed issue \"Blazor - Adaptive Cards\" (#1429)"},{"Id":"360601401","IsPullRequest":false,"CreatedAt":"2018-09-17T23:12:25","Actor":"kunalspathak","Number":"1431","RawContent":null,"Title":"Getting Mono.Cecil.ResolutionException during build","State":"closed","Body":"Please let me know if this issue should be open in mono repository,\r\n\r\nI followed [directions](https://blazor.net/docs/get-started.html) to start Blazor. It build and worked fine. Then I tried writing some code using [Prose SDKs](https://www.nuget.org/packages/Microsoft.ProgramSynthesis/) and when I built, I get following errors. Is there something that is not supported yet?\r\n```cmd\r\n         Fatal error in IL Linker\r\n         Mono.Cecil.ResolutionException: Failed to resolve System.Runtime.Loader.AssemblyLoadContext\r\n            at Mono.Linker.Steps.MarkStep.HandleUnresolvedType(TypeReference reference)\r\n            at Mono.Linker.Steps.MarkStep.MarkType(TypeReference reference)\r\n            at Mono.Linker.Steps.MarkStep.MarkField(FieldReference reference)\r\n            at Mono.Linker.Steps.MarkStep.InitializeFields(TypeDefinition type)\r\n            at Mono.Linker.Steps.MarkStep.InitializeType(TypeDefinition type)\r\n            at Mono.Linker.Steps.MarkStep.InitializeAssembly(AssemblyDefinition assembly)\r\n            at Mono.Linker.Steps.MarkStep.Initialize()\r\n            at Mono.Linker.Steps.MarkStep.Process(LinkContext context)\r\n            at Mono.Linker.Pipeline.Process(LinkContext context)\r\n            at Mono.Linker.Driver.Run(ILogger customLogger)\r\n            at Mono.Linker.Driver.Execute(String[] args, ILogger customLogger)\r\n```\r\n\r\nThe code I had in `cshtml` file is \r\n\r\n```csharp\r\n        Session s = new Session();\r\n        IEnumerable<Example> examples = new[]\r\n        {\r\n            new Example(new InputRow(\"Greta Hermansson\"), \"Hermansson, G.\")\r\n        };\r\n        s.Constraints.Add(examples);\r\n        Microsoft.ProgramSynthesis.Transformation.Text.Program program = s.Learn();\r\n        code = program.ToString();\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/1431","RelatedDescription":"Closed issue \"Getting Mono.Cecil.ResolutionException during build\" (#1431)"},{"Id":"360667627","IsPullRequest":false,"CreatedAt":"2018-09-17T22:33:27","Actor":"JamesNK","Number":"1433","RawContent":null,"Title":"NRE exception with Newtonsoft.Json","State":"closed","Body":"Hi\r\n\r\nThis PR was raised for Newtonsoft.Json - https://github.com/JamesNK/Newtonsoft.Json/pull/1828\r\nI thought this issue was fixed with a linker configuration change - https://github.com/mono/mono/issues/8872\r\n\r\nCan you double check that this fix is shipping with Blazor so it Just Works for users.","Url":"https://github.com/aspnet/Blazor/issues/1433","RelatedDescription":"Closed issue \"NRE exception with Newtonsoft.Json\" (#1433)"},{"Id":"360961177","IsPullRequest":false,"CreatedAt":"2018-09-17T21:21:32","Actor":"danroth27","Number":"1438","RawContent":null,"Title":"Tooling exception after copying component .cshtml file for component","State":"closed","Body":"Environment:\r\nVisual Studio 2017 15.8.4\r\nBlazor 0.5.1\r\n\r\nRepro steps:\r\n- Create new Blazor app\r\n- Copy and paste Counter.cshtml to create a new page in the Page folder\r\n- Rename the new page to Test.cshtml\r\n- Edit Test.cshtml\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/45638242-7c9c1d00-ba61-11e8-944d-25ccec53c20f.png)\r\n\r\n[ActivityLog.zip](https://github.com/aspnet/Blazor/files/2389534/ActivityLog.zip)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1438","RelatedDescription":"Closed issue \"Tooling exception after copying component .cshtml file for component\" (#1438)"},{"Id":"360675231","IsPullRequest":false,"CreatedAt":"2018-09-17T17:26:06","Actor":"JohnyL","Number":"1434","RawContent":null,"Title":"Error when using C# code in onclick handler of button","State":"closed","Body":"I am new to Blazor and I liked it very much. I want to put my time into learning it, so I began from beginning. :)\r\nI was watching [this video](https://youtu.be/MiLAE6HMr10?t=2193) and was trying to set C# code for `onclick` handler of `button`. However, I receive error:\r\n\r\n> Argument 1: cannot convert from 'void' to 'string'\r\n\r\nHere's screenshot of TodoList.cshtml:\r\n![IMG1](https://8hnsoa.am.files.1drv.com/y4mMvxGjcz63kZWfLdKyhpaqEpvmtOfc49NYMVRkUFQuc4ZhUYgJ_Nck0ND97xtLFspXxpzJgyitVExZyVxB5Tfb-fb1tTfqp7fGt2cFSvkMpzOh-J0p5Ivi_EeZMWbodV_zOidXQNZdBW7Ve-wUqBMhPlpzclc0f2XuT_28CKJioWIkTTfrGq6O2uNizNCK64jxSUxQjwTzBiTt8JWUC-gwQ?width=1025&height=611&cropmode=none)","Url":"https://github.com/aspnet/Blazor/issues/1434","RelatedDescription":"Closed issue \"Error when using C# code in onclick handler of button\" (#1434)"},{"Id":"360848764","IsPullRequest":false,"CreatedAt":"2018-09-17T12:36:45","Actor":"uwefms","Number":"1437","RawContent":null,"Title":"negative route parameter not allowed","State":"open","Body":"Having the following route:\r\n\r\n@page \"/sendemail/{RoomName}/{RoomId:int}\"\r\n\r\nI get the following error:\r\n\r\nUncaught (in promise) Error: System.InvalidOperationException: 'Router' cannot find any component with a route for '/confirmemail/2.01/-1'.\r\n\r\nwhen trying to send a negative RoomId. \r\n\r\nNo Problem with positive Ids or 0\r\n","Url":"https://github.com/aspnet/Blazor/issues/1437","RelatedDescription":"Open issue \"negative route parameter not allowed\" (#1437)"},{"Id":"360729618","IsPullRequest":false,"CreatedAt":"2018-09-17T05:48:53","Actor":"kant2002","Number":"1435","RawContent":null,"Title":"Intellisense or language service error","State":"open","Body":"1. have `<td></td>`\r\n2. Put caret between `<td>|</td>`\r\n3. Press Enter\r\n4. Type `@if (` fast. After typing `(` the additional `if` appears.\r\n\r\n![image](https://user-images.githubusercontent.com/4257079/45607604-5c735a80-ba6f-11e8-9e8e-81bb72d43589.png)\r\n \r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1435","RelatedDescription":"Open issue \"Intellisense or language service error\" (#1435)"},{"Id":"360651988","IsPullRequest":false,"CreatedAt":"2018-09-16T15:53:45","Actor":"JohnyL","Number":"1432","RawContent":null,"Title":"Add Blazor templates for ASP.NET Core 2.2","State":"open","Body":"Visual Studio doesn't show \"Blazor\" project template:\r\n\r\n![IMG1](https://jy6aig.am.files.1drv.com/y4mauLwTx069pbd96LhWvNZx5BPsgsnmIdSAlWlzLbNhPHf2iI3eNqBe_0_vvl5Px4w7YynXwGSQ4eQtsYVPMuabrqf816F1kQiewqcDOiT5FIPT8M0VhGbdkLf30ZMqCfCpW3BZ2tGOqTlJ9F-Wnt4SmRxHiH82YcE7uUcUg1nRXmPmIlEoqIIEOeYDEcr_Xq7LjFgVIFaSXq5xrW3l2WGIA?width=786&height=553&cropmode=none)\r\n\r\nBlazor Language Services extension is installed:\r\n\r\n![IMG2](https://jy41lw.am.files.1drv.com/y4m7S5LiH6O4ORVvwP67fxjaMpHLPUXjeh8oRIGzEWFkZE4yeLrh9qq-yLQlrNDkTAkrzZC7TE-HuIsZu7nUMAGi4EiRQBvcJF_0efDpcePYwiFKR8rILP2EJs06QiVgbycHx9uiNbjZH7JEesLwHi8drGbyEBNw9CPkEck5RGclG_jINk-PD4ZKHdTAog1gPPi-fJkRmmMVnjzOoa-jmxE9w?width=941&height=653&cropmode=none)\r\n\r\n**Configuration**:\r\n- VS 2017 15.9.0 Preview 2\r\n- .NET Core 2.2.100-preview2-009404\r\n- SDK: 2.2.100-preview2-009404\r\n- OS: Windows 10 Home x64","Url":"https://github.com/aspnet/Blazor/issues/1432","RelatedDescription":"Open issue \"Add Blazor templates for ASP.NET Core 2.2\" (#1432)"},{"Id":"360513518","IsPullRequest":false,"CreatedAt":"2018-09-15T15:27:02","Actor":"Atulin","Number":"1426","RawContent":null,"Title":"No Blazor template shows up in VS","State":"closed","Body":"VS 15.8.4\r\n![image](https://user-images.githubusercontent.com/11233299/45583446-aa972b00-b8c2-11e8-84b3-aed9e0ecc309.png)\r\n![image](https://user-images.githubusercontent.com/11233299/45583450-b551c000-b8c2-11e8-8764-e924121ba8d4.png)\r\n\r\n``dotnet --version`` results:\r\n```\r\nZestaw .NET Core SDK (odzwierciedlenie dowolnego pliku global.json):\r\n Version:   2.1.402\r\n Commit:    3599f217f4\r\n\r\nŚrodowisko uruchomieniowe:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   c:\\program files\\dotnet\\sdk\\2.1.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.4\r\n  Commit:  85255dde3e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.2 [c:\\program files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [c:\\program files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [c:\\program files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [c:\\program files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [c:\\program files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [c:\\program files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [c:\\program files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [c:\\program files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [c:\\program files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [c:\\program files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [c:\\program files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [c:\\program files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [c:\\program files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1426","RelatedDescription":"Closed issue \"No Blazor template shows up in VS\" (#1426)"},{"Id":"360546289","IsPullRequest":false,"CreatedAt":"2018-09-15T14:46:36","Actor":"tezine","Number":"1428","RawContent":null,"Title":"Live reloading not working","State":"open","Body":"Hi, \r\nLive reloading is not working on version 0.5.1. \r\nI'm using dotnet sdk 2.1.300 under Windows 64. \r\nWhenever I change a html content, it's not updated in the browser. I tested using Chrome, pressing F5, cache disabled and debug mode. \r\nIs this working anyhow?\r\nI also tested using dotnet blazor serve without success. ","Url":"https://github.com/aspnet/Blazor/issues/1428","RelatedDescription":"Open issue \"Live reloading not working\" (#1428)"},{"Id":"360528896","IsPullRequest":false,"CreatedAt":"2018-09-15T11:06:00","Actor":"RudyMeijer","Number":"1427","RawContent":null,"Title":"Error 403","State":"closed","Body":"Hi,\r\n\r\nI just published my first Blazor succesfully!\r\n![image](https://user-images.githubusercontent.com/17112368/45585224-5bacbe00-b8e1-11e8-847b-e991ea29280c.png)\r\n\r\nWhen i open the website i get:\r\n\r\n![image](https://user-images.githubusercontent.com/17112368/45585234-8565e500-b8e1-11e8-9f07-ff2dda8e430b.png)\r\n\r\nAfter publish the host contains:\r\n\r\n![image](https://user-images.githubusercontent.com/17112368/45585325-e2ae6600-b8e2-11e8-9152-84517bf64a2f.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1427","RelatedDescription":"Closed issue \"Error 403\" (#1427)"},{"Id":"360503445","IsPullRequest":false,"CreatedAt":"2018-09-15T03:36:29","Actor":"redmisfitx","Number":"1425","RawContent":null,"Title":"Blazor Project won't compile","State":"open","Body":"Installed .NET Core SDK 2.1.402 and created a Blazor project in Visual Studio 15.8.4 I am not able to run the project. It throws the following error. I've tried suggestions like deleting the json file which has a reference to .net core 2.1.300 among many other things including clearing all nuget packages and restoring them. All to no avail.\r\n\r\nThis is the actual error.\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB3073\tThe command \"dotnet \"C:\\Users\\redmi\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.5.1\\targets\\../tools/Microsoft.AspNetCore.Blazor.Build.dll\" write-boot-json obj\\Debug\\netstandard2.0\\Control Edge.dll --references \"C:\\Edge\\obj\\Debug\\netstandard2.0\\blazor/bootjson-references.txt\" --embedded-resources \"C:\\Edge\\obj\\Debug\\netstandard2.0\\blazor/embedded.resources.txt\" --linker-enabled --output \"C:\\Edge\\obj\\Debug\\netstandard2.0\\blazor/blazor.boot.json\"\" exited with code -532462766.\tControl Edge\tC:\\Users\\redmi\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.5.1\\targets\\Blazor.MonoRuntime.targets\t635\t\r\n","Url":"https://github.com/aspnet/Blazor/issues/1425","RelatedDescription":"Open issue \"Blazor Project won't compile\" (#1425)"},{"Id":"360422347","IsPullRequest":false,"CreatedAt":"2018-09-14T19:17:31","Actor":"RudyMeijer","Number":"1424","RawContent":null,"Title":"HTTP Error 502.5 - Process Failure","State":"closed","Body":"Hi, \r\n\r\nI Installed the latest Blazor Language Services extension from the Visual Studio Marketplace in VS2017 15.8.4 and created a new project.\r\n![image](https://user-images.githubusercontent.com/17112368/45570253-4e042380-b862-11e8-9295-fe3b8f30493b.png)\r\n\r\nWhen i run the Blazor application (Ctrl+F5) without modifications i get the error:\r\n\r\n![image](https://user-images.githubusercontent.com/17112368/45569911-4a23d180-b861-11e8-96fb-78aaf030047a.png)\r\n\r\n![image](https://user-images.githubusercontent.com/17112368/45569725-acc89d80-b860-11e8-8ecc-843566443642.png)\r\n\r\nThe eventlogger shows:\r\n![image](https://user-images.githubusercontent.com/17112368/45570060-b9012a80-b861-11e8-88c9-f6ce84846805.png)\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1424","RelatedDescription":"Closed issue \"HTTP Error 502.5 - Process Failure\" (#1424)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-20T05:30:04.8831207Z","RunDurationInMilliseconds":1489}