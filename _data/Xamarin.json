{"Data":{"Blog":{"FeedItems":[{"Title":"Best Practices and Tips for Using Xamarin.UITest","PublishedOn":"2019-03-04T19:35:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that it is very important for mobile apps to have great user interfaces, be accessible, and be extremely performant. Given the plethora of devices with different screen sizes, screen...","Href":"https://blog.xamarin.com/best-practices-tips-xamarin-uitest/","RawContent":null},{"Title":"Developer Community Events in March","PublishedOn":"2019-03-01T17:59:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"User groups are getting together to learn about new, exciting releases and tooling to help jumpstart their next mobile development project. Network with your local community and you too could get all...","Href":"https://blog.xamarin.com/developer-community-events-in-march/","RawContent":null},{"Title":"View PDF Files within Your Xamarin.Forms Apps Using the Syncfusion PDF Viewer","PublishedOn":"2019-02-28T17:04:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Suresh Mohan. Suresh is the Product Manager for PDF Viewer at Syncfusion Software where he specializes in desktop and mobile app development. &#160;...","Href":"https://blog.xamarin.com/xamarin-forms-apps-syncfusion-pdf-viewer/","RawContent":null},{"Title":"Quick Tip: Debugging Local ASP.NET Core Web APIs on Android Emulators","PublishedOn":"2019-02-25T19:36:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing mobile applications with a web API backend there is always a need to debug locally on your development machine. If you are using Visual Studio for Mac and debugging iOS applications...","Href":"https://blog.xamarin.com/debug-local-asp-net-core-web-apis-android-emulators/","RawContent":null},{"Title":"Xamarin and Azure Office Hours Recap from December 2018 and January 2019","PublishedOn":"2019-02-21T18:11:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That&#8217;s right, I ❤️ every single one of you(!) and I want to know more about your stories building mobile apps. I want to hear stories of your successes and also, the not-so-successful...","Href":"https://blog.xamarin.com/xamarin-azure-office-hours-recap-december-january/","RawContent":null},{"Title":"Persisting Settings and Preferences in Mobile Apps with Xamarin.Essentials","PublishedOn":"2019-02-19T19:56:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"An essential part of any mobile application is the ability to persist data. Sometimes that is a large amount of data that requires a database, but often it is smaller pieces of data such as settings...","Href":"https://blog.xamarin.com/persisting-settings-preferences-mobile-apps-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Developer Blog is Getting an Update!","PublishedOn":"2019-02-15T18:56:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the coming weeks, the Xamarin Developer Blog will be migrating to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great...","Href":"https://blog.xamarin.com/xamarin-developer-blog-is-getting-an-update/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: Releases, Previews, and Roadmaps!","PublishedOn":"2019-02-13T19:56:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. In this episode, we discuss the best of...","Href":"https://blog.xamarin.com/podcast-releases-previews-roadmaps/","RawContent":null},{"Title":"Easily Check Mobile Device Connectivity with Xamarin.Essentials","PublishedOn":"2019-02-12T19:06:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts of a mobile device is their instant access to the internet. As a mobile app developer, it&#8217;s great to be able to pull data from the server to our apps to provide users with...","Href":"https://blog.xamarin.com/easily-check-mobile-device-connectivity-with-xamarin-essentials/","RawContent":null},{"Title":"5 Things You’ll Love in Xamarin.Forms 3.5","PublishedOn":"2019-02-06T17:22:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Valentine&#8217;s Day isn&#8217;t for a few more days, we just couldn&#8217;t wait to celebrate the love by sharing a new stable release of Xamarin.Forms &#8211; 3.5. Your engagement and...","Href":"https://blog.xamarin.com/5-things-youll-love-xamarin-forms-3-5/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9187206644","Type":"PullRequestEvent","CreatedAt":"2019-03-06T01:52:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2792","RelatedDescription":"Merged pull request \"[mingw] Make sure all 32-bit Windows libraries use static libgcc\" (#2792) at xamarin/xamarin-android","RelatedBody":"MinGW builds of shared libraries may (depending on what the source code uses)\r\nlink against `libgcc` in a few variations. The default work mode is to use the\r\nshared library but since it's specific to gcc/MinGW, it will not be found on the\r\ntarget system and the library will fail to load.\r\n\r\nThere are two solutions for this:\r\n\r\n  * Distribute all the referenced DLLs\r\n  * Link them in statically\r\n\r\nThis commit takes the second approach, implemented in the way that will affect\r\nall the libraries we build for Windows.\r\n\r\nAdditionally, this commit prepares for the future upgrade to cmake 3.10"},{"Id":"9187170477","Type":"PullRequestEvent","CreatedAt":"2019-03-06T01:43:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2793","RelatedDescription":"Merged pull request \"[build] Publish API Compatibility Checks\" (#2793) at xamarin/xamarin-android","RelatedBody":"The `make run-api-compatibility-tests` target may create a set of HTML\r\nfiles within `bin/Build$(Configuration)/compatibility`, which would\r\ncreate an **API Compatibility Checks** \"side-bar\" for *freestyle*\r\nbuilds, reporting any API breakage.\r\n\r\nThis functionality is lost with the new Pipeline builds.\r\n\r\nAdd a `publishHTML` invocation to `build.groovy` so that API brekage\r\ncan be nicely reported when it occurs.\r\n\r\nAdditionally, update `tests/api-compatibility` so that the test\r\nresults are placed into the `bin/Test$(Configuration)` directory, not\r\n`bin/Build$(Configuration)`, and update `make package-test-results` to\r\ninclude the API compatibility results."},{"Id":"9186201617","Type":"PullRequestEvent","CreatedAt":"2019-03-05T22:09:13","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2795","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] remove usage of Before/AfterTargets\" (#2795) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/jonathanpeppers/MSBuildIncrementalClean\r\n\r\nThrough research into MSBuild, there are two problem we generally want\r\nto fix:\r\n\r\n* We have targets we want to run *before* `IncrementalClean`. Our\r\n  current implementation uses a private MSBuild target to achieve\r\n  this.\r\n* We have use of `BeforeTargets` and `AfterTargets`, which causes some\r\n  problems.\r\n\r\nOne problem we have, is that usage of `AfterTargets` causes C#\r\ncompiler errors to produce extra (and confusing errors):\r\n\r\n    MainActivity.cs(9,7): error CS0246: The type or namespace name 'ClassLibrary1' could not be found (are you missing a using directive or an assembly reference?)\r\n\r\nWould also trigger this:\r\n\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2160,5): error MSB4018: The \"LinkAssemblies\" task failed unexpectedly.\r\n    System.IO.FileNotFoundException: Could not load assembly 'App1, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\n        File name: 'App1.dll'\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters)\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.GetAssembly(String fileName)\r\n        at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n        at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\n        at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n        at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\\Users\\joaqu\\source\\repos\\ClassLibrary21\\App1\\App1.csproj]\r\n\r\nAnd to make matters worse, the noisy/ignorable error is displayed\r\nfirst in the list in the IDE!\r\n\r\nGoing through our targets here, there was a decent bit of rework\r\nneeded. I also updated our MSBuild \"best practices\" docs.\r\n\r\n## IncrementalClean ##\r\n\r\nUsing a new technique I figured out:\r\n\r\n    <PropertyGroup>\r\n      <!--Add to this property as needed here-->\r\n      <_BeforeIncrementalClean>\r\n        _AddFilesToFileWrites;\r\n      </_BeforeIncrementalClean>\r\n      <CoreBuildDependsOn>\r\n        $([MSBuild]::Unescape($(CoreBuildDependsOn.Replace('IncrementalClean;', '$(_BeforeIncrementalClean);IncrementalClean;'))))\r\n      </CoreBuildDependsOn>\r\n    </PropertyGroup>\r\n\r\nWe can specify targets that need to run *before* `IncrementalClean`\r\nwithout using `BeforeTargets`.\r\n\r\nI then went through and fixed the following targets:\r\n\r\n* `_AddFilesToFileWrites`\r\n* `_CompileDex`\r\n* `_PrepareAssemblies`\r\n\r\n## _SetupApplicationJavaClass ##\r\n\r\nThis target had:\r\n\r\n    <Target Name=\"_SetupApplicationJavaClass\" AfterTargets=\"_ResolveMonoAndroidSdks\" DependsOnTargets=\"$(_BeforeSetupApplicationJavaClass)\">\r\n\r\nI moved the contents of this target to `_ResolveMonoAndroidSdks`.\r\n\r\nUsage of `$(_BeforeSetupApplicationJavaClass)` will need to change to\r\nuse `$(_ResolveMonoAndroidSdksDependsOn)` instead.\r\n\r\n## _ResolveMonoAndroidFramework ##\r\n\r\nThis target was empty, and I could not find anything using it.\r\n\r\n    <Target Name=\"_ResolveMonoAndroidFramework\" DependsOnTargets=\"GetReferenceAssemblyPaths\" />\r\n\r\nI removed it, and used `GetReferenceAssemblyPaths` where applicable.\r\n\r\n## _SetLatestTargetFrameworkVersion ##\r\n\r\n`_CreateAapt2VersionCache` was using\r\n`AfterTargets=\"_SetLatestTargetFrameworkVersion\"`, so this target\r\nneeded to be reworked.\r\n\r\nI renamed `_SetLatestTargetFrameworkVersion` to `_ResolveSdks`.\r\n\r\nI created a new, empty `_SetLatestTargetFrameworkVersion` target that\r\ndepends on:\r\n\r\n* `_ResolveSdks` then\r\n* `_CreateAapt2VersionCache`\r\n\r\n## Changes needed in monodroid ##\r\n\r\n* Usage of `$(_BeforeSetupApplicationJavaClass)` will need to use\r\n  `$(_ResolveMonoAndroidSdksDependsOn)`\r\n* Need to do a general audit for `BeforeTargets` & `AfterTargets`"},{"Id":"9185836389","Type":"IssuesEvent","CreatedAt":"2019-03-05T21:08:11","Actor":"eduardo-rta","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2794","RelatedDescription":"Opened issue \"MinSdkVersion being replaced by the targetSdkVersion in the output of AndroidManifest.xml\" (#2794) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Just created a brand new solution with Android (Native)\r\n2. Added another android application to the same solution. \r\n3. The second one will not run (Sometimes not even the first one)\r\n\r\nTested with Beta/Stable version\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nSet MinSdkTarget target to a value and the output AndroidManifest.Xml should keep this value\r\n\r\n### Actual Behavior\r\n\r\nMinSdkTarget is being replaced by whatever I have in the Target version\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.8.2 (build 1)\r\nInstallation UUID: 03888467-08f3-4c90-8c92-6e56438625df\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.0.0.0 ( / b40230c0)\r\n\r\n\tPackage version: 516000221\r\n\r\nMono Framework MDK\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\nNuGet\r\nVersion: 4.8.0.5385\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.8\r\n\t2.1.7\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.504/Sdks\r\nSDK Versions:\r\n\t2.1.504\r\n\t2.1.503\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nUpdater\r\nVersion: 11\r\n\r\nApple Developer Tools\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\nXamarin.Mac\r\nVersion: 5.2.1.15 (Visual Studio Community)\r\nHash: d60abd198\r\nBranch: \r\nBuild date: 2019-02-01 12:23:30-0500\r\n\r\nXamarin.iOS\r\nVersion: 12.2.1.15 (Visual Studio Community)\r\nHash: d60abd198\r\nBranch: d15-9\r\nBuild date: 2019-02-01 12:23:29-0500\r\n\r\nXamarin.Android\r\nVersion: 9.1.8.0 (Visual Studio Community)\r\nAndroid SDK: /Users/eduardoappolinario/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t4.3 (API level 18)\r\n\t\t4.4 (API level 19)\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 28.0.3\r\n\r\nMicrosoft Mobile OpenJDK\r\nJava SDK: /Users/eduardoappolinario/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nAndroid Device Manager\r\nVersion: 7.8.1.0\r\nHash: 8924ea4a\r\n\r\nXamarin Inspector\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 708020001\r\nGit revision: 13e0e5b7e85ffe742957e6f204bab5c06c644f0e\r\nBuild date: 2019-02-27 19:33:14+00\r\nBuild branch: release-7.8\r\nXamarin extensions: 23eaa7c9cdc9a3f55be7bb87b485a790ec82ef25\r\n\r\nOperating System\r\nMac OS X 10.14.3\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Thu Dec 20 20:46:53 PST 2018\r\n    root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9185413058","Type":"PullRequestEvent","CreatedAt":"2019-03-05T19:56:18","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2793","RelatedDescription":"Opened pull request \"[build] Publish API Compatibility Checks\" (#2793) at xamarin/xamarin-android","RelatedBody":"The `make run-api-compatibility-tests` target may create a set of HTML\r\nfiles within `bin/Build$(Configuration)/compatibility`, which would\r\ncreate an **API Compatibility Checks** \"side-bar\" for *freestyle*\r\nbuilds, reporting any API breakage.\r\n\r\nThis functionality is lost with the new Pipeline builds.\r\n\r\nAdd a `publishHTML` invocation to `build.groovy` so that API brekage\r\ncan be nicely reported when it occurs.\r\n\r\nAdditionally, update `tests/api-compatibility` so that the test\r\nresults are placed into the `bin/Test$(Configuration)` directory, not\r\n`bin/Build$(Configuration)`, and update `make package-test-results` to\r\ninclude the API compatibility results."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9187906564","Type":"IssuesEvent","CreatedAt":"2019-03-06T05:12:23","Actor":"robinne","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5467","RelatedDescription":"Opened issue \"[Enhancement] Provide List View Add editable entry item, auto focus Entry\" (#5467) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nUpon adding a new object to a bound ListView (add to underlying list of objects in ViewModel), allow a programmatic way to focus the first (typically only) entry field in the new row. Users are used to new entry fields automatically being focused and ready to type. Similar to iOS \"Reminders\" where the list is editable. But in this case, a command has added a new entry to the end of the list.\r\n\r\n## API Changes\r\nidea:\r\nAdd an event to listview when a new item has been added to item source. (ChildAdded does not appear to be an event for this as it does not fire).\r\n\r\nAdd the ability to access the UI elements that make up the DataTemplate - . e.g.\r\nlistView[lastindex].FindByName(\"entryField\").Focus();\r\nor\r\nlistView.LastDataTemplate().FindByName(\"entryField\").Focus();\r\n\r\nSome way to get at the entry field in the last row to focus it. Knowing that \"entryField\" is not unique in the list and we need to get access to the specific row's data template. Perhaps without using an x:name.\r\n\r\n## Intended Use Case\r\nThis would be used in a list with an \"Add\" menu item. User would remain on the list page and automatically scrolled to the bottom, entered into the entry field, keyboard displayed and not covering entry field. The only piece missing, that I can see, is the ability to find the last data template and focus it's entry field.\r\n\r\nIdeally this would be a feature of the list, without having to handle it. But, would at least like better access to the UI elements. Apologies if this already exists, or is done another way. "},{"Id":"9187353378","Type":"IssuesEvent","CreatedAt":"2019-03-06T02:30:44","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5466","RelatedDescription":"Opened issue \"[Shell] Cannot navigate to a route\" (#5466) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\n\r\nNo matter what I try to navigate to by URI, I get this error:\r\n\r\n```\r\nSystem.NotImplementedException: The method or operation is not implemented.\r\n  at Xamarin.Forms.Shell.GoToAsync (Xamarin.Forms.ShellNavigationState state, System.Boolean animate) [0x000d8] in D:\\a\\1\\s\\Xamarin.Forms.Core\\Shell\\Shell.cs:382 \r\n  at Demos.ViewModels.DemoViewModel.HandleVisualNav (System.String page) [0x00035] in /work/TheLittleThingsPlayground/TheLittleThingsPlayground/ViewModels/DemoViewModel.cs:35 \r\n```\r\n\r\nIn AppShell.xaml.cs I register the route like this:\r\n\r\n```\r\nRouting.RegisterRoute(\"buttons\", typeof(ButtonsPage));\r\n```\r\n\r\nAnd then in the VM call the `GoToAsync` (page is \"buttons\"):\r\n\r\n```\r\nawait Shell.CurrentShell.GoToAsync($\"{page}\", true);\r\n```\r\n\r\nI've also tried:\r\n\r\n```\r\nawait Shell.CurrentShell.GoToAsync($\"app://root/ShellItem14/three_six/{page}\", true);\r\nawait Shell.CurrentShell.GoToAsync($\"app:///ShellItem14/three_six/{page}\", true);\r\nawait Shell.CurrentShell.GoToAsync($\"/{page}\", true);\r\n```\r\n\r\nThinking I could use the relative navigation that @paymicro added in #4977 . \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0.220655\r\n"},{"Id":"9187100664","Type":"IssuesEvent","CreatedAt":"2019-03-06T01:24:48","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5053","RelatedDescription":"Closed issue \"IntelliSense error XF VS2017 \" (#5053) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI have `ListView `in xaml with `x:Name` name is `myList` it is showing error(red lines) in `ContentPage` (.cs)\r\n\r\nXaml file code\r\n\r\n```\r\n<StackLayout>\r\n            <ListView x:Name=\"mylist\">\r\n            </ListView>\r\n        </StackLayout>\r\n\r\n```\r\nContentPage code\r\n\r\n`mylist.ItemsSource = Items;`\r\n### Steps to Reproduce\r\n\r\n1. Create xamarin forms project.\r\n2.  Add above code\r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-60000-00001-AA519\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017   00369-60000-00001-AA519\r\nMicrosoft Visual C++ 2017\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.2046\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.779 (d15-8@ff915e800)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.15.12 (d7ff6f39c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.118 (4217ee9)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.1.0.15 (cbfb047)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n\r\n### Screenshots\r\n![listerror2](https://user-images.githubusercontent.com/19743421/51676101-a232c780-1ffb-11e9-9546-d4395688278a.png)\r\n\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\nLink for more information\r\n\r\nhttps://stackoverflow.com/questions/54329681/listview-is-available-only-for-android-error\r\n\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9187063013","Type":"IssuesEvent","CreatedAt":"2019-03-06T01:15:13","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4901","RelatedDescription":"Reopened issue \"[UWP] Tapped does not fire on ViewCell\" (#4901) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nViewCell's Tapped event is not firing in a ListView.\r\n\r\nThis is similar to (possibly a duplicate of) #2318.\r\n\r\n### Steps to Reproduce\r\n\r\n1. In Control Gallery, navigate to Issue 935. \r\n2. Tap on \"I have been selected:\"\r\n\r\n### Expected Behavior\r\n\r\nText in the cell changes to \"I have been selected:1\".\r\n\r\n### Actual Behavior\r\n\r\nText does not change.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0\r\n"},{"Id":"9187058388","Type":"IssuesEvent","CreatedAt":"2019-03-06T01:14:05","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5465","RelatedDescription":"Opened issue \"[UWP] Issue2927 failing and Tapped is passing the wrong value in for Item\" (#5465) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThis is a little tricky to explain or I just confused myself while working on this\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/3400\r\n\r\nAppears to have fixed https://github.com/xamarin/Xamarin.Forms/issues/4901 because it made it so that two (maybe more) wrongs made a right\r\n\r\nIf you run *Issue2927* on master it will crash because PR https://github.com/xamarin/Xamarin.Forms/pull/3400 made it so the BindingContext gets passed into the ItemTapped event args but what should be passed into ItemTapped is the View not the BindingContext\r\n\r\nThe reason this seems to have worked is that there is a bug on UWP where if the BindingContext implements a Cell then the BindingContext is used as the template rather than the template.  *Issue 935* masks this behavior because the ItemSource is using the same cell type as the template.  \r\n\r\nIf you run *Issue 935* with pre PR *3400* changes the Tapped event does in fact fire. The problem is that it's firing against the incorrectly renderered Cell Control so the changes don't take effect on the view.\r\n\r\nFrom what I can tell this happens because the CellControl on UWP doesn't use the TemplatedItems list to create controls it just goes right the template on the list View\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/5e133758ab6cbf9b953ebc159eb581b3907cee3d/Xamarin.Forms.Platform.UAP/CellControl.cs#L314\r\n\r\nWhere as the other platforms go via the TemplatedItems List\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/4cfa82569dd74858849eff6bd30cdf1b6ce7552c/Xamarin.Forms.Platform.Android/Renderers/ListViewAdapter.cs#L539\r\n\r\n\r\nI have a branch I've started working on over here\r\nhttps://github.com/xamarin/Xamarin.Forms/tree/fix_uwp_cell\r\n\r\nSome of the ideas are rough and I don't think it works with grouping or TableViews yet\r\nBut it does fix the issues presented by  *Issue2927* and  *Issue 935* \r\n\r\n### Steps to Reproduce\r\n\r\n*Issue2927* crashes\r\nif you fix the crash on *Issue2927* \r\nthe make sure *Issue 935* still works\r\n\r\n### Expected Behavior\r\n*Issue 935* and *Issue2927*  should be able to simultaneously work\r\n\r\n### Actual Behavior\r\nthey don't\r\n\r\n"},{"Id":"9187038791","Type":"PullRequestEvent","CreatedAt":"2019-03-06T01:08:57","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5464","RelatedDescription":"Closed pull request \"Fix build break when building on command line\" (#5464) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix build break when using command line that gums up my `.create-nuget.bat` file (and prob any other tools that builds from the cmd line in order to build a private nuget package):\r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets(1\r\n86,5): error : Your project file doesn't list 'win' as a \"RuntimeIdentifier\". You should add 'win' to the \"RuntimeIdent\r\nifiers\" property in your project file and then re-run NuGet restore. [X:\\git\\forms0\\Xamarin.Forms.Core.Design\\Xamarin.F\r\norms.Core.Design.csproj]\r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets(1\r\n86,5): error : Your project file doesn't list 'win' as a \"RuntimeIdentifier\". You should add 'win' to the \"RuntimeIdent\r\nifiers\" property in your project file and then re-run NuGet restore. [X:\\git\\forms0\\Xamarin.Forms.Maps.Design\\Xamarin.F\r\norms.Maps.Design.csproj]\r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets(1\r\n86,5): error : Your project file doesn't list 'win' as a \"RuntimeIdentifier\". You should add 'win' to the \"RuntimeIdent\r\nifiers\" property in your project file and then re-run NuGet restore. [X:\\git\\forms0\\Xamarin.Forms.Xaml.Design\\Xamarin.F\r\norms.Xaml.Design.csproj]\r\n"},{"Id":"9186679828","Type":"PullRequestEvent","CreatedAt":"2019-03-05T23:41:51","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5464","RelatedDescription":"Opened pull request \"Fix build break when building on command line\" (#5464) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix build break when using command line that gums up my `.create-nuget.bat` file (and prob any other tools that builds from the cmd line in order to build a private nuget package):\r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets(1\r\n86,5): error : Your project file doesn't list 'win' as a \"RuntimeIdentifier\". You should add 'win' to the \"RuntimeIdent\r\nifiers\" property in your project file and then re-run NuGet restore. [X:\\git\\forms0\\Xamarin.Forms.Core.Design\\Xamarin.F\r\norms.Core.Design.csproj]\r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets(1\r\n86,5): error : Your project file doesn't list 'win' as a \"RuntimeIdentifier\". You should add 'win' to the \"RuntimeIdent\r\nifiers\" property in your project file and then re-run NuGet restore. [X:\\git\\forms0\\Xamarin.Forms.Maps.Design\\Xamarin.F\r\norms.Maps.Design.csproj]\r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets(1\r\n86,5): error : Your project file doesn't list 'win' as a \"RuntimeIdentifier\". You should add 'win' to the \"RuntimeIdent\r\nifiers\" property in your project file and then re-run NuGet restore. [X:\\git\\forms0\\Xamarin.Forms.Xaml.Design\\Xamarin.F\r\norms.Xaml.Design.csproj]\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9185151811","Type":"PullRequestEvent","CreatedAt":"2019-03-05T19:14:45","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5726","RelatedDescription":"Opened pull request \"[generator] Use WeakDelegate in EventAndDelegateMismatch check\" (#5726) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/5724\r\n- In some cases, such as surfacing an instance created from ObjC the\r\ntyped delegates can return null even if a instance is assigned (if it is not bound as a managed type).\r\n- This means you can accidentally override the delegate without an exception.\r\n- We can use WeakDelegate in our checks\r\n- One type in our build complained, since it did not have a WeakDelegate. Easy to add. "},{"Id":"9185070117","Type":"PullRequestEvent","CreatedAt":"2019-03-05T19:01:29","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5678","RelatedDescription":"Merged pull request \"[d16-0] [xm][msbuild] Fix full profile FrameworkList file\" (#5678) at xamarin/xamarin-macios","RelatedBody":"- Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/801867\r\n  System.Memory.dll not being copied anywhere when Roslyn package is referenced\r\n  The issue was that the XM FrameworkList was shared for the 2 profiles and there are differences. The Full profile for instance doesn't have `System.Memory` and that causes some issues with Nuget package references.\r\n- Updated tests to report issues against the XM Full and Mobile Framework lists\r\n- Now using 2 separate XM FrameworkList files (updated makefile) since the list of assemblies is different and that's expected by the mono team.\n\nBackport of #5674.\n\n/cc @VincentDondain "},{"Id":"9185023342","Type":"PullRequestEvent","CreatedAt":"2019-03-05T18:54:04","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5689","RelatedDescription":"Merged pull request \"[msbuild][tests] Clarify FrameworkListTest failure message\" (#5689) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9185011895","Type":"IssuesEvent","CreatedAt":"2019-03-05T18:52:14","Actor":"dansiegel","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5725","RelatedDescription":"Opened issue \"Fonts missing in Release Build\" (#5725) at xamarin/xamarin-macios","RelatedBody":"## Description\r\n\r\nAs discussed with @spouliot in Gitter, when building locally fonts are included the finalized app, however when building on Azure DevOps for Release with the Distribution (Enterprise) cert, the custom fonts for Font Awesome are missing from the app resulting in a bunch of broken icons. \r\n\r\n### Steps to Reproduce\r\n\r\nI have only been able to get this problem to present while building with a Production Enterprise certificate on Azure DevOps. Building locally I do not experience any problems. \r\n\r\n### Expected Behavior\r\n\r\nBundled resources should always be bundled....\r\n\r\n### Actual Behavior\r\n\r\nBundled resources are missing in Release build on Azure DevOps. Note that the actual files are present in the output directory (bin/iPhone/Release/{appname}.app/) though they are missing from the generated IPA. \r\n\r\n### Build Logs\r\n\r\nThe following are the abbreviated logs from the Azure DevOps build.\r\n\r\n```\r\n_CopyResourcesToBundle:\r\n  Copying file from '/Users/vsts/agent/2.147.1/work/1/s/src/platforms/MyApp.iOS/Resources/fa5pro-brands.otf' to '/Users/vsts/agent/2.147.1/work/1/s/src/platforms/MyApp.iOS/bin/iPhone/Release/MyApp.iOS.app/fa5pro-brands.otf'\r\n  Copying file from '/Users/vsts/agent/2.147.1/work/1/s/src/platforms/MyApp.iOS/Resources/fa5pro-light.otf' to '/Users/vsts/agent/2.147.1/work/1/s/src/platforms/MyApp.iOS/bin/iPhone/Release/MyApp.iOS.app/fa5pro-light.otf'\r\n  Copying file from '/Users/vsts/agent/2.147.1/work/1/s/src/platforms/MyApp.iOS/Resources/fa5pro-regular.otf' to '/Users/vsts/agent/2.147.1/work/1/s/src/platforms/MyApp.iOS/bin/iPhone/Release/MyApp.iOS.app/fa5pro-regular.otf'\r\n  Copying file from '/Users/vsts/agent/2.147.1/work/1/s/src/platforms/MyApp.iOS/Resources/fa5pro-solid.otf' to '/Users/vsts/agent/2.147.1/work/1/s/src/platforms/MyApp.iOS/bin/iPhone/Release/MyApp.iOS.app/fa5pro-solid.otf'\r\n```\r\n\r\nThe following are the abbreviated logs from the local VS Mac 2019 build.\r\n\r\n```\r\nTarget _CopyResourcesToBundle:\r\n  Building target \"_CopyResourcesToBundle\" completely.\r\n  Output file \"bin/iPhone/Debug/device-builds/iphone9.2-12.1/MyApp.iOS.app/Assets.car\" does not exist.\r\n  Output file \"bin/iPhone/Debug/device-builds/iphone9.2-12.1/MyApp.iOS.app/fa5pro-brands.otf\" does not exist.\r\n  Output file \"bin/iPhone/Debug/device-builds/iphone9.2-12.1/MyApp.iOS.app/fa5pro-light.otf\" does not exist.\r\n  Output file \"bin/iPhone/Debug/device-builds/iphone9.2-12.1/MyApp.iOS.app/fa5pro-regular.otf\" does not exist.\r\n  Output file \"bin/iPhone/Debug/device-builds/iphone9.2-12.1/MyApp.iOS.app/fa5pro-solid.otf\" does not exist.\r\n    Using \"SmartCopy\" task from assembly \"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Tasks.dll\".\r\n  Task \"SmartCopy\"\r\n      Copying file from '/Users/dansiegel/Repos/MyApp/src/platforms/MyApp.iOS/Resources/fa5pro-brands.otf' to '/Users/dansiegel/Repos/MyApp/src/platforms/MyApp.iOS/bin/iPhone/Debug/device-builds/iphone9.2-12.1/MyApp.iOS.app/fa5pro-brands.otf'\r\n    Copying file from '/Users/dansiegel/Repos/MyApp/src/platforms/MyApp.iOS/Resources/fa5pro-light.otf' to '/Users/dansiegel/Repos/MyApp/src/platforms/MyApp.iOS/bin/iPhone/Debug/device-builds/iphone9.2-12.1/MyApp.iOS.app/fa5pro-light.otf'\r\n    Copying file from '/Users/dansiegel/Repos/MyApp/src/platforms/MyApp.iOS/Resources/fa5pro-regular.otf' to '/Users/dansiegel/Repos/MyApp/src/platforms/MyApp.iOS/bin/iPhone/Debug/device-builds/iphone9.2-12.1/MyApp.iOS.app/fa5pro-regular.otf'\r\n    Copying file from '/Users/dansiegel/Repos/MyApp/src/platforms/MyApp.iOS/Resources/fa5pro-solid.otf' to '/Users/dansiegel/Repos/MyApp/src/platforms/MyApp.iOS/bin/iPhone/Debug/device-builds/iphone9.2-12.1/MyApp.iOS.app/fa5pro-solid.otf'\r\n```\r\n\r\n### Example Project \r\n\r\n[FontInclusionIssue.zip](https://github.com/xamarin/xamarin-macios/files/2932348/FontInclusionIssue.zip)\r\n"},{"Id":"9184790978","Type":"IssuesEvent","CreatedAt":"2019-03-05T18:16:11","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5724","RelatedDescription":"Opened issue \"EnsureEventAndDelegateAreNotMismatched\\EnsureDelegateAssignIsNotOverwritingInternalDelegate use Delegates and thus don't interact well with surfaced typed\" (#5724) at xamarin/xamarin-macios","RelatedBody":"Due to https://github.com/xamarin/xamarin-macios/issues/5723 the typed delegate classes return null if you don't bind the specific unmanaged types.\r\n\r\nThis does not interact well with the EnsureEventAndDelegateAreNotMismatched\\EnsureDelegateAssignIsNotOverwritingInternalDelegate code, which tries hard to scream if using a C# event will unset a set delegate.\r\n\r\n### Steps to Reproduce\r\n\r\nSee steps to reproduce for https://github.com/xamarin/xamarin-macios/issues/5723 and add a line trying to set the delegate for x. Note that we don't scream.\r\n\r\n### Expected Behavior\r\n\r\nWe should throw inside EnsureEventAndDelegateAreNotMismatched\\EnsureDelegateAssignIsNotOverwritingInternalDelegat\r\n\r\n### Actual Behavior\r\n\r\nWe should act the same as managed delegate stomping.\r\n\r\n### Environment\r\nmacios master"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":16,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":42,"FavoriteCount":18,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":97,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":14,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":71,"FavoriteCount":31,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":21,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":26,"RawContent":null},{"Id":"1097603017375993857","CreatedAt":"2019-02-18T21:05:26+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 101: Command Parameters: https://t.co/rwzzq9yQib\n\n.@JamesMontemagno takes us through a new mini-serie… https://t.co/ZFInvKFhSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":110,"FavoriteCount":48,"RawContent":null},{"Id":"1096561048562384898","CreatedAt":"2019-02-16T00:05:01+00:00","UserScreenname":"xamarinhq","Text":"The #Xamarin Developer Blog is migrating to a new platform with a modern, clean design and powerful features that m… https://t.co/nJUxXItfe8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1095804816121581570","CreatedAt":"2019-02-13T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio Mobile Dev Podcast is out. In this episode, @CodeMillMatt &amp; @JamesMontemagno discuss the latest &amp;… https://t.co/SPEvfxFuLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":14,"RawContent":null},{"Id":"1095445655076700162","CreatedAt":"2019-02-12T22:12:51+00:00","UserScreenname":"xamarinhq","Text":"To provide the best user experience we need access to the current network state of our users’ devices.\n\n...new from… https://t.co/w2ZGMgKqli","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":25,"RawContent":null},{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null},{"Id":"1093196382901547008","CreatedAt":"2019-02-06T17:15:02+00:00","UserScreenname":"xamarinhq","Text":"On a recent #XamarinShow, Mike Parker from the Microsoft Mobile Customer Advisory Team that shows us how to easily… https://t.co/jdjf2oZXwI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":50,"FavoriteCount":18,"RawContent":null},{"Id":"1092542167078326279","CreatedAt":"2019-02-04T21:55:25+00:00","UserScreenname":"xamarinhq","Text":"Walk through some techniques for separating the concerns of dev'ing a C/C++ library, a C# wrapper, &amp; a mobile app s… https://t.co/W1RmRSHzXZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":37,"RawContent":null},{"Id":"1091455153868296201","CreatedAt":"2019-02-01T21:56:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing .NET Foundation Open Membership. We're making some big changes to expand the #dotNET Foundation. We’re i… https://t.co/iePYJUdean","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":39,"RawContent":null},{"Id":"1091387761297362944","CreatedAt":"2019-02-01T17:28:13+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. Today, @JamesMontemagno highlights API of the Week, App Information; which gi… https://t.co/WlU6hQHbNl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":67,"FavoriteCount":23,"RawContent":null},{"Id":"1090678537491808256","CreatedAt":"2019-01-30T18:30:01+00:00","UserScreenname":"xamarinhq","Text":"Check out this super-interesting use-case for creating complex UI using FastGrid for Xamarin.Forms with many cell v… https://t.co/SNff8XhdJ3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":100,"FavoriteCount":43,"RawContent":null},{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":29,"RawContent":null}]}},"RunOn":"2019-03-06T05:30:54.1619975Z","RunDurationInMilliseconds":2662}