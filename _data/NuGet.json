{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10648294365","Type":"PullRequestEvent","CreatedAt":"2019-10-17T00:58:58","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7619","RelatedDescription":"Merged pull request \"[DB Migration] Use new EF6.3 and remove the fix. \" (#7619) at NuGet/NuGetGallery","RelatedBody":"Entity Framework 6.3 has released, and provide another way to pass DbContext to the Migrator;\r\nDepend on EF6.3 and remove the hacky fix.\r\n\r\nRef:\r\nhttps://github.com/aspnet/EntityFramework6/commit/9690d3c21e98cd85a6a5e8312af53de286173b22"},{"Id":"10648258405","Type":"IssuesEvent","CreatedAt":"2019-10-17T00:49:55","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7631","RelatedDescription":"Opened issue \"[Deployment] Registration4 migration\" (#7631) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/Engineering/issues/2784\r\n\r\n- [ ] DEV\r\n  - [x] Catalog2registration reg4;\r\n  - [ ] E2E test configuration to allow both reg3 and reg4 in search responses;\r\n  - [ ] Configuration for all jobs to use reg4 and for c2azs specifically to wait for both reg3 and reg4;\r\n  - [ ] Catalog2AzureSearch deployment to wait for both reg3 and reg4 cursors;\r\n  - [ ] Catalog2Monitoring deployment with new configuration;\r\n  - [ ] MonitoringProcessor deployment with new configuration;\r\n  - [ ] CopyAzureContainer deployment with new configuration;\r\n  - [ ] SearchService deplyoment with new configuration;\r\n  - [ ] Service index file update to point to registration4;\r\n- [ ] INT\r\n  - [x] Catalog2registration reg4;\r\n  - [ ] E2E test configuration to allow both reg3 and reg4 in search responses;\r\n  - [ ] Configuration for all jobs to use reg4 and for c2azs specifically to wait for both reg3 and reg4;\r\n  - [ ] Catalog2AzureSearch deployment to wait for both reg3 and reg4 cursors;\r\n  - [ ] Catalog2Monitoring deployment with new configuration;\r\n  - [ ] MonitoringProcessor deployment with new configuration;\r\n  - [ ] CopyAzureContainer deployment with new configuration;\r\n  - [ ] SearchService deplyoment with new configuration;\r\n  - [ ] Service index file update to point to registration4;\r\n- [ ] PROD\r\n  - [x] Catalog2registration reg4;\r\n  - [ ] E2E test configuration to allow both reg3 and reg4 in search responses;\r\n  - [ ] Configuration for all jobs to use reg4 and for c2azs specifically to wait for both reg3 and reg4;\r\n  - [ ] Catalog2AzureSearch deployment to wait for both reg3 and reg4 cursors;\r\n  - [ ] Catalog2Monitoring deployment with new configuration;\r\n  - [ ] MonitoringProcessor deployment with new configuration;\r\n  - [ ] CopyAzureContainer deployment with new configuration;\r\n  - [ ] SearchService deplyoment with new configuration;\r\n  - [ ] Service index file update to point to registration4;\r\n"},{"Id":"10646128327","Type":"IssuesEvent","CreatedAt":"2019-10-16T18:49:46","Actor":"karann-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7630","RelatedDescription":"Opened issue \"Relisting command\" (#7630) at NuGet/NuGetGallery","RelatedBody":"@Kannan1015 commented on [Tue Jan 01 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1246)\n\nGetting unknown command POST when relisting the unlisted package from nuget.exe. \n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 6f5691c1-f008-bbbf-a086-d9e665b5c332\n* Version Independent ID: f255cc99-1041-ca5c-d2e5-5981e450a236\n* Content: [Push and Delete, NuGet API](https://docs.microsoft.com/en-us/nuget/api/package-publish-resource#relist-a-package)\n* Content Source: [docs/api/package-publish-resource.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/api/package-publish-resource.md)\n* Product: **nuget**\n* GitHub Login: @joelverhagen\n* Microsoft Alias: **jver**\n\n---\n\n@loic-sharma commented on [Thu Jan 10 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1246#issuecomment-453262152)\n\nWhat is your package source? What version of nuget.exe are you on?\n\n---\n\n@Kannan1015 commented on [Wed Feb 06 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1246#issuecomment-461005798)\n\nPlease find the details.\r\n\r\nVersion: 4.9.2.5706\r\nPackage Name: All packages which I have an owner. \n\n---\n\n@stale[bot] commented on [Tue Oct 15 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1246#issuecomment-542436136)\n\nThis issue has been automatically marked as stale and closed because it has not had recent activity. Thank you for your contributions.\n\n\n"},{"Id":"10644873480","Type":"IssuesEvent","CreatedAt":"2019-10-16T16:07:20","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7629","RelatedDescription":"Opened issue \"Add pessimistic concurrent control to orchestrator to reduce concurrency issues\" (#7629) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/NuGetGallery/issues/7590."},{"Id":"10636501158","Type":"IssuesEvent","CreatedAt":"2019-10-15T18:32:29","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7628","RelatedDescription":"Opened issue \"[Azure Search] Investigate traffic to legacy search\" (#7628) at NuGet/NuGetGallery","RelatedBody":"There is still large amounts of traffic going to legacy search ([App Insights query](https://ms.portal.azure.com#@33e01921-4d64-4f8c-a055-5bdaffd5e33d/blade/Microsoft_Azure_Monitoring_Logs/LogsBlade/resourceId/%2Fsubscriptions%2F685c4662-53d8-40f9-ac51-926097ede041%2FresourceGroups%2Fnuget-prod-0-v2v3search%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2Fnuget-prod-v2v3search/source/LogsBlade.AnalyticsShareLinkToQuery/q/H4sIAAAAAAAAA22TwW7bMAxA7wX6D5xPCZA2liVb0oBsKNZg6KWHdjsPlESlRmo5tRV0Hfbxk5KmnbGdLJHme6JMD%252FS0pzGO52e%252F4fmBBoLYdimA3Q4%252BAW76GXPz92TAjqANMCu%252Brr%252FBciQc7MPStbgpFjCJJezw8hac7nAfe9t3u0eKVCT6cnni74dH%252BGD7ELENIxQT2Oen1Q7tFjfUuo%252Fran1ZwHIJ6%252BAuYn9BwUE8NUI%252FY967GwcriP0YhzZsZnY%252Fxr67Tu2Fse3DeHlNu8f%252BJW3jzbHH17o72qQ8rM7PAFrvZwfOCgqUdV1roYRgjWikRmaxaoQWjVfMM1VAP8Dp5YpzpxpF5KUR0jm0xjKukAmJdWl5vozv97dfikXWwNSkGlM54SVL9UIrrZtKMzRaYKk8GT8xWUGqQc0FRyGMNElRa46yKqlOSns03b%252Bbpi5Pwvm64VIaErxGLcmRkyJ1W2mvp125SnNvVNnwCgWzxnhb85o0OjK1rQ6u9dVfpqmL1SKdzBOXzAtOWutKSM604krJRk1dxL2ubL6uhosKS%252BN441NMMlmWTInsus%252By1F7Yhv455Fl6tZ5Wh%252Be%252FH%252FcquLvj5N%252FmiV5BmhGLcXbMJiIkbB72OeTacd91OLS%252FCGy%252FD3E2B%252FMCpg2zt59lAbzs5ov%252F4k%252FRIzHz%252BsHRkBkH3A9wNNocH9IJcyIPPQ4Rtm1wq8S3W3LwBx%252Br866rAwAA)):\r\n\r\n```\r\nrequests\r\n| where timestamp > ago(1d)\r\n| where name in (\"GET /search/diag\", \"GET /search/query\", \"GET /query\", \"GET /autocomplete\")\r\n//| where url !contains \"/search/query?q=packageid:E2E.\" // End-to-end tests\r\n| extend dId = tostring(customDimensions.DeploymentId)\r\n| extend Region =\r\n  iff(dId == \"a755594844164679a1ca264946f81f18\" or dId == \"233d868eef7b47ddacbc138a147a50c3\", \"USNC\",\r\n     iff(dId == \"86b2d4f718ee498996291ab94a08febf\" or dId == \"c4e86a9343a44b7ba14593a720e5c13c\", \"USSC\",\r\n       iff(dId == \"fe4df56377be435a97eded74a7529f98\" or dId == \"d293fb80632a41cbbfc535e9adeb5c2c\", \"EA\",\r\n         iff(dId == \"15493afe371f43e99924731983887688\" or dId == \"e3f92c47a56342a0bd36f3f971700184\", \"SEA\", \"Unknown\")\r\n       )\r\n     )\r\n  )\r\n| extend RegionAndRequestName = strcat(Region, \" \", name) \r\n| summarize count() by bin(timestamp, 30m), RegionAndRequestName, Region, name\r\n| order by count_ desc\r\n| render barchart kind=stacked \r\n```"},{"Id":"10635199957","Type":"PullRequestEvent","CreatedAt":"2019-10-15T15:42:07","Actor":"xavierdecoster","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7622","RelatedDescription":"Merged pull request \"Add configuration support for heartbeat interval to NuGetGallery\" (#7622) at NuGet/NuGetGallery","RelatedBody":"NuGetGallery AI heartbeats currently emit every 15 minutes (default since AI upgrade to v2.10). This PR makes the interval configurable."},{"Id":"10628901032","Type":"PullRequestEvent","CreatedAt":"2019-10-14T23:15:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7627","RelatedDescription":"Merged pull request \"Merge branch 'dev' into master\" (#7627) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10628713950","Type":"PullRequestEvent","CreatedAt":"2019-10-14T22:32:50","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7626","RelatedDescription":"Merged pull request \"Merge branch 'master' into dev\" (#7626) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10648202413","Type":"IssuesEvent","CreatedAt":"2019-10-17T00:35:32","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8100","RelatedDescription":"Closed issue \"Skip Duplicate switch added to dotnet.exe nuget push command\" (#8100) at NuGet/Home","RelatedBody":"## Details about Problem\r\nRelated Issue: https://github.com/NuGet/Home/issues/1630\r\n\r\nIn the related issue, NuGet.exe push was given a new option, -SkipDuplicate. This option needs to be made available in DotNet.exe nuget push as --skip-duplicate.\r\n\r\nNuGet product used: dotnet.exe\r\n"},{"Id":"10648137921","Type":"IssuesEvent","CreatedAt":"2019-10-17T00:18:55","Actor":"xyz0822","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8712","RelatedDescription":"Opened issue \"When can we view the source code through F12 when editing, not just when debugging?\" (#8712) at NuGet/Home","RelatedBody":"When can we view the source code through F12 when editing, not just when debugging? Instead of viewing the method declaration or the source code only by downloading symbols when debugging.\r\n\r\nSimilar to itellij idea, you can download and view the source code automatically when editing\r\n"},{"Id":"10648024964","Type":"IssuesEvent","CreatedAt":"2019-10-16T23:51:55","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8711","RelatedDescription":"Opened issue \"Make nuget work if one of the sources is not accessable\" (#8711) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/762595/make-nuget-work-if-one-of-the-sources-is-not-acces.html)._\n\n---\nWe host our own private nuget services, that some devs use via a vpn.\n\nAllot of the time they are not on the vpn. When they are not on the vpn it is not possible to intsall *any* nuget packages from *any* source. This seams really dumb. Its a PITA to have to constantly go into settings to keep enabling and re-enabling available package sources all the time.\n\nWe need nuget to just continue, and maybe just report a warning that a source is not available. But continue to use the sources that are available.\n\n---\n### Original Comments\n\n#### Jane Wu [MSFT] on 10/8/2019, 05:26 AM: \n\n<p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We’ll provide an update once the issue has been triaged by the product team.</p>\n"},{"Id":"10648017902","Type":"IssuesEvent","CreatedAt":"2019-10-16T23:50:15","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8710","RelatedDescription":"Opened issue \"NuGet package manager search box doesn't show previous items until something is typed in\" (#8710) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/748330/nuget-package-manager-search-box-doesnt-show-previ.html)._\n\n---\nNuGet package manager search box doesn't show previous items until something is typed in. For instance, if I previously searched for `EntityFramework`, then next time I want to add it, I press drop down button on combobox, but the list is empty. But if I type `E`, then `EntityFramework` *does* appear.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/26/2019, 02:02 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"10647934080","Type":"IssuesEvent","CreatedAt":"2019-10-16T23:30:20","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8709","RelatedDescription":"Opened issue \"Show version of nuget package ref in properties window\" (#8709) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/idea/772962/show-version-of-nuget-package-ref-in-properties-wi.html)._\n\n---\nIt would be handy to be able to see the version of Nuget package ref in the property window instead of having to pull up the manage nuget packages window\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/11/2019, 00:43 AM: \n\nWe have converted this feedback item from problem to idea. This change was done to better reflect the feedback's nature.\n#### Jane Wu [MSFT] on 10/11/2019, 08:00 PM: \n\n<p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We’ll provide an update once the issue has been triaged by the product team.</p>\n"},{"Id":"10647696699","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:39:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8639","RelatedDescription":"Closed issue \"Lock file validation fails for projects with <RuntimeIdentifiers> set in SDK 3.0.100\" (#8639) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: dotnet.exe\r\n\r\ndotnet.exe --version: 3.0.100\r\n\r\nWorked before?: Yes, with sdk version 2.2.402\r\n\r\n## Automated Repro\r\n1. Download [netSdk3_rid_lockFile_repro.zip](https://github.com/NuGet/Home/files/3664781/netSdk3_rid_lockFile_repro.zip)\r\n2. Extract\r\n3. Run repro.bat\r\n\r\n## Manual repro steps\r\n\r\n1. Create a .csproj resembling this:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <RuntimeIdentifiers>win-x64;osx-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n2. `dotnet restore --use-lock-file`\r\n    - This will succeed and write a lock file\r\n3. `dotnet restore --use-lock-file --locked-mode`\r\n    - This will fail with `error NU1004: The packages lock file is inconsistent with the project dependencies` despite the fact  that the file was just generated and nothing has changed.\r\n\r\nTagging @nkolev92 and @rrelyea as FYI."},{"Id":"10647689730","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:38:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8645","RelatedDescription":"Closed issue \"Lock File not properly generated - VS and MSBuild Integration\" (#8645) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\n**NuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):**\r\nVS UI, MSBuild CLI, Nuget.exe\r\n\r\n**NuGet version (x.x.x.xxx):**\r\n- nuget version  5.3.0.6260\r\n- MSBuild  version - 16.3.0+0f4c62fea for .NET Framework\r\n   - Nuget CommonExtension installed version - Nuget.Commands.dll - 5.3.0.6251\r\n\r\n**VS version (if appropriate):**\r\n [Information](https://gist.github.com/carpnick/a275bf0be54960cfa8892eeee9916e0c#file-vs-versioning) \r\n\r\n**OS version (i.e. win10 v1607 (14393.321)):**\r\n10.0.17763 Build 17763 -  Windows Server 2019 Datacenter\r\n\r\n**Worked before? If so, with which NuGet version:**\r\nMSbuild based restore - 15.9.21+g9802d43bc3\r\n  - Project dependend on - NuGet.Build.Tasks.Pack 4.9.2\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nRun all these steps from within Visual Studio 2019 (See version info)\r\n1. Create a new .NET solution with a class library (full framework).\r\n2. Add a nuget reference to Newtonsoft.json (any will do)\r\n3. Edit csproj file and add `<RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>`\r\n4. Reload project.  Build.\r\n5.  Validate the packages.lock.json is generated.  See [example](https://gist.github.com/carpnick/a275bf0be54960cfa8892eeee9916e0c#file-packages-lock-json).\r\n6. Edit CSPROJ again, this time add the following line:\r\n` <RestoreLockedMode>true</RestoreLockedMode>`\r\n7. Reload the project, and attempt to rebuild, 2 times.\r\n\r\nError Received:\r\n`Error\tNU1004\tThe packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Disable the RestoreLockedMode MSBuild property or pass an explicit --force-evaluate option to run restore to update the lock file.\t\t\t1\t\t\r\n`\r\n\r\nMSBuild CLI to reproduce: `& 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\MSBuild.exe' /t:\"clean;Restore\" /p:Configuration=\"Release\" /p:Platform=\"Any CPU\" /p:RestoreLockedMode=\"true\" /p:RestoreNoCache=\"true\"`\r\n\r\nNOTE: We did not stumble on this issue like this, we stumbled on this setting RestoreLockedMode in our CI process to true.  But the above steps produce a reliable easy way to reproduce.\r\n\r\n\r\n## Other suggested things\r\n\r\nOther notes:\r\n\r\n- When you allow MSBuild or VS to ForceEvaluate - it keeps generating incorrect package lock files.\r\n- nuget.exe works as expected  - CLI `C:\\nuget.exe restore -lockedmode -NoCache`\r\n- **What is broken** - Copied Nuget.Clients Source privately from this [tag](https://github.com/NuGet/NuGet.Client/tree/5.3.0.6251).\r\n    - At [this location](https://github.com/NuGet/NuGet.Client/blob/5.3.0.6251/src/NuGet.Core/NuGet.ProjectModel/ProjectLockFile/PackagesLockFileUtilities.cs#L105-L108) I added [this code](https://gist.github.com/carpnick/a275bf0be54960cfa8892eeee9916e0c#file-privatepatch) to my private copy.  When I run with my private version with Visual Studio or MSBuild CLI, I get the [following](https://gist.github.com/carpnick/a275bf0be54960cfa8892eeee9916e0c#file-msbuild-custom-output).  Notice the order is different.  When I run with my private version of nuget.exe I get [this](https://gist.github.com/carpnick/a275bf0be54960cfa8892eeee9916e0c#file-custom-nuget-exe).\r\n\r\n### Workaround available\r\n - Modify lock file after it is generated and modify the order of the .NETFrameworks. (This would be very painful from a developer point of view, but does offer a workaround).\r\n - Another option is to not use MSbuild /t:restore and instead use nuget.exe\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n[ExampleSolution.zip](https://github.com/NuGet/Home/files/3672626/ExampleSolution.zip)\r\n\r\n\r\nPS:\r\nThis was very helpful in debugging down to where the issue was: https://github.com/NuGet/Home/issues/8493#issuecomment-526375416\r\n\r\nThanks @nkolev92 "},{"Id":"10646538111","Type":"IssuesEvent","CreatedAt":"2019-10-16T19:45:05","Actor":"ilatypov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8708","RelatedDescription":"Opened issue \"a nuget.config from an upper directory affected the build\" (#8708) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 4.x\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): \r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. I had an older nuget.config in the upper directory and dotnet restore used it in addition to one in %appdata%\\nuget\\nuget.config. I did not like that.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"10646207375","Type":"IssuesEvent","CreatedAt":"2019-10-16T19:00:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8532","RelatedDescription":"Closed issue \"NuGet.Protocol.Plugins.PluginDiscoveryUtility uses wrong file in non net472 version of library.\" (#8532) at NuGet/Home","RelatedBody":"NuGet Product: API v3\r\nNuGet version v5.2.0\r\n\r\nThere is a mismatch in the source provided for net472 and the netstandard version which will cause the other versions to fail to validated users when using credential providers.\r\n\r\nHere is a copy of the source in the distributed dll in the netstandard version:\r\n`public static IEnumerable<string> GetConventionBasedPlugins(IEnumerable<string> directories)\r\n{\r\n    List<string> list = new List<string>();\r\n    using (IEnumerator<string> enumerator = Enumerable.Where<string>(directories, new Func<string, bool>(null, (IntPtr) Directory.Exists)).GetEnumerator())\r\n    {\r\n        while (enumerator.MoveNext())\r\n        {\r\n            foreach (string text1 in Directory.GetDirectories(enumerator.get_Current()))\r\n            {\r\n                string path = Path.Combine(text1, Path.GetFileName(text1) + \".dll\");\r\n                if (File.Exists(path))\r\n                {\r\n                    list.Add(path);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return list;\r\n}`\r\n\r\nYou can find this source code here: NuGet.Protocol.Plugins.PluginDiscoveryUtility\r\n\r\nAs you can see the extension in the broken version is using .dll instead of .exe.\r\n\r\nLet me know if you need any more information."},{"Id":"10646113437","Type":"IssuesEvent","CreatedAt":"2019-10-16T18:47:54","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5762","RelatedDescription":"Closed issue \"NuGet outdated, check or equivalent functionality\" (#5762) at NuGet/Home","RelatedBody":"Update by @anangaur:\r\n\r\nSpec: [Show outdated packages](https://github.com/NuGet/Home/wiki/Show-outdated-packages) (Status: Incubation)\r\n\r\n----\r\n\r\nWe often find ourselves wishing to do a task during CI, that is only possible with cmdlets available in the package management console. Obviously these cmdlets can't run as part of CI, so we're stuck. Our most recurring painpoint is working out what package updates are available, without actually making modifications - this would let us:\r\n\r\n* Report on out of date packages\r\n* Flag up new major version availability\r\n* Fail builds, if packages we consider to be critical are no longer up to date\r\n\r\nI've submittted a PR with an example naive implementation of this here: https://github.com/NuGet/NuGet.Client/pull/1649\r\n\r\nWould others find this type of feature useful?"},{"Id":"10646102379","Type":"IssuesEvent","CreatedAt":"2019-10-16T18:46:23","Actor":"karann-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8707","RelatedDescription":"Opened issue \"Can't see the result in the VS Experimental Instance\" (#8707) at NuGet/Home","RelatedBody":"@leithmc commented on [Tue Jan 22 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1276)\n\nI'm trying to add a NuGet package to a project template VSIX so the NuGet installs automatically when someone creates a project from the template. I've followed the steps in this doc, but whenever I hit F5 to test the vsix in the experimental instance it deletes the Packages folder that has my .nupkg file. I've tried adding the packages folder to the vsix project but it still doesn't get included in the build. How are we supposed to verify that our project templates actually load the NuGet content?\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: bbf9be6a-e7b0-b9b6-a3e8-8b5de3c6900d\n* Version Independent ID: c12505c9-6f14-7111-2578-5c2664b4515d\n* Content: [NuGet Packages in Visual Studio templates](https://docs.microsoft.com/en-us/nuget/visual-studio-extensibility/visual-studio-templates)\n* Content Source: [docs/visual-studio-extensibility/Visual-Studio-Templates.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/visual-studio-extensibility/Visual-Studio-Templates.md)\n* Product: **nuget**\n* GitHub Login: @karann-msft\n* Microsoft Alias: **karann**\n\n---\n\n@stale[bot] commented on [Tue Oct 15 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1276#issuecomment-542436148)\n\nThis issue has been automatically marked as stale and closed because it has not had recent activity. Thank you for your contributions.\n\n\n"},{"Id":"10646057467","Type":"IssuesEvent","CreatedAt":"2019-10-16T18:40:45","Actor":"karann-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8706","RelatedDescription":"Opened issue \"Programmatically analyze the dependencies\" (#8706) at NuGet/Home","RelatedBody":"@fleed commented on [Fri May 31 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1459)\n\nIs there a library to analyze the csproj structure and programmatically detect the package references?\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: ff707668-94d6-25a5-9139-b18cc1b6b446\n* Version Independent ID: 494847b9-4894-0beb-7ffa-39a2359999fa\n* Content: [NuGet PackageReference format (package references in project files)](https://docs.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files#feedback)\n* Content Source: [docs/consume-packages/Package-References-in-Project-Files.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/consume-packages/Package-References-in-Project-Files.md)\n* Product: **nuget**\n* GitHub Login: @karann-msft\n* Microsoft Alias: **karann**\n\n---\n\n@stale[bot] commented on [Tue Oct 15 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1459#issuecomment-542449554)\n\nThis issue has been automatically marked as stale and closed because it has not had recent activity. Thank you for your contributions.\n\n\n"},{"Id":"10646028428","Type":"IssuesEvent","CreatedAt":"2019-10-16T18:36:54","Actor":"karann-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8705","RelatedDescription":"Opened issue \"nuget update with mono\" (#8705) at NuGet/Home","RelatedBody":"@nelfer commented on [Wed Jun 12 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1472)\n\nHi,\nI noticed the note about `nuget update` doesn't work under `mono` . Is there any updates on this? or any work around? I have a linux machine where I was doing a script to mass update projects (over 100) and saw that it didn't work.\n\nThe projects are .Net 4.7 by the way.\n\nThanks!\n\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 9ffc1aea-bed4-f33a-69e8-b0a339443d94\n* Version Independent ID: ed0d51ba-df92-4e87-211b-2e0f6bc5da0c\n* Content: [NuGet CLI update command](https://docs.microsoft.com/en-us/nuget/tools/cli-ref-update)\n* Content Source: [docs/tools/cli-ref-update.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/tools/cli-ref-update.md)\n* Product: **nuget**\n* GitHub Login: @karann-msft\n* Microsoft Alias: **karann**\n\n---\n\n@stale[bot] commented on [Tue Oct 15 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1472#issuecomment-542449546)\n\nThis issue has been automatically marked as stale and closed because it has not had recent activity. Thank you for your contributions.\n\n\n"},{"Id":"10645985422","Type":"IssuesEvent","CreatedAt":"2019-10-16T18:31:16","Actor":"karann-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8704","RelatedDescription":"Opened issue \"No way to set destination of inherited content files.  Puts them in root.\" (#8704) at NuGet/Home","RelatedBody":"@Magn3s1um commented on [Thu Aug 08 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1608)\n\nI have 3 packages, let call them A, B and C. \r\n\r\nTheir dependencies are as follows: \r\n\r\nC references B, and B references A.  \r\n\r\nA has the following content:\r\n\r\n```\r\n <Content Include=\"Startup\\**\\*.csv\">\r\n     <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </Content>\r\n```\r\n\r\nInside of B, when referencing this project, the files show up correct in the Startup folder.  \r\n\r\nNow when packing B though, these content files are placed at the root.  So in C, the content files of A actually show up in the root directory.,\r\n\r\nThere is no way to set this using the package format.  I want to inherit the folder structures from child dependencies.  \r\n\r\nA picture of what happens in project C can be seen below (the original file structure does not stay intact): \r\n\r\n![image](https://user-images.githubusercontent.com/2190419/62703161-91094100-b9b6-11e9-891f-3d3c7078c87e.png)\r\n\r\n\r\nA work around is as follows: \r\n\r\nExclude content files from B and directly reference A. \r\n\r\nWhile this works, its not ideal, since consumers of package B need to know about package A.\n\n"},{"Id":"10644991692","Type":"IssuesEvent","CreatedAt":"2019-10-16T16:21:56","Actor":"megakid","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8703","RelatedDescription":"Opened issue \"5.3.0 broke our basic *.nuspec usage.\" (#8703) at NuGet/Home","RelatedBody":"Can anyone explain the following:\r\n\r\nWe had a build failure on our CI server today caused by the release of `NuGet.CommandLine 5.3.0` - we have now pinned our build to `5.2.0` to work around the issue.\r\n\r\nHere's our `.nuspec` file:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n  <metadata>\r\n    <id>Squid.FullDeploy</id>\r\n    <version>$version$</version>\r\n    <authors>My Team</authors>    \r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>BALH</description>\r\n    <tags>BLAH</tags>\r\n    <copyright>SOMETHING</copyright>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"*\" exclude=\"*.nuspec\" />\r\n    <file src=\"buildtime-vars.json\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nIt seems the `buildtime-vars.json` is the problem causer but no idea why!\r\n\r\n```\r\nC:\\Projects\\squid3\\src\\Squid.FullDeploy>..\\..\\tools\\NuGet.CommandLine.5.3.0\\tools\\NuGet.exe pack Squid.FullDeploy.nuspec -version 3.43.7\r\nAttempting to build package from 'Squid.FullDeploy.nuspec'.\r\nSuccessfully created package 'C:\\Projects\\squid3\\src\\Squid.FullDeploy\\Squid.FullDeploy.3.43.7.nupkg'.\r\nIndex was outside the bounds of the array.\r\n\r\nC:\\Projects\\squid3\\src\\Squid.FullDeploy>..\\..\\tools\\NuGet.CommandLine.5.2.0\\tools\\NuGet.exe pack Squid.FullDeploy.nuspec -version 3.43.7\r\nAttempting to build package from 'Squid.FullDeploy.nuspec'.\r\nWARNING: NU5119: File 'C:\\Projects\\squid3\\src\\Squid.FullDeploy\\Squid.FullDeploy.3.43.7.nupkg' was not added to the package. Files and folders starting with '.' or ending with '.nupkg' are excluded by default. To include this file, use -NoDefaultExcludes from the commandline\r\nSuccessfully created package 'C:\\Projects\\squid3\\src\\Squid.FullDeploy\\Squid.FullDeploy.3.43.7.nupkg'.\r\nWARNING: NU5110: The script file 'cakebootstrapper.ps1' is outside the 'tools' folder and hence will not be executed during installation of this package. Move it into the 'tools' folder.\r\nWARNING: NU5110: The script file 'deploy.ps1' is outside the 'tools' folder and hence will not be executed during installation of this package. Move it into the 'tools' folder.\r\nWARNING: NU5111: The script file 'cakebootstrapper.ps1' is not recognized by NuGet and hence will not be executed during installation of this package. Rename it to install.ps1, uninstall.ps1 or init.ps1 and place it directly under 'tools'.\r\nWARNING: NU5111: The script file 'deploy.ps1' is not recognized by NuGet and hence will not be executed during installation of this package. Rename it to install.ps1, uninstall.ps1 or init.ps1 and place it directly under 'tools'.\r\n```"},{"Id":"10639805738","Type":"IssuesEvent","CreatedAt":"2019-10-16T05:16:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8688","RelatedDescription":"Closed issue \"Credential providers cause MSBuild crash on second run of RestoreTask\" (#8688) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nThis is the root cause of microsoft/msbuild#4792 and the related .NET Core servicing build failures.\r\n\r\nNuGet product used: .NET Core SDK 3.0.100-preview6 in Arcade\r\n\r\nNuGet version: 5.2.0.6020\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows\r\n\r\nWorked before? If so, with which NuGet version: no\r\n\r\n## Detailed repro steps so we can see the same problem\r\nI experienced this on a repro machine provided by @nkolev92. I don't have a minimized repro but I believe it looks something like this:\r\n\r\n1. Call `RestoreTask` in one project.\r\n2. In the same MSBuild build session, call `RestoreTask` in another project.\r\n3. Experience MSBuild crash `MSB0001: Internal MSBuild Error: ContextID 10 should have been in the ID-to-project file mapping but wasn't!`\r\n\r\n----\r\n\r\nWhat's happening here is this:\r\n\r\n1. The first call to `RestoreTask` creates a new NuGet `ILogger` wrapping a `Microsoft.Build.Utilities.TaskLoggingHelper` associated with that task invocation -- call this logger `$1`.\r\nhttps://github.com/NuGet/NuGet.Client/blob/840b09a4cecda6ae8fd1c07967874fe8061ece63/src/NuGet.Core/NuGet.Build.Tasks/RestoreTask.cs#L103\r\n1. `RestoreTask.ExecuteAsync()` calls [`DefaultCredentialServiceUtility.SetupDefaultCredentialService`](https://github.com/NuGet/NuGet.Client/blob/840b09a4cecda6ae8fd1c07967874fe8061ece63/src/NuGet.Core/NuGet.Credentials/DefaultCredentialServiceUtility.cs#L17-L28), passing that logger.\r\n1. That populates the **static** field [`HttpHandlerResourceV3.CredentialService`](https://github.com/NuGet/NuGet.Client/blob/840b09a4cecda6ae8fd1c07967874fe8061ece63/src/NuGet.Core/NuGet.Protocol/HttpSource/HttpHandlerResourceV3.cs#L40), preserving a link to the `TaskLoggingHelper` in an object with a longer lifetime than the task.\r\n1. The first `RestoreTask` completes.\r\n1. MSBuild tears down logging infrastructure required to log messages from the context of the first `RestoreTask`. Normally this would make `$1` eligible for GC, but it's now referenced from a static.\r\n1. The second `RestoreTask` is called.\r\n1. On this pass through, `HttpHandlerResourceV3.CredentialService` is non-null and not reset to the current `TaskLoggingHelper`.\r\n1. The credential provider is invoked and attempts to log (using `$1`).\r\n1. MSBuild crashes because of the logging infrastructure teardown from step 5."},{"Id":"10639378782","Type":"IssuesEvent","CreatedAt":"2019-10-16T03:27:47","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8679","RelatedDescription":"Closed issue \"Showing message like \" Blocked by package.config\"\" (#8679) at NuGet/Home","RelatedBody":"In VS Manage Nuget Packages window, When choose nuget from browse and see the listed versions, the message showing like   **Blocked by package.config** after under this message all the version again listed. This is for all packages in nuget.org.\r\n\r\nCan anyone tell me the reason why shown that message like that?\r\n![image](https://user-images.githubusercontent.com/56252418/66559927-e8bd5780-eb73-11e9-8bd6-932dd3dc7ef9.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-10-17T05:30:48.0358383Z","RunDurationInMilliseconds":2233}