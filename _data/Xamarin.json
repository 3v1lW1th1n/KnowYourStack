{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8752095733","Type":"IssuesEvent","CreatedAt":"2018-12-14T01:14:30","Actor":"samhouts","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2534","RelatedDescription":"Opened issue \"Minimal Android cross platform project with Microsoft.EntityFrameworkCore gives reference error\" (#2534) at xamarin/xamarin-android","RelatedBody":"_From @davefxy on September 17, 2018 21:16_\n\n<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nCreate a Android cross platform solution without adding any code, add the Microsoft.EntityFrameworkCore\r\nnuget package to both of the projects in the solution, gets the reference error.\r\n### Steps to Reproduce\r\n1. Create a Android cross platform project and add nuget pkg Microsoft.EntityFrameworkCore\r\n\r\n2. Compile\r\n\r\n3. Error\t\tCan not resolve reference: `System.Buffers`, referenced by `System.Memory`. Please add a NuGet package or assembly reference for `System.Buffers`, or remove the reference to `System.Memory`.\tEFAndroidProblem.Android\t\t\t\r\n\r\n\r\n### Expected Behavior\r\n    Clean compile\r\n### Actual Behavior\r\n    Compiles with reference error\r\n### Basic Information\r\n\r\n- Version with issue:\r\nXamarin forms 3.2.0.839982\r\n- Last known good version:\r\n- IDE:\r\n       Visual Studio 2017 (PC) 15.8.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n       Android: 8.1 (Oreo) & 9.0\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n    Xamarin.Forms v3.2.0.839982\r\n    NETStandard.Library   v2.0.3\r\n    Microsoft.EntityFrameworkCore  v2.1.3\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n\n\n_Copied from original issue: xamarin/Xamarin.Forms#3810_"},{"Id":"8751533354","Type":"PullRequestEvent","CreatedAt":"2018-12-13T22:39:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2533","RelatedDescription":"Merged pull request \"[xa-prep-tasks] \"stream\" http requests\" (#2533) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/2271113\r\nContext: http://www.tugberkugurlu.com/archive/efficiently-streaming-large-http-responses-with-httpclient\r\n\r\nWe are still getting random OOM errors on Windows/VSTS:\r\n\r\n    android-toolchain.targets(52,5): Error : Unable to download URL `https://dl.google.com/android/repository/android-ndk-r14b-windows-x86_64.zip` to `C:\\Users\\dlab14\\android-archives\\android-ndk-r14b-windows-x86_64.zip`: Exception of type 'System.OutOfMemoryException' was thrown.\r\n\r\nIt turns out that if you don't specify\r\n`HttpCompletionOption.ResponseHeadersRead`, then the entire request\r\nbody is buffered into a `MemoryStream`! This setting is what signals\r\nthe `HttpClient` to *NOT* buffer anything, so you can stream the file\r\nto disk.\r\n\r\nSince several of our Android SDK/NDK files are ~500MB, we could\r\ndefinitely hit OOM when running several downloads in parallel."},{"Id":"8750806061","Type":"IssuesEvent","CreatedAt":"2018-12-13T20:18:57","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2527","RelatedDescription":"Closed issue \"Visual Studio Community 2019 Preview for Mac can not install xamarin.android 9.1.4.2\" (#2527) at xamarin/xamarin-android","RelatedBody":"INFO [2018-12-13 11:40:57Z]: Updater starting download: xamarin.android-9.1.4-2.pkg\r\nERROR [2018-12-13 11:44:20Z]: Updater download failed: https://download.visualstudio.microsoft.com/download/pr/25eac220-19cc-47b0-b1df-5eaad831089a/873f44bc8311344cf362a9656eda3494/xamarin.android-9.1.4-2.pkg\r\nSystem.Exception: Checksum mismatch for file '/Users/mark/Library/Caches/VisualStudio/8.0/TempDownload/xamarin.android-9.1.4-2.pkg'. Expected: 'e6f5110abb5c7855ee2bbab91f1c64c7'. Actual: 'e83196bf43d5c8c50eb2ef53be3b2d4e'"},{"Id":"8750695289","Type":"PullRequestEvent","CreatedAt":"2018-12-13T19:58:36","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2533","RelatedDescription":"Opened pull request \"[xa-prep-tasks] \"stream\" http requests\" (#2533) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/2271113\r\nContext: http://www.tugberkugurlu.com/archive/efficiently-streaming-large-http-responses-with-httpclient\r\n\r\nWe are still getting random OOM errors on Windows/VSTS:\r\n\r\n    android-toolchain.targets(52,5): Error : Unable to download URL `https://dl.google.com/android/repository/android-ndk-r14b-windows-x86_64.zip` to `C:\\Users\\dlab14\\android-archives\\android-ndk-r14b-windows-x86_64.zip`: Exception of type 'System.OutOfMemoryException' was thrown.\r\n\r\nIt turns out that if you don't specify\r\n`HttpCompletionOption.ResponseHeadersRead`, then the entire request\r\nbody is buffered into a `MemoryStream`! This setting is what signals\r\nthe `HttpClient` to *NOT* buffer anything, so you can stream the file\r\nto disk.\r\n\r\nSince several of our Android SDK/NDK files are ~500MB, we could\r\ndefinitely hit OOM when running several downloads in parallel."},{"Id":"8750462823","Type":"PullRequestEvent","CreatedAt":"2018-12-13T19:17:41","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2531","RelatedDescription":"Merged pull request \"[build] api-xml-adjuster needs TFV 4.6.1 on Windows\" (#2531) at xamarin/xamarin-android","RelatedBody":"Since c93a8af changed some projects to netstandard 2.0, we also need\r\nthis project to be 4.6.1:\r\n\r\n    Microsoft.Common.CurrentVersion.targets(2110,5): Warning MSB3274: The primary reference \"E:\\A\\_work\\34\\s\\external\\Java.Interop\\bin\\Debug\\Xamarin.Android.Tools.ApiXmlAdjuster.dll\" could not be resolved because it was built against the \".NETFramework,Version=v4.6.1\" framework. This is a higher version than the currently targeted framework \".NETFramework,Version=v4.5\".\r\n\r\nWhich causes the error:\r\n\r\n    build-tools\\api-xml-adjuster\\Program.cs(12,18): Error CS0246: The type or namespace name 'JavaApi' could not be found (are you missing a using directive or an assembly reference?)\r\n\r\nThis doesn't seem to be a problem on Mono, just .NET framework."},{"Id":"8750441573","Type":"PullRequestEvent","CreatedAt":"2018-12-13T19:13:51","Actor":"alexanderkyte","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2532","RelatedDescription":"Closed pull request \"[runtime] Add logging when AOT code registration fails\" (#2532) at xamarin/xamarin-android","RelatedBody":"Probes a fix for https://github.com/mono/mono/issues/12048"},{"Id":"8749840916","Type":"PullRequestEvent","CreatedAt":"2018-12-13T17:25:42","Actor":"alexanderkyte","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2532","RelatedDescription":"Opened pull request \"[runtime] Add logging when AOT code registration fails\" (#2532) at xamarin/xamarin-android","RelatedBody":"Probes a fix for https://github.com/mono/mono/issues/12048"},{"Id":"8749643285","Type":"PullRequestEvent","CreatedAt":"2018-12-13T16:54:06","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2531","RelatedDescription":"Opened pull request \"[build] api-xml-adjuster needs TFV 4.6.1 on Windows\" (#2531) at xamarin/xamarin-android","RelatedBody":"Since c93a8af changed some projects to netstandard 2.0, we also need\r\nthis project to be 4.6.1:\r\n\r\n    Microsoft.Common.CurrentVersion.targets(2110,5): Warning MSB3274: The primary reference \"E:\\A\\_work\\34\\s\\external\\Java.Interop\\bin\\Debug\\Xamarin.Android.Tools.ApiXmlAdjuster.dll\" could not be resolved because it was built against the \".NETFramework,Version=v4.6.1\" framework. This is a higher version than the currently targeted framework \".NETFramework,Version=v4.5\".\r\n\r\nWhich causes the error:\r\n\r\n    build-tools\\api-xml-adjuster\\Program.cs(12,18): Error CS0246: The type or namespace name 'JavaApi' could not be found (are you missing a using directive or an assembly reference?)\r\n\r\nThis doesn't seem to be a problem on Mono, just .NET framework."},{"Id":"8749565412","Type":"PullRequestEvent","CreatedAt":"2018-12-13T16:42:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2417","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Remove EmbeddedNativeLibrary from Mono.Data.Sqlite.\" (#2417) at xamarin/xamarin-android","RelatedBody":"Fixes #2407\r\n\r\nWe currently embed the required native libraries for\r\nMono.Data.Sqlite and Mono.Posix into the assembly as\r\n an `EmbeddedResource` (__AndroidNativeLibraries__.zip).\r\nThis is then extracted as part of the build process\r\ninto the apk. This is the only actual change we have\r\nfrom the vanilla versions of both of these assemblies.\r\n\r\nThis commit removes the `EmbeddedResource` items from\r\nthe assmeblies. It also updates sqlite-xamarin to place\r\nits outputs into the\r\n\r\n\t`lib\\xamarin-android\\xbuild\\Xamarin\\Android\\lib\\{arch}\\`\r\n\r\ndirectories in the main output directory. This will make sure\r\nwe install them as part of the various installers we have.\r\n\r\nWe also update the MSBuild targets to check to see if these\r\nassemblies are referenced and include the required `.so` files."},{"Id":"8749565383","Type":"IssuesEvent","CreatedAt":"2018-12-13T16:42:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2407","RelatedDescription":"Closed issue \"Remove the use of EmbeddedNativeLibrary from Mono.Posix and Mono.Data.Sqlite\" (#2407) at xamarin/xamarin-android","RelatedBody":"We currently embed the required native libraries for Mono.Data.Sqlite and Mono.Posix into the assembly as an EmbeddedResource (`__AndroidNativeLibraries__.zip`). This is then extracted as part of the build process into the apk. This is the only actual change we have from the vanilla versions of both of these assemblies. \r\n\r\nWe should update our build system to special case these two assemblies and just copy over/include the required native libraries from the installed Xamarin.Android system. The required files are\r\n\r\n`libsqlite3_xamarin.so`\r\n`libMonoPosixHelper.so`\r\n\r\nboth of which should end up in the `lib` directory of the Xamarin.Android MSBuild install directory. Currently only `libMonoPosixHelper.so` does. "},{"Id":"8749502547","Type":"PullRequestEvent","CreatedAt":"2018-12-13T16:33:05","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2519","RelatedDescription":"Merged pull request \"[build] download r8 from maven, instead of building from source\" (#2519) at xamarin/xamarin-android","RelatedBody":"Context: https://www.reddit.com/r/androiddev/comments/a4wpuk/for_anyone_wondering_about_todays_failed_builds/\r\nContext: https://issuetracker.google.com/issues/120759347\r\nContext: https://mvnrepository.com/artifact/com.android.tools/r8/1.2.52\r\n\r\nWe are currently building r8 from source, which has been failing on\r\noccasion:\r\n\r\n    04:31:34 _BuildR8:\r\n    04:31:34   python tools/gradle.py r8 --stacktrace --no-daemon\r\n    04:31:34   Running: download_from_google_storage -n -b r8-deps -u -s /mnt/jenkins/workspace/xamarin-anroid-linux-pr-builder/xamarin-android/external/r8/third_party/gradle/gradle.tar.gz.sha1\r\n    04:31:41   0> Downloading /mnt/jenkins/workspace/xamarin-anroid-linux-pr-builder/xamarin-android/external/r8/third_party/gradle/gradle.tar.gz...\r\n    04:31:41   0> Extracting 196 entries from /mnt/jenkins/workspace/xamarin-anroid-linux-pr-builder/xamarin-android/external/r8/third_party/gradle/gradle.tar.gz to /mnt/jenkins/workspace/xamarin-anroid-linux-pr-builder/xamarin-android/external/r8/third_party/gradle/gradle\r\n    04:31:41   Downloading 1 files took 7.041677 second(s)\r\n    04:31:41   Running: /mnt/jenkins/workspace/xamarin-anroid-linux-pr-builder/xamarin-android/external/r8/third_party/gradle/gradle/bin/gradle r8 --stacktrace --no-daemon\r\n    04:31:44   :buildSrc:clean UP-TO-DATE\r\n    04:31:50   :buildSrc:compileJava\r\n    04:31:50   :buildSrc:compileGroovy NO-SOURCE\r\n    04:31:50   :buildSrc:processResources NO-SOURCE\r\n    04:31:50   :buildSrc:classes\r\n    04:31:50   :buildSrc:jar\r\n    04:31:50   :buildSrc:assemble\r\n    04:31:50   :buildSrc:compileTestJava NO-SOURCE\r\n    04:31:50   :buildSrc:compileTestGroovy NO-SOURCE\r\n    04:31:50   :buildSrc:processTestResources NO-SOURCE\r\n    04:31:50   :buildSrc:testClasses UP-TO-DATE\r\n    04:31:50   :buildSrc:test NO-SOURCE\r\n    04:31:50   :buildSrc:check UP-TO-DATE\r\n    04:31:50   :buildSrc:build\r\n    04:31:52\r\n    04:31:52   FAILURE: Build failed with an exception.\r\n    04:31:52\r\n    04:31:52   * What went wrong:\r\n    04:31:52   A problem occurred configuring root project 'r8'.\r\n    04:31:52   > Could not resolve all dependencies for configuration ':classpath'.\r\n    04:31:52      > Could not find com.android.tools:common:25.3.1.\r\n    04:31:52        Searched in the following locations:\r\n    04:31:52            https://repo1.maven.org/maven2/com/android/tools/common/25.3.1/common-25.3.1.pom\r\n    04:31:52            https://repo1.maven.org/maven2/com/android/tools/common/25.3.1/common-25.3.1.jar\r\n    04:31:52            https://jcenter.bintray.com/com/android/tools/common/25.3.1/common-25.3.1.pom\r\n    04:31:52            https://jcenter.bintray.com/com/android/tools/common/25.3.1/common-25.3.1.jar\r\n    04:31:52            https://plugins.gradle.org/m2/com/android/tools/common/25.3.1/common-25.3.1.pom\r\n    04:31:52            https://plugins.gradle.org/m2/com/android/tools/common/25.3.1/common-25.3.1.jar\r\n    04:31:52        Required by:\r\n    04:31:52            project : > com.cookpad.android.licensetools:license-tools-plugin:0.23.0 > com.android.tools.build:gradle:2.3.1 > com.android.tools.build:gradle-core:2.3.1 > com.android.tools.build:builder:2.3.1\r\n    04:31:52            project : > com.cookpad.android.licensetools:license-tools-plugin:0.23.0 > com.android.tools.build:gradle:2.3.1 > com.android.tools.build:gradle-core:2.3.1 > com.android.tools.build:builder:2.3.1 > com.android.tools.build:manifest-merger:25.3.1\r\n    04:31:52            project : > com.cookpad.android.licensetools:license-tools-plugin:0.23.0 > com.android.tools.build:gradle:2.3.1 > com.android.tools.build:gradle-core:2.3.1 > com.android.tools.build:builder:2.3.1 > com.android.tools.ddms:ddmlib:25.3.1\r\n    04:31:52            project : > com.cookpad.android.licensetools:license-tools-plugin:0.23.0 > com.android.tools.build:gradle:2.3.1 > com.android.tools.build:gradle-core:2.3.1 > com.android.tools.build:builder:2.3.1 > com.android.tools.analytics-library:shared:25.3.1\r\n    04:31:52            project : > com.cookpad.android.licensetools:license-tools-plugin:0.23.0 > com.android.tools.build:gradle:2.3.1 > com.android.tools.build:gradle-core:2.3.1 > com.android.tools.build:builder:2.3.1 > com.android.tools.analytics-library:tracker:25.3.1\r\n    04:31:52            project : > com.cookpad.android.licensetools:license-tools-plugin:0.23.0 > com.android.tools.build:gradle:2.3.1 > com.android.tools.build:gradle-core:2.3.1 > com.android.tools.build:builder:2.3.1 > com.android.tools:sdklib:25.3.1 > com.android.tools.layoutlib:layoutlib-api:25.3.1\r\n    04:31:52            project : > com.cookpad.android.licensetools:license-tools-plugin:0.23.0 > com.android.tools.build:gradle:2.3.1 > com.android.tools.build:gradle-core:2.3.1 > com.android.tools.build:builder:2.3.1 > com.android.tools:sdklib:25.3.1 > com.android.tools:dvlib:25.3.1\r\n    04:31:52            project : > com.cookpad.android.licensetools:license-tools-plugin:0.23.0 > com.android.tools.build:gradle:2.3.1 > com.android.tools.build:gradle-core:2.3.1 > com.android.tools.build:builder:2.3.1 > com.android.tools:sdklib:25.3.1 > com.android.tools:repository:25.3.1\r\n    04:31:52\r\n    04:31:52   * Try:\r\n    04:31:52   Run with --info or --debug option to get more log output.\r\n    04:31:52\r\n    04:31:52   * Exception is:\r\n    04:31:52   org.gradle.api.ProjectConfigurationException: A problem occurred configuring root project 'r8'.\r\n\r\nI have seen this on Linux and Windows PR builds, which we think is\r\ncaused by Google removing `com.android.tools:common:25.3.1` from\r\nmaven. Some of our local machines are still working, likely due to\r\nlocal caching by gradle. I don't think r8 as-is will build on a clean\r\nmachine any longer!\r\n\r\nIn either case, we've been wanting to use `r8.jar` from maven. It is a\r\nlittle concerning that Google has pulled packages from there, but\r\nsomething that is working *now* is better than not working at all.\r\n\r\nSince we no longer build `r8` from source, I was able to delete a lot\r\nof code. We don't need to download Chromium's `depot_tools` any more.\r\n\r\n`r8` from maven also lists a different license:\r\n\r\nhttps://opensource.org/licenses/BSD-3-Clause\r\n\r\nI copied the contents to `src/r8/LICENSE` and moved `r8.tpnitems` to a\r\nmore appropriate location.\r\n\r\n## gradle ##\r\n\r\nWhen downloading the file directly from maven, if you tried to use it,\r\nyou would run into:\r\n\r\n    _CompileToDalvikWithD8:\r\n        C:\\Program Files (x86)\\Java\\jdk1.8.0_161\\bin\\java.exe -Xmx1G -classpath C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\r8.jar com.android.tools.r8.D8 --debug --min-api 21 --output obj\\Debug\\android\\b\r\n        in --lib C:\\Users\\myuser\\android-toolchain\\sdk\\platforms\\android-28\\android.jar obj\\Debug\\android\\bin\\classes.zip C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\mono.android.jar\r\n        Exception in thread \"main\" java.lang.NoClassDefFoundError: com/google/common/collect/ImmutableList\r\n                at com.android.tools.r8.D8CommandParser$OrderedClassFileResourceProvider$Builder.<init>(D8CommandParser.java:30)\r\n                at com.android.tools.r8.D8CommandParser$OrderedClassFileResourceProvider.builder(D8CommandParser.java:58)\r\n                at com.android.tools.r8.D8CommandParser.parse(D8CommandParser.java:143)\r\n                at com.android.tools.r8.D8CommandParser.parse(D8CommandParser.java:120)\r\n                at com.android.tools.r8.D8Command.parse(D8Command.java:177)\r\n                at com.android.tools.r8.D8.run(D8.java:98)\r\n                at com.android.tools.r8.D8.lambda$main$3(D8.java:122)\r\n                at com.android.tools.r8.utils.ExceptionUtils.withMainProgramHandler(ExceptionUtils.java:75)\r\n                at com.android.tools.r8.D8.main(D8.java:122)\r\n        Caused by: java.lang.ClassNotFoundException: com.google.common.collect.ImmutableList\r\n                at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n                at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n                at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:338)\r\n                at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n                ... 9 more\r\n\r\nr8 has ~9 dependencies, which are not included in `r8.jar` itself.\r\n\r\nSo to workaround this:\r\n\r\n1. Created a \"dummy\" java project using gradle.\r\n2. Setup a dependency on:\r\n   `group: 'com.android.tools', name: 'r8', version: '1.2.52'`\r\n3. Setup the `jar` gradle task to zip all dependencies into a\r\n   self-contained jar file:\r\n\r\n```groovy\r\nfrom {\r\n    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }\r\n}\r\n```\r\n\r\nWhen running:\r\n\r\n    .\\gradlew jar\r\n\r\nA `build\\libs\\r8.jar` file is produced, containing all dependencies.\r\n\r\nI also consolidated our existing use of gradle:\r\n\r\n- Created a new `build-tools\\gradle` directory.\r\n- Keep one copy of `gradlew`, `gradlew.bat`, and `gradle-wrapper.jar`.\r\n- Added new properties to `Configuration.props`: `$(GradleHome)`,\r\n  `$(GradleWPath)`, and `$(GradleArgs)`.\r\n- Places that call gradle now uses these new properties and set\r\n  `APP_HOME=$(GradleHome)`."},{"Id":"8749439181","Type":"PullRequestEvent","CreatedAt":"2018-12-13T16:24:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2525","RelatedDescription":"Merged pull request \"[monodroid] Use right calling convention on Windows\" (#2525) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/java.interop/issues/403\r\n\r\nMake sure we use `__stdcall` when crosscompiling for mxe/win.\r\n\r\nThis allows us to crosscompile for Windows without installing Java SDK\r\nfor Windows.\r\n\r\nThe include path is put BEFORE other includes, so that the `jni_md.h`\r\nis found before the one in Mac JDK, in `darwin` SDK subdirectory (like\r\n`/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/include/darwin`)."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8752095992","Type":"IssuesEvent","CreatedAt":"2018-12-14T01:14:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3810","RelatedDescription":"Closed issue \"Minimal Android cross platform project with Microsoft.EntityFrameworkCore gives reference error\" (#3810) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nCreate a Android cross platform solution without adding any code, add the Microsoft.EntityFrameworkCore\r\nnuget package to both of the projects in the solution, gets the reference error.\r\n### Steps to Reproduce\r\n1. Create a Android cross platform project and add nuget pkg Microsoft.EntityFrameworkCore\r\n\r\n2. Compile\r\n\r\n3. Error\t\tCan not resolve reference: `System.Buffers`, referenced by `System.Memory`. Please add a NuGet package or assembly reference for `System.Buffers`, or remove the reference to `System.Memory`.\tEFAndroidProblem.Android\t\t\t\r\n\r\n\r\n### Expected Behavior\r\n    Clean compile\r\n### Actual Behavior\r\n    Compiles with reference error\r\n### Basic Information\r\n\r\n- Version with issue:\r\nXamarin forms 3.2.0.839982\r\n- Last known good version:\r\n- IDE:\r\n       Visual Studio 2017 (PC) 15.8.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n       Android: 8.1 (Oreo) & 9.0\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n    Xamarin.Forms v3.2.0.839982\r\n    NETStandard.Library   v2.0.3\r\n    Microsoft.EntityFrameworkCore  v2.1.3\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8752080493","Type":"IssuesEvent","CreatedAt":"2018-12-14T01:10:07","Actor":"wilsonvargas","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4732","RelatedDescription":"Opened issue \"Xamarin forms (3.3.0.912540) on Android - Custom PickerRenderer Control.Click stops working on first user's click\" (#4732) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nOn Android - Custom PickerRenderer Control.Click stops working on first user's click.\r\n\r\nAfter updating nuget packages from Xamarin forms 3.2 to 3.4.0.1008975.\r\n\r\nWe are using a Custom PickerRenderer\r\n-to add a custom dropdown icon and some styling and this works and looks same as before.\r\n-to use our own picker modal we have added our Control.Click += Control_Click; event listener which previously opened our custom dialog.\r\n\r\n### Steps to Reproduce\r\n\r\n1. The first time user taps/clicks on the CustomPicker Xamarin opens the OTB Android Picker dialog (and not our custom renderer like it did before nuget updates). And If the user selects/closes the OTB dialog and taps/clicks the CustomPicker second time; now our Control_Click event is fired and our custom picker dialog is shown.\r\n2. Also the OTB picker dialog that opens up.. does not open smoothly; the screen flickers while the otb dialog is first rendered on top of the screen and resized/moved to the center of the screen.\r\n\r\n### Expected Behavior\r\nOpen our custom renderer when user tap the Custom Picker\r\n\r\n### Actual Behavior\r\n\r\nThe first time user taps/clicks on the CustomPicker Xamarin opens the OTB Android Picker dialog\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.4.0.1008975\r\n- Last known good version: XF 3.2.0.871581\r\n- IDE: Visual Studio 2017 Professinal\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: API 16 - 27\r\n \r\n- Affected Devices: We can reproduce this issue with all our Android real test devices and emulators (API 16 - 27). And all our developers and testers.\r\n\r\n\r\n### Screenshots\r\n\r\n![gif](https://user-images.githubusercontent.com/22247447/49975790-6e995380-ff0d-11e8-8ab5-6620fe29e3cd.gif)\r\n\r\n### Reproduction Link\r\n\r\n[CustomPickerBug.zip](https://github.com/xamarin/Xamarin.Forms/files/2678272/CustomPickerBug.zip)\r\n\r\n"},{"Id":"8752075516","Type":"IssuesEvent","CreatedAt":"2018-12-14T01:08:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2200","RelatedDescription":"Closed issue \"[iOS] swiping down the notification window causes the Orientation on ios to get stuck as unknown\" (#2200) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nCurrently on Forms the following code is used to set the orientation\r\n```C#\r\n_notification = UIDevice.Notifications.ObserveOrientationDidChange((sender, args) => CurrentOrientation = UIDevice.CurrentDevice.Orientation.ToDeviceOrientation());\r\n```\r\n\r\nIf you swipe down the notification bar this will cause the CurrentOrientation to be set to Other and it remain as Other\r\n\r\n### Steps to Reproduce\r\n\r\nJust swipe down the notification window and observe the value of the CurrentOrientation\r\n```\r\n[0:] Portrait\r\n[0:] Unknown\r\n[0:] Unknown\r\n[0:] Unknown\r\n```\r\n\r\n### Expected Behavior\r\nThe CurrentOrientation should remain whatever it was before being set to Other \r\n\r\n### Actual Behavior\r\nThe CurrentOrientation stays set to Other until you trigger some sort of Orientation change\r\n\r\n### Basic Information\r\n  - iOS:  11.2\r\n\r\n### Reproduction Link\r\n\r\nThis is just a native iOS project that I used to indicate the behavior I'm talking about\r\n[Orientation.zip](https://github.com/xamarin/Xamarin.Forms/files/1854481/Orientation.zip)\r\n\r\n### Implementation details\r\n\r\nCurrently thinking this but need to research more\r\n\r\n*UIDevice.CurrentDevice* returns UIDeviceOrientation which is more about the Physical device orientation. For example it includes FaceUp and FaceDown\r\n\r\n\r\n*UIApplication.SharedApplication.StatusBarOrientation* returns UIInterfaceOrientation and remains portrait while the notification window becomes visible and invisible.   \r\n\r\nImplement a Platform property for iOS that uses the *StatusBarOrientation* instead of the *UIDeviceOrientation*\r\n\r\nAlong with this fix might want to change uses of IsPortrait() in the iOS code base to instead check the *StatusBarOrientation* . I noticed in case where you check for IsPortrait() the code will seem to stop working if the notification window is dragged down. \r\n\r\nI found this out when looking at\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/1984\r\n\r\nWhen I drag the notification window down the pull to refresh code stops working\r\n"},{"Id":"8751848215","Type":"IssuesEvent","CreatedAt":"2018-12-13T23:59:09","Actor":"ahanag22","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4731","RelatedDescription":"Opened issue \" XAML AutomationID ignored by REPL tool and other queries \" (#4731) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI'm using Forms app.\r\nIn TableView, EntryCell's AutomationId in XAML pages is being ignored, as a result tests are not being able to use AutomationID with XAML pages.\r\n \r\nXAML for the settings page:\r\n\r\n<TableRoot>\r\n<TableSection Title=\"Endpoint URL's\">\r\n<EntryCell Label=\"API\" Text=\"{Binding ApiEndpoint, Mode=TwoWay}\" Keyboard=\"Url\" AutomationId=\"APIEntry\"/>\r\n<EntryCell Label=\"Identity\" Text=\"{Binding IdentityEndpoint, Mode=TwoWay}\" Keyboard=\"Url\" AutomationId=\"IdentityEntry\"/>\r\n</TableSection>\r\n</TableRoot>\r\n\r\nHowever,  tests are not being able to use AutomationIDs defined in the xaml page and hitting the below error:\r\n\r\nSystem.Exception : Error while performing WaitForElement(Marked(\"APIEntry\"), \"APIEntry not found\", 00:02:00, null, null)\r\n ----> System.TimeoutException : APIEntry not found\r\n\r\n Repl tree command also fails to display EntryCell's AutomationId \r\n\r\n[UITableViewLabel] label: \"Identity\", text: \"Identity\"\r\n[_UITableViewCellSeparatorView]\r\n[UITableTextAccessibilityElement] label: \"Identity\"\r\n[UIAccessibilityElementMockView > UIAccessibilityTextFieldElement]\r\n[Xamarin_Forms_Platform_iOS_EntryCellRenderer_EntryCellTableViewCell] text: \"API\"\r\n[UITableViewCellContentView]\r\n[UITextField]\r\n[_UITextFieldContentView > UITextSelectionView]\r\n[UIAccessibilityTextFieldElement]\r\n[UITableViewLabel] label: \"API\", text: \"API\"\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Set automation id of an EntryCell.Label in XAML\r\n2. Create a simple Xamarin.UITests\r\n3.  Start REPL; run the  tree command\r\n\r\n### Expected Behavior\r\nAutomation id of EntryCell.Label should be detected\r\n### Actual Behavior\r\nAutomationID is ignored by REPL\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms version 3.4.0.1008975\r\n- Last known good version: I'm not sure about this.\r\n- IDE: Visual Studio Community 2017 for Mac\r\nVersion 7.6.2 (build 33)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n Xamarin.Forms version 3.4.0.1008975\r\nXamarin.TestCloud.Agent version 0.21.7\r\nXamarin UITest version 2.2.7\r\nNUnit version 2.6.4\r\n\r\n- Affected Devices:\r\nI can reproduce this issue on all the iOS 12 simulators (I don't have any iOS physical devices).  \r\n\r\n### Screenshots\r\n\r\n\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nI can reproduce the issue using these samples:  https://streetsheaver-my.sharepoint.com/:f:/g/personal/james_baker_streets-heaver_com/EvH50CvjuLxGkjdqyHLxrggB-PPo9ixEqVAju_WnPzuHfA?e=iYaYYd\r\n\r\nhttps://github.com/xamarin/xamarin-forms-samples/tree/master/UserInterface/TableView\r\n\r\n\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8751825244","Type":"PullRequestEvent","CreatedAt":"2018-12-13T23:52:33","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4688","RelatedDescription":"Merged pull request \"[iOS] Update cell size estimates after empty data source\" (#4688) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nNormally the CollectionView on iOS uses the first available cell as a prototype to determine the estimated size (or exact size) of subsequent cells. But if there is no first available cell when the CollectionView first appears, the estimates remain zero and new cells are added, but are not visible. \r\n\r\nThese changes allow the CollectionView to use the first available cell even if there is no data when the CollectionView first appears.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4600\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nAdded an automated test; for manual testing, in Control Gallery navigate to CollectionView Gallery -> Observable Collection Galleries -> Add/Remove Items (Grid, Initially Empty) and click the Insert button; an item should appear. Click the button again; another item should appear, and both items should be the same size.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8752035216","Type":"IssuesEvent","CreatedAt":"2018-12-14T00:56:06","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5273","RelatedDescription":"Closed issue \"System.Drawing.Color does not exist in System.Drawing, but instead in OpenTK\" (#5273) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Try to use System.Drawing.Color on iOS\r\n2.  It requires OpenTK to be brought in\r\n\r\n### Expected Behavior\r\n\r\nSince we conform to .NET Standard 2.0 which System.Drawing.Color lives in we should have this available in a non-third-party assembly.\r\n\r\n### Actual Behavior\r\nOpenTK dependency is needed.\r\n\r\n### Environment\r\n15.9\r\n\r\n"},{"Id":"8751975169","Type":"IssuesEvent","CreatedAt":"2018-12-14T00:37:11","Actor":"mattleibow","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5273","RelatedDescription":"Reopened issue \"System.Drawing.Color does not exist in System.Drawing, but instead in OpenTK\" (#5273) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Try to use System.Drawing.Color...\r\n2.  It requires OpenTK to be brought int\r\n3. \r\n\r\n### Expected Behavior\r\nSince we conform to .NET Standard 2.0 which System.Drawing.Color lives in we should have this available. Xamarin.Android does.\r\n\r\n### Actual Behavior\r\nOpenTK dependency is needed.\r\n\r\n### Environment\r\n15.9\r\n\r\n"},{"Id":"8751716444","Type":"IssuesEvent","CreatedAt":"2018-12-13T23:22:51","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5275","RelatedDescription":"Opened issue \"[linker] OpenTK not fully stripped away\" (#5275) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Open the attached sample.\r\n2. Build for device.\r\n3. Open the `.app`, search for the OpenTK dll and open it in VS for Mac's assembly browser (drag and drop).\r\n\r\n### Expected Behavior\r\n\r\nSince we're only calling `Color` we shouldn't have all the junk that's in this screenshot:\r\n\r\n<img width=\"351\" alt=\"screenshot 2018-12-13 18 19 22\" src=\"https://user-images.githubusercontent.com/7839202/49973563-a3081200-ff03-11e8-93f2-3c4a7454b3b9.png\">\r\n\r\n*Note: Xamarin.iOS.dll also has a bunch of things that should probably have been linked away because of OpenTK.*\r\n\r\n### Actual Behavior\r\n\r\nMany things aren't linked away.\r\n\r\n### Environment\r\n\r\nhttps://gist.github.com/VincentDondain/390f1d6f63fefeabfc9d8c2adbfde397\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nhttps://gist.github.com/VincentDondain/c42db086881155d6f2e865bef7bb95a9\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n[LinkerTest.zip](https://github.com/xamarin/xamarin-macios/files/2678058/LinkerTest.zip)\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->"},{"Id":"8751364983","Type":"IssuesEvent","CreatedAt":"2018-12-13T22:05:47","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4923","RelatedDescription":"Closed issue \"[Xamarin.iOS] UICollectionViewDelegate -> GetSizeForItem() will freeze app\" (#4923) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\nWe have a music application that allows users to browse their own collection or the contents from a number of streaming services. On many screens we display a grid of albums or playlists with an alphamap down the right-hand side. Some of these may have 10s or even 100s of thousands of items.\r\n\r\nWe virtualise the data we get from external services. We tell the collection view the total number of items in the collection but only load into memory the actual content as the user scrolls (about every 100-200 items). We only reload the cells whose data we've fetched. \r\n\r\nRecently we wanted to add the ability for the user to adjust the size of the cells in the grid. To do this we used the `GetSizeForItem()` method as part of `UICollectionViewDelegateFlowLayout`. This is the recommended way in Xamarin and Apple docs.\r\n\r\nWhat we've found is on the larger collection sizes the application grinds to a halt, both when first displayed and then when scrolling. `GetSizeForItem()` is called for every item when the layout has updated. A quick profile in Instruments suggests that most of the time is the internals of mono/Xamarin trying to figure out, via reflection(?), if the method has been implemented(?). I believe this is what's causing the application to freeze.\r\n\r\nIf this is indeed the case, I would have maybe expected Xamarin to check when the delegate is first assigned and keep a reference to the method or something similiar after the first call to it. \r\n\r\n\r\nI've created a small sample app with the following steps: \r\n\r\n1. Create a plain Xamarin.iOS application with a single collection view\r\n2. Override  `GetSizeForItem()` in `UICollectionViewDelegateFlowLayout` and set as delegate for collection view\r\n3. Attach a `UICollectionViewSource` with an item count of:\r\n    - 1000 -> No noticable issues apart from slight flicker when we reload changed rows (expected)\r\n    - 10,000 -> Noticable pause while scrolling when we reload changed rows\r\n    - 100,000 -> Long pause (multiple seconds) before cells are first displayed and app will freeze for multiple seconds when we reload changed rows.\r\n4. Run the app and scroll\r\n\r\n### Expected Behavior\r\nApplication will scroll without freezing the entire app with large number of cells in a collection.\r\n\r\n### Actual Behavior\r\nAnything over 1000 items will start to impact the performance when scrolling. At around 10,000 items the app will freeze for multiple seconds everytime you alter a cell or group of cells. \r\n\r\nI've seen our app running on a device freeze for 20seconds or more.\r\n\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.8 (build 38)\r\nInstallation UUID: 15d318c1-0022-470b-8742-ac625e930509\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Community)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.0.0.15 (Visual Studio Community)\r\nHash: 84552a46\r\nBranch: xcode10\r\nBuild date: 2018-09-17 21:54:33-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706080038\r\nGit revision: f4178f550a4de7c03aa23678041abe4fc388cf72\r\nBuild date: 2018-09-28 14:21:41+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 051b653186a95ced1c127dfd8c358df1b9315d0d\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:13:40 PDT 2018\r\n    root:xnu-4903.201.2~1/RELEASE_X86_64 x86_64\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\nI've attached a small sample app with a simulated virtualised collection. \r\n[GSFIPerformance_Minimal.zip](https://github.com/xamarin/xamarin-macios/files/2445918/GSFIPerformance_Minimal.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8751104727","Type":"PullRequestEvent","CreatedAt":"2018-12-13T21:14:59","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5274","RelatedDescription":"Opened pull request \"[tests] Remove NoBindingEmbedding rebuild tests\" (#5274) at xamarin/xamarin-macios","RelatedBody":"- These tests failed randomly, especially on older macOS without APFS\r\n- They also were rather slow\r\n- https://github.com/xamarin/maccore/issues/1263"},{"Id":"8750774516","Type":"IssuesEvent","CreatedAt":"2018-12-13T20:13:06","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5273","RelatedDescription":"Closed issue \"System.Drawing.Color does not exist in Xamarin.iOS, but instead in OpenTK\" (#5273) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Try to use System.Drawing.Color...\r\n2.  It requires OpenTK to be brought int\r\n3. \r\n\r\n### Expected Behavior\r\nSince we conform to .NET Standard 2.0 which System.Drawing.Color lives in we should have this available. Xamarin.Android does.\r\n\r\n### Actual Behavior\r\nOpenTK dependency is needed.\r\n\r\n### Environment\r\n15.9\r\n\r\n"},{"Id":"8750222306","Type":"IssuesEvent","CreatedAt":"2018-12-13T18:34:39","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5120","RelatedDescription":"Closed issue \"Deadlock in Xamarin.Mac\" (#5120) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nproblem occurs when my application (Xamarin.Mac) runs for a longer time. It is just periodically connecting to local HTTP server and updates the UI if needed. I start it from VS in debugger and I keep it running. When I check it after half day the debugger is disconnected with no message and application window is frozen. VS cannot attach to the application anymore, but I can attach in Xcode.\r\n\r\n### Expected Behavior\r\n\r\napplication should stay responsive\r\n\r\n### Actual Behavior\r\n\r\napplication halts in deadlock.\r\nSample callstacks:\r\n[https://justpaste.it/2srvx](https://justpaste.it/2srvx)\r\n[https://justpaste.it/6nuv3](https://justpaste.it/6nuv3)\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.9 (build 22)\r\nInstallation UUID: 1a82bda2-8f63-4499-be55-ab2d64a54dcc\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Community)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nXamarin.iOS not installed.\r\nCan't find mtouch or the Version file at /Library/Frameworks/Xamarin.iOS.framework/Versions/Current.\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706090022\r\nGit revision: 0a0ba3c4593e9adb1c6ff6324e641036146af376\r\nBuild date: 2018-10-05 16:38:51+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f7856b13f2c03a58e08381d3a5970bba18f5c7d7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nTeam Foundation Version Control for TFS and Azure DevOps 0.4.3.1\r\n```\r\n\r\n### Example Project (If Possible)\r\nUnfortunately I don't have simple project\r\n\r\n"},{"Id":"8750145083","Type":"IssuesEvent","CreatedAt":"2018-12-13T18:20:09","Actor":"jamesmontemagno","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5273","RelatedDescription":"Opened issue \"System.Drawing.Color does not exist in Xamarin.iOS, but instead in OpenTK\" (#5273) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Try to use System.Drawing.Color...\r\n2.  It requires OpenTK to be brought int\r\n3. \r\n\r\n### Expected Behavior\r\nSince we conform to .NET Standard 2.0 which System.Drawing.Color lives in we should have this available. Xamarin.Android does.\r\n\r\n### Actual Behavior\r\nOpenTK dependency is needed.\r\n\r\n### Environment\r\n15.9\r\n\r\n"},{"Id":"8750110407","Type":"PullRequestEvent","CreatedAt":"2018-12-13T18:13:35","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5272","RelatedDescription":"Opened pull request \"[d16-0] [CFNetwork] Fix CVE 2018-8292 on Mac OS X.\" (#5272) at xamarin/xamarin-macios","RelatedBody":"The MessageHandler class suffers from the CVE 2018-8292. this commit\r\nfixes the issue by ensuring that the we donot use autoredirect from\r\nCFNetwork and perform the first request. If the response is a redirect,\r\nfollow it wihout the Autherization headers.\n\nBackport of #5271.\n\n/cc @mandel-macaque "},{"Id":"8750104307","Type":"PullRequestEvent","CreatedAt":"2018-12-13T18:12:28","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5271","RelatedDescription":"Opened pull request \"[CFNetwork] Fix CVE 2018-8292 on Mac OS X.\" (#5271) at xamarin/xamarin-macios","RelatedBody":"The MessageHandler class suffers from the CVE 2018-8292. this commit\r\nfixes the issue by ensuring that the we donot use autoredirect from\r\nCFNetwork and perform the first request. If the response is a redirect,\r\nfollow it wihout the Autherization headers."},{"Id":"8749711509","Type":"PullRequestEvent","CreatedAt":"2018-12-13T17:04:19","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5262","RelatedDescription":"Merged pull request \"[XHarness] Add filtering support to the NUnit and xUnit runners.\" (#5262) at xamarin/xamarin-macios","RelatedBody":"First step to get to the point in which we can filter the execution of\r\nthe bcl tests via filters. This commit adds the filtering support to the\r\nrunners, which later will be used by xharness to pass those tests\r\nfiltered.\r\n\r\nThe end goal is to not skip a complete assembly but just those failing\r\ntests."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":142,"FavoriteCount":64,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":139,"FavoriteCount":72,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":180,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":30,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":39,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":34,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":200,"FavoriteCount":112,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":56,"RawContent":null}]}},"RunOn":"2018-12-14T05:31:24.4094413Z","RunDurationInMilliseconds":4073}