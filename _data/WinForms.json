{"Data":{"GitHub":{"Issues":[{"Id":"579530689","IsPullRequest":true,"CreatedAt":"2020-03-11T20:36:06","Actor":"hughbe","Number":"2972","RawContent":null,"Title":"Add ToolStripDropDown and related tests","State":"open","Body":"## Proposed Changes\r\n- Add ToolStripDropDown and related tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2972)","Url":"https://github.com/dotnet/winforms/pull/2972","RelatedDescription":"Open PR \"Add ToolStripDropDown and related tests\" (#2972)"},{"Id":"579213503","IsPullRequest":true,"CreatedAt":"2020-03-11T12:01:18","Actor":"dotnet-maestro[bot]","Number":"2971","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200310.4\r\n- **Date Produced**: 3/10/2020 8:42 PM\r\n- **Commit**: 9a9422d109520d942711e07fae8c662c20e7b6e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20160.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2971)","Url":"https://github.com/dotnet/winforms/pull/2971","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#2971)"},{"Id":"579033836","IsPullRequest":false,"CreatedAt":"2020-03-11T06:15:48","Actor":"RussKie","Number":"2970","RawContent":null,"Title":"`System.AccessViolationException` in `ListViewGroup_Footer_GetGroupInfo_Success` tests","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nhttps://github.com/dotnet/winforms/pull/2654 introduced tests for `ListViewGroup.Footer` that are failing on CI agents with the following stack:\r\n```\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewTests+<>c.<ListView_Handle_GetWithGroups_Success>b__62_0()\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewGroupTests+<>c.<ListViewGroup_Footer_GetGroupInfo_Success>b__10_0()\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewGroupTests+<>c.<ListView_FooterAlignment_GetGroupInfo_Success>b__16_0(System.String, System.String, System.String)\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewGroupTests+<>c.<ListView_FooterAlignment_GetGroupInfo_Success>b__16_0(System.String, System.String, System.String)\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewGroupTests+<>c.<ListView_FooterAlignment_GetGroupInfo_Success>b__16_0(System.String, System.String, System.String)\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n```\r\n\r\n**Expected behavior:**\r\n\r\n1. Failing tests are reported and builds are marked as failed\r\n2. `ListView_FooterAlignment_GetGroupInfo_Success` tests pass\r\n\r\n/cc: @hughbe ","Url":"https://github.com/dotnet/winforms/issues/2970","RelatedDescription":"Open issue \"`System.AccessViolationException` in `ListViewGroup_Footer_GetGroupInfo_Success` tests\" (#2970)"},{"Id":"574941599","IsPullRequest":true,"CreatedAt":"2020-03-11T01:53:46","Actor":"hughbe","Number":"2944","RawContent":null,"Title":"Cleanup ToolStripManager code","State":"closed","Body":"## Proposed Changes\r\n- Cleanup ToolStripManager code\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2944)","Url":"https://github.com/dotnet/winforms/pull/2944","RelatedDescription":"Closed or merged PR \"Cleanup ToolStripManager code\" (#2944)"},{"Id":"578510268","IsPullRequest":true,"CreatedAt":"2020-03-11T01:36:22","Actor":"v-zbsail","Number":"2967","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20200310","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Localizaation update\r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2967)","Url":"https://github.com/dotnet/winforms/pull/2967","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20200310\" (#2967)"},{"Id":"578835955","IsPullRequest":false,"CreatedAt":"2020-03-10T20:17:07","Actor":"tbambuch","Number":"2969","RawContent":null,"Title":"DPIAwareness: ArgumentException when opening a ContextMenuStrip","State":"open","Body":"* .NET Core Version: 3.1.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n\r\nWe are experiencing the following crashreports from some users when they open a contextMenu. All reports originate from Windows10 (version 1607 - build 14393 or later), but we are not able to simulate it on our side.\r\n\r\n```\r\nSystem.Windows.Forms.System.ArgumentException: dpiContext (Parameter 'DPI_AWARENESS_CONTEXT_UNSPECIFIED')\r\n    at System.Windows.Forms.CommonUnsafeNativeMethods.TrySetThreadDpiAwarenessContext\r\n    at System.Windows.Forms.DpiHelper+DpiAwarenessScope.Dispose\r\n    at System.Windows.Forms.ToolStripManager+ModalMenuFilter.PreFilterMessage\r\n    at System.Windows.Forms.Application+ThreadContext.ProcessFilters\r\n    at System.Windows.Forms.Application+ThreadContext.PreTranslateMessage\r\n    at System.Windows.Forms.Application+ThreadContext.System.Windows.Forms.UnsafeNativeMethods.IMsoComponent.FPreTranslateMessage\r\n    at System.Windows.Forms.Application+ComponentManager.System.Windows.Forms.UnsafeNativeMethods.IMsoComponentManager.FPushMessageLoop\r\n    at System.Windows.Forms.Application+ThreadContext.RunMessageLoopInner\r\n    at System.Windows.Forms.Application+ThreadContext.RunMessageLoop\r\n    at System.Windows.Forms.Application.Run\r\n```\r\n\r\nour app is PerMonitorV2 aware as defined in app.manifest:\r\n\r\n```\r\n  <asmv3:application>\r\n    <asmv3:windowsSettings xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">\r\n\t<dpiAware xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">true/PM</dpiAware>\r\n\t<dpiAwareness xmlns=\"http://schemas.microsoft.com/SMI/2016/WindowsSettings\">PerMonitorV2, PerMonitor</dpiAwareness>\r\n    </asmv3:windowsSettings>\r\n  </asmv3:application>\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/2969","RelatedDescription":"Open issue \"DPIAwareness: ArgumentException when opening a ContextMenuStrip\" (#2969)"},{"Id":"578529875","IsPullRequest":true,"CreatedAt":"2020-03-10T12:21:27","Actor":"dotnet-maestro[bot]","Number":"2968","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200309.2\r\n- **Date Produced**: 3/9/2020 3:47 PM\r\n- **Commit**: d9a664e151f9973f1a3679f48d24c3407d77c9b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20159.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2968)","Url":"https://github.com/dotnet/winforms/pull/2968","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2968)"},{"Id":"578321989","IsPullRequest":true,"CreatedAt":"2020-03-10T03:59:42","Actor":"RussKie","Number":"2966","RawContent":null,"Title":"Add tests to enumerate all attribute decorations","State":"open","Body":"To better reason about refactors and code cleanup capture API attribute decorations.\r\n\r\nPre-req for https://github.com/dotnet/winforms/pull/2892\r\n\r\n/cc: @hughbe \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2966)","Url":"https://github.com/dotnet/winforms/pull/2966","RelatedDescription":"Open PR \"Add tests to enumerate all attribute decorations\" (#2966)"},{"Id":"578271793","IsPullRequest":false,"CreatedAt":"2020-03-10T00:57:49","Actor":"Tanya-Solyanik","Number":"2965","RawContent":null,"Title":"DataGridView's scrollbars shouldn't include their control type in their accessible names","State":"open","Body":"**Steps to reproduce:**\r\n\r\n1. Create a new WinForms .NET 4.8 app in VS.\r\n2. Add a DataGridView which shows a horizontal scroll bar when run.\r\n3. Run the app and have the Accessibility Insights for Windows tool examine the UI.\r\n\r\n**Result**: The accessible name of the scrollbar is \"Horizontal Scroll Bar\", and so given that this includes the same (case insensitive) text as its localized control type of \"scroll bar\", Accessibility Insights reports this as an error.\r\n\r\n**Expected**: A control shouldn't include its control type in its accessible name, and so the accessible name should be \"Horizontal\". (It's a similar case for the vertical scroll bar too.)\r\n\r\nfrom @GuyBark: I spent a while trying to figure out how the accessible name is ending up as \"Horizontal Scroll Bar\". In https://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/WinForms/DataGridView.cs, it sets this.horizScrollBar.AccessibleName to SR.GetString(SR.DataGridView_AccHorizontalScrollBarAccName), and in the code I found, that's \"Horizontal\" as it should be. But it seems that by the time a UIA client gets supplied the name, its \"Horizontal Scroll Bar\".\r\n\r\nported from AzDo 1071939","Url":"https://github.com/dotnet/winforms/issues/2965","RelatedDescription":"Open issue \"DataGridView's scrollbars shouldn't include their control type in their accessible names\" (#2965)"},{"Id":"578251233","IsPullRequest":false,"CreatedAt":"2020-03-09T23:42:48","Actor":"Tanya-Solyanik","Number":"2964","RawContent":null,"Title":"Accessibility: WinForms TreeView does not support providing per-TreeNode information relating to the TreeView.ImageList icons shown on the nodes","State":"open","Body":"**Steps to reproduce:**\r\n\r\n1. Create a new WinForms app with .NET Framework 4.8, and add a Treeview with some items.\r\n2. Use TreeView.ImageList to have a variety of icons shown visually on the nodes.\r\n3. Run the app, and run the Narrator screen reader to have information about the icons announced.\r\n\r\n**Result:** \r\nThe announcement includes no details of the icon, and so if the icon visually conveys important information to the app's sighted customers, then customers who can't leverage the icons visually are blocked from accessing that information.\r\n\r\n**Expected:** \r\nThe WinForms Treeview/TreeNode provides some practical way for an app builder to expose the icon-related information pro grammatically through UIA for a screen reader to announce.\r\n\r\nPorted from VSO 1077919","Url":"https://github.com/dotnet/winforms/issues/2964","RelatedDescription":"Open issue \"Accessibility: WinForms TreeView does not support providing per-TreeNode information relating to the TreeView.ImageList icons shown on the nodes\" (#2964)"},{"Id":"576792312","IsPullRequest":true,"CreatedAt":"2020-03-09T23:06:55","Actor":"gpetrou","Number":"2955","RawContent":null,"Title":"Move LresultFromObject to Interop Oleacc","State":"closed","Body":"## Proposed changes\r\n\r\n- Move LresultFromObject to Interop Oleacc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2955)","Url":"https://github.com/dotnet/winforms/pull/2955","RelatedDescription":"Closed or merged PR \"Move LresultFromObject to Interop Oleacc\" (#2955)"},{"Id":"577855335","IsPullRequest":true,"CreatedAt":"2020-03-09T12:16:35","Actor":"dotnet-maestro[bot]","Number":"2963","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200308.2\r\n- **Date Produced**: 3/8/2020 11:45 PM\r\n- **Commit**: 527179abfbb5cd738035c4ac2d2566c571ce85db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20158.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2963)","Url":"https://github.com/dotnet/winforms/pull/2963","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2963)"},{"Id":"576786908","IsPullRequest":true,"CreatedAt":"2020-03-09T01:57:00","Actor":"gpetrou","Number":"2954","RawContent":null,"Title":"Move GetWindowDC to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move GetWindowDC to Interop User32.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2954)","Url":"https://github.com/dotnet/winforms/pull/2954","RelatedDescription":"Closed or merged PR \"Move GetWindowDC to Interop User32\" (#2954)"},{"Id":"577550244","IsPullRequest":true,"CreatedAt":"2020-03-08T19:17:04","Actor":"hughbe","Number":"2962","RawContent":null,"Title":"Add WebBrowser tests and fix bugs","State":"open","Body":"## Proposed Changes\r\n- Add WebBrowser tests and fix bugs\r\n\r\nFixes #2961\r\nFixes #2960\r\nFixes #2959 \r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2962)","Url":"https://github.com/dotnet/winforms/pull/2962","RelatedDescription":"Open PR \"Add WebBrowser tests and fix bugs\" (#2962)"},{"Id":"577528655","IsPullRequest":false,"CreatedAt":"2020-03-08T16:40:39","Actor":"hughbe","Number":"2961","RawContent":null,"Title":"WebBrowser.Dispose can throw Win32Exception randomly","State":"open","Body":"This occasionally fails with the following stack trace\r\n\r\n```cs\r\n[WinFormsTheory]\r\n[CommonMemberData(nameof(CommonTestHelper.GetBoolTheoryData))]\r\npublic void WebBrowser_ScriptErrorsSuppressed_SetWithInstance_GetReturnsExpected(bool value)\r\n{\r\n    using var parent = new Control();\r\n    using var control = new WebBrowser\r\n    {\r\n        Parent = parent\r\n    };\r\n\r\n    control.ScriptErrorsSuppressed = value;\r\n    Assert.Equal(value, control.ScriptErrorsSuppressed);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.Equal(value, ((IWebBrowser2)control.ActiveXInstance).Silent);\r\n    Assert.True(control.IsHandleCreated);\r\n\r\n    // Set same.\r\n    control.ScriptErrorsSuppressed = value;\r\n    Assert.Equal(value, control.ScriptErrorsSuppressed);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.Equal(value, ((IWebBrowser2)control.ActiveXInstance).Silent);\r\n    Assert.True(control.IsHandleCreated);\r\n\r\n    // Set different.\r\n    control.ScriptErrorsSuppressed = !value;\r\n    Assert.Equal(!value, control.ScriptErrorsSuppressed);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.True(control.IsHandleCreated);\r\n}\r\n```\r\n\r\n```\r\nSystem.Windows.Forms.Tests.WebBrowserTests.WebBrowser_ScriptErrorsSuppressed_SetWithInstance_GetReturnsExpected(value: False) [10ms]\r\n  Error Message:\r\n   System.ComponentModel.Win32Exception : Error creating window handle.\r\n  Stack Trace:\r\n     at System.Windows.Forms.NativeWindow.CreateHandle(CreateParams cp)\r\n   at System.Windows.Forms.Control.CreateHandle()\r\n   at System.Windows.Forms.Control.get_Handle()\r\n   at System.Windows.Forms.Application.ParkHandle(CreateParams cp, DpiAwarenessContext dpiAwarenessContext)\r\n   at System.Windows.Forms.Control.CreateHandle()\r\n   at System.Windows.Forms.Control.get_Handle()\r\n   at System.Windows.Forms.WebBrowserBase.FindContainerControlInternal()\r\n   at System.Windows.Forms.WebBrowserBase.get_ContainingControl()\r\n   at System.Windows.Forms.WebBrowserContainer.FindContainerForControl(WebBrowserBase ctl)\r\n   at System.Windows.Forms.WebBrowserBase.GetParentContainer()\r\n   at System.Windows.Forms.WebBrowserBase.TransitionFromRunningToLoaded()\r\n   at System.Windows.Forms.WebBrowserBase.TransitionDownTo(AXState state)\r\n   at System.Windows.Forms.WebBrowser.Dispose(Boolean disposing)\r\n```\r\n\r\nWe certainly shouldn't be calling `CreateHandle` in `Control.Dispose`!\r\n\r\nI think the problem is that we're calling `WebBrowserBase.FindContainerControlInternal`\r\n```cs\r\ninternal ContainerControl FindContainerControlInternal()\r\n{\r\n    // ...\r\n\r\n    if (cc == null)\r\n    {\r\n        cc = Control.FromHandle(User32.GetParent(this)) as ContainerControl;\r\n    }\r\n\r\n    ...\r\n    return cc;\r\n}\r\n```\r\n\r\nWe should guard the call to `User32.GetParent` with `!IsDisposed` or `IsHandleCreated`","Url":"https://github.com/dotnet/winforms/issues/2961","RelatedDescription":"Open issue \"WebBrowser.Dispose can throw Win32Exception randomly\" (#2961)"},{"Id":"577525369","IsPullRequest":false,"CreatedAt":"2020-03-08T16:17:15","Actor":"hughbe","Number":"2960","RawContent":null,"Title":"WebBrowser.ObjectForScripting argument validation missing in .NET Core","State":"open","Body":"It is commented out:\r\n```cs\r\npublic object ObjectForScripting\r\n{\r\n    get\r\n    {\r\n        return objectForScripting;\r\n    }\r\n    set\r\n    {\r\n        if (value != null)\r\n        {\r\n            Type t = value.GetType();\r\n#if Marshal_IsTypeVisibleFromCom\r\n            if (!Marshal.IsTypeVisibleFromCom(t))\r\n            {\r\n                throw new ArgumentException(SR.WebBrowserObjectForScriptingComVisibleOnly);\r\n            }\r\n#endif\r\n        }\r\n        objectForScripting = value;\r\n    }\r\n}\r\n```\r\n\r\nNeeds to be enabled for compat","Url":"https://github.com/dotnet/winforms/issues/2960","RelatedDescription":"Open issue \"WebBrowser.ObjectForScripting argument validation missing in .NET Core\" (#2960)"},{"Id":"577520749","IsPullRequest":false,"CreatedAt":"2020-03-08T15:44:57","Actor":"hughbe","Number":"2959","RawContent":null,"Title":"WebBrowser.DocumentText contains trailing null terminator ('\\0')","State":"open","Body":"* .NET Core Version: \r\nLatst\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\n```cs\r\n[WinFormsTheory]\r\n[CommonMemberData(nameof(CommonTestHelper.GetStringWithNullTheoryData))]\r\npublic void WebBrowser_DocumentText_Set_GetReturnsExpected(string value)\r\n{\r\n    using var control = new WebBrowser\r\n    {\r\n        DocumentText = value\r\n    };\r\n    Assert.Equal(\"<HTML></HTML>\", control.DocumentText);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.True(control.IsHandleCreated);\r\n\r\n    // Set same.\r\n    control.DocumentText = value;\r\n    Assert.Equal(\"<HTML></HTML>\", control.DocumentText);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.True(control.IsHandleCreated);\r\n}\r\n```\r\n```\r\n  X System.Windows.Forms.Tests.WebBrowserTests.WebBrowser_DocumentText_Set_GetReturnsExpected(value:\r\nnull) [48ms]\r\n  Error Message:\r\n   Assert.Equal() Failure\r\n                        (pos 13)\r\nExpected: <HTML></HTML>\r\nActual:   <HTML></HTML>\\0\r\n                        (pos 13)\r\n```\r\n\r\n**Expected behavior:**\r\n- No trailing new line","Url":"https://github.com/dotnet/winforms/issues/2959","RelatedDescription":"Open issue \"WebBrowser.DocumentText contains trailing null terminator ('\\0')\" (#2959)"},{"Id":"577490069","IsPullRequest":true,"CreatedAt":"2020-03-08T12:21:35","Actor":"dotnet-maestro[bot]","Number":"2958","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200307.1\r\n- **Date Produced**: 3/7/2020 2:29 PM\r\n- **Commit**: ca67e6af5b3c6d94755f0912c5365bea44130b12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20157.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2958)","Url":"https://github.com/dotnet/winforms/pull/2958","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2958)"},{"Id":"577331821","IsPullRequest":true,"CreatedAt":"2020-03-07T13:16:20","Actor":"dotnet-maestro[bot]","Number":"2957","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200306.4\r\n- **Date Produced**: 3/6/2020 6:36 PM\r\n- **Commit**: 8ff203f47d83e89ac4b9310b4e902188e0344bf0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20156.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2957)","Url":"https://github.com/dotnet/winforms/pull/2957","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2957)"},{"Id":"576916939","IsPullRequest":true,"CreatedAt":"2020-03-06T13:16:19","Actor":"dotnet-maestro[bot]","Number":"2956","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200305.4\r\n- **Date Produced**: 3/6/2020 12:19 AM\r\n- **Commit**: 08eea2b992d991297fc23de413bddfb9b3db5082\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20155.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2956)","Url":"https://github.com/dotnet/winforms/pull/2956","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2956)"},{"Id":"576696780","IsPullRequest":true,"CreatedAt":"2020-03-06T04:50:18","Actor":"dehghani-mehdi","Number":"2953","RawContent":null,"Title":"Fixed issue #2931","State":"open","Body":"I just changed few characters in doc section.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2953)","Url":"https://github.com/dotnet/winforms/pull/2953","RelatedDescription":"Open PR \"Fixed issue #2931\" (#2953)"},{"Id":"576670836","IsPullRequest":false,"CreatedAt":"2020-03-06T03:21:33","Actor":"vatsan-madhavan","Number":"2952","RawContent":null,"Title":"Check `Environment.UserInteractive` before showing UX","State":"open","Body":">It doesn't seem to affect WinForms. The checks come from WPF itself. \r\n\r\n>Perhaps winforms should add these checks 😄 - no point in trying to show ux when `Environment.UserInteractive` is (genuinely) `false`.\r\n\r\n_Originally posted by @vatsan-madhavan in https://github.com/dotnet/wpf/issues/2663#issuecomment-592207176_","Url":"https://github.com/dotnet/winforms/issues/2952","RelatedDescription":"Open issue \"Check `Environment.UserInteractive` before showing UX\" (#2952)"},{"Id":"576343109","IsPullRequest":true,"CreatedAt":"2020-03-05T15:38:26","Actor":"M-Lipin","Number":"2951","RawContent":null,"Title":"WIP: Fixing 2947: Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2947 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Changing call to Handle with call to HandleInternal to prevent throwing an error when garbage collection is in progress.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will not see an error in case garbage collector cleans up the references to WinForms controls which are not used anymore.\r\n- The case is applicable on high load environments when running application may require garbage collector to clean up controls to free memory.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nCross-thread error on garbage collection.\r\n\r\n### After\r\n\r\nNo error.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- UI tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20073.10\r\n Commit:    29f4d693a9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.20072.3\r\n  Commit:  c3dc1fdfdc\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.200-preview-014883 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha.1.20073.10 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha1-05536 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2951)","Url":"https://github.com/dotnet/winforms/pull/2951","RelatedDescription":"Open PR \"WIP: Fixing 2947: Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load\" (#2951)"},{"Id":"576236925","IsPullRequest":true,"CreatedAt":"2020-03-05T13:16:22","Actor":"dotnet-maestro[bot]","Number":"2950","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200304.1\r\n- **Date Produced**: 3/4/2020 2:28 PM\r\n- **Commit**: 5d8c586ca1bed15f630ba7d2ed16f591be06eafd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20154.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2950)","Url":"https://github.com/dotnet/winforms/pull/2950","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2950)"},{"Id":"574895598","IsPullRequest":true,"CreatedAt":"2020-03-05T00:23:59","Actor":"hughbe","Number":"2943","RawContent":null,"Title":"Add MenuStrip and related tests","State":"closed","Body":"## Proposed Changes\r\n- Add MenuStrip and related tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2943)","Url":"https://github.com/dotnet/winforms/pull/2943","RelatedDescription":"Closed or merged PR \"Add MenuStrip and related tests\" (#2943)"},{"Id":"575046043","IsPullRequest":true,"CreatedAt":"2020-03-04T18:06:22","Actor":"JuditRose","Number":"2946","RawContent":null,"Title":"Add reference to ToolStripDropDownMenu.ico","State":"closed","Body":"#Fixes #2939\r\n \r\nThe [ToolStripDropDownMenu.ico file](https://github.com/dotnet/winforms/blob/b666dc7a94d8ac87a7d300cfb4fa86332fb79bae/src/System.Windows.Forms/src/Resources/System/Windows/Forms/ToolStrip/ToolStripDropDownMenu.ico) is already there, but the reference was missing.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2946)","Url":"https://github.com/dotnet/winforms/pull/2946","RelatedDescription":"Closed or merged PR \"Add reference to ToolStripDropDownMenu.ico\" (#2946)"},{"Id":"575632242","IsPullRequest":false,"CreatedAt":"2020-03-04T18:05:22","Actor":"JuditRose","Number":"2949","RawContent":null,"Title":"Replace resource embedding with globs in csproj files","State":"open","Body":"In the `csproj` files we have a lot of `ico` files as embedded resources defined for all resource files for all the components. \r\n\r\ne.g.:\r\n```\r\n<EmbeddedResource Include=\"Resources\\System\\Windows\\Forms\\ToolStrip\\ToolStripDropDownMenu.ico\">\r\n      <LogicalName>System.Windows.Forms.ToolStripDropDownMenu</LogicalName>\r\n    </EmbeddedResource>\r\n```\r\n\r\nIt would be nicer to replace them with something like this:\r\n\r\n ``` \r\n<ItemGroup>\r\n    <EmbeddedResource Include=\"Resources\\System\\Windows\\Forms\\**\\*.ico\">\r\n      <LogicalName>$(AssemblyName).$([System.IO.Path]::GetFileNameWithoutExtension('%(Identity)'))</LogicalName>\r\n    </EmbeddedResource>\r\n  </ItemGroup>\r\n```\r\n\r\nRelates to https://github.com/dotnet/winforms/issues/2939","Url":"https://github.com/dotnet/winforms/issues/2949","RelatedDescription":"Open issue \"Replace resource embedding with globs in csproj files\" (#2949)"},{"Id":"575382616","IsPullRequest":true,"CreatedAt":"2020-03-04T13:16:23","Actor":"dotnet-maestro[bot]","Number":"2948","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200303.1\r\n- **Date Produced**: 3/3/2020 2:12 PM\r\n- **Commit**: 421b20fb860907c45673de791177e3fd61402197\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20153.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2948)","Url":"https://github.com/dotnet/winforms/pull/2948","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2948)"},{"Id":"575315029","IsPullRequest":false,"CreatedAt":"2020-03-04T11:05:42","Actor":"M-Lipin","Number":"2947","RawContent":null,"Title":"Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\nVersion: 5.0.0-alpha.1.20072.3\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nCall to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load\r\n\r\n**Expected behavior:**\r\nThere should be no error when GC frees the resources.\r\n\r\n**Minimal repro:**\r\nRun WinForms app under load and trigger GC to free resources.\r\n\r\n```\r\nSystem.InvalidOperationException: 'Cross-thread operation not valid: Control '' accessed from a thread other than the thread it was created on.'\r\n>\tSystem.Windows.Forms.dll!System.Windows.Forms.Control.Handle.get() Line 2502\tC#\r\n \tSystem.Windows.Forms.Primitives.dll!Interop.User32.GetWindowThreadProcessId(IHandle hWnd, out uint lpdwProcessId) Line 17\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Application.ParkingWindow.RemoveReflectChild() Line 81\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.ReflectParent.set(System.Windows.Forms.Control value) Line 3137\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.UpdateReflectParent(bool findNewParent) Line 11630\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.Dispose(bool disposing) Line 5188\tC#\r\n \tSystem.ComponentModel.Primitives.dll!System.ComponentModel.Component.~Component() Line 22\tC#\r\n \t[Native to Managed Transition]\t\r\n```","Url":"https://github.com/dotnet/winforms/issues/2947","RelatedDescription":"Open issue \"Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load\" (#2947)"},{"Id":"575029313","IsPullRequest":true,"CreatedAt":"2020-03-03T23:37:08","Actor":"AdamYoblick","Number":"2945","RawContent":null,"Title":"updated nuget config","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nUpdate nuget config based on e-mail recommendations from dnceng\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2945)","Url":"https://github.com/dotnet/winforms/pull/2945","RelatedDescription":"Open PR \"updated nuget config\" (#2945)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-12T05:30:56.21277Z","RunDurationInMilliseconds":941}