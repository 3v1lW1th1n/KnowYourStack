{"Data":{"Blog":{"FeedItems":[{"Title":"Augmented Reality in Xamarin.Android with ARCore","PublishedOn":"2017-10-30T19:50:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Now that you&#8217;ve had a chance to augment reality in your Xamarin iOS apps with ARKit, it&#8217;s time to explore Google&#8217;s take on AR in your Xamarin Android apps. The new ARCore SDK provides APIs for Augmented Reality features, such as motion tracking, plane detection, and light estimation. These are the building blocks you will [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/augmented-reality-xamarin-android-arcore/\">Augmented Reality in Xamarin.Android with ARCore</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/augmented-reality-xamarin-android-arcore/","RawContent":null},{"Title":"Go Large with iOS 11","PublishedOn":"2017-10-26T19:36:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>One of the more obvious user interface changes in iOS 11 is the larger titles that are used across the system apps, from the App Store and Apple Music to Notes and Mail. The Health and Contact apps are shown below: The title animates off the screen and shrinks to a normal-sized navigation bar when [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/go-large-ios-11/\">Go Large with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/go-large-ios-11/","RawContent":null},{"Title":"Introducing the Android SDK Manager","PublishedOn":"2017-10-25T19:55:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>To make the process of managing Android SDKs as smooth as possible, we’ve revamped the Android SDK Manager in Visual Studio for Mac to create a seamless, integrated experience. Not only does this new SDK Manager offer a one-stop shop for all things Android SDK, we&#8217;re also introducing support for automatic SDK dependency resolution. So, let’s [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/introducing-android-sdk-manager/\">Introducing the Android SDK Manager</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/introducing-android-sdk-manager/","RawContent":null},{"Title":"3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release","PublishedOn":"2017-10-24T19:52:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Over the past year we’ve been working on a couple of &#8220;big things&#8221; that enable you to create more performant applications on more platforms. With our latest stable release, version 2.4.0, we introduced performance optimized renderers on Android, nicknamed Fast Renderers. While faster platform renderers are a clear win, you really start to see the big [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/\">3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/","RawContent":null},{"Title":"Five-Star Apps with Mobile Center Test","PublishedOn":"2017-10-20T12:33:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Five-star mobile apps are all about consistent and predictable output. It&#8217;s not a good experience for users when an app suddenly crashes or doesn’t format correctly on their mobile screens. Developers can easily avoid these scenarios by testing for various scenarios on different devices, and Visual Studio Mobile Center makes it easy to test your mobile [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/\">Five-Star Apps with Mobile Center Test</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/","RawContent":null},{"Title":"Upcoming Webinar | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-10-19T18:51:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Register now to join David Antognoli on Tuesday, November 7 at 9 am PT to learn how to take your Unity games to the next level with powerful cloud services. He’ll walk through how to connect your apps to Microsoft Azure, adding compelling features that users love, like leaderboards and heatmaps, and demo how new [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/\">Upcoming Webinar | Build Better Games with Unity and Microsoft Azure</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Plugin and Permission Changes with iOS 11","PublishedOn":"2017-10-18T20:24:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>iOS 11 introduced some fun updates around permissions when accessing certain features on the device. I first noticed these changes when trying to access a user location with the Geolocator Plugin in a Xamarin.Forms application. To my surprise, nothing happened. Upon further investigation of the application&#8217;s Output, I noticed a message explaining exactly what I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/plugin-permission-changes-ios-11/\">Plugin and Permission Changes with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/plugin-permission-changes-ios-11/","RawContent":null},{"Title":"Adaptive UI with Xamarin.Forms","PublishedOn":"2017-10-16T20:58:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Xamarin.Forms has supported iOS, Android, and Windows for a long time. We&#8217;ve also added new platforms to keep up with the changing landscape, such as Tizen and macOS, with Linux and Windows WPF on the horizon. These platforms run on a wide variety of devices including phones, tablets, desktops, and TVs. This presents an interesting [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/adaptive-ui-xamarin-forms/\">Adaptive UI with Xamarin.Forms</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/adaptive-ui-xamarin-forms/","RawContent":null},{"Title":"Give the Visual Studio 2017 Version 15.5 Preview a Try!","PublishedOn":"2017-10-13T20:06:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>With Visual Studio 2017 version 15.4 now stable and sporting some awesome new features, such as Xamarin Live integration, Android Oreo / iOS 11 support, and a smarter, smaller installation, it&#8217;s time to turn our attention to the next version of Visual Studio 2017, version 15.5! This upcoming release is now available as a preview [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/\">Give the Visual Studio 2017 Version 15.5 Preview a Try!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/","RawContent":null},{"Title":"Bring 3D Models To Life in Augmented Reality with UrhoSharp","PublishedOn":"2017-10-12T19:28:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>UrhoSharp brings 3D to a variety of platforms and uses its own binary mdl format for model files. There are many sources for 3D models, including cgtrader and TurboSquid, and formats such as FBX, OBJ, DAE and BLEND. Urho3D provides tools like AssetImporter and the Urho3D Blender Add-in so you can use these models. In [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/\">Bring 3D Models To Life in Augmented Reality with UrhoSharp</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6783537456","Type":"PullRequestEvent","CreatedAt":"2017-10-30T12:27:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/961","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Add Build Log to the Exception data.\" (#961) at xamarin/xamarin-android","RelatedBody":"If the build fails we get a generic message to look at the build.log.\r\nThis is a pain because the build log is HUGE! and takes ages to find the\r\nproblem.\r\n\r\nIt seems NUnit does not include the BuildLog property from the\r\n`FailedBuildException`. So lets override the ToString method to\r\ninclude the data."},{"Id":"6783271300","Type":"PullRequestEvent","CreatedAt":"2017-10-30T11:23:25","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/990","RelatedDescription":"Merged pull request \"[msbuild] remove --dex argument and add DxExtraArguments from Dx task.\" (#990) at xamarin/xamarin-android","RelatedBody":"Otherwise debugging won't work with d8/r8."},{"Id":"6782699678","Type":"PullRequestEvent","CreatedAt":"2017-10-30T09:14:23","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/990","RelatedDescription":"Opened pull request \"[msbuild] remove --dex argument and add DxExtraArguments from Dx task.\" (#990) at xamarin/xamarin-android","RelatedBody":"Otherwise debugging won't work with d8/r8."},{"Id":"6778688926","Type":"PullRequestEvent","CreatedAt":"2017-10-28T14:09:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/989","RelatedDescription":"Merged pull request \"[build] fix for JdkInfo task in PrepareWindows.targets\" (#989) at xamarin/xamarin-android","RelatedBody":"On Windows after formatting my machine (don't ask), `PrepareWindows.targets` was failing with:\r\n\r\nSystem.InvalidOperationException: Could not determine Android SDK location.\r\n\r\nLooking into it, there appear to be two things wrong:\r\n- `PrepareWindows.targets` should import `Configuration.props`\r\n- The incoming variables are `AndroidSdkDirectory` and `AndroidNdkDirectory` not `AndroidSdkPath` and `AndroidNdkPath`\r\n\r\nI'm not quite sure how this _ever_ worked, unless `AndroidSdkInfo` was able to find _some_ Android SDK on your machine."},{"Id":"6777427910","Type":"PullRequestEvent","CreatedAt":"2017-10-27T22:12:54","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/989","RelatedDescription":"Opened pull request \"[build] fix for JdkInfo task in PrepareWindows.targets\" (#989) at xamarin/xamarin-android","RelatedBody":"On Windows after formatting my machine (don't ask), `PrepareWindows.targets` was failing with:\r\n\r\nSystem.InvalidOperationException: Could not determine Android SDK location.\r\n\r\nLooking into it, there appear to be two things wrong:\r\n- `PrepareWindows.targets` should import `Configuration.props`\r\n- The incoming variables are `AndroidSdkDirectory` and `AndroidNdkDirectory` not `AndroidSdkPath` and `AndroidNdkPath`\r\n\r\nI'm not quite sure how this _ever_ worked, unless `AndroidSdkInfo` was able to find _some_ Android SDK on your machine."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6785458131","Type":"PullRequestEvent","CreatedAt":"2017-10-30T18:23:04","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1240","RelatedDescription":"Opened pull request \"[UWP] Force SetupContent call on ListView items\" (#1240) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`ListView`s in UWP are presently not calling `SetupContent` on the initial items; the simplest fix without making any major changes appears to be iterating through the `TemplatedItems` to force a call to `GetOrCreateContent` which then calls `SetupContent`.\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60033\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6778244565","Type":"PullRequestEvent","CreatedAt":"2017-10-28T08:01:17","Actor":"workgroupengineering","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1093","RelatedDescription":"Closed pull request \"[Internal] Fixed test StringFormatNonStringType failed, when current culture is not en-US or tr-TR.\" (#1093) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUsing InvariantCulture instead of CurrentCulture.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nnone\r\n\r\n### Behavioral Changes ###\r\nnone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6777764555","Type":"PullRequestEvent","CreatedAt":"2017-10-28T00:48:35","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1239","RelatedDescription":"Opened pull request \"Allow RecycleElement with null Template\" (#1239) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nExpected RecycleElement with null DataTemplateSelector to not throw exception on Android. Actually throws an exception. Simply, supply a dummy prototypical cell that does nothing (context insensitive).\r\n\r\n### Bugs Fixed ###\r\n\r\nFound while investigating 60382 (which turned out to be by design)\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60382\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6777752621","Type":"PullRequestEvent","CreatedAt":"2017-10-28T00:40:36","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1212","RelatedDescription":"Merged pull request \"[Android] Clear MainPage renderer if exists after reload (non-appCompat)\" (#1212) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSee also: https://github.com/xamarin/Xamarin.Forms/pull/1200\r\n\r\nCustomer expected MainPage could be re-initialized after reloading app. Actually, existence of a renderer for the MainPage prevented MainPage from being attached to the new activity. Preventing the MainPage from being attached is correct as the old MainPage renderer existed in a different context. \r\n\r\nThe fix is to clear the MainPage renderer so a new renderer is created in the correct context. This fix will not reuse the existing renderer so the customer will _not_ see the same performance benefit as was achieved previously. However that performance gain was likely hiding more insidious bugs stemming from using views from a deleted context. \r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=59882\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nAllow MainPage to be re-initialized after re-launch.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6786154958","Type":"PullRequestEvent","CreatedAt":"2017-10-30T20:52:04","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2843","RelatedDescription":"Merged pull request \"[msbuild] Fixed Condition for CalculateCodesignAppBundleInputs\" (#2843) at xamarin/xamarin-macios","RelatedBody":"CodesignAppBundle was not being executed because the inputs were empty.\r\n\r\nFixes https://bugzilla.xamarin.com/show_bug.cgi?id=59379"},{"Id":"6785769961","Type":"PullRequestEvent","CreatedAt":"2017-10-30T19:28:48","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2938","RelatedDescription":"Opened pull request \"Several MPSCnnKernel properties should be readonly\" (#2938) at xamarin/xamarin-macios","RelatedBody":"KernelWidth, KernelHeight, StrideInPixelsX, and StrideInPixelsY were moved to the base class, so the properties aren't needed in this subclasses anymore.  "},{"Id":"6785076517","Type":"PullRequestEvent","CreatedAt":"2017-10-30T17:08:43","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2935","RelatedDescription":"Merged pull request \"[Xcode9] Fix HealthKit xtro output\" (#2935) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6785060139","Type":"PullRequestEvent","CreatedAt":"2017-10-30T17:05:42","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2936","RelatedDescription":"Merged pull request \"[monotouch-test] CGColorSpace.CreateIccData is iOS 10+ only. Fixes #60417.\" (#2936) at xamarin/xamarin-macios","RelatedBody":"https://bugzilla.xamarin.com/show_bug.cgi?id=60417"},{"Id":"6784405658","Type":"PullRequestEvent","CreatedAt":"2017-10-30T15:12:40","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2919","RelatedDescription":"Merged pull request \"[AVFoundation] Add missing categories from Xcode 9 and add new API from Xcode 9.1\" (#2919) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"925090534133321728","CreatedAt":"2017-10-30T20:02:25+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/2x7nUJzpF3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":18,"RawContent":null},{"Id":"925031289010388992","CreatedAt":"2017-10-30T16:07:00+00:00","UserScreenname":"xamarinhq","Text":"Add push notifications to your iOS apps with #Azure Notification Hubs: https://t.co/GJAQDvFyAl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":10,"RawContent":null},{"Id":"924811843180392449","CreatedAt":"2017-10-30T01:35:00+00:00","UserScreenname":"xamarinhq","Text":"Easy iOS app provisioning with fastlane and #VS4Mac: https://t.co/wNcfcCJn1v","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":19,"RawContent":null},{"Id":"924464051752787968","CreatedAt":"2017-10-29T02:33:00+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @davidortinau shares his top 5 ways to boost your #XamarinForms start up time (+ a couple bonus tips!): https://t.co/OqbHBRux5G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":97,"FavoriteCount":41,"RawContent":null},{"Id":"923943119493713920","CreatedAt":"2017-10-27T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to add local notifications to a native #Xamarin.Mac app using our Pomodoro sample project: https://t.co/fmHnM8m18Z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":11,"RawContent":null},{"Id":"923637228332552193","CreatedAt":"2017-10-26T19:47:30+00:00","UserScreenname":"xamarinhq","Text":"Add large titles to your iOS 11 apps in this post from @conceptdev: https://t.co/RDyk6GDVUU https://t.co/ZOsrbAC1sc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":16,"RawContent":null},{"Id":"923566386881974272","CreatedAt":"2017-10-26T15:06:00+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's Charles Petzold shows you how to get started with #SkiaSharp for #XamarinForms: https://t.co/mlySNk9fev","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":17,"RawContent":null},{"Id":"923279245887135745","CreatedAt":"2017-10-25T20:05:00+00:00","UserScreenname":"xamarinhq","Text":"Introducing the Android SDK Manager: https://t.co/U1OxP9CeeJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null},{"Id":"923217836167847937","CreatedAt":"2017-10-25T16:00:59+00:00","UserScreenname":"xamarinhq","Text":"Have you saved the date yet? Visit https://t.co/swPXPdFtSt and add a calendar reminder to join us live online Novem… https://t.co/uLp7HDcxD4","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":28,"FavoriteCount":14,"RawContent":null},{"Id":"923216833938935809","CreatedAt":"2017-10-25T15:57:00+00:00","UserScreenname":"xamarinhq","Text":"Try out the latest new features for #Xamarin in #VS2017 without affecting your production environment: https://t.co/6QFngIYygP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":19,"RawContent":null},{"Id":"923005188637646853","CreatedAt":"2017-10-25T01:56:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss our 11/7 webinar on building better games with #Unity3D and Microsoft #Azure! Register now to join us: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"922915335824478210","CreatedAt":"2017-10-24T19:58:57+00:00","UserScreenname":"xamarinhq","Text":"Check out 3 BIG new features to explore in the #XamarinForms 2.5.0 Pre-Release: https://t.co/Du28Gz40ru","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":75,"RawContent":null},{"Id":"922491050886868992","CreatedAt":"2017-10-23T15:53:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":29,"RawContent":null},{"Id":"922284943169990659","CreatedAt":"2017-10-23T02:14:00+00:00","UserScreenname":"xamarinhq","Text":"Add #pushnotifications to your Android apps with #Xamarin, #Firebase Cloud Messaging, and #Azure Notification Hubs: https://t.co/9uyWpi2qlp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":39,"RawContent":null},{"Id":"921881787009249280","CreatedAt":"2017-10-21T23:32:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":31,"RawContent":null},{"Id":"921466915117260801","CreatedAt":"2017-10-20T20:03:27+00:00","UserScreenname":"xamarinhq","Text":"Get five-star app quality every time with testing from #VSMobileCenter: https://t.co/sUR6Ctm1xk https://t.co/gGQOYtNmkC","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":14,"RawContent":null},{"Id":"921409932993482752","CreatedAt":"2017-10-20T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/8uG0wblORA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":19,"RawContent":null},{"Id":"921089184667983872","CreatedAt":"2017-10-19T19:02:29+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar on building better games with #Unity3D and Microsoft #Azure: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":35,"RawContent":null}]}},"RunOn":"2017-10-31T05:30:38.3719468Z","RunDurationInMilliseconds":3697}