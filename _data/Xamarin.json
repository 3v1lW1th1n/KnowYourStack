{"Data":{"Blog":{"FeedItems":[{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null},{"Title":"Iterate Faster with the Xamarin Live Player and iOS Coded User Interface","PublishedOn":"2017-12-13T17:25:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Live Player is a fantastic tool to rapidly iterate and develop Xamarin applications without ever having to compile. One can easily update an application&#8217;s user interface and business...","Href":"https://blog.xamarin.com/iterate-faster-xamarin-live-player-ios-coded-user-interface/","RawContent":null},{"Title":"Updates to the Xamarin iOS Designer","PublishedOn":"2017-12-12T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Designer for iOS is a visual designer that allows you to edit Storyboard and Xib files directly in Visual Studio and Visual Studio for Mac. Crafting your UI with a designer instead of...","Href":"https://blog.xamarin.com/updates-xamarin-ios-designer/","RawContent":null},{"Title":"Introduction to tvOS","PublishedOn":"2017-12-11T20:03:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Apple announced the AppleTV 4K, an improved version of the AppleTV launched in 2015, which brought us a new platform to develop for in tvOS. With the touch-enabled Siri remote, we have a new...","Href":"https://blog.xamarin.com/introduction-to-tvos/","RawContent":null},{"Title":"Native Forms is Polished and Shiny in Xamarin.Forms 2.5.0","PublishedOn":"2017-12-08T20:37:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since we previewed Native Forms in June, we’ve been working to smooth the rough edges and polish it up for Xamarin.Forms 2.5.0 by fixing bugs and integrating the excellent feedback from the community....","Href":"https://blog.xamarin.com/native-forms-polished-shiny-xamarin-forms-2-5-0/","RawContent":null},{"Title":"Even Easier iOS App Provisioning in Visual Studio for Mac ","PublishedOn":"2017-12-07T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS provisioning is a notoriously hard concept to grasp; even the best developers can be stumped by a signing identity. As a content developer at Xamarin, I’ve created thorough documentation on the...","Href":"https://blog.xamarin.com/even-easier-ios-app-provisioning-visual-studio-mac/","RawContent":null},{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null},{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6999897746","Type":"PullRequestEvent","CreatedAt":"2017-12-17T23:56:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1122","RelatedDescription":"Closed pull request \"Revert \"[create-vsix, build] Don't package API-10 assemblies\"\" (#1122) at xamarin/xamarin-android","RelatedBody":"Reverts commit 6671f059.\r\n\r\nRemoving the build and install of API-10 broke the monodroid build;\r\nthis will need to be fixed later.\r\n\r\nAdditionally, commit 6671f059 was *incomplete*: it stopped building\r\nand installing the `v2.3` framework, but e.g.\r\n`Xamarin.Android.CSharp.targets` still used `v2.3` as the default."},{"Id":"6999425315","Type":"PullRequestEvent","CreatedAt":"2017-12-17T18:24:16","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1122","RelatedDescription":"Opened pull request \"Revert \"[create-vsix, build] Don't package API-10 assemblies\"\" (#1122) at xamarin/xamarin-android","RelatedBody":"Reverts commit 6671f059.\r\n\r\nRemoving the build and install of API-10 broke the monodroid build;\r\nthis will need to be fixed later.\r\n\r\nAdditionally, commit 6671f059 was *incomplete*: it stopped building\r\nand installing the `v2.3` framework, but e.g.\r\n`Xamarin.Android.CSharp.targets` still used `v2.3` as the default."},{"Id":"6998280439","Type":"IssuesEvent","CreatedAt":"2017-12-17T02:10:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1120","RelatedDescription":"Closed issue \"ArrayTypeMismatchException when using array of generic ICollection<T> or IList<T>\" (#1120) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Use the following test interface and class\r\n```\r\npublic interface IFoo\r\n{\r\n    int MyInt { get; }\r\n}\r\n\r\npublic class Bar : IFoo\r\n{\r\n    public int MyInt => 0;\r\n}\r\n```\r\n2. Use the following test code for reproducing the exception\r\n```\r\nICollection<IFoo> arr1 = new Bar[1] { new Bar() };\r\nICollection<IFoo> arr2 = new Bar[1] { new Bar() };\r\n\r\nICollection<IFoo>[] a2d = new ICollection<IFoo>[2] { arr1, arr2 }; //ArrayTypeMismatchException\r\n```\r\n3. Try the same test code with `IList<T>`\r\n```\r\nIList<IFoo> arr1 = new Bar[1] { new Bar() };\r\nIList<IFoo> arr2 = new Bar[1] { new Bar() };\r\n\r\nIList<IFoo>[] a2d = new IList<IFoo>[2] { arr1, arr2 }; //ArrayTypeMismatchException\r\n```\r\n\r\n### Expected Behavior\r\nExpected no exception throwing.\r\n\r\n### Actual Behavior\r\nThrows an `ArrayTypeMismatchException` at last line of test code at runtime when using `ICollection<T>` or `IList<T>`. \r\nThe following types are working properly as expected:\r\n`IEnumerable`\r\n`IEnumerable<T>`\r\n`ICollection`\r\n`IList`\r\nCode is compiling successfully with all types.\r\n\r\n### Version Information\r\n\r\nVisual Studio: 15.5.2\r\nMono: MonoAndroid70 / 4.0.30319 / 8.1.0.25\r\nAndroid: 7.0\r\nKernel: 4.1.18-gdd36b34\r\n\r\n### Log File\r\n\r\n`at (wrapper stelemref) System.Object:virt_stelemref_interface (intptr,object)`\r\n"},{"Id":"6997592214","Type":"PullRequestEvent","CreatedAt":"2017-12-16T16:33:49","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1112","RelatedDescription":"Merged pull request \"Bump to mono/2017-10/63e8dc6e\" (#1112) at xamarin/xamarin-android","RelatedBody":"Bumps to cecil/mono-2017-10/76ffcdab.\r\nThis is consistent with cba77e9d, which *hopefully* means we won't get\r\nthe unit test failures seen in PR #1101."},{"Id":"6997434617","Type":"PullRequestEvent","CreatedAt":"2017-12-16T14:47:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1115","RelatedDescription":"Merged pull request \"[create-vsix, build] Don't package API-10 assemblies\" (#1115) at xamarin/xamarin-android","RelatedBody":"Context: https://developer.xamarin.com/releases/android/xamarin.android_7/xamarin.android_7.4/#API-10_is_Obsolete\r\nContext: https://github.com/xamarin/xamarin-android/pull/1105\r\nContext: https://github.com/xamarin/xamarin-android/pull/1032\r\n\r\nIn Xamarin.Android 7.4, we announced that API-10 was obsolete and\r\nwould be removed in a future release.\r\n\r\nPR #1032 attempted to do so, but does not yet work, so until now we\r\nhave continued shipping API-10 assemblies, even though\r\nXamarin.Android 7.4 hit stable on 2017-Aug-11.\r\n\r\nMeanwhile, PR #1105 includes an NDK bump, which in turn means that the\r\nlowest API level we can compile for will be *API-14*.\r\n\r\nAttempt to split the difference, assuming PR #1105 lands before\r\nPR #1032: Keep the supporting files for API-10, but don't build them,\r\nand explicitly remove `v2.3` from the `.vsix` file."},{"Id":"6997352481","Type":"PullRequestEvent","CreatedAt":"2017-12-16T13:44:13","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1121","RelatedDescription":"Opened pull request \"[linker] Update linker sources location\" (#1121) at xamarin/xamarin-android","RelatedBody":"Recent changes in linker https://github.com/mono/linker/commit/10f4163fb4fa17e77a98f266e28e283ea6d45739 moved the source files around.\r\n\r\nAlso add `MarkingHelpers.cs` to the linker sources."},{"Id":"6996954880","Type":"IssuesEvent","CreatedAt":"2017-12-16T08:13:16","Actor":"MaasOne","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1120","RelatedDescription":"Opened issue \"ArrayTypeMismatchException when using array of generic ICollection<T> or IList<T>\" (#1120) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Use the following test interface and class\r\n```\r\npublic interface IFoo\r\n{\r\n    int MyInt { get; }\r\n}\r\n\r\npublic class Bar : IFoo\r\n{\r\n    public int MyInt => 0;\r\n}\r\n```\r\n2. Use the following test code for reproducing the exception\r\n```\r\nICollection<IFoo> arr1 = new Bar[1] { new Bar() };\r\nICollection<IFoo> arr2 = new Bar[1] { new Bar() };\r\n\r\nICollection<IFoo>[] a2d = new ICollection<IFoo>[2] { arr1, arr2 }; //ArrayTypeMismatchException\r\n```\r\n3. Try the same test code with `IList<T>`\r\n```\r\nIList<IFoo> arr1 = new Bar[1] { new Bar() };\r\nIList<IFoo> arr2 = new Bar[1] { new Bar() };\r\n\r\nIList<IFoo>[] a2d = new IList<IFoo>[2] { arr1, arr2 }; //ArrayTypeMismatchException\r\n```\r\n\r\n### Expected Behavior\r\nExpected no exception throwing.\r\n\r\n### Actual Behavior\r\nThrows an `ArrayTypeMismatchException` at last line of test code at runtime when using `ICollection<T>` or `IList<T>`. \r\nThe following types are working properly as expected:\r\n`IEnumerable`\r\n`IEnumerable<T>`\r\n`ICollection`\r\n`IList`\r\nCode is compiling successfully with all types.\r\n\r\n### Version Information\r\n\r\nVisual Studio: 15.5.2\r\nMono: MonoAndroid70\r\nAndroid: 7.0\r\nKernel: 4.1.18-gdd36b34\r\n\r\n### Log File\r\n\r\n`at (wrapper stelemref) System.Object:virt_stelemref_interface (intptr,object)`\r\n"},{"Id":"6995981008","Type":"PullRequestEvent","CreatedAt":"2017-12-15T21:47:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1105","RelatedDescription":"Merged pull request \"Fix bundling of assemblies in NDK with unified headers\" (#1105) at xamarin/xamarin-android","RelatedBody":"Context: https://developercommunity.visualstudio.com/content/problem/166029/building-xamarinandroid-application-with-bundleass.html\r\n\r\nNDK 14r introduced experimental support for so-called \"unified headers\" which\r\nreplace the per-platform C header files, NDK 15 deprecated the old headers and\r\nNDK 16 removed them completely. Xamarin.Android has been building itself with\r\nNDK configured to use unified headers for a while now, but we missed one piece\r\nof code which is affected by the change - mkbundle.\r\n\r\nThis commit adds code to MakeBundleNativeCodeExternal task to make it possible\r\nto build code generated by mkbundle on systems with NDK that lacks the\r\nper-platform header files. This is done in a backward-compatible way but if your\r\nNDK has both the old and the new headers, the latter will be used.\r\n\r\nAdditionally, minimum API versions to 14 for 32-bit targets (forward\r\ncompatibility with NDK r16)"},{"Id":"6995476987","Type":"IssuesEvent","CreatedAt":"2017-12-15T19:28:08","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1118","RelatedDescription":"Opened issue \"`api-compatibility` needs to check `[Register]` attribute values.\" (#1118) at xamarin/xamarin-android","RelatedBody":"Related: PR #930  \r\nRelated: https://bugzilla.xamarin.com/show_bug.cgi?id=60069\r\n\r\nWe need an API compatibility check that not only ensure that we don't break API -- which `tests/api-compatibility` does -- but *also* that we don't break *semantics*. The problem with [Bug #60069](https://bugzilla.xamarin.com/show_bug.cgi?id=60069) was that the *semantics* of `Build.Serial` changed from a Java field read to a Java method invocation, and since the `Build.getSerial()` method that was invoked only existed in API-26, the result was that the formerly working expression `Build.Serial` now threw everywhere.\r\n\r\nWe need to check for and prevent this in the future.\r\n\r\nMy current idea is that we improve `mono-api-html` to check the values of custom attributes, and warn if they change. For example, with `Build.Serial` the `[Register]` attribute contents changed:\r\n\r\n```csharp\r\n\t\t// API < 26, field use:\r\n\t\t[Register (\"SERIAL\", ApiSince = 9)]\r\n\t\tpublic static string Serial {\r\n\t\t\tget {\r\n\t\t\t\tconst string __id = \"SERIAL.Ljava/lang/String;\";\r\n\r\n\t\t\t\tvar __v = _members.StaticFields.GetObjectValue (__id);\r\n\t\t\t\treturn JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// API >= 26, method invocation:\r\n\t\t[Register (\"getSerial\", \"()Ljava/lang/String;\", \"\", ApiSince = 26)]\r\n\t\tpublic static string Serial {\r\n\t\t\tget {\r\n\t\t\t\tconst string __id = \"getSerial.()Ljava/lang/String;\";\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);\r\n\t\t\t\t\treturn JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);\r\n\t\t\t\t} finally {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n```\r\n"},{"Id":"6995404287","Type":"PullRequestEvent","CreatedAt":"2017-12-15T19:09:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1111","RelatedDescription":"Merged pull request \"[Mono.Android] Don't dispose of event handler implementors\" (#1111) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59804\r\nContext: https://gist.github.com/jonpryor/d0e7bda3107913d0ab8ad46e8ae26419\r\nContext: http://download.oracle.com/otndocs/jcp/7224-javabeans-1.01-fr-spec-oth-JSpec/\r\n\r\n(Would you believe a 5.5+ year old bug? Of course you would!)\r\n\r\nAssume a *multithreaded* event registration and dispatch Java app,\r\nsuch as that in the JavaBeans 1.0.1 spec §6.5.1, in which one thread\r\n(un-)subscribes to events via `Model.addModelChangedListener()` and\r\n`Model.removeModelChangedListener()`, while *another thread* is\r\nresponsible for calling `Model.notifyModelChanged()`.\r\n\r\nThis is fine, *so long as* a Listener doesn't \"invalidate\" itself\r\nwhile still accessible from `Model.listeners`:\r\n\r\n\t// This is fine and normal\r\n\tMyModelChangedListener l = new MyModelChangedListener();\r\n\tmodel.addModelChangedListener(l);\r\n\t// ...\r\n\tmodel.removeModelChangedListener(l);\r\n\r\n\t// Doing this *immediately* after removeModelChangedListener() is BAD\r\n\tl.dispose();\r\n\r\nTo see *why* `l.dispose()` is bad -- assuming `dispose()` semantics in\r\nwhich `l.modelChanged()` starts throwing an exception after\r\n`l.dispose()` is invoked -- one must better understand the\r\nmultithreaded nature of the app: the \"notification thread\" *cannot*\r\nknow that the instance is disposed. Consider this serialized execution:\r\n\r\n\t// Thread 1:\r\n\tmodel.addModelChangedListener(l);\r\n\r\n\t// Thread 2:\r\n\tVector listeners;\r\n\tsynchronized (this) {listeners = (Vector) this.listeners.clone();}\r\n\r\n\t// Thread 1:\r\n\tmodel.removeModelChangedListener(l);\r\n\tl.dispose();                  // Here, `l` is still in Thread 2's `listeners`, but is invalid!\r\n\r\n\t// Thread 2:\r\n\tfor (ModelChangedListener l : listeners) {\r\n\t  l.modelChanged();           // will fail\r\n\t}\r\n\r\nThe Xamarin.Android event implementation would *cause* the same\r\nscenario:\r\n\r\n\tpartial class /* Android.App. */ Dialog {\r\n\t  public event EventHandler CancelEvent {\r\n\t    add {\r\n\t      global::Java.Interop.EventHelper.AddEventHandler<Android.Content.IDialogInterfaceOnCancelListener, Android.Content.IDialogInterfaceOnCancelListenerImplementor>(\r\n\t          ref weak_implementor_SetOnCancelListener,\r\n\t          __CreateIDialogInterfaceOnCancelListenerImplementor,\r\n\t          SetOnCancelListener,\r\n\t          __h => __h.Handler += value);\r\n\t    }\r\n\t    remove {\r\n\t      global::Java.Interop.EventHelper.RemoveEventHandler<Android.Content.IDialogInterfaceOnCancelListener, Android.Content.IDialogInterfaceOnCancelListenerImplementor>(\r\n\t          ref weak_implementor_SetOnCancelListener,\r\n\t          Android.Content.IDialogInterfaceOnCancelListenerImplementor.__IsEmpty,\r\n\t          __v => SetOnCancelListener (null),\r\n\t          __h => __h.Handler -= value);\r\n\t    }\r\n\t  }\r\n\t}\r\n\r\nThe key problem was within `EventHelper.RemoveEventHandler()`, where\r\nit would *dispose of the listener* after unregistering it:\r\n\r\n\t// Within EventHelper.RemoveEventHandler():\r\n\tif (empty (impl)) {\r\n\t  unsetListener (impl);\r\n\t  impl.Dispose ();\r\n\t  // ...\r\n\t}\r\n\r\nThe `unsetListener()` invocation is analogous to\r\n`model.removeModelChangedListener()`, causing the `impl` instance to\r\nbe removed from the Java event. The `impl.Dispose()` is the problem,\r\nas if `impl` is later used from another thread, things will fail:\r\n\r\n\tSystem.NotSupportedException: Unable to activate instance of type IWhateverListenerImplementor from native handle 0x1d200001 (key_handle 0x41b92598). --->\r\n\tSystem.MissingMethodException: No constructor found for IWhateverListenerImplementor::.ctor(System.IntPtr, Android.Runtime.JniHandleOwnership) --->\r\n\t...\r\n\r\nUpdate `AndroidEventHelper.RemoveEventHandler()` and\r\n`EventHelper.RemoveEventHandler()` so that they no longer `Dispose()`\r\nof the `TImplementor` instance. This will prevent the\r\n`NotSupportedException` from being raised.# Please enter the commit message for your changes. Lines starting"},{"Id":"6993946123","Type":"PullRequestEvent","CreatedAt":"2017-12-15T13:34:25","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1033","RelatedDescription":"Closed pull request \"[mono] Use sdks/ to build target runtimes\" (#1033) at xamarin/xamarin-android","RelatedBody":"This is to use the newly created sdks/ folder in mono which builds mono for android, iOS and wasm. We use the build of android to share more of the build logic. This will in the long term improve the development experience of Mono on Android, as it will be easier to test it on device or emulator, without Xamarin.Android. This will also improve integration as we will be able to more easily test Mono on Android as port of Mono's CI.\r\n\r\nThis PR is not to be merged, it is mostly to get some Xamarin.Android's CI testing. We will be able to merge whenever Xamarin.Android bump to `mono:2017-12+`\r\n\r\nTODO:\r\n\r\n- [ ] targets:\r\n  - [ ] llvm32\r\n  - [ ] llvm64\r\n  - [ ] cross-arm\r\n  - [ ] cross-arm64\r\n  - [ ] cross-x86\r\n  - [ ] cross-x86_64\r\n- [ ] tooling\r\n  - [ ] use make-standalone-toolchain.py\r\n  - [ ] use "}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6999063454","Type":"IssuesEvent","CreatedAt":"2017-12-17T14:21:26","Actor":"danielkatz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1412","RelatedDescription":"Opened issue \"A Property resets to default when multiple Triggers setting it to the same value\" (#1412) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen two Triggers setting a property to the same (non-default) value on different conditions, after the handoff between the last and the first, the actual value resets to default.\r\n\r\n### Steps to Reproduce\r\n```\r\n<Label Text=\"Defaults in two clicks\" \r\n    VerticalOptions=\"Center\" \r\n    HorizontalOptions=\"Center\">\r\n\r\n    <Label.Triggers>\r\n\r\n        <DataTrigger TargetType=\"Label\" Binding=\"{Binding Source={x:Reference me}, Path=FlipFlop}\" Value=\"False\">\r\n            <DataTrigger.Setters>\r\n                <Setter Property=\"TextColor\" Value=\"Red\" />\r\n            </DataTrigger.Setters>\r\n        </DataTrigger>\r\n\r\n        <DataTrigger TargetType=\"Label\" Binding=\"{Binding Source={x:Reference me}, Path=FlipFlop}\" Value=\"True\">\r\n            <DataTrigger.Setters>\r\n                <Setter Property=\"TextColor\" Value=\"Red\" />\r\n            </DataTrigger.Setters>\r\n        </DataTrigger>\r\n\r\n    </Label.Triggers>\r\n</Label>\r\n\r\n<Button Clicked=\"FlipTheFlop\" Text=\"Click\" />\r\n\r\nprivate void FlipTheFlop(object sender, EventArgs e)\r\n{\r\n    FlipFlop = !FlipFlop;\r\n}\r\n```\r\n### Expected Behavior\r\nLabel will stay red after any number of clicks on the button\r\n\r\n### Actual Behavior\r\nLabel will become its default color after two clicks on the button\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: VS 15.5.1\r\n- Platform Target Frameworks:\r\n  - Android: 8.0\r\n- Nuget Packages: Xamarin.Forms 2.4.0\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/mmcubit/SameValueTriggerBugRepro\r\n\r\nFirst reported on bugzilla: https://bugzilla.xamarin.com/show_bug.cgi?id=60209"},{"Id":"6998035011","Type":"PullRequestEvent","CreatedAt":"2017-12-16T22:09:01","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1411","RelatedDescription":"Opened pull request \"[WPF] Add Deserializer implementation\" (#1411) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdd IDeserializer implementation for WPF platform.\r\n- DeserializePropertiesAsync()\r\n- SerializePropertiesAsync()\r\n\r\n### API Changes ###\r\n\r\nNo API change in Core\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6997271570","Type":"PullRequestEvent","CreatedAt":"2017-12-16T12:40:59","Actor":"workgroupengineering","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1410","RelatedDescription":"Opened pull request \"Fixed invocation of the IButtonController methods when IsEnabled is false\" (#1410) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen Button IsEnabled is false and invoked  IButtonController methods, the events and Commad.Execute do not fired.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Commad.Execute is calling when invoke IButtonController.SendClicked and IsEnabled is false\r\n\r\n### API Changes ###\r\n(none)\r\n### Behavioral Changes ###\r\n(none)\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6999426916","Type":"PullRequestEvent","CreatedAt":"2017-12-17T18:25:24","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3110","RelatedDescription":"Opened pull request \"[xtro] Add sanity tests to keep the entries up to date (avoid invalid, dupes and out of date entries)\" (#3110) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6996609359","Type":"IssuesEvent","CreatedAt":"2017-12-16T02:36:17","Actor":"nfritsche","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3109","RelatedDescription":"Opened issue \"BreakPoints in iOS Xamarin Studio on Mac to do not stop Debugger\" (#3109) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Debug an iOS project\r\n2. Set a breakpoint in the iOS project\r\n3. The breakpoint will not stop the debugger\r\n\r\n### Expected Behavior\r\nThe breakpoints should pause the debugger in iOS project. The breakpoints work fine in PCl and Android projects.\r\n\r\n### Actual Behavior\r\nThe breakpoints that I set do not, although if I write them in the code they do work ( ex. 'Debugger.breakpoint'\r\n\r\n### Environment\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.2 (build 12)\r\nInstallation UUID: 1d3fc384-46eb-4fd6-a746-75a6f65b9385\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Versions:\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.0.25 (Visual Studio Community)\r\nAndroid SDK: /Users/Nick/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t6.0   (API level 23)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 26\r\nSDK Build Tools Version: 23.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.3.2\r\nHash: 461f09a\r\nBranch: 1.3-release\r\nBuild date: Tue, 03 Oct 2017 18:26:57 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.214 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.2 (Visual Studio Community)\r\nHash: 6857dfcc\r\nBranch: xcode9.2\r\nBuild date: 2017-12-04 21:20:41-0500\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703020012\r\nGit revision: 7d0c9d7ad46b125cf4b7bbf9532c0531b6433ce6\r\nBuild date: 2017-12-12 14:03:18-05\r\nXamarin addins: 6dddaa49fbecb2695fcdcd6b712eb269e288518c\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.6\r\nDarwin 16.7.0 Darwin Kernel Version 16.7.0\r\n    Mon Nov 13 21:56:25 PST 2017\r\n    root:xnu-3789.72.11~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nVim 0.37.3\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n[log3.txt](https://github.com/xamarin/xamarin-macios/files/1564455/log3.txt)\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"6996176464","Type":"PullRequestEvent","CreatedAt":"2017-12-15T22:48:39","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3094","RelatedDescription":"Merged pull request \"bumped Xamarin.MacDev to fix bug #60377\" (#3094) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6995900101","Type":"PullRequestEvent","CreatedAt":"2017-12-15T21:23:44","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3106","RelatedDescription":"Closed pull request \"Incrementally bump mono\" (#3106) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@b3b0613ad38 Bump msbuild to bring in fix for #60770 (#6107)\n* mono/mono@ddeba6e1bab [interp] fix using conv.u with string\n* mono/mono@0360f420fe3 Bump API snapshot submodule\n* mono/mono@2f18e7dd23c Bump cecil & linker to match master.\n* mono/mono@0f53cb275c4 [interp] allow unsigned i8 in pinvoke signature\n\nDiff: https://github.com/mono/mono/compare/c5cd0f1e7fb494cec523757b8d7f29cc95b707c9...b3b0613ad387bca184dbbc25e606dc59e6c39563\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60770"},{"Id":"6995884747","Type":"PullRequestEvent","CreatedAt":"2017-12-15T21:19:28","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3068","RelatedDescription":"Closed pull request \"[monotouch-test] Make TrustTest sleep less. Makes monotouch-test run ~3x faster.\" (#3068) at xamarin/xamarin-macios","RelatedBody":"Before: monotouchtest.exe : 37597 ms\nAfter: monotouchtest.exe : 109570 ms\n\nThe speedup is only when TrustTest runs into RecoverableTrustFailures, and tries\nmultiple times before eventually giving up, otherwise the tests run even\nfaster.\n\nUnfortunately it seems TrustTest always runs RecoverableTrustFailures on my\nmachine, which makes monotouch-test much slower than it needs to be.\n\nOTOH it doesn't seem like TrustTest has this problem on the bots, all the\nTrustTests [PASS], and monotouch-test finishes quickly:\n\n> monotouchtest.exe : 32052 ms"},{"Id":"6995882488","Type":"PullRequestEvent","CreatedAt":"2017-12-15T21:18:48","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3108","RelatedDescription":"Opened pull request \"[tests][security] Update TrustTest to run faster (without timeouts)\" (#3108) at xamarin/xamarin-macios","RelatedBody":"The original test was to cover both X509Certificate and X509Certiicate2\nwhen using with SecTrust. However the code diverged over time. That and\nthe different certificates used caused the `*2` tests to hit a time\nloop (designed to reduce incorrect errors randomly reported).\n\nWe want to keep the \"delay\" logic for it's intended purpose - but it\nshould not be needed normally.\n\nThe tests have been refactored to reuse the same logic (between both\ntypes of certificates) which solve this (when used with the same\ncertificates)\n\nReplace https://github.com/xamarin/xamarin-macios/pull/3068"},{"Id":"6995659958","Type":"IssuesEvent","CreatedAt":"2017-12-15T20:15:47","Actor":"MarianXXL","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3107","RelatedDescription":"Opened issue \"The localization doesn't work\" (#3107) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Use iOS 11.2 and the Visual Studio 15.5.2\r\n2. Setup the iPhone to German language (real phone or the emulator)\r\n\r\n\r\n### Expected Behavior\r\nThe CultureInfo.CurrentUICulture and Thread.CurrentThread.CurrentCulture should be like \"de-DE\"\r\n\r\n### Actual Behavior\r\nThe CultureInfo.CurrentUICulture and Thread.CurrentThread.CurrentCulture is always \"en-US\"\r\n\r\nThe localization stoped to work, because of the problem.\r\n\r\n\r\n### Environment\r\nWindows 10 Fall Creator Update\r\n\r\n\r\n\r\n\r\n<!--\r\n1.\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.5.2\r\nVisualStudio.15.Release/15.5.2+27130.2010\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-60000-00001-AA113\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual Basic 2017   00369-60000-00001-AA113\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00369-60000-00001-AA113\r\nMicrosoft Visual C# 2017\r\n\r\nVisual C++ 2017   00369-60000-00001-AA113\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# 4.1   00369-60000-00001-AA113\r\nMicrosoft Visual F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.31125.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51007.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.1000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.1000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   3.0.17320.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.1000.1\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.1000.1\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   1.8\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.1000.1\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51120.3\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11025.7\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPython   3.0.17320.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   3.0.17320.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   3.0.17320.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   3.0.17320.1\r\nProfiling support for Python projects.\r\n\r\nR Tools for Visual Studio   1.3.31108.1213\r\nProvides project system, R Interactive window, plotting, and more for the R programming language.\r\n\r\nRedgate ReadyRoll   1.15.17340.6878\r\nExtend DevOps processes to your SQL Server databases and safely automate database deployments.\r\n    \r\nVisit https://www.red-gate.com/readyroll for more information.\r\n\r\nCopyright (C) 2011 Red Gate Software Ltd. All rights reserved.\r\n  \r\nThis software contains components from Component Owl.\r\nSQL Server is a registered trademark of Microsoft Corporation. \r\nVisual Studio is a registered trademark of Microsoft Corporation. \r\n\r\nReadyRoll contains code from the following open source software:\r\n\r\nNuGet https://www.nuget.org/\r\nSQL LocalDB Wrapper https://github.com/martincostello/sqllocaldb\r\nAutofac https://autofac.org/\r\nJson.NET https://json.net/\r\nMahApps.Metro http://mahapps.com/\r\nSemVer https://github.com/maxhauser/semver\r\nLog4Net http://logging.apache.org/log4net/\r\nExtended WPF Toolkit https://wpftoolkit.codeplex.com/\r\nCode InfoBox VSX http://www.codeproject.com/Articles/55196/Code-InfoBox-Visual-Studio-Extension-VSX\r\nOctoPack https://github.com/OctopusDeploy/OctoPack\r\nSQLite https://sqlite.org/\r\n\r\nThis product contains icons from http://www.visualpharm.com distributed under a free backlink license.\r\n\r\nFor license details or other notices relating to the above software, please see NOTICE.TXT and EULA.rtf in the ReadyRoll application folder.\r\n    \r\n\r\nRedgate SQL Prompt   9.0.3.3299\r\nWrite, format, and refactor SQL effortlessly\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual C++ for Linux Development   1.0.8\r\nVisual C++ for Linux Development\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27128.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWebJobs Tools v1.0.0   15.0.31201.0\r\nWebJobs Tools v1.0.0\r\n\r\nXamarin   4.8.0.753 (6575bd113)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.0.25 (HEAD/d8c6e504f)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.2 (6857dfc)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"942545953113935872","CreatedAt":"2017-12-18T00:04:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/GSLirxwKNb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":13,"RawContent":null},{"Id":"942199665780551680","CreatedAt":"2017-12-17T01:08:00+00:00","UserScreenname":"xamarinhq","Text":"Dive into the world of build configurations to see how they can improve your build times and productivity: https://t.co/KxvabUJIue","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":20,"RawContent":null},{"Id":"941775247119921152","CreatedAt":"2017-12-15T21:01:30+00:00","UserScreenname":"xamarinhq","Text":"Win a three-month @XamarinU subscription just for checking out our new Getting Started Guide! Details on how to ent… https://t.co/At0addXQsO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":26,"RawContent":null},{"Id":"941710442497441798","CreatedAt":"2017-12-15T16:44:00+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @nishanil shows you how to add #facetracking and live recognition to your Android app: https://t.co/5R7K2hNJXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":20,"RawContent":null},{"Id":"941412780158128128","CreatedAt":"2017-12-14T21:01:12+00:00","UserScreenname":"xamarinhq","Text":"Introducing the open source suite of SmartHotel360 reference #XamarinForms, Xamarin.iOS, and… https://t.co/iYMEQSAb2H","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":196,"FavoriteCount":98,"RawContent":null},{"Id":"941351074564329477","CreatedAt":"2017-12-14T16:56:00+00:00","UserScreenname":"xamarinhq","Text":"Starting NOW—update your iOS apps in our webinar, \"Get the Most Out of iOS 11 with #VisualStudio Tools for #Xamarin… https://t.co/yHfdYJiwE2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":10,"RawContent":null},{"Id":"940998780735901697","CreatedAt":"2017-12-13T17:36:06+00:00","UserScreenname":"xamarinhq","Text":"Our own @jamesmontemagno shows you how to leverage the #Xamarin Live Player with your iOS applications:… https://t.co/S9D0tIvHrH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":23,"RawContent":null},{"Id":"940986925623758850","CreatedAt":"2017-12-13T16:49:00+00:00","UserScreenname":"xamarinhq","Text":"Last call! Join us now for our webinar on how to \"Get the Most out of Android 8 Oreo with #VisualStudio Tools for… https://t.co/N6AGPhXuJD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":16,"FavoriteCount":8,"RawContent":null},{"Id":"940644784422707200","CreatedAt":"2017-12-12T18:09:27+00:00","UserScreenname":"xamarinhq","Text":"Get a quick overview of the latest updates to the #Xamarin iOS designer, including a new toolbar for managing trait… https://t.co/0Mcb5bx9j6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":34,"RawContent":null},{"Id":"940613212508184576","CreatedAt":"2017-12-12T16:04:00+00:00","UserScreenname":"xamarinhq","Text":"Register for one or register for both, but don't miss this week's webinars on updating your #Xamarin apps to get th… https://t.co/9Xtm5gjLw8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":6,"RawContent":null},{"Id":"940313518418661377","CreatedAt":"2017-12-11T20:13:07+00:00","UserScreenname":"xamarinhq","Text":"Expand your app horizons by building your first #tvOS app with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/IcA9ZV1nmN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":22,"RawContent":null},{"Id":"940264162273439744","CreatedAt":"2017-12-11T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0FzGbu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":97,"FavoriteCount":44,"RawContent":null},{"Id":"940013259083735041","CreatedAt":"2017-12-11T00:20:00+00:00","UserScreenname":"xamarinhq","Text":"Register now for this week's webinars on how to update your #Xamarin apps to get the most out of Android 8 Oreo (12… https://t.co/ARs0FVWV0P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":18,"FavoriteCount":10,"RawContent":null},{"Id":"939540900635607041","CreatedAt":"2017-12-09T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/xWBM7qo6ZK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":23,"RawContent":null},{"Id":"939234630691180549","CreatedAt":"2017-12-08T20:46:00+00:00","UserScreenname":"xamarinhq","Text":"#NativeForms is all polished and ready for you in #XamarinForms 2.5.0. Get started: https://t.co/8ZTIbOktJX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":70,"RawContent":null},{"Id":"939193776089772032","CreatedAt":"2017-12-08T18:03:40+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSAppCenter: https://t.co/XHMCHeVNSB https://t.co/pEYDruWIGp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":14,"RawContent":null},{"Id":"938851228209033219","CreatedAt":"2017-12-07T19:22:30+00:00","UserScreenname":"xamarinhq","Text":"Get started with even easier iOS app provisioning in #VS4Mac: https://t.co/vdtAckbzWn https://t.co/Ei8f1vdY4X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":86,"FavoriteCount":38,"RawContent":null},{"Id":"938814862695849984","CreatedAt":"2017-12-07T16:58:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample enterprise app with the Microsoft Authentication Library and #MicrosoftGraph APIs: https://t.co/d9Rlu92TWT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":25,"RawContent":null}]}},"RunOn":"2017-12-18T05:30:41.797474Z","RunDurationInMilliseconds":4254}