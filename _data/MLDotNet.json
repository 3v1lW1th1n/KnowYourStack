{"Data":{"GitHub":{"Issues":[{"Id":"570931760","IsPullRequest":true,"CreatedAt":"2020-02-25T23:51:32","Actor":"Lynx1820","Number":"4889","RawContent":null,"Title":"Added Onnx ValueToKey and KeyToValue support for more int types","State":"open","Body":"Review: Unsure if there's a cleaner way to write this. ","Url":"https://github.com/dotnet/machinelearning/pull/4889","RelatedDescription":"Open PR \"Added Onnx ValueToKey and KeyToValue support for more int types\" (#4889)"},{"Id":"570854650","IsPullRequest":true,"CreatedAt":"2020-02-25T21:45:26","Actor":"mstfbl","Number":"4888","RawContent":null,"Title":"Updates NetCoreApp 3.0 builds to NetCoreApp 3.1","State":"open","Body":"Fix #4865 . Updates our builds using NetCoreApp 3.0 to NetCoreApp 3.1.","Url":"https://github.com/dotnet/machinelearning/pull/4888","RelatedDescription":"Open PR \"Updates NetCoreApp 3.0 builds to NetCoreApp 3.1\" (#4888)"},{"Id":"570828121","IsPullRequest":true,"CreatedAt":"2020-02-25T21:44:22","Actor":"harishsk","Number":"4887","RawContent":null,"Title":"Fixed bugs in OptionalColumnTransform and ColumnSelecting","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4887","RelatedDescription":"Closed or merged PR \"Fixed bugs in OptionalColumnTransform and ColumnSelecting\" (#4887)"},{"Id":"569239764","IsPullRequest":true,"CreatedAt":"2020-02-25T21:02:52","Actor":"Lynx1820","Number":"4875","RawContent":null,"Title":"Alternate solution for ColumnConcatenatingTransformer","State":"closed","Body":"- Added test isolating ColumnConcatenatingTransformer ","Url":"https://github.com/dotnet/machinelearning/pull/4875","RelatedDescription":"Closed or merged PR \"Alternate solution for ColumnConcatenatingTransformer\" (#4875)"},{"Id":"570741185","IsPullRequest":false,"CreatedAt":"2020-02-25T18:12:46","Actor":"gvashishtha","Number":"4886","RawContent":null,"Title":"Remove reference to \"Future\" plans in this doc","State":"open","Body":"https://docs.microsoft.com/en-us/dotnet/machine-learning/automate-training-with-cli#what-is-the-mlnet-command-line-interface-cli\r\n\r\nThe last bullet of the section above mentions \"Future\" plans, which is confusing for customers.","Url":"https://github.com/dotnet/machinelearning/issues/4886","RelatedDescription":"Open issue \"Remove reference to \"Future\" plans in this doc\" (#4886)"},{"Id":"569660027","IsPullRequest":true,"CreatedAt":"2020-02-25T01:36:35","Actor":"harishsk","Number":"4881","RawContent":null,"Title":"Slightly simplified version of adding KeyToValue for onnx export","State":"closed","Body":"This is a variation of @antoniovs1029 's fix. This adds KeyToValueMappingTransformer in only one place. The results are identical between the two. ","Url":"https://github.com/dotnet/machinelearning/pull/4881","RelatedDescription":"Closed or merged PR \"Slightly simplified version of adding KeyToValue for onnx export\" (#4881)"},{"Id":"570239040","IsPullRequest":true,"CreatedAt":"2020-02-25T00:52:20","Actor":"mstfbl","Number":"4885","RawContent":null,"Title":"Typo corrections","State":"open","Body":"More typo corrections in this repository.\r\nThe typo corrects are almost all in comments, except for one variable which was misspelled.\r\nWe should really pay more attention to avoid misspellings, and perhaps do a periodical check to make sure no new mistakes are made.","Url":"https://github.com/dotnet/machinelearning/pull/4885","RelatedDescription":"Open PR \"Typo corrections\" (#4885)"},{"Id":"570205587","IsPullRequest":true,"CreatedAt":"2020-02-24T23:14:43","Actor":"frank-dong-ms","Number":"4884","RawContent":null,"Title":"Light gbm regressor estimator issue","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4884","RelatedDescription":"Open PR \"Light gbm regressor estimator issue\" (#4884)"},{"Id":"570174985","IsPullRequest":true,"CreatedAt":"2020-02-24T22:57:37","Actor":"Lynx1820","Number":"4882","RawContent":null,"Title":"Updating onnxruntime version","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4882","RelatedDescription":"Closed or merged PR \"Updating onnxruntime version\" (#4882)"},{"Id":"570193009","IsPullRequest":true,"CreatedAt":"2020-02-24T22:42:35","Actor":"Lynx1820","Number":"4883","RawContent":null,"Title":"WIP: Verifying all CI machines support onnx","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4883","RelatedDescription":"Open PR \"WIP: Verifying all CI machines support onnx\" (#4883)"},{"Id":"569550100","IsPullRequest":false,"CreatedAt":"2020-02-24T22:11:10","Actor":"NVentimiglia","Number":"4880","RawContent":null,"Title":"ML.NET Model Builder Feedback","State":"closed","Body":"I have been trying the ML.NET Model Builder Visual Studio Marketplace extension. I like it very much as I am able to jump into ML.NET and gain an understanding of the many moving parts with minimal effort. That said I have a few question.\r\n\r\n### Goal\r\nMy goal is to allow for the evaluation of text messages. I would like to score the message using multiple categorization and binary sentiment sets.  For instance I would like to give messages a emotional categorization, topic categorization, and N categorizations as I think of them.\r\n\r\nI would also like to do this with minimal code bloat, maximum code reuse, and support for future proofing (updating) my models without my current process of delete and create new-project.\r\n\r\nI understand this will take some work on my end refactoring the template projects, but I am struggling to envision what this refactor will look like. Additional resource links appreciated. \r\n\r\n### Solution Bloat / Model Reuse\r\nEvery time I go through the process of adding a new machine learning model, it produces two new projects. A model and a console app. The schema for some of these models are identical, and would like to consolidate them. Is this possible? What is the best strategy for consolidating this? \r\n\r\ne.g. A binary text model with csv for positive/negative sentiment and another csv for masculine/feminine sentiment?\r\n\r\n### Retraining / re-running the model\r\nWhen I run the console app that is generated, it completes really fast. The initial training for one of my data sets was 90 minutes long, but, the console when run on its own is only a second. \r\n\r\nI was thinking I could use this project for adding new / updated data to my model, but I am not so sure of that because it completes so fast. What is this project even doing? If I improve my data set, should I delete these template projects and restart the process!?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4880","RelatedDescription":"Closed issue \"ML.NET Model Builder Feedback\" (#4880)"},{"Id":"569312559","IsPullRequest":true,"CreatedAt":"2020-02-24T05:32:38","Actor":"harishsk","Number":"4878","RawContent":null,"Title":"Added multiple related fixes to enable automatic addition of KeyToValue","State":"closed","Body":"This PR includes a number of fixes to enable automatic addition of KeyToValue in the Nimbus codepath. Specifically:\r\n* Fixed BinaryClassfierScorer to support exporting key types\r\n* Fixed PredictedLabelScorerBase to include the right types and shapes in the onnx graph\r\n* Fixed OneVersusAllTrainer to include shape information\r\n* Fixed SaveAsOnnxCommand to include type information in the last Identity node\r\n* Fixed OptionalColumnTransform to have the correct variable names and types. (This one is a preemptive fix. It fixes a crash that happens with the code in the ORT master branch)","Url":"https://github.com/dotnet/machinelearning/pull/4878","RelatedDescription":"Closed or merged PR \"Added multiple related fixes to enable automatic addition of KeyToValue\" (#4878)"},{"Id":"569516659","IsPullRequest":false,"CreatedAt":"2020-02-23T16:02:10","Actor":"NVentimiglia","Number":"4879","RawContent":null,"Title":"Text Classification : Failed see more in Output Pane","State":"open","Body":"### System information\r\n\r\n- Windows 10\r\n- 3.1.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI am using the ML.NET Model builder tool for visual studio to add machine learning to an existing dot net core web application. Using the tool, I attempted to train a text classification data set. When training, the progress stops saying \r\n\r\n> Status Failed. See more in Output Pane. \r\n\r\nThe text in the output pane is \r\n\r\n> |     Trainer                              MicroAccuracy  MacroAccuracy  Duration #Iteration                     |\r\n\r\nMy data set can be found here : https://data.world/crowdflower/sentiment-analysis-in-text\r\n\r\n- **What did you expect?**\r\n\r\nEither for the training to succeed or for a actionable error message.\r\n\r\n### Source code / logs\r\n\r\nNo source code included, I am using the visual studio editor tool.","Url":"https://github.com/dotnet/machinelearning/issues/4879","RelatedDescription":"Open issue \"Text Classification : Failed see more in Output Pane\" (#4879)"},{"Id":"568566107","IsPullRequest":false,"CreatedAt":"2020-02-22T20:44:33","Actor":"srqdev","Number":"4864","RawContent":null,"Title":"Is there a way to get individual metrics from a binaryclassifier in a multiclass scenario","State":"closed","Body":"I'm using the averaged perceptron method in a mutliclas scenario. So my training data consists of predictions for more then one type, say types ABC, DEF and GHI. Once trained I can get the overall metrics but is there a way to get the metrics for ABC, DEF and GHI separately so that I can see where training was better or worse?","Url":"https://github.com/dotnet/machinelearning/issues/4864","RelatedDescription":"Closed issue \"Is there a way to get individual metrics from a binaryclassifier in a multiclass scenario\" (#4864)"},{"Id":"568557406","IsPullRequest":true,"CreatedAt":"2020-02-22T08:45:25","Actor":"frank-dong-ms","Number":"4863","RawContent":null,"Title":"enable BinaryClassifierSymSgdTest","State":"closed","Body":"enable BinaryClassifierSymSgdTest as this test infected by CNR and fixed in this PR: https://github.com/dotnet/machinelearning/pull/4569\r\n\r\nchecked the full test set pipeline, this test never failed since #4569 is merged so enable this test again.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4863","RelatedDescription":"Closed or merged PR \"enable BinaryClassifierSymSgdTest\" (#4863)"},{"Id":"569293979","IsPullRequest":true,"CreatedAt":"2020-02-22T08:45:07","Actor":"frank-dong-ms","Number":"4877","RawContent":null,"Title":"enable 2 tests but skip running from x86","State":"closed","Body":"TestOldSavingAndLoading and TestDnnImageFeaturizer uses too much memory and not suitable to run on x86 (which has 2 GB memory limit by default).\r\n\r\nRe-enable these 2 tests if memory usage has been optimized.","Url":"https://github.com/dotnet/machinelearning/pull/4877","RelatedDescription":"Closed or merged PR \"enable 2 tests but skip running from x86\" (#4877)"},{"Id":"569240344","IsPullRequest":true,"CreatedAt":"2020-02-21T23:50:39","Actor":"mstfbl","Number":"4876","RawContent":null,"Title":"Incorporating varying tolerances through VaryingToleranceAttribute","State":"open","Body":"In this PR we are adding the ability to have varying tolerances for tests through VaryingToleranceAttribute.\r\n\r\nThe VaryingToleranceAttribute has been added to the following tests:\r\n\r\n- SsaForecast\r\n- MulticlassLRTest\r\n- BinaryClassifierSymSgdTest\r\n- BinaryClassifierLogisticRegressionBinNormTest\r\n- AutoFitImageClassificationTrainTest","Url":"https://github.com/dotnet/machinelearning/pull/4876","RelatedDescription":"Open PR \"Incorporating varying tolerances through VaryingToleranceAttribute\" (#4876)"},{"Id":"569234930","IsPullRequest":false,"CreatedAt":"2020-02-21T23:28:38","Actor":"mstfbl","Number":"4874","RawContent":null,"Title":"MatrixFactorizationSimpleTrainAndPredict() on MacOS is broken","State":"open","Body":"The test MatrixFactorizationSimpleTrainAndPredict() is run on MacOS, but its calculate MSE is not checked. It is denoted as \"broken\" on MacOS.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/fbd1b93065b451401b1e3276e5ac65b9f303f90b/test/Microsoft.ML.Tests/TrainerEstimators/MatrixFactorizationTests.cs#L135-L141","Url":"https://github.com/dotnet/machinelearning/issues/4874","RelatedDescription":"Open issue \"MatrixFactorizationSimpleTrainAndPredict() on MacOS is broken\" (#4874)"},{"Id":"568782497","IsPullRequest":true,"CreatedAt":"2020-02-21T22:42:02","Actor":"mstfbl","Number":"4869","RawContent":null,"Title":"Re-enabling disabled tests due to wrong nrBins value","State":"closed","Body":"Fixed case with erroneous SafeTrainingAndModelBuffer.nrBins value, where if _threads = 1, nrBins should also equal 1. This way, when thread count is 1, there is no need to divide the training matrix into multiple blocks as 1 will do fine. As a result, we can re-enable the following disabled tests:\r\n\r\n- MatrixFactorizationSimpleTrainAndPredict\r\n- MulticlassTreeFeaturizedLRTest\r\n- TestOvaMacroWithUncalibratedLearner\r\n- EntryPointPipelineEnsembleGetSummary","Url":"https://github.com/dotnet/machinelearning/pull/4869","RelatedDescription":"Closed or merged PR \"Re-enabling disabled tests due to wrong nrBins value\" (#4869)"},{"Id":"569157976","IsPullRequest":true,"CreatedAt":"2020-02-21T20:55:40","Actor":"mstfbl","Number":"4873","RawContent":null,"Title":"Disabling TestOldSavingAndLoading() and TestDnnImageFeaturizer()","State":"closed","Body":"Temporarily disabling 2 ONNX tests: TestOldSavingAndLoading() and TestDnnImageFeaturizer()","Url":"https://github.com/dotnet/machinelearning/pull/4873","RelatedDescription":"Closed or merged PR \"Disabling TestOldSavingAndLoading() and TestDnnImageFeaturizer()\" (#4873)"},{"Id":"569152780","IsPullRequest":false,"CreatedAt":"2020-02-21T19:52:55","Actor":"gvashishtha","Number":"4872","RawContent":null,"Title":"Update docs to remove mentions of GPU support in ApplyOnnxModel","State":"open","Body":"When Onnxruntime released 1.0, they changed the API and broke the interface from 0.5 so that now it is not possible to ever exercise the GPU code path unless someone compiles ML.NET privately and links it to Microsoft.ML.OnnxRuntime.Gpu specifically.\r\n\r\nRelated to #4478 and #4656 ","Url":"https://github.com/dotnet/machinelearning/issues/4872","RelatedDescription":"Open issue \"Update docs to remove mentions of GPU support in ApplyOnnxModel\" (#4872)"},{"Id":"568694862","IsPullRequest":true,"CreatedAt":"2020-02-21T18:36:06","Actor":"harishsk","Number":"4867","RawContent":null,"Title":"Fixed up dimensions to create known sized vectors","State":"closed","Body":"A recent PR (#4783) added support to run inferencing on an onnx model with multiple rows at a time. This made the output schema of OnnxTransformer to have variable size vectors which in turn broke some things in Nimbus. This PR fixes the dimensions back.","Url":"https://github.com/dotnet/machinelearning/pull/4867","RelatedDescription":"Closed or merged PR \"Fixed up dimensions to create known sized vectors\" (#4867)"},{"Id":"569016336","IsPullRequest":false,"CreatedAt":"2020-02-21T15:17:42","Actor":"actopozipc","Number":"4871","RawContent":null,"Title":"How to get information about the model (number of hidden layer)?","State":"open","Body":"Hi,  \r\nI've trained and saved my model and everything is working fine. I just wonder if its possible to access information about the model like the number of nods in the different layers or the values of the weights?","Url":"https://github.com/dotnet/machinelearning/issues/4871","RelatedDescription":"Open issue \"How to get information about the model (number of hidden layer)?\" (#4871)"},{"Id":"568952270","IsPullRequest":false,"CreatedAt":"2020-02-21T13:22:36","Actor":"santosh-gokul","Number":"4870","RawContent":null,"Title":"Unable to load DLL 'CpuMathNative' ","State":"open","Body":"### System information\r\n\r\n-  Windows 10\r\n- **.NET  Framework 4.7.2\r\n\r\n### Issue\r\nUnable to load DLL 'CpuMathNative'\r\n\r\n\r\nWhat did you do?:\r\n\r\nCreated a new .net standard project, added ML.NET from nuget and added the project to my existing solution (.net Framework 4.7.2). Set to Any x64.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4870","RelatedDescription":"Open issue \"Unable to load DLL 'CpuMathNative' \" (#4870)"},{"Id":"568000518","IsPullRequest":true,"CreatedAt":"2020-02-21T04:11:30","Actor":"Lynx1820","Number":"4861","RawContent":null,"Title":"Fix for ColumnConcatenatingTransformer","State":"closed","Body":"Used the Concat operator instead of FeatureVectorizer to avoid conflicting output type errors, since FeatureVectorizer outputs strictly floats, but some trainers expect double outputs. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4861","RelatedDescription":"Closed or merged PR \"Fix for ColumnConcatenatingTransformer\" (#4861)"},{"Id":"568613409","IsPullRequest":true,"CreatedAt":"2020-02-21T04:09:34","Actor":"Lynx1820","Number":"4866","RawContent":null,"Title":"Fix for KeytoValue transformer","State":"closed","Body":"Fix a small bug where the source variable name of an ONNX graph was mistakenly always the input variable name, which is not always the case. Other ONNX transformers don't explicitly test for this functionality, so I didn't add a test case. ","Url":"https://github.com/dotnet/machinelearning/pull/4866","RelatedDescription":"Closed or merged PR \"Fix for KeytoValue transformer\" (#4866)"},{"Id":"568711510","IsPullRequest":false,"CreatedAt":"2020-02-21T03:21:42","Actor":"Benknightdark","Number":"4868","RawContent":null,"Title":"Can not load model from local disk","State":"open","Body":"### System information\r\n\r\n- OS Version ：windows 10.0.18363\r\n- .NET Version Info:   3.1.101\r\n\r\n### Issue\r\nHi, I used ml.net to build a movie Recommendation System Model, and when I finished build my model, I saved it into my local disk . And then when I load the model from local disk to predict my test data , it appeared this error  .\r\n![image](https://user-images.githubusercontent.com/5799487/75001311-f973c780-549b-11ea-9310-2c5b153ffe11.png)\r\nHere is my source code ：https://github.com/Benknightdark/mlnet\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4868","RelatedDescription":"Open issue \"Can not load model from local disk\" (#4868)"},{"Id":"567881761","IsPullRequest":true,"CreatedAt":"2020-02-20T22:35:19","Actor":"frank-dong-ms","Number":"4860","RawContent":null,"Title":"fix nightly-build","State":"closed","Body":"related to https://github.com/dotnet/machinelearning/pull/4859.\r\n\r\ncentos is building with netcore3.0 not netcore2.1, add targetFramework parameter to distinct that\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4860","RelatedDescription":"Closed or merged PR \"fix nightly-build\" (#4860)"},{"Id":"568608867","IsPullRequest":false,"CreatedAt":"2020-02-20T22:17:09","Actor":"frank-dong-ms","Number":"4865","RawContent":null,"Title":"move from net core 3.0 to 3.1 on CI test","State":"open","Body":"as net core 3.0 will be out of support soon\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4865","RelatedDescription":"Open issue \"move from net core 3.0 to 3.1 on CI test\" (#4865)"},{"Id":"568042070","IsPullRequest":true,"CreatedAt":"2020-02-20T22:11:43","Actor":"frank-dong-ms","Number":"4862","RawContent":null,"Title":"fix netfx test not running issue","State":"closed","Body":"related to PR: https://github.com/dotnet/machinelearning/pull/4854\r\n\r\nsetting CopyLocalLockFileAssemblies to false for netfx cause test not running on CI like below:\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=528701&view=logs&j=32952595-30e7-56fa-9b86-c4579b87f5d1\r\n\r\nrestrict CopyLocalLockFileAssemblies to false only for netcore 3.0\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4862","RelatedDescription":"Closed or merged PR \"fix netfx test not running issue\" (#4862)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-26T05:30:41.4455531Z","RunDurationInMilliseconds":799}