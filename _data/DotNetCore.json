{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework October 2019 Cumulative Updates Windows 10 version 1903 and Windows 10 version 1909","PublishedOn":"2019-10-24T17:33:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Cumulative Updates for .NET Framework 3.5 and 4.8 on Windows 10 version 1903 and Windows 10 version 1909\nQuality and Reliability\nThis release contains the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/","RawContent":null},{"Title":"Fall .NET Core Survey","PublishedOn":"2019-10-17T20:24:19+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"It’s been a busy time for .NET Core – we just shipped 3.0, and are currently working on a few updates for v3.1 (due in November.) As we turn our attention to .NET Core 5.0, we want to take a step back...","Href":"https://devblogs.microsoft.com/dotnet/fall-net-core-survey/","RawContent":null},{"Title":".NET Framework October 2019 Preview of Quality Rollup","PublishedOn":"2019-10-15T21:11:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 1","PublishedOn":"2019-10-15T16:49:48+00:00","CommentsCount":33,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 1. .NET Core 3.1 will be a small release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0. It will...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/","RawContent":null},{"Title":".NET Framework October 2019 Security and Quality Rollup","PublishedOn":"2019-10-08T19:10:44+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Security and Quality Rollup and Cumulative Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":48,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10738283611","Type":"IssuesEvent","CreatedAt":"2019-10-29T14:32:57","Actor":"mthalman","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Opened issue \"Release of Alpine 3.10 Docker images\" (#132) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)"},{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10744188323","Type":"IssuesEvent","CreatedAt":"2019-10-30T05:13:50","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27541","RelatedDescription":"Opened issue \"GC.KeepAlive JIT intrinsic\" (#27541) at dotnet/coreclr","RelatedBody":"`GC.KeepAlive` is implemented as a empty non-inlineable call today. The call is cheap, but it still shows up as bottleneck in some cases. I have run into while working on https://github.com/dotnet/coreclr/issues/27106 and https://github.com/dotnet/coreclr/issues/18111."},{"Id":"10743899459","Type":"PullRequestEvent","CreatedAt":"2019-10-30T03:57:05","Actor":"trylek","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27534","RelatedDescription":"Merged pull request \"Fix copying of framework assemblies excluded from compilation\" (#27534) at dotnet/coreclr","RelatedBody":""},{"Id":"10743895383","Type":"PullRequestEvent","CreatedAt":"2019-10-30T03:56:04","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27536","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,corert\" (#27536) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @carlossanlop @jkotas"},{"Id":"10743864372","Type":"PullRequestEvent","CreatedAt":"2019-10-30T03:48:37","Actor":"trylek","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27540","RelatedDescription":"Opened pull request \"Publish zipped product build bits like we do for test artifacts\" (#27540) at dotnet/coreclr","RelatedBody":""},{"Id":"10743359076","Type":"IssuesEvent","CreatedAt":"2019-10-30T01:51:36","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27539","RelatedDescription":"Opened issue \"Assertion failed 'inVarToRegMap[varIndex] == REG_STK' in 'Xunit.ConsoleClient.Program:Main(ref):int' (IL size 79)\" (#27539) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-corefx-jitstress2-jitstressregs #20191029.1 Run Test Pri1 CoreFX Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=405485)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/3e84f706-3d36-4fe4-aa8e-4a6d411e010d/workitems/System.Threading.AccessControl.Tests/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_JitStress=2\r\nCOMPlus_JitStressRegs=0x80\r\nCOMPlus_TieredCompilation=0\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 2172 [0x0000087c], Thread: 5640 [0x1608]): Assertion failed 'inVarToRegMap[varIndex] == REG_STK' in 'Xunit.ConsoleClient.Program:Main(ref):int' (IL size 79)\r\n\r\n    File: F:\\workspace\\_work\\1\\s\\src\\jit\\lsra.cpp Line: 4751\r\n    Image: C:\\dotnetbuild\\work\\3e84f706-3d36-4fe4-aa8e-4a6d411e010d\\Payload\\dotnet.exe\r\n\r\n----- end Tue 10/29/2019  9:09:02.89 ----- exit code -1073740286\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10744251229","Type":"PullRequestEvent","CreatedAt":"2019-10-30T05:30:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12997","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12997) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.5\r\n- **Date Produced**: 10/30/2019 4:44 AM\r\n- **Commit**: 2aa52a135c1a1fc0d6cebbc333af20571f5057e9\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"10743526044","Type":"PullRequestEvent","CreatedAt":"2019-10-30T02:30:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12996","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12996) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.2\r\n- **Date Produced**: 10/30/2019 1:05 AM\r\n- **Commit**: c85c3ca6c392c62fc0a14d903d7927edc6fe5bf9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19529.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"10743375306","Type":"PullRequestEvent","CreatedAt":"2019-10-30T01:55:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12995","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12995) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.4\r\n- **Date Produced**: 10/30/2019 12:31 AM\r\n- **Commit**: c0f6cf7488d21f13d9e96b0e87e77851be0e350d\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"10743228159","Type":"PullRequestEvent","CreatedAt":"2019-10-30T01:20:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12995","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12995) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.4\r\n- **Date Produced**: 10/30/2019 12:31 AM\r\n- **Commit**: c0f6cf7488d21f13d9e96b0e87e77851be0e350d\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"10741631000","Type":"PullRequestEvent","CreatedAt":"2019-10-29T20:39:15","Actor":"dotnet-maestro-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12994","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#12994) at dotnet/cli","RelatedBody":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10741613037","Type":"PullRequestEvent","CreatedAt":"2019-10-29T20:36:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12992","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12992) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.1\r\n- **Date Produced**: 10/29/2019 4:57 PM\r\n- **Commit**: 5c9dd04241f307f1aa6b3643d5e07ea89a1dad4a\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19529.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n"},{"Id":"10741440014","Type":"PullRequestEvent","CreatedAt":"2019-10-29T20:14:58","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/12781","RelatedDescription":"Closed pull request \"[source-build] A couple small source-build fixes\" (#12781) at dotnet/cli","RelatedBody":"- Fix the property name for the `Microsoft.TemplateSearch.Common` package version.\r\n- Add exclusions to some more test files."},{"Id":"10741387414","Type":"PullRequestEvent","CreatedAt":"2019-10-29T20:08:07","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/12991","RelatedDescription":"Closed pull request \"Merge release/3.0.1xx to release/3.1.1xx\" (#12991) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10740806703","Type":"PullRequestEvent","CreatedAt":"2019-10-29T18:55:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12993","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12993) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191028.7\r\n- **Date Produced**: 10/29/2019 5:33 PM\r\n- **Commit**: 2c6456d4634df947e3cafd5e7dee02289dc12697\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19528.7\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"},{"Id":"10740515218","Type":"PullRequestEvent","CreatedAt":"2019-10-29T18:20:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12993","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12993) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191028.7\r\n- **Date Produced**: 10/29/2019 5:33 PM\r\n- **Commit**: 2c6456d4634df947e3cafd5e7dee02289dc12697\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19528.7\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10737166154","Type":"PullRequestEvent","CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1633) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10737088185","Type":"PullRequestEvent","CreatedAt":"2019-10-29T12:22:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1633) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10733905058","Type":"IssuesEvent","CreatedAt":"2019-10-29T03:17:11","Actor":"2300070","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Opened issue \"Is there any problem while the 'TypeBuilder' class processing the generic arguments?\" (#1632) at dotnet/standard","RelatedBody":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}"},{"Id":"10727767382","Type":"PullRequestEvent","CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1631) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10727697704","Type":"PullRequestEvent","CreatedAt":"2019-10-28T12:21:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1631) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10722534074","Type":"PullRequestEvent","CreatedAt":"2019-10-27T12:45:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1630","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1630) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191026.6\r\n- **Date Produced**: 10/27/2019 2:42 AM\r\n- **Commit**: 0d0336cc9c3a04d7e23af38698b215a2955e965f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19526.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10722477584","Type":"PullRequestEvent","CreatedAt":"2019-10-27T12:20:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1630","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1630) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191026.6\r\n- **Date Produced**: 10/27/2019 2:42 AM\r\n- **Commit**: 0d0336cc9c3a04d7e23af38698b215a2955e965f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19526.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10744226770","Type":"PullRequestEvent","CreatedAt":"2019-10-30T05:23:49","Actor":"carlossanlop","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42213","RelatedDescription":"Opened pull request \"Add EventWaitHandle creation extension method that takes an ACL\" (#42213) at dotnet/corefx","RelatedBody":"Approved API Proposal: https://github.com/dotnet/corefx/issues/41662\r\n\r\n### Description\r\nWe don't currently have a way to create a synchronization object with a given ACL in .NET Core. We can modify the ACL, but it would be more secure to have the proper ACL on the object from the start.\r\n\r\nThe related ACLs are already exposed in the System.Threading.AccessControl assembly , we should add creation extension methods to the existing ThreadingAclExtensions.\r\n\r\n### Customer impact\r\nBefore this change, customers had to create an EventWaitHandle, then set its ACLs. This presents a few problems:\r\n\r\n- Potential security hole as event wait handles can be accessed between creation and modification.\r\n- Porting difficulties as there isn't a 1-1 API replacement\r\n\r\nThis change addresses those problems by adding a new extension method that allows creating an EventWaitHandle and ensuring the provided ACLs are set during creation.\r\n\r\nThis change is expected to be backported to 3.1."},{"Id":"10744044532","Type":"IssuesEvent","CreatedAt":"2019-10-30T04:34:24","Actor":"dev-masih","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42212","RelatedDescription":"Opened issue \"Unexpected behavior in Dictionary methods Remove and Clear (.NET Core)\" (#42212) at dotnet/corefx","RelatedBody":"I am trying to implement a caching mechanism for enumerating collections safely, and I am checking if all modifications of the built-in collections are triggering an `InvalidOperationException` to be thrown by their respective enumerators. I noticed that in the .NET Core platform the [`Dictionary.Remove`][1] and [`Dictionary.Clear`][2] methods are not triggering this exception. Is this a bug or a feature?\r\n\r\nExample with `Remove`:\r\n\r\n    var dictionary = new Dictionary<int, string>();\r\n    dictionary.Add(1, \"Hello\");\r\n    dictionary.Add(2, \"World\");\r\n    foreach (var entry in dictionary)\r\n    {\r\n        var removed = dictionary.Remove(entry.Key);\r\n        Console.WriteLine($\"{entry} removed: {removed}\");\r\n    }\r\n    Console.WriteLine($\"Count: {dictionary.Count}\");\r\n\r\nOutput:\r\n\r\n> [1, Hello] removed: True  \r\n> [2, World] removed: True  \r\n> Count: 0  \r\n\r\nExample with `Clear`:\r\n\r\n    var dictionary = new Dictionary<int, string>();\r\n    dictionary.Add(1, \"Hello\");\r\n    dictionary.Add(2, \"World\");\r\n    foreach (var entry in dictionary)\r\n    {\r\n        Console.WriteLine(entry);\r\n        dictionary.Clear();\r\n    }\r\n    Console.WriteLine($\"Count: {dictionary.Count}\");\r\n\r\nOutput:\r\n\r\n> [1, Hello]  \r\n> Count: 0  \r\n\r\nThe expected exception is:\r\n\r\n> InvalidOperationException: Collection was modified; enumeration operation may not execute.  \r\n\r\n...as is thrown by the method `Add`, and by the same methods in .NET Framework.\r\n\r\n.NET Core 3.0.0, C# 8, VS 2019 16.3.1, Windows 10\r\n\r\n  [1]: https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.remove\r\n  [2]: https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.clear\r\n\r\n*Note:*This is a StackOverflow question [here](https://stackoverflow.com/questions/58617273/unexpected-behavior-in-dictionary-methods-remove-and-clear-net-core) and I'm not the original poster of this question."},{"Id":"10743935952","Type":"IssuesEvent","CreatedAt":"2019-10-30T04:05:33","Actor":"AriNuer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42211","RelatedDescription":"Opened issue \"Many tests failed due to System.ArgumentException : Absolute path information is required\" (#42211) at dotnet/corefx","RelatedBody":"**Job:**\r\n[corefx-ci #20191029.52](https://dnceng.visualstudio.com/public/_build/results?buildId=406908)\r\n\r\n**Part of error message:**\r\n```\r\nAssert.Throws() Failure\\r\\nExpected: typeof(System.IO.FileNotFoundException)\\r\\nActual: typeof(System.ArgumentException): Absolute path information is required. (Parameter 'path')\\r\\n---- System.ArgumentException : Absolute path information is required. (Parameter 'path')\r\n```\r\n\r\n**Part of stack trace:**\r\n```\r\n   at System.Reflection.Assembly.LoadFile(String path) in /_/src/System.Private.CoreLib/shared/System/Reflection/Assembly.cs:line 220\r\n   at System.Reflection.Tests.AssemblyTests.<>c__DisplayClass37_0.<LoadFile_NoSuchPath_ThrowsFileNotFoundException>b__0() in /_/src/System.Reflection/tests/AssemblyTests.cs:line 324\r\n----- Inner Stack Trace -----\r\n   at System.Reflection.Assembly.LoadFile(String path) in /_/src/System.Private.CoreLib/shared/System/Reflection/Assembly.cs:line 220\r\n   at System.Reflection.Tests.AssemblyTests.<>c__DisplayClass37_0.<LoadFile_NoSuchPath_ThrowsFileNotFoundException>b__0() in /_/src/System.Reflection/tests/AssemblyTests.cs:line 324\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10743793340","Type":"IssuesEvent","CreatedAt":"2019-10-30T03:31:43","Actor":"yyjdelete","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39579","RelatedDescription":"Opened issue \"IntelliSense don't suggest return-types for local function with modifiers\" (#39579) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVS 16.4.0Preview2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Remove the return type of local function, and typing it again;\r\n```cs\r\n        public static void Method()\r\n        {\r\n            static void XXX() { }\r\n            async Task YYY() { }\r\n        }\r\n```\r\n\r\n**Expected Behavior**:\r\nType will be suggest for the place after modifiers.\r\n\r\n**Actual Behavior**:\r\nNo intellisense is shown after `static`;\r\nOnly `void` and another `async` is shown after `async`;\r\n![image](https://user-images.githubusercontent.com/1819074/67825916-da74b280-fb05-11e9-9006-2f328c77c988.png)\r\n\r\nOnly another `async` is shown after `static async`;\r\n"},{"Id":"10743231976","Type":"PullRequestEvent","CreatedAt":"2019-10-30T01:21:07","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39561","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#39561) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10743072561","Type":"PullRequestEvent","CreatedAt":"2019-10-30T00:43:13","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39575","RelatedDescription":"Closed pull request \"Fix multiple diagnostics showing up when configuring unnecessary pare…\" (#39575) at dotnet/roslyn","RelatedBody":"…ntheses severity with editor config"},{"Id":"10742956986","Type":"IssuesEvent","CreatedAt":"2019-10-30T00:16:08","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39578","RelatedDescription":"Closed issue \"IsNodeUnderselected crash\" (#39578) at dotnet/roslyn","RelatedBody":"This is probably a dupe.  but i thought we already fixed this.  I'm still getting this in Preview 2 though:\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\r\nParameter name: position\r\n   at Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(Int32 position,Boolean findInsideTrivia)\r\n   at Microsoft.CodeAnalysis.CodeRefactoringHelpers.IsNodeUnderselected(SyntaxNode node,TextSpan selection)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.State.TryInitializeAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.State.GenerateAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.IntroduceVariableAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.IntroduceVariableCodeRefactoringProvider.ComputeRefactoringsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\nIf htis is a dupe, feel free to close.  However, if this was expected to be fixed by now, i hope this helps!"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10742955128","Type":"PullRequestEvent","CreatedAt":"2019-10-30T00:15:42","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7851) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10742916022","Type":"PullRequestEvent","CreatedAt":"2019-10-30T00:06:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7850) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @jkotas @stephentoub @elinor-fung @noahfalk"},{"Id":"10741399922","Type":"PullRequestEvent","CreatedAt":"2019-10-29T20:09:48","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7850) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10730735555","Type":"PullRequestEvent","CreatedAt":"2019-10-28T18:00:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7848","RelatedDescription":"Merged pull request \"Port changes from CoreCLR\" (#7848) at dotnet/corert","RelatedBody":""},{"Id":"10730348015","Type":"PullRequestEvent","CreatedAt":"2019-10-28T17:14:46","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7849","RelatedDescription":"Merged pull request \"Fix building portable thread pool on Windows\" (#7849) at dotnet/corert","RelatedBody":""},{"Id":"10729151295","Type":"PullRequestEvent","CreatedAt":"2019-10-28T15:08:00","Actor":"filipnavara","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7849","RelatedDescription":"Opened pull request \"Fix building portable thread pool on Windows\" (#7849) at dotnet/corert","RelatedBody":""},{"Id":"10723413866","Type":"PullRequestEvent","CreatedAt":"2019-10-27T18:37:50","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7848","RelatedDescription":"Opened pull request \"Port changes from CoreCLR\" (#7848) at dotnet/corert","RelatedBody":""},{"Id":"10721603960","Type":"PullRequestEvent","CreatedAt":"2019-10-27T04:20:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7846","RelatedDescription":"Merged pull request \"Fix thread safety issue in StructMarshallingThunk\" (#7846) at dotnet/corert","RelatedBody":"The marshalling code generators are not thread safe. We should not cache them.\r\n\r\nHopefully fixes #7829."},{"Id":"10721603956","Type":"IssuesEvent","CreatedAt":"2019-10-27T04:20:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7829","RelatedDescription":"Closed issue \"Compilation crashes with System.IndexOutOfRangeException\" (#7829) at dotnet/corert","RelatedBody":"```\r\n  Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n     at Internal.IL.Stubs.ILStubMethodIL.GetObject(Int32 token) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 550\r\n     at Internal.IL.ILStackHelper.ComputeMaxStack(MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\ILStackHelper.cs:line 290\r\n     at Internal.IL.Stubs.ILStubMethodIL.get_MaxStack() in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 527\r\n     at Internal.JitInterface.CorInfoImpl.Get_CORINFO_METHOD_INFO(MethodDesc method, MethodIL methodIL, CORINFO_METHOD_INFO* methodInfo) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 413\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 154\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10743975661","Type":"PullRequestEvent","CreatedAt":"2019-10-30T04:16:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3822","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3822) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.2\r\n- **Date Produced**: 10/30/2019 1:05 AM\r\n- **Commit**: c85c3ca6c392c62fc0a14d903d7927edc6fe5bf9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.2\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10743526016","Type":"PullRequestEvent","CreatedAt":"2019-10-30T02:30:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3822","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3822) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.2\r\n- **Date Produced**: 10/30/2019 1:05 AM\r\n- **Commit**: c85c3ca6c392c62fc0a14d903d7927edc6fe5bf9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.2\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10742949152","Type":"PullRequestEvent","CreatedAt":"2019-10-30T00:14:20","Actor":"dotnet-maestro-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3821","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3821) at dotnet/sdk","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @nguerrera\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10742923454","Type":"PullRequestEvent","CreatedAt":"2019-10-30T00:08:35","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3819","RelatedDescription":"Merged pull request \"Merge release/3.0.1xx to release/3.1.1xx\" (#3819) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10741097239","Type":"IssuesEvent","CreatedAt":"2019-10-29T19:31:10","Actor":"sfoslund","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2283","RelatedDescription":"Closed issue \"MSBuild run target does not run .NET Core app\" (#2283) at dotnet/sdk","RelatedBody":"_From @danmosemsft on May 29, 2018 1:46_\n\n### Steps to reproduce\r\n\r\nCreate any .NET Core project (eg., with `dotnet new console`)\r\nBuild it (eg., with `dotnet build` or `msbuild /t:restore;build`)\r\nRun it with msbuild (ie., `msbuild /t:run`)\r\n\r\n### Expected  behavior\r\n\r\nIt runs similar to doing `dotnet run` or `dotnet exec`\r\n\r\n### Actual behavior\r\n\r\n`C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\15.0\\bin\\Microsoft.Common.CurrentVersion.targets(1056,5): error : Cannot run '....\\xyz.dll' because project output type is not '.exe' [...\\xyz.csproj]`\r\n\r\n### Environment data\r\n`msbuild /version` output: 15.8.52.54110\r\n\r\nOS info: Win 10\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n```\r\n>dotnet --version\r\n2.1.4\r\n```\r\n\r\nNot sure many people know about the `run` target so perhaps this isn't a big deal - but ideally something in the .NET Core SDK targets would override it to make it work.\r\n\r\ncc @livarcocc\n\n_Copied from original issue: Microsoft/msbuild#3355_"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"514405202","IsPullRequest":false,"CreatedAt":"2019-10-30T05:13:50","Actor":"jkotas","Number":"27541","RawContent":null,"Title":"GC.KeepAlive JIT intrinsic","State":"open","Body":"`GC.KeepAlive` is implemented as a empty non-inlineable call today. The call is cheap, but it still shows up as bottleneck in some cases. I have run into it while working on https://github.com/dotnet/coreclr/issues/27106 and https://github.com/dotnet/coreclr/issues/18111.","Url":"https://github.com/dotnet/coreclr/issues/27541","RelatedDescription":"Open issue \"GC.KeepAlive JIT intrinsic\" (#27541)"},{"Id":"514220431","IsPullRequest":true,"CreatedAt":"2019-10-30T03:57:02","Actor":"trylek","Number":"27534","RawContent":null,"Title":"Fix copying of framework assemblies excluded from compilation","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27534","RelatedDescription":"Closed or merged PR \"Fix copying of framework assemblies excluded from compilation\" (#27534)"},{"Id":"514311346","IsPullRequest":true,"CreatedAt":"2019-10-30T03:56:01","Actor":"Dotnet-GitSync-Bot","Number":"27536","RawContent":null,"Title":"Mirror changes from dotnet/corefx,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @carlossanlop @jkotas","Url":"https://github.com/dotnet/coreclr/pull/27536","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,corert\" (#27536)"},{"Id":"514379452","IsPullRequest":true,"CreatedAt":"2019-10-30T03:48:37","Actor":"trylek","Number":"27540","RawContent":null,"Title":"Publish zipped product build bits like we do for test artifacts","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27540","RelatedDescription":"Open PR \"Publish zipped product build bits like we do for test artifacts\" (#27540)"},{"Id":"514341853","IsPullRequest":false,"CreatedAt":"2019-10-30T01:51:35","Actor":"VincentBu","Number":"27539","RawContent":null,"Title":"Assertion failed 'inVarToRegMap[varIndex] == REG_STK' in 'Xunit.ConsoleClient.Program:Main(ref):int' (IL size 79)","State":"open","Body":"**Job:**\r\n[coreclr-corefx-jitstress2-jitstressregs #20191029.1 Run Test Pri1 CoreFX Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=405485)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/3e84f706-3d36-4fe4-aa8e-4a6d411e010d/workitems/System.Threading.AccessControl.Tests/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_JitStress=2\r\nCOMPlus_JitStressRegs=0x80\r\nCOMPlus_TieredCompilation=0\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 2172 [0x0000087c], Thread: 5640 [0x1608]): Assertion failed 'inVarToRegMap[varIndex] == REG_STK' in 'Xunit.ConsoleClient.Program:Main(ref):int' (IL size 79)\r\n\r\n    File: F:\\workspace\\_work\\1\\s\\src\\jit\\lsra.cpp Line: 4751\r\n    Image: C:\\dotnetbuild\\work\\3e84f706-3d36-4fe4-aa8e-4a6d411e010d\\Payload\\dotnet.exe\r\n\r\n----- end Tue 10/29/2019  9:09:02.89 ----- exit code -1073740286\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27539","RelatedDescription":"Open issue \"Assertion failed 'inVarToRegMap[varIndex] == REG_STK' in 'Xunit.ConsoleClient.Program:Main(ref):int' (IL size 79)\" (#27539)"},{"Id":"514333474","IsPullRequest":false,"CreatedAt":"2019-10-30T01:24:59","Actor":"VincentBu","Number":"27538","RawContent":null,"Title":"Assert failure: !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")","State":"open","Body":"**Job:**\r\n[coreclr-corefx-jitstress #20191028.1 Run Test Pri1 CoreFX Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=405427)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/c32b7dd4-a867-4c98-9583-b777a4ef445e/workitems/System.Runtime.CompilerServices.Unsafe.Tests/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_TailcallStress=1\r\nCOMPlus_TieredCompilation=0\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 1360 [0x00000550], Thread: 4072 [0x0fe8]): !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")\r\n\r\nCORECLR! `Object::ValidateInner'::`1'::catch$12 + 0x147 (0x00007ffc`fee7d277)\r\nCORECLR! CallSettingFrame_LookupContinuationIndex + 0x20 (0x00007ffc`fed12c40)\r\nCORECLR! _FrameHandler4::CxxCallCatchBlock + 0x1DE (0x00007ffc`fed10b7e)\r\nNTDLL! RtlCaptureContext + 0x3C3 (0x00007ffd`0a959bd3)\r\nCORECLR! Object::ValidateInner + 0x111 (0x00007ffc`fe7877a1)\r\nCORECLR! Object::Validate + 0x13A (0x00007ffc`fe78764a)\r\nCORECLR! OBJECTREF::OBJECTREF + 0x97 (0x00007ffc`fe7808c7)\r\nCORECLR! JIT_VirtualFunctionPointer + 0xAA (0x00007ffc`fe607bca)\r\n<no module>! <no symbol> + 0x0 (0x00007ffc`9f7a3108)\r\n    File: F:\\workspace\\_work\\1\\s\\src\\vm\\object.cpp Line: 674\r\n    Image: C:\\dotnetbuild\\work\\c32b7dd4-a867-4c98-9583-b777a4ef445e\\Payload\\dotnet.exe\r\n\r\n----- end Tue 10/29/2019  7:01:21.49 ----- exit code -1073740286\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27538","RelatedDescription":"Open issue \"Assert failure: !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")\" (#27538)"},{"Id":"514262664","IsPullRequest":true,"CreatedAt":"2019-10-30T00:21:34","Actor":"elinor-fung","Number":"27535","RawContent":null,"Title":"Move activity tracking helpers for assembly loads out of ActivityTracker","State":"closed","Body":"Move the helpers to `AssemblyLoadContext` (out of `shared`), where the check for tracing being enabled also lives.","Url":"https://github.com/dotnet/coreclr/pull/27535","RelatedDescription":"Closed or merged PR \"Move activity tracking helpers for assembly loads out of ActivityTracker\" (#27535)"},{"Id":"514311730","IsPullRequest":true,"CreatedAt":"2019-10-30T00:16:27","Actor":"franksinankaya","Number":"27537","RawContent":null,"Title":"Add GCC to PR gate","State":"open","Body":"@am11 @jkotas @janvorli \r\n\r\nI don't know if this is going to work or not but I copied what clang does.","Url":"https://github.com/dotnet/coreclr/pull/27537","RelatedDescription":"Open PR \"Add GCC to PR gate\" (#27537)"},{"Id":"514157960","IsPullRequest":true,"CreatedAt":"2019-10-30T00:13:15","Actor":"Dotnet-GitSync-Bot","Number":"27532","RawContent":null,"Title":"Mirror changes from dotnet/corert,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @stephentoub","Url":"https://github.com/dotnet/coreclr/pull/27532","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,corefx\" (#27532)"},{"Id":"514189442","IsPullRequest":true,"CreatedAt":"2019-10-29T20:06:26","Actor":"echesakovMSFT","Number":"27533","RawContent":null,"Title":"Remove unsigned overloads of LeadingSignCount","State":"open","Body":"In API Review this morning it was decided to remove unsigned overloads of `LeadingSignCount`","Url":"https://github.com/dotnet/coreclr/pull/27533","RelatedDescription":"Open PR \"Remove unsigned overloads of LeadingSignCount\" (#27533)"},{"Id":"514111830","IsPullRequest":false,"CreatedAt":"2019-10-29T17:55:48","Actor":"blowin","Number":"27531","RawContent":null,"Title":"Inline for lambda","State":"open","Body":"Now:\r\n```C#\r\npublic int Calculate(Func<int, int, int> c)\r\n{\r\n return c(10, 20);   \r\n}\r\n\r\npublic int CallCalculate() \r\n{\r\n return Calculate((x1, x2) => x1 + x2);   \r\n}\r\n```\r\n\r\nCompile to:\r\n```C#\r\nprivate sealed class <>c\r\n{\r\n    public static readonly <>c <>9 = new <>c();\r\n\r\n    public static Func<int, int, int> <>9__1_0;\r\n\r\n    internal int <CallCalculate>b__1_0(int x1, int x2)\r\n    {\r\n        return x1 + x2;\r\n    }\r\n}\r\n\r\npublic int Calculate(Func<int, int, int> c)\r\n{\r\n    return c(10, 20);\r\n}\r\n\r\npublic int CallCalculate()\r\n{\r\n    return Calculate(<>c.<>9__1_0 ?? (<>c.<>9__1_0 = new Func<int, int, int>(<>c.<>9.<CallCalculate>b__1_0)));\r\n}\r\n```\r\n\r\nIs inline lambda possible?\r\nLike this:\r\n```C#\r\npublic int Calculate()\r\n{\r\n return 10 + 20;   \r\n}\r\n\r\npublic int CallCalculate() \r\n{\r\n return Calculate();   \r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27531","RelatedDescription":"Open issue \"Inline for lambda\" (#27531)"},{"Id":"513651946","IsPullRequest":false,"CreatedAt":"2019-10-29T17:35:35","Actor":"VincentBu","Number":"27518","RawContent":null,"Title":"Test failed: System.IO.AsWinRTStreamTests.TestRead_MemoryStream_None","State":"closed","Body":"**Job:**\r\n[coreclr-corefx-jitstressregs #20191028.1 Run Test Pri1 CoreFX Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=404253)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/26390fc6-69ce-44a9-888c-8178ee69d4b9/workitems/System.Runtime.WindowsRuntime.Tests/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_JitStressRegs=0x80\r\nCOMPlus_TieredCompilation=0\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nC:\\dotnetbuild\\work\\26390fc6-69ce-44a9-888c-8178ee69d4b9\\Work\\804cee4b-2133-4af8-ba6a-1fbc62789215\\Exec>\"C:\\dotnetbuild\\work\\26390fc6-69ce-44a9-888c-8178ee69d4b9\\Payload\\dotnet.exe\" exec --runtimeconfig System.Runtime.WindowsRuntime.Tests.runtimeconfig.json xunit.console.dll System.Runtime.WindowsRuntime.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\26390fc6-69ce-44a9-888c-8178ee69d4b9\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Runtime.WindowsRuntime.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Runtime.WindowsRuntime.Tests (found 117 of 120 test cases)\r\n  Starting:    System.Runtime.WindowsRuntime.Tests (parallel test collections = on, max threads = 2)\r\n    System.IO.CreateSafeFileHandleTests.FromStorageFolder_SurfaceNotFoundException [SKIP]\r\n      Condition(s) not met: \"IsInAppContainer\"\r\n    System.IO.CreateSafeFileHandleTests.FromStorageFolder_Basic [SKIP]\r\n      Condition(s) not met: \"IsInAppContainer\"\r\n    System.IO.CreateSafeFileHandleTests.FromStorageFile_FileStream [SKIP]\r\n      Condition(s) not met: \"IsInAppContainer\"\r\n    System.IO.CreateSafeFileHandleTests.FromStorageFile_Basic [SKIP]\r\n      Condition(s) not met: \"IsInAppContainer\"\r\n    System.IO.CreateSafeFileHandleTests.FromStorageFolder_FileStream [SKIP]\r\n      Condition(s) not met: \"IsInAppContainer\"\r\n    System.IO.CreateSafeFileHandleTests.FromStorageFolder_SurfaceIOException [SKIP]\r\n      Condition(s) not met: \"IsInAppContainer\"\r\n    System.IO.CreateSafeFileHandleTests.FromStorageFile_SurfaceIOException [SKIP]\r\n      Condition(s) not met: \"IsInAppContainer\"\r\n    System.IO.AsWinRTStreamTests.TestRead_MemoryStream_None [FAIL]\r\n      Completion callback specified to ReadAsync callback must be invoked\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime.WindowsRuntime/tests/System/IO/AsWinRTStreamTests.cs(256,0): at System.IO.AsWinRTStreamTests.DoTestRead(Func`1 createStreamFunc, InputStreamOptions inputStreamOptions, Boolean mustInvokeProgressHandler, Boolean completesSynchronously)\r\n        /_/src/System.Runtime.WindowsRuntime/tests/System/IO/AsWinRTStreamTests.cs(144,0): at System.IO.AsWinRTStreamTests.TestRead_MemoryStream_None()\r\n  Finished:    System.Runtime.WindowsRuntime.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Runtime.WindowsRuntime.Tests  Total: 274, Errors: 0, Failed: 1, Skipped: 7, Time: 13.963s\r\nexit code 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27518","RelatedDescription":"Closed issue \"Test failed: System.IO.AsWinRTStreamTests.TestRead_MemoryStream_None\" (#27518)"},{"Id":"513734092","IsPullRequest":true,"CreatedAt":"2019-10-29T16:58:18","Actor":"am11","Number":"27523","RawContent":null,"Title":"Delete null comparisons of non-null arguments","State":"closed","Body":"Remove gcc nonnull-compare suppression and impossible conditions.\r\n\r\n> error: nonnull argument 'this' compared to NULL\r\n> [-Werror=nonnull-compare]","Url":"https://github.com/dotnet/coreclr/pull/27523","RelatedDescription":"Closed or merged PR \"Delete null comparisons of non-null arguments\" (#27523)"},{"Id":"513695869","IsPullRequest":true,"CreatedAt":"2019-10-29T16:55:28","Actor":"VSadov","Number":"27521","RawContent":null,"Title":"Reduce frequency of GC long running tests to twice a week. Make GC simulator tests run nightly, for now.","State":"closed","Body":"Reduce frequency of GC long running tests to twice a week. Make GC simulator tests run nightly, for now.","Url":"https://github.com/dotnet/coreclr/pull/27521","RelatedDescription":"Closed or merged PR \"Reduce frequency of GC long running tests to twice a week. Make GC simulator tests run nightly, for now.\" (#27521)"},{"Id":"513587421","IsPullRequest":true,"CreatedAt":"2019-10-29T16:20:33","Actor":"jkoritzinsky","Number":"27513","RawContent":null,"Title":"Fix resolving IBCMerge's path in build.cmd","State":"closed","Body":"Resolve IBCMerge's path via NuGetPackageRoot since we never actually restore ibcmerge.csproj directly. This will go away when we move to Arcade-driven IBCMerge.\r\n\r\nOfficial build link: https://dev.azure.com/dnceng/internal/_build/results?buildId=405175&view=results","Url":"https://github.com/dotnet/coreclr/pull/27513","RelatedDescription":"Closed or merged PR \"Fix resolving IBCMerge's path in build.cmd\" (#27513)"},{"Id":"514044315","IsPullRequest":false,"CreatedAt":"2019-10-29T16:14:08","Actor":"BramEsendam","Number":"27530","RawContent":null,"Title":".net core Console app closes with Segmentation fault","State":"open","Body":"I am using .net core 3.0.0 on Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-66-generic x86_64)\r\n\r\nI have been running into a Segmentation fault error on linux it runs fine on windows.\r\n\r\nI have tried debugging it with GDB and [this](https://pastebin.com/q4N3TSqS) is the result from that. \r\nThe Segment fault error happened in Thread 25.\r\nThis is my first time doing any debugging on Linux so I'm not sure if that was the right backtrack. \r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/27530","RelatedDescription":"Open issue \".net core Console app closes with Segmentation fault\" (#27530)"},{"Id":"513880095","IsPullRequest":false,"CreatedAt":"2019-10-29T12:24:05","Actor":"Logerfo","Number":"27528","RawContent":null,"Title":"Single exe packaging without framework libraries","State":"open","Body":"Currently, single executable applications (with or without trimming) packages both framework and third party libraries. Because of the former, the result is very large sized if compared to non-packaged builds.\r\nThere should be an option to only package third party libraries, still relying on the installed framework.\r\nAn alternative is [Costura](https://github.com/Fody/Costura), but:\r\n1) It's not free;\r\n2) It's being deprecated in favor of single executables, as for Fody/Costura#442.\r\n\r\nI don't think it would be hard to implement this, since the current feature is more complex than the requested alternative approach.","Url":"https://github.com/dotnet/coreclr/issues/27528","RelatedDescription":"Open issue \"Single exe packaging without framework libraries\" (#27528)"},{"Id":"513874823","IsPullRequest":true,"CreatedAt":"2019-10-29T12:13:58","Actor":"dotnet-maestro[bot]","Number":"27527","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/28/2019 5:34 PM\r\n- **Commit**: 6c6a130ba15615a4b589b6e2d8120f4f30f8275f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19528.5\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27527","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#27527)"},{"Id":"513874639","IsPullRequest":true,"CreatedAt":"2019-10-29T12:13:35","Actor":"dotnet-maestro[bot]","Number":"27526","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19528.12\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27526","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#27526)"},{"Id":"513871952","IsPullRequest":false,"CreatedAt":"2019-10-29T12:07:53","Actor":"adamsitnik","Number":"27525","RawContent":null,"Title":"IndexOf and LastIndexOf are for some test cases few times slower on Linux","State":"open","Body":"`IndexOf` and `LastIndexOf` are for some test cases few times slower on Linux.\r\n\r\n| Slower                                                                                                                   | Lin/Win | Win Median (ns) | Lin Median (ns) | Modality|\r\n| ------------------------------------------------------------------------------------------------------------------------ | -------:| ---------------:| ---------------:| --------:|\r\n| System.Memory.ReadOnlySpan.IndexOfString(input: \"だ\", value: \"た\", comparisonType: InvariantCulture)                       |   34.21 |          107.43 |         3675.43 |         |\r\n| System.Globalization.Tests.StringSearch.LastIndexOf_Word_NotFound(Options: (, None, True))                               |    7.66 |         2952.92 |        22631.17 |         |\r\n| System.Globalization.Tests.StringSearch.LastIndexOf_Word_NotFound(Options: (en-US, IgnoreCase, True))                    |    7.62 |         2954.37 |        22515.44 |         |\r\n| System.Globalization.Tests.StringSearch.LastIndexOf_Word_NotFound(Options: (en-US, None, True))                          |    5.75 |         2963.99 |        17052.76 |         |\r\n| System.Globalization.Tests.StringSearch.LastIndexOf_Word_NotFound(Options: (, IgnoreCase, True))                         |    5.55 |         2958.29 |        16412.98 |         |\r\n| System.Globalization.Tests.StringSearch.LastIndexOf_Word_NotFound(Options: (en-US, IgnoreSymbols, False))                |    4.87 |         3222.91 |        15680.86 |         |\r\n| System.Globalization.Tests.StringSearch.LastIndexOf_Word_NotFound(Options: (en-US, OrdinalIgnoreCase, False))            |    3.47 |          596.96 |         2072.40 |         |\r\n| System.Globalization.Tests.StringSearch.IndexOf_Word_NotFound(Options: (en-US, IgnoreSymbols, False))                    |    3.17 |         3183.26 |        10084.88 |         |\r\n| System.Globalization.Tests.StringSearch.IndexOf_Word_NotFound(Options: (en-US, OrdinalIgnoreCase, False))                |    3.12 |          678.58 |         2118.31 |         |\r\n| System.Globalization.Tests.StringSearch.IndexOf_Word_NotFound(Options: (en-US, IgnoreCase, True))                        |    2.73 |         3713.38 |        10119.90 |         |\r\n| System.Globalization.Tests.StringSearch.IndexOf_Word_NotFound(Options: (, None, True))                                   |    2.67 |         3850.16 |        10264.14 |         |\r\n| System.Globalization.Tests.StringSearch.IndexOf_Word_NotFound(Options: (en-US, None, True))                              |    2.64 |         3935.11 |        10406.63 |         |\r\n| System.Globalization.Tests.StringSearch.IndexOf_Word_NotFound(Options: (, IgnoreCase, True))                             |    2.64 |         3707.07 |         9803.11 |         |\r\n| System.Globalization.Tests.StringSearch.LastIndexOf_Word_NotFound(Options: (en-US, Ordinal, False))                      |    2.36 |          131.66 |          311.09 |         |\r\n| System.Memory.ReadOnlySpan.IndexOfString(input: \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAX |    2.35 |          235.63 |          553.18 |         |\r\n| System.Globalization.Tests.StringSearch.LastIndexOf_Word_NotFound(Options: (pl-PL, None, False))                         |    2.17 |         8300.73 |        18011.26 |         |\r\n| System.Memory.ReadOnlySpan.IndexOfString(input: \"Hello WorldbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbareallyreallylongHello World |    1.72 |           45.05 |           77.69 |         |\r\n| System.Memory.ReadOnlySpan.IndexOfString(input: \"More Test's\", value: \"Tests\", comparisonType: OrdinalIgnoreCase)        |    1.61 |           53.91 |           86.82 |         |\r\n| System.Globalization.Tests.StringSearch.IndexOf_Word_NotFound(Options: (pl-PL, None, False))                             |    1.37 |         9237.59 |        12681.21 |         |\r\n| System.Memory.ReadOnlySpan.IndexOfString(input: \"StrIng\", value: \"string\", comparisonType: OrdinalIgnoreCase)            |    1.30 |           37.58 |           48.82 |         |\r\n\r\n\r\nHow to run the [benchmarks](https://github.com/dotnet/performance/blob/24092eb7d6da8d9ea2b018b9b2908b710650c965/src/benchmarks/micro/corefx/System.Globalization/StringSearch.cs#L99-L103):\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter 'System.Globalization*IndexOf*'  '*IndexOfString'\r\n```\r\n\r\nRecommended profilers are [PerfCollect](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect) and [VTune](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#VTune) which works great on Linux.\r\n\r\nSome of the differences come from ICU (on Windows we are using WinAPI), some might come from the managed hot path. The person who is willing to work on this issue should use VTune/PerfCollect, identify the problem and solve it. It might require tuning the ICU itself ;)","Url":"https://github.com/dotnet/coreclr/issues/27525","RelatedDescription":"Open issue \"IndexOf and LastIndexOf are for some test cases few times slower on Linux\" (#27525)"},{"Id":"513741191","IsPullRequest":false,"CreatedAt":"2019-10-29T07:33:58","Actor":"adamsitnik","Number":"27524","RawContent":null,"Title":"Handling Hardware Exceptions is much slower on Linux","State":"open","Body":"Using exceptions for control flow is a very bad idea, especially from performance point of view. I've spoken with @janvorli about this and we know that there is a difference between Windows and Linux. The goal of this issue is to track this difference.\r\n\r\n| Slower                                                                      | Lin/Win | Win Median (ns) | Lin Median (ns) | Modality|\r\n| --------------------------------------------------------------------------- | -------:| ---------------:| ---------------:| -------- |\r\n| Exceptions.Handling.ThrowAndCatchWhen(kind: Hardware)                       |   25.11 |        20775.66 |       521648.36 |         |\r\n| Exceptions.Handling.MultipleNestedTryCatch_FirstCatches(kind: Hardware)     |   25.11 |        20875.20 |       524122.26 |         |\r\n| Exceptions.Handling.ThrowAndCatchWhenFinally(kind: Hardware)                |   24.75 |        21114.66 |       522687.48 |         |\r\n| Exceptions.Handling.MultipleNestedTryCatch_LastCatches(kind: Hardware)      |   24.48 |        21519.67 |       526803.53 |         |\r\n| Exceptions.Handling.ThrowAndCatchFinally(kind: Hardware)                    |   24.41 |        21669.90 |       529049.46 |         |\r\n| Exceptions.Handling.ThrowAndCatch_ManyCatchBlocks(kind: Hardware)           |   24.10 |        21991.97 |       530030.41 | several?|\r\n| Exceptions.Handling.MultipleNestedTryFinally(kind: Hardware)                |   23.96 |        21908.57 |       525023.32 |         |\r\n| Exceptions.Handling.ThrowAndCatch(kind: Hardware)                           |   23.41 |        22426.34 |       525022.52 |         |\r\n| Exceptions.Handling.ThrowAndCatchDeep(kind: Hardware)                       |   16.13 |        33045.54 |       533146.63 |         |\r\n| Exceptions.Handling.TryAndFinallyDeep(kind: Hardware)                       |   15.74 |        34275.09 |       539323.13 |         |\r\n| Exceptions.Handling.TryAndCatchDeep_CaugtAtTheTop(kind: Hardware)           |   15.69 |        34168.04 |       536168.86 | bimodal |\r\n| Exceptions.Handling.ThrowAndCatchDeepRecursive(kind: Hardware)              |   15.48 |        34633.58 |       536240.69 |         |\r\n| Exceptions.Handling.CatchAndThrowOtherDeep(kind: Hardware)                  |    4.51 |       170771.35 |       769741.43 |         |\r\n| Exceptions.Handling.CatchAndRethrowDeep(kind: Hardware)                     |    4.31 |       171411.33 |       739533.77 |         |\r\n| Exceptions.Handling.ThrowAndCatch_ManyCatchBlocks(kind: ReflectionHardware) |    2.88 |       196712.74 |       565876.49 |         |\r\n| Exceptions.Handling.ThrowAndCatch(kind: ReflectionHardware)                 |    2.86 |       197403.98 |       564056.95 |         |\r\n| Exceptions.Handling.ThrowAndCatchDeep(kind: ReflectionHardware)             |    2.71 |       215040.24 |       583315.19 |         |\r\n| Exceptions.Handling.ThrowAndCatchDeepRecursive(kind: ReflectionHardware)    |    2.69 |       214643.25 |       578046.54 |         |\r\n| Exceptions.Handling.CatchAndThrowOtherDeep(kind: Software)                  |    1.49 |       160539.16 |       239381.94 |         |\r\n| Exceptions.Handling.CatchAndRethrowDeep(kind: Software)                     |    1.40 |       154818.05 |       217226.15 |         |\r\n\r\n| Faster                                                                      | base/diff | Win Median (ns) | Lin Median (ns) | Modality|\r\n| --------------------------------------------------------------------------- | ---------:| ---------------:| ---------------:| --------:|\r\n| Exceptions.Handling.ThrowAndCatch(kind: ReflectionSoftware)                 |      4.68 |       188501.51 |        40264.51 |         |\r\n| Exceptions.Handling.ThrowAndCatch_ManyCatchBlocks(kind: ReflectionSoftware) |      4.64 |       191127.36 |        41204.83 |         |\r\n| Exceptions.Handling.ThrowAndCatchDeep(kind: ReflectionSoftware)             |      3.91 |       201290.58 |        51517.30 |         |\r\n| Exceptions.Handling.ThrowAndCatchDeepRecursive(kind: ReflectionSoftware)    |      3.36 |       203978.57 |        60632.90 |         |\r\n| Exceptions.Handling.MultipleNestedTryCatch_LastCatches(kind: Software)      |      1.19 |        13525.26 |        11395.63 |         |\r\n| Exceptions.Handling.ThrowAndCatchFinally(kind: Software)                    |      1.19 |        13400.75 |        11303.67 |         |\r\n| Exceptions.Handling.ThrowAndCatchWhen(kind: Software)                       |      1.19 |        12896.90 |        10880.16 |         |\r\n| Exceptions.Handling.MultipleNestedTryFinally(kind: Software)                |      1.18 |        13336.84 |        11295.40 |         |\r\n| Exceptions.Handling.ThrowAndCatch(kind: Software)                           |      1.17 |        13052.95 |        11166.26 |         |\r\n| Exceptions.Handling.MultipleNestedTryCatch_FirstCatches(kind: Software)     |      1.17 |        12888.73 |        11059.73 |         |\r\n| Exceptions.Handling.ThrowAndCatch_ManyCatchBlocks(kind: Software)           |      1.13 |        13045.92 |        11585.71 |         |\r\n| Exceptions.Handling.TryAndFinallyDeep(kind: Software)                       |      1.10 |        25933.01 |        23489.22 |         |\r\n| Exceptions.Handling.ThrowAndCatchDeep(kind: Software)                       |      1.07 |        24724.46 |        23001.59 |         |\r\n| Exceptions.Handling.ThrowAndCatchDeepRecursive(kind: Software)              |      1.07 |        25909.13 |        24214.04 |         |\r\n| Exceptions.Handling.ThrowAndCatchWhenFinally(kind: Software)                |      1.02 |        12964.28 |        12667.33 |         |\r\n| Exceptions.Handling.TryAndCatchDeep_CaugtAtTheTop(kind: Software)           |      1.02 |        25957.84 |        25491.83 |         |\r\n\r\n1. How to run the [benchmarks](https://github.com/dotnet/performance/blob/master/src/benchmarks/micro/coreclr/Exceptions/Handling.cs):\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter 'Exceptions*'\r\n```\r\n\r\n2. Recommended profilers are [PerfCollect](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect) and [VTune](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#VTune) VTune works great on Linux.","Url":"https://github.com/dotnet/coreclr/issues/27524","RelatedDescription":"Open issue \"Handling Hardware Exceptions is much slower on Linux\" (#27524)"},{"Id":"513728664","IsPullRequest":true,"CreatedAt":"2019-10-29T06:58:15","Actor":"noahfalk","Number":"27522","RawContent":null,"Title":"[3.1] Support large EventSource filter args","State":"open","Body":"Port #27500 to 3.1\r\n\r\n## Customer Impact\r\nToday APM tools such as ApplicationInsights ask customers to reference NuGet packages and load in-proc assemblies in order to make distributed tracing work. When an engineer needs to diagnose a production issue and the application developer didn't have the foresight to adopt an appropriate NuGet package already, it is extremely high friction to retroactively add it. It requires source access, rebuilding the application, redeploy to production, and restarting the running instance where the problem is reproing. DiagnosticSourceEventSource and EventPipe provide an alternate telemetry channel that can be enabled on-demand with no restart and no redeploy to solve the same class of issues. The fix here removes a rough edge allowing the alternative EventPipe scenario to work much more effectively for this use case.\r\n\r\n## How the fix works\r\nGoing one level deeper, DiagnosticSourceEventSource requires the telemetry consuming tool to specify a list of runtime events to gather as well as every desired property on those events. This list could easily include dozens of events with multiple properties on each event when trying to use it for distributed tracing. Currently there is a limitation that the complete textual encoding of this list is less than 1KB and it is very easy to exceed this limit for this use case. If the limit is exceeded the runtime ignores the request and logs nothing. The fix relaxes this limit.\r\n\r\n## Testing\r\nI have privately debugged and tested the fix using a prototype distributed tracing tool.\r\n\r\n## Risk\r\nLow - ETW blocks tools from entering this codepath with more than 1KB of data so it can only be hit with new EventPipe based tooling. The modified code path is also wrapped in a blanket try/catch region such that even the previous bad behavior of throwing a NullReferenceException was silently ignored and the application continued as if the problematic logging request had never been made.\r\n\r\n## Original commit text\r\n1. Fix NullReferenceException. When the filter args exceeded the\r\nhard-coded size limit GetDataFromController would return data = null.\r\nThe code previously asserted that data was not null and triggered NRE\r\nwhen it was. The fix correctly null checks the value instead of\r\nasserting and uses an empty args dictionary in this case, the same as if\r\nfilter args had been empty to begin with.\r\n\r\n2. ETW has always limited filter args to 1024 bytes but EventPipe has no\r\nsuch restriction. When using DiagnosticSourceEventSource it can be\r\nuseful to specify a larger filter arg blob. I can't do anything about\r\nETW's restriction but there is no need for the runtime to force\r\nEventPipe to be equally limited. The larger size also reduces the chance\r\nthat we need to hit the fallback path above causing filter args to be\r\nignored.","Url":"https://github.com/dotnet/coreclr/pull/27522","RelatedDescription":"Open PR \"[3.1] Support large EventSource filter args\" (#27522)"},{"Id":"513679727","IsPullRequest":true,"CreatedAt":"2019-10-29T04:00:22","Actor":"trylek","Number":"27520","RawContent":null,"Title":"WIP: Initial implementation of Crossgen2 CI pipeline, take #3","State":"open","Body":"I have refactored my Crossgen2 CI pipeline change to not use\r\nSuperIlc for framework compilation. I intend to introduce that at a\r\nlater time to basically simplify the change and make it easier to\r\nreview and test. It's currently based on my preparatory change\r\n\"CoreCLR pipeline optimization\" which also introduces the logic\r\nto Crossgen framework assemblies as part of the run-test job.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/27520","RelatedDescription":"Open PR \"WIP: Initial implementation of Crossgen2 CI pipeline, take #3\" (#27520)"},{"Id":"513671817","IsPullRequest":false,"CreatedAt":"2019-10-29T03:29:11","Actor":"NextTurn","Number":"27519","RawContent":null,"Title":"calli target fail to inline","State":"open","Body":"The callers can be inline after #13756, but the callees can't.\r\n\r\n```\r\n.assembly extern legacy library mscorlib {}\r\n\r\n.assembly legacy library calli_inline {}\r\n.class private auto ansi beforefieldinit calli_test\r\n       extends [mscorlib]System.Object\r\n{\r\n  .field private static int32 a\r\n  .method public static int32 f1() aggressiveinlining aggressiveoptimization\r\n  {\r\n    ldsfld int32 calli_test::a\r\n    ret\r\n  }\r\n  .method public static int32 g1() aggressiveinlining aggressiveoptimization\r\n  {\r\n    ldftn int32 calli_test::f1()\r\n    calli int32 ()\r\n    ret\r\n  }\r\n  .method public hidebysig static int32 Main() cil managed aggressiveoptimization\r\n  {\r\n    .entrypoint\r\n    .maxstack  2\r\n    call int32 calli_test::g1()\r\n    call string [mscorlib]System.Console::ReadLine()\r\n    pop\r\n    ret\r\n  }\r\n}\r\n```\r\n\r\n**Actual**:\r\n\r\n```asm\r\npush    rsi\r\nsub     rsp,20h\r\n\r\nmov     rax,offset calli_test.f1()\r\ncall    rax\r\nmov     esi,eax\r\ncall    System.Console.ReadLine()\r\nmov     eax,esi\r\n\r\nadd     rsp,20h\r\npop     rsi\r\nret\r\n```\r\n\r\n**Expected**:\r\n\r\n```asm\r\npush    rsi\r\nsub     rsp,20h\r\n\r\nmov     esi,[]\r\ncall    System.Console.ReadLine()\r\nmov     eax,esi\r\n\r\nadd     rsp,20h\r\npop     rsi\r\nret\r\n```\r\n---\r\n\r\nHowever, when I printed the stack trace from inside the callee, it doesn't show up. Earlier I was using stack trace to determine if a method is inline.\r\n\r\n```\r\n  .method public static int32 f1() aggressiveinlining aggressiveoptimization\r\n  {\r\n    newobj instance void [mscorlib]System.Diagnostics.StackTrace::.ctor()\r\n    callvirt instance string [mscorlib]System.Object::ToString()\r\n    call void [mscorlib]System.Console::WriteLine(string)\r\n    ldsfld int32 calli_test::a\r\n    ret\r\n  }\r\n```\r\n\r\n```\r\n   at calli_test.Main()\r\n```\r\n\r\n---\r\n\r\n(I couldn't figure out how to use `jit-dasm` in jitutils, it just gave tons of errors!)","Url":"https://github.com/dotnet/coreclr/issues/27519","RelatedDescription":"Open issue \"calli target fail to inline\" (#27519)"},{"Id":"513629553","IsPullRequest":true,"CreatedAt":"2019-10-29T00:36:16","Actor":"nattress","Number":"27517","RawContent":null,"Title":"[Crossgen2] Compile Multiple Assemblies per invocation","State":"open","Body":"* Multiple input files can be specified on the command line and each will be compiled with the same reference assembly set and other compilation arguments. This will allow multi-threaded compilation of assemblies with multi-threaded JIT when we set that up in the next few weeks.\r\n* Fix broken single method compilation mode\r\n* Simplify the `Run()` method so that it is managing fewer sets of input files and paths so they're reduced to a minimized set: a map of simple -> file names for the `TypeSystemContext`, the set of input modules used to build the set of compilation jobs, the set of referenceable modules (merge of input and references) used for IBC profile reading, compilation module groups\r\n* Use `CompilationModuleGroup` in the compiler as the source of input modules instead of the `TypeSystemContext`. The `TypeSystemContext` is re-used for all compilations, whereas each compilation will have a `CompilationModuleGroup` and can answer that more accurately.\r\n* Tweak the command line for DGML file output so they are generated adjacent to the map files we currently create. `--dgmllog` no longer takes a file name; it emits a file parallel to the output assembly and map file with .dgml extension.\r\n* Refactoring - cleaned up a few places from the repo migration. Merged `MetadataManager` and `ReadyToRunTableManager`.  Removed a place we instantiated a second `NameMangler` and instead pipe through the one hanging on `NodeFactory`.\r\n\r\n/cc @dotnet/crossgen-contrib ","Url":"https://github.com/dotnet/coreclr/pull/27517","RelatedDescription":"Open PR \"[Crossgen2] Compile Multiple Assemblies per invocation\" (#27517)"},{"Id":"513625866","IsPullRequest":true,"CreatedAt":"2019-10-29T00:21:08","Actor":"davidwrighton","Number":"27516","RawContent":null,"Title":"Tweaks to existing BulkType event","State":"open","Body":"- Enable specification of exact multi-dimensional array rank\r\n- Tolerate scenarios where the name of the type is so large that it prevents generation of the BulkType event","Url":"https://github.com/dotnet/coreclr/pull/27516","RelatedDescription":"Open PR \"Tweaks to existing BulkType event\" (#27516)"},{"Id":"513618324","IsPullRequest":true,"CreatedAt":"2019-10-28T23:54:18","Actor":"davidwrighton","Number":"27515","RawContent":null,"Title":"MethodDetails event","State":"open","Body":"- Captures enough information to allow a method to be identified to its exact token/instantiation\r\n- Leans on BulkType events to send type information\r\n- Send the event around all interesting events in ETW\r\n- Only enable the event when new keyword \"MethodDiagnostics\" is enabled","Url":"https://github.com/dotnet/coreclr/pull/27515","RelatedDescription":"Open PR \"MethodDetails event\" (#27515)"},{"Id":"513605529","IsPullRequest":true,"CreatedAt":"2019-10-28T23:10:21","Actor":"erozenfeld","Number":"27514","RawContent":null,"Title":"Remove UCRTVersion workaround and re-enable Windows formatting jobs.","State":"open","Body":"VS2017 VsDevCmd had a bug in setting of UCRTVersion environment variable.\r\nThat was affecting Interop tests and Windows formatting jobs.\r\nWe added a workaround for the former (#25444) and disabled Windows\r\nformatting jobs (#25507, #25902).\r\n\r\nThe bug has been fixed in VS2019. Since we switched to VS2019 pool we\r\ncan remove the workaround and re-enable Windows formatting jobs.\r\n\r\nFixes #25447, #25499.","Url":"https://github.com/dotnet/coreclr/pull/27514","RelatedDescription":"Open PR \"Remove UCRTVersion workaround and re-enable Windows formatting jobs.\" (#27514)"},{"Id":"513585992","IsPullRequest":true,"CreatedAt":"2019-10-28T22:13:20","Actor":"davmason","Number":"27512","RawContent":null,"Title":"[Release/3.1] Port profiler APIs to set and retrieve environment variables to 3.1","State":"open","Body":"This ports #27157 to 3.1.\r\n\r\n**Issue**\r\nOn linux/unix/mac platforms the PAL creates a cache of the system environment variables at startup since accessing environment variables is not thread safe. This means that any call the `putenv` or `getenv` by native code after process startup will be ignored in managed code or any child processes spawned by managed code. \r\n\r\nProfilers often use environment variables to communicate with child processes or managed code, historically on Windows they could just call SetEnvironmentVariable and it would be picked up, but now on cross plat scenarios the only workaround is to use IL rewriting to inject a call to `Environment.SetEnvironmentVariable`, which is a substantial amount of work if the profiler is not already doing IL rewriting.\r\n\r\n**Customer impact**\r\nWithout this fix profilers won't be able to coordinate with child processes while debugging. See this comment by the profiler author requesting this be included in 3.1:\r\n>@davmason Without this, we can lost all of our features related to child processes: 1) ability to profile child processes (for details see https://github.com/dotnet/coreclr/issues/23383#issuecomment-514587669), 2) ability to take snapshots automatically depending on child processes hierarchy, 3) unit-testing profiler support. Most likely, end user experience will be significantly worsened if our \"tricks\" stop working.\r\n\r\n>_Originally posted by @k15tfu in https://github.com/dotnet/coreclr/pull/27157#issuecomment-546945910_\r\n\r\n**Fix description**\r\nExpose the PAL's implementation of `SetEnvironmentVariable` and `GetEnvironmentVariable` on the profiler interfaces.\r\n\r\n**Risk**\r\nThere is very low risk (essentially no risk) to existing codepaths since the existing codepaths are unchanged. This fix only exposes new functionality and does not modify existing behavior.","Url":"https://github.com/dotnet/coreclr/pull/27512","RelatedDescription":"Open PR \"[Release/3.1] Port profiler APIs to set and retrieve environment variables to 3.1\" (#27512)"},{"Id":"513482726","IsPullRequest":false,"CreatedAt":"2019-10-28T18:32:43","Actor":"davidwrighton","Number":"27511","RawContent":null,"Title":"Provide block counts in tiered compilation from R2R images","State":"open","Body":"Tiered compilation can reduce the performance of application by replacing IBC tuned R2R code with non-tuned jitted code. See #26825 Consider enhancing the R2R format to allow method block counts to be stored in R2R images and used by the runtime. This is causing a ~20% regression in the performance of the StringBuilder.Append code","Url":"https://github.com/dotnet/coreclr/issues/27511","RelatedDescription":"Open issue \"Provide block counts in tiered compilation from R2R images\" (#27511)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"514410126","IsPullRequest":true,"CreatedAt":"2019-10-30T05:30:13","Actor":"dotnet-maestro[bot]","Number":"12997","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.5\r\n- **Date Produced**: 10/30/2019 4:44 AM\r\n- **Commit**: 2aa52a135c1a1fc0d6cebbc333af20571f5057e9\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12997","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12997)"},{"Id":"514354126","IsPullRequest":true,"CreatedAt":"2019-10-30T02:30:12","Actor":"dotnet-maestro[bot]","Number":"12996","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.2\r\n- **Date Produced**: 10/30/2019 1:05 AM\r\n- **Commit**: c85c3ca6c392c62fc0a14d903d7927edc6fe5bf9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19529.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19529.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12996","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12996)"},{"Id":"514331983","IsPullRequest":true,"CreatedAt":"2019-10-30T01:55:29","Actor":"dotnet-maestro[bot]","Number":"12995","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.4\r\n- **Date Produced**: 10/30/2019 12:31 AM\r\n- **Commit**: c0f6cf7488d21f13d9e96b0e87e77851be0e350d\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12995","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12995)"},{"Id":"514208619","IsPullRequest":true,"CreatedAt":"2019-10-29T20:39:15","Actor":"dotnet-maestro-bot","Number":"12994","RawContent":null,"Title":"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'","State":"open","Body":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/12994","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#12994)"},{"Id":"514088711","IsPullRequest":true,"CreatedAt":"2019-10-29T20:36:54","Actor":"dotnet-maestro[bot]","Number":"12992","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.1\r\n- **Date Produced**: 10/29/2019 4:57 PM\r\n- **Commit**: 5c9dd04241f307f1aa6b3643d5e07ea89a1dad4a\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19529.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12992","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12992)"},{"Id":"513870495","IsPullRequest":true,"CreatedAt":"2019-10-29T20:08:07","Actor":"dotnet-bot","Number":"12991","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12991","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#12991)"},{"Id":"514126953","IsPullRequest":true,"CreatedAt":"2019-10-29T18:55:32","Actor":"dotnet-maestro[bot]","Number":"12993","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191028.7\r\n- **Date Produced**: 10/29/2019 5:33 PM\r\n- **Commit**: 2c6456d4634df947e3cafd5e7dee02289dc12697\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19528.7\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12993","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12993)"},{"Id":"513732709","IsPullRequest":true,"CreatedAt":"2019-10-29T07:40:28","Actor":"dotnet-maestro[bot]","Number":"12990","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191028.8\r\n- **Date Produced**: 10/29/2019 6:20 AM\r\n- **Commit**: 471e4710a818849eaf22c5977281d10fd6758616\r\n- **Branch**: refs/heads/release/3.1-preview2\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19528.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12990","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12990)"},{"Id":"513655119","IsPullRequest":true,"CreatedAt":"2019-10-29T02:55:30","Actor":"dotnet-maestro[bot]","Number":"12989","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/29/2019 1:48 AM\r\n- **Commit**: 2163fbce7a27c22ca133f7bce59781aac7ba6044\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19528.5\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12989","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12989)"},{"Id":"512994628","IsPullRequest":true,"CreatedAt":"2019-10-29T00:58:17","Actor":"dotnet-maestro[bot]","Number":"12988","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191028.2\r\n- **Date Produced**: 10/28/2019 8:47 PM\r\n- **Commit**: 334812443d8bb11afa51a7efd2f8de83e321e6e1\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19528.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12988","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12988)"},{"Id":"512815421","IsPullRequest":true,"CreatedAt":"2019-10-26T10:15:26","Actor":"dotnet-maestro[bot]","Number":"12987","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191025.8\r\n- **Date Produced**: 10/26/2019 9:01 AM\r\n- **Commit**: 7ef5dd3af4868fcd69778c922b48e1f429fb0aa6\r\n- **Branch**: refs/heads/release/3.1-preview2\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19525.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12987","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12987)"},{"Id":"512758072","IsPullRequest":true,"CreatedAt":"2019-10-26T04:17:19","Actor":"dotnet-maestro[bot]","Number":"12985","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191025.7\r\n- **Date Produced**: 10/26/2019 2:56 AM\r\n- **Commit**: e48fd678f261a8e0aeb7a4a968b353f922f42a69\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19525.7\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12985","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12985)"},{"Id":"512759931","IsPullRequest":true,"CreatedAt":"2019-10-26T01:28:42","Actor":"dotnet-maestro[bot]","Number":"12986","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/25/2019 10:26 PM\r\n- **Commit**: 5672978d912db81b4b677fddff264907a47ec9a8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19525.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19523.17 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12986","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12986)"},{"Id":"512740188","IsPullRequest":true,"CreatedAt":"2019-10-25T22:45:35","Actor":"dotnet-maestro[bot]","Number":"12984","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191025.4\r\n- **Date Produced**: 10/25/2019 9:38 PM\r\n- **Commit**: 5d0fe6572a2f7a11fe5eabdee4800002e111e726\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19525.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12984","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12984)"},{"Id":"511632334","IsPullRequest":true,"CreatedAt":"2019-10-25T22:33:25","Actor":"dotnet-bot","Number":"12974","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12974","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#12974)"},{"Id":"512104952","IsPullRequest":true,"CreatedAt":"2019-10-25T21:59:05","Actor":"mmitche","Number":"12976","RawContent":null,"Title":"Switch to label.N form for pre-release label","State":"closed","Body":"In order to facilitate better preview sorting, switch to label.N form for the pre-release label.\r\n","Url":"https://github.com/dotnet/cli/pull/12976","RelatedDescription":"Closed or merged PR \"Switch to label.N form for pre-release label\" (#12976)"},{"Id":"512720351","IsPullRequest":true,"CreatedAt":"2019-10-25T21:57:52","Actor":"wli3","Number":"12983","RawContent":null,"Title":"Port to release/3.1.1xx - Fix eventProperties.Add mutate _commonProperties","State":"closed","Body":"port of this https://github.com/dotnet/cli/pull/12899","Url":"https://github.com/dotnet/cli/pull/12983","RelatedDescription":"Closed or merged PR \"Port to release/3.1.1xx - Fix eventProperties.Add mutate _commonProperties\" (#12983)"},{"Id":"511581613","IsPullRequest":true,"CreatedAt":"2019-10-25T21:50:32","Actor":"nguerrera","Number":"12972","RawContent":null,"Title":"Fix typo","State":"closed","Body":"Error made during 3.0.x servicing changes","Url":"https://github.com/dotnet/cli/pull/12972","RelatedDescription":"Closed or merged PR \"Fix typo\" (#12972)"},{"Id":"512678822","IsPullRequest":false,"CreatedAt":"2019-10-25T19:20:03","Actor":"klausenbusk","Number":"12982","RawContent":null,"Title":"dotnet build sometimes exit with a success exit code on build failure","State":"open","Body":"## Steps to reproduce\r\nWe are using `dotnet build -warnaserror` and [StyleCop](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/) as part of you CI which run in Docker. I haven't been able to reproduce the problem locally outside docker.\r\n\r\nI did observe that the error order is different in the last run, which strengthens my belief that is is some kind of race condition (I'm wondering if this is already fixed with https://github.com/dotnet/cli/pull/10921?).\r\n```\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine new mvc -n foobar\r\n$ cd foobar\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine add package StyleCop.Analyzers\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.03 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:06.37\r\n1\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.07 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:05.91\r\n1\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.84 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:07.02\r\n1\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.62 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:06.51\r\n1\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.77 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:06.66\r\n0\r\n```\r\n\r\n## Expected  behavior\r\n`dotnet build` should always return with a non-zero exit code on build failure.\r\n\r\n## Actual behavior\r\nSometimes `dotnet build` exit with a success exit code on build failure.\r\n\r\n## Environment data\r\n```\r\n$ docker run --entrypoint \"dotnet\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     alpine\r\n OS Version:  3.9\r\n OS Platform: Linux\r\n RID:         alpine.3.9-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.402/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12982","RelatedDescription":"Open issue \"dotnet build sometimes exit with a success exit code on build failure\" (#12982)"},{"Id":"512619530","IsPullRequest":false,"CreatedAt":"2019-10-25T16:56:49","Actor":"huoyaoyuan","Number":"12981","RawContent":null,"Title":"How to consume native dependencies via ProjectReference?","State":"open","Body":"Opening at this repository because requiring something like #1841.\r\n\r\n## Steps to reproduce\r\nWe are publishing some native dependencies via csproj:\r\n```xml\r\n  <ItemGroup>\r\n    <NativeLibs Include=\"$(MSBuildThisFileDirectory)runtimes\\**\\*.dll*\" />\r\n    <NativeLibs Include=\"$(MSBuildThisFileDirectory)runtimes\\**\\*.so\" />\r\n    <NativeLibs Include=\"$(MSBuildThisFileDirectory)runtimes\\**\\*.a\" />\r\n    <NativeLibs Include=\"$(MSBuildThisFileDirectory)runtimes\\**\\*.dylib\" />\r\n    <None Include=\"@(NativeLibs)\">\r\n      <Pack>true</Pack>\r\n      <PackageCopyToOutput>true</PackageCopyToOutput>\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>\r\n    <None Include=\"_._\">\r\n      <Pack>true</Pack>\r\n      <PackagePath>lib/netstandard2.0</PackagePath>\r\n    </None>\r\n  </ItemGroup>\r\n```\r\nThe native libraries are correctly packaged into `runtimes\\win-x64\\native\\*.dll` and other rids.\r\nA test application sits in the same repository, using `ProjectReference` to consume the library.\r\nThe test application's `.deps.json` is missing entry for native dependencies, causing them failed to load at runtime.\r\nHowever, if I put the `nupkg` into local source and consume it via `PackageReference`, it's getting native libraries in `.deps.json`.\r\n\r\nAre we packaging it in the wrong way? What's the standard packaging to consume by source?\r\nI cannot find a popular library consuming native packages via project reference. Looked `SQLitePCLRaw.lib.e_sqlite3` and `runtime.native.System.Data.SqlClient.sni`, their tests are consuming them via `PackageReference`.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK（反映任何 global.json）:                                                                                   Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12981","RelatedDescription":"Open issue \"How to consume native dependencies via ProjectReference?\" (#12981)"},{"Id":"512467959","IsPullRequest":false,"CreatedAt":"2019-10-25T11:40:11","Actor":"verdie-g","Number":"12980","RawContent":null,"Title":"Invalid option '7.3' for /langversion when using .NET Core 2.X","State":"open","Body":"## Steps to reproduce\r\n1. Create a new project targetting .NET Core 2.X\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n2. Use a C# 7.1 feature\r\n```csharp\r\nnamespace Test\r\n{\r\n    class Program\r\n    {\r\n        public static void Main()\r\n        {\r\n            int n = default;\r\n        }\r\n    }\r\n}\r\n```\r\n3. Use a SDK 2.X by creating a global.json file\r\n```json\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"2.1.102\"\r\n  }\r\n}\r\n```\r\n4. Build the project\r\n`dotnet build Test`\r\n\r\n## Expected  behavior\r\nAccording to the page [C# language versioning](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/configure-language-version), .NET Core 2.X should be using C# 7.3 by default. So the above should build correctly.\r\n\r\nTested with SDK 2.1.102, 2.1.202, 2.1.507, 2.1.508.\r\n\r\nFrom 2.1.801 and later the build suceeds.\r\n\r\n## Actual behavior\r\n`Program.cs(7,21): error CS8107: Feature 'default literal' is not available in C# 7.0. Please use language version 7.1 or greater.`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.1.102)\r\n\r\nProduct Information:\r\n Version:            2.1.102\r\n Commit SHA-1 hash:  8d409357db\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.102\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.107 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12980","RelatedDescription":"Open issue \"Invalid option '7.3' for /langversion when using .NET Core 2.X\" (#12980)"},{"Id":"512149448","IsPullRequest":false,"CreatedAt":"2019-10-25T06:01:59","Actor":"maurei","Number":"12977","RawContent":null,"Title":"dotnet build -o /some-folder fails: Access to the path /some-folder\" is denied","State":"closed","Body":"## Steps to reproduce\r\n1. Create a boilerplate .net core 3 app, eg console app (I used Visual Studio Mac 8.3.4)\r\n2. run ` dotnet build -o /test`\r\n\r\n## Expected  behavior\r\nA working build\r\n\r\n## Actual behavior\r\n```\r\n  Restore completed in 55.54 ms for /Users/moeys/Code/test/test/test.csproj.\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(1124,5): warning MSB3191: Unable to create directory \"/test/\". Access to the path '/test/' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/appsettings.json\" to \"/test/appsettings.json\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/Properties/launchSettings.json\" to \"/test/Properties/launchSettings.json\". Access to the path '/test/Properties' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/obj/Debug/netcoreapp3.0/test\" to \"/test/test\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/appsettings.Development.json\" to \"/test/appsettings.Development.json\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(1124,5): warning MSB3191: Unable to create directory \"/test/\". Access to the path '/test/' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/appsettings.json\" to \"/test/appsettings.json\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/Properties/launchSettings.json\" to \"/test/Properties/launchSettings.json\". Access to the path '/test/Properties' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/obj/Debug/netcoreapp3.0/test\" to \"/test/test\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/appsettings.Development.json\" to \"/test/appsettings.Development.json\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n    1 Warning(s)\r\n    4 Error(s)\r\n\r\nTime Elapsed 00:00:01.04\r\n```\r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700 [/usr/local/share/dotnet/sdk]\r\n  2.2.301 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12977","RelatedDescription":"Closed issue \"dotnet build -o /some-folder fails: Access to the path /some-folder\" is denied\" (#12977)"},{"Id":"512271623","IsPullRequest":true,"CreatedAt":"2019-10-25T03:10:29","Actor":"dotnet-maestro[bot]","Number":"12978","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191024.9\r\n- **Date Produced**: 10/25/2019 1:43 AM\r\n- **Commit**: 2f1029e3b0b783ad0f4b878f7356928106c10726\r\n- **Branch**: refs/heads/release/3.1-preview2\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19524.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12978","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12978)"},{"Id":"512272045","IsPullRequest":false,"CreatedAt":"2019-10-25T02:42:10","Actor":"khteh","Number":"12979","RawContent":null,"Title":"Razor build server (process 27970) failed to shut down: The shutdown command failed: The application to execute does not exist","State":"open","Body":"## Steps to reproduce\r\n`$ dotnet build-server shutdown` error:\r\n```\r\nRazor build server (process 27970) failed to shut down: The shutdown command failed: The application to execute does not exist: '/usr/share/dotnet/sdk/NuGetFallbackFolder/microsoft.aspnetcore.razor.design/2.2.0/tools/rzc.dll'\r\n```\r\nWhy does it look for 2.2.0 when I am using 3.0?\r\n## Expected  behavior\r\nShutdown properly without error\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n$ dn --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04\r\n OS Platform: Linux\r\n RID:         ubuntu.19.04-x64\r\n Base Path:   /usr/share/dotnet-3.0.100/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet-3.0.100/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12979","RelatedDescription":"Open issue \"Razor build server (process 27970) failed to shut down: The shutdown command failed: The application to execute does not exist\" (#12979)"},{"Id":"511712375","IsPullRequest":true,"CreatedAt":"2019-10-24T05:50:07","Actor":"dotnet-maestro[bot]","Number":"12975","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.11\r\n- **Date Produced**: 10/24/2019 4:13 AM\r\n- **Commit**: 925a7137c8d1387a3948ee36ffc90fc182b405a9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.11\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19523.16 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12975","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12975)"},{"Id":"511620808","IsPullRequest":true,"CreatedAt":"2019-10-24T03:06:54","Actor":"dotnet-maestro[bot]","Number":"12973","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.6\r\n- **Date Produced**: 10/23/2019 10:04 PM\r\n- **Commit**: 10d8d0996dba48164eb035562afb32e8157e8d06\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19522.18 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12973","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12973)"},{"Id":"511569396","IsPullRequest":true,"CreatedAt":"2019-10-23T23:10:32","Actor":"dotnet-maestro[bot]","Number":"12970","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191023.4\r\n- **Date Produced**: 10/23/2019 7:49 PM\r\n- **Commit**: 5cde584f489b0b4c558255ea484c5606eb494b98\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19523.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19523.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12970","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12970)"},{"Id":"511572055","IsPullRequest":true,"CreatedAt":"2019-10-23T21:12:47","Actor":"zsd4yr","Number":"12971","RawContent":null,"Title":"fix typo in RuntimeFrameworkVersion under FrameworkReference","State":"closed","Body":"`MicrosoftNETCoreAppRuntimePackageVersion` is used by `RuntimeFrameworkVersion` under `FrameworkReference` in `Directory.Build.targets` as well as `global.json`'s tools.runtimes.dotnet. It is defined in Versions.props below\r\n\r\nhttps://github.com/dotnet/cli/blob/edb240070dbac6ca80122d06dad51bf9221df62f/eng/Versions.props#L21-L22\r\n\r\nHowever, it was incorrectly typed in `RuntimeFrameworkVersion` under `FrameworkReference` in `Directory.Build.targets`. This PR fixes that typo\r\n","Url":"https://github.com/dotnet/cli/pull/12971","RelatedDescription":"Closed or merged PR \"fix typo in RuntimeFrameworkVersion under FrameworkReference\" (#12971)"},{"Id":"511525175","IsPullRequest":false,"CreatedAt":"2019-10-23T19:27:27","Actor":"MichaelSimons","Number":"12969","RawContent":null,"Title":"Add test coverage for Nano Server ","State":"open","Body":"Add test coverage (CI/official builds) on Nano Server.  Nano Server is very different than other Windows SKUs and is very slimmed down.  The goal is to catch issues like https://github.com/dotnet/cli/issues/12915.","Url":"https://github.com/dotnet/cli/issues/12969","RelatedDescription":"Open issue \"Add test coverage for Nano Server \" (#12969)"},{"Id":"511027176","IsPullRequest":true,"CreatedAt":"2019-10-23T06:17:02","Actor":"dotnet-maestro[bot]","Number":"12968","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191022.9\r\n- **Date Produced**: 10/23/2019 4:27 AM\r\n- **Commit**: 8dc60d0132c062a8258969cdec05df9a258ea5b6\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19522.9\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19522.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12968","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12968)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"513879230","IsPullRequest":true,"CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Number":"1633","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1633)"},{"Id":"513668220","IsPullRequest":false,"CreatedAt":"2019-10-29T03:17:07","Actor":"2300070","Number":"1632","RawContent":null,"Title":"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.","State":"open","Body":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Open issue \"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.\" (#1632)"},{"Id":"513270667","IsPullRequest":true,"CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Number":"1631","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1631)"},{"Id":"512958771","IsPullRequest":true,"CreatedAt":"2019-10-27T12:45:49","Actor":"dotnet-maestro[bot]","Number":"1630","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191026.6\r\n- **Date Produced**: 10/27/2019 2:42 AM\r\n- **Commit**: 0d0336cc9c3a04d7e23af38698b215a2955e965f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19526.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1630","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1630)"},{"Id":"512829066","IsPullRequest":true,"CreatedAt":"2019-10-26T12:30:59","Actor":"dotnet-maestro[bot]","Number":"1629","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/26/2019 7:24 AM\r\n- **Commit**: 8245ee1e8f6063ccc7a3a60cafe821d29e85b02f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19525.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1629","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1629)"},{"Id":"512485574","IsPullRequest":true,"CreatedAt":"2019-10-25T12:31:13","Actor":"dotnet-maestro[bot]","Number":"1628","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191024.14\r\n- **Date Produced**: 10/25/2019 4:12 AM\r\n- **Commit**: 0954a975f972546314bd3ac4eb6e0a6380a85701\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19524.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1628","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1628)"},{"Id":"512430892","IsPullRequest":false,"CreatedAt":"2019-10-25T10:18:18","Actor":"lockeduan","Number":"1627","RawContent":null,"Title":"standard 2.1 DbParameter.DbType can never set to DbType.Time","State":"open","Body":"i'm trying to set parameter DbType to Time, but the result is that it wrongly set to DateTime instead\r\n\r\n```\r\ndbParameter.DbType = DbType.Time;\r\n```","Url":"https://github.com/dotnet/standard/issues/1627","RelatedDescription":"Open issue \"standard 2.1 DbParameter.DbType can never set to DbType.Time\" (#1627)"},{"Id":"511908253","IsPullRequest":true,"CreatedAt":"2019-10-24T12:36:46","Actor":"dotnet-maestro[bot]","Number":"1626","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.8\r\n- **Date Produced**: 10/23/2019 8:34 PM\r\n- **Commit**: be22fd85b2ceb377de87e6bda006f819569fec3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1626","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1626)"},{"Id":"511790862","IsPullRequest":false,"CreatedAt":"2019-10-24T08:32:00","Actor":"jrahma","Number":"1625","RawContent":null,"Title":"Easier way to upload Images using PostAsync","State":"open","Body":"Hi,\r\n\r\nIt will be great if you provide an easier way to directly uplaod images using PosyAsync without having to use MediaTypeHeaderValue\r\n\r\nFor example:\r\n\r\n```\r\nvar content = new FormUrlEncodedContent(new[]\r\n{\r\n    new KeyValuePair<string, string>(\"channel\", TextBoxNewChannelName.Text),\r\n    new KeyValuePair<string, ImageStream>(\"logo\", channel_logo),\r\n});\r\n\r\n```","Url":"https://github.com/dotnet/standard/issues/1625","RelatedDescription":"Open issue \"Easier way to upload Images using PostAsync\" (#1625)"},{"Id":"511593656","IsPullRequest":false,"CreatedAt":"2019-10-23T21:58:36","Actor":"devon94","Number":"1624","RawContent":null,"Title":"Cannot serialize System.Globalization.NumberFormatInfo into binary stream","State":"open","Body":"Hey there,\r\n\r\nI was trying to serialize NumberFormatInfo into a binary stream using the following code:\r\n\r\n`\r\n\r\n            var locale = user?.Locale;\r\n            var cultureInfo = new System.Globalization.CultureInfo(locale);\r\n\r\n            using (var ms = new MemoryStream())\r\n            {\r\n                new BinaryFormatter().Serialize(ms, cultureInfo.NumberFormat);\r\n                return ms.ToArray();\r\n            }\r\n`\r\n\r\nIt worked when we were using mscorlib 4.0.0 but not after migrating to dotnet standard. It looks like it used to have the Serialization attribute in for that class but in dotnet standard those attributes seems to be missing. \r\n\r\nWas it intentional to make the NumberFormatInfo not serializable? Thanks!","Url":"https://github.com/dotnet/standard/issues/1624","RelatedDescription":"Open issue \"Cannot serialize System.Globalization.NumberFormatInfo into binary stream\" (#1624)"},{"Id":"511285257","IsPullRequest":true,"CreatedAt":"2019-10-23T12:30:19","Actor":"dotnet-maestro[bot]","Number":"1623","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.1\r\n- **Date Produced**: 10/23/2019 8:47 AM\r\n- **Commit**: b8cb521e83456bd81dc314c0625d6236d7955bd9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1623","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1623)"},{"Id":"510619350","IsPullRequest":true,"CreatedAt":"2019-10-22T12:32:26","Actor":"dotnet-maestro[bot]","Number":"1621","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1621)"},{"Id":"510968850","IsPullRequest":false,"CreatedAt":"2019-10-21T21:11:58","Actor":"TomasMorton","Number":"1622","RawContent":null,"Title":"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions","State":"open","Body":"I'm trying to upgrade my solution to DotNet Core 3.  I have references to Entity Framework, which has forced an upgrade to netstandard 2.1.\r\n\r\nHowever, my classes that were using the DataTableExtensions are now unable to compile due to the following error:\r\n`[CS0121] The call is ambiguous between the following methods or properties: 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)' and 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)'`\r\nand also\r\n`[CS0433] The type 'TypedTableBase<T>' exists in both 'System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nI have removed all Nuget packages for System.Data.DataSetExtensions, but I probably have a transitive dependency somewhere in the graph.\r\n\r\nThis problem seems to be the same as the previous one in https://github.com/dotnet/corefx/issues/37738.\r\n\r\nI would appreciate any workarounds to get my solution compiling as soon as possible.","Url":"https://github.com/dotnet/standard/issues/1622","RelatedDescription":"Open issue \"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions\" (#1622)"},{"Id":"509922429","IsPullRequest":true,"CreatedAt":"2019-10-21T12:23:01","Actor":"dotnet-maestro[bot]","Number":"1620","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191020.7\r\n- **Date Produced**: 10/21/2019 6:09 AM\r\n- **Commit**: 03453d9aae8e5d18e571699c5d2229b1ab5f4b9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19520.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1620","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1620)"},{"Id":"509586833","IsPullRequest":true,"CreatedAt":"2019-10-20T12:22:06","Actor":"dotnet-maestro[bot]","Number":"1619","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1619)"},{"Id":"509442622","IsPullRequest":true,"CreatedAt":"2019-10-19T12:29:32","Actor":"dotnet-maestro[bot]","Number":"1618","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1618)"},{"Id":"509155885","IsPullRequest":false,"CreatedAt":"2019-10-18T15:46:13","Actor":"0blu","Number":"1617","RawContent":null,"Title":"Why do I need special permission when using HttpListener?","State":"closed","Body":"Hey,\r\n\r\nthis issue is a little bit dot net bashing because some interfaces are design with assumptions that are too specific for most users, HttpListener is one of them.\r\n\r\nFirst of all, I already read about the [HTTP namespace system](https://docs.microsoft.com/en-us/windows/win32/http/routing-incoming-requests).\r\n\r\n`HttpListener` allows simple and high level creation of HTTP servers, but what if I want to create a HTTP server that can listen on all hosts, without requiring admin permissions or running arbitrary `netsh` commands?\r\n\r\nIf I would run this code as an unprivileged user the result would be an access exception.\r\n``` c#\r\nHttpListener listener = new HttpListener();\r\nlistener.Prefixes.Add(\"http://*:1234/\");\r\nlistener.Start();\r\n```\r\n\r\nHowever running the following code proves that an unprivileged user could potentially write his own HTTP server, that allows access from all interfaces.\r\n``` c#\r\nTcpListener server = new TcpListener(IPAddress.Any, 1234);\r\nserver.Start();\r\n```\r\n\r\nI wonder why there is no way to take all the benefits of the `HttpListener` and skipping the namespacing system. Other languages have such features.\r\n\r\nIs there any chance to request an API addition that allows such things?\r\nFor example allowing the constructor of `HttpListener` to take an `TcpListener`-Instance.\r\n","Url":"https://github.com/dotnet/standard/issues/1617","RelatedDescription":"Closed issue \"Why do I need special permission when using HttpListener?\" (#1617)"},{"Id":"509045354","IsPullRequest":true,"CreatedAt":"2019-10-18T12:30:25","Actor":"dotnet-maestro[bot]","Number":"1616","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 8:58 AM\r\n- **Commit**: 2b92fc0930b941cd0d9146971745cd717689434c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1616","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1616)"},{"Id":"508423360","IsPullRequest":true,"CreatedAt":"2019-10-17T23:53:53","Actor":"akoeplinger","Number":"1614","RawContent":null,"Title":"Update Xamarin APIs to latest Dev16.4 builds","State":"closed","Body":"- Xamarin.Android 10.1.0.1\r\n- Xamarin.iOS 13.8.1.1\r\n- Xamarin.Mac 6.8.1.1\r\n\r\nThis also uses a new GenAPI version so the diff is a little messy because of the enum value to name changes in attributes.\r\n\r\nI also had to introduce a System.Core.stubs.csproj to break a build cycle because System.dll references System.Security.Cryptography.ECDsa from System.Core.dll now.","Url":"https://github.com/dotnet/standard/pull/1614","RelatedDescription":"Closed or merged PR \"Update Xamarin APIs to latest Dev16.4 builds\" (#1614)"},{"Id":"508433927","IsPullRequest":true,"CreatedAt":"2019-10-17T12:24:28","Actor":"dotnet-maestro[bot]","Number":"1615","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191016.16\r\n- **Date Produced**: 10/17/2019 4:25 AM\r\n- **Commit**: b9186cfa3566ee24e5f16e45c542a3078e128dc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19516.16\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1615","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1615)"},{"Id":"507816713","IsPullRequest":true,"CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Number":"1613","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1613)"},{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-15T19:33:30","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"open","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Open PR \"Source-build improvements.\" (#1612)"},{"Id":"507207673","IsPullRequest":true,"CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1611)"},{"Id":"507198335","IsPullRequest":true,"CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Number":"1610","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/28/2019 11:43 PM\r\n- **Commit**: 96e8fc12aa98264c4e1980252e962b908eaae956\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19528.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1610)"},{"Id":"506615487","IsPullRequest":true,"CreatedAt":"2019-10-14T12:25:04","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1609)"},{"Id":"506317458","IsPullRequest":true,"CreatedAt":"2019-10-13T12:25:39","Actor":"dotnet-maestro[bot]","Number":"1608","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191012.1\r\n- **Date Produced**: 10/12/2019 1:32 PM\r\n- **Commit**: 8d21b79b924d29088dbde46d42737a657d466b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19512.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1608","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1608)"},{"Id":"506180021","IsPullRequest":true,"CreatedAt":"2019-10-12T12:30:20","Actor":"dotnet-maestro[bot]","Number":"1607","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/12/2019 12:05 AM\r\n- **Commit**: 57ae5430e0e6cbf16b5c7b7def4fc95015b2b722\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19511.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1607","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1607)"},{"Id":"506178147","IsPullRequest":true,"CreatedAt":"2019-10-12T12:16:34","Actor":"dotnet-maestro[bot]","Number":"1606","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1606","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1606)"},{"Id":"505819610","IsPullRequest":true,"CreatedAt":"2019-10-11T12:31:35","Actor":"dotnet-maestro[bot]","Number":"1605","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191010.15\r\n- **Date Produced**: 10/11/2019 6:45 AM\r\n- **Commit**: 901c370c2379ad0885bcc5a1921c4164104586aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19510.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1605)"},{"Id":"505811013","IsPullRequest":true,"CreatedAt":"2019-10-11T12:11:39","Actor":"dotnet-maestro[bot]","Number":"1604","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191010.4\r\n- **Date Produced**: 10/10/2019 5:59 PM\r\n- **Commit**: 8cd48078f550fbcbd4f684b897b14db207397b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19510.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1604","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1604)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"514408126","IsPullRequest":true,"CreatedAt":"2019-10-30T05:23:49","Actor":"carlossanlop","Number":"42213","RawContent":null,"Title":"Add EventWaitHandle creation extension method that takes an ACL","State":"open","Body":"Approved API Proposal: https://github.com/dotnet/corefx/issues/41662\r\n\r\n### Description\r\nWe don't currently have a way to create a synchronization object with a given ACL in .NET Core. We can modify the ACL, but it would be more secure to have the proper ACL on the object from the start.\r\n\r\nThe related ACLs are already exposed in the System.Threading.AccessControl assembly , we should add creation extension methods to the existing ThreadingAclExtensions.\r\n\r\n### Customer impact\r\nBefore this change, customers had to create an EventWaitHandle, then set its ACLs. This presents a few problems:\r\n\r\n- Potential security hole as event wait handles can be accessed between creation and modification.\r\n- Porting difficulties as there isn't a 1-1 API replacement\r\n\r\nThis change addresses those problems by adding a new extension method that allows creating an EventWaitHandle and ensuring the provided ACLs are set during creation.\r\n\r\nThis change is expected to be backported to 3.1.","Url":"https://github.com/dotnet/corefx/pull/42213","RelatedDescription":"Open PR \"Add EventWaitHandle creation extension method that takes an ACL\" (#42213)"},{"Id":"514394034","IsPullRequest":false,"CreatedAt":"2019-10-30T04:34:24","Actor":"dev-masih","Number":"42212","RawContent":null,"Title":"Unexpected behavior in Dictionary methods Remove and Clear (.NET Core)","State":"open","Body":"I am trying to implement a caching mechanism for enumerating collections safely, and I am checking if all modifications of the built-in collections are triggering an `InvalidOperationException` to be thrown by their respective enumerators. I noticed that in the .NET Core platform the [`Dictionary.Remove`][1] and [`Dictionary.Clear`][2] methods are not triggering this exception. Is this a bug or a feature?\r\n\r\nExample with `Remove`:\r\n\r\n    var dictionary = new Dictionary<int, string>();\r\n    dictionary.Add(1, \"Hello\");\r\n    dictionary.Add(2, \"World\");\r\n    foreach (var entry in dictionary)\r\n    {\r\n        var removed = dictionary.Remove(entry.Key);\r\n        Console.WriteLine($\"{entry} removed: {removed}\");\r\n    }\r\n    Console.WriteLine($\"Count: {dictionary.Count}\");\r\n\r\nOutput:\r\n\r\n> [1, Hello] removed: True  \r\n> [2, World] removed: True  \r\n> Count: 0  \r\n\r\nExample with `Clear`:\r\n\r\n    var dictionary = new Dictionary<int, string>();\r\n    dictionary.Add(1, \"Hello\");\r\n    dictionary.Add(2, \"World\");\r\n    foreach (var entry in dictionary)\r\n    {\r\n        Console.WriteLine(entry);\r\n        dictionary.Clear();\r\n    }\r\n    Console.WriteLine($\"Count: {dictionary.Count}\");\r\n\r\nOutput:\r\n\r\n> [1, Hello]  \r\n> Count: 0  \r\n\r\nThe expected exception is:\r\n\r\n> InvalidOperationException: Collection was modified; enumeration operation may not execute.  \r\n\r\n...as is thrown by the method `Add`, and by the same methods in .NET Framework.\r\n\r\n.NET Core 3.0.0, C# 8, VS 2019 16.3.1, Windows 10\r\n\r\n  [1]: https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.remove\r\n  [2]: https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.clear\r\n\r\n**Note:** This is a StackOverflow question [here](https://stackoverflow.com/questions/58617273/unexpected-behavior-in-dictionary-methods-remove-and-clear-net-core) and I'm not the original poster of this question.","Url":"https://github.com/dotnet/corefx/issues/42212","RelatedDescription":"Open issue \"Unexpected behavior in Dictionary methods Remove and Clear (.NET Core)\" (#42212)"},{"Id":"514385146","IsPullRequest":false,"CreatedAt":"2019-10-30T04:05:30","Actor":"AriNuer","Number":"42211","RawContent":null,"Title":"Many tests failed due to System.ArgumentException : Absolute path information is required","State":"open","Body":"**Job:**\r\n[corefx-ci #20191029.52](https://dnceng.visualstudio.com/public/_build/results?buildId=406908)\r\n\r\n**Part of error message:**\r\n```\r\nAssert.Throws() Failure\\r\\nExpected: typeof(System.IO.FileNotFoundException)\\r\\nActual: typeof(System.ArgumentException): Absolute path information is required. (Parameter 'path')\\r\\n---- System.ArgumentException : Absolute path information is required. (Parameter 'path')\r\n```\r\n\r\n**Part of stack trace:**\r\n```\r\n   at System.Reflection.Assembly.LoadFile(String path) in /_/src/System.Private.CoreLib/shared/System/Reflection/Assembly.cs:line 220\r\n   at System.Reflection.Tests.AssemblyTests.<>c__DisplayClass37_0.<LoadFile_NoSuchPath_ThrowsFileNotFoundException>b__0() in /_/src/System.Reflection/tests/AssemblyTests.cs:line 324\r\n----- Inner Stack Trace -----\r\n   at System.Reflection.Assembly.LoadFile(String path) in /_/src/System.Private.CoreLib/shared/System/Reflection/Assembly.cs:line 220\r\n   at System.Reflection.Tests.AssemblyTests.<>c__DisplayClass37_0.<LoadFile_NoSuchPath_ThrowsFileNotFoundException>b__0() in /_/src/System.Reflection/tests/AssemblyTests.cs:line 324\r\n```","Url":"https://github.com/dotnet/corefx/issues/42211","RelatedDescription":"Open issue \"Many tests failed due to System.ArgumentException : Absolute path information is required\" (#42211)"},{"Id":"514311392","IsPullRequest":true,"CreatedAt":"2019-10-30T01:29:25","Actor":"Dotnet-GitSync-Bot","Number":"42210","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corefx/pull/42210","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#42210)"},{"Id":"514191119","IsPullRequest":true,"CreatedAt":"2019-10-30T00:12:14","Actor":"Dotnet-GitSync-Bot","Number":"42202","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @jkotas @stephentoub @elinor-fung @noahfalk @filipnavara","Url":"https://github.com/dotnet/corefx/pull/42202","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#42202)"},{"Id":"514229526","IsPullRequest":true,"CreatedAt":"2019-10-29T23:15:53","Actor":"JuditRose","Number":"42204","RawContent":null,"Title":"[Release 3.1][Winforms] Adding EditorAttribute to Font.Name for FontNameEditor in .NET Core","State":"closed","Body":"Moving EditorAttribute outside of the ```#if !NETCORE``` so it gets compiled into .NET Core version of Winforms. \r\n\r\n There is no straightforward solution to add this without implementing a new feature in TypeDescriptor, so we decided to with the safer and quicker solution.","Url":"https://github.com/dotnet/corefx/pull/42204","RelatedDescription":"Closed or merged PR \"[Release 3.1][Winforms] Adding EditorAttribute to Font.Name for FontNameEditor in .NET Core\" (#42204)"},{"Id":"514286448","IsPullRequest":true,"CreatedAt":"2019-10-29T23:12:23","Actor":"ericstj","Number":"42209","RawContent":null,"Title":"[release/3.1] Handle binary formatted payloads with ResX mangled generic type names","State":"open","Body":"Release/3.1 port of https://github.com/dotnet/corefx/pull/42102.\r\n\r\n## Description\r\nWhen a resource contains a serialized type with generic parameters the resource cannot be deserialized on .NETCore.  This is caused by a bug in .NETFramework's ResXReader/Writer that we can't fix (nor would that be feasible since we want to deal with old/bad resx files).  To handle this we will detect these malformed type names and correct them in with a custom SerializationBinder at runtime.\r\n\r\n## Customer Impact\r\nCustomer cannot deserialize resource.  This may prevent the use of some 3rd party controls, or block porting Windows Forms applications from .NETFramework to .NETCore.\r\n\r\n## Regression?\r\n.NET Framework: Yes.  Previous version of .NETCore: No\r\n\r\n## Risk\r\nLow: This PR could impact performance, but we've minimized this by only using the custom binder to load types when we detect that a type name is bad.  We've profiled the type-name checking step to ensure that it is minimal.","Url":"https://github.com/dotnet/corefx/pull/42209","RelatedDescription":"Open PR \"[release/3.1] Handle binary formatted payloads with ResX mangled generic type names\" (#42209)"},{"Id":"514276755","IsPullRequest":false,"CreatedAt":"2019-10-29T22:51:18","Actor":"MichalBrylka","Number":"42207","RawContent":null,"Title":"XML documentation for some methods in System.Runtime.Intrinsics is inconsistent","State":"open","Body":"Hi,\r\n\r\nI've created a Roslyn based scanner that goes through System.Runtime.Intrinsics codebase and tries to rewrite intrinsics methods so that they have names equal to related CPU instructions (this might be useful for porting C++ code and fast prototyping):\r\nhttps://github.com/nemesissoft/IntrinsicsGenerator/tree/master/IntrinsicsGenerator\r\n\r\nin which a simple regex scans XML docs to look for instruction names. Most methods are documented but these are not:\r\nhttps://github.com/nemesissoft/IntrinsicsGenerator/blob/master/IntrinsicsGenerator/StillNotHandled.txt\r\n\r\nI reckon this has to be the case for some methods marked with _\"The native signature does not exist. We provide this additional overload for completeness.\"_ but it would be good if other methods would be consistently documented.  \r\n@tannergooding mentioned on twitter that this can be treated as issue \r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42207","RelatedDescription":"Open issue \"XML documentation for some methods in System.Runtime.Intrinsics is inconsistent\" (#42207)"},{"Id":"514264475","IsPullRequest":true,"CreatedAt":"2019-10-29T22:25:16","Actor":"steveharter","Number":"42206","RawContent":null,"Title":"Fix deserialize issue with a large Stream containing a BOM","State":"open","Body":"Addresses https://github.com/dotnet/corefx/issues/42145 for master.\r\n\r\nIf a Stream contains a BOM and encounters the area of code where remaining bytes need to be moved to the beginning of the buffer, the `Buffer.BlockCopy()`'s `srcOffset` parameter was 3 bytes (the BOM length) too short causing the wrong bytes to be moved. This occurs only when the Stream's length is greater than the default buffer length which is 16K (unless changed in JsonSerializerOptions).\r\n\r\nThis is expected to be ported to 3.1 and perhaps 3.0.x.\r\n","Url":"https://github.com/dotnet/corefx/pull/42206","RelatedDescription":"Open PR \"Fix deserialize issue with a large Stream containing a BOM\" (#42206)"},{"Id":"514235554","IsPullRequest":false,"CreatedAt":"2019-10-29T21:27:19","Actor":"geoffkizer","Number":"42205","RawContent":null,"Title":"System.Net.Quic initial API review","State":"open","Body":"This is the first cut at APIs for using the QUIC protocol.\r\n\r\nA brief overview of QUIC is available here: https://blog.cloudflare.com/the-road-to-quic/\r\n\r\n```csharp\r\nnamespace System.Net.Quic.Experimental\r\n{\r\n    public sealed class QuicConnection : IDisposable\r\n    {\r\n        public QuicConnection(IPEndPoint remoteEndPoint, System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, IPEndPoint localEndPoint = null, bool mock = false);\r\n        public System.Threading.Tasks.ValueTask ConnectAsync(System.Threading.CancellationToken cancellationToken = default);\r\n        public bool Connected { get; }\r\n        public IPEndPoint LocalEndPoint { get; }\r\n        public IPEndPoint RemoteEndPoint { get; }\r\n        public QuicStream CreateUnidirectionalStream();\r\n        public QuicStream CreateBidirectionalStream();\r\n        public System.Threading.Tasks.ValueTask<QuicStream> AcceptStreamAsync(System.Threading.CancellationToken cancellationToken = default);\r\n        public void Close();\r\n    }\r\n    public sealed class QuicListener : IDisposable\r\n    {\r\n        public QuicListener(IPEndPoint listenEndPoint, System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, bool mock = false);\r\n        public IPEndPoint ListenEndPoint { get; }\r\n        public System.Threading.Tasks.ValueTask<QuicConnection> AcceptConnectionAsync(System.Threading.CancellationToken cancellationToken = default);\r\n        public void Close();\r\n    }\r\n    public sealed class QuicStream : System.IO.Stream\r\n    {\r\n        internal QuicStream() { }\r\n        public long StreamId { get; }\r\n        public void ShutdownRead();\r\n        public void ShutdownWrite();\r\n    }\r\n}\r\n```\r\n\r\nNotes:\r\n\r\nGenerally, this object model is inspired by the existing System.Net.Sockets API -- Connect, Accept, LocalEndPoint, RemoteEndPoint, etc. Some differences worth noting:\r\n\r\n(1) QuicListener and QuicConnection take SSL options classes, since QUIC always uses TLS\r\n(2) These classes use IPEndPoint, since they are IP-specific (vs Socket which uses EndPoint and AddressFamily etc)\r\n(3) Since QUIC supports multiplexing, there is a distinction here between QuicConnection and QuicStream that doesn't exist in Sockets\r\n\r\nThe \"mock\" arguments to the QuicListener and QuicConnection constructors cause the \"mock QUIC\" implementation to be used. This is meant as a temporary measure while real QUIC protocol support is implemented and matures. This allows us to make progress on HTTP3 in parallel. These arguments will be removed before shipping.\r\n\r\nThere are currently no synchronous equivalents defined for async APIs like ConnectAsync. This matches HttpClient API definition.\r\n\r\nI've added \"Experimental\" to the namespace here to position this work as experimental and not yet committed.\r\n","Url":"https://github.com/dotnet/corefx/issues/42205","RelatedDescription":"Open issue \"System.Net.Quic initial API review\" (#42205)"},{"Id":"514213842","IsPullRequest":true,"CreatedAt":"2019-10-29T20:48:16","Actor":"geoffkizer","Number":"42203","RawContent":null,"Title":"QUIC: Remove ConnectAsync on QuicStream","State":"open","Body":"We don't need/want to expose this capability. Just ensure the stream ID is assigned when the QuicStream is created, and then create the stream on the wire on first use.\r\n\r\n@scalablecory @jkotalik ","Url":"https://github.com/dotnet/corefx/pull/42203","RelatedDescription":"Open PR \"QUIC: Remove ConnectAsync on QuicStream\" (#42203)"},{"Id":"514150597","IsPullRequest":false,"CreatedAt":"2019-10-29T18:59:33","Actor":"nguerrera","Number":"42201","RawContent":null,"Title":"Fatal, internal CLR error getting network interfaces","State":"open","Body":"I have seen this a couple of times on my machine running dotnet/toolset tests against 5.0 runtime. I don't have a good repro or a dump yet. Posting early in case someone recognizes this and saves me the time of chasing further.\r\n\r\n```\r\nFatal error. Internal CLR error. (0x80131506)\r\n   at System.StubHelpers.MngdFixedArrayMarshaler.ConvertContentsToManaged(IntPtr, System.Object ByRef, IntPtr)\r\n   at System.Runtime.InteropServices.Marshal.PtrToStructureHelper(IntPtr, System.Object, Boolean)\r\n   at System.Runtime.InteropServices.Marshal.PtrToStructureHelper(IntPtr, System.Type)\r\n   at System.Runtime.InteropServices.Marshal.PtrToStructure(IntPtr, System.Type)\r\n   at System.Runtime.InteropServices.Marshal.PtrToStructure[[Interop+IpHlpApi+IpAdapterAddresses, System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]](IntPtr)\r\n   at System.Net.NetworkInformation.SystemNetworkInterface.GetNetworkInterfaces()\r\n   at System.Net.NetworkInformation.SystemNetworkInterface.InternalGetIsNetworkAvailable()\r\n   ```","Url":"https://github.com/dotnet/corefx/issues/42201","RelatedDescription":"Open issue \"Fatal, internal CLR error getting network interfaces\" (#42201)"},{"Id":"514144888","IsPullRequest":false,"CreatedAt":"2019-10-29T18:50:08","Actor":"carlossanlop","Number":"42200","RawContent":null,"Title":"Confirm legacy behavior (NT5) still applies to current SafeFileHandle creation code","State":"open","Body":"[This PR](https://github.com/dotnet/corefx/pull/42099/) will reintroduce code coming from .NET Framework. It will contain a comment explaining behavior from Windows 2000. The comment says:\r\n\r\n> _NT5 oddity - when trying to open \"C:\\\" as a FileStream. We usually get ERROR_PATH_NOT_FOUND from the OS.  We should probably be consistent w/ every other directory._\r\n\r\n@JeremyKuhne 's request is to reconfirm and reinvestigate this behavior:\r\n\r\n> _Just an aside- it would be nice to investigate and rewrite this comment as a follow up. For one NT5 is Windows 2000, but I don't think we need to even call that out. It would be good to validate what this thing is asserting and just comment on trying to be consistent and that we did this historically (e.g. retaining for compat)._\r\n\r\nLink to comment for full context:\r\nhttps://github.com/dotnet/corefx/pull/42099/files/b847fe477abe89c0daf2c73c6d263596a7f6486b#r340219065\r\n\r\nOpening this separate issue to unblock that PR.","Url":"https://github.com/dotnet/corefx/issues/42200","RelatedDescription":"Open issue \"Confirm legacy behavior (NT5) still applies to current SafeFileHandle creation code\" (#42200)"},{"Id":"514073412","IsPullRequest":true,"CreatedAt":"2019-10-29T18:32:29","Actor":"ViktorHofer","Number":"42198","RawContent":null,"Title":"Fix typo in sourcelink targets import","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/42196\r\n\r\nThis slipped through CI probably because we don't exercise that path with our current configurations.","Url":"https://github.com/dotnet/corefx/pull/42198","RelatedDescription":"Closed or merged PR \"Fix typo in sourcelink targets import\" (#42198)"},{"Id":"513988127","IsPullRequest":false,"CreatedAt":"2019-10-29T18:32:29","Actor":"o-piskunov","Number":"42196","RawContent":null,"Title":"[ARM/Linux] Broken cross build","State":"closed","Body":"After https://github.com/dotnet/corefx/pull/42175 ARM/Linux cross build failed with next output:\r\n```\r\n/var/lib/jenkins/workspace/netcore/nightly_master/build_corefx_rpm_stress/repo/code/src/Directory.Build.targets(144,3): error MSB4019: The imported project \"/var/lib/jenkins/workspace/netcore/nightly_master/build_corefx_rpm_stress/repo/code/eng/disableSourceControlManagement.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [/var/lib/jenkins/workspace/netcore/nightly_master/build_corefx_rpm_stress/repo/code/src/build.proj]\r\n```\r\n\r\nUsed wrong file name: `eng/disableSourceControlManagement.targets` instead of `eng/DisableSourceControlManagement.targets`\r\n\r\ncc @jkotas @alpencolt ","Url":"https://github.com/dotnet/corefx/issues/42196","RelatedDescription":"Closed issue \"[ARM/Linux] Broken cross build\" (#42196)"},{"Id":"513925966","IsPullRequest":true,"CreatedAt":"2019-10-29T17:52:13","Actor":"stephentoub","Number":"42195","RawContent":null,"Title":"Avoid duplicated message in WebException","State":"closed","Body":"In a bunch of places, including in HttpClient, when a new exception instance is created to wrap an inner exception, the inner exception's message is then used as the message for the wrapping exception.  WebRequest.CreateCompatibleException is taking such an HttpRequestException and concatenating the outer and inner exception's messages, which means it's often duplicating the exact same message twice.\r\n\r\nSince we're including the exception as the inner exception, there's no need for such duplication... we can just follow suit and use the outer exception's message without concatenation.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/42181","Url":"https://github.com/dotnet/corefx/pull/42195","RelatedDescription":"Closed or merged PR \"Avoid duplicated message in WebException\" (#42195)"},{"Id":"514078454","IsPullRequest":false,"CreatedAt":"2019-10-29T17:03:39","Actor":"carlossanlop","Number":"42199","RawContent":null,"Title":"Remove duplicates of Interop.Kernel32.GenericOperations.GENERIC_READ and GENERIC_WRITE","State":"open","Body":"There are a few places in corefx that are declaring these two constants, but we should be consuming them solely from Interop.Kernel32.GenericOperations.\r\nA few of them are shared with CoreLib so the file needs to be moved to the correct location.\r\nSee this comment for more context:\r\nhttps://github.com/dotnet/corefx/pull/42099#discussion_r339838409","Url":"https://github.com/dotnet/corefx/issues/42199","RelatedDescription":"Open issue \"Remove duplicates of Interop.Kernel32.GenericOperations.GENERIC_READ and GENERIC_WRITE\" (#42199)"},{"Id":"513604638","IsPullRequest":true,"CreatedAt":"2019-10-29T16:46:10","Actor":"eiriktsarpalis","Number":"42186","RawContent":null,"Title":"Use docker-compose for running stress tests","State":"closed","Body":"Changes the linux pipeline so that client and server and run in separate containers. Also makes changes to the stress suite to accomodate hosting the server-side in a standalone container.","Url":"https://github.com/dotnet/corefx/pull/42186","RelatedDescription":"Closed or merged PR \"Use docker-compose for running stress tests\" (#42186)"},{"Id":"514046736","IsPullRequest":false,"CreatedAt":"2019-10-29T16:17:19","Actor":"jhirschdrg","Number":"42197","RawContent":null,"Title":"File.Move() when the destination does not contain a path the source file gets deleted and no exception is thrown","State":"open","Body":"`File.Move(@\"C:\\abc.txt, \"abc.txt\");`\r\n\r\nIf the destination is not a path and not null or empty just a string, the file gets deleted, and no exception is thrown\r\n","Url":"https://github.com/dotnet/corefx/issues/42197","RelatedDescription":"Open issue \"File.Move() when the destination does not contain a path the source file gets deleted and no exception is thrown\" (#42197)"},{"Id":"513925125","IsPullRequest":false,"CreatedAt":"2019-10-29T13:40:55","Actor":"juliusfriedman","Number":"42194","RawContent":null,"Title":"Cannot build from source openSUSE Tumbleweed","State":"open","Body":"> xecuting make install -j 1 \r\n  [ 17%] Built target System.IO.Compression.Native-Static\r\n  [ 33%] Built target System.IO.Compression.Native\r\n  [ 35%] Built target System.IO.Ports.Native-Static\r\n  [ 38%] Built target System.IO.Ports.Native\r\n  [ 53%] Built target System.Native\r\n  [ 67%] Built target System.Native-Static\r\n  [ 71%] Built target System.Net.Http.Native-Static\r\n  [ 76%] Built target System.Net.Http.Native\r\n  [ 77%] Building C object System.Net.Security.Native/CMakeFiles/System.Net.Security.Native-Static.dir/pal_gssapi.c.o\r\n  /home/julius/Downloads/corefx/src/Native/Unix/System.Net.Security.Native/pal_gssapi.c:16:10: fatal error: 'gssapi/gssapi_ext.h' file not found\r\n  Failed to build corefx native components.\r\n  #include <gssapi/gssapi_ext.h>\r\n           ^~~~~~~~~~~~~~~~~~~~~\r\n  1 error generated.\r\n  make[2]: *** [System.Net.Security.Native/CMakeFiles/System.Net.Security.Native-Static.dir/build.make:63: System.Net.Security.Native/CMakeFiles/System.Net.Security.Native-Static.dir/pal_gssapi.c.o] Error 1\r\n  make[1]: *** [CMakeFiles/Makefile2:407: System.Net.Security.Native/CMakeFiles/System.Net.Security.Native-Static.dir/all] Error 2\r\n  make: *** [Makefile:130: all] Error 2\r\n/home/julius/Downloads/corefx/src/Native/build-native.proj(36,5): error MSB3073: The command \"\"/home/julius/Downloads/corefx/src/Native/build-native.sh\" x64 Debug Linux outconfig netcoreapp-Linux-Debug-x64 -portable\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\n/home/julius/Downloads/corefx/src/Native/build-native.proj(36,5): error MSB3073: The command \"\"/home/julius/Downloads/corefx/src/Native/build-native.sh\" x64 Debug Linux outconfig netcoreapp-Linux-Debug-x64 -portable\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:02:01.71\r\nBuild failed (exit code '1').\r\n\r\n\r\nEntire build output is attached:\r\n----------------------------------------------\r\n\r\n\r\n[output.txt](https://github.com/dotnet/corefx/files/3783781/output.txt)\r\n\r\n(openSUSE Tumbleweed 20191025 - Kernel \\r (\\l).)\r\nThanks in advance for your assistance\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42194","RelatedDescription":"Open issue \"Cannot build from source openSUSE Tumbleweed\" (#42194)"},{"Id":"513910938","IsPullRequest":false,"CreatedAt":"2019-10-29T13:17:33","Actor":"adamsitnik","Number":"42193","RawContent":null,"Title":"Getting process information is few times slower on Linux","State":"open","Body":"Getting process information is few times slower on Linux:\r\n\r\n| Slower                                             | Lin/Win | Win Median (ns) | Lin Median (ns) | Modality|\r\n| -------------------------------------------------- | -------:| ---------------:| ---------------:| --------:|\r\n| System.Diagnostics.Perf_Process.GetProcesses       |   12.94 |      1048505.00 |     13562765.47 |         |\r\n| System.Diagnostics.Perf_Process.GetProcessesByName |    4.73 |      1059057.08 |      5010892.56 |         |\r\n| System.Diagnostics.Perf_Process.GetCurrentProcess  |    4.49 |          101.52 |          455.68 |         |\r\n\r\nImportant: `System.Diagnostics.Perf_Process.GetProcesses` fetches the data for all running processes and comparing two different OSes which run different number of processes is not apples-to-apples comparison. However, `GetProcessesByName` and `GetCurrentProcess` perform the same work and moreover `GetCurrentProcess` is frequently used API.\r\n\r\nHow to run the [benchmarks](https://github.com/dotnet/performance/blob/400abfd1c1a7a21ca4787f6dbd0a268e29626b56/src/benchmarks/micro/corefx/System.Diagnostics/Perf_Process.cs):\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter 'System.Diagnostics.Perf_Process.Get*'\r\n```\r\n\r\nRecommended profilers are [PerfCollect](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#PerfCollect) and [VTune](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#VTune).\r\n\r\nThere is a high chance that we are already using the best available API and the limiting factor is OS here.","Url":"https://github.com/dotnet/corefx/issues/42193","RelatedDescription":"Open issue \"Getting process information is few times slower on Linux\" (#42193)"},{"Id":"513799652","IsPullRequest":false,"CreatedAt":"2019-10-29T09:43:33","Actor":"tmds","Number":"42192","RawContent":null,"Title":"IsDaylightSavingTime_CasablancaMultiYearDaylightSavings fails on rhel.8","State":"open","Body":"We have an internal CI server that does daily builds of corefx on rhel.8.\r\nSince 24 sept, System.Runtime.Tests is failing on IsDaylightSavingTime_CasablancaMultiYearDaylightSavings.\r\n\r\nI haven't looked further into this yet.\r\n\r\n```\r\n  pushd /home/tester/corefx/artifacts/bin/System.Runtime.Tests/netcoreapp-Unix-Debug\r\n  /home/tester/corefx/artifacts/bin/testhost/netcoreapp-Linux-Debug-x64/dotnet exec --runtimeconfig System.Runtime.Tests.runtimeconfig.json xunit.console.dll System.Runtime.Tests.dll -xml testResults.xml -nologo -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing \r\n  popd\r\n  ===========================================================================================================\r\n  ~/corefx/artifacts/bin/System.Runtime.Tests/netcoreapp-Unix-Debug ~/corefx/src/System.Runtime/tests\r\n  [37m  Discovering: System.Runtime.Tests (method display = ClassAndMethod, method display options = None)\r\n  [m[37m  Discovered:  System.Runtime.Tests (found 5372 of 5419 test cases)\r\n  [m[37m  Starting:    System.Runtime.Tests (parallel test collections = on, max threads = 4)\r\n  [m[33;1m    System.Tests.DateTimeOffsetTests.ToLocalTime_MaxValue [SKIP]\r\n  [m[37m      Condition(s) not met: \"IsMaxValuePositiveLocalOffset\"\r\n      System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(dateTimeString: \"1940-02-25T00:00:00.0000000Z\", expectedDST: True, expectedOffsetString: \"1:00:00\") [FAIL]\r\n      System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(dateTimeString: \"1940-11-20T00:00:00.0000000Z\", expectedDST: True, expectedOffsetString: \"1:00:00\") [FAIL]\r\n      System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(dateTimeString: \"1940-12-31T23:59:59.0000000Z\", expectedDST: True, expectedOffsetString: \"1:00:00\") [FAIL]\r\n      System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(dateTimeString: \"1941-01-01T00:00:00.0000000Z\", expectedDST: True, expectedOffsetString: \"1:00:00\") [FAIL]\r\n      System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(dateTimeString: \"1945-02-24T12:00:00.0000000Z\", expectedDST: True, expectedOffsetString: \"1:00:00\") [FAIL]\r\n      System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(dateTimeString: \"1945-11-17T01:00:00.0000000Z\", expectedDST: True, expectedOffsetString: \"1:00:00\") [FAIL]\r\n      System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(dateTimeString: \"1945-11-17T22:59:59.0000000Z\", expectedDST: True, expectedOffsetString: \"1:00:00\") [FAIL]\r\n  [m[31;1m[m[37m      Test with the zone Africa/Casablanca and date 2/25/1940 12:00:00 AM failed\r\n  [m[37m      Expected: True\r\n  [m[37m      Actual:   False\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(2361,0): at System.Tests.TimeZoneInfoTests.VerifyDST(TimeZoneInfo tz, DateTime dt, Boolean expectedDST)\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(1743,0): at System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(String dateTimeString, Boolean expectedDST, String expectedOffsetString)\r\n  [m[31;1m[m[37m      Test with the zone Africa/Casablanca and date 11/20/1940 12:00:00 AM failed\r\n  [m[37m      Expected: True\r\n  [m[37m      Actual:   False\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(2361,0): at System.Tests.TimeZoneInfoTests.VerifyDST(TimeZoneInfo tz, DateTime dt, Boolean expectedDST)\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(1743,0): at System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(String dateTimeString, Boolean expectedDST, String expectedOffsetString)\r\n  [m[31;1m[m[37m      Test with the zone Africa/Casablanca and date 12/31/1940 11:59:59 PM failed\r\n  [m[37m      Expected: True\r\n  [m[37m      Actual:   False\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(2361,0): at System.Tests.TimeZoneInfoTests.VerifyDST(TimeZoneInfo tz, DateTime dt, Boolean expectedDST)\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(1743,0): at System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(String dateTimeString, Boolean expectedDST, String expectedOffsetString)\r\n  [m[31;1m[m[37m      Test with the zone Africa/Casablanca and date 1/1/1941 12:00:00 AM failed\r\n  [m[37m      Expected: True\r\n  [m[37m      Actual:   False\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(2361,0): at System.Tests.TimeZoneInfoTests.VerifyDST(TimeZoneInfo tz, DateTime dt, Boolean expectedDST)\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(1743,0): at System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(String dateTimeString, Boolean expectedDST, String expectedOffsetString)\r\n  [m[31;1m[m[37m      Test with the zone Africa/Casablanca and date 2/24/1945 12:00:00 PM failed\r\n  [m[37m      Expected: True\r\n  [m[37m      Actual:   False\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(2361,0): at System.Tests.TimeZoneInfoTests.VerifyDST(TimeZoneInfo tz, DateTime dt, Boolean expectedDST)\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(1743,0): at System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(String dateTimeString, Boolean expectedDST, String expectedOffsetString)\r\n  [m[31;1m[m[37m      Test with the zone Africa/Casablanca and date 11/17/1945 1:00:00 AM failed\r\n  [m[37m      Expected: True\r\n  [m[37m      Actual:   False\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(2361,0): at System.Tests.TimeZoneInfoTests.VerifyDST(TimeZoneInfo tz, DateTime dt, Boolean expectedDST)\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(1743,0): at System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(String dateTimeString, Boolean expectedDST, String expectedOffsetString)\r\n  [m[31;1m[m[37m      Test with the zone Africa/Casablanca and date 11/17/1945 10:59:59 PM failed\r\n  [m[37m      Expected: True\r\n  [m[37m      Actual:   False\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(2361,0): at System.Tests.TimeZoneInfoTests.VerifyDST(TimeZoneInfo tz, DateTime dt, Boolean expectedDST)\r\n  [m[37m        /home/tester/corefx/src/System.Runtime/tests/System/TimeZoneInfoTests.cs(1743,0): at System.Tests.TimeZoneInfoTests.IsDaylightSavingTime_CasablancaMultiYearDaylightSavings(String dateTimeString, Boolean expectedDST, String expectedOffsetString)\r\n  [m[33;1m    System.Tests.DateTimeOffsetTests.ToLocalTime_MinValue [SKIP]\r\n  [m[37m      Condition(s) not met: \"IsMinValueNegativeLocalOffset\"\r\n  [m[33;1m    System.Tests.DateTimeOffsetTests.ToLocalTime_Ambiguous [SKIP]\r\n  [m[37m      Condition(s) not met: \"IsPacificTime\"\r\n  [m[33;1m    System.Tests.ArgIteratorTests.ArgIterator_GetNextArgType [SKIP]\r\n  [m[37m      Condition(s) not met: \"IsArgIteratorSupported\"\r\n  [m[33;1m    System.Tests.ArgIteratorTests.ArgIterator_GetRemainingCount_GetNextArg [SKIP]\r\n  [m[37m      Condition(s) not met: \"IsArgIteratorSupported\"\r\n  [m[37m  Finished:    System.Runtime.Tests\r\n  [m[37m=== TEST EXECUTION SUMMARY ===\r\n  [m[37m   System.Runtime.Tests  Total: 34299, Errors: 0, Failed: 7, Skipped: 5, Time: 13.603s\r\n```\r\n\r\ncc @omajid @RheaAyase ","Url":"https://github.com/dotnet/corefx/issues/42192","RelatedDescription":"Open issue \"IsDaylightSavingTime_CasablancaMultiYearDaylightSavings fails on rhel.8\" (#42192)"},{"Id":"513794591","IsPullRequest":false,"CreatedAt":"2019-10-29T09:33:30","Actor":"SaravananAyyanar","Number":"42191","RawContent":null,"Title":"How to use .sdf file in .NET Core?","State":"open","Body":"In .NET framework, we can load the .sdf file using System.Data.Linq.DataContext. But this is not available in .NET Core.\r\n\r\nHow can we use .sdf files in .NET Core?\r\n````\r\npublic partial class Northwind : System.Data.Linq.DataContext\r\n{\r\nprivate static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();\r\n....\r\npublic Northwind(string connection) :\r\nbase(connection, mappingSource)\r\n{\r\nOnCreated();\r\n}\r\n.....\r\npublic System.Data.Linq.Table<Categories> Categories\r\n{\r\nget\r\n{\r\nreturn this.GetTable<Categories>();\r\n}\r\n}\r\npublic System.Data.Linq.Table<Customers> Customers\r\n{\r\nget\r\n{\r\nreturn this.GetTable<Customers>();\r\n}\r\n}\r\npublic System.Data.Linq.Table<Employees> Employees\r\n{\r\nget\r\n{\r\nreturn this.GetTable<Employees>();\r\n}\r\n}\r\npublic System.Data.Linq.Table<OrderDetails> OrderDetails\r\n{\r\nget\r\n{\r\nreturn this.GetTable<OrderDetails>();\r\n}\r\n}\r\npublic System.Data.Linq.Table<Orders> Orders\r\n{\r\nget\r\n{\r\nreturn this.GetTable<Orders>();\r\n}\r\n}\r\npublic System.Data.Linq.Table<Products> Products\r\n{\r\nget\r\n{\r\nreturn this.GetTable<Products>();\r\n}\r\n}\r\npublic System.Data.Linq.Table<Shippers> Shippers\r\n{\r\nget\r\n{\r\nreturn this.GetTable<Shippers>();\r\n}\r\n}\r\npublic System.Data.Linq.Table<Suppliers> Suppliers\r\n{\r\nget\r\n{\r\nreturn this.GetTable<Suppliers>();\r\n}\r\n}\r\n}\r\n// Getting Data\r\nprivate void PopulateData()\r\n\r\n{\r\n\r\n{\r\n\r\nRandom r = new Random();\r\n\r\nNorthwind north = new Northwind(string.Format(@\"Data Source= {0}\", FindFile(\"Northwind.sdf\")));\r\n\r\n\r\nforeach (OrderDetails orderDet in north.OrderDetails.Take(50))\r\n\r\n{\r\n\r\nOrderInfo orderInfo = new OrderInfo();\r\n\r\n\r\norderInfo.OrderID = orderDet.OrderID;\r\n\r\norderInfo.CustomerID = orderDet.Orders.CustomerID;\r\n\r\norderInfo.ProductName = orderDet.Products.ProductName;\r\n\r\norderInfo.UnitPrice = (double)orderDet.UnitPrice;\r\n\r\norderInfo.OrderDate = (DateTime)orderDet.Orders.OrderDate;\r\n\r\norderInfo.DeliveryDelay = (DateTime)orderDet.Orders.ShippedDate - orderInfo.OrderDate;\r\n\r\norderInfo.Quantity = orderDet.Quantity;\r\n\r\norderInfo.ContactNumber = r.Next(999111234, 999111239).ToString();\r\n\r\norderInfo.ShipAddress = orderDet.Orders.ShipAddress;\r\n\r\n_orderList.Add(orderInfo);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n","Url":"https://github.com/dotnet/corefx/issues/42191","RelatedDescription":"Open issue \"How to use .sdf file in .NET Core?\" (#42191)"},{"Id":"513758291","IsPullRequest":true,"CreatedAt":"2019-10-29T08:19:07","Actor":"robert-matusewicz","Number":"42190","RawContent":null,"Title":"[WIP] Extract BCryptImportKey from Cng.cs to Interop.BCryptImportKey.cs","State":"open","Body":" Extract BCryptImportKey from Cng.cs to Interop.BCryptImportKey.cs","Url":"https://github.com/dotnet/corefx/pull/42190","RelatedDescription":"Open PR \"[WIP] Extract BCryptImportKey from Cng.cs to Interop.BCryptImportKey.cs\" (#42190)"},{"Id":"513666379","IsPullRequest":true,"CreatedAt":"2019-10-29T03:10:20","Actor":"safern","Number":"42189","RawContent":null,"Title":"[release/3.1] Update SDL validation to use values from corefx-sdl-validation variable group","State":"open","Body":"Port for: https://github.com/dotnet/corefx/pull/42098\r\n\r\nThis changes SDL validation to use group variables so if a bug area path changes, we just update it directly in Azure DevOps and don't have to keep updating code and porting to all branches.\r\n\r\ncc: @danmosemsft @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/42189","RelatedDescription":"Open PR \"[release/3.1] Update SDL validation to use values from corefx-sdl-validation variable group\" (#42189)"},{"Id":"513647619","IsPullRequest":true,"CreatedAt":"2019-10-29T01:55:42","Actor":"buyaa-n","Number":"42188","RawContent":null,"Title":"Annotate System.Runtime.Serialization.Formatters for nullable","State":"open","Body":"Contributes to https://github.com/dotnet/corefx/issues/40623","Url":"https://github.com/dotnet/corefx/pull/42188","RelatedDescription":"Open PR \"Annotate System.Runtime.Serialization.Formatters for nullable\" (#42188)"},{"Id":"513640036","IsPullRequest":true,"CreatedAt":"2019-10-29T01:22:13","Actor":"davidwrighton","Number":"42187","RawContent":null,"Title":"Improve LINQ diagnosability and startup performance","State":"open","Body":"- Give unique numbered names to LINQ lambdas which are not named\r\n- Generate LINQ interpreter thunks with unique names that are descriptive of the delegate in use\r\n- For interpreter thunk cases where the delegate type is simple corresponding to simple parameter passing to functions taking up to 2 parameters, use precompiled C# generics instead. \r\n  - This results in using generic sharing for many instead of requiring exact compiled code","Url":"https://github.com/dotnet/corefx/pull/42187","RelatedDescription":"Open PR \"Improve LINQ diagnosability and startup performance\" (#42187)"},{"Id":"513574003","IsPullRequest":true,"CreatedAt":"2019-10-29T00:58:42","Actor":"Marusyk","Number":"42184","RawContent":null,"Title":"Consolidate .netcoreapp.cs test files in System.Runtime.Extensions","State":"closed","Body":"Contributes #41821\r\n\r\nPlease review\r\nThank you in advance","Url":"https://github.com/dotnet/corefx/pull/42184","RelatedDescription":"Closed or merged PR \"Consolidate .netcoreapp.cs test files in System.Runtime.Extensions\" (#42184)"},{"Id":"513576863","IsPullRequest":false,"CreatedAt":"2019-10-28T22:47:06","Actor":"wirecat","Number":"42185","RawContent":null,"Title":"Add WolfSSL Support as an OpenSSL alternative","State":"closed","Body":"WolfSSL is an SSL library targeted at embedded development that focuses on size and speed. It's also FIPS certified which is is important for anyone working with federal agencies.\r\n\r\nWolfSSL website: https://www.wolfssl.com/\r\nWolfSSL github: https://github.com/wolfSSL/wolfssl\r\n\r\nI have two ideas currently on how dotnet could support WolfSSL:\r\n\r\n1. The `System.Security.Cryptography.Native` code relies on OpenSSL, but could be extended to also support WolfSSL. The WolfSSL library provides an OpenSSL compatibility layer which could be used to get a relatively fast, but sub-optimal, implementation into dotnet. I think the [opensslshim.h](https://github.com/dotnet/corefx/blob/master/src/Native/Unix/System.Security.Cryptography.Native/opensslshim.h) and [opensslshim.c](https://github.com/dotnet/corefx/blob/master/src/Native/Unix/System.Security.Cryptography.Native/opensslshim.c) code could be updated to point at the WolfSSL compatibility layer, but I haven't done any testing yet. I'm not positive that all the functions needed in that codebase are currently covered by the WolfSSL compatibility layer, but I am investigating that.\r\n1.  Add support for the WolfSSL API, as opposed to using the OpenSSL compatibility layer, to `System.Security.Cryptography.Native`.\r\n\r\nWould either option be something that would be welcomed in a PR?\r\n\r\nAm I off-base and chasing the wrong solution for replacing OpenSSL with WolfSSL in dotnet?\r\n\r\nThank you for the time!","Url":"https://github.com/dotnet/corefx/issues/42185","RelatedDescription":"Closed issue \"Add WolfSSL Support as an OpenSSL alternative\" (#42185)"},{"Id":"514279038","IsPullRequest":false,"CreatedAt":"2019-10-27T04:54:41","Actor":"zehavibarak","Number":"42208","RawContent":null,"Title":"SignalR serialize date timezone","State":"open","Body":"# SignalR date serialization\r\n\r\nWhile serializing response, the new Core 3.0 System.Text.Json.JsonSerializer adds timezone to dates.\r\n\r\n# General\r\n\r\nThis behavior was previously resolved on Core 2.2 using Newtonsoft `PayloadSerializerSettings.DateTimeZoneHandling` and `services.AddSingleton _ => new JsonSerializer`. \r\nUsing the new 3.0, there is no way of setting this, unless using the `AddNewtonsoftJsonProtocol()`, which I would rather avoid.","Url":"https://github.com/dotnet/corefx/issues/42208","RelatedDescription":"Open issue \"SignalR serialize date timezone\" (#42208)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"514373951","IsPullRequest":false,"CreatedAt":"2019-10-30T03:31:42","Actor":"yyjdelete","Number":"39579","RawContent":null,"Title":"IntelliSense don't suggest return-types for local function with modifiers","State":"open","Body":"**Version Used**: \r\nVS 16.4.0Preview2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Remove the return type of local function, and typing it again;\r\n```cs\r\n        public static void Method()\r\n        {\r\n            static void XXX() { }\r\n            async Task YYY() { }\r\n        }\r\n```\r\n\r\n**Expected Behavior**:\r\nType will be suggest for the place after modifiers.\r\n\r\n**Actual Behavior**:\r\nNo intellisense is shown after `static`;\r\nOnly `void` and another `async` is shown after `async`;\r\n![image](https://user-images.githubusercontent.com/1819074/67825916-da74b280-fb05-11e9-9006-2f328c77c988.png)\r\n\r\nOnly another `async` is shown after `static async`;\r\n","Url":"https://github.com/dotnet/roslyn/issues/39579","RelatedDescription":"Open issue \"IntelliSense don't suggest return-types for local function with modifiers\" (#39579)"},{"Id":"513620933","IsPullRequest":true,"CreatedAt":"2019-10-30T01:21:07","Actor":"dotnet-bot","Number":"39561","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39561","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39561)"},{"Id":"514262222","IsPullRequest":true,"CreatedAt":"2019-10-30T00:43:13","Actor":"dibarbet","Number":"39575","RawContent":null,"Title":"Fix multiple diagnostics showing up when configuring unnecessary pare…","State":"closed","Body":"…ntheses severity with editor config","Url":"https://github.com/dotnet/roslyn/pull/39575","RelatedDescription":"Closed or merged PR \"Fix multiple diagnostics showing up when configuring unnecessary pare…\" (#39575)"},{"Id":"514298858","IsPullRequest":false,"CreatedAt":"2019-10-30T00:16:07","Actor":"CyrusNajmabadi","Number":"39578","RawContent":null,"Title":"IsNodeUnderselected crash","State":"closed","Body":"This is probably a dupe.  but i thought we already fixed this.  I'm still getting this in Preview 2 though:\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\r\nParameter name: position\r\n   at Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(Int32 position,Boolean findInsideTrivia)\r\n   at Microsoft.CodeAnalysis.CodeRefactoringHelpers.IsNodeUnderselected(SyntaxNode node,TextSpan selection)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.State.TryInitializeAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.State.GenerateAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.IntroduceVariableAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.IntroduceVariableCodeRefactoringProvider.ComputeRefactoringsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\nIf htis is a dupe, feel free to close.  However, if this was expected to be fixed by now, i hope this helps!","Url":"https://github.com/dotnet/roslyn/issues/39578","RelatedDescription":"Closed issue \"IsNodeUnderselected crash\" (#39578)"},{"Id":"514275925","IsPullRequest":false,"CreatedAt":"2019-10-29T22:49:20","Actor":"prosser","Number":"39577","RawContent":null,"Title":"Live Unit Testing fails with 'FatalError - System.ArgumentException: Syntax tree already present'","State":"open","Body":"**Version Used**: 16.3.7\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Load solution with SDK-style project targeting net462. Ours also has included .props and .targets, including those injected by .nupkg with custom build tasks.\r\n2. Start LUT\r\n\r\n**Expected Behavior**:\r\nLUT starts as expected\r\n\r\n**Actual Behavior**:\r\nError and LUT does not start.\r\n\r\n[15:43:05.756 Error] - FatalError - System.ArgumentException: Syntax tree already present\r\nParameter name: trees[136]\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddSyntaxTrees(IEnumerable`1 trees)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonAddSyntaxTrees(IEnumerable`1 trees)\r\n   at Microsoft.CodeAnalysis.LiveUnitTesting.BuildManagement.CompilationComparer.GetUpdatedCompilation(Compilation compilation, CommandLineArguments arguments, Logger logger, BuildDifference& differences)\r\n   at Microsoft.CodeAnalysis.LiveUnitTesting.BuildManagement.EmitHelper.<EmitAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.LiveUnitTesting.BuildManagement.BuildService.<EmitSingleProjectAsync>d__57.MoveNext()\r\n[15:43:05.761 Info] Build completed with failures. Errors were logged under '<redacted>\\v16\\lut\\0\\diag\\'.\r\n[15:43:21.477 Info] Live Unit Testing stopped.","Url":"https://github.com/dotnet/roslyn/issues/39577","RelatedDescription":"Open issue \"Live Unit Testing fails with 'FatalError - System.ArgumentException: Syntax tree already present'\" (#39577)"},{"Id":"514269813","IsPullRequest":true,"CreatedAt":"2019-10-29T22:35:57","Actor":"333fred","Number":"39576","RawContent":null,"Title":"Introduce IUsingDeclarationOperation","State":"open","Body":"Remove VariableDeclarationKind, and replace with a new IUsingDeclarationOperation node as a parent to IVariableDeclarationGroupOperation.\r\n\r\nI chose to make IUsingDeclarationOperation be the always-implicit node, leaving IVariableDeclarationGroupOperation to be implicit or explicit depending on whether the variable was implicitly declared. As far as I could find, we don't have a direct precedent, but I had 2 reasons for this:\r\n\r\n1. If a using is trying to filter variables, they may look for groups that weren't implicitly declared. This might lead to false negatives on this group.\r\n2. The closest precedent I see is implicit conversions, where the IConversionOperation on top is implicit. This isn't a direct comparison, but it feels similar enough to my mind to serve as additionally justification.\r\n\r\nI don't feel too strongly about either of these assertions though, so if there's a good reason for doing it the other way I'm not seeing please let me know.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/39572. \r\n\r\ncc @mavasani @jasonmalinowski.\r\n\r\n@agocke, this will need QB approval. We're trying to remove an API before it ships for the first time in 16.4.","Url":"https://github.com/dotnet/roslyn/pull/39576","RelatedDescription":"Open PR \"Introduce IUsingDeclarationOperation\" (#39576)"},{"Id":"514254499","IsPullRequest":true,"CreatedAt":"2019-10-29T22:04:07","Actor":"genlu","Number":"39574","RawContent":null,"Title":"Remove experiment for \"sorting completion list by matching\"","State":"open","Body":"We have been running the experiment of \"sorting completion list by matching\" (#38499) internally for a couple months now, thing seems to be working well. So I'm removing the experiment which would enable this new behavior for everybody. \r\n\r\n@vatsalyaagrawal @ivanbasov @jinujoseph Please let me know if you have any concerns","Url":"https://github.com/dotnet/roslyn/pull/39574","RelatedDescription":"Open PR \"Remove experiment for \"sorting completion list by matching\"\" (#39574)"},{"Id":"514231152","IsPullRequest":true,"CreatedAt":"2019-10-29T21:19:16","Actor":"dustincoleman","Number":"39573","RawContent":null,"Title":"Do not return favorites in expansions of null values.","State":"open","Body":"Fix for https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1010026. This bug causes a tremendous number of non-fatal watsons in concord when hit.","Url":"https://github.com/dotnet/roslyn/pull/39573","RelatedDescription":"Open PR \"Do not return favorites in expansions of null values.\" (#39573)"},{"Id":"514224689","IsPullRequest":false,"CreatedAt":"2019-10-29T21:07:30","Actor":"333fred","Number":"39572","RawContent":null,"Title":"Replace VariableDeclarationKind with IUsingDeclarationOperation parent node","State":"open","Body":"On review, we found issues with the `VariableDeclarationKind` enum. First, `Default` is inconsistent with other names we use in Operation-specific Kind enums, such as `CaseKind.Default`, where `Default` is a real thing with meaning. Second, whatever word we choose for `Default` should be able to encapsulate all other types of declarations, including patterns, foreach, using statements, etc. The appropriate API here would be to have a separate kind for each of these types, which isn't something that we feel that we want to do. Currently, you look to the parent node of the `IVariableDeclarationGroupOperation` to find the context you're declaring in, and we feel that should be maintained for using declarations as well. Therefore, we will replace this Kind enum with an `IUsingDeclarationOperation` node, which will be the parent of the `IVariableDeclarationGroupOperation`. If further feedback warrants, we can consider adding extension methods on `IVariableDeclarationGroupOperation` nodes to expose this info on those nodes as well.\r\n\r\ncc @chsienki @AlekseyTs @gafter @KathleenDollard @DustinCampbell @agocke ","Url":"https://github.com/dotnet/roslyn/issues/39572","RelatedDescription":"Open issue \"Replace VariableDeclarationKind with IUsingDeclarationOperation parent node\" (#39572)"},{"Id":"514216251","IsPullRequest":true,"CreatedAt":"2019-10-29T20:52:22","Actor":"KristianJakubik","Number":"39571","RawContent":null,"Title":"Support nullability codefix for default expression","State":"open","Body":"Fixes: #39423","Url":"https://github.com/dotnet/roslyn/pull/39571","RelatedDescription":"Open PR \"Support nullability codefix for default expression\" (#39571)"},{"Id":"514210870","IsPullRequest":true,"CreatedAt":"2019-10-29T20:43:00","Actor":"agocke","Number":"39570","RawContent":null,"Title":"Support non-monotonic transfer for local functions","State":"open","Body":"Local function flow analysis has always been special-cased for definite\r\nassignment, and specifically for definite assignment with monotonic\r\nassignment. This change implements the same non-monotonic tracking that\r\nwe use for try-finally for local functions. This is a conservative\r\nanalysis, meaning that certain rare cases may not transfer as much\r\ninformation as possible. It's currently assumed that these cases are\r\nrare enough to not be frustrating. No safety problems should be present\r\nin the conservative analysis.\r\n\r\nFixes #14400\r\nFixes #14214","Url":"https://github.com/dotnet/roslyn/pull/39570","RelatedDescription":"Open PR \"Support non-monotonic transfer for local functions\" (#39570)"},{"Id":"514132886","IsPullRequest":false,"CreatedAt":"2019-10-29T18:30:05","Actor":"agocke","Number":"39569","RawContent":null,"Title":"Local function calls don't work in DataFlowsOutWalker","State":"open","Body":"DataFlowsOut expects to intercept all assignments by overriding the AssignImpl method in definite assignment. This method requires the bound node of the value, being assigned and the bound node of the variable being assigned. That information is not available for local function calls and is not possible to store.\r\n\r\nTo make this API work for local function calls we need a new interception point that only requires the slot being assigned, since that is all that is stored for local functions and should be sufficient to provide the basic information for DataFlowsOut.\r\n\r\nsee the following test:\r\n```C#\r\n\r\n        [Fact]\r\n        [WorkItem(39569, \"https://github.com/dotnet/roslyn/issues/39569\")]\r\n        public void AssignmentInsideLocal05()\r\n        {\r\n            var dataFlowAnalysisResults = CompileAndAnalyzeDataFlowStatements(@\"\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        int x = 3, y = 4;\r\n        void Local()\r\n        {\r\n            x = 1;\r\n        }\r\n/*<bind>*/\r\n        Local();\r\n/*</bind>*/\r\n        System.Console.WriteLine(x);\r\n    }\r\n}\r\n\");\r\n            // Right now region analysis requires bound nodes for each variable and value being\r\n            // assigned. This doesn't work with the current local function analysis because we only\r\n            // store the slots, not the full boundnode of every assignment (which is impossible\r\n            // anyway)\r\n            Assert.Equal(\"x\", GetSymbolNamesJoined(dataFlowAnalysisResults.DataFlowsOut));\r\n            Assert.Null(GetSymbolNamesJoined(dataFlowAnalysisResults.VariablesDeclared));\r\n            Assert.Equal(\"x\", GetSymbolNamesJoined(dataFlowAnalysisResults.AlwaysAssigned));\r\n            Assert.Null(GetSymbolNamesJoined(dataFlowAnalysisResults.DataFlowsIn));\r\n            Assert.Null(GetSymbolNamesJoined(dataFlowAnalysisResults.ReadInside));\r\n            Assert.Equal(\"x\", GetSymbolNamesJoined(dataFlowAnalysisResults.ReadOutside));\r\n            Assert.Null(GetSymbolNamesJoined(dataFlowAnalysisResults.WrittenInside));\r\n            Assert.Equal(\"x, y\", GetSymbolNamesJoined(dataFlowAnalysisResults.WrittenOutside));\r\n            Assert.Equal(\"x\", GetSymbolNamesJoined(dataFlowAnalysisResults.Captured));\r\n        }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39569","RelatedDescription":"Open issue \"Local function calls don't work in DataFlowsOutWalker\" (#39569)"},{"Id":"514116017","IsPullRequest":true,"CreatedAt":"2019-10-29T18:02:15","Actor":"tmat","Number":"39568","RawContent":null,"Title":"Subscribe to OnModuleInstanceLoad/OnModuleInstanceUnload events only when managed debugging is being used","State":"open","Body":"Avoids loading Roslyn when debugging native code only.\r\n\r\nFixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/940318","Url":"https://github.com/dotnet/roslyn/pull/39568","RelatedDescription":"Open PR \"Subscribe to OnModuleInstanceLoad/OnModuleInstanceUnload events only when managed debugging is being used\" (#39568)"},{"Id":"514114769","IsPullRequest":true,"CreatedAt":"2019-10-29T18:00:21","Actor":"JoeRobich","Number":"39567","RawContent":null,"Title":"Update .NET Core sdk to 3.1 preview","State":"open","Body":"Integration tests are now creating test projects that target netcoreapp3.1. This moves us to a .NET Core SDK that supports that TFM.","Url":"https://github.com/dotnet/roslyn/pull/39567","RelatedDescription":"Open PR \"Update .NET Core sdk to 3.1 preview\" (#39567)"},{"Id":"514087141","IsPullRequest":false,"CreatedAt":"2019-10-29T17:17:48","Actor":"myblindy","Number":"39566","RawContent":null,"Title":"Compiler & VS crash repro","State":"open","Body":"**Version Used**:  VS 16.3.5 (also tested with 16.3.6, same result)\r\n\r\n**Steps to Reproduce**:\r\n\r\nUse the following code. I cut out a whole bunch of it, and what's left seems necessary, I couldn't find another line to delete and keep the compiler crashing.\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Data;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ClassLibrary1 {\r\n    public class Class1 {\r\n        static Class1 () {\r\n            using var conn = new Connection (\"\");\r\n\r\n            using (var cmd = new Command (\"\", conn)) {\r\n                X = Convert.ToInt32 (cmd.ExecuteScalar ());\r\n            }\r\n\r\n            new Thread (() => {\r\n                using var conn = new Connection (\"\");\r\n                while (true) {\r\n                    DebugRIDItem[] GetDebugRIDItems (string tableType) {\r\n                        using var dt = new DataTable ();\r\n                        var adapter = new Adapter (\"\", conn);\r\n                        return null;\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        public static int X { get; set; }\r\n    }\r\n\r\n    public class DebugRIDItem { }\r\n    public class CIOSSettings { public static bool IOSDebugLog { get; set; } }\r\n    public class Connection : IDisposable {\r\n        public Connection (string s) { }\r\n        public void Dispose () { }\r\n    }\r\n\r\n    public class Command : IDisposable {\r\n        public Command (string s, Connection c) { }\r\n        public object ExecuteScalar () => null;\r\n        public void Dispose () { }\r\n    }\r\n\r\n    public class Adapter : IDisposable {\r\n        public Adapter (string s, Connection c) { }\r\n        public void Dispose () { }\r\n    }\r\n\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/39566","RelatedDescription":"Open issue \"Compiler & VS crash repro\" (#39566)"},{"Id":"514004350","IsPullRequest":false,"CreatedAt":"2019-10-29T15:24:27","Actor":"OQO","Number":"39565","RawContent":null,"Title":"CreateDelegate throws exception on calling function with \"out var x\" (Regression in Microsoft.CodeAnalysis.CSharp.Scripting 3.3.1))","State":"open","Body":"**Version Used**: \r\nIssue can be reproduced with .net Core 2.2 or .net Core 3.0 (Not tested on older .net Core versions)\r\nwith Microsoft.CodeAnalysis.CSharp.Scripting 3.3.1 (Older versions of this package do work correctly)\r\n\r\n**Steps to Reproduce**:\r\nRun the following program:\r\n\r\n```C#\r\nusing Microsoft.CodeAnalysis.CSharp.Scripting;\r\nusing Microsoft.CodeAnalysis.Scripting;\r\nusing System;\r\n\r\nnamespace CSharpScripting\r\n{\r\n    public class HelpResult{ }\r\n    public class ExecutionContext\r\n    {\r\n        public bool TryGetFastHelp(out HelpResult helpResult)\r\n        {\r\n            helpResult = new HelpResult();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            ScriptOptions so = ScriptOptions.Default\r\n                .AddReferences(AppDomain.CurrentDomain.GetAssemblies())\r\n                .AddImports(new string[] {\r\n                    \"CSharpScripting\"\r\n              });\r\n\r\n            string code = @\"\r\n            if(TryGetFastHelp(out var result)){\r\n                Console.WriteLine(result);\r\n            }\r\n            return true;\r\n            \";\r\n\r\n            var script = CSharpScript.Create<bool>(code, globalsType: typeof(ExecutionContext), options: so);\r\n            var d = script.CreateDelegate();\r\n            d(new ExecutionContext()).Wait();\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n**Expected Behavior**:\r\nRuns without errors.\r\n\r\n**Actual Behavior**:\r\nThrows exception on line `var d = script.CreateDelegate()` with message: **only methods, properties, fields and events can take a receiver (Parameter 'symbol')**\r\n\r\nThis code works fine with versions of Microsoft.CodeAnalysis.CSharp.Scripting **prior** to 3.3.1\r\nThis has been reproduced with .net Core 2.2 and .net Core 3.0\r\n\r\nFor version 3.3.1 one can explicitly mention the type as a workaround and no exception will be thrown: replace `TryGetFastHelp(out var result)` with `TryGetFastHelp(out HelpResult result)` \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/39565","RelatedDescription":"Open issue \"CreateDelegate throws exception on calling function with \"out var x\" (Regression in Microsoft.CodeAnalysis.CSharp.Scripting 3.3.1))\" (#39565)"},{"Id":"513990226","IsPullRequest":false,"CreatedAt":"2019-10-29T15:05:58","Actor":"BillWagner","Number":"39564","RawContent":null,"Title":"Incorrect order of evaluation for tuple element expressions when the tuple is the operand of a switch expression","State":"open","Body":"@atifaziz commented on [Tue Oct 29 2019](https://github.com/dotnet/docs/issues/15496)\n\nI believe this belongs in the [**Switch expressions**](https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#switch-expressions) section, but also in [the tutorial](https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/pattern-matching).\r\n\r\nThere seems to be a subtle and historical change in how C# respects, or actually _no longer respects_, the _evaluation order_ when using pattern-matching in a switch-expression. This can bite people (as it bit me when refactoring code) in subtle ways if not documented and called out with a warning. At first I thought it was a bug, but then I think this subtle change is intended if I am reading the following [section](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-8.0/atterns#order-of-evaluation-in-pattern-matching) of the [C# 8 specification proposal on recursive pattern matching](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-8.0/patterns) right:\r\n\r\n> ### Order of evaluation in pattern-matching\r\n>\r\n> Giving the compiler flexibility in reordering the operations executed during pattern-matching can permit flexibility that can be used to improve the efficiency of pattern-matching. The (unenforced) requirement would be that properties accessed in a pattern, and the Deconstruct methods, are required to be \"pure\" (side-effect free, idempotent, etc). That doesn't mean that we would add purity as a language concept, only that we would allow the compiler flexibility in reordering operations.\r\n>\r\n> **Resolution 2018-04-04 LDM**: confirmed: the compiler is permitted to reorder calls to `Deconstruct`, property accesses, and invocations of methods in `ITuple`, and may assume that returned values are the same from multiple calls. The compiler should not invoke functions that cannot affect the result, and we will be very careful before making any changes to the compiler-generated order of evaluation in the future.\r\n\r\nTo demonstrate the problem in action, suppose the following code:\r\n\r\n```c#\r\nvar s = new[] { \"foo\", \"bar\" };\r\nvar i = 0;\r\nstring Foobar() => s[i++];\r\nvar foobar = (Foobar(), Foobar());\r\nvar r = foobar switch\r\n{\r\n    (\"foo\", \"bar\") =>  \"Yep, all good!\",\r\n    var (a, b)     => $\"Wait, what? I got ({a}, {b})!\"\r\n};\r\nConsole.WriteLine(r);\r\n```\r\n\r\nThe code prints the string from the first matching case, as one would expect:\r\n\r\n    Yep, all good!\r\n\r\nBut if one substitutes the `foobar` variable use directly with the right-hand expression of its variable declaration assignment, like so:\r\n\r\n```c#\r\nvar s = new[] { \"foo\", \"bar\" };\r\nvar i = 0;\r\nstring Foobar() => s[i++];\r\n// var foobar = (Foobar(), Foobar());\r\nvar r = /*foobar*/ (Foobar(), Foobar()) switch\r\n{\r\n    (\"foo\", \"bar\") =>  \"Yep, all good!\",\r\n    var (a, b)     => $\"Wait, what? I got ({a}, {b})!\"\r\n};\r\nConsole.WriteLine(r);\r\n```\r\n\r\nThe output instead changes to:\r\n\r\n    Wait, what? I got (bar, foo)!\r\n\r\nIt seems as if the compiler actually switches around the invocations of the local function `Foobar` and the side-effects manifest as a bug! I used the [ILSpy](http://www.ilspy.net/) decompiler to look at the compiled code and one can see what's effectively going on (comment added by me):\r\n\r\n```c#\r\nstring[] s = new string[2]\r\n{\r\n    \"foo\",\r\n    \"bar\"\r\n};\r\nint i = 0;\r\nstring b = Foobar(); // <------ b assigned before a!\r\nstring a = Foobar();\r\nstring text = (a == null || !(a == \"foo\") || b == null || !(b == \"bar\")) ? (\"Wait, what? I got (\" + a + \", \" + b + \")!\") : \"Yep, all good!\";\r\nstring text2 = text;\r\nstring r = text2;\r\nConsole.WriteLine(r);\r\nstring Foobar()\r\n{\r\n    return s[i++];\r\n}\r\n```\r\n\r\nIt's also worth noting that a `switch` statement works as expected by printing `\"Yep, all good!\"`:\r\n\r\n```c#\r\nvar s = new[] { \"foo\", \"bar\" };\r\nvar i = 0;\r\nstring Foobar() => s[i++];\r\nstring r;\r\nswitch (Foobar(), Foobar())\r\n{\r\n    case (\"foo\", \"bar\"): r =  \"Yep, all good!\"; break;\r\n    case var (a, b)    : r = $\"Wait, what? I got ({a}, {b})!\"; break;\r\n};\r\nConsole.WriteLine(r);\r\n```\r\n\r\nBut imagine someone innocently refactors the above into a switch-expression and now they have introduced a subtle bug in their application.\r\n\r\nThis change is important enough that it needs to be called out and the effects demonstrated. Today, it's hidden deep in specification proposal notes.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: a94537c5-754e-9dea-94a8-7573011f588c\r\n* Version Independent ID: aba09118-22c5-2c6a-954a-b9659a9644ae\r\n* Content: [What's new in C# 8.0 - C# Guide](https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#switch-expressions)\r\n* Content Source: [docs/csharp/whats-new/csharp-8.md](https://github.com/dotnet/docs/blob/master/docs/csharp/whats-new/csharp-8.md)\r\n* Product: **dotnet-csharp**\r\n* Technology: **csharp-whats-new**\r\n* GitHub Login: @BillWagner\r\n* Microsoft Alias: **wiwagn**\n\n---\n\n@atifaziz commented on [Tue Oct 29 2019](https://github.com/dotnet/docs/issues/15496#issuecomment-547363063)\n\nFollowing is a simpler version of the demo without needing a local function with side-effects. Any object from the BCL with impure methods will do:\r\n\r\n```c#\r\nusing var sr = new StringReader(\"foo\\nbar\");\r\nvar r = (sr.ReadLine(), sr.ReadLine()) switch\r\n{\r\n    (\"foo\", \"bar\") =>  \"Yep, all good!\",\r\n    var (a, b)     => $\"Wait, what? I got ({a}, {b})!\",\r\n};\r\nConsole.WriteLine(r); // prints: Wait, what? I got (bar, foo)!\r\n```\r\n\n\n---\n\n@BillWagner commented on [Tue Oct 29 2019](https://github.com/dotnet/docs/issues/15496#issuecomment-547436682)\n\nThanks for bringing this to our attention @atifaziz \r\n\r\nI'm adding a couple folks on the C# LDM to discuss how we should explain this behavior.\r\n\r\n/cc @gafter @MadsTorgersen \n\n---\n\n@gafter commented on [Tue Oct 29 2019](https://github.com/dotnet/docs/issues/15496#issuecomment-547459405)\n\nThis is a bug.  The tuple expression is required to evaluate its operands in order, and in this case the compiler does not do so.\n\n","Url":"https://github.com/dotnet/roslyn/issues/39564","RelatedDescription":"Open issue \"Incorrect order of evaluation for tuple element expressions when the tuple is the operand of a switch expression\" (#39564)"},{"Id":"513621013","IsPullRequest":true,"CreatedAt":"2019-10-29T00:04:04","Actor":"dotnet-bot","Number":"39563","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"open","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39563","RelatedDescription":"Open PR \"Merge master to features/static-lambdas\" (#39563)"},{"Id":"513620974","IsPullRequest":true,"CreatedAt":"2019-10-29T00:03:56","Actor":"dotnet-bot","Number":"39562","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39562","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#39562)"},{"Id":"513620437","IsPullRequest":true,"CreatedAt":"2019-10-29T00:02:10","Actor":"dotnet-bot","Number":"39560","RawContent":null,"Title":"Merge release/dev16.4 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39560","RelatedDescription":"Open PR \"Merge release/dev16.4 to master\" (#39560)"},{"Id":"513613403","IsPullRequest":false,"CreatedAt":"2019-10-28T23:36:37","Actor":"JohanLarsson","Number":"39559","RawContent":null,"Title":"To prevent an unsafe abort when evaulating the function","State":"open","Body":"![image](https://user-images.githubusercontent.com/1640096/67725841-0ac43000-f9e4-11e9-9668-4e07d9b64f7a.png)\r\n\r\nHave seen ^ somewhat frequently while debugging lately.","Url":"https://github.com/dotnet/roslyn/issues/39559","RelatedDescription":"Open issue \"To prevent an unsafe abort when evaulating the function\" (#39559)"},{"Id":"513474882","IsPullRequest":false,"CreatedAt":"2019-10-28T22:43:31","Actor":"vatsalyaagrawal","Number":"39553","RawContent":null,"Title":"RPS: Split RPS tests into smaller tests","State":"closed","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\n","Url":"https://github.com/dotnet/roslyn/issues/39553","RelatedDescription":"Closed issue \"RPS: Split RPS tests into smaller tests\" (#39553)"},{"Id":"513583118","IsPullRequest":false,"CreatedAt":"2019-10-28T22:05:32","Actor":"genlu","Number":"39558","RawContent":null,"Title":"SymbolTreeInfo is ignoring extension method from VB compiled PE reference","State":"open","Body":"Here's the code that builds SymbolTreeInfo for metadata:\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/FindSymbols/SymbolTree/SymbolTreeInfo_Metadata.cs,393\r\n\r\nThe problem is the IL for module contains extension methods in VB looks like this (i.e. sealed but not abstract):\r\n![image](https://user-images.githubusercontent.com/788783/67721576-1f78d780-f994-11e9-8efa-d5b5e6f81164.png)\r\n\r\nOne issue this causes is \"add using\" won't be able to fix a reference to extension method declared in such a metadata reference.\r\n","Url":"https://github.com/dotnet/roslyn/issues/39558","RelatedDescription":"Open issue \"SymbolTreeInfo is ignoring extension method from VB compiled PE reference\" (#39558)"},{"Id":"513567189","IsPullRequest":false,"CreatedAt":"2019-10-28T21:26:30","Actor":"tiesmaster","Number":"39557","RawContent":null,"Title":"Rename NewLinesForBracesInObjectCollectionArrayInitializers to NewLinesForBracesInExpressions","State":"open","Body":"Split off from #36913, [as mentioned by @sharwell](https://github.com/dotnet/roslyn/issues/36913#issuecomment-546015089):\r\n\r\n> Design review conclusion:\r\n>  * ~For fixing this issue (#39396), we should use NewLinesForBracesInObjectCollectionArrayInitializers.~ Done in #36913\r\n>  * We should rename NewLinesForBracesInObjectCollectionArrayInitializers to NewLinesForBracesInExpressions, and update the Tools → Options and .editorconfig strings to reflect this change. @tiesmaster has the option of implementing this in #39396, or we can implement it separately.\r\n>  * We should verify that pattern matching braces are also controlled by NewLinesForBracesInExpressions.\r\n","Url":"https://github.com/dotnet/roslyn/issues/39557","RelatedDescription":"Open issue \"Rename NewLinesForBracesInObjectCollectionArrayInitializers to NewLinesForBracesInExpressions\" (#39557)"},{"Id":"513561387","IsPullRequest":true,"CreatedAt":"2019-10-28T21:13:56","Actor":"KristianJakubik","Number":"39556","RawContent":null,"Title":"Fix conditional access operator for nullables","State":"open","Body":"Fixes: #39422","Url":"https://github.com/dotnet/roslyn/pull/39556","RelatedDescription":"Open PR \"Fix conditional access operator for nullables\" (#39556)"},{"Id":"513530287","IsPullRequest":false,"CreatedAt":"2019-10-28T20:10:35","Actor":"AlgorithmsAreCool","Number":"39555","RawContent":null,"Title":"Intellisense suggests Nullable<T> properties in property pattens","State":"open","Body":"**Version Used**: \r\nVisual Studio 2019 16.3.0\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n```\r\n**Steps to Reproduce**:\r\n\r\nInsert this code and trigger intellisense inside the inner braces\r\n\r\n```csharp\r\n public void M()\r\n        {\r\n            int? a = 0;\r\n            int b = a switch\r\n            {\r\n                {  }//trigger intellisense inside these braces\r\n            };\r\n        }\r\n```\r\n\r\n\r\n**Expected Behavior**:\r\n\r\nNot suggest `Nullable<T>` properties since the `{ }` expression implies non-nullity\r\n\r\n**Actual Behavior**:\r\n\r\n`Nullable<T>` properties `HasValue` and `Value` are suggested, but subsequently do not compile if used.\r\n\r\n![Screenshot_4](https://user-images.githubusercontent.com/10837869/67712677-72518f80-f992-11e9-81eb-c3f916517bc4.png)\r\n\r\n![image](https://user-images.githubusercontent.com/10837869/67713050-1804fe80-f993-11e9-9990-c8a449b344b1.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39555","RelatedDescription":"Open issue \"Intellisense suggests Nullable<T> properties in property pattens\" (#39555)"},{"Id":"513488563","IsPullRequest":true,"CreatedAt":"2019-10-28T18:43:48","Actor":"allisonchou","Number":"39554","RawContent":null,"Title":"Fix for split string literals broken with multi-carets","State":"open","Body":"Fixes #39040\r\n\r\nPreviously, string literals split with multi-carets were treated as non-string literals. With this fix, when all carets are within string literals, they will be split as string literals.\r\n\r\nIf the selections are a mix of non-string literals and string literals, they will all be handled as non-string literals.","Url":"https://github.com/dotnet/roslyn/pull/39554","RelatedDescription":"Open PR \"Fix for split string literals broken with multi-carets\" (#39554)"},{"Id":"513474614","IsPullRequest":false,"CreatedAt":"2019-10-28T18:16:43","Actor":"vatsalyaagrawal","Number":"39552","RawContent":null,"Title":"RPS: Move RPS tests to new infrastructure.","State":"open","Body":"1. Split RPS tests into smaller tests\r\n2. Move RPS to new infra\r\n","Url":"https://github.com/dotnet/roslyn/issues/39552","RelatedDescription":"Open issue \"RPS: Move RPS tests to new infrastructure.\" (#39552)"},{"Id":"513474206","IsPullRequest":false,"CreatedAt":"2019-10-28T18:15:56","Actor":"vatsalyaagrawal","Number":"39551","RawContent":null,"Title":"Factor out SCI/SRM insertions","State":"open","Body":"This would allow is for us to insert a new version of SCI / SRM without simultaneously forcing Roslyn to take a dependency on the version. Consider today that if we bump SCI from 1.4 to 1.6 we also immediately bump the version MS.CA depends on to 1.6 as well. This means all of our process, from OptProf to F5 in our repo, are broken until the insertion into Visual Studio complete, devenv.exe.config is updating and developers + OptProf update to the new build. That’s a lot of friction. \r\n\r\nIf we separated them out then we could bump SCI from 1.4 to 1.6 without changing the Roslyn dependency. It would be no different than VS updating the version of Netwonsoft.Josn. The change in version is irrelevant to us because by the time we see it devenv.exe.config will have the appropriate binding redirect. Once the insertion was well and done then we could have a simple change which updated the SCI version in Versions.props and it would work immediately in F5 and be dramatically lower friction when inserting into VS. \r\n","Url":"https://github.com/dotnet/roslyn/issues/39551","RelatedDescription":"Open issue \"Factor out SCI/SRM insertions\" (#39551)"},{"Id":"513470761","IsPullRequest":false,"CreatedAt":"2019-10-28T18:08:54","Actor":"vatsalyaagrawal","Number":"39550","RawContent":null,"Title":"OptProf upgrade: Create OptProf trimmed mappings","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\n","Url":"https://github.com/dotnet/roslyn/issues/39550","RelatedDescription":"Open issue \"OptProf upgrade: Create OptProf trimmed mappings\" (#39550)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"514311437","IsPullRequest":true,"CreatedAt":"2019-10-30T00:15:41","Actor":"Dotnet-GitSync-Bot","Number":"7851","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @AaronRobinsonMSFT @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr,corefx\" (#7851)"},{"Id":"514191229","IsPullRequest":true,"CreatedAt":"2019-10-30T00:06:55","Actor":"Dotnet-GitSync-Bot","Number":"7850","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @jkotas @stephentoub @elinor-fung @noahfalk","Url":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7850)"},{"Id":"513004068","IsPullRequest":true,"CreatedAt":"2019-10-28T18:00:32","Actor":"MichalStrehovsky","Number":"7848","RawContent":null,"Title":"Port changes from CoreCLR","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7848","RelatedDescription":"Closed or merged PR \"Port changes from CoreCLR\" (#7848)"},{"Id":"513365041","IsPullRequest":true,"CreatedAt":"2019-10-28T17:14:45","Actor":"filipnavara","Number":"7849","RawContent":null,"Title":"Fix building portable thread pool on Windows","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7849","RelatedDescription":"Closed or merged PR \"Fix building portable thread pool on Windows\" (#7849)"},{"Id":"512879532","IsPullRequest":true,"CreatedAt":"2019-10-27T04:20:21","Actor":"MichalStrehovsky","Number":"7846","RawContent":null,"Title":"Fix thread safety issue in StructMarshallingThunk","State":"closed","Body":"The marshalling code generators are not thread safe. We should not cache them.\r\n\r\nHopefully fixes #7829.","Url":"https://github.com/dotnet/corert/pull/7846","RelatedDescription":"Closed or merged PR \"Fix thread safety issue in StructMarshallingThunk\" (#7846)"},{"Id":"509508420","IsPullRequest":false,"CreatedAt":"2019-10-27T04:20:21","Actor":"jkotas","Number":"7829","RawContent":null,"Title":"Compilation crashes with System.IndexOutOfRangeException","State":"closed","Body":"```\r\n  Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n     at Internal.IL.Stubs.ILStubMethodIL.GetObject(Int32 token) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 550\r\n     at Internal.IL.ILStackHelper.ComputeMaxStack(MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\ILStackHelper.cs:line 290\r\n     at Internal.IL.Stubs.ILStubMethodIL.get_MaxStack() in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 527\r\n     at Internal.JitInterface.CorInfoImpl.Get_CORINFO_METHOD_INFO(MethodDesc method, MethodIL methodIL, CORINFO_METHOD_INFO* methodInfo) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 413\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 154\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```","Url":"https://github.com/dotnet/corert/issues/7829","RelatedDescription":"Closed issue \"Compilation crashes with System.IndexOutOfRangeException\" (#7829)"},{"Id":"512885160","IsPullRequest":true,"CreatedAt":"2019-10-26T22:46:14","Actor":"Dotnet-GitSync-Bot","Number":"7847","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @dotnet-maestro[bot]","Url":"https://github.com/dotnet/corert/pull/7847","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7847)"},{"Id":"512800635","IsPullRequest":true,"CreatedAt":"2019-10-26T17:45:27","Actor":"KodrAus","Number":"7843","RawContent":null,"Title":"Only set dependency package versions if they're empty","State":"closed","Body":"Hi! :wave:\r\n\r\nThis may not be a change you're interested in taking, but lately I've been playing with using local builds of various pieces of the .NET toolchain and have been having trouble finding a reasonable way to pull in my own build of `objwriter` based on a build of LLVM I've done previously.\r\n\r\nBy making these package versions conditionally set it becomes possible to specify them as environment variables when building `corert` without having to touch any of the other build scripts.","Url":"https://github.com/dotnet/corert/pull/7843","RelatedDescription":"Closed or merged PR \"Only set dependency package versions if they're empty\" (#7843)"},{"Id":"512839586","IsPullRequest":true,"CreatedAt":"2019-10-26T16:38:16","Actor":"Dotnet-GitSync-Bot","Number":"7845","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/7845","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7845)"},{"Id":"512828238","IsPullRequest":true,"CreatedAt":"2019-10-26T14:03:27","Actor":"Dotnet-GitSync-Bot","Number":"7844","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7844","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7844)"},{"Id":"512692626","IsPullRequest":true,"CreatedAt":"2019-10-26T12:10:19","Actor":"Dotnet-GitSync-Bot","Number":"7842","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @VSadov @stephentoub","Url":"https://github.com/dotnet/corert/pull/7842","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7842)"},{"Id":"512298382","IsPullRequest":true,"CreatedAt":"2019-10-25T06:32:29","Actor":"jkotas","Number":"7841","RawContent":null,"Title":"Port AllocateUninitializedArray changes","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7841","RelatedDescription":"Closed or merged PR \"Port AllocateUninitializedArray changes\" (#7841)"},{"Id":"512183999","IsPullRequest":true,"CreatedAt":"2019-10-24T22:42:39","Actor":"Dotnet-GitSync-Bot","Number":"7840","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @tannergooding @adamsitnik @VSadov","Url":"https://github.com/dotnet/corert/pull/7840","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7840)"},{"Id":"511641265","IsPullRequest":true,"CreatedAt":"2019-10-24T21:08:56","Actor":"Dotnet-GitSync-Bot","Number":"7839","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7839","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7839)"},{"Id":"511517701","IsPullRequest":true,"CreatedAt":"2019-10-23T23:09:44","Actor":"Dotnet-GitSync-Bot","Number":"7838","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @AaronRobinsonMSFT @marek-safar @tmds","Url":"https://github.com/dotnet/corert/pull/7838","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7838)"},{"Id":"510975732","IsPullRequest":true,"CreatedAt":"2019-10-23T16:07:26","Actor":"Dotnet-GitSync-Bot","Number":"7837","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7837)"},{"Id":"510948047","IsPullRequest":true,"CreatedAt":"2019-10-22T22:07:19","Actor":"Dotnet-GitSync-Bot","Number":"7836","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7836)"},{"Id":"510804057","IsPullRequest":true,"CreatedAt":"2019-10-22T18:41:16","Actor":"Dotnet-GitSync-Bot","Number":"7834","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik @jkotas @filipnavara @tannergooding","Url":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7834)"},{"Id":"510815389","IsPullRequest":false,"CreatedAt":"2019-10-22T17:57:39","Actor":"tiandian","Number":"7835","RawContent":null,"Title":"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?","State":"open","Body":"For my asp.net core c# project, it's a bit complicated, and it references some third party dlls, after spend some time, i fixing some problems, now it can build with corert, but when run, it will error.\r\n\r\nI don't know how many potential problems in my project are incompatible with corert.\r\n\r\nSo if you can provide a tool to scan my c# project, and list all codes that incompatible with corert, then i can modify all these codes before release it, otherwise, even if it can run now, there will still be potential errors.\r\n\r\nIf after fix all my c# project's incompatible problem, it still run error, then i know it must be some third party dlls are incompatible with corert, then i can disassembly the dll one by one to c# codes and scan it to find which one incompatible with corert, then submit a request to the dll's owner to compatible with corert. \r\n\r\nThanks.","Url":"https://github.com/dotnet/corert/issues/7835","RelatedDescription":"Open issue \"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?\" (#7835)"},{"Id":"509929616","IsPullRequest":false,"CreatedAt":"2019-10-22T05:20:51","Actor":"DardoTheMaster","Number":"7832","RawContent":null,"Title":"Unable to compile on Ubuntu 18.04 (WSL)","State":"closed","Body":"Hello, i'm just trying out to build a shared library from a dotnet project.\r\nUnfortunately i'm getting this error and i'm unable to build the underlined project.\r\n\r\n```\r\n$ dotnet publish /p:NativeLib=Shared -r linux-x64\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  Restore completed in 63.25 ms for /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj.\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  NativeLibrary -> /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/bin/Debug/netcoreapp3.0/linux-x64/NativeLibrary.dll\r\n  /usr/bin/clang-6.0\r\n  Generating native code\r\nclang : warning : argument unused during compilation: '-exported_symbols_list obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports' [-Wunused-command-line-argument] [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o: relocation R_X86_64_PC32 against symbol `System_Console_System_Text_StringOrCharArray____GetFieldHelper' can not be used when making a shared object; recompile with -fPIC\r\n  /usr/bin/ld: final link failed: Bad value\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n/home/dardo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-6.0 \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o\" -o \"bin/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.so\" -exported_symbols_list \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports\" /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libbootstrapperdll.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libRuntime.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.CoreLib.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.TypeLoader.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Globalization.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.IO.Compression.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Net.Security.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -shared\" exited with code 1. [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\ndardo@LAPTOP-TQ8D057I:/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary$\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7832","RelatedDescription":"Closed issue \"Unable to compile on Ubuntu 18.04 (WSL)\" (#7832)"},{"Id":"510326059","IsPullRequest":true,"CreatedAt":"2019-10-22T02:26:35","Actor":"Dotnet-GitSync-Bot","Number":"7833","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @eriawan @danmosemsft @AaronRobinsonMSFT @stephentoub @GrabYourPitchforks @delmyers @benaadams @tannergooding","Url":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7833)"},{"Id":"509511071","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:45","Actor":"MichalStrehovsky","Number":"7830","RawContent":null,"Title":"Add AppContext switch to not throw for Type.Name","State":"closed","Body":"Makes simple WinForms apps work in reflection-free mode without crashing.\r\n\r\nhttps://github.com/dotnet/winforms/blob/5df2ebfe70f2eaa2733c7f21e7e9e20f0be7e766/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L4013","Url":"https://github.com/dotnet/corert/pull/7830","RelatedDescription":"Closed or merged PR \"Add AppContext switch to not throw for Type.Name\" (#7830)"},{"Id":"509511141","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:12","Actor":"MichalStrehovsky","Number":"7831","RawContent":null,"Title":"Scan for Marshal.SizeOf in reflection-disabled mode","State":"closed","Body":"I tacked scanning for `Marshal.SizeOf(typeof(SomeType))` on the reflection method body scanner. It felt a bit dirty, but it worked and we no longer had to worry about not having interop marshalling data for these types at runtime if we saw the pattern at compile time.\r\n\r\nBut we would like to scan for this even in the reflection disabled mode, which makes this whole business a bit messier.\r\n\r\nWe'll probably want to plug this into the RyuJIT scanner at some point, but we'll need to think about scanning some more (whether scanning is just an optimization, or whether scanning is needed for correctness, how/whether would RyuJIT report parameters, etc.).","Url":"https://github.com/dotnet/corert/pull/7831","RelatedDescription":"Closed or merged PR \"Scan for Marshal.SizeOf in reflection-disabled mode\" (#7831)"},{"Id":"509445042","IsPullRequest":true,"CreatedAt":"2019-10-20T02:03:38","Actor":"filipnavara","Number":"7828","RawContent":null,"Title":"Move portable thread pool to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7828","RelatedDescription":"Closed or merged PR \"Move portable thread pool to shared partition\" (#7828)"},{"Id":"508346108","IsPullRequest":true,"CreatedAt":"2019-10-17T18:57:35","Actor":"filipnavara","Number":"7825","RawContent":null,"Title":"Clean up portable thread pool for nullability and comment warnings","State":"closed","Body":"Also, use `EventWaitHandle.Set` instead of `WaitSubsystem.SetEvent`/`Interop.Kernel32.SetEvent` to make it easier to port.","Url":"https://github.com/dotnet/corert/pull/7825","RelatedDescription":"Closed or merged PR \"Clean up portable thread pool for nullability and comment warnings\" (#7825)"},{"Id":"508509256","IsPullRequest":false,"CreatedAt":"2019-10-17T14:18:24","Actor":"Const-me","Number":"7827","RawContent":null,"Title":"ARM32 Debug Info","State":"open","Body":"Unless ILC debug output is disabled in .csproj, CoreRT’s ilc program fails to compile stuff.\r\n\r\n[This assert fails.](https://github.com/dotnet/corert/blob/master/src/Native/ObjWriter/debugInfo/dwarf/dwarfGen.cpp#L436)\r\n\r\nI’ve added a bit more info and found out it’s VLT_FPSTK.\r\n\r\nUsing Debian 9.5, tried dotnet-sdk-2.1.802 and dotnet-sdk-2.2.402, same result.\r\n\r\nSteps to reproduce:\r\n\r\n`dotnet new console`\r\n\r\nPatch project file as [described there](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built) and also add `<DisableUnsupportedError>true</DisableUnsupportedError>`\r\n\r\nRun `dotnet publish --configuration Release --runtime linux-arm`\r\n\r\nNative stack at the time of failed assert. Stops at first managed frame ‘coz gdb can’t debug .NET, at least not by default.\r\n\r\n```\r\n#6  0xa352510c in EmitVarLocation(llvm::MCObjectStreamer*, ICorDebugInfo::NativeVarInfo const&, bool)\r\n#7  0xa3525ab2 in VarInfo::DumpLocsIfNeeded(llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCExpr const*)\r\n#8  0xa35260be in SubprogramInfo::DumpDebugLoc(llvm::MCObjectStreamer*, llvm::MCSection*)\r\n#9  0xa3525e3c in SubprogramInfo::Dump(UserDefinedDwarfTypesBuilder*, llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCSection*, llvm::MCSection*)\r\n#10 0xa3526b36 in DwarfGen::Finish()\r\n#11 0xa3501804 in ObjectWriter::EmitDebugModuleInfo()\r\n#12 0xa34fd5f0 in EmitDebugModuleInfo\r\ngdb can’t debug .net so the stack trace stops there.\r\n#13 0xa7bbe1ac in ?? ()\r\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\r\n```\r\n\r\nStrangely enough, comments in ObjectWriter.EmitObject method, there\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1044\r\nand a few other things\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1094-L1095\r\nsuggest that code was running on ARM32 at some point.\r\n\r\nIs something wrong on my side? If it’s just not supported, how easy it is to support?","Url":"https://github.com/dotnet/corert/issues/7827","RelatedDescription":"Open issue \"ARM32 Debug Info\" (#7827)"},{"Id":"508505637","IsPullRequest":false,"CreatedAt":"2019-10-17T14:13:06","Actor":"Const-me","Number":"7826","RawContent":null,"Title":"ARM32 crash at startup due to misalignment","State":"open","Body":"Here’s output from gdb:\r\n```\r\nThread 1 \"MyApp\" received signal SIGBUS, Bus error.\r\nRhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n47                cmp          r6, r4\r\n(gdb) bt\r\n#0  RhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n#1  0x0049c5ee in S_P_CoreLib_System_IO_UnmanagedMemoryStream__get_PositionPointer ()\r\n```\r\ngdb probably has off by 1 bug, I think it’s the [previous instruction](https://github.com/dotnet/corert/blob/master/src/Native/Runtime/arm/Interlocked.S#L46) which crashed the app.\r\n\r\nThe failing line of C# code is probably this https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/IO/UnmanagedMemoryStream.cs#L329 but I’m not 100% sure, as there’s no debug information in the binary due to another CoreRT ARM32 bug.\r\n\r\nI wasn’t able to make minimal repro, when I wrote a class with a long field, Interlocked.Read(ref long) returned the value without crashing. Probably clang optimizes away.\r\n\r\nAny idea how to fix or workaround?","Url":"https://github.com/dotnet/corert/issues/7826","RelatedDescription":"Open issue \"ARM32 crash at startup due to misalignment\" (#7826)"},{"Id":"506685516","IsPullRequest":false,"CreatedAt":"2019-10-14T20:24:48","Actor":"imback82","Number":"7824","RawContent":null,"Title":"Debugger.Launch() on macOS","State":"closed","Body":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Closed issue \"Debugger.Launch() on macOS\" (#7824)"},{"Id":"506047436","IsPullRequest":true,"CreatedAt":"2019-10-12T15:06:11","Actor":"Dotnet-GitSync-Bot","Number":"7823","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7823)"},{"Id":"505621245","IsPullRequest":true,"CreatedAt":"2019-10-11T08:45:30","Actor":"Dotnet-GitSync-Bot","Number":"7822","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7822)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"514354123","IsPullRequest":true,"CreatedAt":"2019-10-30T04:15:58","Actor":"dotnet-maestro[bot]","Number":"3822","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.2\r\n- **Date Produced**: 10/30/2019 1:05 AM\r\n- **Commit**: c85c3ca6c392c62fc0a14d903d7927edc6fe5bf9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.2\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3822","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3822)"},{"Id":"514310953","IsPullRequest":true,"CreatedAt":"2019-10-30T00:14:19","Actor":"dotnet-maestro-bot","Number":"3821","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'master'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @nguerrera\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3821","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3821)"},{"Id":"513870552","IsPullRequest":true,"CreatedAt":"2019-10-30T00:08:34","Actor":"dotnet-bot","Number":"3819","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3819","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3819)"},{"Id":"514101309","IsPullRequest":true,"CreatedAt":"2019-10-29T19:30:37","Actor":"sfoslund","Number":"3820","RawContent":null,"Title":"Override MSBuild run target in SDK","State":"closed","Body":"Override MSBuild run target in SDK so behavior mirrors ``dotnet run``. Addressing #2283.","Url":"https://github.com/dotnet/sdk/pull/3820","RelatedDescription":"Closed or merged PR \"Override MSBuild run target in SDK\" (#3820)"},{"Id":"513869207","IsPullRequest":true,"CreatedAt":"2019-10-29T18:55:22","Actor":"dotnet-maestro[bot]","Number":"3818","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/28/2019 11:43 PM\r\n- **Commit**: 96e8fc12aa98264c4e1980252e962b908eaae956\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19528.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3818","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3818)"},{"Id":"513514869","IsPullRequest":false,"CreatedAt":"2019-10-29T17:43:06","Actor":"kmjungersen","Number":"3811","RawContent":null,"Title":"`$ dotnet run` won't serve https with .Net Core 3.0 on OS X","State":"closed","Body":"## Symptoms:\r\nI have a .Net Core 3.0 app that I'm unable to load in a browser **ONLY when running it using the Mac OS X CLI**, like so:\r\n\r\n```\r\n$ dotnet new webapp\r\n$ dotnet run\r\nwatch : Started\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using '/Users/<user>/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Now listening on: https://localhost:5001\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Now listening on: http://localhost:5000\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Application started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Hosting environment: Development\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Content root path: /Users/<user>/Sandbox/coreapp3test\r\n```\r\n\r\nSo everything looks good at this point, except when opening the URL in a browser I receive:\r\n\r\n```\r\nThis site cannot be reached\r\n\r\nlocalhost unexpectedly closed the connection.\r\n```\r\n## Core Issue:\r\n\r\nThis has something to do with HTTPS protocol.  Navigating to `http://localhost:5000` does render an https redirect.  So the server is actually listening...\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.Hosting.Diagnostics[1]\r\n      Request starting HTTP/1.1 GET http://localhost:5000/\r\ninfo: Microsoft.AspNetCore.Hosting.Diagnostics[2]\r\n      Request finished in 9.6705ms 307\r\n```\r\n\r\n**Furthermore,** removing the `app.UseHttpsRedirection();` from the `Configure` method of `startup.cs` and then navigating to `http://localhost:5000` renders the page correctly, while `https://localhost:5001` still fails\r\n\r\n## Notes:\r\n\r\n* **I can run the app in VS Code**, so the runtime must be installed correctly\r\n* **.NET Core 2.2 apps work fine with the CLI** - I can run them from the CLI without issue. So it appears isolated to 3.0\r\n* **The Windows CLI appears to work without issue**\r\n* I've also tried the following, without success:\r\n  * Removing `bin/` and `obj/` and restoring / building again\r\n  * Re-installing the SDK - same result\r\n  * Disabling firewall (in case that was blocking the connection)\r\n  * Generating multiple web project types (e.g. angular, mvc, etc.) to see if it was related to the template\r\n\r\n\r\n\r\n## System Info:\r\n\r\n```\r\n$ dotnet --info\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/3811","RelatedDescription":"Closed issue \"`$ dotnet run` won't serve https with .Net Core 3.0 on OS X\" (#3811)"},{"Id":"513746824","IsPullRequest":false,"CreatedAt":"2019-10-29T17:34:57","Actor":"jtillman","Number":"3816","RawContent":null,"Title":"Manage and Build multiple projects without Visual Studio File (SLN)","State":"closed","Body":"I propose that we provide a builtin way to run dotnet cli commands on multiple projects without having to share Visual Studio (Sln) files across users.\r\n\r\nIssues: The solution file (.sln) is controlled and managed by Visual Studio IDE. It's format isn't DRY and editable by hand. All users do not use or desire to use Visual Studio to develop dotnet applications. You currently have to use the dotnet cli to update it. \r\n\r\nProposals:\r\n- `dotnet cli` commands which take solution files. `dotnet pack **/*.csproj'\r\n- Add `dotnet projects` command which internally creates a solution file on the fly to execute the desired commands in the background. \r\nThis would be a convention-based command which discovers all .csproj in the directory recursively. This is my favorite because it has automatic project discovery just like new SDK projects discover all `.cs` files.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3816","RelatedDescription":"Closed issue \"Manage and Build multiple projects without Visual Studio File (SLN)\" (#3816)"},{"Id":"513627219","IsPullRequest":true,"CreatedAt":"2019-10-29T16:08:19","Actor":"nguerrera","Number":"3813","RawContent":null,"Title":"Reduce nuget feeds","State":"closed","Body":"We have too many nuget feeds and in some cases this can drastically slow things down.\r\n\r\nAlso, the nuget.config for the tests is being deployed via tools to core-sdk where for some reason, we seem to be even more sensitive to the number of feeds.","Url":"https://github.com/dotnet/sdk/pull/3813","RelatedDescription":"Closed or merged PR \"Reduce nuget feeds\" (#3813)"},{"Id":"513789039","IsPullRequest":false,"CreatedAt":"2019-10-29T09:22:41","Actor":"xthsr","Number":"3817","RawContent":null,"Title":"dotnet tool update - error: Sequence contains more than one matching element","State":"open","Body":"Trying to run:\r\ndotnet tool update --global <name of internal Nuget hosted in Azure DevOps artifacts>\r\n\r\nWorks perfectly running locally, but when run on our build servers (self hosted pool) in Azure DevOps, we sometimes get this error:\r\n```\r\nSequence contains more than one matching element\r\nat System.Linq.ThrowHelper.ThrowMoreThanOneMatchException()\r\nat System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\nat Microsoft.DotNet.ToolPackage.ToolPackageInstance.FindLibraryInLockFile(LockFile lockFile, PackageId id)\r\n```\r\n\r\nSame error when using:\r\ndotnet tool install\r\n\r\nAny idea what is causing this exception? - can't debug and the error message is really not that helpful.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3817","RelatedDescription":"Open issue \"dotnet tool update - error: Sequence contains more than one matching element\" (#3817)"},{"Id":"513670311","IsPullRequest":false,"CreatedAt":"2019-10-29T03:24:26","Actor":"skanvk15","Number":"3815","RawContent":null,"Title":"Creating new xunit project from command line fails","State":"open","Body":"Creating a new xunit project using dotnet command line fails:\r\n\r\nReport steps from command line:\r\n\r\n```\r\nPS D:\\temp> dotnet new xunit\r\nCouldn't find an installed template that matches the input, searching online for one that does...\r\nMatches from template source: NuGet\r\n-----------------------------------\r\nTemplate name \"xUnit Test Class\" (xunit-class) from author \"The Sharp Ninja\" in pack GatewayProgrammingSchool.xUnit.CSharp\r\n    To use this template, run the following command and try again:\r\n        dotnet new -i GatewayProgrammingSchool.xUnit.CSharp::1.0.2\r\n```\r\n\r\nI have the following dotnet version installed\r\n3.1.100-preview1-014459","Url":"https://github.com/dotnet/sdk/issues/3815","RelatedDescription":"Open issue \"Creating new xunit project from command line fails\" (#3815)"},{"Id":"512849260","IsPullRequest":false,"CreatedAt":"2019-10-29T00:42:01","Actor":"deadshot465","Number":"3802","RawContent":null,"Title":"Self-contained single executable doesn't seem to work with class library project references.","State":"closed","Body":"I'm currently working on a personal project where I have to add another project, made by other authors and downloaded and stored in another disk, to my solution, then add it into the references of my own project. The reference project is a class library targeting .Net Standard 2.1 while my project is a Windows application.\r\n\r\nI set the following properties in the .csproj file:\r\n```\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <LangVersion>8.0</LangVersion>\r\n    <PublishReadyToRun>false</PublishReadyToRun>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n    <PublishTrimmed>false</PublishTrimmed>\r\n  </PropertyGroup>\r\n```\r\nAnd run `dotnet publish -r win-x64 -c Release`\r\n\r\nIn the publish folder, I did get a single executable file with a .pdb file, but when I double clicked the executable, nothing happened. In the taskmgr, I could see that my application actually got started, but still, no window and no error were shown. After about 30 seconds to 1 minute, my application would disappear from the taskmgr, possibly due to being closed automatically.\r\n\r\nI tried to compile a simple Hello World program with the same settings in a different solution, in which there is only one project, the compiled single executable will work without any problem.\r\n\r\nIs it a bug or is there any additional setting that has to be configured in order to make it work?","Url":"https://github.com/dotnet/sdk/issues/3802","RelatedDescription":"Closed issue \"Self-contained single executable doesn't seem to work with class library project references.\" (#3802)"},{"Id":"513625817","IsPullRequest":true,"CreatedAt":"2019-10-29T00:20:54","Actor":"swaroop-sridhar","Number":"3812","RawContent":null,"Title":"Generate RID graph in self-contained builds","State":"open","Body":"In order to support loading components (plugins) with RID-specific assets, the `AssemblyDependencyResolver` requires the RID fallback graph.\r\n\r\nThe component itself should not carry the RID fallback graph with it (it would need to have the graph of all the RIDs there are and it would need to be updated with every addition).\r\n\r\nFor framework dependent apps, the RID fallback graph comes from the core framework Microsoft.NETCore.App, so there is no need to write it into the app.\r\n\r\nIf self-contained apps, the (applicable subset of) RID fallback graph needs to be written to the deps.json manifest.\r\n\r\nFixes #3361","Url":"https://github.com/dotnet/sdk/pull/3812","RelatedDescription":"Open PR \"Generate RID graph in self-contained builds\" (#3812)"},{"Id":"512989389","IsPullRequest":true,"CreatedAt":"2019-10-28T19:50:17","Actor":"wli3","Number":"3807","RawContent":null,"Title":"Revert node reuse","State":"closed","Body":"Disabling it does make Helix perf leg work. Now testing how much perf hit we get\r\nhttps://dev.azure.com/dnceng/internal/_build/results?buildId=402589","Url":"https://github.com/dotnet/sdk/pull/3807","RelatedDescription":"Closed or merged PR \"Revert node reuse\" (#3807)"},{"Id":"512980879","IsPullRequest":false,"CreatedAt":"2019-10-28T17:29:49","Actor":"bigworld12","Number":"3806","RawContent":null,"Title":"error when using dotnet tool install","State":"closed","Body":"I get this error when running `dotnet tool install -g dotnet-ef`\r\ndotnet version : 3.1.100-preview1-014459\r\n```\r\nFailed to install tool package 'dotnet-ef': Could not find a part of the path 'C:\\Users\\UserName\\.dotnet\\tools\\.store\\.stage\\32ksqkap.ndq\\dotnet-ef'.\r\nTool 'dotnet-ef' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n```\r\nNote : this works perfectly in 3.0.100","Url":"https://github.com/dotnet/sdk/issues/3806","RelatedDescription":"Closed issue \"error when using dotnet tool install\" (#3806)"},{"Id":"513412032","IsPullRequest":true,"CreatedAt":"2019-10-28T17:28:15","Actor":"sfoslund","Number":"3810","RawContent":null,"Title":"Defining InternalsVisibleTo attribute in proj files","State":"closed","Body":"Adding tests and target to allow defining the InternalsVisibleTo attribute in .proj files. Addressing #3299.","Url":"https://github.com/dotnet/sdk/pull/3810","RelatedDescription":"Closed or merged PR \"Defining InternalsVisibleTo attribute in proj files\" (#3810)"},{"Id":"513332273","IsPullRequest":false,"CreatedAt":"2019-10-28T14:16:02","Actor":"xavierdecoster","Number":"3809","RawContent":null,"Title":"Support command forwarding for dotnet list package --vulnerable","State":"open","Body":"Tracking issue for adding support for `dotnet list package --vulnerable` to the CLI (to be forwarded to NuGet xplat CLI commands).\r\n\r\n[NuGet CLI spec](https://github.com/NuGet/Home/wiki/dotnet-list-package---vulnerable)","Url":"https://github.com/dotnet/sdk/issues/3809","RelatedDescription":"Open issue \"Support command forwarding for dotnet list package --vulnerable\" (#3809)"},{"Id":"512956752","IsPullRequest":true,"CreatedAt":"2019-10-28T13:41:37","Actor":"dotnet-maestro[bot]","Number":"3805","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191027.3\r\n- **Date Produced**: 10/27/2019 7:01 PM\r\n- **Commit**: 5ce0aaed2f8df9cd2fe0221a426c021efe37f655\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19527.3\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19527.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3805","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3805)"},{"Id":"512997013","IsPullRequest":false,"CreatedAt":"2019-10-27T17:36:39","Actor":"wli3","Number":"3808","RawContent":null,"Title":"dotnet tools discovery","State":"open","Body":"A CLI experience to search dotnet tools","Url":"https://github.com/dotnet/sdk/issues/3808","RelatedDescription":"Open issue \"dotnet tools discovery\" (#3808)"},{"Id":"512705234","IsPullRequest":true,"CreatedAt":"2019-10-27T16:21:09","Actor":"wli3","Number":"3794","RawContent":null,"Title":"Node reuse salt fix","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3794","RelatedDescription":"Closed or merged PR \"Node reuse salt fix\" (#3794)"},{"Id":"512937055","IsPullRequest":false,"CreatedAt":"2019-10-27T08:34:33","Actor":"JohanLarsson","Number":"3804","RawContent":null,"Title":"Format release notes when running dotnet pack","State":"open","Body":"```xml\r\n<PropertyGroup>\r\n  <PackageReleaseNotes>\r\n    FEATURE: ...\r\n    FEATURE: ...\r\n    BREAKING: ...\r\n  </PackageReleaseNotes>\r\n</PropertyGroup>\r\n```\r\n\r\nWhen formatting the csproj (ctrl + k + d) release notes ends up like ^ which is reasonable.\r\nWhen running `dotnet pack` the release notes are poorly formatted in the .nupkg","Url":"https://github.com/dotnet/sdk/issues/3804","RelatedDescription":"Open issue \"Format release notes when running dotnet pack\" (#3804)"},{"Id":"512898078","IsPullRequest":false,"CreatedAt":"2019-10-26T23:27:38","Actor":"GregAlexJames","Number":"3803","RawContent":null,"Title":"Having .net core WPF project in Solution prevents Nuget Restore on Linux / macOS","State":"open","Body":"By design, you do not want .net core WPF and WinForms projects building on platforms other than windows (as per @livarcocc  on https://github.com/dotnet/sdk/issues/3592 ). When you do so it presents the following error: \r\n\r\n/usr/local/share/dotnet/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(59,5): error NETSDK1100: Windows is required to build Windows desktop applications\r\n\r\nWhich is fine. The problem is that if a solution simply contains a .net core WPF project, that solution will no longer be able to complete a \"dotnet restore\" on the solution, even if you intend to build other projects (eg a dotnet core console application on macOS). This prevents the ability to build other projects within the solution because you can not get the nuget packages. This also breaks the developers experience on the other platforms (with Visual Studio for Mac no longer able to restore packages easily).\r\n\r\n**Can the way you block WPF builds on linux / macOS be changed so not to break dotnet restore on the solution?**\r\n\r\nReproduction Steps: \r\nBe on MacOS\r\nCreate a new solution\r\nInside solution add new wpf core project using \"dotnet new wpf\"\r\nInside solution add new .net core console application\r\n\r\nWith the above steps you can no longer build the console application on macOS due to NETSDK1100 as the solution nuget restore fails.\r\n\r\nThe only workaround is to (a) use the command line to do a dotnet restore on the console application project itself. This doesnt help if you have multiple other projects though each requiring this to occur (or made more difficult if you have also a Xamarin.Mac project that does not use dotnet core). Another workaround is (b) separate solutions, but this will hinder development if they share common code.\r\n\r\n(using dotnet core 3.0.100)\r\n\r\n\r\n\r\nContext: We have multiple common code .net standard projects with multiple front end projects for platforms like Windows, macOS, iOS, Android etc. They all load under the single solution allowing to easily complete refactors / minor code changes on other platforms if you need to do a breaking change in common code, and multiple build configurations for building specific clients.\r\n\r\nI am now forced to have two solutions, one for building on linux / macOS, and one for windows. This means that anyone developing on linux / macOS are now more likely to miss required changes for WPF. This has only become an issue since updating from .net framework to .net core.","Url":"https://github.com/dotnet/sdk/issues/3803","RelatedDescription":"Open issue \"Having .net core WPF project in Solution prevents Nuget Restore on Linux / macOS\" (#3803)"},{"Id":"512815857","IsPullRequest":false,"CreatedAt":"2019-10-26T11:13:30","Actor":"shoooe","Number":"3801","RawContent":null,"Title":"Unable to install dotnet-ef on macOS with .NET Core 3.0.100 SDK","State":"closed","Body":"I've followed [the documentation](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos) and removed all my runtime and sdks with:\r\n\r\n```\r\nsudo rm -r /usr/local/share/dotnet/sdk/2.1.500\r\nsudo rm -r /usr/local/share/dotnet/sdk/2.2.101\r\nsudo rm -r /usr/local/share/dotnet/sdk/3.0.100-preview-010184\r\nsudo rm -r /usr/local/share/dotnet/sdk/3.0.100-preview6-012264\r\nsudo rm -r /usr/local/share/dotnet/sdk/3.0.100\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.AspNetCore.All/2.1.6\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.AspNetCore.All/2.2.0\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.AspNetCore.App/2.1.6\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.AspNetCore.App/2.2.0\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.AspNetCore.App/3.0.0-preview-19075-0444\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.AspNetCore.App/3.0.0-preview6.19307.2\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.AspNetCore.App/3.0.0\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.6\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.0\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0-preview-27324-5\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0-preview6-27804-01\r\nsudo rm -r /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0\r\nsudo rm -r /usr/local/share/dotnet/host/fxr/2.1.6\r\nsudo rm -r /usr/local/share/dotnet/host/fxr/2.2.0\r\nsudo rm -r /usr/local/share/dotnet/host/fxr/3.0.0\r\nsudo rm -r /usr/local/share/dotnet/host/fxr/3.0.0-preview-27324-5\r\nsudo rm -r /usr/local/share/dotnet/host/fxr/3.0.0-preview6-27804-01\r\n```\r\n\r\nThen I've installed SDK 3.0.100 (the default currently available) and now I've got:\r\n\r\n```\r\n$ dotnet --list-sdks\r\n3.0.100 [/usr/local/share/dotnet/sdk]\r\n$ dotnet --list-runtimes\r\nMicrosoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\nWith this setup if I run:\r\n\r\n```\r\n$ dotnet tool install --global dotnet-ef\r\n```\r\n\r\nI get:\r\n\r\n```\r\ndyld: lazy symbol binding failed: Symbol not found: _utimensat\r\n  Referenced from: /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Native.dylib\r\n  Expected in: /usr/lib/libSystem.B.dylib\r\ndyld: Symbol not found: _utimensat\r\n  Referenced from: /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Native.dylib\r\n  Expected in: /usr/lib/libSystem.B.dylib\r\nThe tool package could not be restored.\r\nTool 'dotnet-ef' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n```\r\n\r\nI'm on macOS Sierra 10.12.6.\r\n\r\nWhat can I do to install `dotnet-ef` properly?","Url":"https://github.com/dotnet/sdk/issues/3801","RelatedDescription":"Closed issue \"Unable to install dotnet-ef on macOS with .NET Core 3.0.100 SDK\" (#3801)"},{"Id":"512814295","IsPullRequest":false,"CreatedAt":"2019-10-26T09:33:10","Actor":"lantrix","Number":"3800","RawContent":null,"Title":"dotnet-install SDK scripts on Alpine 3.8 Powershell image \"Architecture not supported\" ","State":"open","Body":"## Steps to reproduce\r\n\r\n```bash\r\n$ docker run -it mcr.microsoft.com/powershell:6.2.3-alpine-3.8\r\nPowerShell 6.2.3\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPS /> [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\r\nPS /> &([scriptblock]::Create((Invoke-WebRequest -UseBasicParsing 'https://dot.net/v1/dotnet-install.ps1'))) -Channel LTS\r\nArchitecture not supported. If you think this is a bug, report it at https://github.com/dotnet/cli/issues\r\nAt line:169 char:19\r\n+ CategoryInfo          : OperationStopped: (Architecture not su\\u2026m/dotnet/cli/issues:String) [], RuntimeException\r\n+ FullyQualifiedErrorId : Architecture not supported. If you think this is a bug, report it at https://github.com/dotnet/cli/issues\r\n\r\nPS />\r\n```\r\n\r\n## Expected behavior\r\n\r\nI can use the official [dotnet-install script](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script) to install dotnet SDK LTS in the official powershell6 alpine container.\r\n\r\nThe [Prerequisites for .NET Core on Linux](https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore21#supported-linux-versions) lists Alpine 3.7+ as supported for .NET core 2.1.\r\n\r\n## Actual behavior\r\n\r\n`Architecture not supported.`\r\n\r\n## Environment data\r\n\r\nDocker image tag `6.2.3-alpine-3.8` or `alpine-3.8` for the official [PowerShell Docker image](https://hub.docker.com/_/microsoft-powershell).\r\n\r\n```Powershell\r\nPS /> cat /etc/os-release\r\nNAME=\"Alpine Linux\"\r\nID=alpine\r\nVERSION_ID=3.8.4\r\nPRETTY_NAME=\"Alpine Linux v3.8\"\r\nHOME_URL=\"http://alpinelinux.org\"\r\nBUG_REPORT_URL=\"http://bugs.alpinelinux.org\"\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3800","RelatedDescription":"Open issue \"dotnet-install SDK scripts on Alpine 3.8 Powershell image \"Architecture not supported\" \" (#3800)"},{"Id":"512759645","IsPullRequest":true,"CreatedAt":"2019-10-26T02:39:42","Actor":"wtgodbe","Number":"3798","RawContent":null,"Title":"Revert \"[release/3.1.1xx] Update dependencies from dotnet/arcade\"","State":"closed","Body":"The package icon aspect of the Arcade update broke CLI/Toolset: https://dev.azure.com/dnceng/public/_build/results?buildId=402816, https://dev.azure.com/dnceng/public/_build/results?buildId=402815. Reverting this so we can get a 3.1-preview2 build over the weekend.","Url":"https://github.com/dotnet/sdk/pull/3798","RelatedDescription":"Closed or merged PR \"Revert \"[release/3.1.1xx] Update dependencies from dotnet/arcade\"\" (#3798)"},{"Id":"512759918","IsPullRequest":true,"CreatedAt":"2019-10-26T01:40:06","Actor":"dotnet-maestro[bot]","Number":"3799","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/25/2019 10:26 PM\r\n- **Commit**: 5672978d912db81b4b677fddff264907a47ec9a8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19525.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3799","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3799)"},{"Id":"512717712","IsPullRequest":true,"CreatedAt":"2019-10-25T22:37:59","Actor":"dotnet-maestro[bot]","Number":"3795","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191017.3\r\n- **Date Produced**: 10/17/2019 6:23 PM\r\n- **Commit**: a42a124635ce1a218309ecb31ec59d559cacb886\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19517.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19517.3\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3795","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3795)"},{"Id":"512742124","IsPullRequest":true,"CreatedAt":"2019-10-25T22:17:28","Actor":"nguerrera","Number":"3797","RawContent":null,"Title":"Update stage 0 sdk to a 5.0 build","State":"open","Body":"Should unblock updates from core-setup to master\r\n\r\nFixes the supported version set to include .NET Core 5.0","Url":"https://github.com/dotnet/sdk/pull/3797","RelatedDescription":"Open PR \"Update stage 0 sdk to a 5.0 build\" (#3797)"},{"Id":"512726052","IsPullRequest":true,"CreatedAt":"2019-10-25T21:21:17","Actor":"wli3","Number":"3796","RawContent":null,"Title":"Update microsoft.dot net.helix.sdk","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3796","RelatedDescription":"Open PR \"Update microsoft.dot net.helix.sdk\" (#3796)"},{"Id":"512622021","IsPullRequest":false,"CreatedAt":"2019-10-25T17:02:51","Actor":"wtgodbe","Number":"3793","RawContent":null,"Title":"Re-enable Windows_Perf_Helix leg in release/3.1.1xx","State":"open","Body":"We should revert https://github.com/dotnet/sdk/pull/3792 once we identify why that leg was failing. \r\n\r\nCC @dsplaisted @livarcocc @wli3 @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/3793","RelatedDescription":"Open issue \"Re-enable Windows_Perf_Helix leg in release/3.1.1xx\" (#3793)"},{"Id":"513644086","IsPullRequest":false,"CreatedAt":"2019-10-13T21:18:57","Actor":"cezarypiatek","Number":"3814","RawContent":null,"Title":"Cannot load plugins with external dependencies in plugin interface","State":"open","Body":"I'm having trouble with loading plugin that contains an external dependency in the plugin interface. Let's say that PluginBase project depends on System.Collections.Immutable package and my plugin interface looks as follows:\n\n```csharp\npublic interface ICommand\n    {\n        string Name { get; }\n        string Description { get; }\n        int Execute(ImmutableArray&lt;string&gt; input);\n    }\n```\nWhen I try to load my plugin type I'm getting the following exeception:\n\n```\nSystem.Reflection.ReflectionTypeLoadException: 'Unable to load one or more of the requested types.\nMethod 'Execute' in type 'PluginArchitectureDemo.SamplePlugins' from assembly 'PluginArchitectureDemo.SamplePlugins, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' does not have an implementation.\n```\n\nHere is a repository with a solution that reproduces that problem https://github.com/cezarypiatek/PluginArchitectureDemo - just run PluginArchitectureDemo with a path to PluginArchitectureDemo.SamplePlugins.dll as the parameter.\n\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 06023407-704f-0ace-e89a-eedd9f95a007\n* Version Independent ID: f25a6e1a-cb10-867b-0522-a377bf9d016b\n* Content: [Create a .NET Core application with plugins - .NET Core](https://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support#feedback)\n* Content Source: [docs/core/tutorials/creating-app-with-plugin-support.md](https://github.com/dotnet/docs/blob/master/docs/core/tutorials/creating-app-with-plugin-support.md)\n* Product: **dotnet-core**\n* GitHub Login: @jkoritzinsky\n* Microsoft Alias: **jekoritz**","Url":"https://github.com/dotnet/sdk/issues/3814","RelatedDescription":"Open issue \"Cannot load plugins with external dependencies in plugin interface\" (#3814)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1189245263258542080","CreatedAt":"2019-10-29T18:19:00+00:00","UserScreenname":"dotnet","Text":"Watch these #dotNET video tutorials for an introduction to #VisualStudio and #GetStarted in just 5 mins! Check it o… https://t.co/lYkmdY8uyR","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"1189226825098190856","CreatedAt":"2019-10-29T17:05:44+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnK9Pxg","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1188904996751982592","CreatedAt":"2019-10-28T19:46:54+00:00","UserScreenname":"dotnet","Text":"Explore the world of #EntityFramework and #dotNET through these quick and easy 101 video #tutorials!… https://t.co/xEeBCG4KFk","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":53,"FavoriteCount":18,"RawContent":null},{"Id":"1187781254680403968","CreatedAt":"2019-10-25T17:21:33+00:00","UserScreenname":"dotnet","Text":"Discover what you can do with #Docker and #dotNET in just a few short video #tutorials! https://t.co/OUzFnxoat0 https://t.co/mX3ch9GLcs","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":62,"FavoriteCount":32,"RawContent":null},{"Id":"1187431317467729922","CreatedAt":"2019-10-24T18:11:02+00:00","UserScreenname":"dotnet","Text":"Create your first #WinForms or #WPF app with #dotNETCore in just a few minutes! Watch here: https://t.co/rTbIhRmAJD https://t.co/kkC5Pb5r2g","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":52,"FavoriteCount":21,"RawContent":null},{"Id":"1187041856305160192","CreatedAt":"2019-10-23T16:23:27+00:00","UserScreenname":"dotnet","Text":"Learn how to #GetStarted with #ASPNETCore in a few short video #tutorials!\" https://t.co/0jmYLkKUqn https://t.co/4BmZJZPlDX","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":28,"FavoriteCount":14,"RawContent":null},{"Id":"1186774324377575425","CreatedAt":"2019-10-22T22:40:22+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"1186380026763194368","CreatedAt":"2019-10-21T20:33:34+00:00","UserScreenname":"dotnet","Text":"Get started with #dotNET using these quick and fun 101 video #tutorials! https://t.co/QgXucetiFt https://t.co/FSFMHGIl7y","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1184928601394671616","CreatedAt":"2019-10-17T20:26:08+00:00","UserScreenname":"dotnet","Text":"Take the Fall .NET Core Survey https://t.co/QoL9pUXuID","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":53,"RawContent":null},{"Id":"1184876458621095936","CreatedAt":"2019-10-17T16:58:56+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-10-30T05:30:37.7260089Z","RunDurationInMilliseconds":16320}