{"Data":{"Blog":{"FeedItems":[{"Title":"Join the Xamarin Visual Challenge","PublishedOn":"2019-03-22T16:00:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past month, we have been running a low-key challenge to flex the new Xamarin.Forms 3.6 feature, Visual with Material Design. For more information about what Visual is and what you can do with...","Href":"https://blog.xamarin.com/join-the-xamarin-visual-challenge/","RawContent":null},{"Title":"Get Your Apps Ready for Apple’s New Watch Processor Architecture","PublishedOn":"2019-03-20T15:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last fall, Apple announced that new applications and updates would need to support the Apple Watch Series 4. &#8220;Starting March 2019, all new apps and app updates for iPhone, including universal...","Href":"https://blog.xamarin.com/apple-new-processor-architecture/","RawContent":null},{"Title":"Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More!","PublishedOn":"2019-03-18T18:54:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Essentials are your ultimate open source library to access native features from a single cross-platform API. Since the first release, we have received awesome feedback on GitHub from...","Href":"https://blog.xamarin.com/xamarin-essentials-detect-shake-browser-customization/","RawContent":null},{"Title":"Introducing the New Xamarin Customer Showcase","PublishedOn":"2019-03-15T16:53:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developers around the world use Xamarin every day to build beautiful native mobile apps with .NET. What better way to highlight the amazing work that these developers are doing than with a customer...","Href":"https://blog.xamarin.com/new-xamarin-customer-showcase/","RawContent":null},{"Title":"A Quick Update on Google Components for iOS and Android","PublishedOn":"2019-03-13T19:12:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts about using Xamarin for mobile development is access to all of the platform APIs from C# bindings. Additionally, any native iOS or Android library can be consumed by a Xamarin...","Href":"https://blog.xamarin.com/update-google-components-ios-android/","RawContent":null},{"Title":"Enhanced Xamarin Development With MFractor","PublishedOn":"2019-03-12T15:58:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Matthew Robbins. Matthew is a Microsoft MVP and the founder of MFractor, incredible Xamarin tools for Visual Studio Mac. MFractor MFractor is a powerful...","Href":"https://blog.xamarin.com/enhanced-xamarin-development-with-mfractor/","RawContent":null},{"Title":"Podcast: POP! New docs, blogs, customer showcases, and Twitch streams!","PublishedOn":"2019-03-08T17:03:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. Podcast Highlights This month&#8217;s Visual...","Href":"https://blog.xamarin.com/podcast-pop-docs-blogs-showcases-twitch/","RawContent":null},{"Title":"Beautiful Material Design for Android & iOS","PublishedOn":"2019-03-07T20:27:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week, Xamarin.Forms 3.6 shipped with another round of improvements, the most exciting of which is called Visual. Visual enables developers to create beautiful, cross-platform mobile applications...","Href":"https://blog.xamarin.com/beautiful-material-design-android-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.6: Visual Has Materialized","PublishedOn":"2019-03-06T20:12:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re pleased to announce the release of Xamarin.Forms 3.6 in the usual cadence of our regular releases. In addition to the usual enhancements and bug fixes, we’re also moving our Visual feature from...","Href":"https://blog.xamarin.com/xamarin-forms-3-6-visual-has-materialized/","RawContent":null},{"Title":"Best Practices and Tips for Using Xamarin.UITest","PublishedOn":"2019-03-04T19:35:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that it is very important for mobile apps to have great user interfaces, be accessible, and be extremely performant. Given the plethora of devices with different screen sizes, screen...","Href":"https://blog.xamarin.com/best-practices-tips-xamarin-uitest/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9310181560","Type":"PullRequestEvent","CreatedAt":"2019-03-25T18:09:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2866","RelatedDescription":"Merged pull request \"Annotate attributes with resource category hint for the IDE\" (#2866) at xamarin/xamarin-android","RelatedBody":"The code completion experience can be improved if the editor knew\r\nwhich string properties typically come from resources so a completion\r\nsuggestion can be provided that is filtered to the type of resource\r\nthe property should be pointing to (i.e. `@(string)` vs `@(drawable)`).\r\n\r\nFixes https://github.com/xamarin/xamarin-android/issues/2862"},{"Id":"9310181534","Type":"IssuesEvent","CreatedAt":"2019-03-25T18:09:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2862","RelatedDescription":"Closed issue \"Annotate attribute members with resource completion hint\" (#2862) at xamarin/xamarin-android","RelatedBody":"As part of an exploration on how to improve the productivity of our code editing experience, we investigated improved code completion powered by Roslyn that could make it easier to use the myriad attributes where strings are intended to point to resource identifiers for various scenarios (i.e. `ActivityAttribute`)\r\n\r\nThe intended user experience would look like the following:\r\n\r\n![CompletionFromResource](https://user-images.githubusercontent.com/169707/54777844-f9b37500-4bf1-11e9-8e52-63982b8b362f.gif)\r\n\r\nIn order to make the completion smart about what the various string values mean, I propose annotating the attribute properties with the existing `[System.ComponentModel.Category(\"CATEGORY\")]` attribute that the IDE can then use to filter the offered values. To drive the above completion for the [Activity.Label](https://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.NamingCustomAttributes/Android.App/ActivityAttribute.cs#L56) property, for example, we would annotate it with:\r\n\r\n```\r\n[Category(\"@string\")]\r\npublic string Label {get; set;}\r\n```\r\n\r\nAny other attributes that point to any of the generated resource identifiers in `Resource.designer.cs` are potential candidates for being annotated this way too.\r\n\r\nThe associated user story on the IDE side is at https://devdiv.visualstudio.com/DevDiv/_workitems/edit/724024"},{"Id":"9310156656","Type":"IssuesEvent","CreatedAt":"2019-03-25T18:05:23","Actor":"RyanBuzzInteractive","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2873","RelatedDescription":"Opened issue \"F# records are broken when building with Link SDK and User Assemblies\" (#2873) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Define an F# record type\r\n2. Set the Linking option to SDK and User Assemblies\r\n3. Try to create an instance of the record\r\n\r\nIf you try this sample out you can see it happening. Click the FAB. \r\n\r\nWhen set to Link SDK Assemblies Only or None, you will see the record printed in the debug console.\r\n\r\nWhen set to link User Assemblies, it will throw an exception.\r\n\r\nI have tried adding the standard Preserve attribute but it hasn't helped.\r\n\r\n[Test.zip](https://github.com/xamarin/xamarin-android/files/3004811/Test.zip)\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe record should be constructed normally.\r\n\r\n### Actual Behavior\r\n\r\nThe record crashes the application when trying to access its values.\r\n"},{"Id":"9310117519","Type":"PullRequestEvent","CreatedAt":"2019-03-25T17:59:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2871","RelatedDescription":"Merged pull request \"[docs] Sync BuildProcess from docs.microsoft.com\" (#2871) at xamarin/xamarin-android","RelatedBody":"Apply the link updates and formatting changes from the matching page on\r\ndocs.microsoft.com:\r\nhttps://docs.microsoft.com/xamarin/android/deploy-test/building-apps/build-process"},{"Id":"9310105679","Type":"PullRequestEvent","CreatedAt":"2019-03-25T17:58:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2867","RelatedDescription":"Merged pull request \"Bump to xamarin/xamarin-android-tools/master@66d445c4\" (#2867) at xamarin/xamarin-android","RelatedBody":"Upgrades to NUnit 3.11.0 and NUnit.ConsoleRunner 3.9.0."},{"Id":"9310100881","Type":"PullRequestEvent","CreatedAt":"2019-03-25T17:57:29","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2870","RelatedDescription":"Merged pull request \"[java-runtime] Remove debug files from java_runtime.jar\" (#2870) at xamarin/xamarin-android","RelatedBody":"Commit xxxx added the new java_runtime.jar and\r\njava_runtime_fastdev.jar files. The idea is the\r\njava_runtime.jar was the release version of the\r\nruntime. It should NOT contain files such as\r\n\r\n\tmono/android/ResourcePatcher.class\r\n\tmono/android/Seppuku.class\r\n\tmono/android/MonkeyPatcher.class\r\n\r\nThese are for fast dev only.\r\n\r\nHowever we were including these files!!\r\n\r\nThis was because of a couple of problems.\r\n1) The `RemoveItems` property of `_RuntimeOutput` was being\r\ntreated like an ItemGroup when it is infact a property.\r\nSo we need to semi-colon seperate the items to make sure\r\nthey are ALL removed rather then it just being the last one\r\nlisted.\r\n\r\n2) Because the `Inputs` was changed to `@(_RuntimeOutput)`\r\nit means the target will run only ONCE. As a result both the\r\n`release.txt` and `fastdev.txt` files contained the SAME\r\nfile list. What we should have been doing was using Target\r\nBatching via\r\n\r\n\t%(_RuntimeOutput.OutputJar)\r\n\r\nThis makes sure the target runs for EACH output. This will\r\nresult in the behaviour we want, i.e  the files listed\r\nabove NOT being in the release version of the jar."},{"Id":"9309565853","Type":"PullRequestEvent","CreatedAt":"2019-03-25T16:45:08","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2868","RelatedDescription":"Merged pull request \"[installers] use @(AndroidApiInfo) for frameworks list\" (#2868) at xamarin/xamarin-android","RelatedBody":"Our installers are currently missing `v9.0`:\r\n\r\n    $ zipinfo ~/Downloads/Xamarin.Android.Sdk-OSS-9.2.99.95_master_58137da.vsix | grep Mono.Android.dll\r\n    -rw----     0.0 fat 17827328 b- defN 19-Mar-22 15:14 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v4.4/Mono.Android.dll\r\n    -rw----     0.0 fat 17888256 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v4.4.87/Mono.Android.dll\r\n    -rw----     0.0 fat 19628544 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v5.0/Mono.Android.dll\r\n    -rw----     0.0 fat 19720704 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v5.1/Mono.Android.dll\r\n    -rw----     0.0 fat 20758528 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v6.0/Mono.Android.dll\r\n    -rw----     0.0 fat 22979584 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v7.0/Mono.Android.dll\r\n    -rw----     0.0 fat 23044096 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v7.1/Mono.Android.dll\r\n    -rw----     0.0 fat 24596480 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v8.0/Mono.Android.dll\r\n    -rw----     0.0 fat 24669184 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v8.1/Mono.Android.dll\r\n    -rw----     0.0 fat 26605568 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v9.0.99/Mono.Android.dll\r\n\r\nWhen we added API-Q, a new *unstable* framework is preventing the\r\nlatest *stable* framework from being added to the installer.\r\n\r\nWhat we can do instead, is import `Mono.Android.projitems` and use\r\nits `@(AndroidApiInfo)` item group.\r\n\r\n    <AndroidApiInfo Include=\"v9.0\">\r\n      <Name>Pie</Name>\r\n      <Level>28</Level>\r\n      <Id>28</Id>\r\n      <Stable>True</Stable>\r\n    </AndroidApiInfo>\r\n    <AndroidApiInfo Include=\"v9.0.99\">\r\n      <Name>Q</Name>\r\n      <Level>29</Level>\r\n      <Id>Q</Id>\r\n      <Stable>False</Stable>\r\n    </AndroidApiInfo>\r\n\r\nUnfortunately, getting the MSBuild transform right was quite tricky...\r\n\r\nAt first, I just tried updating the existing `<ItempGroup/>`:\r\n\r\n    <ItemGroup>\r\n      <_FrameworkDirs Include=\"@(AndroidApiInfo->'$(FrameworkSrcDir)\\%(Identity)')\" />\r\n      <_FrameworkDirsThatExist Condition=\"Exists('%(Identity)')\" Include=\"@(_FrameworkDirs)\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\AndroidApiInfo.xml')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\mono.android.dex')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\Mono.Android.dll')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\mono.android.jar')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\Mono.Android.pdb')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\RedistList\\FrameworkList.xml')\" />\r\n    </ItemGroup>\r\n\r\nThis construct fails with:\r\n\r\n    error MSB4190: The reference to the built-in metadata \"Identity\" at position 8 is not allowed in this condition \"Exists('%(Identity)')\".\r\n\r\nHowever, it works when moved *inside* a target? I am guessing that\r\n`%(Identity)` does not exist at evaluation time. MSBuild is a weird\r\nthing.\r\n\r\nI just put this `<ItemGroup/>` inside the `ConstructInstallerItems`\r\nMSBuild target.\r\n\r\nThis should make things future proof for new TFVs, but also allow PR\r\nbuilds to work."},{"Id":"9306596352","Type":"PullRequestEvent","CreatedAt":"2019-03-25T10:06:02","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2869","RelatedDescription":"Merged pull request \"[Linux build] Debian/testing has libncurses6 instead of libncurses5\" (#2869) at xamarin/xamarin-android","RelatedBody":"We're trying to upgrade our Linux build bots to a newer version of Debian in\r\nhopes to fix a problem with cross-building LLVM for Windows with MinGW. However,\r\nDebian/testing (codename buster) does not install `libncurses5` by default,\r\ninstead it comes with `libncurses6` which makes the preparation phase of the\r\nbuild fail.\r\n\r\nThis commit adds a check for Debian version and adjusts the package list\r\naccordingly."},{"Id":"9306029114","Type":"IssuesEvent","CreatedAt":"2019-03-25T08:36:58","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2865","RelatedDescription":"Closed issue \"Incorrect parameter names for ArrayAdapter constructor\" (#2865) at xamarin/xamarin-android","RelatedBody":"There are 3 constructors of the array adapter where the 2nd parameter name is incorrect. According to [ArrayAdapter docs](https://developer.android.com/reference/android/widget/ArrayAdapter.html):\r\n\r\n    ArrayAdapter(Context context, int resource)\r\n    ArrayAdapter(Context context, int resource, T[] objects) \r\n    ArrayAdapter(Context context, int resource, List<T> objects) \r\n\r\nIn Xamarin, though these 3 have the 2nd argument named `textViewResourceId` which is incorrect as the `resource` parameter refers to the resource id of the layout file rather than the id of the `TextView` within the layout resource.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9313246965","Type":"IssuesEvent","CreatedAt":"2019-03-26T05:04:59","Actor":"trolloks","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5686","RelatedDescription":"Opened issue \"Animation tasks do not complete when Animations are removed in Accessibility Settings.\" (#5686) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Steps to Reproduce\r\n\r\n1. On a Android 9.0 device, go to Settings -> Accessibility -> Remove animations\r\n2. Call any animation - var animationTask = label.FadeTo(1)\r\n3. await the resulting task\r\n\r\n### Expected Behavior\r\n\r\nAnimation completes instantly, Task immediately completes.\r\n\r\n### Actual Behavior\r\n\r\nAnimation does not occur, Task never completes. \r\n\r\nWhen battery saver is enabled, the complete instantly and works as intended.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0.264807\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 9.0<!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> "},{"Id":"9312497150","Type":"PullRequestEvent","CreatedAt":"2019-03-26T01:29:42","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5685","RelatedDescription":"Opened pull request \"Add EventToCommandBehavior\" (#5685) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis is the same class from our sample and documentation. I see this all over the place, and ListView needs it to really do MVVM. \r\n\r\nI added namespace `Xamarin.Forms.Behaviors`. Is `Xamarin.Forms` better? It seems like most things are in that space, but it's a bit crowded. Is that for XAML simplicity?\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### PR Checklist ###\r\n\r\n- [ none ] Has automated tests\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9312258896","Type":"IssuesEvent","CreatedAt":"2019-03-26T00:23:32","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5680","RelatedDescription":"Closed issue \"[Enhancement] Add method to force value coercion\" (#5680) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nIt would be nice to have a method that forces a BindableProperty to be coerced, similar to WPF's [CoerceValue method](https://docs.microsoft.com/en-us/dotnet/api/system.windows.dependencyobject.coercevalue?view=netframework-4.7.2)\r\n\r\n## API Changes\r\n\r\nThe BindableObject class would have an additional method called CoerceValue that looks like this:\r\n\r\n```csharp\r\nclass BindableObject\r\n{\r\n    void CoerceValue(BindableProperty property);\r\n}\r\n```\r\n\r\nWhen called, this method would coerce the current value of the property if a coerceCallback is set on the property.\r\n\r\n## Intended Use Case\r\nThis method is useful to coerce a BindableProperty even if the property itself hasn't changed. If you have some sort of TextBox control with a variable DisplayLength property for example, you could adjust the displayed text length by calling the CoerceValue method when the DisplayLength changes without changing the text itself.\r\n"},{"Id":"9312168677","Type":"PullRequestEvent","CreatedAt":"2019-03-25T23:58:59","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5684","RelatedDescription":"Opened pull request \"[iOS] Don't crash if no Thumbnail specified for AppLink\" (#5684) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#4733 unified the image loading code but failed to preserve the check to see if an AppLink.Thumbnail was actually specified before throwing an exception. This restores that check.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #5470 \r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- iOS\r\n\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n- Run Issue5470 in Control Gallery. If it doesn't crash, this works!\r\n- Also run AppLinksGallery to make sure that an app link with a thumbnail still works.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9311656590","Type":"IssuesEvent","CreatedAt":"2019-03-25T22:01:21","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5253","RelatedDescription":"Closed issue \"iOS: Placeholder does not disappear when entering text in Editor inside ScrollView\" (#5253) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nThe placeholder should disappear if a text is entered in the editor.\r\n### Steps to Reproduce\r\nPlace Editor inside ScrollView.\r\n### Expected Behavior\r\nThe Placeholder disappears if a text is entered and appears if the text is null or empty.\r\n### Actual Behavior\r\nThe Placeholder and the text overlaps.\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1029999\r\n- Last known good version: -\r\n- IDE: Visual Studio: 15.9.6\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n![image](https://user-images.githubusercontent.com/10894484/52779540-abd2ac80-3048-11e9-891a-910618386081.png)\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9312635038","Type":"IssuesEvent","CreatedAt":"2019-03-26T02:08:06","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5799","RelatedDescription":"Closed issue \"Random Error for Unknown Reason\" (#5799) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\nI don't know, there's no managed code on the stack that I can identify. I was trying to log into my application on the iOS simulator when the application just crashed.\r\n\r\n### Expected Behavior\r\nThe login succeeds and takes me to the page within my application.\r\n\r\n### Actual Behavior\r\nThe screen goes black and the application terminates.\r\n\r\n### Environment\r\n```\r\nJetBrains Rider 2019.1 EAP\r\nBuild #RD-191.6349.96, built on March 21, 2019\r\nRider EAP User\r\nExpiration date: April 20, 2019\r\nJRE: 1.8.0_202-release-1483-b40 amd64\r\nJVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o\r\nWindows 10 10.0\r\n```\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.8.1 (build 4)\r\nInstallation UUID: 0fd06d7a-7f21-40f4-890c-9189ea7bfc77\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.0.0.0 ( / b40230c0)\r\n\r\n\tPackage version: 516000221\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.8\r\n\t2.1.7\r\nSDK: /usr/local/share/dotnet/sdk/2.1.504/Sdks\r\nSDK Versions:\r\n\t2.1.504\r\n\t2.1.503\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.15 (Visual Studio Community)\r\nHash: d60abd198\r\nBranch: \r\nBuild date: 2019-02-01 12:23:30-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.15 (Visual Studio Community)\r\nHash: d60abd198\r\nBranch: d15-9\r\nBuild date: 2019-02-01 12:23:29-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: Not Found\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.8.1.0\r\nHash: 8924ea4a\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 708010004\r\nGit revision: 8e2582c0fc1558364b67502b43d2e6a44ff6bc48\r\nBuild date: 2019-02-21 18:39:01+00\r\nBuild branch: release-7.8\r\nXamarin extensions: af96e69ddf566b275db40628f8530ca48a97f0b9\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.3\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Thu Dec 20 20:46:53 PST 2018\r\n    root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\r\n```\r\n\r\n### Build Logs\r\n[JetBrainsLog.ReSharperBuild_2019_03_22_04_39_57_4206.log.zip](https://github.com/xamarin/xamarin-macios/files/2995003/JetBrainsLog.ReSharperBuild_2019_03_22_04_39_57_4206.log.zip)\r\n\r\n### Console Output\r\n```\r\n2019-03-22 15:40:47.344681+1100 Adapt.Presentation.Xivic.iOS[30642:255728] error: * Assertion at /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/external/mono/mono/mini/debugger-agent.c:4957, condition `is_ok (error)' not met, function:set_set_notification_for_wait_completion_flag, Could not execute the method because the containing type is not fully instantiated. assembly:<unknown assembly> type:<unknown type> member:(null)\r\n2019-03-22 15:40:47.344985+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: Stacktrace:\r\n2019-03-22 15:40:47.345150+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical:   at <unknown> <0xffffffff>\r\n2019-03-22 15:40:47.345373+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical:   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () [0x00009] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.15/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/threading/threadpool.cs:1210\r\n2019-03-22 15:40:47.345612+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical:   at (wrapper runtime-invoke) <Module>.runtime_invoke_bool (object,intptr,intptr,intptr) [0x0001f] in <2b439461a53d406abf16d6e5e34ece7f>:0\r\n2019-03-22 15:40:47.345734+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \r\nNative stacktrace:\r\n2019-03-22 15:40:47.354900+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t0   Adapt.Presentation.Xivic.iOS        0x00000001072039f4 mono_handle_native_crash + 244\r\n2019-03-22 15:40:47.355033+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t1   libsystem_platform.dylib            0x000000011ce05b3d _sigtramp + 29\r\n2019-03-22 15:40:47.355134+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t2   ???                                 0x0000ffff00001fa0 0x0 + 281470681751456\r\n2019-03-22 15:40:47.355215+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t3   libsystem_c.dylib                   0x000000011cb87c45 abort + 127\r\n2019-03-22 15:40:47.355294+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t4   Adapt.Presentation.Xivic.iOS        0x0000000107420700 _ZL12log_callbackPKcS0_S0_iPv + 64\r\n2019-03-22 15:40:47.355407+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t5   Adapt.Presentation.Xivic.iOS        0x00000001073ebdf3 monoeg_g_logv + 83\r\n2019-03-22 15:40:47.355475+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t6   Adapt.Presentation.Xivic.iOS        0x00000001073ec0df monoeg_assertion_message + 191\r\n2019-03-22 15:40:47.355566+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t7   Adapt.Presentation.Xivic.iOS        0x0000000107163acb ss_start + 2747\r\n2019-03-22 15:40:47.355648+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t8   Adapt.Presentation.Xivic.iOS        0x0000000107156de3 process_breakpoint + 931\r\n2019-03-22 15:40:47.355709+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t9   Adapt.Presentation.Xivic.iOS        0x00000001071569ce mono_debugger_agent_breakpoint_from_context + 158\r\n2019-03-22 15:40:47.355775+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t10  ???                                 0x000000013bd1e07f 0x0 + 5298577535\r\n2019-03-22 15:40:47.355861+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t11  ???                                 0x0000000142efbb58 0x0 + 5417974616\r\n2019-03-22 15:40:47.355929+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t12  ???                                 0x0000000141ad317c 0x0 + 5396836732\r\n2019-03-22 15:40:47.356010+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t13  ???                                 0x00000001409ca1f3 0x0 + 5378974195\r\n2019-03-22 15:40:47.356084+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t14  ???                                 0x0000000141ad426d 0x0 + 5396841069\r\n2019-03-22 15:40:47.356144+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t15  ???                                 0x0000000140d6d5bb 0x0 + 5382788539\r\n2019-03-22 15:40:47.356225+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t16  ???                                 0x0000000140d6c593 0x0 + 5382784403\r\n2019-03-22 15:40:47.356319+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t17  ???                                 0x0000000141ad317c 0x0 + 5396836732\r\n2019-03-22 15:40:47.356413+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t18  ???                                 0x00000001409ca1f3 0x0 + 5378974195\r\n2019-03-22 15:40:47.356477+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t19  ???                                 0x0000000141ad426d 0x0 + 5396841069\r\n2019-03-22 15:40:47.356548+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t20  ???                                 0x0000000140d6d5bb 0x0 + 5382788539\r\n2019-03-22 15:40:47.356613+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \t21  ???                                 0x0000000140d6c593 0x0 + 5382784403\r\n2019-03-22 15:40:47.356681+1100 Adapt.Presentation.Xivic.iOS[30642:255728] critical: \r\n=================================================================\r\nGot a SIGABRT while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n```\r\n\r\n### Device Log\r\n```\r\n2019-03-22 15:35:41.770532+1100 Adapt.Presentation.Xivic.iOS[29989:249883] error: * Assertion at /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/external/mono/mono/mini/debugger-agent.c:4957, condition `is_ok (error)' not met, function:set_set_notification_for_wait_completion_flag, Could not execute the method because the containing type is not fully instantiated. assembly:<unknown assembly> type:<unknown type> member:(null)\r\n```\r\n\r\n### LLDB Trace\r\n```\r\n__pthread_kill 0x0000000115d6423e\r\npthread_kill 0x0000000115db7c1c\r\nabort 0x0000000115b26c45\r\nlog_callback(char const*, char const*, char const*, int, void*) 0x00000001003c3700\r\nmonoeg_g_logv 0x000000010038edf3\r\nmonoeg_assertion_message 0x000000010038f0df\r\nss_start 0x0000000100106acb\r\nss_start 0x0000000100106a98\r\nprocess_breakpoint 0x00000001000f9de3\r\nmono_debugger_agent_breakpoint_from_context 0x00000001000f99ce\r\n<unknown> 0x0000000134cc107f\r\n<unknown> 0x000000013be9cd58\r\n<unknown> 0x000000013aa76e0c\r\n<unknown> 0x000000013996d1f3\r\n<unknown> 0x000000013aa77efd\r\n<unknown> 0x0000000139d0cdbb\r\n<unknown> 0x0000000139d0c503\r\n<unknown> 0x000000013aa76e0c\r\n<unknown> 0x000000013996d1f3\r\n<unknown> 0x000000013aa77efd\r\n<unknown> 0x0000000139d0cdbb\r\n```"},{"Id":"9308379575","Type":"IssuesEvent","CreatedAt":"2019-03-25T14:27:04","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5805","RelatedDescription":"Closed issue \"Unhandled exception while copying ObservableCollection to List\" (#5805) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\nI've got the error from the App Center report, so I can't say how to reproduce it but it obviously happens in the Xamarin code.\r\n\r\nWhat the app does is that it copies the ObservableCollection to the List with ToList() method as you will see in the crash report below.\r\n\r\n### Expected Behavior\r\nIt would be expected that this work. If it is needs to crash it should send less cryptic message\r\n\r\n### Actual Behavior\r\nThis is the crash report:\r\nArray.Copy (System.Array sourceArray, System.Int32 sourceIndex, System.Array destinationArray, System.Int32 destinationIndex, System.Int32 length)\r\nDestination array was not long enough. Check destIndex and length, and the array's lower bounds\r\nArray.Copy (System.Array sourceArray, System.Int32 sourceIndex, System.Array destinationArray, System.Int32 destinationIndex, System.Int32 length)\r\nList`1[T].CopyTo (T_REF[] array, System.Int32 arrayIndex)\r\nCollection`1[T].CopyTo (T_REF[] array, System.Int32 index)\r\nSystem.Collections.Generic.List`1[T]..ctor (System.Collections.Generic.IEnumerable`1[T] collection) <0x10476c774 + 0x000f3> in <2b439461a53d406abf16d6e5e34ece7f#b36d1afe6b432fea26ad687582c8a2ab>:0\r\nEnumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source)\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.9\r\nVisualStudio.15.Release/15.9.9+28307.518\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA347\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.20131.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFile Differ   1.4.25\r\nThe easiest way to diff two files directly in Solution Explorer\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nMultilingual App Toolkit   4.0\r\nMultilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61903.01040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.489\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.80 (d15-9@914127c74)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.15 (d60abd1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"9307785306","Type":"PullRequestEvent","CreatedAt":"2019-03-25T13:10:59","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5803","RelatedDescription":"Merged pull request \"Backport device bcl tests\" (#5803) at xamarin/xamarin-macios","RelatedBody":"This fixes present in master will fix a number of crashes we have in the VSTS tests while testing on device."},{"Id":"9307780247","Type":"PullRequestEvent","CreatedAt":"2019-03-25T13:10:16","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5807","RelatedDescription":"Opened pull request \"Ignore tests for devices\" (#5807) at xamarin/xamarin-macios","RelatedBody":"There are a number of tests that fail on device. We have an issue for the corlib tests (https://github.com/mono/mono/issues/13641 ) and we do not have one for the icrosoft.CSharp_xunit-test.dll because it does not happen on 2019-02 yet we have issue \r\nhttps://github.com/mono/mono/issues/13639 that is related with that dll."},{"Id":"9307140043","Type":"PullRequestEvent","CreatedAt":"2019-03-25T11:28:50","Actor":"akoeplinger","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5806","RelatedDescription":"Opened pull request \"[tests] Remove confusing values for old Xcode versions\" (#5806) at xamarin/xamarin-macios","RelatedBody":"Xcode 5 to 8 are obsolete, we don't need those values in the test config anymore.\r\nIn the few tests that still check for Xcode 8 we can simply hardcode the directory like other tests do."},{"Id":"9304108280","Type":"IssuesEvent","CreatedAt":"2019-03-24T22:31:29","Actor":"ivanicin","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5805","RelatedDescription":"Opened issue \"Crash while copying ObservableCollection to List\" (#5805) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\nI've got the error from the App Center report.\r\n\r\nWhat the app does is that it copies the ObservableCollection to the List with ToList() method as you will see in the crash report below.\r\n\r\n### Expected Behavior\r\nIt would be expected that this work. If it is needs to crash it should send less cryptic message\r\n\r\n### Actual Behavior\r\nThis is the crash report:\r\nArray.Copy (System.Array sourceArray, System.Int32 sourceIndex, System.Array destinationArray, System.Int32 destinationIndex, System.Int32 length)\r\nList`1[T].CopyTo (T_REF[] array, System.Int32 arrayIndex)\r\nCollection`1[T].CopyTo (T_REF[] array, System.Int32 index)\r\nSystem.Collections.Generic.List`1[T]..ctor (System.Collections.Generic.IEnumerable`1[T] collection) <0x10476c774 + 0x000f3> in <2b439461a53d406abf16d6e5e34ece7f#b36d1afe6b432fea26ad687582c8a2ab>:0\r\nEnumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source)\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.9\r\nVisualStudio.15.Release/15.9.9+28307.518\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA347\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.20131.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFile Differ   1.4.25\r\nThe easiest way to diff two files directly in Solution Explorer\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nMultilingual App Toolkit   4.0\r\nMultilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61903.01040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.489\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.80 (d15-9@914127c74)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.15 (d60abd1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":24,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":115,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":41,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":39,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":69,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":9,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":18,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":261,"FavoriteCount":130,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":23,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":15,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":31,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":28,"RawContent":null}]}},"RunOn":"2019-03-26T05:30:50.837296Z","RunDurationInMilliseconds":2470}