{"Data":{"GitHub":{"Issues":[{"Id":"397474045","IsPullRequest":false,"CreatedAt":"2019-01-09T17:23:55","Actor":"ericstj","Number":"248","RawContent":null,"Title":"WPF should build against latest CoreFx packages","State":"open","Body":"Currently this repository is set up to get its NETCoreApp assemblies as an implicit framework reference from the SDK.\r\n\r\nThis project does not define a RuntimeFrameworkVersion, so it gets the default implicit framework references.\r\nhttps://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/System.Xaml/System.Xaml.csproj#L5\r\n\r\nAnd it's picking up the 3.0 dotnet cli + SDK that will have \"latest\" (that's made its way to the SDK repo).\r\nhttps://github.com/dotnet/wpf/blob/b9a9a501b7118185ea31e48aa9d79b8a385e8a98/global.json#L3\r\n\r\nHowever, its picking up much older versions of packages that build on top of NETCoreApp.\r\nhttps://github.com/dotnet/wpf/blob/b9a9a501b7118185ea31e48aa9d79b8a385e8a98/eng/Versions.props#L7-L8\r\n\r\nThis will \"work\" in most cases, since we make compatible changes to the surface area, but it has a couple draw backs:\r\n1. If the packages have implementation assemblies that aren't in the shared framework, your tests in this repo will be running with **much older** implementation than what gets bundled into the desktop shared framework.\r\n2. When we move types down you'll get compiler errors.  See https://github.com/dotnet/corefx/issues/34447.\r\n\r\nThese dependencies need to change to be the latest packages published from CoreFx and you should have a subscription set up so that maestro auto updates them.\r\n","Url":"https://github.com/dotnet/wpf/issues/248","RelatedDescription":"Open issue \"WPF should build against latest CoreFx packages\" (#248)"},{"Id":"397362699","IsPullRequest":true,"CreatedAt":"2019-01-09T13:11:12","Actor":"dotnet-maestro[bot]","Number":"247","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19058.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/247","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#247)"},{"Id":"396024530","IsPullRequest":true,"CreatedAt":"2019-01-08T23:08:17","Actor":"hughbe","Number":"237","RawContent":null,"Title":"Remove ThreeValuedBool","State":"closed","Body":"Fixed https://github.com/dotnet/wpf/issues/218\r\n/cc @stevenbrix","Url":"https://github.com/dotnet/wpf/pull/237","RelatedDescription":"Closed or merged PR \"Remove ThreeValuedBool\" (#237)"},{"Id":"397124608","IsPullRequest":true,"CreatedAt":"2019-01-08T22:33:37","Actor":"ptorr-msft","Number":"246","RawContent":null,"Title":"Update contributing.md","State":"open","Body":"Added info about not changing files in the `Shared` directory","Url":"https://github.com/dotnet/wpf/pull/246","RelatedDescription":"Open PR \"Update contributing.md\" (#246)"},{"Id":"396569858","IsPullRequest":false,"CreatedAt":"2019-01-08T21:11:43","Actor":"TorbenLL","Number":"240","RawContent":null,"Title":"Image not shown","State":"closed","Body":"* .NET Core Version: 3.0 Preview1\r\n* Windows version: 1803\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n  **Problem description:**\r\n WPF in .net core does not show an image\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n The code compile and run but the image given is not shown.\r\nIt may be due to the image file is no longer compiled with the \"resource\" switch\r\n \r\n**Expected behavior:**\r\n The image is shown in the window at run time. \r\n \r\n**Minimal repro:**\r\n ```\r\n<Window x:Class=\"MyWPFApp.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:local=\"clr-namespace:MyWPFApp\"\r\n        mc:Ignorable=\"d\"\r\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\r\n  <Grid>\r\n    <Image Stretch=\"Fill\" Width=\"50\" Height=\"50\" >\r\n      <Image.Source>\r\n        <BitmapImage UriSource=\"Example.bmp\"/>\r\n      </Image.Source>\r\n    </Image>\r\n  </Grid>\r\n</Window>\r\n```","Url":"https://github.com/dotnet/wpf/issues/240","RelatedDescription":"Closed issue \"Image not shown\" (#240)"},{"Id":"397067371","IsPullRequest":false,"CreatedAt":"2019-01-08T20:11:47","Actor":"ericstj","Number":"245","RawContent":null,"Title":"BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance has wrong default value","State":"open","Body":"* WPF Version: 3.0.0-alpha-27122-4 \r\n* Windows version: Win 10 1809 (17763.195)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n **Problem description:**\r\nBaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance is defaulting to `true` on .NETCore but defaults to `false` on .NET 4.5 and later. \r\n \r\n **Actual behavior:** \r\nBaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance is true.\r\n \r\n **Expected behavior:**\r\nBaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance is false.\r\n \r\n **Minimal repro:**\r\nStart an app and examine value of `BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance`\r\n \r\nCustomer issue: https://github.com/dotnet/corefx/issues/33612. \r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/245","RelatedDescription":"Open issue \"BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance has wrong default value\" (#245)"},{"Id":"396963596","IsPullRequest":false,"CreatedAt":"2019-01-08T15:42:48","Actor":"0xd4d","Number":"244","RawContent":null,"Title":"WPF apps crash if they display text with too many combining marks","State":"open","Body":"* .NET Core Version: 3.0.100-preview-010024\r\n* Windows version: (`winver`) win 10\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: yes\r\n\r\n  **Problem description:**\r\n\r\nIf there are too many combining marks or other special chars on one line and you try to show this text in a WPF textbox or WPF text editor, the application crashes.\r\n\r\n **Actual behavior:**\r\n\r\nCrash\r\n \r\n **Expected behavior:**\r\n\r\nThe extra special chars are either ignored or a .NET exception is thrown. \r\n\r\n **Minimal repro:**\r\n\r\nPaste this text in a WPF textbox or a WPF text editor (it's `new string ('\\u0483', 550)`) \r\n\r\n```\r\n҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃҃\r\n```\r\n\r\nHere's code that generates it, don't try to display it in the VS C# REPL, it will crash VS:\r\n\r\n```C#\r\nFile.WriteAllLines(@\"c:\\some\\dir\\a.txt\", new[] {new string ('\\u0483', 550) })\r\n```","Url":"https://github.com/dotnet/wpf/issues/244","RelatedDescription":"Open issue \"WPF apps crash if they display text with too many combining marks\" (#244)"},{"Id":"396897517","IsPullRequest":true,"CreatedAt":"2019-01-08T13:08:21","Actor":"dotnet-maestro[bot]","Number":"243","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19057.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/243","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#243)"},{"Id":"396851293","IsPullRequest":false,"CreatedAt":"2019-01-08T10:51:21","Actor":"FSharpCSharp","Number":"242","RawContent":null,"Title":"Add additional components from the Microsoft environment.","State":"open","Body":"When publishing the WPF components, it would be very good if the libraries of the following namespaces were also published, since some applications are based on them. Is it possible to include them?\r\n\r\n```\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:i=\"http://schemas.microsoft.com/expression/2010/interactivity\"\r\n```","Url":"https://github.com/dotnet/wpf/issues/242","RelatedDescription":"Open issue \"Add additional components from the Microsoft environment.\" (#242)"},{"Id":"396684002","IsPullRequest":false,"CreatedAt":"2019-01-07T23:00:39","Actor":"hughbe","Number":"241","RawContent":null,"Title":"Stub CAS/Security in wpf","State":"open","Body":"From https://github.com/dotnet/wpf/pull/214#discussion_r244214372\r\n\r\nI'm guessing cause the source is shared we can't but opening for discussion","Url":"https://github.com/dotnet/wpf/issues/241","RelatedDescription":"Open issue \"Stub CAS/Security in wpf\" (#241)"},{"Id":"396256426","IsPullRequest":true,"CreatedAt":"2019-01-06T13:07:43","Actor":"dotnet-maestro[bot]","Number":"239","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19055.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/239","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#239)"},{"Id":"396163665","IsPullRequest":true,"CreatedAt":"2019-01-05T13:07:44","Actor":"dotnet-maestro[bot]","Number":"238","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19054.13\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/238","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#238)"},{"Id":"395920251","IsPullRequest":false,"CreatedAt":"2019-01-04T13:10:10","Actor":"JohanLarsson","Number":"236","RawContent":null,"Title":"Make TemplatedAdorner public.","State":"open","Body":"It is a useful type.","Url":"https://github.com/dotnet/wpf/issues/236","RelatedDescription":"Open issue \"Make TemplatedAdorner public.\" (#236)"},{"Id":"395918373","IsPullRequest":true,"CreatedAt":"2019-01-04T13:08:04","Actor":"dotnet-maestro[bot]","Number":"235","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19053.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/235","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#235)"},{"Id":"395896559","IsPullRequest":false,"CreatedAt":"2019-01-04T11:37:39","Actor":"JohanLarsson","Number":"234","RawContent":null,"Title":"Check if _child is null in TemplatedAdorner.MeasureOverride","State":"open","Body":"No null check [here](https://referencesource.microsoft.com/#PresentationFramework/src/Framework/MS/Internal/Controls/TemplatedAdorner.cs,143) is weird given that there is a null check [here](https://referencesource.microsoft.com/#PresentationFramework/src/Framework/MS/Internal/Controls/TemplatedAdorner.cs,166)\r\n\r\n\r\nFrom reference source:\r\n```cs\r\n        /// <summary>\r\n        /// Measure adorner.\r\n        /// </summary>\r\n        protected override Size MeasureOverride(Size constraint)\r\n        {\r\n            Debug.Assert(_child != null, \"_child should not be null\");\r\n \r\n            if (ReferenceElement != null && AdornedElement != null &&\r\n                AdornedElement.IsMeasureValid &&\r\n                !DoubleUtil.AreClose(ReferenceElement.DesiredSize, AdornedElement.DesiredSize)\r\n                )\r\n            {\r\n                ReferenceElement.InvalidateMeasure();\r\n            }\r\n \r\n            (_child).Measure(new Size(Double.PositiveInfinity, Double.PositiveInfinity));\r\n \r\n            return (_child).DesiredSize;\r\n        }\r\n \r\n \r\n \r\n        /// <summary>\r\n        ///     Default control arrangement is to only arrange\r\n        ///     the first visual child. No transforms will be applied.\r\n        /// </summary>\r\n        protected override Size ArrangeOverride(Size size)\r\n        {\r\n            Size finalSize;\r\n \r\n            finalSize = base.ArrangeOverride(size);\r\n \r\n            if (_child != null)\r\n            {\r\n                    _child.Arrange(new Rect(new Point(), finalSize));\r\n            }\r\n            return finalSize;\r\n        }\r\n```\r\n\r\nDid a search and did not find `TemplatedAdorner` in the repo.\r\n\r\nRepro:\r\nResize the window with the below markup:\r\n```\r\n<DataGrid ItemsSource=\"{Binding People}\">\r\n    <DataGrid.RowStyle>\r\n        <Style TargetType=\"DataGridRow\">\r\n            <Setter Property=\"adorners:Info.Template\">\r\n                <Setter.Value>\r\n                    <ControlTemplate>\r\n                        <Border BorderBrush=\"HotPink\"\r\n                                BorderThickness=\"3\">\r\n                            <AdornedElementPlaceholder />\r\n                        </Border>\r\n                    </ControlTemplate>\r\n                </Setter.Value>\r\n            </Setter>\r\n        </Style>\r\n    </DataGrid.RowStyle>\r\n</DataGrid>\r\n```","Url":"https://github.com/dotnet/wpf/issues/234","RelatedDescription":"Open issue \"Check if _child is null in TemplatedAdorner.MeasureOverride\" (#234)"},{"Id":"395553958","IsPullRequest":false,"CreatedAt":"2019-01-03T19:04:00","Actor":"anirugu","Number":"232","RawContent":null,"Title":"The property windows for WPF is not as same as Winforms.","State":"closed","Body":"Earlier I used a Winforms a lot, just Go to property and change the name. When you are in Xaml file, you can't change the name in property windows (latest 2017) nor you can make an event by just click on the textbox as you can do same in WinForms.\r\n\r\nAre these improvement coming to WPF. This was the thing that I found missing in WPF for Visual Studio Tooling.","Url":"https://github.com/dotnet/wpf/issues/232","RelatedDescription":"Closed issue \"The property windows for WPF is not as same as Winforms.\" (#232)"},{"Id":"395565503","IsPullRequest":true,"CreatedAt":"2019-01-03T13:08:08","Actor":"dotnet-maestro[bot]","Number":"233","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19052.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/233","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#233)"},{"Id":"395241675","IsPullRequest":true,"CreatedAt":"2019-01-02T13:08:01","Actor":"dotnet-maestro[bot]","Number":"231","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19051.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/231","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#231)"},{"Id":"395081303","IsPullRequest":true,"CreatedAt":"2019-01-01T13:07:42","Actor":"dotnet-maestro[bot]","Number":"230","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18631.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/230","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#230)"},{"Id":"395048075","IsPullRequest":false,"CreatedAt":"2019-01-01T01:36:55","Actor":"stefanolson","Number":"229","RawContent":null,"Title":"ValidationContext missing ServiceContainer","State":"open","Body":"* .NET Core Version: 3.0 Preview1\r\n* Windows version: 10 1809\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n **Problem description:**\r\nThis code compiles fine in WPF for the .net framework. It is using a validation context within a validation context to deal with collection/child classes. therefore it needs to be able to pass the current service container through to the the new validation context. Whilst the validation context has a service container parameter, there seems to be no way to access the service container:\r\n`ValidationContext validationContext;\r\n\r\nvar context = new ValidationContext(val, validationContext.ServiceContainer, null);`\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nCompile time error: 'ValidationContext' does not contain a definition for 'ServiceContainer' and no accessible extension method 'ServiceContainer' accepting a first argument of type 'ValidationContext' could be found\r\n\r\n **Expected behavior:**\r\n no compile time error.\r\n\r\n **Minimal repro:**\r\n See above.","Url":"https://github.com/dotnet/wpf/issues/229","RelatedDescription":"Open issue \"ValidationContext missing ServiceContainer\" (#229)"},{"Id":"394977608","IsPullRequest":true,"CreatedAt":"2018-12-31T13:08:16","Actor":"dotnet-maestro[bot]","Number":"228","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18630.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/228","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#228)"},{"Id":"394789612","IsPullRequest":false,"CreatedAt":"2018-12-31T05:17:13","Actor":"anirugu","Number":"223","RawContent":null,"Title":"Will Visual Studio 2019 will be based on .net core 3 ?","State":"closed","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Windows version: (`winver`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes/No\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n \r\n **Expected behaviour:**\r\n \r\n **Minimal repro:**\r\n \r\n I hear @coolcsh saying that we have used it internally and it's run quite well. It improves the performance of the overall app. WPF in .net core 3 is not going to Support Linux and Mac so there should not be a lot of trouble. They need to make it work on windows.\r\n\r\nSo upcoming Visual Studio will be based on .net framework or .net core 3.\r\n","Url":"https://github.com/dotnet/wpf/issues/223","RelatedDescription":"Closed issue \"Will Visual Studio 2019 will be based on .net core 3 ?\" (#223)"},{"Id":"394870538","IsPullRequest":true,"CreatedAt":"2018-12-30T13:08:10","Actor":"dotnet-maestro[bot]","Number":"227","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18629.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/227","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#227)"},{"Id":"394863434","IsPullRequest":false,"CreatedAt":"2018-12-30T11:03:44","Actor":"ghost1372","Number":"226","RawContent":null,"Title":"Persian Calendar Support","State":"open","Body":"Hi, I hope to send this request at the right place\r\nIn all previous versions of .NET Framework, if we want to display a Persian calendar (Calendar Control), only the name of some months is translated, It's actually the same as the Gregorian calendar (Only the name of the moon has been translated)\r\nFortunately, in Windows 10, we can fully use the Persian calendar, We can also use it in UWP apps But we can not use in wpf!\r\nso please Supprot Persian Calendar  for WPF\r\ntnx","Url":"https://github.com/dotnet/wpf/issues/226","RelatedDescription":"Open issue \"Persian Calendar Support\" (#226)"},{"Id":"394840153","IsPullRequest":false,"CreatedAt":"2018-12-30T02:15:28","Actor":"AlexeiScherbakov","Number":"225","RawContent":null,"Title":"Visual Studio 2017 .NET Core 3.0 debugger conflict with intellitrace","State":"open","Body":"* .NET Core Version: 3.0.0-preview-27122-01 (SDK 3.0.100-preview-009812) \r\n* Windows version: Windows 10 x64 1803 (17134.472)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\nWhen:\r\n\r\n1. Intellitrace is enabled\r\n2. Debugging of .NET Core 3.0 WPF App\r\n3. Click on button on second window shown as dialog\r\n\r\nVisual Studio 2017 (15.9.4)  debugger process (msvsmon.exe) exits unexpectedly and debug session is terminated with started application.\r\n\r\nWhen application is started via .exe file it works normally.\r\nWhen application is started in Visual Studio version without Intellitrace, or Intellitrace is explicitly disabled - all works normal\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/225","RelatedDescription":"Open issue \"Visual Studio 2017 .NET Core 3.0 debugger conflict with intellitrace\" (#225)"},{"Id":"394794203","IsPullRequest":true,"CreatedAt":"2018-12-29T13:08:04","Actor":"dotnet-maestro[bot]","Number":"224","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18627.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/224","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#224)"},{"Id":"394389520","IsPullRequest":true,"CreatedAt":"2018-12-27T13:08:22","Actor":"dotnet-maestro[bot]","Number":"221","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18621.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/221","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#221)"},{"Id":"394496857","IsPullRequest":false,"CreatedAt":"2018-12-27T05:57:53","Actor":"stdcppdev","Number":"222","RawContent":null,"Title":"Default WPF project self-contained application cannot run on a pure windows 7 SP1","State":"open","Body":"\r\n# Default WPF project self-contained application cannot run on a pure windows 7 SP1\r\nHi all,\r\nI am a WPF app developer and I'm trying to deploy the net core 3.0 wpf app to Windows 7 but it failed.\r\n\r\n# Reproduction Steps\r\n1. Install .NET Core v3.0.0-preview-27122-01\r\n2. use the command line \"dotnet new wpf -o C:\\test_wpf\" to create an WPF project.\r\n3. use the command line \"dotnet publish -c Release --self-contained\" to publish.\r\n4. copy the published folder to a new installed pure Windows 7 machine.\r\n5. Install KB2533623 / KB2999226 follow the doc\r\n    https://docs.microsoft.com/en-us/dotnet/core/windows-prerequisites?tabs=netcore2x\r\n6. Run the application and nothing happened. the exe start and then it ends after a few seconds.","Url":"https://github.com/dotnet/wpf/issues/222","RelatedDescription":"Open issue \"Default WPF project self-contained application cannot run on a pure windows 7 SP1\" (#222)"},{"Id":"394224375","IsPullRequest":true,"CreatedAt":"2018-12-26T19:06:21","Actor":"hughbe","Number":"220","RawContent":null,"Title":" Fix NullReferenceException in XamlType.Equals/XamlType.GetHashCode","State":"open","Body":"Fixes https://github.com/dotnet/wpf/issues/217\r\n\r\nThe issue here is that `XamlType._namespaces` can actually be null, for example when a `XamlType` is constructed using the `XamlType(string typeName, IList<XamlType> typeArguments, XamlSchemaContext schemaContext` constructor","Url":"https://github.com/dotnet/wpf/pull/220","RelatedDescription":"Open PR \" Fix NullReferenceException in XamlType.Equals/XamlType.GetHashCode\" (#220)"},{"Id":"394223146","IsPullRequest":false,"CreatedAt":"2018-12-26T18:58:19","Actor":"livarcocc","Number":"219","RawContent":null,"Title":"PresentationFramework.Aero not included by default when compiling against .NET Framework","State":"open","Body":"@twsouthwick commented on [Wed Nov 28 2018](https://github.com/dotnet/sdk/issues/2703)\n\nI'm porting an app that relies on `PresentationFramework.Aero` for `ButtonChrome` and found I need to include the following in the csproj to get it to compile when building for .NET Framework 4.7.1:\r\n\r\n```xml\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'net471'\">\r\n    <Reference Include=\"PresentationFramework.Aero\" />\r\n  </ItemGroup\r\n```\r\n\r\nIs there a reason this isn't automatically included when setting `<UseWindowsForms>true</UseWindowsForms>`?\n\n---\n\n@livarcocc commented on [Wed Nov 28 2018](https://github.com/dotnet/sdk/issues/2703#issuecomment-442659308)\n\nFrom talking to @rladuca it seems like this is not added by default for non-sdk based projects either. So, it seems like we are keeping with the current behavior.\r\n\r\nAlso, this is a WPF theme, so I am not sure how it relates to `UseWindowsForms` flag, as that is for WinForms and not WPF.\n\n---\n\n@rladuca commented on [Wed Nov 28 2018](https://github.com/dotnet/sdk/issues/2703#issuecomment-442660748)\n\nThat's correct, the set of binaries that are referenced when you make a new desktop framework WPF application do not include PresentationFramework.Aero.  This is also not referenced from a new Windows Forms application.\r\n\r\nAdding the reference manually seems to be entirely appropriate.\r\n\r\n@twsouthwick Are you saying that compiling for netcoreapp3.0 does automatically reference PresentationFramework.Aero?\n\n---\n\n@twsouthwick commented on [Wed Nov 28 2018](https://github.com/dotnet/sdk/issues/2703#issuecomment-442687337)\n\nSorry for the confusion - I meant `<UseWPF>true</UseWPF>`. The project has both of them and copied the first one I have.\r\n\r\n@rladuca The project compiles fine for netcoreapp3.0, but now that I'm looking at it, it doesn't reference `PresentationFramework.Aero`. The file that references the aero library is here: https://github.com/twsouthwick/HandBrake/blob/netcore/win/CS/HandBrakeWPF/Themes/Generic.xaml.\n\n","Url":"https://github.com/dotnet/wpf/issues/219","RelatedDescription":"Open issue \"PresentationFramework.Aero not included by default when compiling against .NET Framework\" (#219)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-01-10T05:31:03.5809416Z","RunDurationInMilliseconds":544}