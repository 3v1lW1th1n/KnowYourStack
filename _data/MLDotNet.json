{"Data":{"GitHub":{"Issues":[{"Id":"331484059","IsPullRequest":true,"CreatedAt":"2018-06-12T23:22:43","Actor":"justinormont","Number":"348","RawContent":null,"Title":"Minor formatting in CollectionDataSourceTests.cs","State":"closed","Body":"Corrects misplaced spaces in CollectionDataSourceTests.cs","Url":"https://github.com/dotnet/machinelearning/pull/348","RelatedDescription":"Closed or merged PR \"Minor formatting in CollectionDataSourceTests.cs\" (#348)"},{"Id":"331752651","IsPullRequest":true,"CreatedAt":"2018-06-12T21:03:22","Actor":"Ivanidzo4ka","Number":"351","RawContent":null,"Title":"Remove reference and dependency on System.ValueTuple","State":"open","Body":"address #350 ","Url":"https://github.com/dotnet/machinelearning/pull/351","RelatedDescription":"Open PR \"Remove reference and dependency on System.ValueTuple\" (#351)"},{"Id":"331752523","IsPullRequest":false,"CreatedAt":"2018-06-12T21:03:00","Actor":"Ivanidzo4ka","Number":"350","RawContent":null,"Title":"We no longer need dependency on System.ValueTuple","State":"open","Body":"No point to drag additional dependency for package which we no longer consume.","Url":"https://github.com/dotnet/machinelearning/issues/350","RelatedDescription":"Open issue \"We no longer need dependency on System.ValueTuple\" (#350)"},{"Id":"330077268","IsPullRequest":true,"CreatedAt":"2018-06-12T20:12:45","Actor":"zeahmed","Number":"324","RawContent":null,"Title":"Using named-tuple in OneToOneTransforms' constructor to make API more readable.","State":"closed","Body":"This is a partial fix to #274 without breaking anything.\r\n\r\n- Using named-tuple in the constructor instead of unnamed-tuple.\r\n- Renamed the parameters of methods.","Url":"https://github.com/dotnet/machinelearning/pull/324","RelatedDescription":"Closed or merged PR \"Using named-tuple in OneToOneTransforms' constructor to make API more readable.\" (#324)"},{"Id":"331705127","IsPullRequest":false,"CreatedAt":"2018-06-12T18:36:29","Actor":"rogancarr","Number":"349","RawContent":null,"Title":"Enable fault tolerance in FastTree for distributed learning","State":"open","Body":"As we plan to add distributed training to ML.NET, we have to consider Fault Tolerance of the individual worker nodes. In the case of FastTree, fault tolerance for individual workers has two requirements:\r\n- Failed FastTree workers must be restarted in the current state of the calculation\r\n- Non-failing workers must respond to failures in the IParallelTraining components*\r\n\r\n*This response depends on the implementation of fault tolerance.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/349","RelatedDescription":"Open issue \"Enable fault tolerance in FastTree for distributed learning\" (#349)"},{"Id":"331285976","IsPullRequest":false,"CreatedAt":"2018-06-12T17:20:49","Actor":"zeahmed","Number":"345","RawContent":null,"Title":"CSharpApiGenerator.cs does not generate compile-able code...","State":"closed","Body":"CSharpApiGenerator.cs does not generate compile-able code. Some types have been moved around in different namespaces which are causing error during compilation.\r\n\r\nThis happened after the PR #61 was merged. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/345","RelatedDescription":"Closed issue \"CSharpApiGenerator.cs does not generate compile-able code...\" (#345)"},{"Id":"330811369","IsPullRequest":true,"CreatedAt":"2018-06-12T17:20:33","Actor":"Ivanidzo4ka","Number":"339","RawContent":null,"Title":"fix namespace issue in CSharpGenerator and some refactoring","State":"closed","Body":"address #202 #345","Url":"https://github.com/dotnet/machinelearning/pull/339","RelatedDescription":"Closed or merged PR \"fix namespace issue in CSharpGenerator and some refactoring\" (#339)"},{"Id":"331043393","IsPullRequest":true,"CreatedAt":"2018-06-12T03:17:49","Actor":"BeanHsiang","Number":"344","RawContent":null,"Title":"enabled developer naming their column same as valid v…","State":"closed","Body":"fiexed for #318，enabled developer naming their column same as valid variable name","Url":"https://github.com/dotnet/machinelearning/pull/344","RelatedDescription":"Closed or merged PR \"enabled developer naming their column same as valid v…\" (#344)"},{"Id":"331369471","IsPullRequest":false,"CreatedAt":"2018-06-11T22:14:20","Actor":"zeahmed","Number":"347","RawContent":null,"Title":"Use schema from trained model instead of inferring it again from type when creating prediction engine.","State":"open","Body":"### System information\r\n\r\n- **Windows/Linux/MacOS**:\r\n- **.NET Version: 2.1.200**: \r\n\r\n### Issue\r\n\r\n- **Defining custom schema using TextLoaderArguments in TextLoader?**\r\n- **Training failed when creating prediction engine?**\r\n- **Expect that `CreateBatchPredictionEngine` should use schema from trained model instead of inferring schema again from input type?**\r\n\r\n### Source code / logs\r\n\r\n``` C#\r\npublic class IrisData\r\n{\r\n    public float Label;\r\n\r\n    public float[] Features;\r\n}\r\n\r\npublic class IrisPrediction\r\n{\r\n    [ColumnName(\"Score\")]\r\n    public float[] PredictedLabels;\r\n}\r\n        \r\npublic void SampleTest()\r\n{\r\n    string dataPath = GetDataPath(\"iris.txt\");\r\n\r\n    var pipeline = new LearningPipeline(seed: 1, conc: 1);\r\n\r\n    pipeline.Add(new TextLoader(dataPath)\r\n    {\r\n        Arguments = new TextLoaderArguments\r\n        {\r\n            Separator = new[] { '\\t' },\r\n            HasHeader = true,\r\n            Column = new[]\r\n            {\r\n                new TextLoaderColumn()\r\n                {\r\n                    Name = \"Label\",\r\n                    Source = new [] { new TextLoaderRange(0) },\r\n                    Type = Runtime.Data.DataKind.Num\r\n                },\r\n\r\n                new TextLoaderColumn()\r\n                {\r\n                    Name = \"Features\",\r\n                    Source = new [] { new TextLoaderRange(1,4) },\r\n                    Type = Runtime.Data.DataKind.Num\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    pipeline.Add(new StochasticDualCoordinateAscentClassifier()\r\n    {\r\n        NormalizeFeatures = NormalizeOption.No\r\n    });\r\n\r\n    PredictionModel<IrisData, IrisPrediction> model = pipeline.Train<IrisData, IrisPrediction>();\r\n\r\n    IrisPrediction prediction = model.Predict(new IrisData()\r\n    {\r\n        Features = new[] { 3.3f, 1.6f, 0.2f, 5.1f }\r\n    });\r\n\r\n    Assert.Equal(1, prediction.PredictedLabels[0], 2);\r\n    Assert.Equal(0, prediction.PredictedLabels[1], 2);\r\n    Assert.Equal(0, prediction.PredictedLabels[2], 2);\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/347","RelatedDescription":"Open issue \"Use schema from trained model instead of inferring it again from type when creating prediction engine.\" (#347)"},{"Id":"330437371","IsPullRequest":true,"CreatedAt":"2018-06-11T19:50:47","Actor":"zeahmed","Number":"327","RawContent":null,"Title":"Enabled '_' in the field/column name in input type. ","State":"closed","Body":"This PR fixes issue #318 \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/327","RelatedDescription":"Closed or merged PR \"Enabled '_' in the field/column name in input type. \" (#327)"},{"Id":"331310502","IsPullRequest":false,"CreatedAt":"2018-06-11T19:01:13","Actor":"helloguo","Number":"346","RawContent":null,"Title":"ParallelTraining API","State":"open","Body":"Can anyone explain what `ParallelTraining` is and how to use it? And what's the difference between `ParallelTraining` and `SingleParallelTraining`?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/346","RelatedDescription":"Open issue \"ParallelTraining API\" (#346)"},{"Id":"330785950","IsPullRequest":false,"CreatedAt":"2018-06-11T09:26:30","Actor":"rlingineni","Number":"336","RawContent":null,"Title":"Load data into LearningPipeline without TextLoader","State":"closed","Body":"**Question:**\r\n\r\nSo I'm actually capturing my data directly from an array of sensors, and these are currently in memory. I don't have millions of datapoints, just a few hundred. I do not want to write them to file. Is TextLoader is the only way as of now to ingest data to `LearningPipeline`? \r\n\r\nI wondering if I could point to an array of objects instead of a text file to load them up, is there any alternate way I could ingest data?","Url":"https://github.com/dotnet/machinelearning/issues/336","RelatedDescription":"Closed issue \"Load data into LearningPipeline without TextLoader\" (#336)"},{"Id":"330535975","IsPullRequest":false,"CreatedAt":"2018-06-11T06:05:47","Actor":"prisar","Number":"331","RawContent":null,"Title":"Async Main is not taken as entrypoint in c# 7.0","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows Server 2016 \r\n- **.NET Version (eg., dotnet --info)**: Core 2.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTried to use static async Main\r\n- **What happened?**\r\nCouldn't build\r\n- **What did you expect?**\r\nBuild without error\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/331","RelatedDescription":"Closed issue \"Async Main is not taken as entrypoint in c# 7.0\" (#331)"},{"Id":"330990596","IsPullRequest":false,"CreatedAt":"2018-06-10T18:19:42","Actor":"cosmincatalin","Number":"343","RawContent":null,"Title":"Predict hangs indefinetly","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Mac OS X 10.13\r\n- **.NET Version (eg., dotnet --info)**:  2.0.5\r\n\r\n### Issue\r\n\r\n- I have a `.csv` file with data that I use for individual predictions. I use a `FastTreeRegressor` model loaded from disk. I make individual predictions and not batch predictions because I need the absolute error histogram. At first, predicting works fine, but then, after what appears to be a random number of executions, the `Predict` method hangs without anything else happening.\r\n- I expect either `Predict` failing with some Exception, or better, fail for the same example or, even better, `Predict` to work for all my examples, which it should.\r\n\r\nBy _random_ I mean that I have a few million examples I have to go through, but predicting stops anywhere between after a few hundreds predictions or at best after a few thousands.\r\n\r\n### Source code / logs\r\n\r\nThe stripped down source code for `Program.cs`. Note that I have also tried with version `0.2`\r\n\r\n```\r\nusing System;\r\nusing System.IO;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.ML;\r\nusing PredictionModelling;\r\n\r\nnamespace PredictionMetrics\r\n{\r\n    class Program\r\n    {\r\n\r\n        static async Task Main(string[] args)\r\n        {\r\n            foreach (string culture in cultures)\r\n            {\r\n                var model = await PredictionModel.ReadAsync<Data, DataPrediction>(\"model.zip\");\r\n                StreamReader file = new StreamReader(\"test.csv\");\r\n\r\n                file.ReadLine(); // This is for the header\r\n\r\n                string line;\r\n\r\n                using (StreamWriter outputFile = new StreamWriter(\"test-predictions.csv\"))\r\n                {\r\n                    var i = 0;\r\n                    outputFile.WriteLine($\"actual-value,predicted-value\");\r\n                    while ((line = file.ReadLine()) != null)\r\n                    {\r\n                        var data = line.Split(new[] { ',' });\r\n                        var data = new Data()\r\n                        {\r\n                            Feature0 = float.Parse(data[0]),\r\n                            Feature1 = float.Parse(data[1])\r\n                        };\r\n                        var csvLine = $\"{data[2]},{model.Predict(data).Value}\";\r\n                        outputFile.WriteLine(csvLine);\r\n                        i++;\r\n                        if (i % 100 == 0)\r\n                        {\r\n                            outputFile.Flush();\r\n                        }\r\n                    }\r\n                }\r\n                file.Close();\r\n            }\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/343","RelatedDescription":"Open issue \"Predict hangs indefinetly\" (#343)"},{"Id":"330952887","IsPullRequest":false,"CreatedAt":"2018-06-10T09:10:07","Actor":"BeanHsiang","Number":"342","RawContent":null,"Title":"Could TrainTestSplit support Shuffle?","State":"open","Body":"the class \"TrainTestSplit\" only support \"Fraction\" in TrainTestSplit.Input current, \"Shuffle\" is other important attribute. \r\nCould ML.NET support \"Shuffle & Split\" next version?","Url":"https://github.com/dotnet/machinelearning/issues/342","RelatedDescription":"Open issue \"Could TrainTestSplit support Shuffle?\" (#342)"},{"Id":"330843823","IsPullRequest":false,"CreatedAt":"2018-06-09T02:01:28","Actor":"TomFinley","Number":"341","RawContent":null,"Title":"Should entry-points respect `HideEnumValueAttribute` information?","State":"open","Body":"The `HideEnumValueAttribute` is currently only respected by the command line help tool. Here is an example of it:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/c023727b76970ab913ec1ce38276508835c17bcf/src/Microsoft.ML.Transforms/NAHandleTransform.cs#L45-L52\r\n\r\nYet in the entry-point manifest I see is polluted with these shorter forms. I feel like these *probably* ought to be suppressed here during manifest generation as well.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/20099c31a9ca2d9c50eff299b8ce6f7be5d72346/test/BaselineOutput/Common/EntryPoints/core_manifest.json#L15620-L15632\r\n\r\nAlso the entry-point based API is affected by the same issue, of course.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/20099c31a9ca2d9c50eff299b8ce6f7be5d72346/src/Microsoft.ML/CSharpApi.cs#L11162-L11169","Url":"https://github.com/dotnet/machinelearning/issues/341","RelatedDescription":"Open issue \"Should entry-points respect `HideEnumValueAttribute` information?\" (#341)"},{"Id":"330842719","IsPullRequest":false,"CreatedAt":"2018-06-09T01:43:58","Actor":"rlingineni","Number":"340","RawContent":null,"Title":"Will this work with PCL Projects? ","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: iOS/Android\r\n\r\n### Issue\r\n- **What did you do?**\r\nI was experimenting running this on a Xamarin Mobile app (Xam.Forms). I was able to install the nuget package into my project, which targets PCL. However, no luck in getting it to work.\r\n\r\n- **What happened?**\r\nEntry point 'Trainers.StochasticDualCoordinateAscentClassifier' not found\r\n\r\n- **What did you expect?**\r\nI expected the program to run.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\n```\r\nvar pipeline = new LearningPipeline();\r\nvar data = new List<TranscriptionData>() {\r\n    new TranscriptionData { Transcription=\"This is a Happy presnetation!!\" , clicked=1},\r\n    new TranscriptionData { Transcription=\"Very sad now\" , clicked=0},\r\n    new TranscriptionData { Transcription=\"This is sad also\" , clicked=0}\r\n };\r\n\r\n     var collection = CollectionDataSource.Create(data);\r\n     pipeline.Add(collection);\r\n     pipeline.Add(new ColumnConcatenator(\"Features\", \"Transcription\"));\r\n     pipeline.Add(new StochasticDualCoordinateAscentClassifier()); //ERROR: any classifier here fails with entry point\r\n     PredictionModel<TranscriptionData, TranscriptionPrediction> model = pipeline.Train<TranscriptionData,TranscriptionPrediction>();\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/340","RelatedDescription":"Open issue \"Will this work with PCL Projects? \" (#340)"},{"Id":"330789524","IsPullRequest":true,"CreatedAt":"2018-06-08T20:15:54","Actor":"yaeldekel","Number":"338","RawContent":null,"Title":"Create CalibratedPredictor instead of SchemaBindableCalibratedPredictor","State":"open","Body":"Whenever the predictor implements IValueMapper, we create a calibrated predictor that implements IValueMapperDist. If the predictor is not an IValueMapper, we create SchemaBindableCalibratedPredictor.\r\nFixes #337 .","Url":"https://github.com/dotnet/machinelearning/pull/338","RelatedDescription":"Open PR \"Create CalibratedPredictor instead of SchemaBindableCalibratedPredictor\" (#338)"},{"Id":"330788591","IsPullRequest":false,"CreatedAt":"2018-06-08T20:12:31","Actor":"yaeldekel","Number":"337","RawContent":null,"Title":"OVA macro can't handle trainers that create SchemaBindableCalibratedPredictor","State":"open","Body":"The solution is to create the CalibratedPredictor (which implements IValueMapperDist, the interfaced used by OVA) whenever possible.","Url":"https://github.com/dotnet/machinelearning/issues/337","RelatedDescription":"Open issue \"OVA macro can't handle trainers that create SchemaBindableCalibratedPredictor\" (#337)"},{"Id":"330733393","IsPullRequest":false,"CreatedAt":"2018-06-08T19:30:53","Actor":"Ivanidzo4ka","Number":"334","RawContent":null,"Title":"solution file contain link to  non existent project","State":"closed","Body":"Where is no src\\Microsoft.ML.Commands project in our codebase\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{09EADF06-BE25-4228-AB53-95AE3E15B530}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\tsrc\\Microsoft.ML.Commands\\Microsoft.ML.Commands.csproj = src\\Microsoft.ML.Commands\\Microsoft.ML.Commands.csproj\r\n\tEndProjectSection\r\nEndProject\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/334","RelatedDescription":"Closed issue \"solution file contain link to  non existent project\" (#334)"},{"Id":"330736894","IsPullRequest":true,"CreatedAt":"2018-06-08T17:45:02","Actor":"Ivanidzo4ka","Number":"335","RawContent":null,"Title":"Remove unexisting project from solution","State":"closed","Body":"Address #334 ","Url":"https://github.com/dotnet/machinelearning/pull/335","RelatedDescription":"Closed or merged PR \"Remove unexisting project from solution\" (#335)"},{"Id":"330441759","IsPullRequest":false,"CreatedAt":"2018-06-08T15:42:24","Actor":"helloguo","Number":"328","RawContent":null,"Title":"v 0.2.0 does not support BinaryLogisticRegressor and LogisticRegressor","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro Windows 10**:\r\n- **.NET Version 2.1.300-rc1-008673**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nsrc:\r\n```\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Models;\r\nusing Microsoft.ML.Trainers;\r\nusing Microsoft.ML.Transforms;\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace mlnettest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            test1();\r\n            test2();\r\n        }\r\n\r\n        static void test1()\r\n        {\r\n            var pipeline = new LearningPipeline();\r\n            pipeline.Add(new BinaryLogisticRegressor());\r\n        }\r\n\r\n        static void test2()\r\n        {\r\n            var pipeline = new LearningPipeline();\r\n            pipeline.Add(new LogisticRegressor());\r\n        }\r\n    }\r\n}\r\n```\r\ncsproj\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ML\" Version=\"0.2.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n- **What happened?**\r\nerror msg when I run `dotnet run`:\r\n```\r\nProgram.cs(23,30): error CS0246: The type or namespace name 'BinaryLogisticRegressor' could not be found (are you missing a using directive or an assembly reference?) [C:\\Users\\guo\\Desktop\\mlnettest\\mlnettest.csproj]\r\nProgram.cs(29,30): error CS0246: The type or namespace name 'LogisticRegressor' could not be found (are you missing a using directive or an assembly reference?) [C:\\Users\\guo\\Desktop\\mlnettest\\mlnettest.csproj]\r\n```\r\n- **What did you expect?**\r\nIf I use v0.1.0 `<PackageReference Include=\"Microsoft.ML\" Version=\"0.1.0\" />`, the code can run without any issue. I was wondering why v0.2.0 does not support these two learners?\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/328","RelatedDescription":"Closed issue \"v 0.2.0 does not support BinaryLogisticRegressor and LogisticRegressor\" (#328)"},{"Id":"330630799","IsPullRequest":false,"CreatedAt":"2018-06-08T12:00:57","Actor":"prisar","Number":"333","RawContent":null,"Title":"System.DllNotFoundException: Unable to load DLL 'CpuMathNative'","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows Server 2016 Standard\r\n- **.NET Version (eg., dotnet --info)**: Core 2.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nWhen trying to load model from a file `var model = PredictionModel.ReadAsync<IrisData, IrisPrediction>(modelPath).Result;` gives DllNotFoundException while running in windows container.\r\n- **What happened?**\r\nInternal Server Error\r\n- **What did you expect?**\r\nModel should be loaded in model variable.\r\n### Source code / logs\r\n```\r\nSystem.DllNotFoundException: Unable to load DLL 'CpuMathNative': The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\n   at Microsoft.ML.Runtime.Internal.CpuMath.Thunk.DotU(Single* pa, Single* pb, Int32 c)\r\n   at Microsoft.ML.Runtime.Internal\r\n1000\r\n.CpuMath.SseUtils.DotProductDense(Single[] a, Single[] b, Int32 count)\r\n   at Microsoft.ML.Runtime.Learners.MulticlassLogisticRegressionPredictor.PredictCore(VBuffer`1& src, Single[]& dst)\r\n   at Microsoft.ML.Runtime.Learners.MulticlassLogisticRegressionPredictor.<GetMapper>b__30_0[TSrc,TDst](VBuffer`1& src, VBuffer`1& dst)\r\n   at Microsoft.ML.Runtime.Data.PredictedLabelScorerBase.EnsureCachedPosition[TScore](Int64& cachedPosition, TScore& score, IRow boundRow, ValueGetter`1 scoreGetter)\r\n   at Microsoft.ML.Runtime.Data.MultiClassClassifierScorer.<>c__DisplayClass14_0.<GetPredictedLabelGetter>b__0(UInt32& dst)\r\n   at Microsoft.ML.Runtime.Data.KeyToValueTransform.KeyToValueMap`2.<>c__DisplayClass7_0.<GetMappingGetter>b__0(TValue& dst)\r\n   at Microsoft.ML.Runtime.Data.DataViewUtils.Splitter.Consolidator.<>c__DisplayClass4_1.<ConsolidateCore>b__2()\r\n\r\n```Please paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/333","RelatedDescription":"Open issue \"System.DllNotFoundException: Unable to load DLL 'CpuMathNative'\" (#333)"},{"Id":"330596962","IsPullRequest":false,"CreatedAt":"2018-06-08T10:02:13","Actor":"prisar","Number":"332","RawContent":null,"Title":"TextLoader is different in 0.1.0 and 0.2.0","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: 2016\r\n- **.NET Version (eg., dotnet --info)**: 2.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTrying to use `new TextLoader<IrisData>(dataPath, separator: \",\")` in 0.2.0\r\n- **What happened?**\r\nShows error\r\n- **What did you expect?**\r\nPlease give a documentation for new changes in 0.2.0\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/332","RelatedDescription":"Open issue \"TextLoader is different in 0.1.0 and 0.2.0\" (#332)"},{"Id":"330471837","IsPullRequest":true,"CreatedAt":"2018-06-07T23:56:00","Actor":"mitevpi","Number":"330","RawContent":null,"Title":"Added more details to the NumTrees argument in FastTree ","State":"closed","Body":"This PR fixes issue #223. Added more specificity to the NumTrees (number of trees) argument's help text within the FastTree class.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/330","RelatedDescription":"Closed or merged PR \"Added more details to the NumTrees argument in FastTree \" (#330)"},{"Id":"330448071","IsPullRequest":false,"CreatedAt":"2018-06-07T23:20:50","Actor":"helloguo","Number":"329","RawContent":null,"Title":"Unhandled Exception when using OrdinaryLeastSquaresRegressor","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro Windows 10**:\r\n- **.NET Version 2.1.300-rc1-008673**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI replace `FastTreeRegressor` with `OrdinaryLeastSquaresRegressor` in sample Regression_TaxiFarePrediction https://github.com/dotnet/machinelearning-samples/blob/master/samples/getting-started/Regression_TaxiFarePrediction/Program.cs#L65\r\n- **What happened?**\r\nerror msg:\r\n```\r\n=============== Training model ===============\r\nAutomatically adding a MinMax normalization transform, use 'norm=Warn' or 'norm=No' to turn this behavior off.\r\n  Bad value at line 1 in column PassengerCount\r\n  Bad value at line 1 in column TripDistance\r\nProcessed 100001 rows with 2 bad values and 0 format errors\r\n  Bad value at line 1 in column PassengerCount\r\n  Bad value at line 1 in column TripDistance\r\n  Bad value at line 1 in column FareAmount\r\nProcessed 100001 rows with 3 bad values and 0 format errors\r\nTrainer solving for 19 parameters across 100000 examples\r\n\r\nUnhandled Exception: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.NotSupportedException: The MKL library (Microsoft.ML.MklImports.dll) or one of its dependencies is missing.\r\n   at Microsoft.ML.Runtime.Learners.OlsLinearRegressionTrainer.TrainCore(IChannel ch, Factory cursorFactory, Int32 featureCount)\r\n   at Microsoft.ML.Runtime.Learners.OlsLinearRegressionTrainer.Train(RoleMappedData examples)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)\r\n   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)\r\n   at Microsoft.ML.Runtime.Data.TrainUtils.TrainCore(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, String name, RoleMappedData validData, ICalibratorTrainer calibrator, Int32 maxCalibrationExamples, Nullable`1 cacheData, IPredictor inpPredictor)\r\n   at Microsoft.ML.Runtime.EntryPoints.LearnerEntryPointsUtils.Train[TArg,TOut](IHost host, TArg input, Func`1 createTrainer, Func`1 getLabel, Func`1 getWeight, Func`1 getGroup, Func`1 getName, Func`1 getCustom, ICalibratorTrainerFactory calibrator, Int32 maxCalibrationExamples)\r\n   at Microsoft.ML.Runtime.Learners.OlsLinearRegressionTrainer.TrainRegression(IHostEnvironment env, Arguments input)\r\n\r\n```\r\n- **What did you expect?**\r\nI was wondering how to use `OrdinaryLeastSquaresRegressor`?\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/329","RelatedDescription":"Closed issue \"Unhandled Exception when using OrdinaryLeastSquaresRegressor\" (#329)"},{"Id":"330146549","IsPullRequest":false,"CreatedAt":"2018-06-07T07:19:29","Actor":"dvdbot","Number":"326","RawContent":null,"Title":"Is it possible to visualize a generated decision tree?","State":"open","Body":"Like the title says, is it possible to visualize a generated decision tree based on the model?\r\nLike I heard it possible in Azure ML\r\n\r\nCurrently working on a project and would love to visualize the decision tree it generates so I can look for differences and test certain things.","Url":"https://github.com/dotnet/machinelearning/issues/326","RelatedDescription":"Open issue \"Is it possible to visualize a generated decision tree?\" (#326)"},{"Id":"330091005","IsPullRequest":false,"CreatedAt":"2018-06-07T02:04:43","Actor":"zhengchun","Number":"325","RawContent":null,"Title":"Does ML.NET supports Chinese?","State":"open","Body":"For example, A Chinese `长春市长春药店`  that have many ways to extract text.\r\n\r\nBigram algorithm, its simple and fast.\r\n```\r\n长春\r\n春市\r\n市长\r\n长春\r\n春药\r\n药店\r\n```\r\n\r\nStandard algorithm.\r\n```\r\n长春市\r\n长春\r\n药店\r\n```\r\n\r\nI noticed the ML.NET was include a `NGramNgramExtractor` class that supported N-Gram algorithm, does it  support Chinese? The `Transforms.TextTransformLanguage` includes `English,French,German,Dutch,Italian,Spanish,Japanese`.\r\n\r\nIf not, how to implement custom text segmentation for other language? Hope in the future version can support custom extract text feature.\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/325","RelatedDescription":"Open issue \"Does ML.NET supports Chinese?\" (#325)"},{"Id":"330074648","IsPullRequest":false,"CreatedAt":"2018-06-07T00:13:05","Actor":"lqdev","Number":"323","RawContent":null,"Title":"Return Centroids for KMeansPlusPlusClusterer After Training","State":"open","Body":"### Issue\r\n\r\nOnce training is complete on a KMeansPlusPlusClusterer algorithm in the `LearningPipeline`, provide a method of accessing the centroids. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/323","RelatedDescription":"Open issue \"Return Centroids for KMeansPlusPlusClusterer After Training\" (#323)"},{"Id":"330060335","IsPullRequest":false,"CreatedAt":"2018-06-06T22:53:47","Actor":"markusweimer","Number":"322","RawContent":null,"Title":"Release notes for 0.2 are not linked from the .sln, but those for 0.1 are","State":"open","Body":"When browsing the `docs` folder via Visual Studio, there are release notes for ML.NET 0.1 listed. However, the release notes for 0.2 are missing. They are, in fact, in the file system.\r\n\r\nWe should have a consistent scheme here: Either the files are always added to the solution file, or never.","Url":"https://github.com/dotnet/machinelearning/issues/322","RelatedDescription":"Open issue \"Release notes for 0.2 are not linked from the .sln, but those for 0.1 are\" (#322)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-06-13T05:30:36.3485454Z","RunDurationInMilliseconds":989}