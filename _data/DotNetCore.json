{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":69,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":226,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"},{"Id":"6854176970","Type":"IssuesEvent","CreatedAt":"2017-11-14T18:00:49","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Reopened issue \"Microsoft Security Advisory CVE-2017-11770 : Malformed Certificate can cause Denial of Service\" (#44) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2017-11770 \r\n## Malformed Certificate can cause Denial of Service\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public version of .NET Core where a malformed certificate or other ASN.1 formatted data could lead to a denial of service via an infinite loop on Linux and macOS.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.8, 1.1.5 and 2.0.1. Developers are advised to update their .NET Core SDK to version 2.0.3 or 1.1.5.\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\n.NET Core applications running on Windows are not affected by this vulnerability. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed blow and is running on Linux.\r\n\r\nPlatform  | Runtime Version | Fixed runtime version\r\n----------------|----------------| -------------------------\r\nLinux | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4<br />2.0.0 |  1.0.8<br />1.1.5<br />2.0.1\r\nmacOS | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4 |  1.0.8<br />1.1.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nAny application running against .NET Core 1.0.7 or lower, or 1.1.2 or lower, or 2.0.0 is affected. The default version of the .NET core runtime can be listed by running `dotnet --info`, which should produce output in the form of \r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n```\r\n\r\nAs this only displays the latest version of the runtime installed it may hide the fact that you have a vulnerable runtime. A complete list of runtimes can be discovered by performing a directory listing in the install root directories. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.8, 1.1.5 or 2.0.1 then any applications targeting .NET Core will be vulnerable.\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Version 1.1.5 will also install version 1.0.8 of the runtime.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### Acknowledgments\r\n\r\nThanks to Bachraty Gergely for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2017-11770](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8585)\r\n\r\n### Revisions\r\n\r\nV1.0 (Nov 14, 2017): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2017-11-14_"},{"Id":"6853282986","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:23:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/48","RelatedDescription":"Closed issue \"Reserved\" (#48) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853280485","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:35","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Closed issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6969093115","Type":"PullRequestEvent","CreatedAt":"2017-12-11T02:46:11","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15460","RelatedDescription":"Opened pull request \"Improve Dictionary FindEntry CQ\" (#15460) at dotnet/coreclr","RelatedBody":"```\r\nTotal bytes of diff: -1158 (-0.03% of base)\r\n    diff is an improvement.\r\n\r\nTotal byte diff includes 0 bytes from reconciling methods\r\n        Base had    0 unique methods,        0 unique bytes\r\n        Diff had    0 unique methods,        0 unique bytes\r\n\r\nTop file improvements by size (bytes):\r\n       -1158 : System.Private.CoreLib.dasm (-0.03% of base)\r\n\r\n1 total files with size differences (1 improved, 0 regressed), 0 unchanged.\r\n\r\nTop method improvements by size (bytes):\r\n        -661 : System.Private.CoreLib.dasm - Dictionary`2:FindEntry(ref):int:this (11 methods)\r\n        -206 : System.Private.CoreLib.dasm - Dictionary`2:FindEntry(struct):int:this (7 methods)\r\n        -146 : System.Private.CoreLib.dasm - Dictionary`2:FindEntry(int):int:this (5 methods)\r\n        -108 : System.Private.CoreLib.dasm - Dictionary`2:FindEntry(long):int:this (4 methods)\r\n         -22 : System.Private.CoreLib.dasm - Dictionary`2:FindEntry(short):int:this\r\n         -15 : System.Private.CoreLib.dasm - Dictionary`2:FindEntry(char):int:this\r\n\r\n6 total methods with size differences (6 improved, 0 regressed), 16739 unchanged.\r\n```"},{"Id":"6969085752","Type":"PullRequestEvent","CreatedAt":"2017-12-11T02:42:56","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15459","RelatedDescription":"Merged pull request \"Improve Dictionary.Clear CQ\" (#15459) at dotnet/coreclr","RelatedBody":"11 byes less asm (92 => 81 asm bytes)\r\nOne less instruction per loop\r\nNo stack push + pop\r\nTail call into Array:Clear\r\nTotal bytes of diff: -319 (-0.01% of base)\r\n\r\nPTAL @jkotas "},{"Id":"6969043663","Type":"PullRequestEvent","CreatedAt":"2017-12-11T02:24:17","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15455","RelatedDescription":"Closed pull request \"Split Dictionary Resize -> Expand and Rehash\" (#15455) at dotnet/coreclr","RelatedBody":"Unify `OnDeserialization` initialization with .ctor `Initialize`\r\n\r\nSplit `Resize` -> `Expand` and `Rehash`\r\n\r\nRehashing is only used in `string` key variant so it doesn't need to be compiled in every Expand\r\nRehashing doesn't expand the Dictionary so it can reuse the existing arrays\r\nExpand doesn't need the extra param and loop that it always skips\r\nLoop CQ improvements\r\n\r\nShrinks the generic Resize (as Expand) from 497 bytes to 265 bytes\r\n\r\nPTAL @jkotas "},{"Id":"6968913995","Type":"PullRequestEvent","CreatedAt":"2017-12-11T01:20:24","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15459","RelatedDescription":"Opened pull request \"Improve Dict.Clear CQ\" (#15459) at dotnet/coreclr","RelatedBody":""},{"Id":"6968628778","Type":"IssuesEvent","CreatedAt":"2017-12-10T22:23:11","Actor":"mharthoorn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15458","RelatedDescription":"Opened issue \"ReadOnlySpan<T> ToString() leads to System.InvalidProgramException\" (#15458) at dotnet/coreclr","RelatedBody":"\r\n\r\nTried out System.Memory package\r\nhttps://www.nuget.org/packages/System.Memory/4.4.0-preview1-25305-02\r\n\r\nThe use of ReadOnlySpan.ToString() compiles correctly, but leads to an invalid program. \r\n\r\n*In Visual Studio 15.5:*\r\n\"Your app has entered a break state, but no code is currently executing that is supported by the   \r\nselected debug engine (e.g. only native runtime code is executing).\"\r\n\r\n*dotnet cli:*\r\n\"Unhandled Exception: System.InvalidProgramException: Common Language Runtime detected an invalid program. at SpanOfTest.Program.Main(String[] args)\"\r\n\r\nMinimal example that leads to this error\r\n```csharp\r\n  static void Main(string[] args)\r\n  {\r\n      var span = \"Hello world!\".AsSpan();\r\n      Console.WriteLine(span.ToString());\r\n  }\r\n```\r\n(Not sure if this is the right place to post this)"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6969405828","Type":"PullRequestEvent","CreatedAt":"2017-12-11T05:10:33","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8204","RelatedDescription":"Opened pull request \"Fixing CLI:master - parameterizing 'GenerateInstallersAndCopyOutOfSandBox'\" (#8204) at dotnet/cli","RelatedBody":"The target: 'GenerateInstallersAndCopyOutOfSandBox' should be parametrized in run-build.sh.\r\n\r\nTesting:\r\nprivate branch VSO build of \"AllLinuxDistrosNativeInstallers\": https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1211734&_a=summary\r\npublishing to private blob storage: https://dotnetcli.blob.core.windows.net/jbeisner/Sdk/2.2.0-preview1-007786/all_linux_distros_native_installer_Release_version_badge.svg\r\n\r\n"},{"Id":"6969204463","Type":"IssuesEvent","CreatedAt":"2017-12-11T03:34:13","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8203","RelatedDescription":"Opened issue \"dotnet restore on debian 9 dotnet sdk 2.0.3 fails to download any packages\" (#8203) at dotnet/cli","RelatedBody":"@dvogel commented on [Sun Dec 10 2017](https://github.com/dotnet/core/issues/1146)\n\nI downloaded the [minimal install of debian 9](https://gemmei.ftp.acc.umu.se/debian-cd/current/amd64/iso-cd/debian-9.3.0-amd64-netinst.iso) and installed it using defaults.\r\n\r\nThen I followed [the directions for installing dotnet sdk](https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore2x). I ran:\r\n\r\n```\r\nexport PATH=$PATH:$HOME/dotnet\r\nmkdir test0\r\ncd test0\r\ndotnet new mvc\r\ndotnet restore\r\n```\r\n\r\nThe restore command printed out:\r\n\r\n```\r\n  Restoring packages for /home/dvogel/test0/test0.csproj...\r\n  Restore completed in 39.83 ms for /home/dvogel/test0/test0.csproj.\r\n  Restore completed in 60.96 ms for /home/dvogel/test0/test0.csproj.\r\n```\r\n\r\nThat output looked successful at first but a subsequent `dotnet build` will fail due to missing packages. The `$HOME/.nuget/packages` directory is empty.\r\n\r\nHere's an OVA exported from virtualbox: http://acfa3ee7d7a82c5cc99c3982b6dab6ab.s3.amazonaws.com/dotnet-devel1.ova (password is \"microsoft\" for both the root and dvogel accounts).\r\n\r\nThe `PATH` change seems suspect because nothing is actually installed into `$HOME/dotnet` and the `dotnet` commands don't seem to create any files in that directory.\n\n"},{"Id":"6966677981","Type":"IssuesEvent","CreatedAt":"2017-12-09T21:23:49","Actor":"JamesCarter23","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8202","RelatedDescription":"Opened issue \"Project is failing to build through the dotnet cli, however compiles fine through VS2017 Community\" (#8202) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nAny command that implements a build of the project within the appropriate project directory  (ex: dotnet build). Occurs with all projects.\r\n\r\n## Expected  behavior\r\nThe project to be built successfully and the web application displayed.\r\n\r\n## Actual behavior\r\nError Codes: \r\nerror MSB3883: Unexpected exception.\r\nSystem.ComponentModel.Win32Exception (0x80004005): The system cannot find the file specified \r\n\r\n__Failed with 6 build errors. Listed below.__\r\n\r\nC:\\***\\source\\repos\\learningNetCore\\learningNetCore>dotnet build\r\nMicrosoft (R) Build Engine version 15.4.8.50001 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror MSB3883: Unexpected exception:  [C:\\***\\source\\repos\\learningNetCore\\l\r\nearningNetCore\\learningNetCore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : System.ComponentModel.Win32Exception (0x80004005): The system cannot find\r\nthe file specified [C:\\***\\source\\repos\\learningNetCore\\learningNetCore\\le\r\narningNetCore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo star\r\ntInfo) [C:\\***\\source\\repos\\learningNetCore\\learningNetCore\\learningNetCor\r\ne.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : at System.Diagnostics.Process.Start() [C:\\***\\source\\repos\\learningN\r\netCore\\learningNetCore\\learningNetCore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : at Microsoft.Build.Utilities.ToolTask.ExecuteTool(String pathToTool, Strin\r\ng responseFileCommands, String commandLineCommands) [C:\\***\\source\\repos\\l\r\nearningNetCore\\learningNetCore\\learningNetCore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.3\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): er\r\nror : at Microsoft.CodeAnalysis.BuildTasks.ManagedCompiler.ExecuteTool(String pa\r\nthToTool, String responseFileCommands, String commandLineCommands) [C:\\***\r\n\\source\\repos\\learningNetCore\\learningNetCore\\learningNetCore.csproj]\r\n\r\nBuild FAILED.\r\n\r\n## Environment data\r\n.NET Command Line Tools (2.0.3)\r\n\r\nProduct Information:\r\n Version:            2.0.3\r\n Commit SHA-1 hash:  12f0c7efcc\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.3\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n\r\n\r\nIf there is an obvious solution I'll happily slap myself but can't locate specifically where the problem lies. \r\nI'm trying to expand on my knowledge of C# by developing an ASP.NET CORE x2 Web Application but have realized that all my projects are failing to compile through the CMD.\r\n\r\n\r\n\r\n"},{"Id":"6965326053","Type":"PullRequestEvent","CreatedAt":"2017-12-09T04:37:50","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8201","RelatedDescription":"Merged pull request \"Fixing CLI:master - parameterizing the 'BuildAndPublishAllLinuxDistrosNativeInstallers'\" (#8201) at dotnet/cli","RelatedBody":"The first 'dotnet msbuild ' pass should not run 2 targets: 'WriteDynamicPropsToStaticPropsFiles' and 'BuildAndPublishAllLinuxDistrosNativeInstallers'. The target: 'BuildAndPublishAllLinuxDistrosNativeInstallers' should be parameterized.  \r\n\r\nExtra:\r\n'channel' parameter to dotnet-install.sh is superfluous if also using a 'version' parameter.\r\n\r\nTesting:\r\nReviewed command line output for both 'dotnet msbuild ' passes on Ubuntu 16.04 LTS Azure VM"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6964037348","Type":"IssuesEvent","CreatedAt":"2017-12-08T19:53:15","Actor":"jnm2","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/601","RelatedDescription":"Opened issue \"Understanding NETStandard.Library as a dependancy in my nuspec\" (#601) at dotnet/standard","RelatedBody":"Should a NETStandard.Library dependency appear in a nuspec?\r\n\r\nWhat does it do to projects that reference the nupkg versus not having it in the nuspec? If my netstandard1.6 library chooses to depend on 1.6.1, doesn't that force any dependent library to also depend on 1.6.1+? Is that a good thing and is that why you'd put it in a nuspec?\r\n\r\nOut of 1.6.0, 1.6.1, 2.0.0, and 2.0.1, the SDK picks 1.6.1 and 2.0.0 to reference for netstandard1.6 and netstandard2.0. Why not 2.0.1 for both?\r\n\r\nIs there a changelog that summarizes the differences in 1.6.1, 2.0.0 and 2.0.1?\r\n\r\nAre there docs that answer these questions? This is the only information I've been able to glean so far which hints that keeping it in the nuspec is correct, but it doesn't answer any of my other questions: \r\n![image](https://user-images.githubusercontent.com/8040367/33782541-21670bc0-dc27-11e7-9071-ac023a71c840.png)\r\n(https://docs.microsoft.com/en-us/nuget/guides/create-net-standard-packages-vs2017#package-the-component)\r\n"},{"Id":"6963685770","Type":"PullRequestEvent","CreatedAt":"2017-12-08T18:25:21","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/600","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02308-01 (master)\" (#600) at dotnet/standard","RelatedBody":""},{"Id":"6962871705","Type":"IssuesEvent","CreatedAt":"2017-12-08T15:22:13","Actor":"ignatandrei","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/599","RelatedDescription":"Opened issue \".NET Standard compatibility with .NET Framework 4.7.1\" (#599) at dotnet/standard","RelatedBody":"Hello\r\nThe page https://docs.microsoft.com/en-us/dotnet/standard/net-standard  list compatibility of .NET Standard 1.6 with .NET Framework 4.6.2 . Latest .NET Framework is 4.7.1 \r\nWhat is the compatibility between 4.7.1 and .NET Standard  ?"},{"Id":"6960147160","Type":"IssuesEvent","CreatedAt":"2017-12-08T01:36:30","Actor":"taoyouh","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/598","RelatedDescription":"Opened issue \"SslStream.ShutdownAsync available?\" (#598) at dotnet/standard","RelatedBody":"In .NET Core, we can use SslStream.ShutdownAsync to properly shut down an SSL stream. But this API is not present in .NET Standard. Will this API be added to .NET Standard? Or how can we correctly shutdown an SSL stream?"},{"Id":"6960090807","Type":"PullRequestEvent","CreatedAt":"2017-12-08T01:15:32","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/597","RelatedDescription":"Merged pull request \"Remove an 's'\" (#597) at dotnet/standard","RelatedBody":"\"for a savings of\" -> \"for a saving of\" in the console output"},{"Id":"6958563281","Type":"PullRequestEvent","CreatedAt":"2017-12-07T18:42:57","Actor":"markrendle","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/597","RelatedDescription":"Opened pull request \"Remove an 's'\" (#597) at dotnet/standard","RelatedBody":"\"for a savings of\" -> \"for a saving of\" in the console output"},{"Id":"6948639364","Type":"PullRequestEvent","CreatedAt":"2017-12-06T01:26:43","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/594","RelatedDescription":"Closed pull request \"Update versions.md\" (#594) at dotnet/standard","RelatedBody":"quick link to .NET Framework system requirements to easily check which OS is supported."},{"Id":"6947749059","Type":"PullRequestEvent","CreatedAt":"2017-12-05T21:24:29","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/596","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02304-01 (master)\" (#596) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6968877627","Type":"IssuesEvent","CreatedAt":"2017-12-11T01:00:12","Actor":"Porges","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/25830","RelatedDescription":"Closed issue \"[Suggestion] Allow heterogeneous collections of results with Task.WhenAll\" (#25830) at dotnet/corefx","RelatedBody":"At the moment `Task.WhenAll` only permits the collection of results when passed a homogeneous collection of tasks:\r\n\r\n    public static Task<TResult[]> WhenAll<TResult>(IEnumerable<Task<TResult>> tasks);\r\n\r\nIt would be nice to be able to use this with a heterogeneous collection of tasks as well.\r\n\r\nAt the moment to spin off several tasks in parallel and wait for the results you need to do something like:\r\n\r\n    var t1Task = something1();\r\n    var t2Task = something2();\r\n    var t3 = await something3();\r\n    var t1 = await t1Task;\r\n    var t2 = await t2Task;\r\n\r\nMy suggestion is that we have overloads for multiple tasks like:\r\n\r\n    Task<(T1, T2)> WhenAll<T1, T2>(Task<T1> task1, Task<T2> task2);\r\n    Task<(T1, T2, T3)> WhenAll<T1, T2, T3>(Task<T1> task1, Task<T2> task2, Task<T3> task3);\r\n    Task<(T1, T2, T3, T4)> WhenAll<T1, T2, T3, T4>(Task<T1> task1, Task<T2> task2, Task<T3> task3, Task<T4> task4);\r\n    Task<(T1, T2, T3, T4, T5)> WhenAll<T1, T2, T3, T4, T5>(Task<T1> task1, Task<T2> task2, Task<T3> task3, Task<T4> task4, Task<T5> task5);\r\n    Task<(T1, T2, T3, T4, T5, T6)> WhenAll<T1, T2, T3, T4, T5, T6>(Task<T1> task1, Task<T2> task2, Task<T3> task3, Task<T4> task4, Task<T5> task5, Task<T6> task6);\r\n    Task<(T1, T2, T3, T4, T5, T6, T7)> WhenAll<T1, T2, T3, T4, T5, T6, T7>(Task<T1> task1, Task<T2> task2, Task<T3> task3, Task<T4> task4, Task<T5> task5, Task<T6> task6, Task<T7> task7);\r\n\r\nThen the example can become:\r\n\r\n    var (t1, t2, t3) = await Task.WhenAll(something1(), something2(), something3());"},{"Id":"6968859274","Type":"IssuesEvent","CreatedAt":"2017-12-11T00:49:27","Actor":"Porges","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25830","RelatedDescription":"Opened issue \"Allow heterogeneous collections of results with Task.WhenAll\" (#25830) at dotnet/corefx","RelatedBody":"At the moment `Task.WhenAll` only permits the collection of results when passed a homogeneous collection of tasks:\r\n\r\n    public static Task<TResult[]> WhenAll<TResult>(IEnumerable<Task<TResult>> tasks);\r\n\r\nIt would be nice to be able to use this with a heterogeneous collection of tasks as well.\r\n\r\nAt the moment to spin off several tasks in parallel and wait for the results you need to do something like:\r\n\r\n    var t1Task = something1();\r\n    var t2Task = something2();\r\n    var t3 = await something3();\r\n    var t1 = await t1Task;\r\n    var t2 = await t2Task;\r\n\r\nMy suggestion is that we have overloads for multiple tasks like:\r\n\r\n    Task<(T1, T2)> WhenAll<T1, T2>(Task<T1> task1, Task<T2> task2);\r\n    Task<(T1, T2, T3)> WhenAll<T1, T2, T3>(Task<T1> task1, Task<T2> task2, Task<T3> task3);\r\n    Task<(T1, T2, T3, T4)> WhenAll<T1, T2, T3, T4>(Task<T1> task1, Task<T2> task2, Task<T3> task3, Task<T4> task4);\r\n    Task<(T1, T2, T3, T4, T5)> WhenAll<T1, T2, T3, T4, T5>(Task<T1> task1, Task<T2> task2, Task<T3> task3, Task<T4> task4, Task<T5> task5);\r\n    Task<(T1, T2, T3, T4, T5, T6)> WhenAll<T1, T2, T3, T4, T5, T6>(Task<T1> task1, Task<T2> task2, Task<T3> task3, Task<T4> task4, Task<T5> task5, Task<T6> task6);\r\n    Task<(T1, T2, T3, T4, T5, T6, T7)> WhenAll<T1, T2, T3, T4, T5, T6, T7>(Task<T1> task1, Task<T2> task2, Task<T3> task3, Task<T4> task4, Task<T5> task5, Task<T6> task6, Task<T7> task7);\r\n\r\nThen the example can become:\r\n\r\n    var (t1, t2, t3) = await Task.WhenAll(something1(), something2(), something3());"},{"Id":"6968691652","Type":"IssuesEvent","CreatedAt":"2017-12-10T23:02:20","Actor":"agocke","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25829","RelatedDescription":"Opened issue \"Checksum is calculated before signing in System.Reflection.Metadata.PEBuilder\" (#25829) at dotnet/corefx","RelatedBody":"Look here at the code to verify the checksum:\r\n\r\nhttps://github.com/dotnet/corefx/blob/45b724f6b6391910edea8a70f3f22a4a7996696d/src/System.Reflection.Metadata/tests/PortableExecutable/PEBuilderTests.cs#L685\r\n\r\nNote that there are no binary modifications before calculating the checksum, so the checksum should include everything in the binary except for the checksum blob itself.\r\n\r\nBut now look at the signing code: https://github.com/dotnet/corefx/blob/45b724f6b6391910edea8a70f3f22a4a7996696d/src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEBuilder.cs#L505\r\n\r\nThe checksum is calculated before writing the strong name signature, so it's calculated with the zero value. This doesn't look correct to me, and my tests with the CLR signing code seem to indicate that the checksum should include the strong name signature."},{"Id":"6968379149","Type":"IssuesEvent","CreatedAt":"2017-12-10T19:50:13","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25828","RelatedDescription":"Opened issue \"Creation of X509Certificate2 fails on Linux but works on Windows\" (#25828) at dotnet/corefx","RelatedBody":"@secana commented on [Sun Dec 10 2017](https://github.com/dotnet/core/issues/1145)\n\n# Creation of X509Certificate2 fails on Linux but works on Windows\r\n\r\nCreating a X509Certificate2 instance from a byte array works on Windows but fails on Linux with a \"CryptographicException\".\r\n\r\n# General\r\n\r\nTested Systems:\r\nWindows 10\r\nUbuntu 16.04, Ubuntu 17.10\r\nOpenSuse 42\r\n\r\nAll tested with:\r\n**Dotnet Core Version: 2.0.2**\r\n\r\nExample code:\r\n```\r\nstatic void Main(string[] args)\r\n{\r\n      var cert = new X509Certificate2(Cert.CertBytes);\r\n}\r\n```\r\nOn Windows: Valid X509Certificate2 instance is created\r\nOn Linux: An exception is thrown:\r\n```\r\n{System.Security.Cryptography.CryptographicException: Cannot find the original signer.\r\n   at Internal.Cryptography.Pal.PkcsFormatReader.TryReadPkcs7(SafePkcs7Handle pkcs7, Boolean single, ICertificatePal& certPal, List`1& certPals)\r\n   at Internal.Cryptography.Pal.PkcsFormatReader.TryReadPkcs7Der(Byte[] rawData, Boolean single, ICertificatePal& certPal, List`1& certPals)\r\n   at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] data)\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData)\r\n   at CertTest.Program.Main(String[] args) in /home/CertTest/Program.cs:line 14}\r\n```\r\n\r\nIf the certificate is first parsed by BouncyCastle and then converted into a X509Certificate2 it works.\r\nExample which works on Linux\r\n```\r\nstatic void Main(string[] args)\r\n{\r\n       var bouncy = new Org.BouncyCastle.X509.X509CertificateParser();\r\n       var bcert = bouncy.ReadCertificate(Cert.CertBytes);\r\n       var wcert = new System.Security.Cryptography.X509Certificates.X509Certificate2(bcert.GetEncoded());\r\n}\r\n```\r\n\n\n"},{"Id":"6968226132","Type":"PullRequestEvent","CreatedAt":"2017-12-10T18:14:06","Actor":"JonHanna","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25827","RelatedDescription":"Opened pull request \"Tests for ambiguous interface member errors in Microsoft.CSharp\" (#25827) at dotnet/corefx","RelatedBody":"Tests error cases that were not possible as a consequence of #14752 but are now correctly possible due to that issue being fixed.\r\n\r\nDemonstrates `ERR_AmbigMember` is usable, contributes to #22470"},{"Id":"6967916190","Type":"IssuesEvent","CreatedAt":"2017-12-10T15:00:59","Actor":"JonHanna","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25826","RelatedDescription":"Opened issue \"Microsoft.CSharp throws InvalidCast on complement of constant enum value\" (#25826) at dotnet/corefx","RelatedBody":"```C#\r\nvar cs =CallSite<Func<CallSite, object, object>>.Create(\r\n\tMicrosoft.CSharp.RuntimeBinder. Binder.UnaryOperation(\r\n\t\tCSharpBinderFlags.CheckedContext , ExpressionType.OnesComplement, GetType(),\r\n\t\tnew[] { CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.Constant, null) }));\r\ncs.Target(cs, StringComparison.CurrentCulture);\r\n```\r\nThrows `InvalidCastException` \"Unable to cast object of type 'Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONSTANT' to type 'Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCAST'.\"\r\n\r\nSame issue exists in NetFX."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6968970461","Type":"IssuesEvent","CreatedAt":"2017-12-11T01:49:31","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23660","RelatedDescription":"Closed issue \"Generating fields from constructor arguments isn't respecting \"this.\" settings\" (#23660) at dotnet/roslyn","RelatedBody":"We have these settings in projectsystem:\r\n\r\n```\r\ndotnet_style_qualification_for_field = false:suggestion\r\ndotnet_style_qualification_for_property = false:suggestion\r\ndotnet_style_qualification_for_method = false:suggestion\r\ndotnet_style_qualification_for_event = false:suggestion\r\n\r\n```\r\n\r\nYet, generate field from constructor parameter is generating this style:\r\n![image](https://user-images.githubusercontent.com/1103906/33747809-303501a6-dc19-11e7-9764-e97a04ee29dc.png)"},{"Id":"6968916614","Type":"IssuesEvent","CreatedAt":"2017-12-11T01:21:47","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23710","RelatedDescription":"Opened issue \"Add a way to enforce naming of type parameters\" (#23710) at dotnet/roslyn","RelatedBody":"It appears that [`applicable_kinds` doesn't have a concept of \"type parameters\"](https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions). Please add this symbol so that we can enforce that type parameters begin with 'T'."},{"Id":"6968872408","Type":"IssuesEvent","CreatedAt":"2017-12-11T00:57:20","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23709","RelatedDescription":"Opened issue \"Cannot refer to \"private protected\" in \"applicable_accessibilities\"\" (#23709) at dotnet/roslyn","RelatedBody":"```\r\ndotnet_naming_rule.externally_visible_members_must_be_pascal_cased.symbols                                      = externally_visible_symbols\r\ndotnet_naming_rule.externally_visible_members_must_be_pascal_cased.style                                        = pascal_case_style\r\ndotnet_naming_rule.externally_visible_members_must_be_pascal_cased.severity                                     = warning\r\n\r\n# Symbols\r\ndotnet_naming_symbols.externally_visible_symbols.applicable_kinds                                               = field\r\ndotnet_naming_symbols.externally_visible_symbols.applicable_accessibilities                                     = private_protected\r\n\r\n# Styles\r\ndotnet_naming_style.pascal_case_style.capitalization                                                            = pascal_case\r\n```\r\n\r\n``` C#\r\n    class Program\r\n    {\r\n        private protected string fooBar;\r\n    }\r\n```\r\n\r\nExpected: Warning on the naming\r\nActual: No warning"},{"Id":"6968856512","Type":"IssuesEvent","CreatedAt":"2017-12-11T00:47:42","Actor":"yaakov-h","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23708","RelatedDescription":"Opened issue \"IDE0039 false-positive in expression tree\" (#23708) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nMicrosoft Visual Studio 2017 Enterprise v15.5\r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  Load the following code into the editor:\r\n\r\n```cs\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq.Expressions;\r\n\r\nnamespace RoslynSandbox\r\n{\r\n\tpublic class Class1\r\n\t{\r\n\t\tpublic static void Foo()\r\n\t\t{\r\n\t\t\tPredicate<object> predicate = _ => true;\r\n\t\t\tGetFiltered<object>(o => predicate(o));\r\n\t\t}\r\n\r\n\t\tstatic IEnumerable<T> GetFiltered<T>(Expression<Predicate<T>> expression) => default;\r\n\t}\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe above code compiles with no error, warnings, or suggestions.\r\n\r\n**Actual Behavior**:\r\n\r\nSuggestion IDE0039 \"Use local function\" on line 11.\r\n\r\nIf I apply the suggested code fix, the code becomes:\r\n\r\n```cs\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq.Expressions;\r\n\r\nnamespace RoslynSandbox\r\n{\r\n\tpublic class Class1\r\n\t{\r\n\t\tpublic static void Foo()\r\n\t\t{\r\n\t\t\tbool predicate(object _) => true;\r\n\t\t\tGetFiltered<object>(o => predicate(o));\r\n\t\t}\r\n\r\n\t\tstatic IEnumerable<T> GetFiltered<T>(Expression<Predicate<T>> expression) => default;\r\n\t}\r\n}\r\n```\r\n\r\nThis code does **not** compile, due to the following error:\r\n\r\n```\r\nerror CS8110: An expression tree may not contain a reference to a local function\r\n```"},{"Id":"6968836982","Type":"IssuesEvent","CreatedAt":"2017-12-11T00:35:45","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23707","RelatedDescription":"Opened issue \"Should be able to specify two naming styles for a given symbol\" (#23707) at dotnet/roslyn","RelatedBody":".EditorConfig\r\n``` \r\n[*.{cs,vb}]\r\ndotnet_naming_rule.constants_must_be_pascal_cased.symbols                                = constant_symbols\r\ndotnet_naming_rule.constants_must_be_pascal_cased.style                                  = pascal_case_style,all_upper_style\r\ndotnet_naming_rule.constants_must_be_pascal_cased.severity                               = warning\r\n\r\ndotnet_naming_symbols.constant_symbols.applicable_kinds                                 = field\r\ndotnet_naming_symbols.constant_symbols.required_modifiers                               = const\r\ndotnet_naming_symbols.constant_symbols.applicable_accessibilities                       = *\r\n\r\n# Styles\r\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\r\ndotnet_naming_style.all_upper_style.capitalization = all_upper\r\n```\r\n\r\n``` C#\r\n    class Program\r\n    {\r\n        private const string fooBar = \"fffo\";\r\n        private const string FooBar = \"fffo\";\r\n        private const string FOO_BAR = \"fffo\";\r\n    }\r\n\r\n```\r\n\r\nExpected: A single warning on \"fooBar\"\r\nActual: No warnings because the rule is invalid due to \"pascal_case_style,all_upper_style\""},{"Id":"6968811354","Type":"IssuesEvent","CreatedAt":"2017-12-11T00:20:07","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23706","RelatedDescription":"Opened issue \"\"pascal_case\" capatilization style only enforces \"first_word_upper\"\" (#23706) at dotnet/roslyn","RelatedBody":".EditorConfig\r\n```\r\n# Dotnet code style settings:\r\n[*.{cs,vb}]\r\ndotnet_naming_rule.externally_visible_members_must_be_pascal_cased.symbols   = externally_visible_symbols\r\ndotnet_naming_rule.externally_visible_members_must_be_pascal_cased.style    = pascal_case_style\r\ndotnet_naming_rule.externally_visible_members_must_be_pascal_cased.severity = warning\r\n\r\n# Symbols\r\ndotnet_naming_symbols.externally_visible_symbols.applicable_kinds           = class,struct,interface,enum,property,method,field,event,delegate\r\ndotnet_naming_symbols.externally_visible_symbols.applicable_accessibilities = public,internal,friend,protected,protected_internal,protected_friend,private_protected\r\n```\r\n\r\nCode:\r\n``` C#\r\n\r\n    class Program\r\n    {\r\n        public string Bar_foo\r\n        {\r\n            get;\r\n        }\r\n    }\r\n```\r\n\r\nExpected: Warning\r\nActual: No warning"},{"Id":"6968798069","Type":"IssuesEvent","CreatedAt":"2017-12-11T00:11:27","Actor":"JosefPihrt","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23705","RelatedDescription":"Opened issue \"IDE0007 false positive\" (#23705) at dotnet/roslyn","RelatedBody":"**Version Used**: VS 15.5 Community\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nclass ClassName\r\n{\r\n    void Bar<T>(out T value)\r\n    {\r\n        Bar(out T value2); // IDE0007\r\n\r\n        value = default(T);\r\n    }\r\n}\r\n```\r\n"},{"Id":"6968733557","Type":"PullRequestEvent","CreatedAt":"2017-12-10T23:29:11","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23704","RelatedDescription":"Opened pull request \"Fix and re-enable portable signing\" (#23704) at dotnet/roslyn","RelatedBody":"\r\n### Customer scenario\r\n\r\nRe-enable portable signing, allowing binaries to be signed on Mac & Linux.\r\n\r\nThere were two separate bugs here:\r\n    1) Fixing up the MVID of the binary was being done *after* signing,\r\n    when it should be done before.\r\n\r\n    2) System.Reflection.Metadata has a bug where calculating the\r\n    checksum occurs before signing, when it should happen after.\r\n\r\nBoth of these isues have been fixed and the helper utility that checks\r\nto see whether a binary was signed has been changed to verify that the\r\nsignature and checksums of the binaries are valid, not just that the\r\nsigned bit is set on the assembly.\r\n\r\n### Bugs this fixes\r\n\r\nFixes #23521\r\n\r\n### Workarounds, if any\r\n\r\nNone. Binaries cannot be strongname signed on Mac or Linux without this change.\r\n\r\n### Risk\r\n\r\nThis change is isolated to signing.\r\n\r\n### Performance impact\r\n\r\nNone. Portable signing is likely faster since it allows PE streams to be signed without\r\ncopying to a temporary file.\r\n\r\n### Is this a regression from a previous update?\r\n\r\nNo.\r\n\r\n### Root cause analysis\r\n\r\nThe primary helper used by the signing tests, IsStreamSigned, only checked to see\r\nif the sign bit was set, not that the signature was valid. This helper has been modified\r\nto use the verification used by System.Reflection.Metadata for its tests as well. That\r\nhelper includes a test that verifies a large number of core framework types (mscorlib, et al)\r\nand thus is very likely to produce the same verification as the CLR itself.\r\n\r\n### How was the bug found?\r\n\r\nToolset insertion into Visual Studio, which verified the strong name signatures after signing.\r\n"},{"Id":"6968718123","Type":"IssuesEvent","CreatedAt":"2017-12-10T23:18:53","Actor":"kentcb","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22860","RelatedDescription":"Closed issue \"Disable code analysis for generated code in SDK-style csproj\" (#22860) at dotnet/roslyn","RelatedBody":"Ultimately I am trying to exclude all the _.xaml.g.cs_ files from code analysis when consuming Xamarin.Forms from a netstandard library. This does not seem to be possible, making CA next to useless for Xamarin.Forms projects.\r\n\r\n**Version Used**: \r\n\r\nSDK-style csproj in VS2017.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create SDK-style project.\r\n2. Make sure there is some generated code, like a Resources.resx\r\n3. Install some analyzers\r\n\r\n**Expected Behavior**:\r\n\r\nAnalyzers not applied to generated code.\r\n\r\n**Actual Behavior**:\r\n\r\nAnalyzers are applied to generated code.\r\n\r\n**Additional Info**:\r\n\r\nI tried adding `<CodeAnalysisIgnoreGeneratedCode>true</CodeAnalysisIgnoreGeneratedCode>` to my csproj but it did not help."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6969297188","Type":"PullRequestEvent","CreatedAt":"2017-12-11T04:16:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5090","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5090) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6969086220","Type":"PullRequestEvent","CreatedAt":"2017-12-11T02:43:08","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5090","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5090) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6968292080","Type":"PullRequestEvent","CreatedAt":"2017-12-10T18:56:35","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5089","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#5089) at dotnet/corert","RelatedBody":"Picking up JitInterface changes."},{"Id":"6968160205","Type":"PullRequestEvent","CreatedAt":"2017-12-10T17:31:32","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5089","RelatedDescription":"Opened pull request \"Update RyuJIT\" (#5089) at dotnet/corert","RelatedBody":"Picking up JitInterface changes."},{"Id":"6966928037","Type":"PullRequestEvent","CreatedAt":"2017-12-10T00:38:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5088","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5088) at dotnet/corert","RelatedBody":""},{"Id":"6966927862","Type":"PullRequestEvent","CreatedAt":"2017-12-10T00:38:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5088","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5088) at dotnet/corert","RelatedBody":""},{"Id":"6966927563","Type":"PullRequestEvent","CreatedAt":"2017-12-10T00:37:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5087","RelatedDescription":"Merged pull request \"Fix ProjectN test break\" (#5087) at dotnet/corert","RelatedBody":""},{"Id":"6966828144","Type":"PullRequestEvent","CreatedAt":"2017-12-09T23:13:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5087","RelatedDescription":"Opened pull request \"Fix ProjectN test break\" (#5087) at dotnet/corert","RelatedBody":""},{"Id":"6966638911","Type":"PullRequestEvent","CreatedAt":"2017-12-09T20:55:15","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5086","RelatedDescription":"Merged pull request \"Fix ProjectN build breaks\" (#5086) at dotnet/corert","RelatedBody":""},{"Id":"6966565878","Type":"PullRequestEvent","CreatedAt":"2017-12-09T20:04:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5086","RelatedDescription":"Opened pull request \"Fix ProjectN build breaks\" (#5086) at dotnet/corert","RelatedBody":""},{"Id":"6966453582","Type":"PullRequestEvent","CreatedAt":"2017-12-09T18:46:30","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5085","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5085) at dotnet/corert","RelatedBody":""},{"Id":"6966338524","Type":"PullRequestEvent","CreatedAt":"2017-12-09T17:30:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5085","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5085) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"6966096171","Type":"IssuesEvent","CreatedAt":"2017-12-09T14:49:28","Actor":"nil4","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1799","RelatedDescription":"Closed issue \"Where is the SDK 2.1.2 installer? (VS 15.5 includes it)\" (#1799) at dotnet/sdk","RelatedBody":"Upgrading Visual Studio 2017 to [version 15.5](https://blogs.msdn.microsoft.com/visualstudio/2017/12/04/visual-studio-2017-version-15-5-visual-studio-for-mac-released/) brings SDK version 2.1.2:\r\n\r\n```cmd\r\n> dotnet --version\r\n2.1.2\r\n\r\n> dotnet --info\r\n.NET Command Line Tools (2.1.2)\r\n\r\nProduct Information:\r\n Version:            2.1.2\r\n Commit SHA-1 hash:  5695315371\r\n\r\nRuntime Environment:\r\n [..snip..]\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n```\r\n\r\nTo upgrade build agents to the same SDK version, I searched [.NET Downloads](https://www.microsoft.com/net/download/windows) and [.NET Core downloads archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md), and the latest available version is 2.0.3, with SDK 2.0.3. \r\n\r\nWhere is the SDK v2.1.2 installer?"},{"Id":"6965778629","Type":"IssuesEvent","CreatedAt":"2017-12-09T10:50:04","Actor":"ifle","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1812","RelatedDescription":"Closed issue \"System.ArgumentException: 'dimensionValuesMap' must contain at least one element.\" (#1812) at dotnet/sdk","RelatedBody":"I have mix solution with older and new format projects. During loading a have following error. What is wrong?\r\n\r\n```\r\n=====================\r\n09/12/2017 09:50:09\r\nRecoverable\r\nSystem.ArgumentException: 'dimensionValuesMap' must contain at least one element.\r\nParameter name: dimensionValuesMap\r\n   at Microsoft.Requires.NotNullOrEmpty(IEnumerable values, String parameterName)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectConfigurationsServiceBase.CreateConfigurations(ImmutableArray`1 orderedDimensionNames, ImmutableDictionary`2 dimensionValuesMap)\r\n   at Microsoft.VisualStudio.ProjectSystem.DeclaredDimensionsProjectConfigurationsService.<CalculateKnownProjectConfigurationsAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.UnconfiguredProjectCache`1.<GetValueAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectConfigurationsServiceBase.<GetKnownProjectConfigurationsAsync>d__51.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.DefaultingProjectConfigurationsServiceBase.<GetProjectConfigurationAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.VSUnconfiguredProjectIntegrationService.<GetActiveProjectConfigurationAsync>d__68.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.VSUnconfiguredProjectIntegrationService.<RefreshActiveProjectConfigurationAsync>d__62.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<RefreshActiveConfigurationAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<ResetSubscriptionsAsync>d__16.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<InitializeCoreAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.OnceInitializedOnceDisposedAsync.<<-ctor>b__4_0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.AsyncLazy`1.<>c__DisplayClass13_1.<<GetValueAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.OnceInitializedOnceDisposedAsync.<<InitializeAsync>b__27_0>d.MoveNext()\r\n===================\r\n\r\n```\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.4.5\r\nVisualStudio.15.Release/15.4.5+27004.2010\r\nMicrosoft .NET Framework\r\nVersion 4.7.02558\r\n\r\nInstalled Version: Enterprise"},{"Id":"6965749696","Type":"IssuesEvent","CreatedAt":"2017-12-09T10:26:47","Actor":"ifle","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1812","RelatedDescription":"Opened issue \"System.ArgumentException: 'dimensionValuesMap' must contain at least one element.\" (#1812) at dotnet/sdk","RelatedBody":"I have mix solution with older and new format projects. During loading a have following error. What is wrong?\r\n\r\n```\r\n=====================\r\n09/12/2017 09:50:09\r\nRecoverable\r\nSystem.ArgumentException: 'dimensionValuesMap' must contain at least one element.\r\nParameter name: dimensionValuesMap\r\n   at Microsoft.Requires.NotNullOrEmpty(IEnumerable values, String parameterName)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectConfigurationsServiceBase.CreateConfigurations(ImmutableArray`1 orderedDimensionNames, ImmutableDictionary`2 dimensionValuesMap)\r\n   at Microsoft.VisualStudio.ProjectSystem.DeclaredDimensionsProjectConfigurationsService.<CalculateKnownProjectConfigurationsAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.UnconfiguredProjectCache`1.<GetValueAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectConfigurationsServiceBase.<GetKnownProjectConfigurationsAsync>d__51.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.DefaultingProjectConfigurationsServiceBase.<GetProjectConfigurationAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.VSUnconfiguredProjectIntegrationService.<GetActiveProjectConfigurationAsync>d__68.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.VSUnconfiguredProjectIntegrationService.<RefreshActiveProjectConfigurationAsync>d__62.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<RefreshActiveConfigurationAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<ResetSubscriptionsAsync>d__16.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.VS.NuGet.NuGetRestorer.<InitializeCoreAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.OnceInitializedOnceDisposedAsync.<<-ctor>b__4_0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.AsyncLazy`1.<>c__DisplayClass13_1.<<GetValueAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.OnceInitializedOnceDisposedAsync.<<InitializeAsync>b__27_0>d.MoveNext()\r\n===================\r\n\r\n```\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.4.5\r\nVisualStudio.15.Release/15.4.5+27004.2010\r\nMicrosoft .NET Framework\r\nVersion 4.7.02558\r\n\r\nInstalled Version: Enterprise"},{"Id":"6965554009","Type":"IssuesEvent","CreatedAt":"2017-12-09T07:45:47","Actor":"ifle","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1811","RelatedDescription":"Opened issue \"[Question] How to convert Old WebForms csproj to new the csproj format?\" (#1811) at dotnet/sdk","RelatedBody":"How to convert Old WebForms csproj to new the csproj format? \r\nIs it possible?"},{"Id":"6965387071","Type":"PullRequestEvent","CreatedAt":"2017-12-09T05:23:13","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1806","RelatedDescription":"Merged pull request \"Merge release/2.1 to master\" (#1806) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20171208-080034\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20171208-080034 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6965387049","Type":"PullRequestEvent","CreatedAt":"2017-12-09T05:23:12","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1804","RelatedDescription":"Merged pull request \"Merge release/2.1 into master\" (#1804) at dotnet/sdk","RelatedBody":""},{"Id":"6965153020","Type":"PullRequestEvent","CreatedAt":"2017-12-09T02:24:23","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1804","RelatedDescription":null,"RelatedBody":""},{"Id":"6965152966","Type":"PullRequestEvent","CreatedAt":"2017-12-09T02:24:20","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1804","RelatedDescription":"Closed pull request \"Merge release/2.1 into master\" (#1804) at dotnet/sdk","RelatedBody":""},{"Id":"6964626451","Type":"PullRequestEvent","CreatedAt":"2017-12-08T22:27:38","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1809","RelatedDescription":"Merged pull request \"Minor fixups for post repo-toolset merge.\" (#1809) at dotnet/sdk","RelatedBody":""},{"Id":"6964433679","Type":"IssuesEvent","CreatedAt":"2017-12-08T21:39:46","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1801","RelatedDescription":"Closed issue \"`dotnet pack` product broken .nupkg with the latest daily build(2.2.0-preview1)\" (#1801) at dotnet/sdk","RelatedBody":"Test with dotnet sdk `2.2.0-preview1-007736`/7622/7460, Windows 10 x64(17064).\r\nAnd `2.1.1` in VS15.5preview5 works well.\r\n\r\n# Step:\r\n1. Install the latest daily build of sdk\r\n2. `dotnet new classlib`\r\n3. `dotnet pack`\r\n4. Open the output .nupkg with `NuGet Package Explorer` or some zip manager( and try unpack it), and get an error.\r\n5. Found the `.nuspec` file in the `nupkg` has wrong CRC(but the packed data is right)"},{"Id":"6964413954","Type":"IssuesEvent","CreatedAt":"2017-12-08T21:34:18","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1810","RelatedDescription":"Opened issue \"Fix All_props_and_targets_add_themselves_to_MSBuildAllTargets\" (#1810) at dotnet/sdk","RelatedBody":""},{"Id":"6964407832","Type":"PullRequestEvent","CreatedAt":"2017-12-08T21:32:38","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1809","RelatedDescription":"Opened pull request \"Minor fixups for post repo-toolset merge.\" (#1809) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"935927507911524352","CreatedAt":"2017-11-29T17:44:41+00:00","UserScreenname":"dotnet","Text":"Who doesn’t? Purple. All. The. Things. https://t.co/65KzPWuvbK","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":30,"FavoriteCount":4,"RawContent":null},{"Id":"933058673206730752","CreatedAt":"2017-11-21T19:44:57+00:00","UserScreenname":"dotnet","Text":".NET Core Alpine Image Ready for Testing https://t.co/SsQtOGuAFD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":213,"FavoriteCount":155,"RawContent":null},{"Id":"932677600715071488","CreatedAt":"2017-11-20T18:30:42+00:00","UserScreenname":"dotnet","Text":"Looking to migrate your existing .NET apps to the cloud but need our help? Fill out this survey and let us know: https://t.co/g6xbbWkX93","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2017-12-11T05:30:23.5324625Z","RunDurationInMilliseconds":7695}