{"Data":{"Blog":{"FeedItems":[{"Title":"Using .NET Hardware Intrinsics API to accelerate machine learning scenarios","PublishedOn":"2018-10-10T16:00:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This week&#8217;s blog post is by Brian Lui, one of our summer interns on the .NET team, who&#8217;s been hard at work. Over to Brian: Hello everyone! This summer I interned in the .NET team, working...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/10/using-net-hardware-intrinsics-api-to-accelerate-machine-learning-scenarios/","RawContent":null},{"Title":".NET Core October 2018 Update – NET Core 1.0 and 1.1","PublishedOn":"2018-10-09T23:19:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core October 2018 Update for 1.0 and 1.1. This update includes .NET Core 1.0.13, 1.1.10 and .NET Core SDK 1.1.11. Security CVE-2018-8292: .NET Core Information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/","RawContent":null},{"Title":".NET Framework October 2018 Security and Quality Rollup","PublishedOn":"2018-10-09T23:09:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the October 2018 Security and Quality Rollup. Security No new security fixes.  See .NET Framework September 2018 Security and Quality Rollup for the latest security update. Quality...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-framework-october-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Announcing ML.NET 0.6 (Machine Learning .NET)","PublishedOn":"2018-10-09T00:35:09+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today we’re announcing our latest monthly release: ML.NET 0.6! ML.NET is a cross-platform, open source machine learning framework for .NET developers. We want to enable every .NET developer to train...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/08/announcing-ml-net-0-6-machine-learning-net/","RawContent":null},{"Title":"Update on .NET Core 3.0 and .NET Framework 4.8","PublishedOn":"2018-10-04T16:29:57+00:00","CommentsCount":104,"FacebookCount":0,"Summary":"In May, we announced .NET Core 3.0, the next major version of .NET Core that adds support for building desktop applications using WinForms, WPF, and Entity Framework 6. We also announced some exciting...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/","RawContent":null},{"Title":".NET Core October 2018 Update – NET Core 2.1.5 & SDK 2.1.403","PublishedOn":"2018-10-02T15:31:06+00:00","CommentsCount":10,"FacebookCount":0,"Summary":".NET Core October 2018 Update Today, we are releasing the .NET Core October 2018 Update. This update includes .NET Core 2.1.5 and .NET Core SDK 2.1.403 and contains important reliability fixes....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/02/net-core-october-2018-update/","RawContent":null},{"Title":".NET Framework September 2018 Preview of Quality Rollup","PublishedOn":"2018-09-25T19:36:58+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Late last week we released the September 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated code to prevent...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/25/net-framework-september-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing Cumulative Updates for .NET Framework for Windows 10 October 2018 Update","PublishedOn":"2018-09-19T22:30:19+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We deliver .NET Framework updates nearly every month, through Windows Update and other distribution channels. We are making changes to the way that we deliver those updates. We’ll soon start...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/19/announcing-cumulative-updates-for-net-framework-for-windows-10-october-2018-update/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3646","PublishedOn":"2018-09-18T02:38:06+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/17/announcing-net-framework-4-8-early-access-build-3646/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 2","PublishedOn":"2018-09-12T19:26:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 2. We have great improvements that we want to share and that we would love to get your feedback on, either in the comments or at dotnet/core #1938....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-net-core-2-2-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8159331036","Type":"PullRequestEvent","CreatedAt":"2018-08-23T20:13:18","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Opened pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8147233541","Type":"PullRequestEvent","CreatedAt":"2018-08-21T22:39:06","Actor":"anthonychu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Opened pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8131503388","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:19:54","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Merged pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"8075734624","Type":"IssuesEvent","CreatedAt":"2018-08-07T07:06:40","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8394268768","Type":"IssuesEvent","CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Opened issue \"October 2018 .NET Updates\" (#89) at dotnet/announcements","RelatedBody":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"},{"Id":"8394092294","Type":"IssuesEvent","CreatedAt":"2018-10-09T22:51:19","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/> **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n"},{"Id":"8377166566","Type":"IssuesEvent","CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Opened issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87) at dotnet/announcements","RelatedBody":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```"},{"Id":"8362210504","Type":"IssuesEvent","CreatedAt":"2018-10-03T16:11:10","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Opened issue \".NET Core 2.0 has reached end of life\" (#86) at dotnet/announcements","RelatedBody":"On October 1, 2018 .NET Core 2.0 reached end of life. This means the version channel is no longer supported and updates will no longer be provided. We recommend moving to a supported release. See our [support policy](https://www.microsoft.com/net/platform/support-policy) for more details.\r\n\r\nWe understand there will be needs to access end of life versions so downloads and Docker images will remain available. \r\n\r\n* 2.0 downloads will still be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). You will see notifications on the site indicating the end of life status. \r\n* 2.0 links have been removed from the [microsoft/donet Docker page](https://hub.docker.com/r/microsoft/dotnet/) though images will remain on the system.\r\n\r\n"},{"Id":"8279098039","Type":"IssuesEvent","CreatedAt":"2018-09-18T01:10:24","Actor":"spshant","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Opened issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85) at dotnet/announcements","RelatedBody":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8416096782","Type":"PullRequestEvent","CreatedAt":"2018-10-13T21:28:08","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20327","RelatedDescription":"Merged pull request \"[arm64] Print target arch during JIT_Disasm\" (#20327) at dotnet/coreclr","RelatedBody":"Print target architecture during JIT_Disasm on arm64\r\n```\r\n; Assembly listing for method AllocOutgoingArgSpaceVar.Program:Xor5(int):int\r\n; Emitting BLENDED_CODE for generic ARM64 CPU\r\n; optimized code\r\n; fp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 arg0         [V00,T00] (  3,  3   )     int  ->   x0\r\n;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [sp+0x00]\r\n;\r\n; Lcl frame size = 0\r\n\r\nG_M14160_IG01:\r\n        A9BF7BFD          stp     fp, lr, [sp,#-16]!\r\n        910003FD          mov     fp, sp\r\n\r\nG_M14160_IG02:\r\n        528000A1          mov     w1, #5\r\n        4A010000          eor     w0, w0, w1\r\n\r\nG_M14160_IG03:\r\n        A8C17BFD          ldp     fp, lr, [sp],#16\r\n        D65F03C0          ret     lr\r\n\r\n; Total bytes of code 24, prolog size 8 for method AllocOutgoingArgSpaceVar.Program:Xor5(int):int\r\n; ============================================================\r\n```\r\n@AndyAyersMS @BruceForstall \r\n/cc @dotnet/jit-contrib "},{"Id":"8415859448","Type":"PullRequestEvent","CreatedAt":"2018-10-13T18:56:01","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20410","RelatedDescription":"Opened pull request \"Null out CancellationTokenSource._timer on Dispose/Cancel\" (#20410) at dotnet/coreclr","RelatedBody":"We already Dispose the Timer in such cases, but we don't null out the field.  That's generally fine, unless an errant CancellationToken is held onto somewhere that references the CancellationTokenSource, in which case it in turn may end up keeping the Timer alive and whatever its delegate/state reference, prolonging their GC unnecessarily.  Minor, but good house keeping, as CancellationTokens can be used in a manner that makes them longer-lived than expected.\r\n\r\nhttps://github.com/dotnet/corefx/issues/32806#issuecomment-429564320\r\ncc: @kouvel, @davidfowl "},{"Id":"8415642543","Type":"PullRequestEvent","CreatedAt":"2018-10-13T16:46:50","Actor":"lol768","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20409","RelatedDescription":"Opened pull request \"Add a note to clarify debugging w/ dotnet is fine\" (#20409) at dotnet/coreclr","RelatedBody":"ref https://github.com/dotnet/coreclr/issues/12705#issuecomment-314102508"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8414116110","Type":"IssuesEvent","CreatedAt":"2018-10-12T23:20:35","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10093","RelatedDescription":"Closed issue \"Support build logic in SDK which was previously in package closure of Microsoft.AspNetCore.App\" (#10093) at dotnet/cli","RelatedBody":"For .NET Core 3.0, there will be a targeting pack for ASP.NET Core, which will be a flattened package with reference assemblies for everything in Microsoft.AspNetCore.App.  In previous versions, some of the packages transitively referenced by Microsoft.AspNetCore.App included build logic (I believe, for example, for Razor compilation).\r\n\r\nFor .NET Core 3.0, we don't want this build logic to be part of the targeting pack.  So probably we want to include this functionality in the .NET SDK.  (This would be via inserting the necessary logic as part of the build, not by adding it to the dotnet/cli or dotnet/sdk repos)."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8415208998","Type":"PullRequestEvent","CreatedAt":"2018-10-13T12:15:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/903","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181012.9 of https://github.com/dotnet/arcade\" (#903) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18512.9\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18512.9.symbols.nupkg - 2.2.0-beta.18512.9\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18512.9.symbols.nupkg - 2.4.0-beta.18512.9\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18512.9\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18512.9\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18512.9\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18512.9\n- Microsoft.DotNet.Darc - 1.0.0-beta.18512.9\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18512.9\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18512.9\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18512.9\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18512.9"},{"Id":"8415187249","Type":"PullRequestEvent","CreatedAt":"2018-10-13T12:00:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/903","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181012.9 of https://github.com/dotnet/arcade\" (#903) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18512.9\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18512.9.symbols.nupkg - 2.2.0-beta.18512.9\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18512.9.symbols.nupkg - 2.4.0-beta.18512.9\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18512.9.symbols.nupkg - 1.0.0-beta.18512.9\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18512.9\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18512.9\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18512.9\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18512.9\n- Microsoft.DotNet.Darc - 1.0.0-beta.18512.9\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18512.9\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18512.9\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18512.9\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18512.9\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18512.9"},{"Id":"8414005707","Type":"PullRequestEvent","CreatedAt":"2018-10-12T22:39:54","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/902","RelatedDescription":"Merged pull request \"Revert \"Add Brotli compression\"\" (#902) at dotnet/standard","RelatedBody":"We need to keep master-with-span clean until the PR is approved."},{"Id":"8414005333","Type":"PullRequestEvent","CreatedAt":"2018-10-12T22:39:47","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/902","RelatedDescription":"Opened pull request \"Revert \"Add Brotli compression\"\" (#902) at dotnet/standard","RelatedBody":"We need to keep master-with-span clean until the PR is approved."},{"Id":"8414001138","Type":"PullRequestEvent","CreatedAt":"2018-10-12T22:38:20","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/822","RelatedDescription":"Merged pull request \"Add Brotli compression\" (#822) at dotnet/standard","RelatedBody":"This adds compression & decompression for [Brotli](https://blogs.msdn.microsoft.com/dotnet/2017/07/27/introducing-support-for-brotli-compression/).\r\n\r\n***Note**: These APIs depend on `System.Span`, hence they are merged into [master-with-span](https://github.com/dotnet/standard/tree/master-with-span) to make the diff more readable.*\r\n\r\n@dotnet/nsboard "},{"Id":"8413973520","Type":"PullRequestEvent","CreatedAt":"2018-10-12T22:28:45","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/816","RelatedDescription":"Merged pull request \"Miscellaneous improvements in System.Text.*\" (#816) at dotnet/standard","RelatedBody":"@dotnet/nsboard "}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8416455217","Type":"PullRequestEvent","CreatedAt":"2018-10-14T02:30:03","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32803","RelatedDescription":"Merged pull request \"Ensure ConnectionCloseReadStream uses provided bufferSize\" (#32803) at dotnet/corefx","RelatedBody":"SocketHttpHandler will use a ConnectionCloseReadStream as the resulting stream it hands out if the server sent Connection: close.  If CopyToAsync is used from that stream, it falls back to just using CopyToAsync on the underlying stream (usually a NetworkStream or SslStream).  In doing so, though, if there is already some data remaining in the HttpConnection's buffer, it first has to copy the data from that buffer, and then when it goes to use CopyToAsync on the underlying stream, it neglects to pass through the caller provided bufferSize.  This fixes that.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/32800\r\ncc: @geoffkizer, @davidsh"},{"Id":"8416455211","Type":"IssuesEvent","CreatedAt":"2018-10-14T02:30:02","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32800","RelatedDescription":"Closed issue \"HttpContent.CopyToAsync ignores bufferSize sometimes\" (#32800) at dotnet/corefx","RelatedBody":"if `remain > 0`, it throws `bufferSize` on the floor.\r\n\r\nhttps://github.com/dotnet/corefx/blob/87a944afb3e0ec392d5838900b5498e015d5e47b/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/HttpConnection.cs#L1395-L1403\r\n\r\n4096 is not nearly enough buffer for streaming large files over high-bandwidth (10Gbps+) connections. it wastes _way_ too much CPU in the async stuff."},{"Id":"8416404102","Type":"IssuesEvent","CreatedAt":"2018-10-14T01:44:55","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/31262","RelatedDescription":"Reopened issue \"Q: Log warning for large numbers of HttpClient/SocketsHttpHandler?\" (#31262) at dotnet/corefx","RelatedBody":"I have just discovered the cause of an annoying memory leak was that one of our libraries what creating a new HttpClient in every request and not disposing it (gaah).  When using WinHttpHandler, the cost was a few hundred managed bytes per HttpClient.  With SocketsHttpHandler, the cost was more like 22KB and some increasingly long TimerQueueTimer chains in HttpConnectionPoolManager (that showed up in the memory snapshot.\r\n\r\nI have some suggestions to help detect/minimise such leaks in the future.  I couldn't really come up with anything solid, but hopefully, you can.\r\n\r\n1. Do you think it would be possible for the DiagnosticsHandler or some other component to track the number of HttpClients instances and log a warning if the number gets above a certain level?  \r\n\r\n2. Instead of creating an Infinite timer (see below), would it be better to just dispose the timer entirely when it isn't in use?  I'm not 100% sure why unreferenced handlers aren't being released from memory but this is probably holding the reference.  _cleaningTimer = new Timer(s => ((HttpConnectionPoolManager)s).RemoveStalePools(), this, Timeout.Infinite, Timeout.Infinite);  (I imagine there is a performance cost to this, but I am not sure how much)\r\n               \r\n3. Would it be ok for HttpMessageInvoker to have a Finalizer that tidies up the HttpMessageHandler (if _disposeHandler is true)?\r\n\r\nhopefully, some of that is helpful, but I am not sure there is any proper solution to this other than just having everyone dispose their objects properly (or not create loads of HttpClients to begin with).  thanks ;-)\r\n\r\nbtw: for testing this my TargetFramework is netcoreapp2.1"},{"Id":"8416333602","Type":"PullRequestEvent","CreatedAt":"2018-10-14T00:40:05","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32793","RelatedDescription":"Merged pull request \"Fix Timer rooting issue with SocketsHttpHandler\" (#32793) at dotnet/corefx","RelatedBody":"We have an unexpected rooted cycle that's unexpectedly keeping an HttpConnectionPoolManager and all of its state alive indefinitely (though generally several minutes) if the HttpClient/SocketsHttpHandler isn't Disposed.\r\n\r\nHttpConnectionPoolManager creates a \"cleaning timer\" that runs every now and then in order to remove stale connection pools that are no longer needed.  In order to do that, the Timer is passed the HttpConnectionManagerPool as state.  That normally wouldn't be a problem, except that the HttpConnectionManagerPool then stores a strong reference to the Timer, creating a cycle: Timer -> TimerHolder -> TimerQueueTimer -> HttpConnectionPoolManager -> Timer.  The TimerQueueTimer is rooted by the underlying timer implementation, with it stored in a static array.  And TimerHolder has a finalizer that disposes of the Timer, but it's being kept alive as part of the cycle.\r\n\r\nTo break the cycle, we give the Timer a weak reference (rather than strong reference) to the HttpConnectionPoolManager.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/31262\r\ncc: @davidsh, @geoffkizer, @davidfowl "},{"Id":"8416333593","Type":"IssuesEvent","CreatedAt":"2018-10-14T00:40:05","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/31262","RelatedDescription":"Closed issue \"Q: Log warning for large numbers of HttpClient/SocketsHttpHandler?\" (#31262) at dotnet/corefx","RelatedBody":"I have just discovered the cause of an annoying memory leak was that one of our libraries what creating a new HttpClient in every request and not disposing it (gaah).  When using WinHttpHandler, the cost was a few hundred managed bytes per HttpClient.  With SocketsHttpHandler, the cost was more like 22KB and some increasingly long TimerQueueTimer chains in HttpConnectionPoolManager (that showed up in the memory snapshot.\r\n\r\nI have some suggestions to help detect/minimise such leaks in the future.  I couldn't really come up with anything solid, but hopefully, you can.\r\n\r\n1. Do you think it would be possible for the DiagnosticsHandler or some other component to track the number of HttpClients instances and log a warning if the number gets above a certain level?  \r\n\r\n2. Instead of creating an Infinite timer (see below), would it be better to just dispose the timer entirely when it isn't in use?  I'm not 100% sure why unreferenced handlers aren't being released from memory but this is probably holding the reference.  _cleaningTimer = new Timer(s => ((HttpConnectionPoolManager)s).RemoveStalePools(), this, Timeout.Infinite, Timeout.Infinite);  (I imagine there is a performance cost to this, but I am not sure how much)\r\n               \r\n3. Would it be ok for HttpMessageInvoker to have a Finalizer that tidies up the HttpMessageHandler (if _disposeHandler is true)?\r\n\r\nhopefully, some of that is helpful, but I am not sure there is any proper solution to this other than just having everyone dispose their objects properly (or not create loads of HttpClients to begin with).  thanks ;-)\r\n\r\nbtw: for testing this my TargetFramework is netcoreapp2.1"},{"Id":"8416276698","Type":"PullRequestEvent","CreatedAt":"2018-10-13T23:49:43","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32614","RelatedDescription":"Merged pull request \"Improved the coverage of ParseExact with the DateTimeStyle \" (#32614) at dotnet/corefx","RelatedBody":"Better coverage with AllowWhiteSpaces now as requested as part of #27679"},{"Id":"8416057304","Type":"IssuesEvent","CreatedAt":"2018-10-13T21:02:34","Actor":"Spongman","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32801","RelatedDescription":"Reopened issue \"HttpConnection needs a way to configure the buffer size\" (#32801) at dotnet/corefx","RelatedBody":"when copying large files over high-bandwidth connections it wastes a large amount of CPU handling the async callbacks - it's essentially useless.\r\n\r\nalso, there's no need to do the `CopyToExactLengthAsync` stuff if the server sent a `Connection: close` header or no `Content-Length:` and the body isn't chunked. wouldn't it be much more efficient to just copy directly from the NetworkStream?"},{"Id":"8416056650","Type":"IssuesEvent","CreatedAt":"2018-10-13T21:02:12","Actor":"Spongman","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32801","RelatedDescription":"Closed issue \"HttpConnection needs a way to configure the buffer size\" (#32801) at dotnet/corefx","RelatedBody":"when copying large files over high-bandwidth connections it wastes a large amount of CPU handling the async callbacks - it's essentially useless.\r\n\r\nalso, there's no need to do the `CopyToExactLengthAsync` stuff if the server sent a `Connection: close` header or no `Content-Length:` and the body isn't chunked. wouldn't it be much more efficient to just copy directly from the NetworkStream?"},{"Id":"8415887013","Type":"PullRequestEvent","CreatedAt":"2018-10-13T19:13:42","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32794","RelatedDescription":"Merged pull request \"Fix ClientWebSocket potential cycle with Timer\" (#32794) at dotnet/corefx","RelatedBody":"ClientWebSocket creates and stores a Timer if it's configured to send keep-alives, and that Timer then has a reference back to the ClientWebSocket.  If the ClientWebSocket is Dispose'd, if there's any error as part of communicating with the server, if CloseAsync is called, etc., there's no issue, the Timer is disposed, and all state is cleaned up.  But if none of those things happen, e.g. if the ClientWebSocket opens a connection and then the developer drops it without any further operation on it, it can remain rooted in a cycle with the Timer.  The fix is to give the timer a weak reference instead of a strong reference back to the web socket.\r\n\r\ncc: @davidsh, @geoffkizer, @davidfowl, @anurse "},{"Id":"8415885675","Type":"IssuesEvent","CreatedAt":"2018-10-13T19:12:48","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32809","RelatedDescription":"Opened issue \"AuthProxy__ValidCreds_ProxySendsRequestToServer failing a lot in CI\" (#32809) at dotnet/corefx","RelatedBody":"This test is failing a lot in outerloop runs, e.g.\r\nhttps://mc.dot.net/#/user/stephentoub/pr~2Fjenkins~2Fdotnet~2Fcorefx~2Fmaster~2F/test~2Ffunctional~2Fcli~2F/23bace4614f4705c1b92f1cc2e2e78a1ed65f0ea\r\n```\r\n2018-10-13 03:15:04,595: INFO: proc(55): run_and_log_output: Output: Assertion Failed\r\n2018-10-13 03:15:04,648: INFO: proc(55): run_and_log_output: Output: \r\n2018-10-13 03:15:04,648: INFO: proc(55): run_and_log_output: Output:    at System.Net.Http.HttpConnectionPool.InvalidateHttp2Connection(Http2Connection connection) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs:line 822\r\n2018-10-13 03:15:04,648: INFO: proc(55): run_and_log_output: Output:    at System.Net.Http.Http2Connection.AbortStreams(Int32 lastValidStream) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 496\r\n2018-10-13 03:15:04,648: INFO: proc(55): run_and_log_output: Output:    at System.Net.Http.Http2Connection.ProcessIncomingFrames() in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 139\r\n2018-10-13 03:15:04,648: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 934\r\n2018-10-13 03:15:04,650: INFO: proc(55): run_and_log_output: Output:    at System.Net.Http.Http2Connection.ProcessIncomingFrames()\r\n2018-10-13 03:15:04,650: INFO: proc(55): run_and_log_output: Output:    at System.Net.Http.Http2Connection.SetupAsync() in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 91\r\n2018-10-13 03:15:04,650: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.<>c.<.cctor>b__11_0(Object s) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 525\r\n2018-10-13 03:15:04,650: INFO: proc(55): run_and_log_output: Output:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\ExecutionContext.cs:line 166\r\n2018-10-13 03:15:04,650: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 563\r\n2018-10-13 03:15:04,650: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\TaskContinuation.cs:line 814\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\Task.cs:line 3272\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task`1.TrySetResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\future.cs:line 421\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 646\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 633\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Net.Http.Http2Connection.ReadFrameAsync() in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 131\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.<>c.<.cctor>b__11_0(Object s) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 525\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\ExecutionContext.cs:line 166\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 563\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\TaskContinuation.cs:line 814\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\Task.cs:line 3272\r\n2018-10-13 03:15:04,651: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task`1.TrySetResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\future.cs:line 421\r\n2018-10-13 03:15:04,653: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 641\r\n2018-10-13 03:15:04,653: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 254\r\n2018-10-13 03:15:04,653: INFO: proc(55): run_and_log_output: Output:    at System.Net.Http.Http2Connection.EnsureIncomingBytesAsync(Int32 minReadBytes) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 105\r\n2018-10-13 03:15:04,653: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.<>c.<.cctor>b__11_0(Object s) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 525\r\n2018-10-13 03:15:04,653: INFO: proc(55): run_and_log_output: Output:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\ExecutionContext.cs:line 166\r\n2018-10-13 03:15:04,653: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 563\r\n2018-10-13 03:15:04,653: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\TaskContinuation.cs:line 814\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\Task.cs:line 3272\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task`1.TrySetResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\future.cs:line 421\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 641\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Runtime\\CompilerServices\\AsyncValueTaskMethodBuilder.cs:line 169\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Net.Http.Http2Connection.ReadAtLeastAsync(Stream stream, Memory`1 buffer, Int32 minReadBytes) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 767\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.<>c.<.cctor>b__11_0(Object s) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 525\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\ExecutionContext.cs:line 166\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 563\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\TaskContinuation.cs:line 814\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\Task.cs:line 3272\r\n2018-10-13 03:15:04,654: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task`1.TrySetResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\future.cs:line 421\r\n2018-10-13 03:15:04,655: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 641\r\n2018-10-13 03:15:04,655: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Runtime\\CompilerServices\\AsyncValueTaskMethodBuilder.cs:line 169\r\n2018-10-13 03:15:04,655: INFO: proc(55): run_and_log_output: Output:    at System.Net.Security.SslStreamInternal.ReadAsyncInternal[TReadAdapter](TReadAdapter adapter, Memory`1 buffer) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStreamInternal.cs:line 338\r\n2018-10-13 03:15:04,655: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.<>c.<.cctor>b__11_0(Object s) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 525\r\n2018-10-13 03:15:04,655: INFO: proc(55): run_and_log_output: Output:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\ExecutionContext.cs:line 166\r\n2018-10-13 03:15:04,655: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 563\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\TaskContinuation.cs:line 814\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task.RunContinuations(Object continuationObject) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\Task.cs:line 3272\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Threading.Tasks.Task`1.TrySetResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Tasks\\future.cs:line 421\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetExistingTaskResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 641\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult(TResult result) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 633\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Net.Security.SslStreamInternal.<FillBufferAsync>g__InternalFillBufferAsync|38_0[TReadAdapter](TReadAdapter adap, ValueTask`1 task, Int32 min, Int32 initial) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStreamInternal.cs:line 515\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.<>c.<.cctor>b__11_0(Object s) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 525\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\ExecutionContext.cs:line 166\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 563\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.InvokeContinuation(Action`1 continuation, Object state, Boolean forceAsync) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Sockets\\src\\System\\Net\\Sockets\\Socket.Tasks.cs:line 1038\r\n2018-10-13 03:15:04,657: INFO: proc(55): run_and_log_output: Output:    at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.OnCompleted(SocketAsyncEventArgs _) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Sockets\\src\\System\\Net\\Sockets\\Socket.Tasks.cs:line 869\r\n2018-10-13 03:15:04,658: INFO: proc(55): run_and_log_output: Output:    at System.Net.Sockets.SocketAsyncEventArgs.FinishOperationAsyncSuccess(Int32 bytesTransferred, SocketFlags flags) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Sockets\\src\\System\\Net\\Sockets\\SocketAsyncEventArgs.cs:line 770\r\n2018-10-13 03:15:04,658: INFO: proc(55): run_and_log_output: Output:    at System.Net.Sockets.SocketAsyncEventArgs.<>c.<.cctor>b__174_0(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Sockets\\src\\System\\Net\\Sockets\\SocketAsyncEventArgs.Windows.cs:line 1195\r\n2018-10-13 03:15:04,658: INFO: proc(55): run_and_log_output: Output:    at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pNativeOverlapped) in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\src\\System\\Threading\\Overlapped.cs:line 78\r\n```\r\nand\r\n```\r\n2018-10-13 03:07:40,539: INFO: proc(55): run_and_log_output: Output:     System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandler_Proxy_Test.AuthProxy__ValidCreds_ProxySendsRequestToServer(proxyAuthScheme: Basic, secureServer: True, proxyClosesConnectionAfterFirst407Response: True) [FAIL]\r\n2018-10-13 03:07:40,539: INFO: proc(55): run_and_log_output: Output:       System.Net.Http.HttpRequestException : An error occurred while sending the request.\r\n2018-10-13 03:07:40,539: INFO: proc(55): run_and_log_output: Output:       ---- System.IO.IOException : Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n2018-10-13 03:07:40,539: INFO: proc(55): run_and_log_output: Output:       -------- System.Net.Sockets.SocketException : An existing connection was forcibly closed by the remote host.\r\n2018-10-13 03:07:40,540: INFO: proc(55): run_and_log_output: Output:       Stack Trace:\r\n2018-10-13 03:07:40,540: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnection.cs(683,0): at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,540: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\AuthenticationHelper.NtAuth.cs(43,0): at System.Net.Http.AuthenticationHelper.SendWithNtAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean isProxyAuth, HttpConnection connection, HttpConnectionPool connectionPool, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,540: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs(496,0): at System.Net.Http.HttpConnectionPool.SendWithNtConnectionAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,542: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs(467,0): at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,542: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\AuthenticationHelper.cs(220,0): at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,542: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs(620,0): at System.Net.Http.HttpConnectionPool.EstablishProxyTunnel(CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,542: INFO: proc(55): run_and_log_output: Output:         E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\Tasks\\ValueTask.cs(849,0): at System.Threading.Tasks.ValueTask`1.get_Result()\r\n2018-10-13 03:07:40,542: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs(567,0): at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,542: INFO: proc(55): run_and_log_output: Output:         E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\Tasks\\ValueTask.cs(849,0): at System.Threading.Tasks.ValueTask`1.get_Result()\r\n2018-10-13 03:07:40,542: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs(595,0): at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,542: INFO: proc(55): run_and_log_output: Output:         E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\Tasks\\ValueTask.cs(849,0): at System.Threading.Tasks.ValueTask`1.get_Result()\r\n2018-10-13 03:07:40,543: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs(671,0): at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n2018-10-13 03:07:40,543: INFO: proc(55): run_and_log_output: Output:         E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\Tasks\\ValueTask.cs(849,0): at System.Threading.Tasks.ValueTask`1.get_Result()\r\n2018-10-13 03:07:40,543: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs(454,0): at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,543: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\RedirectHandler.cs(33,0): at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,545: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\HttpClient.cs(475,0): at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n2018-10-13 03:07:40,545: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Proxy.cs(95,0): at System.Net.Http.Functional.Tests.HttpClientHandler_Proxy_Test.AuthProxy__ValidCreds_ProxySendsRequestToServer(AuthenticationSchemes proxyAuthScheme, Boolean secureServer, Boolean proxyClosesConnectionAfterFirst407Response)\r\n2018-10-13 03:07:40,545: INFO: proc(55): run_and_log_output: Output:         --- End of stack trace from previous location where exception was thrown ---\r\n2018-10-13 03:07:40,545: INFO: proc(55): run_and_log_output: Output:         ----- Inner Stack Trace -----\r\n2018-10-13 03:07:40,545: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnection.cs(1293,0): at System.Net.Http.HttpConnection.FillAsync()\r\n2018-10-13 03:07:40,546: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnection.cs(1245,0): at System.Net.Http.HttpConnection.ReadNextResponseHeaderLineAsync(Boolean foldedHeadersAllowed)\r\n2018-10-13 03:07:40,546: INFO: proc(55): run_and_log_output: Output:         D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnection.cs(512,0): at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n2018-10-13 03:07:40,546: INFO: proc(55): run_and_log_output: Output:         ----- Inner Stack Trace -----\r\n```"},{"Id":"8415879785","Type":"IssuesEvent","CreatedAt":"2018-10-13T19:08:59","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32808","RelatedDescription":"Opened issue \"UseCallback_HaveCredsAndUseAuthenticatedCustomProxyAndPostToSecureServer_Success failing in CI\" (#32808) at dotnet/corefx","RelatedBody":"This test is failing a lot of outerloop runs in CI.\r\n```\r\nWindows.10.Nano.Amd64.Open-x64-Debug\r\nGet Repro environment\r\nUnhandled Exception of Type System.Net.Http.HttpRequestException\r\nMessage :\r\nSystem.Net.Http.HttpRequestException : An error occurred while sending the request.\r\n---- System.IO.IOException : Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n-------- System.Net.Sockets.SocketException : An existing connection was forcibly closed by the remote host.\r\nStack Trace :\r\n   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnection.cs:line 683\r\n   at System.Net.Http.AuthenticationHelper.SendWithNtAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean isProxyAuth, HttpConnection connection, HttpConnectionPool connectionPool, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\AuthenticationHelper.NtAuth.cs:line 43\r\n   at System.Net.Http.HttpConnectionPool.SendWithNtConnectionAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs:line 496\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs:line 467\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\AuthenticationHelper.cs:line 220\r\n   at System.Net.Http.HttpConnectionPool.EstablishProxyTunnel(CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs:line 620\r\n   at System.Threading.Tasks.ValueTask`1.get_Result() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\Tasks\\ValueTask.cs:line 849\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs:line 567\r\n   at System.Threading.Tasks.ValueTask`1.get_Result() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\Tasks\\ValueTask.cs:line 849\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs:line 595\r\n   at System.Threading.Tasks.ValueTask`1.get_Result() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\Tasks\\ValueTask.cs:line 849\r\n   at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs:line 671\r\n   at System.Threading.Tasks.ValueTask`1.get_Result() in E:\\A\\_work\\164\\s\\src\\System.Private.CoreLib\\shared\\System\\Threading\\Tasks\\ValueTask.cs:line 849\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnectionPool.cs:line 454\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\RedirectHandler.cs:line 33\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\HttpClient.cs:line 475\r\n   at System.Net.Http.Functional.Tests.HttpClientHandler_ServerCertificates_Test.UseCallback_HaveCredsAndUseAuthenticatedCustomProxyAndPostToSecureServer_Success() in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.ServerCertificates.cs:line 118\r\n--- End of stack trace from previous location where exception was thrown ---\r\n----- Inner Stack Trace -----\r\n   at System.Net.Http.HttpConnection.FillAsync() in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnection.cs:line 1293\r\n   at System.Net.Http.HttpConnection.ReadNextResponseHeaderLineAsync(Boolean foldedHeadersAllowed) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnection.cs:line 1245\r\n   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken) in D:\\j\\workspace\\windows-TGrou---db113413\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\HttpConnection.cs:line 512\r\n----- Inner Stack Trace -----\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8416645438","Type":"PullRequestEvent","CreatedAt":"2018-10-14T05:19:03","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30499","RelatedDescription":"Opened pull request \"Use #nonnull directive to determine NonNullTypes context\" (#30499) at dotnet/roslyn","RelatedBody":""},{"Id":"8416430462","Type":"PullRequestEvent","CreatedAt":"2018-10-14T02:08:09","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30498","RelatedDescription":"Opened pull request \"WIP: Use Arcade bootstrapping scripts\" (#30498) at dotnet/roslyn","RelatedBody":""},{"Id":"8416388039","Type":"PullRequestEvent","CreatedAt":"2018-10-14T01:30:07","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30496","RelatedDescription":"Merged pull request \"Merge dev16.0.x to dev16.0.x-vs-deps\" (#30496) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0.x into dev16.0.x-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0.x-to-dev16.0.x-vs-deps\ngit reset --hard upstream/dev16.0.x-vs-deps\ngit merge upstream/dev16.0.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0.x-to-dev16.0.x-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8416387972","Type":"PullRequestEvent","CreatedAt":"2018-10-14T01:30:03","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30497","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#30497) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8416330555","Type":"PullRequestEvent","CreatedAt":"2018-10-14T00:37:20","Actor":"dpoeschl","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30217","RelatedDescription":"Merged pull request \"Add IOperation/CFG support for VB ReDim statement\" (#30217) at dotnet/roslyn","RelatedBody":"Also fix the IDE helper to get value usage info correctly in presence of ReDim statements, which fixes the MakeFieldReadOnlyAnalyzer.\r\n\r\nFixes #29373\r\nFixes #30175"},{"Id":"8416288723","Type":"PullRequestEvent","CreatedAt":"2018-10-14T00:00:42","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30497","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#30497) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8416288634","Type":"PullRequestEvent","CreatedAt":"2018-10-14T00:00:40","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30496","RelatedDescription":"Opened pull request \"Merge dev16.0.x to dev16.0.x-vs-deps\" (#30496) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0.x into dev16.0.x-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0.x-to-dev16.0.x-vs-deps\ngit reset --hard upstream/dev16.0.x-vs-deps\ngit merge upstream/dev16.0.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0.x-to-dev16.0.x-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8414946558","Type":"PullRequestEvent","CreatedAt":"2018-10-13T09:06:54","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6449","RelatedDescription":"Opened pull request \"Generic lookup support\" (#6449) at dotnet/corert","RelatedBody":"This change introduces CPAOT support for all three forms of generic\r\nlookup (THISOBJ, CLASSPARAM, METHODPARAM) and the corresponding new\r\nGenericLookupSignature. I have added several unit tests exercising\r\nthe new functionality.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8414894053","Type":"PullRequestEvent","CreatedAt":"2018-10-13T08:29:37","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6411","RelatedDescription":"Merged pull request \"Initial codegen node factory cleanup\" (#6411) at dotnet/corert","RelatedBody":"This is a very harsh WIP, but i lack domain knowledge to proceed :) \r\nI poked this class a bit and here are couple of observations/questions:\r\n1. It is not very easy to stop deriving from `NodeFactory`. \r\nThere are some places where methods are called through base class: `HeaderNode` which derives from `ObjectNode` and other base infrastructure: `CompilationBuilder` and `Compilation`.\r\n2. To split this class some approach is needed for initializing and passing around objects which currently are exposed as fields (f.e. \"Import\" ones are commonly used).\r\nI hached this by passing whole factory to new extracted class but it is indeed a hack.\r\nAlso initialization process in `AttachToDependencyGraph` is complex and I am not sure if it can/should be split.\r\n3. What exactly are \"Token collection and lookup engine\" and \"R2R header table collection management.\" ? The only one method that mentions \"token\" seems unused.\r\n\r\nFixes https://github.com/dotnet/corert/issues/6274\r\n\r\ncc @nattress"},{"Id":"8414779382","Type":"PullRequestEvent","CreatedAt":"2018-10-13T07:02:09","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6448","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#6448) at dotnet/corert","RelatedBody":""},{"Id":"8414440169","Type":"PullRequestEvent","CreatedAt":"2018-10-13T02:28:36","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6448","RelatedDescription":"Opened pull request \"Update RyuJIT\" (#6448) at dotnet/corert","RelatedBody":""},{"Id":"8409041655","Type":"PullRequestEvent","CreatedAt":"2018-10-12T05:23:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6443","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6443) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"8408942844","Type":"PullRequestEvent","CreatedAt":"2018-10-12T04:45:06","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6447","RelatedDescription":"Opened pull request \"Unify available types; stop emitting precodes for method calls\" (#6447) at dotnet/corert","RelatedBody":"This change contains two conservative CPAOT fixes for deficiencies\r\nI discovered during debugging:\r\n\r\n1) Unify available types - as we're using GetTypeDefinition(),\r\nwe may hit the same type multiple times for generic instantiations\r\nover different arguments; we should emit such types only once\r\ninto the available type table.\r\n\r\n2) Use delayed load helpers, not precodes, for resolving method\r\ncalls as it's generally cheaper (previously we had to emit the\r\nprecode fixups into each method calling a particular method)\r\nand it's what Crossgen does.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8408579267","Type":"IssuesEvent","CreatedAt":"2018-10-12T02:28:48","Actor":"frankzye","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6446","RelatedDescription":"Opened issue \"Unhandled Exception: System.ArgumentNullException: Value cannot be null\" (#6446) at dotnet/corert","RelatedBody":"I don't know which part caurse these errors, and no other messages found,  please help. It works when not using corert.\r\n`Unhandled Exception: System.ArgumentNullException: Value cannot be null.\r\nParameter name: method\r\n   at System.Linq.Expressions.Expression.Call(Expression, MethodInfo, Expression, Expression, Expression) + 0x1f4\r\n   at System.Linq.Expressions.Expression.Call(Expression, MethodInfo, IEnumerable`1) + 0x146\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.Compile[T](MethodInfo, ParameterInfo[]) + 0x1ad\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x258\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0xa5\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x275\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.<StartAsync>d__26.MoveNext() + 0xa6`"},{"Id":"8408432522","Type":"PullRequestEvent","CreatedAt":"2018-10-12T01:35:50","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6345","RelatedDescription":"Closed pull request \"WIP: Targeted fixes for \"/CoreCLR All\" ILC errors (990 failures remain)\" (#6345) at dotnet/corert","RelatedBody":"1) Don't try to emit method signature in relocsOnly mode as we don't\r\nyet have all the necessary tokens available in this early phase.\r\n\r\n2) Fix one more case concerning constrained types (we need to pass\r\naround the original method, typically IDisposable.Dispose, not\r\nany particular specialization as that may not be representable\r\nas a R2R signature).\r\n\r\n3) Per David Wrighton's suggestion, I have explicitly suppressed\r\nemitting native code for ArrayMethod's, leaving them up to runtime\r\nJIT. I have attached a TODO-PERF code comment stating that this is\r\na potential opportunity to exceed Crossgen CQ.\r\n\r\nThanks\r\n\r\nTomas"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1049807908173574144","CreatedAt":"2018-10-09T23:44:44+00:00","UserScreenname":"dotnet","Text":"Blogged -- .NET Framework October 2018 Security and Quality Rollup https://t.co/tLgVdVbM4L","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":8,"RawContent":null},{"Id":"1049702744515203072","CreatedAt":"2018-10-09T16:46:51+00:00","UserScreenname":"dotnet","Text":"Announcing the latest preview release of ML .NET 0.6 (Machine Learning .NET) https://t.co/3lXXCs30ma","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":101,"FavoriteCount":59,"RawContent":null},{"Id":"1047894749867270145","CreatedAt":"2018-10-04T17:02:31+00:00","UserScreenname":"dotnet","Text":"Blogged -- Update on .NET Core 3.0 and .NET Framework 4.8 https://t.co/tBpJg3Eoc8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":328,"FavoriteCount":245,"RawContent":null},{"Id":"1047645317401735168","CreatedAt":"2018-10-04T00:31:22+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 has reached end of life https://t.co/FZTYietdMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":148,"FavoriteCount":174,"RawContent":null},{"Id":"1047579283579756544","CreatedAt":"2018-10-03T20:08:58+00:00","UserScreenname":"dotnet","Text":"https://t.co/Pt9ZGHYH8C","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2018-10-14T05:30:30.3272204Z","RunDurationInMilliseconds":7877}