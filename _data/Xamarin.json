{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin API Docs: Open Sourced and Available Now","PublishedOn":"2019-05-09T19:41:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of all Xamarin API Documentation as Open Source! API documentation drives the IntelliSense experience while being one of the best ways to help developers...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-api-docs-open-source-available-now/","RawContent":null},{"Title":"The Next Evolution of Xamarin Training: Microsoft Learn","PublishedOn":"2019-05-06T08:01:53+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce two new learning paths on Building Xamarin Apps in Microsoft Learn: A free and interactive learning portal.\nXamarin University Joins MS Learn\nThe Xamarin University...","Href":"https://devblogs.microsoft.com/xamarin/next-evolution-xamarin-training-microsoft-learn/","RawContent":null},{"Title":"Join the Xamarin Team at Microsoft Build 2019","PublishedOn":"2019-05-03T20:27:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2019 kicks off next week in beautiful downtown Seattle Washington and we have a packed schedule for Xamarin developers to look forward to. In addition to sessions, you can find some of...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-team-microsoft-build-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null},{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9598791766","Type":"PullRequestEvent","CreatedAt":"2019-05-10T03:19:08","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3087","RelatedDescription":"Opened pull request \"[docs] Prepare message docs for sync to docs.microsoft.com\" (#3087) at xamarin/xamarin-android","RelatedBody":"I have a couple questions to ask before these changes will be ready to merge:\r\n\r\n1. @conceptdev, is it OK that the metadata in this commit only includes `title` and `ms.date` fields? Did you have other fields in mind to include on these pages? I noticed that the contribution guidelines say the `ms.assetid` is no longer required, so I tentatively omitted that for now. But let me know if I should add `ms.assetid` or any another fields.\r\n2. @conceptdev, @jonpryor, and anyone else on the team who's interested, I think it might work well to update these pages to match the format of the [NuGet error reference](https://docs.microsoft.com/nuget/reference/errors-and-warnings/nu1103) pages. I like the way that format looks. Each page starts with a code block (a pre-formatted section) that shows the error message, followed by an **Issue** section, and then a **Solution** section. There are also examples for how to handle multiple Issues and Solutions for one error code: [NuGet Warning NU3019](https://docs.microsoft.com/nuget/reference/errors-and-warnings/nu3019). Does that look good to you all too? If so, I'll go ahead with reformatting these pages to match.\r\n\r\nThanks!"},{"Id":"9597987787","Type":"IssuesEvent","CreatedAt":"2019-05-09T23:19:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3086","RelatedDescription":"Opened issue \"macOS: build and package android-api-docs\" (#3086) at xamarin/xamarin-android","RelatedBody":"The Android API docs have been open-sourced!\r\n\r\n  * https://devblogs.microsoft.com/xamarin/xamarin-api-docs-open-source-available-now/\r\n  * https://github.com/xamarin/android-api-docs\r\n\r\nInstead of building these in the monodroid repo for inclusion in the macOS `.pkg` installer, we can now move that into the OSS xamarin-android repo."},{"Id":"9596935110","Type":"PullRequestEvent","CreatedAt":"2019-05-09T19:56:57","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3085","RelatedDescription":"Opened pull request \"[build] Add azure-pipelines.yml\" (#3085) at xamarin/xamarin-android","RelatedBody":"Adds a YAML representation of our 'Xamarin.Android Commercial (Mac)'\r\npipeline build. Representing this build in code will allow us to update\r\nour build, post build, and test steps alongside the product. We'll also\r\nget improved GitHub integration for testing stages when they are added\r\nto this file in the future."},{"Id":"9596432822","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3084","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Debug Shared Runtime deployment attempts are crashing on startup\" (#3084) at xamarin/xamarin-android","RelatedBody":"Fixes #3081\r\n\r\nWhen running an app using the shared runtime we get\r\nthe following\r\n\r\n\tUnhandled Exception : System.ArgumentException: Handle must be valid.\r\n\r\nThis was tracked down to the information in the `typemap.mj.inc`\r\nfile. Here are the file sizes for that file, one with the shared\r\nruntime enabled, one without\r\n\r\n\tls -la typemap.mj.inc    <- shared runtime\r\n\t-rw-r--r--  1 d  staff  462  9 May 09:42 typemap.mj.inc\r\n\tls -la obj/Debug/android/typemap.mj.inc   <- not shared runtime\r\n\t-rw-r--r--  1 d  staff  8982060  9 May 09:43 obj/Debug/android/typemap.mj.inc\r\n\r\nAs you can see, the shared runtime file is missing a huge\r\namount of data. In the past when we generated the old typemap\r\nfiles we only needed to generate the mapping for the types\r\nin the user assemblies. This is because when using the\r\nshared runtime,it already included the mappings. However\r\nin the new system these are now compiled into the `libxamarin-app.so`\r\nnative library. This means that even when using the shared\r\nruntime we should be generating ALL the mappings in that\r\nlibrary.\r\n\r\nThis commit removes the bit of code in `GenerateJavaStubs` which\r\nlimits the types being exported when using the shared runtime."},{"Id":"9596432802","Type":"IssuesEvent","CreatedAt":"2019-05-09T18:35:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3081","RelatedDescription":"Closed issue \"Debug Shared Runtime deployment attempts are crashing on startup\" (#3081) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new or load an existing project and deploy to device in Debug mode.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n\r\n### Actual Behavior\r\n```\r\n05-08 10:51:06.524  7834  7834 E mono    : Unhandled Exception:\r\n05-08 10:51:06.524  7834  7834 E mono    : System.ArgumentException: Handle must be valid.\r\n05-08 10:51:06.524  7834  7834 E mono    : Parameter name: instance\r\n05-08 10:51:06.524  7834  7834 E mono    :   at Java.Interop.JniEnvironment+InstanceMethods.CallObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method) [0x00009] in <872818d1526e40d0b1926facf75f539d>:0\r\n```\r\n### Version Information\r\nXA 9.4.0.4 (HEAD/cc0e8b8d5)\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n```\r\n05-06 15:44:39.605 W/ActivityManager( 1516): Activity pause timeout for ActivityRecord{5104222 u0 Notepad.Notepad/md57135d3c68dd99636a6eb42c8fba6d00e.NotesListActivity t75}\r\n05-06 15:44:39.605 V/ActivityManager( 1516): Scheduling idle now: forceIdle=trueimmediate=true\r\n05-06 15:44:39.632 D/Mono    (25698): Loading reference 7 of Mono.Android.dll asmctx DEFAULT, looking for System.Runtime.Serialization, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\r\n05-06 15:44:39.633 D/Mono    (25698): Image addref System.Runtime.Serialization[0x76711b7880] (asmctx DEFAULT) -> System.Runtime.Serialization.dll[0x765f2e5800]: 2\r\n05-06 15:44:39.633 D/Mono    (25698): Prepared to set up assembly 'System.Runtime.Serialization' (System.Runtime.Serialization.dll)\r\n05-06 15:44:39.633 D/Mono    (25698): Assembly System.Runtime.Serialization[0x76711b7880] added to domain RootDomain, ref_count=1\r\n05-06 15:44:39.634 D/Mono    (25698): AOT: image 'System.Runtime.Serialization.dll.so' not found: (null)\r\n05-06 15:44:39.634 D/Mono    (25698): AOT: image '/Users/builder/jenkins/workspace/archive-mono/2018-10/android/release/sdks/out/android-arm64-v8a-release/lib/mono/aot-cache/arm64/System.Runtime.Serialization.dll.so' not found: (null)\r\n05-06 15:44:39.634 D/Mono    (25698): Config attempting to parse: 'System.Runtime.Serialization.dll.config'.\r\n05-06 15:44:39.634 D/Mono    (25698): Config attempting to parse: '/Users/builder/jenkins/workspace/archive-mono/2018-10/android/release/sdks/out/android-arm64-v8a-release/etc/mono/assemblies/System.Runtime.Serialization/System.Runtime.Serialization.config'.\r\n05-06 15:44:39.634 D/Mono    (25698): Assembly Ref addref Mono.Android[0x76711b7000] -> System.Runtime.Serialization[0x76711b7880]: 2\r\n05-06 15:44:39.635 D/Mono    (25698): Loading reference 0 of System.Runtime.Serialization.dll asmctx DEFAULT, looking for mscorlib, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\r\n05-06 15:44:39.635 D/Mono    (25698): Assembly Ref addref System.Runtime.Serialization[0x76711b7880] -> mscorlib[0x767988fc80]: 6\r\n05-06 15:44:39.638 E/mono    (25698): \r\n05-06 15:44:39.638 E/mono    (25698): Unhandled Exception:\r\n05-06 15:44:39.638 E/mono    (25698): System.ArgumentException: Handle must be valid.\r\n05-06 15:44:39.638 E/mono    (25698): Parameter name: instance\r\n05-06 15:44:39.638 E/mono    (25698):   at Java.Interop.JniEnvironment+InstanceMethods.CallObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method) [0x00009] in :0 \r\n05-06 15:44:39.638 E/mono    (25698):   at Android.Runtime.JNIEnv.CallObjectMethod (System.IntPtr jobject, System.IntPtr jmethod) [0x0000e] in :0 \r\n05-06 15:44:39.638 E/mono    (25698):   at Java.Interop.TypeManager.GetClassName (System.IntPtr class_ptr) [0x00000] in :0 \r\n05-06 15:44:39.638 E/mono    (25698):   at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x00054] in :0 \r\n05-06 15:44:39.638 E/mono    (25698):   at Java.Lang.Object.GetObject (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type type) [0x000c1] in :0 \r\n05-06 15:44:39.638 E/mono    (25698):   at Java.Lang.Object._GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00017] in :0 \r\n05-06 15:44:39.638 E/mono    (25698):   at Java.Lang.Object.GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00000] in :0 \r\n05-06 15:44:39.638 E/mono    (25698):   at Java.Lang.Thread.get_DefaultUncaughtExceptionHandler () [0x0001e] in :0 \r\n05-06 15:44:39.638 E/mono    (25698):   at Android.Runtime.JNIEnv.Initialize (Android.Runtime.JnienvInitializeArgs* args) [0x00202] in :0 \r\n05-06 15:44:39.639 E/mono-rt (25698): [ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentException: Handle must be valid.\r\n05-06 15:44:39.639 E/mono-rt (25698): Parameter name: instance\r\n05-06 15:44:39.639 E/mono-rt (25698):   at Java.Interop.JniEnvironment+InstanceMethods.CallObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method) [0x00009] in :0 \r\n05-06 15:44:39.639 E/mono-rt (25698):   at Android.Runtime.JNIEnv.CallObjectMethod (System.IntPtr jobject, System.IntPtr jmethod) [0x0000e] in :0 \r\n05-06 15:44:39.639 E/mono-rt (25698):   at Java.Interop.TypeManager.GetClassName (System.IntPtr class_ptr) [0x00000] in :0 \r\n05-06 15:44:39.639 E/mono-rt (25698):   at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x00054] in :0 \r\n05-06 15:44:39.639 E/mono-rt (25698):   at Java.Lang.Object.GetObject (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type type) [0x000c1] in :0 \r\n05-06 15:44:39.639 E/mono-rt (25698):   at Java.Lang.Object._GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00017] in :0 \r\n05-06 15:44:39.639 E/mono-rt (25698):   at Java.Lang.Object.GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00000] in :0 \r\n05-06 15:44:39.639 E/mono-rt (25698):   at Java.Lang.Thread.get_DefaultUncaughtExceptionHandler () [0x0001e] in :0 \r\n05-06 15:44:39.639 E/mono-rt (25698):   at Android.Runtime.JNIEnv.Initialize (Android.Runtime.JnienvInitializeArgs* args) [0x00202] in :0 \r\n05-06 15:44:39.677 I/ActivityManager( 1516): Process Notepad.Notepad (pid 25698) has died: fore TPSL(308,3204)\r\n```\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9593126356","Type":"PullRequestEvent","CreatedAt":"2019-05-09T10:39:20","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3084","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Debug Shared Runtime deployment attempts are crashing on startup\" (#3084) at xamarin/xamarin-android","RelatedBody":"Fixes #3081\r\n\r\nWhen running an app using the shared runtime we get\r\nthe following\r\n\r\n\tUnhandled Exception : System.ArgumentException: Handle must be valid.\r\n\r\nThis was tracked down to the information in the `typemap.mj.inc`\r\nfile. Here are the file sizes for that file, one with the shared\r\nruntime enabled, one without\r\n\r\n\tls -la typemap.mj.inc    <- shared runtime\r\n\t-rw-r--r--  1 d  staff  462  9 May 09:42 typemap.mj.inc\r\n\tls -la obj/Debug/android/typemap.mj.inc   <- not shared runtime\r\n\t-rw-r--r--  1 d  staff  8982060  9 May 09:43 obj/Debug/android/typemap.mj.inc\r\n\r\nAs you can see, the shared runtime file is missing a huge\r\namount of data. In the past when we generated the old typemap\r\nfiles we only needed to generate the mapping for the types\r\nin the user assemblies. This is because when using the\r\nshared runtime,it already included the mappings. However\r\nin the new system these are now compiled into the `libxamarin-app.so`\r\nnative library. This means that even when using the shared\r\nruntime we should be generating ALL the mappings in that\r\nlibrary.\r\n\r\nThis commit removes the bit of code in `GenerateJavaStubs` which\r\nlimits the types being exported when using the shared runtime."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9598973367","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3543","RelatedDescription":"Closed issue \"[Android] Can't Overlap a Button with any view\" (#3543) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nIt's for now impossible to overlap a button on Android with another view.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add a button on a layout (AbsoluteLayout, Grid,.. \"kind of layout that allows overlap\")\r\n2. Then add another view (ActivityIndicator, Image, Notification Badges, text, ..) on the layout\r\n3. The Button always in front\r\n\r\n### Expected Behavior\r\nThe expected hierarchy of the visual stack would be:\r\n- Button would be on the back of the visual stack.\r\n- The other view would be on the front of the visual stack.\r\n\r\n### Actual Behavior\r\nThe button is stuck on the front of the visual stack.\r\n\r\n### Basic Information\r\n- Xamarin.Forms: 3.1.0.697729\r\n- Android : 8.1"},{"Id":"9598973358","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2989","RelatedDescription":"Closed issue \"[Android] Fast Renderers are not visually dealing with moving views around in the visual stack correctly\" (#2989) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nAdding views after a view has appeared or using Raise/Lower child doesn't work properly with Android Fast Renderers\r\n\r\n### Steps to Reproduce\r\n\r\n1. In the Control Gallery uncomment \r\n*Issue2653.InsertThenAddSetsZIndex*\r\n*Issue2653.MoveUpAndMoveDown*\r\n\r\n2. Enable fast renderers\r\n3. I was testing with API 23 \r\n\r\n### Expected Behavior\r\nTests should pass\r\n\r\n### Actual Behavior\r\nTests fail\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0\r\n- Last known good version:  I tested back to 2.5.1 and it was still having the same issues \r\n- Platform Target Frameworks: <!-- All that apply --> \r\n  - Android:  6.0  \r\n\r\n"},{"Id":"9598973348","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5707","RelatedDescription":"Closed issue \"[Shell] MenuItem BindingContext not inherited from Shell\" (#5707) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nMy Shell file contains a MenuItem that executes an ICommand. However, despite the BindingContext being set in the code-behind, HelpCommand isn't resolved:\r\n\r\n```\r\n    <Shell.MenuItems>\r\n        <MenuItem Text=\"Help\"\r\n                  Icon=\"help.png\"\r\n                  Command=\"{Binding HelpCommand}\"\r\n                  CommandParameter=\"https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell\" />\r\n    </Shell.MenuItems>\r\n```\r\n\r\nHowever, if I set the MenuItem.BindingContext property manually, HelpCommand is resolved:\r\n\r\n```\r\n    <Shell.MenuItems>\r\n        <MenuItem Text=\"Help\"\r\n                  Icon=\"help.png\"\r\n                  BindingContext=\"{x:Reference self}\"\r\n                  Command=\"{Binding HelpCommand}\"\r\n                  CommandParameter=\"https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell\" />\r\n    </Shell.MenuItems>\r\n```\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample.\r\n2. Expose the flyout.\r\n3. Click Help.\r\n\r\n### Expected Behavior\r\n\r\nHelpCommand, in AppShell.xaml.cs is executed.\r\n\r\n### Actual Behavior\r\n\r\nHelpCommand, in AppShell.xaml.cs, isn't executed (unless the BindingContext is set manually on the MenuItem).\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre7\r\n- Last known good version: N/A\r\n- IDE: VSMac 7.8.3\r\n\r\n### Reproduction Link\r\n\r\n[Xaminals.zip](https://github.com/xamarin/Xamarin.Forms/files/3012915/Xaminals.zip)"},{"Id":"9598973337","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4399","RelatedDescription":"Closed issue \"[Shell] MenuItems outside of collection render differently\" (#4399) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen I put `MenuItem`s within a `Shell.MenuItems` collection they are rendered using the provided `MenuItemTemplate` as desired, however the they appear under the `ShellItem`.\r\n\r\n![image](https://user-images.githubusercontent.com/41873/48489923-d84e1100-e82c-11e8-9ccb-ff56d1511c59.png)\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<Shell \r\n    x:Class=\"TailwindTraders.Shell\"\r\n    FlyoutHeaderBehavior=\"Fixed\"\r\n    xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n    xmlns:local=\"clr-namespace:TailwindTraders.Views\"\r\n    Title=\"Tailwind Traders\"\r\n    x:Name=\"theShell\"\r\n    Route=\"tailwindtraders\"\r\n    RouteHost=\"microsoft.com\"\r\n    RouteScheme=\"app\">\r\n    \r\n    <Shell.ItemTemplate>\r\n        <DataTemplate>\r\n            <ContentView HeightRequest=\"32\">\r\n                <ContentView.Padding>\r\n                    <Thickness\r\n                    Left=\"32\"\r\n                    Top=\"16\" /> \r\n                </ContentView.Padding>\r\n                <Label Text=\"{Binding Title}\" />\r\n            </ContentView>\r\n        </DataTemplate>\r\n    </Shell.ItemTemplate>\r\n    <Shell.MenuItemTemplate>\r\n        <DataTemplate>\r\n            <ContentView HeightRequest=\"32\">\r\n                <ContentView.Padding>\r\n                    <Thickness\r\n                    Left=\"32\"\r\n                    Top=\"16\" />\r\n                </ContentView.Padding>\r\n                <Label Text=\"{Binding Text}\" FontAttributes=\"Bold\" />\r\n            </ContentView>\r\n        </DataTemplate>\r\n    </Shell.MenuItemTemplate>\r\n\r\n    <Shell.MenuItems>\r\n        <MenuItem\r\n            Command=\"{Binding ProductTypeCommand}\"\r\n            CommandParameter=\"1\"\r\n            Text=\"Holiday decorations\" />\r\n\r\n        <MenuItem\r\n            Command=\"{Binding ProductTypeCommand}\"\r\n            CommandParameter=\"2\"\r\n            Text=\"Appliances\" />\r\n\r\n        <MenuItem\r\n            Command=\"{Binding ProductTypeCommand}\"\r\n            CommandParameter=\"3\"\r\n            Text=\"Bathrooms\" />\r\n\r\n        <MenuItem\r\n            Command=\"{Binding ProductTypeCommand}\"\r\n            CommandParameter=\"4\"\r\n            Text=\"Doors &amp; Windows\" />\r\n\r\n        <MenuItem\r\n            Command=\"{Binding ProductTypeCommand}\"\r\n            CommandParameter=\"5\"\r\n            Text=\"Flooring\" />\r\n\r\n        <MenuItem\r\n            Command=\"{Binding ProductTypeCommand}\"\r\n            CommandParameter=\"6\"\r\n            Text=\"Kitchen\" />\r\n\r\n        <MenuItem\r\n            Command=\"{Binding ProductTypeCommand}\"\r\n            CommandParameter=\"7\"\r\n            Text=\"Storage\" />\r\n    </Shell.MenuItems>\r\n    \r\n    <ShellItem Title=\"Home\">\r\n        <ShellSection>\r\n            <ShellContent>\r\n                <local:HomePage />\r\n            </ShellContent>\r\n        </ShellSection>\r\n    </ShellItem>\r\n    \r\n</Shell>\r\n```\r\n\r\nI wish the `MenuItem`s to appear above the ShellItem, as that's the order in the document. \r\n\r\nIf I instead remove the `Shell.MenuItems` and intermingle `MenuItem` and `ShellItem` I get the order I desire, however the wrong templates are being used to render.\r\n\r\n![image](https://user-images.githubusercontent.com/41873/48490113-590d0d00-e82d-11e8-9db1-fe961f7a9671.png)\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<Shell \r\n    x:Class=\"TailwindTraders.Shell\"\r\n    FlyoutHeaderBehavior=\"Fixed\"\r\n    xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n    xmlns:local=\"clr-namespace:TailwindTraders.Views\"\r\n    Title=\"Tailwind Traders\"\r\n    x:Name=\"theShell\"\r\n    Route=\"tailwindtraders\"\r\n    RouteHost=\"microsoft.com\"\r\n    RouteScheme=\"app\">\r\n    \r\n    <Shell.ItemTemplate>\r\n        <DataTemplate>\r\n            <ContentView HeightRequest=\"32\">\r\n                <ContentView.Padding>\r\n                    <Thickness\r\n                    Left=\"32\"\r\n                    Top=\"16\" /> \r\n                </ContentView.Padding>\r\n                <Label Text=\"{Binding Title}\" />\r\n            </ContentView>\r\n        </DataTemplate>\r\n    </Shell.ItemTemplate>\r\n    <Shell.MenuItemTemplate>\r\n        <DataTemplate>\r\n            <ContentView HeightRequest=\"32\">\r\n                <ContentView.Padding>\r\n                    <Thickness\r\n                    Left=\"32\"\r\n                    Top=\"16\" />\r\n                </ContentView.Padding>\r\n                <Label Text=\"{Binding Text}\" FontAttributes=\"Bold\" />\r\n            </ContentView>\r\n        </DataTemplate>\r\n    </Shell.MenuItemTemplate>\r\n\r\n    <MenuItem\r\n        Command=\"{Binding ProductTypeCommand}\"\r\n        CommandParameter=\"1\"\r\n        Text=\"Holiday decorations\" />\r\n\r\n    <MenuItem\r\n        Command=\"{Binding ProductTypeCommand}\"\r\n        CommandParameter=\"2\"\r\n        Text=\"Appliances\" />\r\n\r\n    <MenuItem\r\n        Command=\"{Binding ProductTypeCommand}\"\r\n        CommandParameter=\"3\"\r\n        Text=\"Bathrooms\" />\r\n\r\n    <MenuItem\r\n        Command=\"{Binding ProductTypeCommand}\"\r\n        CommandParameter=\"4\"\r\n        Text=\"Doors &amp; Windows\" />\r\n\r\n    <MenuItem\r\n        Command=\"{Binding ProductTypeCommand}\"\r\n        CommandParameter=\"5\"\r\n        Text=\"Flooring\" />\r\n\r\n    <MenuItem\r\n        Command=\"{Binding ProductTypeCommand}\"\r\n        CommandParameter=\"6\"\r\n        Text=\"Kitchen\" />\r\n\r\n    <MenuItem\r\n        Command=\"{Binding ProductTypeCommand}\"\r\n        CommandParameter=\"7\"\r\n        Text=\"Storage\" />\r\n\r\n    <ShellItem Title=\"Home\">\r\n        <ShellSection>\r\n            <ShellContent>\r\n                <local:HomePage />\r\n            </ShellContent>\r\n        </ShellSection>\r\n    </ShellItem>\r\n    \r\n</Shell>\r\n```\r\n\r\nI need to be able to control both the order and the template styling for each type. I would also like to be able to specify the template ON the ShellItem or MenuItem directly, in case I have a unique template for a specific template. \r\nParent: #2415"},{"Id":"9598973322","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2415","RelatedDescription":"Closed issue \"Xamarin.Forms.Shell Spec\" (#2415) at xamarin/Xamarin.Forms","RelatedBody":"# Xamarin.Forms Shell Spec\r\nMake it simple and straightforward for new developers to get a complete app experience that is properly structured, uses the right elements, with very little effort and a clear path to being good by default.\r\n\r\nShell is an opinionated API at points, it does not always default every value to some .Default which may change based on the running platform. Instead it may set a value which is then respected across all platforms regardless what the platform default is.\r\n\r\nNote: Drawing Spec moved to: #2452\r\n\r\n# Visual Treatment\r\nNeeds screenshots...\r\n\r\n# Shell Hierarchy\r\nUnderstanding the Shell hierarchy at first can seem overwhelming at first. It represents a complex hierarchy and provides powerful mechanisms for minimizing the amount of boilerplate xaml required to create rich hierarchies.\r\n\r\nThus when first learning shell it is easiest to learn without the shortcuts first, and then introduce the shortcuts to see how to easily minimize the amount of XAML being written.\r\n\r\nNote that all samples that follow do not use templated ShellContent's, which are discussed elsewhere in the spec. Failure to properly use ShellContents with a ContentTemplate will result in all pages being loaded at startup, which will negatively impact startup performance. These samples are for learning purposes only.\r\n\r\nFortunately using ShellContents with ContentTemplates is usually more concise than not using them.\r\n\r\n## No shortcuts\r\nMany of these samples will look needlessly complex, and in reality they are. In the next section these will get simplified.\r\n\r\n### A simple one page app\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n    <ShellSection>\r\n      <ShellContent>\r\n        <local:HomePage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n![step1](https://user-images.githubusercontent.com/30443/40998552-09aa2c7e-68bd-11e8-9ba3-e92d8ec76344.PNG)\r\n\r\nThe top bar can be hidden entirely by setting `Shell.NavBarVisible=\"false\"` on the MainPage. The Flyout would also look rather sparse in this mode and is thus disabled in this sample.\r\n\r\n### Two page app with bottom tabs\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n\r\n    <ShellSection Title=\"Home\" Icon=\"home.png\">\r\n      <ShellContent>\r\n        <local:HomePage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n\r\n    <ShellSection Title=\"Notifications\" Icon=\"bell.png\">\r\n      <ShellContent>\r\n        <local:NotificationsPage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n![step2](https://user-images.githubusercontent.com/30443/40998559-0e9fb3b6-68bd-11e8-819e-9dcdee3d396e.PNG)\r\n\r\nBy adding a section `ShellSection` to the `ShellItem` another bottom tab appears. Settings the approriate title and icon allows control over the Tab item title and icon.\r\n\r\n### Two page app with top and bottom tabs\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n\r\n    <ShellSection Title=\"Home\" Icon=\"home.png\">\r\n      <ShellContent>\r\n        <local:HomePage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n\r\n    <ShellSection Title=\"Notifications\" Icon=\"bell.png\">\r\n\r\n      <ShellContent Title=\"Recent\">\r\n        <local:NotificationsPage />\r\n      </ShellContent>\r\n\r\n      <ShellContent Title=\"Alert Settings\">\r\n        <local:SettingsPage />\r\n      </ShellContent>\r\n\r\n    </ShellSection>\r\n\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n![step3](https://user-images.githubusercontent.com/30443/40998570-140b5382-68bd-11e8-968d-f7c6b87d50bf.PNG)\r\n\r\nBy adding a second `ShellContent` to the `ShellSection` a top tab bar is added and the pages can be flipped between when the bottom tab is selected.\r\n\r\n### Two page app using flyout navigation\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <Shell.FlyoutHeader>\r\n    <local:FlyoutHeader />\r\n  </Shell.FlyoutHeader>\r\n\r\n  <ShellItem Title=\"Home\" Icon=\"home.png\">\r\n    <ShellSection>\r\n      <ShellContent>\r\n        <local:HomePage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n  </ShellItem>\r\n\r\n  <ShellItem Title=\"Notifications\" Icon=\"bell.png\">\r\n    <ShellSection>\r\n      <ShellContent>\r\n        <local:NotificationsPage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n![step4](https://user-images.githubusercontent.com/30443/40998574-17ca458c-68bd-11e8-8d45-639933e0dfd7.PNG)\r\n\r\nThe flyout is re-enabled in this sample. Here the user can switch between the two pages using the flyout as an intermediary. A header has also been added to look nice.\r\n\r\n## Using shorthand syntax\r\n\r\nNow that all levels of the hierarchy have been shown and breifly explained, it is possible to leave most of the unneeded wrapping out when defining a hierarchy. `Shell` only ever contains `ShellItem`s which only ever contain `ShellSection`s which in turn only ever contain `ShellContent`s. However there are implicit conversion operators in place to allow for automatic up-wrapping.\r\n\r\n### A simple one page app\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <local:HomePage />\r\n</Shell>\r\n```\r\n\r\nWith implicit wrapping the Page is automatically wrapped all the way up to a `ShellItem`. It is not needed to write out all the intermiedate layers. The `Title` and `Icon` from the `Page` will be bound up to any implicitly generated parents.\r\n\r\n### Two page app with bottom tabs\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n    <local:HomePage Icon=\"home.png\" />\r\n    <local:NotificationsPage Icon=\"bell.png\" />\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\nThe pages are now implicitly wrapped up into ShellContent and their own ShellSections. This results in two different tabs being created, just like before.\r\n\r\n### Two page app with top and bottom tabs\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n    <local:HomePage Icon=\"home.png\" />\r\n\r\n    <ShellSection Title=\"Notifications\" Icon=\"bell.png\">\r\n        <local:NotificationsPage />\r\n        <local:SettingsPage />\r\n    </ShellSection>\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n### Two page app using flyout navigation\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <Shell.FlyoutHeader>\r\n    <local:FlyoutHeader />\r\n  </Shell.FlyoutHeader>\r\n\r\n  <local:HomePage Icon=\"home.png\" />\r\n  <local:NotificationsPage Icon=\"bell.png\" />\r\n</Shell>\r\n```\r\n\r\nHere the implicit wrapping goes all the way up to shell item so there is no need for us to do any wrapping ourselves.\r\n\r\n# Navigation Model\r\n## Push Navigation\r\n\r\nAll navigation is based on the View’s .Navigation property. Pushes go into the current ShellSection that is displayed. This means in a push event the top tabs will go away and the bottom tabs will remain.\r\n\r\n## URI Navigation\r\nThe Shell can be navigated using the standard Navigation property as discussed above, however shell introduces a far more convenient navigation mechanism.\r\n\r\nNavigation URI's are formatted as follows:\r\n\r\n```\r\n[Shell.RouteScheme]://[Shell.RouteHost]/[Shell]/[ShellItem]/[ShellSection]/[ShellContent]/[NavStack1]/[NavStack2]...\r\n```\r\n\r\nAll items in the shell hierarchy have a route associated with them. If the route is not set by the developer, the route is generated at runtime. Runtime generated routes are not gauranteed to be stable across different runs of the app and thus are not useful for deep linking.\r\n\r\n# Handling the Back Button\r\n\r\nSince Shell will be in the enviable position of not having to use native controls, all forms of back button overriding can and should be supported.\r\n\r\nProper handling of the back button needs to support the following features:\r\n\r\n\r\n- Intercepting interactions and stopping them\r\n- Replacing the back button with something else\r\n- Hiding the back button entirely when desired\r\n- Work for software and hardware buttons\r\n\r\nThe API needs to be granular to the page level for ease of use, but also be able to be handled further up the stack in a more general level.\r\n\r\n# Code Samples and API\r\n## Samples\r\n```xaml\r\n<Shell>\r\n  <Shell.FlyoutHeaderTemplate>\r\n    <DataTemplate>\r\n      <Grid>\r\n        <Label Text=\"{x:Bind HeaderText}\" />\r\n      </Grid>\r\n    </DataTemplate>\r\n  </Shell.FlyoutHeaderTemplate>\r\n  \r\n  // Flyout Item 1\r\n  <ShellItem Title=\"My music\" ItemsSource=\"{x:Bind MyMusicModels}\" TabLocation=\"Bottom\">\r\n    <ShellItem.ItemTemplate>\r\n      <local:MyMusicItemTemplateSelection />\r\n    </ShellItem.ItemTemplate>\r\n  </ShellItem>\r\n  \r\n  // Flyout Item 2\r\n  <ShellItem Title=\"Home\" Icon=\"home.png\" GroupBehavior=\"ShowTabs\">\r\n    <ShellContent Title=\"My Friends\">\r\n      <local:FriendsPage />\r\n    </ShellContent>\r\n    <local:FeedPage />\r\n    <local:ProfilePage />\r\n  </ShellItem>\r\n  \r\n  // Flyout Item 3\r\n  <local:SettingsPage />\r\n  \r\n  // Flyout Item 4\r\n  <MenuItem Text=\"Log Out\" Command=\"{x:Bind LogOutCommand}\" />\r\n</Shell>\r\n```\r\n### Single Page App using Shell\r\n```xaml\r\n<Shell FlyoutVisibility=\"Disabled\">\r\n  <local:MyPage />\r\n</Shell>\r\n```\r\n### Single Group of Tabs app (no Flyout)\r\n```xaml\r\n<Shell FlyoutVisibility=\"Disabled\">\r\n  <ShellItem>\r\n    <local:MyPage />\r\n    <local:MySecondPage />\r\n    <local:MyThirdPage />\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n### Multiple pages in flyout with no tabs\r\n```xaml\r\n<Shell FlyoutVisibility=\"Disabled\">\r\n  <local:MyPage />\r\n  <local:MySecondPage />\r\n  <local:MyThirdPage />\r\n</Shell>\r\n```\r\n### Single Page Searchable App\r\n```xaml\r\n<Shell FlyoutVisibility=\"Disabled\">\r\n  <local:MyPage />\r\n</Shell>\r\n```\r\n```csharp\r\npublic class MyPage : ContentPage\r\n{\r\n  public class MyPageSearchHandler : SearchHandler\r\n  {\r\n    public MyPageHandler ()\r\n    {\r\n      SearchBoxVisibility = SearchBoxVisibility.Collapsed;\r\n      IsSearchEnabled = true;\r\n      Placeholder = \"Search me!\";\r\n    }\r\n\r\n    protected override async void OnSearchConfirmed (string query)\r\n    {\r\n      IsSearching = true;\r\n    \r\n      await PerformSearch (query);\r\n      UpdateResults ();\r\n      \r\n      IsSearching = false;\r\n    }\r\n    \r\n    protected override void OnSearchChanged (string oldValue, string newValue)\r\n    {\r\n      // Do nothing, we will wait for confirmation\r\n    }\r\n  }\r\n\r\n  public MyPage ()\r\n  {\r\n    Shell.SetSearchHandler (this, new MyPageSearchHandler ());\r\n  }\r\n}\r\n```\r\n## API Definition\r\n\r\n### Shell\r\nThis is the base class for Shell's. It defines a somewhat strict navigational model however all shells must adhere to it in general. It does not include any theming or design language specific features.\r\n\r\n```csharp\r\n[ContentProperty(\"Items\")]\r\npublic class Shell : Page, IShellController\r\n{\r\n  // Attached Properties\r\n  public static readonly BindableProperty BackButtonBehaviorProperty;\r\n  public static readonly BindableProperty FlyoutBehaviorProperty;\r\n  public static readonly BindableProperty NavBarVisibleProperty;\r\n  public static readonly BindableProperty SearchHandlerProperty;\r\n  public static readonly BindableProperty SetPaddingInsetsProperty;\r\n  public static readonly BindableProperty TabBarVisibleProperty;\r\n  public static readonly BindableProperty TitleViewProperty;\r\n  public static readonly BindableProperty ShellBackgroundColorProperty;\r\n  public static readonly BindableProperty ShellDisabledColorProperty;\r\n  public static readonly BindableProperty ShellForegroundColorProperty;\r\n  public static readonly BindableProperty ShellTabBarBackgroundColorProperty;\r\n  public static readonly BindableProperty ShellTabBarDisabledColorProperty;\r\n  public static readonly BindableProperty ShellTabBarForegroundColorProperty;\r\n  public static readonly BindableProperty ShellTabBarTitleColorProperty;\r\n  public static readonly BindableProperty ShellTabBarUnselectedColorProperty;\r\n  public static readonly BindableProperty ShellTitleColorProperty;\r\n  public static readonly BindableProperty ShellUnselectedColorProperty;\r\n\r\n  public static BackButtonBehavior GetBackButtonBehavior(BindableObject obj);\r\n  public static FlyoutBehavior GetFlyoutBehavior(BindableObject obj);\r\n  public static bool GetNavBarVisible(BindableObject obj);\r\n  public static SearchHandler GetSearchHandler(BindableObject obj);\r\n  public static bool GetSetPaddingInsets(BindableObject obj);\r\n  public static bool GetTabBarVisible(BindableObject obj);\r\n  public static View GetTitleView(BindableObject obj);\r\n  public static void SetBackButtonBehavior(BindableObject obj, BackButtonBehavior behavior);\r\n  public static void SetFlyoutBehavior(BindableObject obj, FlyoutBehavior value);\r\n  public static void SetNavBarVisible(BindableObject obj, bool value);\r\n  public static void SetSearchHandler(BindableObject obj, SearchHandler handler);\r\n  public static void SetSetPaddingInsets(BindableObject obj, bool value);\r\n  public static void SetTabBarVisible(BindableObject obj, bool value);\r\n  public static void SetTitleView(BindableObject obj, View value);\r\n  public static Color GetShellBackgroundColor(BindableObject obj);\r\n  public static Color GetShellDisabledColor(BindableObject obj);\r\n  public static Color GetShellForegroundColor(BindableObject obj);\r\n  public static Color GetShellTabBarBackgroundColor(BindableObject obj);\r\n  public static Color GetShellTabBarDisabledColor(BindableObject obj);\r\n  public static Color GetShellTabBarForegroundColor(BindableObject obj);\r\n  public static Color GetShellTabBarTitleColor(BindableObject obj);\r\n  public static Color GetShellTabBarUnselectedColor(BindableObject obj);\r\n  public static Color GetShellTitleColor(BindableObject obj);\r\n  public static Color GetShellUnselectedColor(BindableObject obj);\r\n  public static void SetShellBackgroundColor(BindableObject obj, Color value);\r\n  public static void SetShellDisabledColor(BindableObject obj, Color value);\r\n  public static void SetShellForegroundColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarBackgroundColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarDisabledColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarForegroundColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarTitleColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarUnselectedColor(BindableObject obj, Color value);\r\n  public static void SetShellTitleColor(BindableObject obj, Color value);\r\n  public static void SetShellUnselectedColor(BindableObject obj, Color value);\r\n\r\n  // Bindable Properties\r\n  public static readonly BindableProperty CurrentItemProperty;\r\n  public static readonly BindableProperty CurrentStateProperty;\r\n  public static readonly BindableProperty FlyoutBackgroundColorProperty;\r\n  public static readonly BindableProperty FlyoutHeaderBehaviorProperty;\r\n  public static readonly BindableProperty FlyoutHeaderProperty;\r\n  public static readonly BindableProperty FlyoutHeaderTemplateProperty;\r\n  public static readonly BindableProperty FlyoutIsPresentedProperty;\r\n  public static readonly BindableProperty GroupHeaderTemplateProperty;\r\n  public static readonly BindableProperty ItemsProperty;\r\n  public static readonly BindableProperty ItemTemplateProperty;\r\n  public static readonly BindableProperty MenuItemsProperty;\r\n  public static readonly BindableProperty MenuItemTemplateProperty;\r\n\r\n  public Shell();\r\n\r\n  public event EventHandler<ShellNavigatedEventArgs> Navigated;\r\n\r\n  public event EventHandler<ShellNavigatingEventArgs> Navigating;\r\n\r\n  public ShellItem CurrentItem {get; set;}\r\n\r\n  public ShellNavigationState CurrentState {get; }\r\n\r\n  public Color FlyoutBackgroundColor {get; set;}\r\n\r\n  public FlyoutBehavior FlyoutBehavior {get; set;}\r\n\r\n  public object FlyoutHeader {get; set;}\r\n\r\n  public FlyoutHeaderBehavior FlyoutHeaderBehavior {get; set;}\r\n\r\n  public DataTemplate FlyoutHeaderTemplate {get; set;}\r\n\r\n  public bool FlyoutIsPresented {get; set;}\r\n\r\n  public DataTemplate GroupHeaderTemplate {get; set;}\r\n\r\n  public ShellItemCollection Items {get; }\r\n\r\n  public DataTemplate ItemTemplate {get; set;}\r\n\r\n  public MenuItemCollection MenuItems {get; }\r\n\r\n  public DataTemplate MenuItemTemplate {get; set;}\r\n\r\n  public string Route {get; set;}\r\n\r\n  public string RouteHost { get; set; }\r\n\r\n  public string RouteScheme { get; set; }\r\n\r\n  public async Task GoToAsync(ShellNavigationState state, bool animate = true);\r\n\r\n  protected virtual void OnNavigated(ShellNavigatedEventArgs args);\r\n\r\n  protected virtual void OnNavigating(ShellNavigatingEventArgs args);\r\n}\r\n```\r\n#### Description\r\n\r\nAttached Properties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| SearchHandlerProperty | Attached property for the definition of a page level Search capability. Can be attached at multiple points in the hierarchy.   Uses some of the features defined here https://material.io/guidelines/patterns/search.html#search-in-app-search |\r\n| BackButtonBehavior | Allows complete override of how the back button behaves. Applies to on-screen and physical back buttons. |\r\n| FlyoutBehavior | Defines how the Flyout should present itself. This can be attached to `ShellItem`s, `ShellContent`s, or `Page`s to override the default behavior. |\r\n| NavBarVisibleProperty | Property set on a `Page` to define if the NavBar should be visible when it is presented |\r\n| SetPaddingInsetsProperty | Setting this property on a `Page` will cause its `Padding` to be set such that its content will not flow under any Shell chrome. |\r\n| TabBarVisibleProperty | Property set on a `Page` to define if the TabBar should be visible when it is presented |\r\n| TitleViewProperty | Property set on a `Page` to define the `TitleView` |\r\n| ShellBackgroundColorProperty | Describes the background color which should be used for the chrome elements of the Shell. This color will not fill in behind the Content of the Shell. |\r\n| ShellDisabledColorProperty | The color to shade text/icons which are disabled |\r\n| ShellForegroundColorProperty | The color to shade normal text/icons in the shell |\r\n| ShellTabBarBackgroundColorProperty | Override of ShellBackgroudnColor for the TabBar. If not set ShellBackgroundColor will be used |\r\n| ShellTabBarDisabledColorProperty | Override of ShellDisabledColor for the TabBar. If not set ShellDisabledColorProperty will be used |\r\n| ShellTabBarForegroundColorProperty | Override of ShellForegroundColorProperty for the TabBar. If not set ShellForegroundColorProperty will be used |\r\n| ShellTabBarTitleColorProperty | Override of ShellTitleColorProperty for the TabBar. If not set ShellTitleColorProperty will be used |\r\n| ShellTabBarUnselectedColorProperty | Override of ShellUnselectedColorProperty for the TabBar. If not set ShellUnselectedColorProperty will be used |\r\n| ShellTitleColorProperty | The color used for the title of the current Page |\r\n| ShellUnselectedColorProperty | The color used for unselected text/icons in the shell chrome |\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| CurrentItem | The currently selected ShellItem |\r\n| CurrentState | The current navigation state of the Shell. Passing this state back to GoToAsync will cause the Shell to return to navigate back state. |\r\n| FlyoutBackgroundColorProperty | The background color of the Flyout menu |\r\n| FlyoutBehavior | Sets the default `FlyoutBehavior` for the `Shell`. |\r\n| FlyoutHeader | The object used as the Header of the Flyout. If `FlyoutHeaderTemplate` is not null, this is passed as the `BindingContext` to the inflated object. If `FlyoutHeaderTemplate` is null and `FlyoutHeader` is of type `View` it will be used directly. Otherwise it will be shown by calling ToString() and displaying the result. |\r\n| FlyoutHeaderBehavior | Sets the behavior of the `FlyoutHeader` when the Flyout needs to be scrolled to show contents. |\r\n| FlyoutHeaderTemplate | The template used to create a header for the Flyout. |\r\n| FlyoutIsPresented | Gets or sets whether or not the Flyout is current visible |\r\n| GroupHeaderTemplate | The `DataTemplate` used to show a Group Header if a `ShellItem` requests to be displayed as a Group of Tabs in the Flyout. If null, no header is displayed. |\r\n| Items | The primary Content of a Shell. Items define the list of items that will show in the Flyout as well as the content that will be displayed when a sidebar item is selected. |\r\n| ItemTemplate | The `DataTemplate` used to show items from the `Items` collection in the Flyout. Allows the developer to control visuals in the Flyout. |\r\n| MenuItems | A collection of `MenuItem`s which will show up in the flyout in their own section. |\r\n| MenuItemTemplate | The `DataTemplate` to use when displayed a `MenuItem` in the Flyout. |\r\n| Route | The route part to address this element when performing deep linking. |\r\n| RouteHost | The string to place in the host portion of the URI generated when creating deep-links |\r\n| RouteScheme | The string to place in the scheme portion of the URI generated when creating deep-links |\r\n\r\nPublic Methods:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| GoToAsync | Navigate to a `ShellNavigationState`. Returns a Task which will complete once the animation has completed. |\r\n\r\nPublic Events:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Navigating | The `Shell` is about to perform a Navigation either due to user interaction or the developer calling an API. The developer may cancel Navigation here if possible. |\r\n| Navigated | The `Shell` has completed a Navigation event. |\r\n\r\n### ShellItemCollection\r\nA collection for `ShellItem`s\r\n```csharp\r\npublic sealed class ShellItemCollection : IEnumerable<ShellItem>, IList<ShellItem>\r\n```\r\n\r\n### MenuItemCollection\r\nA collection for `MenuItem`s\r\n```csharp\r\npublic sealed class MenuItemCollection : IEnumerable<MenuItem>, IList<MenuItem>\r\n```\r\n\r\n### ShellSectionCollection\r\nA collection for `ShellSection`s\r\n```csharp\r\npublic sealed class ShellSectionCollection : IEnumerable<ShellSection>, IList<ShellSection>\r\n```\r\n\r\n### ShellContentCollection\r\nA collection for `ShellContent`s\r\n```csharp\r\npublic sealed class ShellContentCollection : IEnumerable<ShellContent>, IList<ShellContent>\r\n```\r\n\r\n### ShellNavigatingEventArgs\r\nAn `EventArgs` used to describe a navigation event which is about to occur. The `ShellNavigationEventArgs` may also be used to cancel the navigation event if the developer desires.\r\n```csharp\r\npublic class ShellNavigatingEventArgs : EventArgs\r\n{\r\n  public ShellNavigationState Current { get; }\r\n\r\n  public ShellNavigationState Target { get; }\r\n\r\n  public ShellNavigationSource Source { get; }\r\n\r\n  public bool CanCancel { get; }\r\n\r\n  public bool Cancel ();\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Current | The current NavigationState of the `Shell`. Calling `GoToAsync` with this `ShellNavigationState` will effectively undo this navigation event. |\r\n| Target | The state the `Shell` will be in after this navigation event completes. |\r\n| Source | The type of navigation which occurred to trigger this event. There may be multiple flags set. |\r\n| CanCancel | Whether or not the navigation event is cancellable. Not all events can be cancelled. |\r\n\r\nPublic Methods:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Cancel | Cancels the current navigation event. Returns true if the cancellation was succesful. |\r\n\r\n### ShellNavigatedEventArgs\r\n```csharp\r\npublic class ShellNavigatedEventArgs : EventArgs\r\n{\r\n  public ShellNavigationState Previous { get; }\r\n\r\n  public ShellNavigationState Current { get; }\r\n\r\n  public ShellNavigationSource Source { get; }\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Previous | The prior NavigationState of the `Shell`. |\r\n| Current | The new state the `Shell` is in when this navigation event completed. |\r\n| Source | The type of navigation which occurred to trigger this event. There may be multiple flags set. |\r\n\r\n### ShellNavigationState\r\n```csharp\r\npublic class ShellNavigationState\r\n{\r\n  public Uri Location { get; set; }\r\n\r\n  public ShellNavigationState ();\r\n  public ShellNavigationState (string location);\r\n  public ShellNavigationState (Uri uri);\r\n\r\n  public static implicit operator ShellNavigationState (Uri uri);\r\n  public static implicit operator ShellNavigationState (String value);\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Location | The Uri which describes the navigation state of the `Shell` |\r\n\r\nConstructors:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| (void) | Creates a new `ShellNavigationState` with a null Location |\r\n| (String) | Creates a new `ShellNavigationState` with the Location set to the supplied `string` |\r\n| (Uri) | Creates a new `ShellNavigationState` with the Location set to the supplied `Uri` |\r\n\r\n\r\n### ShellNavigationSource\r\n```csharp\r\n[Flags]\r\npublic enum ShellNavigationSource\r\n{\r\n  Unknown = 0,\r\n  Push,\r\n  Pop,\r\n  PopToRoot,\r\n  Insert,\r\n  Remove,\r\n  ShellItemChanged,\r\n  ShellSectionChanged,\r\n  ShellContentChanged,\r\n}\r\n```\r\n\r\n### BaseShellItem\r\n```caharp\r\npublic class BaseShellItem : NavigableElement\r\n{\r\n  public static readonly BindableProperty FlyoutIconProperty;\r\n  public static readonly BindableProperty IconProperty;\r\n  public static readonly BindableProperty IsCheckedProperty;\r\n  public static readonly BindableProperty IsEnabledProperty;\r\n  public static readonly BindableProperty TitleProperty;\r\n\r\n  public ImageSource FlyoutIcon { get; set; }\r\n\r\n  public ImageSource Icon { get; set; }\r\n\r\n  public bool IsChecked { get; }\r\n\r\n  public bool IsEnabled { get; set; }\r\n\r\n  public string Route { get; set; }\r\n\r\n  public string Title { get; set; }\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| FlyoutIcon | The default icon to use when displayed in the Flyout. Will default to Icon if not set. |\r\n| Icon | The icon to display in parts of the chrome which are not the Flyout. |\r\n| IsChecked | If the `BaseShellItem` is currently checked in the Flyout (and thus should be highlighted) |\r\n| IsEnabled | If the the `BaseShellItem` is selectable in the chrome |\r\n| Route | Equivelant to setting Routing.Route |\r\n| Title | The Title to display in the UI |\r\n\r\n### ShellGroupItem\r\n\r\n```csharp\r\npublic class ShellGroupItem : BaseShellItem\r\n{\r\n  public static readonly BindableProperty FlyoutDisplayOptionsProperty;;\r\n\r\n  public FlyoutDisplayOptions FlyoutDisplayOptions { get; set; }\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| FlyoutDisplayOptions | Controls how this item and its children are displayed in the flyout |\r\n\r\n### ShellItem\r\n```csharp\r\n[ContentProperty(\"Items\")]\r\npublic class ShellItem : ShellGroupItem, IShellItemController, IElementConfiguration<ShellItem>\r\n{\r\n  public static readonly BindableProperty CurrentItemProperty;\r\n\r\n  public ShellItem();\r\n\r\n  public ShellSection CurrentItem { get; set; }\r\n\r\n  public ShellSectionCollection Items;\r\n\r\n  public static implicit operator ShellItem(ShellSection shellSection);\r\n\r\n  public static implicit operator ShellItem(ShellContent shellContent);\r\n\r\n  public static implicit operator ShellItem(TemplatedPage page);\r\n\r\n  public static implicit operator ShellItem(MenuItem menuItem);\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| CurrentItem | The selected `ShellSection`. |\r\n| Items | The `ShellSectionCollection` which is the primary content of a ShellItem. This collection defines all the tabs within a ShellItem. |\r\n\r\n### ShellSection\r\n```csharp\r\n[ContentProperty(\"Items\")]\r\npublic class ShellSection : ShellGroupItem, IShellSectionController\r\n{\r\n  public static readonly BindableProperty CurrentItemProperty;\r\n  public static readonly BindableProperty ItemsProperty\r\n\r\n  public ShellSection();\r\n\r\n  public ShellContent CurrentItem { get; set; }\r\n\r\n  public ShellContentCollection Items { get; }\r\n\r\n  public IReadOnlyList<Page> Stack { get; }\r\n\r\n  public static implicit operator ShellSection(ShellContent shellContent);\r\n\r\n  public virtual async Task GoToAsync(List<string> routes, IDictionary<string, string> queryData, bool animate);\r\n\r\n  protected virtual IReadOnlyList<Page> GetNavigationStack();\r\n\r\n  protected virtual void OnInsertPageBefore(Page page, Page before);\r\n\r\n  protected async virtual Task<Page> OnPopAsync(bool animated);\r\n\r\n  protected virtual async Task OnPopToRootAsync(bool animated);\r\n\r\n  protected virtual Task OnPushAsync(Page page, bool animated);\r\n\r\n  protected virtual void OnRemovePage(Page page);\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| CurrentItem | The selected `ShellContent` of the ShellSection. |\r\n| Items | The `ShellContentCollection` which is the root content of the ShellSection. |\r\n| Stack | The current pushed navigation stack on the ShellSection. |\r\n\r\nMethods:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| GoToAsync | Used by deep-linking to navigate to a known location. Should not need to be called directly in most cases. |\r\n| GetNavigationStack | Returns the current navigation stack |\r\n| OnInsertPageBefore | Called when the `INavigation` interfaces `InsertPageBefore` method is called |\r\n| OnPopAsync | Called when the `INavigation` interfaces `PopAsync` method is called |\r\n| OnPopToRootAsync | Called when the `INavigation` interfaces `PopToRootAsync` method is called |\r\n| OnPushAsync | Called when the `INavigation` interfaces `PushAsync` method is called |\r\n| OnRemovePage | Called when the `INavigation` interfaces `RemovePage` method is called |\r\n\r\n### ShellContent\r\n```csharp\r\n[ContentProperty(\"Content\")]\r\npublic class ShellContent : BaseShellItem, IShellContentController\r\n{\r\n  public static readonly BindableProperty ContentProperty;\r\n  public static readonly BindableProperty ContentTemplateProperty;\r\n  public static readonly BindableProperty MenuItemsProperty;\r\n\r\n  public ShellContent();\r\n\r\n  public object Content { get; set; }\r\n\r\n  public DataTemplate ContentTemplate { get; set; }\r\n\r\n  public MenuItemCollection MenuItems { get; }\r\n\r\n  public static implicit operator ShellContent(TemplatedPage page);\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Content | The Content of a ShellContent. Usually a `ContentPage` or the `BindingContext` of the `Page` inflated by the `ContentTemplate` |\r\n| ContentTemplate | Used to dynamically inflate the content of the `ShellContent`. The `Content` property will be set as the `BindingContext` after inflation. |\r\n| MenuItems | The items to display in the Flyout when this ShellContent is the presented page |\r\n\r\n### SearchHandler\r\n```csharp\r\npublic class SearchHandler : BindableObject, ISearchHandlerController\r\n{\r\n  public static readonly BindableProperty ClearIconHelpTextProperty;\r\n  public static readonly BindableProperty ClearIconNameProperty;\r\n  public static readonly BindableProperty ClearIconProperty;\r\n  public static readonly BindableProperty ClearPlaceholderCommandParameterProperty;\r\n  public static readonly BindableProperty ClearPlaceholderCommandProperty;\r\n  public static readonly BindableProperty ClearPlaceholderEnabledProperty;\r\n  public static readonly BindableProperty ClearPlaceholderHelpTextProperty;\r\n  public static readonly BindableProperty ClearPlaceholderIconProperty;\r\n  public static readonly BindableProperty ClearPlaceholderNameProperty;\r\n  public static readonly BindableProperty CommandParameterProperty;\r\n  public static readonly BindableProperty CommandProperty;\r\n  public static readonly BindableProperty DisplayMemberNameProperty;\r\n  public static readonly BindableProperty IsSearchEnabledProperty;\r\n  public static readonly BindableProperty ItemsSourceProperty;\r\n  public static readonly BindableProperty ItemTemplateProperty;\r\n  public static readonly BindableProperty PlaceholderProperty;\r\n  public static readonly BindableProperty QueryIconHelpTextProperty;\r\n  public static readonly BindableProperty QueryIconNameProperty;\r\n  public static readonly BindableProperty QueryIconProperty;\r\n  public static readonly BindableProperty QueryProperty;\r\n  public static readonly BindableProperty SearchBoxVisibilityProperty;\r\n  public static readonly BindableProperty ShowsResultsProperty;\r\n\r\n  public ImageSource ClearIcon { get; set; }\r\n\r\n  public string ClearIconHelpText { get; set; }\r\n\r\n  public string ClearIconName { get; set; }\r\n\r\n  public ICommand ClearPlaceholderCommand { get; set; }\r\n\r\n  public object ClearPlaceholderCommandParameter { get; set; }\r\n\r\n  public bool ClearPlaceholderEnabled { get; set; }\r\n\r\n  public string ClearPlaceholderHelpText { get; set; }\r\n\r\n  public ImageSource ClearPlaceholderIcon { get; set; }\r\n\r\n  public string ClearPlaceholderName { get; set; }\r\n\r\n  public ICommand Command { get; set; }\r\n\r\n  public object CommandParameter { get; set; }\r\n\r\n  public string DisplayMemberName { get; set; }\r\n\r\n  public bool IsSearchEnabled { get; set; }\r\n\r\n  public IEnumerable ItemsSource { get; set; }\r\n\r\n  public DataTemplate ItemTemplate { get; set; }\r\n\r\n  public string Placeholder { get; set; }\r\n\r\n  public string Query { get; set; }\r\n\r\n  public ImageSource QueryIcon { get; set; }\r\n\r\n  public string QueryIconHelpText { get; set; }\r\n\r\n  public string QueryIconName { get; set; }\r\n\r\n  public SearchBoxVisiblity SearchBoxVisibility { get; set; }\r\n\r\n  public bool ShowsResults { get; set; }\r\n\r\n  protected virtual void OnClearPlaceholderClicked();\r\n\r\n  protected virtual void OnItemSelected(object item);\r\n\r\n  protected virtual void OnQueryChanged(string oldValue, string newValue);\r\n\r\n  protected virtual void OnQueryConfirmed();\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| ClearIconHelpText | The accessible help text for the clear icon |\r\n| ClearIconNameProperty | The name of the clear icon for usage with screen readers |\r\n| ClearIcon | The icon displayed to clear the contents of the search box. |\r\n| ClearPlaceholderCommandParameter | The paramter for the `ClearPlaceholderCommand` |\r\n| ClearPlacehodlerCommand | The command to execute when the ClearPlaceholder icon is tapped |\r\n| ClearPlaceholderEnabled | The enabled state of the ClearPlaceholderIcon. Default is true. |\r\n| ClearPlaceholderHelpText | The accessible help text for the clear placeholder icon |\r\n| ClearPlaceholderIcon | The icon displayed in the `ClearIcon` location when the search box is empty. |\r\n| ClearPlaceholderName | The name of the clear placeholder icon for usage with screen readers |\r\n| CommandParameter | The parameter for the `Command` |\r\n| Command | The `ICommand` to execute when a query is confirmed\r\n| DisplayMemberPath | The name or path of the property that is displayed for each the data item in the `ItemsSource`. |\r\n| IsSearchEnabled | Controls the enabled state of the search box. |\r\n| ItemsSource | A collection of items to display in the suggestion area. |\r\n| ItemTemplate | A template for the items displayed in the suggestion area. |\r\n| Placeholder | A string to display when the search box is empty. |\r\n| QueryIconHelpTextProperty | The accessible help text for the query icon |\r\n| QueryIconNameProperty | The name of the query icon for usage with screen readers |\r\n| QueryIcon | The icon used to indicate to the user that search is available |\r\n| Query | The current string in the search box. |\r\n| SearchBoxVisibility | Defines the visibility of the search box in the `Shell`s chrome. |\r\n| ShowsResults | Determines if search results should be expected on text entry |\r\n\r\nProtected Methods:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| OnClearPlaceholderClicked | Called whenever the ClearPlaceholder icon has been pressed. |\r\n| OnItemSelected | Called whenever a search result is pressed by the user |\r\n| OnQueryConfirmed | Called whenever the user pressed enter or confirms their entry in the search box. |\r\n| OnQueryChanged | Called when the `Query` is changed. |\r\n\r\n### SearchBoxVisiblity\r\n```csharp\r\npublic enum SearchBoxVisiblity\r\n{\r\n  Hidden,\r\n  Collapsable,\r\n  Expanded\r\n}\r\n```\r\n\r\n| Value | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Hidden | The search box is not visible or accessible. |\r\n| Collapsable | The search box is hidden until the user performs an action to reveal it. |\r\n| Expanded | The search box is visible as a fully expanded entry. |\r\n\r\n### BackButtonBehavior\r\n```csharp\r\npublic class BackButtonBehavior : BindableObject\r\n{\r\n  public ImageSource IconOverride { get; set; }\r\n  public string TextOverride { get; set; }\r\n  public ICommand Command { get; set; }\r\n  public object CommandParameter { get; set; }\r\n}\r\n```\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| IconOverride | Changes the Icon used for the back button. |\r\n| TextOverride | Changes the Text used to indicate backwards navigation if text is used. |\r\n| Command | Provides a replacement command to invoke when the back button is pressed. |\r\n| CommandParameter | The command parameter used with `Command` |\r\n\r\n### FlyoutDisplayOptions\r\nDetermines how the `ShellGroupItem` should display in the FlyoutMenu.\r\n```csharp\r\n  public enum FlyoutDisplayOptions\r\n  {\r\n    AsSingleItem,\r\n    AsMultipleItems,\r\n  }\r\n```\r\n\r\n| Value | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| AsSingleItem | The `ShellGroupItem` will be visible as a single entry in the Flyout. |\r\n| AsMultipleItems | The `ShellGroupItem` will be visible as a group of items, one for each child in the Flyout. |\r\n\r\n### FlyoutHeaderBehavior\r\nControls the behavior of the FlyoutHeader when scrolling.\r\n```csharp\r\npublic enum FlyoutHeaderBehavior {\r\n  Default,\r\n  Fixed,\r\n  Scroll,\r\n  CollapseOnScroll,\r\n}\r\n```\r\n\r\n| Value | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Default | Platform default behavior. |\r\n| Fixed | Header remains visible and unchanged at all times |\r\n| Scroll | Header scrolls out of view as user scrolls menu |\r\n| CollapseOnScroll | Header collapses to title only as user scrolls |\r\n\r\n### FlyoutBehavior\r\n```csharp\r\npublic enum FlyoutBehavior\r\n{\r\n  Disabled,\r\n  Flyout,\r\n  Locked\r\n}\r\n```\r\n\r\n| Value | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Disabled | The flyout cannot be acccessed by the user. |\r\n| Flyout | The Flyout is works as a normal flyout which can be open/closed by the user. |\r\n| Locked | The Flyout is locked out and cannot be closed by the user, it does not overalp content. |\r\n\r\n### DataTemplateExtension\r\nThis extension quickly converts a type into a ControlTemplate. This is useful for instances where the template would otherwise be specified as\r\n```xaml\r\n<ListView>\r\n  <ListView.ItemTemplate>\r\n    <DataTemplate>\r\n      <local:MyCell />\r\n    </DataTemplate>\r\n  </ListView.ItemTemplate>\r\n</ListView>\r\n```\r\n\r\nThis can then be condensed down to\r\n```xaml\r\n<ListView ItemTemplate=\"{DataTemplate local:MyCell}\" />\r\n```\r\n\r\n```csharp\r\npublic sealed class ControlTemplateExtension : IBindingExtension<ControlTemplate>\r\n```\r\n\r\n```csharp\r\npublic sealed class DataTemplateExtension : IBindingExtension<DataTemplate>\r\n```\r\n## Odds and Ends\r\n\r\n### What happens when you select a tab in Flyout which has been pushed to?\r\nThis is the equivalent of focusing the tab and calling PopToRoot on it.\r\n\r\n### What happens when I switch ShellItems and there are items on the backstack of a ShellContent of the old ShellItem\r\nIf the old ShellItem is templated, the back stack is lost. If the ShellItem is not templated the BackStack stays intact and when switching back to the old ShellItem the backstack will be properly reflected. Switching back may clear the backstack however as indicated in the above answer.\r\n\r\n# Effecient loading of pages\r\nA major problem with using the Shell is the ease by which a user can end up loading all pages at the start of their application run. This large frontloaded allocation can result in quite poor startup performance if a large number of content pages are needed. In order to fix this templating should be employed when possible.\r\n\r\n## Templated ShellContents\r\nTemplating shell tab items is the most granular form of templating available, it is fortunately also the easiest to do. Take the following shell.\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<MaterialShell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n               xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n               xmlns:local=\"clr-namespace:MyStore\"\r\n               x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem Title=\"My apps &amp; games\">\r\n    <local:UpdatesPage />\r\n    <local:InstalledPage />\r\n    <local:LibraryPage />\r\n  </ShellItem>\r\n\r\n  <ShellItem GroupBehavior=\"ShowTabs\">\r\n    <local:HomePage />\r\n    <local:GamesPage />\r\n    <local:MoviesTVPage />\r\n    <local:BooksPage />\r\n    <local:MusicPage />\r\n    <local:NewsstandPage />\r\n  </ShellItem>\r\n</MaterialShell>\r\n```\r\n\r\nWhen this Shell loads, all 9 pages will be inflated at once. This is because no templating is employed. To employ basic templating we can convert this into:\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<MaterialShell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n               xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n               xmlns:local=\"clr-namespace:MyStore\"\r\n               x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem Title=\"My apps &amp; games\">\r\n    <ShellContent Title=\"Updates\"        Icon=\"updates.png\" ContentTemplate=\"{DataTemplate local:UpdatesPage}\" />\r\n    <ShellContent Title=\"Installed Apps\" Icon=\"apps.png\"    ContentTemplate=\"{DataTemplate local:InstalledPage}\" />\r\n    <ShellContent Title=\"Library\"        Icon=\"library.png\" ContentTemplate=\"{DataTemplate local:LibraryPage}\" />\r\n  </ShellItem>\r\n\r\n  <ShellItem GroupBehavior=\"ShowTabs\">\r\n    <ShellContent Title=\"Home\"          Icon=\"updates.png\"   ContentTemplate=\"{DataTemplate local:HomePage}\" />\r\n    <ShellContent Title=\"Games\"         Icon=\"games.png\"     ContentTemplate=\"{DataTemplate local:GamesPage}\" />\r\n    <ShellContent Title=\"Movies and TV\" Icon=\"moviesTV.png\"  ContentTemplate=\"{DataTemplate local:MoviesTVPage}\" />\r\n    <ShellContent Title=\"Books\"         Icon=\"books.png\"     ContentTemplate=\"{DataTemplate local:BooksPage}\" />\r\n    <ShellContent Title=\"Music\"         Icon=\"music.png\"     ContentTemplate=\"{DataTemplate local:MusicPage}\" />\r\n    <ShellContent Title=\"Newsstand\"     Icon=\"newsstand.png\" ContentTemplate=\"{DataTemplate local:NewsstandPage}\" />\r\n  </ShellItem>\r\n</MaterialShell>\r\n```\r\n\r\nPages are now only loaded as needed and can be unloaded as needed as well. If needed the ShellItem's themselves can also be templated with a collection and a DataTemplateSelector which prevents even the ShellContents from having to be loaded eagerly, however this is largely unneeded and templating ShellItem is more useful for Shells that have ShellItems with large numbers of otherwise similar tabs. Templating the ShellContent should be the key area to provide templating for performance concerns.\r\n\r\n# Reconstructing the Google Play Store User Interface\r\nPlease note this is not intended to be a demo of the best way to code an application, but really the most concise format to shove together the UI for GPS. It also makes no attempt to virtualize the relevant pages by using ViewModels and DataTemplateSelector's. This means this would be quite bad performing as all pages would be loaded at app start. Reader is warned.\r\n\r\nAll page content is assumed to be working right, this is only to get the general idea of the chrome.\r\n## Shell.xaml\r\nA proper implementation of this would use ShellItems for every page and set the ItemsSource and ItemTemplate. This would allow each page to only be loaded once it is needed and unloaded when no longer needed.\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<MaterialShell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n               xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n               xmlns:local=\"clr-namespace:MyStore\"\r\n               x:Class=\"MyStore.Shell\"\r\n               FlyoutHeaderBehavior=\"Fixed\"\r\n               FlyoutHeader=\"{x:Bind HeaderViewModel}\">\r\n  <MaterialShell.FlyoutHeaderTemplate>\r\n    <local:CircleImageAndLabelControl HeightRequest=\"350\" />\r\n  </MaterialShell.FlyoutHeaderTempalte>\r\n\r\n  <ShellItem Title=\"My apps &amp; games\">\r\n    <ShellItem.ShellAppearance>\r\n      <MaterialShellAppearance NavBarCollapseStyle=\"Full\">\r\n    </ShellItem.ShellAppearance>\r\n    <local:UpdatesPage />\r\n    <local:InstalledPage />\r\n    <local:LibraryPage />\r\n  </ShellItem>\r\n\r\n  <local:NotificationsPage Title=\"My notifications\" />\r\n\r\n  <local:SubscriptionsPage />\r\n\r\n  <ShellItem GroupBehavior=\"ShowTabs\">\r\n    <ShellItem.ShellAppearance>\r\n      <MaterialShellAppearance NavBarCollapseStyle=\"Full\" TabBarCollapseStyle=\"Full\" UseSwipeGesture=\"false\">\r\n    </ShellItem.ShellAppearance>\r\n    <local:HomePage />\r\n    <local:GamesPage />\r\n    <ShellContent Title=\"Movies &amp; TV\" Icon=\"moviesTV.png\" ContentTemplate=\"{DataTemplate local:MoviesTVPage}\">\r\n      <ShellContent.MenuItems>\r\n        <MenuItem Title=\"Open Movies &amp; TV app\" Command=\"{xBind MoviesTVAppCommand}\" />\r\n      </ShellContent.MenuItems>\r\n    </ShellContent>\r\n    <ShellContent Title=\"Books\" Icon=\"books.png\" ContentTemplate=\"{DataTemplate local:BooksPage}\">\r\n      <ShellContent.MenuItems>\r\n        <MenuItem Title=\"Open Books app\" Command=\"{xBind BooksAppCommand}\" />\r\n      </ShellContent.MenuItems>\r\n    </ShellContent>\r\n    <ShellContent Title=\"Music\" Icon=\"music.png\" ContentTemplate=\"{DataTemplate local:MusicPage}\">\r\n      <ShellContent.MenuItems>\r\n        <MenuItem Title=\"Open Music app\" Command=\"{xBind MusicAppCommand}\" />\r\n      </ShellContent.MenuItems>\r\n    </ShellContent>\r\n    <ShellContent Title=\"Newsstand\" Icon=\"newsstand.png\" ContentTemplate=\"{DataTemplate local:NewsstandPage}\">\r\n      <ShellContent.MenuItems>\r\n        <MenuItem Title=\"Open Newsstand app\" Command=\"{xBind NewsstandAppCommand}\" />\r\n      </ShellContent.MenuItems>\r\n  </ShellItem>\r\n\r\n  <local:AccountPage />\r\n\r\n  <MenuItem Title=\"Redeem\" Icon=\"redeem.png\" Command=\"{x:Bind RedeemCommand}\" />\r\n\r\n  <local:WishlistPage />\r\n\r\n  <MenuItem Title=\"Play Protect\" Icon=\"protect.png\" Command=\"{x:Bind NavigateCommand}\" CommandParameter=\"ProtectPage\" />\r\n\r\n  <MenuItem Title=\"Settings\" Icon=\"settings.png\" Command=\"{x:Bind SettingsCommand}\" CommandParameter=\"SettingsPage\" />\r\n\r\n  <MaterialShell.MenuItems>\r\n    <MenuItem Title=\"Help &amp; feedback\" Command=\"{x:Bind NavigateCommand}\" CommandParameter=\"HelpPage\" />\r\n    <MenuItem Title=\"Parent Guide\" Command=\"{x:Bind NavigateCommand}\" CommandParameter=\"ParentPage\" />\r\n    <MenuItem Title=\"Help &amp; feedback\" Command=\"{x:Bind UrlCommand}\" CommandParameter=\"http://support.google.com/whatever\" />\r\n  </MaterialShell.MenuItems>\r\n</MaterialShell>\r\n```\r\n\r\n## The store pages\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:MyStore\"\r\n             x:Class=\"MyStore.HomePage\"\r\n             Title=\"Home\"\r\n             Icon=\"home.png\"\r\n             ShellAppearance.BackgroundColor=\"Green\">\r\n  <Label Text=\"Home content here\" />\r\n</ContentPage>\r\n```\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:MyStore\"\r\n             x:Class=\"MyStore.MoviesTVPage\"\r\n             Title=\"Movies &amp; TV\"\r\n             Icon=\"movies.png\"\r\n             ShellAppearance.BackgroundColor=\"Red\">\r\n  <Label Text=\"Movies and TV content here\" />\r\n</ContentPage>\r\n```\r\n\r\nAnd to add the search bar.\r\n\r\n```csharp\r\npublic class HomePage : ContentPage\r\n{\r\n  public class HomeSearchHandler : SearchHandler\r\n  {\r\n    public HomeSearchHandler ()\r\n    {\r\n      SearchBoxVisibility = SearchBoxVisibility.Expanded;\r\n      IsSearchEnabled = true;\r\n      Placeholder = \"Google Play\";\r\n      CancelPlaceholderIcon = \"microphone.png\"\r\n    }\r\n\r\n    protected override void OnSearchConfirmed (string query)\r\n    \r\n{      // Navigate to search results page here\r\n    }\r\n    \r\n    protected override void OnSearchChanged (string oldValue, string newValue)\r\n    {\r\n    }\r\n\r\n    protected override void OnCancelPlaceholderPressed ()\r\n    {\r\n      // Trigger voice API here\r\n    }\r\n  }\r\n\r\n  public HomePage\r\n  {\r\n    Shell.SetSearchHandler (this, new HomeSearchHandler ());\r\n  }  \r\n}\r\n```\r\n\r\nAnd so on and so on setting the colors and the content correctly.\r\n\r\nFor pages like the Settings page where the flyout should not be accessible until the back button is pressed:\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:MyStore\"\r\n             x:Class=\"MyStore.SettingsPage\"\r\n             Title=\"Settings\"\r\n             Icon=\"settings.png\"\r\n             ShellAppearance.BackgroundColor=\"Grey\"\r\n             MaterialShell.FlyoutBehavior=\"Disabled\">\r\n  <Label Text=\"Settings content here\" />\r\n</ContentPage>\r\n```\r\n\r\n\r\n# TODO\r\n- [x] Add API for search box\r\n- [x] Add API for ContentSafeArea handling\r\n- [x] Add API for floating menu\r\n- [x] Add API for window menu items\r\n- [x] Add API for snackbar\r\n- [x] Add API for navigation interruption\r\n- [x] Add API for bottom sheet\r\n- [x] Add API to position FAB\r\n- [x] Add stories to make navigation ideas clearer (partially done)\r\n- [x] Add LeftBarButton style API\r\n- [x] Add mechanism for getting Back Stack from ShellContent\r\n- [x] Add API for changing color of the ribbon based on selected tab\r\n- [x] Add optional suggestion support for SearchHandler\r\n- [x] Add support for configuring always expanded search bar vs search bar as icon\r\n- [x] Add API for getting the \"Current\" page from the MaterialShell class. Needed for some navigation scenarios.\r\n- [x] Add API for saving \"states\" to the back stack\r\n- [x] Add API to block flyout from coming out\r\n- [x] Add API for \"submenu\" items for ShellContent's ala GPS -> Music -> Open Music app\r\n- [x] Add API for CancelPlaceholder Command and Icon (usually used for microphone icon for voice search)\r\n- [x] Segue API\r\n- [x] Work out what to do with INavigation\r\n- [ ] Expand Bottom Sheet API to match Google Maps capabilities\r\n- [x] API to handle Flyout presentation\r\n- [ ] API to disable Flyout gesture when needed\r\n- [ ] Large title API\r\n- [ ] Transitions API\r\n\r\n# Issues\r\n\r\n## ISearchHandler [FIXED]\r\n\r\nThere is a lot this interface is doing and worse it's probably going to need to be expanded as time goes on. Therefor it stands to reason that it should probably instead be an abstract base class the user can implement. This unfortunate means yet another object allocation. However it maintains flexibility in the future. It is likely this change will happen.\r\n\r\n## Floating Menu\r\n\r\nThe attachment API is a bit heavy and perhaps too confusing for users. Worse it might not map very well to all platforms to make sure the attachment works with animations. More work is required to validate this API."},{"Id":"9598973281","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5956","RelatedDescription":"Closed issue \"CSS defined in App does not affect TitleView [Bug] \" (#5956) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nStyles defined in a CSS file and added to the `App`'s resource dictionary don't get applied to `TitleView` content.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a simple css file (e.g. `#ViewTitle { color: white; }`\r\n2. Add it to the `App`'s resources.\r\n2. Add a `TitleView` to a page.\r\n3. Style its content with the css.\r\n\r\n### Expected Behavior\r\nThe styles added to the `App`'s resource dictionary should apply to the content of the `TitleView` in the css should apply to the elements of the title view.\r\n\r\n### Actual Behavior\r\nIt don't\r\n### Basic Information\r\n\r\n- Version with issue: 3.6.x\r\n\r\n### Reproduction Link\r\nHere is a simple project:\r\n[App1.zip (sorry no sln)](https://github.com/xamarin/Xamarin.Forms/files/3096351/App1.zip)\r\n\r\n"},{"Id":"9598973276","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4683","RelatedDescription":"Closed issue \"Xamarin 4.0.0.8055-pre1 Shell doesn't load the Stylesheets on first presenting pages\" (#4683) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Add Multiple Pages to a Basic Shell Application\r\n2.  Add Stylesheets with simple non-white background-color style applied to ^contentpage in App.xaml\r\n3.  Build & Run app\r\n4.  First load of the pages will be all white default backgrounds\r\n\r\n### Expected Behavior\r\n\r\nPages load with defined styles each time\r\n\r\n### Actual Behavior\r\n\r\nPages load with default backgrounds the first time, then when you navigate away and back it'll load the styles properly.  But it should be loading from the start.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0.8055-pre1\r\n- Last known good version: n/a\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 9.0 <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n![screenshot_20181208-031723](https://user-images.githubusercontent.com/7705397/49683773-2fe04500-fa98-11e8-8a43-c5841d26cbca.jpg)\r\n![screenshot_20181208-031716](https://user-images.githubusercontent.com/7705397/49683774-2fe04500-fa98-11e8-8d44-6fbd2643b704.jpg)\r\n![screenshot_20181208-031832](https://user-images.githubusercontent.com/7705397/49683775-34a4f900-fa98-11e8-9b46-627287fe5214.jpg)\r\n![screenshot_20181208-031838](https://user-images.githubusercontent.com/7705397/49683776-34a4f900-fa98-11e8-93bf-a64dc66015ac.jpg)\r\n\r\n\r\n### Reproduction Link\r\n\r\nThere is no special code in here just a default template with stylesheets added.\r\nMy Stylesheet is:\r\n \r\n```\r\n^contentpage {\r\n    background-color: #04A0FF;\r\n    color:#FFF;\r\n}\r\n\r\n```\r\nParent: #2415"},{"Id":"9598973265","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3875","RelatedDescription":"Closed issue \"[Shell] Flyout menu items should start below my header, no matter how tall\" (#3875) at xamarin/Xamarin.Forms","RelatedBody":"https://github.com/xamarin/Xamarin.Forms/blob/ba229c0be7996e2604b5dd72a9a1edaf1daa4e3c/Xamarin.Forms.Platform.iOS/Renderers/ShellTableViewController.cs#L12\r\n\r\nWhen my header is taller than 200, the content overlaps the menu. Please position the menu below the header always. \r\n\r\n<img width=\"540\" alt=\"screenshot 2018-09-22 17 24 23\" src=\"https://user-images.githubusercontent.com/41873/45922296-722cb980-be8d-11e8-8880-dca2a3fbffdc.png\">\r\n\r\n```<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \r\n       xmlns:views=\"clr-namespace:Movies.Views\"\r\n       xmlns:converters=\"clr-namespace:Movies.Converters;assembly=Movies\"\r\n       RouteScheme=\"https\"\r\n       RouteHost=\"movies.com\"\r\n       FlyoutHeaderBehavior=\"CollapseOnScroll\"\r\n       FlyoutBackgroundColor=\"{StaticResource MenuBackgroundColor}\"\r\n       x:Class=\"Movies.Shell\">\r\n    \r\n    <Shell.Resources>\r\n        <ResourceDictionary>\r\n\r\n            <!-- GENERAL COLORS -->\r\n            <Color x:Key=\"WhiteColor\">#FFFFFF</Color>\r\n            <Color x:Key=\"BlackColor\">#000000</Color>\r\n\r\n            <!-- THEME COLORS -->\r\n            <Color x:Key=\"AccentColor\">#F5C210</Color>\r\n            <Color x:Key=\"ToolbarColor\">#151C25</Color>\r\n            <Color x:Key=\"BackgroundColor\">#1E2634</Color>\r\n            <Color x:Key=\"DarkBackgroundColor\">#151C25</Color>\r\n            <Color x:Key=\"MenuBackgroundColor\">#44545C</Color>\r\n            \r\n            <!-- CONVERTERS -->\r\n            <converters:InverseBoolConverter x:Key=\"InverseBoolConverter\" />\r\n            <converters:MenuItemTypeConverter x:Key=\"MenuItemTypeConverter\" />\r\n            <converters:MovieImageConverter x:Key=\"MovieImageConverter\" /> \r\n            <converters:ReleaseDateConverter x:Key=\"ReleaseDateConverter\" />\r\n            <converters:ToUpperConverter x:Key=\"ToUpperConverter\" />\r\n            \r\n        </ResourceDictionary>\r\n    </Shell.Resources>\r\n    \r\n    <Shell.FlyoutHeader>\r\n        <ContentView HeightRequest=\"600\">\r\n            <StackLayout BackgroundColor=\"Black\" Orientation=\"Vertical\">\r\n                <Image Source=\"https://sec.ch9.ms/sessions/connect/T128.png\" \r\n                       HorizontalOptions=\"Fill\"\r\n                       VerticalOptions=\"Start\"\r\n                       Aspect=\"AspectFill\"/>\r\n                <StackLayout Spacing=\"6\" Padding=\"8\">\r\n                    <Label Text=\"David Ortinau\" TextColor=\"White\"></Label>\r\n                    <Label Text=\"david.ortinau@microsoft.com\" TextColor=\"White\"></Label>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </ContentView>\r\n    </Shell.FlyoutHeader>\r\n    \r\n    \r\n    <ShellItem Title=\"Discover\" Route=\"discover\" FlyoutIcon=\"movies_search.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:HomeView}\"  Icon=\"movies_search.png\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"Movies\" Route=\"movies\" FlyoutIcon=\"movies_movie.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:MoviesView}\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"TV Shows\" Route=\"shows\" FlyoutIcon=\"movies_shows.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:ShowsView}\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"Upcoming\" Route=\"upcoming\" FlyoutIcon=\"movies_upcoming.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:UpcomingView}\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"Favourites\" Route=\"favourites\" FlyoutIcon=\"movies_favourites.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:MoviesView}\"/>\r\n    </ShellItem>\r\n    <ShellItem Title=\"Settings\" Route=\"settings\" FlyoutIcon=\"movies_settings.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:HomeView}\"/>\r\n    </ShellItem>\r\n    \r\n</Shell>\r\n```\r\nParent: #2415"},{"Id":"9598973247","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6130","RelatedDescription":"Closed issue \"[Bug] [Forms 4.0] [Android] Mismatch in WebView.EnableZoomControls platform-specific\" (#6130) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIn Forms 4.0, it's impossible to consume the `WebView.EnableZoomControls` platform-specific (Android) in XAML (PR: https://github.com/xamarin/Xamarin.Forms/pull/3607), due to a mistmatch in this line:\r\n\r\n```\r\npublic static readonly BindableProperty EnableZoomControlProperty = BindableProperty.Create(\"EnableZoomControls\", typeof(bool), typeof(FormsElement), false);\r\n```\r\n\r\nIf you try to consume `EnableZoomControls` in XAML it errors as the BP isn't named that. If you try to consume` EnableZoomControl` in XAML it errors because there isn't a public getter that matches it.\r\n\r\n"},{"Id":"9598973229","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:32","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6132","RelatedDescription":"Closed issue \"[Bug] [Forms 4.0] [Android] WebView.EnableZoomControls platform-specific doesn't work\" (#6132) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThis code should display a `WebView` with zoom controls both enabled (touch) and displayed (buttons in the bottom right hand corner - as per the screenshots in https://blog.verslu.is/xamarin/xamarin-forms-xamarin/zooming-android-webview-xamarin-forms/):\r\n\r\n```\r\n        public AndroidWebViewZoomPageCS()\r\n        {\r\n            Title = \"WebView Zoom Controls\";\r\n            Xamarin.Forms.WebView webView = new Xamarin.Forms.WebView\r\n            {\r\n                Source = \"https://www.xamarin.com\"\r\n            };\r\n\r\n            webView.On<Android>().EnableZoomControls();\r\n            webView.On<Android>().DisplayZoomControls();\r\n\r\n            Content = webView;\r\n        }\r\n```\r\n\r\nIn addition, zoom using touch doesn't work.\r\n\r\nHowever, everything works as expected if you change the code to:\r\n\r\n```\r\n            webView.On<Android>().SetEnableZoomControls(true);\r\n            webView.On<Android>().SetDisplayZoomControls(true);\r\n```\r\n\r\nRelated to https://github.com/xamarin/Xamarin.Forms/issues/6130 ?\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample.\r\n2. Browse to the WebView Zoom Controls page. This will run the code in `AndroidWebViewZoomPageCS`.\r\n\r\n### Expected Behavior\r\n\r\nZoom controls are displayed. Zoom using touch works.\r\n\r\n### Actual Behavior\r\n\r\nZoom controls aren't displayed. Zoom using touch doesn't work.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre10\r\n- Last known good version: \r\n- IDE: VSMac 8.0\r\n- Platform Target Frameworks:\r\n  - Android: API 28 \r\n\r\n### Reproduction Link\r\n\r\n[PlatformSpecifics.zip](https://github.com/xamarin/Xamarin.Forms/files/3157863/PlatformSpecifics.zip)"},{"Id":"9598973215","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:32","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5768","RelatedDescription":"Closed issue \"[Shell] Unable to focus search handler\" (#5768) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nhttps://www.screencast.com/t/kmwfyFkTdS\r\n\r\nIt's possible to show and hide the search box, however you cannot set focus. I don't see any method for focus or to get the Entry field to set focus myself.\r\n\r\nI suspect this will be an accessibility problem.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Start with search hidden\r\n2. Tap a search icon (toolbaritem or whatever) to open the search (expanded)\r\n3. Observe there is not way to set focus programmatically. \r\n\r\n### Expected Behavior\r\n\r\nCan set focus automatically OR explicitly.\r\n\r\n### Actual Behavior\r\n\r\nCannot. \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre8\r\n\r\n\r\n### Reproduction Link\r\n\r\nYou can use this if the gallery doesn't already have tests for it. https://github.com/davidortinau/Gastropods\r\n"},{"Id":"9598973206","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:32","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3125","RelatedDescription":"Closed issue \"[Shell] Search bar on iOS is dark and black text is illegible\" (#3125) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWe need control of styling this across all platforms. Placeholder color, entry text color, background color, and the cancel color for sure.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n![simulator screen shot - iphone x - 2018-06-22 at 13 05 52](https://user-images.githubusercontent.com/41873/41791989-0eac8556-761d-11e8-8be9-fd01242c730a.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/davidortinau/Gastropods/blob/master/Gastropod/Pages/FeedPage.xaml.cs\r\nParent: #2415"},{"Id":"9598973191","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:31","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5766","RelatedDescription":"Closed issue \"[Android / Fast Renderer] Frame size gets corrupted when ListView is scrolled\" (#5766) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nIf you put a `Frame` in a `ViewCell` and scroll the `ListView` up and down several times, you will notice that `Frame` size gets corrupted. This only happens when Fast Renderers are turned on.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run attachment\r\n2. Scroll up and down several times\r\n3. Observe that some frames have inaccurate lengths\r\n\r\n### Reproduction Link\r\n\r\n[App155.zip](https://github.com/xamarin/Xamarin.Forms/files/3025617/App155.zip)\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9598973175","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:31","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6123","RelatedDescription":"Closed issue \"[Bug] Change of BackgroundImage PropertyType from string to FileImageSource causes Build Errors in Rg.Plugins.Popup\" (#6123) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIn Preview Release 4.0.0 Pre 10 the BackgroundImage was changed from string to FileImageSource (and was obsoleted).\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/releases/tag/beta-4.0.0-pre10.1\r\n\r\nCheckin\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/4915\r\n\r\nNow the Release Compilation fails on iOs with following message:\r\n\r\n(_CompileToNative target) -> \r\n  MTOUCH : error MT2101: Can't resolve the reference 'System.String Xamarin.Forms.Page::get_BackgroundImage()', referenced from the method 'System.Void Rg.Plugins.Popup.Animations.Base.FadeBackgroundAnimation::Preparing(Xamarin.Forms.View,Rg.Plugins.Popup.Pages.PopupPage)' in 'Xamarin.Forms.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null'. \r\n\r\nIt means it doesn't find the BackgroundImage with the string PropertyType.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Make new Xamarin project.\r\n2.  Add Rg.Plugins.Popup nuget package\r\n3.  Add following linker file (To simulate usage).\r\n\r\n<linker>\r\n<!-- Thirdparty-->\r\n\r\n```\r\n    <assembly fullname=\"Rg.Plugins.Popup\">\r\n      <namespace fullname=\"Rg.Plugins.Popup.Animations.Base\" />\r\n      <type fullname=\"Rg.Plugins.Popup.Animations.Base.*\" />\r\n    </assembly>\r\n```\r\n\r\n4. Compile in Release Mode\r\n\r\n### Expected Behavior\r\nIt does compile\r\n\r\n### Actual Behavior\r\nIt doesn't Compile\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0 Pre Release 10\r\n- Last known good version: 4.0.0 Pre Release 9\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.2\r\n- Nuget Packages: Rg.Plugins.Popup 1.1.5.188\r\n\r\n### Reproduction Link\r\n[App30.zip](https://github.com/xamarin/Xamarin.Forms/files/3155959/App30.zip)\r\n\r\n"},{"Id":"9598973152","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:31","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5132","RelatedDescription":"Closed issue \"Unable to specify automation properties on the hamburger / flyout icon\" (#5132) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nShell has an Icon property, but I'm not sure what that impacts. It seems to be nothing.\r\n\r\nI cannot find a way to specify help text or anything else for a screen reader with re: to the default hamburger button. I guess I could override it with a BackButtonBehavior, but that's a lot of effort for this task.\r\n\r\n\r\nParent: #2415"},{"Id":"9598973137","Type":"IssuesEvent","CreatedAt":"2019-05-10T04:15:31","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5793","RelatedDescription":"Closed issue \"[CollectionView/ListView] Not listening for Reset command\" (#5793) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSee issue: https://github.com/jamesmontemagno/mvvm-helpers/issues/39\r\n\r\n### Basic Information\r\nXamarin.Forms 3.6.0.264807\r\nVisual Studio 2017 Version 15.9.10\r\nPlatforms:\r\niOS Simulator with iOS 12.1 (iPhone SE)\r\n\r\n### Reproduction Link\r\nhttps://github.com/xamadev/ObservableRangeCollectionError\r\n\r\n"},{"Id":"9598951339","Type":"PullRequestEvent","CreatedAt":"2019-05-10T04:08:15","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6108","RelatedDescription":"Merged pull request \"stack the elevation of elements\" (#6108) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nIf you have an elevation set on a control then that is going to trump a call to BringToFront. With the fastrenderers we unwrapped Button from ViewGroup so now it has a default elevation set. This means that even if you call BringToFront on an element that overlaps button the button will still be visually higher because it has a default elevation. \r\n\r\nThis PR attempts to correlate the visual hierarchy to the elevation values set for controls. If a user sets an elevation themselves then that elevation is honored\r\n\r\n### Issues Resolved ### \r\n- fixes #2989\r\n- fixes #3543\r\n\r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\nControls stacked with buttons will now get their elevation set to the same values as button\r\n\r\n\r\n### Testing Procedure ###\r\nThis PR enables UI Tests that were previously disabled\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9598918677","Type":"PullRequestEvent","CreatedAt":"2019-05-10T03:58:05","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6117","RelatedDescription":"Merged pull request \"fix up shell menu items, fix templates, fix bindings\" (#6117) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n- deleted Shell.MenuItems from the top level Shell class because it serves no purpose. Just add the menuitem to the root\r\n- changed MenuItemTemplate to an attached property so you can attach different templates to menu items\r\n- Fixed Text so that it'll propagate correctly when MenuItem is wrapped as MenuShellItem\r\n- Fixed shell level menu item template so it applies correctly\r\n- set parent of created template to shell like it does on iOS\r\n\r\n### Issues Resolved ### \r\n- fixes #4399\r\n- fixes #5707\r\n\r\n### API Changes ###\r\n\r\n Removed:\r\n - made MenuShellItem Internal\r\n \r\n \r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n\r\n### Testing Procedure ###\r\nUpdated shell with a custom menu item template you can see on ios and android\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9598513598","Type":"IssuesEvent","CreatedAt":"2019-05-10T01:59:51","Actor":"tvoyle","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6150","RelatedDescription":"Opened issue \"[WPF] WPF Symbol Icons missing on Windows 7, 8.1\" (#6150) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe WPF Symbol icons are loaded from the \"Require Segoe MDL2 Assets\" font.\r\nSo far as I can tell the licensing prevents the font from being used anywhere other than Windows 10 unless you also own WIndows 10, and may never be distributed.\r\n\r\nCould be fixed by including and falling back to the corresponding open source font:\r\nhttps://github.com/microsoft/fonts\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create new Xamarin.Forms App (Master-Detail)\r\n2. Add WPF application and configure as per [https://docs.microsoft.com/en-us/xamarin/xamarin-forms/platform/other/wpf]\r\n3. Run on windows 8.1\r\n\r\n### Expected Behavior\r\nHamburger should be present at top left\r\n### Actual Behavior\r\nRenders as Unknown character\r\n### Basic Information\r\n\r\n- Version with issue:  All where present (>= 3.3.0)\r\n- Last known good version:  None\r\n- IDE: VS 2019\r\n- Platform Target Frameworks: \r\n  - WPF\r\n- Nuget Packages:\r\nXamarin.Forms.Platform.WPF\r\n### Screenshots\r\n\r\n![Capture](https://user-images.githubusercontent.com/6218766/57497161-96f57480-732a-11e9-8b47-1d033ca95ccf.PNG)\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/tvoyle/MasterDetailWpf\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9597994825","Type":"PullRequestEvent","CreatedAt":"2019-05-09T23:21:31","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6035","RelatedDescription":"Opened pull request \"[d16-2] [msbuild] Add reference to `System.Drawing.Common.dll` to XI projects.\" (#6035) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/mono/mono/issues/13483 :\r\n\r\n```\r\n@akoeplinger: Since we moved types from Mono.Android.dll and\r\nXamarin.iOS/WatchOS/TVOS.dll to System.Drawing.Common.dll user projects\r\nwould fail to compile. We need to add some msbuild logic to add a\r\nreference to the assembly automatically.\r\n```\n\nBackport of #6011.\n\n/cc @rolfbjarne @radical"},{"Id":"9597992627","Type":"PullRequestEvent","CreatedAt":"2019-05-09T23:20:54","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6011","RelatedDescription":"Merged pull request \"[msbuild] Add reference to `System.Drawing.Common.dll` to XI projects.\" (#6011) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/mono/mono/issues/13483 :\r\n\r\n```\r\n@akoeplinger: Since we moved types from Mono.Android.dll and\r\nXamarin.iOS/WatchOS/TVOS.dll to System.Drawing.Common.dll user projects\r\nwould fail to compile. We need to add some msbuild logic to add a\r\nreference to the assembly automatically.\r\n```"},{"Id":"9597639458","Type":"PullRequestEvent","CreatedAt":"2019-05-09T21:56:49","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6034","RelatedDescription":"Opened pull request \"[Jenkins] Do not run device tests in the internal jenkins instance.\" (#6034) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1126613804438233088","CreatedAt":"2019-05-09T22:23:57+00:00","UserScreenname":"xamarinhq","Text":"Xamarin API Docs have gone open-sourced...\nWhat's that mean for you? \nCheck it out: https://t.co/EWHFrQF7a1\n#xamarin https://t.co/o6HskCU7oN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":23,"RawContent":null},{"Id":"1125851046939697152","CreatedAt":"2019-05-07T19:53:01+00:00","UserScreenname":"xamarinhq","Text":"The @XamarinU team has joined the #MicrosoftLearn family! Find Xamarin content in Microsoft Learn today at… https://t.co/gWKXwsPUuk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":130,"FavoriteCount":62,"RawContent":null},{"Id":"1125402214661382146","CreatedAt":"2019-05-06T14:09:31+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin Team at Microsoft Build 2019.\nWe have a packed schedule for Xamarin developers.\nCheck out the sche… https://t.co/fFz1nlYVTp","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":65,"FavoriteCount":27,"RawContent":null},{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":7,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":11,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":11,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":15,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":25,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":149,"FavoriteCount":72,"RawContent":null}]}},"RunOn":"2019-05-10T05:30:54.4415786Z","RunDurationInMilliseconds":2418}