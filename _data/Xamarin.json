{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin Announcements from Microsoft Connect(); 2017","PublishedOn":"2017-11-15T16:42:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2017, we shared some very exciting updates related to Visual Studio and Xamarin. We invite you to join us tomorrow and Thursday to see even more during the remainder of...","Href":"https://blog.xamarin.com/xamarin-announcements-microsoft-connect-2017/","RawContent":null},{"Title":"Visual Studio App Center: The Next Generation of Xamarin Test Cloud","PublishedOn":"2017-11-15T13:08:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today at Microsoft Connect(); we announced the launch of Visual Studio App Center, the next generation of Xamarin Test Cloud. App Center brings the power of Xamarin Test Cloud combined with ability to...","Href":"https://blog.xamarin.com/visual-studio-app-center-next-generation-xamarin-test-cloud/","RawContent":null},{"Title":"Microsoft Connect(); 2017 Sessions for Xamarin Developers","PublishedOn":"2017-11-15T12:18:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Connect(); 2017 is underway, and there will be a ton of great content for mobile developers over the next three days. To help ensure you catch it all,  we’ve compiled a list of the sessions...","Href":"https://blog.xamarin.com/microsoft-connect-2017-sessions-xamarin-developers/","RawContent":null},{"Title":"Webinar Recording | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-11-14T19:49:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join David Antognoli in this pre-recorded webinar and see how to take your Unity games to the next level with powerful cloud services. He walks through how to connect your apps to Microsoft Azure,...","Href":"https://blog.xamarin.com/webinar-recording-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Adding Sound to a Xamarin.Forms App","PublishedOn":"2017-11-13T20:15:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Audio has many uses in mobile applications. Sounds can be essential to your app; they may notify users of important events or make your app accessible to visually-impaired users. We can also use sound...","Href":"https://blog.xamarin.com/adding-sound-xamarin-forms-app/","RawContent":null},{"Title":".NET Standard Comes to Xamarin.Forms Project Templates!","PublishedOn":"2017-11-10T19:06:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Standard is a formal specification of the .NET APIs that allow you to share even more code across the platforms you target. Xamarin developers are able to use .NET Standard libraries for sharing...","Href":"https://blog.xamarin.com/net-standard-comes-xamarin-forms-project-templates/","RawContent":null},{"Title":"Xamarin and Xamarin University Sessions at Microsoft Connect(); 2017","PublishedOn":"2017-11-09T20:47:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We invite you to join us for Microsoft&#8217;s annual Connect(); developer event, scheduled to stream live online November 15–17, 2017! Save the date now to ensure you don&#8217;t miss a minute of...","Href":"https://blog.xamarin.com/xamarin-xamarin-university-sessions-microsoft-connect-2017/","RawContent":null},{"Title":"Android Oreo Notification Channels","PublishedOn":"2017-11-07T20:52:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important features introduced in Android 8.0 Oreo is notification channels. Notification channels make it possible for you to group notifications so that all notifications posted to a...","Href":"https://blog.xamarin.com/android-oreo-notification-channels/","RawContent":null},{"Title":"Simplified App Signing with Secure Files in Visual Studio Team Services","PublishedOn":"2017-11-06T21:00:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One thing I never want to worry about when building my apps is needing to remember where I stored my provisioning profiles, certificates, and keystores. Thanks to Visual Studio Team Services (VSTS), I...","Href":"https://blog.xamarin.com/simplified-app-signing-secure-files-visual-studio-team-services/","RawContent":null},{"Title":"Making iOS 11 Even Easier with Xamarin.Forms","PublishedOn":"2017-11-03T21:31:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 has introduced a few new visual design updates that you may want to take advantage of, including safe area layout guides and large titles. For Xamarin.iOS developers, we’ve recently published...","Href":"https://blog.xamarin.com/making-ios-11-even-easier-xamarin-forms/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6861916928","Type":"PullRequestEvent","CreatedAt":"2017-11-16T01:59:40","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1033","RelatedDescription":"Opened pull request \"[mono] Use sdks/ to build target runtimes\" (#1033) at xamarin/xamarin-android","RelatedBody":"This is to use the newly created sdks/ folder in mono which builds mono for android, iOS and wasm. We use the build of android to share more of the build logic. This will in the long term improve the development experience of Mono on Android, as it will be easier to test it on device or emulator, without Xamarin.Android. This will also improve integration as we will be able to more easily test Mono on Android as port of Mono's CI."},{"Id":"6861193080","Type":"PullRequestEvent","CreatedAt":"2017-11-15T22:17:48","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1032","RelatedDescription":"Opened pull request \"[WIP] Remove API Level 10 from the builds.\" (#1032) at xamarin/xamarin-android","RelatedBody":""},{"Id":"6860667019","Type":"PullRequestEvent","CreatedAt":"2017-11-15T20:20:00","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1030","RelatedDescription":"Opened pull request \"[Xamarin.Android.Bcl-Tests] Allow Xamarin.Android.NUnitLite.dll path to be overridden\" (#1030) at xamarin/xamarin-android","RelatedBody":"This is required for \"system\" execution on Windows, as there is no 'xbuild-frameworks' folder installed by the XA .vsix. The framework installation location in VS2017 is outlined below:\r\n'C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v1.0'."},{"Id":"6860455902","Type":"PullRequestEvent","CreatedAt":"2017-11-15T19:34:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1027","RelatedDescription":"Merged pull request \"Bump to Java.Interop/master/1bcfcc5\" (#1027) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/java.interop/pull/211\r\n\r\nLooking to fix `ANDROID_SDK_PATH` not set in tests on Windows."},{"Id":"6859891274","Type":"PullRequestEvent","CreatedAt":"2017-11-15T17:32:21","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1029","RelatedDescription":"Merged pull request \"Add a bunch of Make targets to help rebuilding Mono runtime and BCL\" (#1029) at xamarin/xamarin-android","RelatedBody":"This basically implements the steps described in\r\nDocumentation/DevelopmentTips.md for the runtime and BCL assembles. Short help\r\nis available by running\r\n\r\n   make rebuild-help"},{"Id":"6859634024","Type":"PullRequestEvent","CreatedAt":"2017-11-15T16:45:00","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1028","RelatedDescription":"Merged pull request \"[Tests] Run runtime test in Release/Aot configuration again\" (#1028) at xamarin/xamarin-android","RelatedBody":"Recently the migration of running the apk tests to msbuild\r\n(https://github.com/xamarin/xamarin-android/commit/cdf3bcc11aaf036b68daaec504f6ffa4dbbc120a)\r\nstopped running runtime test with Aot and thus we are missing\r\nperformance measurements for Release/Aot.\r\n\r\nThe reason of it is that `_AotName` property is not set, when calling\r\nMSBuild task to run the apk tests. This patch sets the `AotAssemblies`\r\nproperty when calling `RunApkTests.targets`\r\n"},{"Id":"6858964581","Type":"PullRequestEvent","CreatedAt":"2017-11-15T14:52:12","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1029","RelatedDescription":"Opened pull request \"Add a bunch of Make targets to help rebuilding Mono runtime and BCL\" (#1029) at xamarin/xamarin-android","RelatedBody":"This basically implements the steps described in\r\nDocumentation/DevelopmentTips.md for the runtime and BCL assembles. Short help\r\nis available by running\r\n\r\n   make rebuild-help"},{"Id":"6858805801","Type":"PullRequestEvent","CreatedAt":"2017-11-15T14:23:35","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1008","RelatedDescription":"Closed pull request \"[WIP] idea to speed up Xamarin.Android.Build.Tests\" (#1008) at xamarin/xamarin-android","RelatedBody":"I wanted to send this in to discuss next week.\r\n\r\n### The current situation\r\nCurrently the Xamarin.Android.Build.Tests are doing the [following](https://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.Build.Tasks/Tests/Xamarin.ProjectTools/Common/Builder.cs#L184):\r\n- Running msbuild w/ verbose logging to file and `/noconsolelogger`\r\n- Combining stdout and stderror into a large string named `LastBuildOutput`\r\n- Many tests are asserting against the text in `LastBuildOutput`\r\n- There is also some code that opens the log file on disk to find the MSBuild build duration\r\n\r\nSo a couple issues from this:\r\n- We use a lot of memory here, with potentially enormous strings, some of it is duplicated strings\r\n- Asserting against `LastBuildOutput` is doing a `string.Contains` on potentially massive strings\r\n- The test `BuildAMassiveApp` always fails on Windows with `OutOfMemoryException`\r\n- On Windows, our `Process.Start/WaitForExit` implementation can hang. If the stdout or stderror buffer gets full, when `WaitForExit` hangs with the 10 minute timeout. I see this happening mostly if a test fails (because the output is bigger). Link about this [here](https://stackoverflow.com/questions/139593/processstartinfo-hanging-on-waitforexit-why).\r\n\r\nI'm sure this code evolved over time--it probably wasn't planned to be implemented this way.\r\n\r\n### An idea\r\nThe \"idea\" is we could instead:\r\n- Run msbuild with verbose logging to the console (not to file at all)\r\n- Use the `OutputDataReceived` and `ErrorDataReceived` events to assert against MSBuild output as it streams through\r\n- Append this output to a file for failures later if needed\r\n\r\nThe problem with doing this, is you would have to setup assertions before running the build. Then checking if they all passed after the build. This is a bit confusing, and a juxtaposition of the Arrange, Act, Assert pattern people think about when writing tests.\r\n\r\n### The initial results\r\n\r\nI did a quick implementation of this idea, and compared the results of the following test class with 44 tests (on Mac):\r\n```\r\nmake run-nunit-tests TEST=Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest\r\n```\r\n\r\nThe results on master:\r\n```\r\nTest Run Summary\r\n  Overall result: Warning\r\n  Test Count: 44, Passed: 35, Failed: 0, Warnings: 0, Inconclusive: 0, Skipped: 9\r\n    Skipped Tests - Ignored: 9, Explicit: 0, Other: 0\r\n  Start time: 2017-11-03 16:46:54Z\r\n    End time: 2017-11-03 16:54:49Z\r\n    Duration: 474.909 seconds\r\n```\r\n\r\nThe results with this PR:\r\n```\r\nTest Run Summary\r\n  Overall result: Failed\r\n  Test Count: 44, Passed: 30, Failed: 5, Warnings: 0, Inconclusive: 0, Skipped: 9\r\n    Failed Tests - Failures: 5, Errors: 0, Invalid: 0\r\n    Skipped Tests - Ignored: 9, Explicit: 0, Other: 0\r\n  Start time: 2017-11-03 20:04:41Z\r\n    End time: 2017-11-03 20:11:00Z\r\n    Duration: 379.545 seconds\r\n```\r\nThere are still some failures I'll look into fixing here. These failures seemed to be running the full test (they aren't failing and taking less than <10ms that would influence the shorter time).\r\n\r\nThis boils down to maybe a 20% speed increase of these tests. These tests are currently taking about 1 hour on Jenkins PRs.\r\n\r\n### Drawbacks\r\n\r\nThis seems like a decent amount of work--and the not very fun kind. It also seems scary that we could mistakenly change a test to make it always pass.\r\n\r\nInvesting in this, while it would improve quality & build times, doesn't bring new features to Xamarin.Android."},{"Id":"6858006701","Type":"PullRequestEvent","CreatedAt":"2017-11-15T11:26:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1026","RelatedDescription":"Merged pull request \"[android-toolchain] Provide path to `autopoint`\" (#1026) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1138882&_a=summary\r\nContext: https://github.com/xamarin/xamarin-android/pull/606#issuecomment-304171702\r\n\r\nWe [discovered 6 months ago][0] that a mono bump was failing to build\r\nbecause:\r\n\r\n[0]: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/966\r\n\r\n 1. The Jenkins machine building the PR has Homebrew 1.2.1 installed.\r\n\r\n 2. The Jenkins machine attempting to build the PR has never built\r\n    MXE before, as MXE is only required for *full* builds in which the\r\n    mono runtime has changed.\r\n\r\n 3. The MXE build failed, because `autopoint` wasn't in `$PATH`:\r\n\r\n        Executing: make MXE_TARGETS=\"i686-w64-mingw32.static\" gcc cmake zlib pthreads dlfcn-win32 mman-win32 PREFIX=\"/Users/builder/android-toolchain /mxe\"\r\n        Missing requirement: autopoint\r\n\r\nThe result is a very sad panda.\r\n\r\nThis *could* be fixed by force-linking the `gettext` package:\r\n\r\n\t$ brew link --force gettext\r\n\r\nHowever, this is considered to be overkill, as there may be multiple\r\nother `autopoint`s in `$PATH`. (Presumably there's *some* reason why\r\nBrew 1.2 doesn't install `autopoint` into `$PATH`...)\r\n\r\nThis same issue also reappeared while attempting to build\r\nxamarin-android within VSTS, as the VSTS bots similarly haven't run\r\n`brew link --force gettext` either.\r\n\r\nFix this issue by overriding `$PATH` when building MXE so that it\r\ncontains the path to `autopoint`, as returned by:\r\n\r\n\tdirname $(brew list gettext | grep autopoint$)"},{"Id":"6855593427","Type":"PullRequestEvent","CreatedAt":"2017-11-14T23:05:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1023","RelatedDescription":"Merged pull request \"Bump to mono/1ce0cc6e; move LinkerDescription.xml into mono\" (#1023) at xamarin/xamarin-android","RelatedBody":"With https://github.com/mono/mono/pull/5984 we now have additional tests and embed the LinkerDescription.xml directly into the test assembly in Mono so we can remove it here."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6860570201","Type":"PullRequestEvent","CreatedAt":"2017-11-15T19:58:49","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1278","RelatedDescription":"Opened pull request \"[iOS] Check for SelectedIndex value in OnEnded\" (#1278) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhile looking into a separate issue, a scenario was found where an empty `Picker` could be tapped/swiped at and then closed, causing a crash in `OnEnded` as it attempts to select row -1. \r\n\r\nThe `Picker` page in the gallery is empty by default; attempting to reproduce the issue without this fix should cause a crash there.\r\n\r\n### Bugs Fixed ###\r\n\r\nN/A\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nI don't believe this should affect the original fix from #1054; only the scenario where the list is empty and nothing is selected.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6860390592","Type":"PullRequestEvent","CreatedAt":"2017-11-15T19:20:23","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1274","RelatedDescription":"Merged pull request \"[iOS] Fix issue when enabling SafeArea and scrolling \" (#1274) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSince on iOS11 the NavigationBar has a interaction with UIScrollView it will change it's size, Forms needs to be able to handle that. \r\n\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60659\r\n\r\nBEFORE\r\n\r\n![simulator screen shot - iphone x - 2017-11-14 at 18 51 18](https://user-images.githubusercontent.com/1235097/32798559-f76c638c-c96c-11e7-8d66-f6d603042ae9.png)\r\n![simulator screen shot - iphone x - 2017-11-14 at 18 51 29](https://user-images.githubusercontent.com/1235097/32798560-f78b4cf2-c96c-11e7-963d-bac4e49f07ce.png)\r\n\r\nAFTER\r\n\r\n![simulator screen shot - iphone x - 2017-11-14 at 18 49 12](https://user-images.githubusercontent.com/1235097/32798570-00a89556-c96d-11e7-98ac-052e9106947d.png)\r\n![simulator screen shot - iphone x - 2017-11-14 at 18 49 21](https://user-images.githubusercontent.com/1235097/32798571-00cb45f6-c96d-11e7-9b8c-8b7fde55731d.png)\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"6858654914","Type":"PullRequestEvent","CreatedAt":"2017-11-15T13:54:20","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1228","RelatedDescription":"Merged pull request \"[XamlC] fix parent walking in compiled BPConverter with ListNode\" (#1228) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[XamlC] fix parent walking in compiledBPConverter with ListNode\r\n\r\nit's about time I kill the ListNode... but not this time, yet\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=60203\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6858648425","Type":"PullRequestEvent","CreatedAt":"2017-11-15T13:53:03","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1276","RelatedDescription":"Merged pull request \"[C] unify Padding into IPaddingElement\" (#1276) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[C] unify Padding into IPaddingElement\r\n\r\nchanges required to support Padding in CSS\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6858643596","Type":"PullRequestEvent","CreatedAt":"2017-11-15T13:52:07","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1277","RelatedDescription":"Opened pull request \"[Xaml] use [Before|After]Targets to avoid being overridden\" (#1277) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nOn `netstandard` the imports are imported before the common targets (except with `package.config`).\r\n\r\nAs the default `*DependsOn` properties are not additive, our values gets replaced\r\n```\r\nProperty reassignment: $(CoreCompileDependsOn)=\"_ComputeNonExistentFileProperty;ResolveCodeAnalysisRuleSet\" (previous value: \"\r\n            XamlG;\r\n            ;\r\n        \") at /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Microsoft.CSharp.CurrentVersion.targets (175,9)\r\n```\r\n\r\nuse AfterTargets and BeforeTargets to avoid that.\r\n\r\nsee also https://github.com/Microsoft/msbuild/issues/1468#issuecomment-269560176\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6861672944","Type":"PullRequestEvent","CreatedAt":"2017-11-16T00:34:43","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3012","RelatedDescription":"Opened pull request \"Fix introspection test failures\" (#3012) at xamarin/xamarin-macios","RelatedBody":"Typo ignores are failures if the system is set to English (Canada)"},{"Id":"6860573364","Type":"PullRequestEvent","CreatedAt":"2017-11-15T19:59:27","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2842","RelatedDescription":"Closed pull request \"[msbuild] Added assembly reference unit tests\" (#2842) at xamarin/xamarin-macios","RelatedBody":"Here's the unit test that @spouliot suggested in our team call on Monday."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"930920821035601920","CreatedAt":"2017-11-15T22:09:54+00:00","UserScreenname":"xamarinhq","Text":"That's it for Day 1 of #MSFTConnect! Join us again tomorrow for technical deep dives on today's announcements: https://t.co/kdvGKzBVFW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":4,"RawContent":null},{"Id":"930877295233064961","CreatedAt":"2017-11-15T19:16:56+00:00","UserScreenname":"xamarinhq","Text":"Everything #Xamarin developers should know about from #MSFTConnect, from #VSAppCenter to new #VisualStudio tools:… https://t.co/Z9XxAesS3S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":35,"RawContent":null},{"Id":"930875853751373825","CreatedAt":"2017-11-15T19:11:13+00:00","UserScreenname":"xamarinhq","Text":"#VSAppCenter is the next generation of #Xamarin Test Cloud. Learn more: https://t.co/mjIAHM40mM https://t.co/xQR77mRQiA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":36,"RawContent":null},{"Id":"930874776209543169","CreatedAt":"2017-11-15T19:06:56+00:00","UserScreenname":"xamarinhq","Text":"#MSFTConnect has SO MANY amazing sessions from today through Friday! Not sure where to start? Here's our guide to C… https://t.co/2HHFUNEayR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":16,"FavoriteCount":6,"RawContent":null},{"Id":"930868754552180737","CreatedAt":"2017-11-15T18:43:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss #Xamarin's @NatFriedman showing you how to build and ship apps faster with C# and #VSAppCenter, live fro… https://t.co/6yKsZl32lU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":18,"FavoriteCount":11,"RawContent":null},{"Id":"930810377390002177","CreatedAt":"2017-11-15T14:51:02+00:00","UserScreenname":"xamarinhq","Text":"It's time! Join us live online for the FREE #MSFTConnect developer conference, starting at 7 am PT / 10 am ET / 3 p… https://t.co/fOdhC65nln","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":19,"RawContent":null},{"Id":"930533047761502209","CreatedAt":"2017-11-14T20:29:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build better games using #Unity3D and Microsoft #Azure in this previously recorded webinar:… https://t.co/wmTSoKZrLu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":17,"RawContent":null},{"Id":"930482715643858944","CreatedAt":"2017-11-14T17:09:01+00:00","UserScreenname":"xamarinhq","Text":"Don't miss out! #MSFTConnect starts TOMORROW with a full schedule of keynotes, sessions, + more. Set a reminder:… https://t.co/kbER7zYaJk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":12,"RawContent":null},{"Id":"930284906827182080","CreatedAt":"2017-11-14T04:03:00+00:00","UserScreenname":"xamarinhq","Text":"Build better enterprise apps with our eBook, \"Enterprise Application Patterns using #XamarinForms\": https://t.co/YryVqlrejk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":86,"FavoriteCount":42,"RawContent":null},{"Id":"930170523077808128","CreatedAt":"2017-11-13T20:28:29+00:00","UserScreenname":"xamarinhq","Text":"Add sound to your #XamarinForms app with the open-source SimpleAudioPlayer #NuGet plugin: https://t.co/r8NSFRpl33 https://t.co/4usO1fHLdw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":32,"RawContent":null},{"Id":"929876716981489664","CreatedAt":"2017-11-13T01:01:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample Android camera app with facial tracking and recognition using Microsoft Cognitive Services’ Face API: https://t.co/5R7K2hNJXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":103,"FavoriteCount":50,"RawContent":null},{"Id":"929511313910501376","CreatedAt":"2017-11-12T00:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/vZZBmv3SFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":172,"FavoriteCount":62,"RawContent":null},{"Id":"929066506620669953","CreatedAt":"2017-11-10T19:21:31+00:00","UserScreenname":"xamarinhq","Text":"#dotNET Standard comes to the #XamarinForms project templates: https://t.co/ZSlHPxw0IV https://t.co/UrhhsHZsvx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":114,"FavoriteCount":52,"RawContent":null},{"Id":"929031145395810304","CreatedAt":"2017-11-10T17:01:00+00:00","UserScreenname":"xamarinhq","Text":"Build a remote control companion app for Android with Microsoft's Project Rome: https://t.co/SLeQw6q4YO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":11,"RawContent":null},{"Id":"928728202394177536","CreatedAt":"2017-11-09T20:57:13+00:00","UserScreenname":"xamarinhq","Text":"Details on the exciting #Xamarin and @XamarinU Sessions at #MSFTConnect 2017! Check them out, and make sure to save… https://t.co/Pgu0dQ0cvB","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":24,"FavoriteCount":14,"RawContent":null},{"Id":"928668030825123841","CreatedAt":"2017-11-09T16:58:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSMobileCenter: https://t.co/XHMCHeVNSB https://t.co/Hls7p2NJXr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":34,"RawContent":null}]}},"RunOn":"2017-11-16T05:30:40.1012539Z","RunDurationInMilliseconds":3822}