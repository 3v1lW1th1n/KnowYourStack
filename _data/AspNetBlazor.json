{"Data":{"GitHubIssues":{"Issues":[{"Id":"320458024","IsPullRequest":false,"CreatedAt":"2018-05-04T23:31:49","Actor":"Andrzej-W","Number":"766","RawContent":null,"Title":"Add scoped lifetime to DI - inject the same service instance to child components","State":"open","Body":"Let's assume I have a Customer component - this is the parent component. I also have CustomerList and CustomerDetails components - these are child components and they are displayed inside Customer component. All three components have to share some data and some business logic including Web API calls. I want to encapsulate this in CustomerService. Currently the only reasonable choice is to register CustomerService as Singleton and then inject it into all three Customer* components.\r\n\r\nIt's OK but below is another scenario where Singleton is not enough.\r\n\r\nI have CustomerComparer component and I want to display two different customers side by side. To do this I want to use two Customer components. Of course they cannot work with the same instance of CustomerService. The only solution I see here is to register CustomerService as Scoped (which is currently equivalent to Singleton). Scoped should work as follows:\r\n- service injected into the first component in hierarchy should work as Transient,\r\n- all child components should get the same service instance as parent component.\r\n\r\nWith the above functionality I will be able to display two Customer components at the same time.","Url":"https://github.com/aspnet/Blazor/issues/766","RelatedDescription":"Open issue \"Add scoped lifetime to DI - inject the same service instance to child components\" (#766)"},{"Id":"320422428","IsPullRequest":true,"CreatedAt":"2018-05-04T23:29:01","Actor":"attilah","Number":"765","RawContent":null,"Title":"Add support for pointer events, change oncontextmenu event type","State":"closed","Body":"- Add support for pointer events\r\n- Change oncontextmenu event from pointerevent to mouseevent (based on MDN docs)\r\n\r\nFixes: https://github.com/aspnet/Blazor/issues/763","Url":"https://github.com/aspnet/Blazor/pull/765","RelatedDescription":"Closed or merged PR \"Add support for pointer events, change oncontextmenu event type\" (#765)"},{"Id":"320350287","IsPullRequest":false,"CreatedAt":"2018-05-04T23:29:01","Actor":"attilah","Number":"763","RawContent":null,"Title":"pointer events as not handled and oncontextmenu event type is wrong","State":"closed","Body":"I found out that [pointer](https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent) events are not handled by Blazor 0.3.0.\r\n\r\nWhen I was about to add them, I saw that Blazor already have a ```UIPointerEventArgs``` class and it is associated with the [onContextMenu](https://github.com/aspnet/Blazor/blob/dev/src/Microsoft.AspNetCore.Blazor/Components/EventHandlers.cs#L44) handler, which is by the specs does not make sense, since it is a [mouse](https://developer.mozilla.org/en-US/docs/Web/Events/contextmenu) event.\r\n\r\nIf I see it correctly the only changes needed to support pointer events are:\r\n\r\nEventhandlers.cs:\r\n\r\n```c#\r\n    // Pointer events\r\n    [EventHandler(\"gotpointercapture\", typeof(UIPointerEventArgs))]\r\n    [EventHandler(\"lostpointercapture\", typeof(UIPointerEventArgs))]\r\n    [EventHandler(\"pointercancel\", typeof(UIPointerEventArgs))]\r\n    [EventHandler(\"pointerdown\", typeof(UIPointerEventArgs))]\r\n    [EventHandler(\"pointerenter\", typeof(UIPointerEventArgs))]\r\n    [EventHandler(\"pointerleave\", typeof(UIPointerEventArgs))]\r\n    [EventHandler(\"pointermove\", typeof(UIPointerEventArgs))]\r\n    [EventHandler(\"pointerout\", typeof(UIPointerEventArgs))]\r\n    [EventHandler(\"pointerover\", typeof(UIPointerEventArgs))]\r\n    [EventHandler(\"pointerup\", typeof(UIPointerEventArgs))]\r\n```\r\n\r\nEventForDotNet.ts:\r\n\r\n```js\r\ncase 'gotpointercapture':\r\ncase 'lostpointercapture':\r\ncase 'pointercancel':\r\ncase 'pointerdown':\r\ncase 'pointerenter':\r\ncase 'pointerleave':\r\ncase 'pointermove':\r\ncase 'pointerout':\r\ncase 'pointerover':\r\ncase 'pointerup':\r\n  return new EventForDotNet<UIPointerEventArgs>('pointer', { Type: event.type });\r\n```\r\n\r\nAll the other places because of the ```oncontextmenu``` handler already having the pieces for pointer events.\r\n\r\nWould you like to have a PR or you will copy these to the appropriate places?\r\n","Url":"https://github.com/aspnet/Blazor/issues/763","RelatedDescription":"Closed issue \"pointer events as not handled and oncontextmenu event type is wrong\" (#763)"},{"Id":"320378541","IsPullRequest":false,"CreatedAt":"2018-05-04T18:17:12","Actor":"chanan","Number":"764","RawContent":null,"Title":"Loops, Lambdas, and Variables","State":"open","Body":"This might be a known Razor issue, and since I haven't used Razor in ages I was caught off guard.\r\n\r\nThis does not work:\r\n```\r\n@for (int i = 0; i < items.Count; i++)\r\n{\r\n  <CarouselItem IsActive=\"@(SecondIndex == i)\" src=\"@item[i].Source\" alt=\"@items[i].Alt\">\r\n    <h5>@items[0].Header</h5>\r\n  </CarouselItem>\r\n}\r\n```\r\n\r\nYou get an exception with the h5 line (the previous lines are fine):\r\n\r\n```\r\nUncaught Error: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) <0x1f27f48 + 0x00018> in <140509c0d46c421ca83585ed625d5577>:0 \r\n  at Sample.Pages.Carousels+<>c__DisplayClass0_0.<BuildRenderTree>b__10 (Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder3) <0x1f3d190 + 0x00090> in <14d8d1e2ea4743fa889b8a5ddf494a58>:0 \r\n\r\n```\r\n\r\nThe work around is to add a capture variable in the loop like so:\r\n```\r\n@for (int i = 0; i < items.Count; i++)\r\n{\r\n  Item item = items[i];\r\n  <CarouselItem IsActive=\"@(SecondIndex == i)\" src=\"@item.Source\" alt=\"@item.Alt\">\r\n    <h5>@item.Header</h5>\r\n  </CarouselItem>\r\n}\r\n```\r\n\r\nLike I said not sure if this is fixable since it might be in Razor like that, but at the very least a better error message and adding this to the docs would be helpful.","Url":"https://github.com/aspnet/Blazor/issues/764","RelatedDescription":"Open issue \"Loops, Lambdas, and Variables\" (#764)"},{"Id":"320348974","IsPullRequest":true,"CreatedAt":"2018-05-04T17:42:29","Actor":"eakoning","Number":"762","RawContent":null,"Title":"typo","State":"closed","Body":"Just a small typo... ;-)","Url":"https://github.com/aspnet/Blazor/pull/762","RelatedDescription":"Closed or merged PR \"typo\" (#762)"},{"Id":"320317062","IsPullRequest":false,"CreatedAt":"2018-05-04T15:26:53","Actor":"dlr1","Number":"761","RawContent":null,"Title":"question: Bound parameter value","State":"closed","Body":"I have a component(\"mycomp\"). I am just writing the value of parameter and expect the values to be in sync. what am I missing?\r\n```\r\n<div class=\"row\" style=\"height:100px;width:300px;\">\r\n    bound charttype value:@ChartType\r\n    <br />\r\n    ChartTypeInMethod: @ChartTypeInMethod\r\n</div>\r\n\r\n\r\n@functions{\r\n    [Parameter]\r\n    string ChartType { get; set; }\r\n\r\n    string ChartTypeInMethod { get; set; }\r\n    public void MyMethod()\r\n    {\r\n        ChartTypeInMethod = ChartType;\r\n    }\r\n}\r\n```\r\nI am using the above component in another page like below\r\n```\r\n<div class=\"row\">\r\n    <mycomp ChartType=\"@ChartType\" ref=\"comp1\"></mycomp>   \r\n    <div>\r\n        <input type=\"radio\" name=\"charttype\" checked=\"@(ChartType==\"bar\")\" value=\"bar\" onchange=\"@((e)=>charttypeChanged(e))\"/>bar\r\n        <input type=\"radio\" name=\"charttype\" checked=\"@(ChartType==\"line\")\" value=\"line\" onchange=\"@((e)=>charttypeChanged(e))\" />line\r\n    </div>\r\n</div>\r\n\r\n@functions{        \r\n    string ChartType { get; set; }\r\n    mycomp comp1;\r\n    \r\n    void charttypeChanged(UIChangeEventArgs e)\r\n    {\r\n        ChartType = e.Value.ToString();        \r\n        comp1.MyMethod();\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Blazor/issues/761","RelatedDescription":"Closed issue \"question: Bound parameter value\" (#761)"},{"Id":"320297785","IsPullRequest":false,"CreatedAt":"2018-05-04T15:20:42","Actor":"DNF-SaS","Number":"759","RawContent":null,"Title":"Component-Rendering not optimal?","State":"closed","Body":"For testing purposes, I have modified the default blazor project template's FetchData.cshtml so that every WeatherForecast-Row is represented by a component.\r\n\r\n```\r\n@foreach ( var forecast in forecasts.Take(1) )\r\n{\r\n  <ForecastRow WeatherForecast=\"@forecast\" />\r\n}\r\n```\r\n\r\nForecastRow.cshtml is only\r\n```\r\n@inherits ComponentBase @*Only for Debug-Output to Console*@\r\n\r\n<tr>\r\n    <td>@this.WeatherForecast.Date.ToShortDateString()</td>\r\n    <td>@this.WeatherForecast.TemperatureC</td>\r\n    <td>@this.WeatherForecast.TemperatureF</td>\r\n    <td>@this.WeatherForecast.Summary</td>\r\n</tr>\r\n\r\n@functions\r\n{\r\n    [Parameter] private WeatherForecast WeatherForecast { get; set; }\r\n}\r\n```\r\nWhen displaying only the first row, the following LifeCycle-Events are fired:\r\n\r\n```\r\nBASE(FetchData) | - | SetParameters\r\nBASE(FetchData) | - | OnInit\r\nBASE(FetchData) | - | OnParametersSet\r\nBASE(FetchData) | - | OnParametersSetAsync\r\nBASE(FetchData) | - | OnAfterRender\r\nBASE(FetchData) | - | OnAfterRenderAsync\r\nBASE(NavMenu) | - | ShouldRender\r\nBASE(NavMenu) | - | OnAfterRender\r\nBASE(NavMenu) | - | OnAfterRenderAsync\r\nBASE(FetchData) | - | ShouldRender\r\nBASE(ForecastRow) | - | SetParameters\r\nBASE(ForecastRow) | - | OnInit\r\nBASE(ForecastRow) | - | OnInitAsync\r\nBASE(ForecastRow) | - | OnParametersSet\r\nBASE(ForecastRow) | - | OnParametersSetAsync\r\nBASE(FetchData) | - | OnAfterRender\r\nBASE(FetchData) | - | OnAfterRenderAsync\r\nBASE(ForecastRow) | - | OnAfterRender\r\nBASE(ForecastRow) | - | OnAfterRenderAsync\r\nBASE(ForecastRow) | - | ShouldRender\r\nBASE(ForecastRow) | - | OnAfterRender\r\nBASE(ForecastRow) | - | OnAfterRenderAsync\r\nBASE(ForecastRow) | - | ShouldRender\r\nBASE(ForecastRow) | - | OnAfterRender\r\nBASE(ForecastRow) | - | OnAfterRenderAsync\r\nBASE(FetchData) | - | ShouldRender\r\nBASE(ForecastRow) | - | SetParameters\r\nBASE(ForecastRow) | - | OnParametersSet\r\nBASE(ForecastRow) | - | OnParametersSetAsync\r\nBASE(ForecastRow) | - | ShouldRender\r\nBASE(FetchData) | - | OnAfterRender\r\nBASE(FetchData) | - | OnAfterRenderAsync\r\nBASE(ForecastRow) | - | OnAfterRender\r\nBASE(ForecastRow) | - | OnAfterRenderAsync\r\nBASE(ForecastRow) | - | ShouldRender\r\nBASE(ForecastRow) | - | OnAfterRender\r\n```\r\nIt's only one Forecast-Row! ( see .Take(1) )\r\nAm I doing anything wrong here?","Url":"https://github.com/aspnet/Blazor/issues/759","RelatedDescription":"Closed issue \"Component-Rendering not optimal?\" (#759)"},{"Id":"320315473","IsPullRequest":false,"CreatedAt":"2018-05-04T15:18:41","Actor":"SteveSandersonMS","Number":"760","RawContent":null,"Title":"BlazorComponent async methods should all recognize synchronously-completed tasks","State":"open","Body":"Currently most of the async lifecycle methods chain `StateHasChanged` onto any non-null returned task. They should check whether the returned task completed synchronously already, and if so, not chain on a duplicate `StateHasChanged`.","Url":"https://github.com/aspnet/Blazor/issues/760","RelatedDescription":"Open issue \"BlazorComponent async methods should all recognize synchronously-completed tasks\" (#760)"},{"Id":"320108078","IsPullRequest":true,"CreatedAt":"2018-05-04T15:14:39","Actor":"SteveSandersonMS","Number":"746","RawContent":null,"Title":"camelCase all the JSONs","State":"closed","Body":"We know from feedback that C# developers pretty much universally want automatic PascalCase-camelCase conversions enabled during JSON serialization/deserialization. So with this PR, `JsonUtility` will now:\r\n\r\n* When serializing, convert property names to camelCase\r\n* When deserializing, match incoming property names case insensitively\r\n\r\nSince `JsonUtility` is used internally for `HttpClient`'s `XyzJsonAsync` methods (e.g., `GetJsonAsync`), it affects what data is sent, and broadens what incoming data is accepted. Likewise, since `JsonUtility` is used for `RegisteredFunction.Invoke`, it affects how complex .NET objects are passed to JS-side code.\r\n\r\nA very important design point is that this is *not overridable or configurable*. We are trying very hard not to develop a whole new sophisticated JSON library inside Blazor. Our goal for the built-in JSON utility is to support the most basic and common things that are absolutely essential for core scenarios. Many developers will want something more customisable, which is fine: there are lots of other JSON libraries on NuGet (and where necessary, we'll adapt our APIs to make sure you can use them). JSON libraries should be separate, independent projects from Blazor.\r\n\r\nHopefully this change will satisfy the majority of developers.\r\n\r\n**Breaking change** If you do sophisticated JS interop and have JS-side code that relies on property names arriving in PascalCase, you'll need to change it to expect camelCase.","Url":"https://github.com/aspnet/Blazor/pull/746","RelatedDescription":"Closed or merged PR \"camelCase all the JSONs\" (#746)"},{"Id":"320297710","IsPullRequest":false,"CreatedAt":"2018-05-04T14:48:59","Actor":"MihaMarkic","Number":"758","RawContent":null,"Title":"Pass ElementRef to callback from js to blazor?","State":"closed","Body":"Would it work if I pass element to Blazor.platform.callMethod that accepts ElementRef?\r\nIOW from javascript to blazor (.net) method.\r\nI'm trying to figure out from what DOM a callback originated.\r\nSo far I've been using unique Id attributes.","Url":"https://github.com/aspnet/Blazor/issues/758","RelatedDescription":"Closed issue \"Pass ElementRef to callback from js to blazor?\" (#758)"},{"Id":"320284638","IsPullRequest":false,"CreatedAt":"2018-05-04T14:11:23","Actor":"Mun1z","Number":"757","RawContent":null,"Title":"Pattern Model View ViewModel MVVM","State":"closed","Body":"Do not you find it interesting to implement the pattern MVVM for each page? even in the angular JS they use, in the. net world we are already well accustomed to the pattern, I think it would be very interesting.","Url":"https://github.com/aspnet/Blazor/issues/757","RelatedDescription":"Closed issue \"Pattern Model View ViewModel MVVM\" (#757)"},{"Id":"320272638","IsPullRequest":false,"CreatedAt":"2018-05-04T13:20:59","Actor":"chanan","Number":"756","RawContent":null,"Title":"Provide a way to create private Components using Razor syntax","State":"open","Body":"As a Component library creator, I would like to create some components that are used internally only. Currently, you can do that by creating a private class and using the builder to create a component, however it would be great if there were a way to do the same thing using Razor syntax.","Url":"https://github.com/aspnet/Blazor/issues/756","RelatedDescription":"Open issue \"Provide a way to create private Components using Razor syntax\" (#756)"},{"Id":"320266335","IsPullRequest":false,"CreatedAt":"2018-05-04T13:17:08","Actor":"arc95","Number":"755","RawContent":null,"Title":"Securing app DLL against hackers","State":"closed","Body":"Hi all. I was just posting to the gitter and someone mentioned that DLL's can be reverse-engineered. How big a threat is this? What measures can we take to protect against this kind of threat?\r\n\r\nWhat security features does Blazor have? Thank you.","Url":"https://github.com/aspnet/Blazor/issues/755","RelatedDescription":"Closed issue \"Securing app DLL against hackers\" (#755)"},{"Id":"320212473","IsPullRequest":false,"CreatedAt":"2018-05-04T09:57:04","Actor":"RemiBou","Number":"754","RawContent":null,"Title":"Protecting against CSRF ?","State":"closed","Body":"Currently every api call on a controller action with an attribute ValidateAntiForgeryTokenAttribute (https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.validateantiforgerytokenattribute?view=aspnetcore-2.0) will give a 400.\r\n\r\nHow can we implement the sending / creation of the token on client side so our serverside is protected against CSRF ?","Url":"https://github.com/aspnet/Blazor/issues/754","RelatedDescription":"Closed issue \"Protecting against CSRF ?\" (#754)"},{"Id":"320207199","IsPullRequest":false,"CreatedAt":"2018-05-04T09:31:19","Actor":"talkingdotnet","Number":"753","RawContent":null,"Title":"Any fix for Error BL9986: Component attributes do not support complex content (mixed C# and markup). ","State":"closed","Body":"I am trying to upgrade one of my blazor app built on 0.1 ([CRUD App using Blazor](http://www.talkingdotnet.com/create-a-crud-app-using-blazor-and-asp-net-core/)) to 0.3 but I am getting  the \"**Error BL9986: Component attributes do not support complex content (mixed C# and markup).** \" I understand the error but not able to find the solution. This used to work previously.\r\n\r\n` <input id=\"txt_@todo.ID\" style=\"display:none;\">`\r\n\r\nBut now it gives me **mixed c# and markup** error.  How would such use cases needs to be handled. Another practical use case is of applying CSS class to the element like,\r\n\r\n `<button class=\"btn btn-success @(SelectedID == todo.ID ? \"ShowControl\" : \"HideControl\")\"> Update </button>`\r\n\r\nThis also gives me the same error but interestingly it works for the HTML span element. The following code works,\r\n`<span id=\"spn_@todo.ID\">@todo.Item</span>`\r\n\r\nAny ideas how to fix this error and why Blazor is not allowing this.\r\n","Url":"https://github.com/aspnet/Blazor/issues/753","RelatedDescription":"Closed issue \"Any fix for Error BL9986: Component attributes do not support complex content (mixed C# and markup). \" (#753)"},{"Id":"320063155","IsPullRequest":false,"CreatedAt":"2018-05-04T09:26:06","Actor":"chanan","Number":"743","RawContent":null,"Title":"Page not refreshing","State":"closed","Body":"This *might* be due to binding on two integer as described in this issue: https://github.com/aspnet/Blazor/issues/380 - But I am not sure if it is the same thing or not.\r\n\r\nHere is the calling page (Only CarouselControl seems to be the problem, but including the full page):\r\n\r\n```\r\n@addTagHelper *, BlazorStrap\r\n@page \"/carousels\"\r\n\r\n<h1>Carousels</h1>\r\n\r\n<div class=\"docs-example\">\r\n    <Carousel>\r\n        <CarouselIndicators NumberOfItems=\"@items.Count\" ActiveIndex=\"@ActiveIndex\" />\r\n        <div class=\"carousel-inner\">\r\n            @for (int i = 0; i < items.Count; i++)\r\n            {\r\n                <CarouselItem IsActive=\"@(ActiveIndex == i)\" src=\"@items[i].Source\" alt=\"@items[i].Alt\" />\r\n            }\r\n        </div>\r\n        <CarouselControl CarouselDirection=\"CarouselDirection.Previous\" NumberOfItems=\"@items.Count\" ActiveIndex=\"@ActiveIndex\" onclick=\"@onclick\" />\r\n        <CarouselControl CarouselDirection=\"CarouselDirection.Next\" NumberOfItems=\"@items.Count\" ActiveIndex=\"@ActiveIndex\" onclick=\"@onclick\" />\r\n    </Carousel>\r\n</div>\r\n\r\n<div>\r\n    ActiveIndex: @ActiveIndex\r\n</div>\r\n\r\n@functions {\r\n    IList<Item> items = new List<Item>\r\n    {\r\n        new Item { Source = \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1631dfd09f0%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1631dfd09f0%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22217.7%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\", Alt=\"First Slide\" },\r\n        new Item { Source = \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1631dfd09f1%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1631dfd09f1%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22217.7%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\", Alt=\"Second Slide\" },\r\n        new Item { Source = \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1631dfd09f2%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1631dfd09f2%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22217.7%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\", Alt=\"Third Slide\" }\r\n    };\r\n\r\n    int ActiveIndex { get; set; }\r\n\r\n    class Item\r\n    {\r\n        public string Source { get; set; }\r\n        public string Alt { get; set; }\r\n    }\r\n\r\n    void onclick(UIMouseEventArgs e)\r\n    {\r\n        StateHasChanged();\r\n    }\r\n}\r\n```\r\nHere is CarouselControl which is defined in a Blazor library:\r\n\r\n```\r\n@using Microsoft.AspNetCore.Blazor\r\n\r\n<a class=\"@classname\" role=\"button\" onclick=\"@_onclick\">\r\n    <span class=\"@iconClassname\" aria-hidden=\"true\"></span>\r\n    <span class=\"sr-only\">@directionName</span>\r\n</a>\r\n\r\n@functions {\r\n    private string classname\r\n    {\r\n        get\r\n        {\r\n            var direction = CarouselDirection == CarouselDirection.Previous ? \"prev\" : \"next\";\r\n            return $\"carousel-control-{direction} {Class}\";\r\n        }\r\n    }\r\n    private string iconClassname\r\n    {\r\n        get\r\n        {\r\n            var direction = CarouselDirection == CarouselDirection.Previous ? \"prev\" : \"next\";\r\n            return $\"carousel-control-{direction}-icon\";\r\n        }\r\n\r\n    }\r\n    private string directionName\r\n    {\r\n        get\r\n        {\r\n            return CarouselDirection == CarouselDirection.Previous ? \"Previous\" : \"Next\";\r\n        }\r\n    }\r\n    public int ActiveIndex { get; set; }\r\n    public int NumberOfItems { get; set; }\r\n    public Action<UIMouseEventArgs> onclick { get; set; }\r\n    public CarouselDirection CarouselDirection { get; set; } = CarouselDirection.Previous;\r\n    public string Class { get; set; }\r\n    public string Style { get; set; }\r\n\r\n    private void _onclick(UIMouseEventArgs e)\r\n    {\r\n        if(CarouselDirection == CarouselDirection.Previous)\r\n        {\r\n            if (ActiveIndex == 0) ActiveIndex = NumberOfItems - 1;\r\n            else ActiveIndex = ActiveIndex - 1;\r\n        }\r\n        else\r\n        {\r\n            if (ActiveIndex == NumberOfItems - 1) ActiveIndex = 0;\r\n            else ActiveIndex = ActiveIndex + 1;\r\n\r\n        }\r\n        Console.WriteLine(\"ActiveIndex: {0}\", ActiveIndex);\r\n        onclick(e);\r\n        StateHasChanged();\r\n    }\r\n}\r\n```\r\n\r\nYou may note I stuck in a few StateHasChaged in the control and the page in an attempt to get the page to refresh, but neither worked.\r\n\r\nClicking on the control does change ActiveIndex in Console.WriteLine in the control in the library, but the ActiveIndex in the calling page does not change.","Url":"https://github.com/aspnet/Blazor/issues/743","RelatedDescription":"Closed issue \"Page not refreshing\" (#743)"},{"Id":"320200343","IsPullRequest":false,"CreatedAt":"2018-05-04T09:11:42","Actor":"vibeeshan025","Number":"752","RawContent":null,"Title":"Storing javascript objects in C#","State":"closed","Body":"When pass a javascript object to C# / WASM context. and storing it to an object makes it null referenced.\r\nBelow i am trying to create a C# wrapper for drawing canvas\r\n\r\n`         ElementRef drawingCanvas;`\r\n`          ....`\r\n`        var ctx = Get2DContext(drawingCanvas);`\r\n`        ctx.FillRect(10, 10, 50, 50);` //this C# code throuws null, see the attached exception log\r\n`        `\r\n`        public CanvasRenderingContext2D Get2DContext(object canvasElement)`\r\n`        {`\r\n`            return new CanvasRenderingContext2D() { currentObject = RegisteredFunction.Invoke<object>(\"Get2DContextExt\", canvasElement) };`\r\n`        }`\r\n`        `\r\n`        public void FillRect(double x, double y, double w, double h)`\r\n`        {`\r\n`            RegisteredFunction.InvokeUnmarshalled<object>(\"CanvasRenderingContext2D_fillRect\", currentObject, x, y, w, h);`\r\n`        }`\r\n\r\n`        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder`\r\n`        {`\r\n`            builder.OpenElement(0, \"script\");`\r\n`            builder.AddContent(0, $\"Blazor.registerFunction( 'Get2DContextExt', (obj) => {{ var ctx = obj.getContext('2d'); console.log(ctx); return ctx; }});\");`\r\n`            builder.CloseElement();`\r\n`             `\r\n`           builder.OpenElement(1, \"script\");`\r\n`          builder.AddContent(0, \"Blazor.registerFunction('CanvasRenderingContext2D_fillRect', (obj , x, y, w, h) => { obj.fillRect(x, y, w, h); });\");`\r\n`            builder.CloseElement();`\r\n`          `\r\n`        }`\r\n\r\n**Exception**\r\n\r\n`          Uncaught Error: Microsoft.AspNetCore.Blazor.Browser.Interop.JavaScriptException: obj.fillRect is not a function\r\nTypeError: obj.fillRect is not a function\r\n    at Blazor.registerFunction (<anonymous>:1:90)\r\n    at Array.ASM_CONSTS (mono.js:1)\r\n    at _emscripten_asm_const_iiii (mono.js:1)\r\n    at :54789/wasm-function[5272]:21\r\n    at :54789/wasm-function[3543]:34\r\n    at :54789/wasm-function[3548]:364\r\n    at :54789/wasm-function[3550]:224\r\n    at :54789/wasm-function[3766]:189\r\n    at :54789/wasm-function[1505]:15583\r\n    at :54789/wasm-function[867]:13\r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[TRes] (:54789/System.String identifier, System.Object[] args) <0x1c2ca38 + 0x00034> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at CanvasTest.Common.CanvasRenderingContext2D.FillRect (:54789/System.Double x, System.Double y, System.Double w, System.Double h) <0x1c2c908 + 0x0006e> in <cceb8b67340346708bc55417fefdb664>:0 \r\n  at :54789/CanvasNew.Common.AdvCanvas.IncrementCount () <0x1c1aa50 + 0x0004e> in <cceb8b67340346708bc55417fefdb664>:0 \r\n  at Microsoft.AspNetCore.Blazor.Components.EventHandlerInvoker.Invoke (:54789/Microsoft.AspNetCore.Blazor.UIEventArgs e) <0x1c1a798 + 0x00076> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Components.BlazorComponent.Microsoft.AspNetCore.Blazor.Components.IHandleEvent.HandleEvent (:54789/Microsoft.AspNetCore.Blazor.Components.EventHandlerInvoker binding, Microsoft.AspNetCore.Blazor.UIEventArgs args) <0x1c1a268 + 0x0001a> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.ComponentState.DispatchEvent (:54789/Microsoft.AspNetCore.Blazor.Components.EventHandlerInvoker binding, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1c1a008 + 0x0003c> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (:54789/System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1c19a40 + 0x00054> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (:54789/System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1c198d8 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (:54789/System.String eventDescriptorJson, System.String eventArgsJson) <0x1bd69d8 + 0x0005a> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n    at Blazor.registerFunction (<anonymous>:1:90)\r\n    at Array.ASM_CONSTS (mono.js:1)\r\n    at _emscripten_asm_const_iiii (mono.js:1)\r\n    at :54789/wasm-function[5272]:21\r\n    at :54789/wasm-function[3543]:34\r\n    at :54789/wasm-function[3548]:364\r\n    at :54789/wasm-function[3550]:224\r\n    at :54789/wasm-function[3766]:189\r\n    at :54789/wasm-function[1505]:15583\r\n    at :54789/wasm-function[867]:13\r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[TRes] (:54789/System.String identifier, System.Object[] args) <0x1c2ca38 + 0x00034> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at CanvasTest.Common.CanvasRenderingContext2D.FillRect (:54789/System.Double x, System.Double y, System.Double w, System.Double h) <0x1c2c908 + 0x0006e> in <cceb8b67340346708bc55417fefdb664>:0 \r\n  at :54789/CanvasNew.Common.AdvCanvas.IncrementCount () <0x1c1aa50 + 0x0004e> in <cceb8b67340346708bc55417fefdb664>:0 \r\n  at Microsoft.AspNetCore.Blazor.Components.EventHandlerInvoker.Invoke (:54789/Microsoft.AspNetCore.Blazor.UIEventArgs e) <0x1c1a798 + 0x00076> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Components.BlazorComponent.Microsoft.AspNetCore.Blazor.Components.IHandleEvent.HandleEvent (:54789/Microsoft.AspNetCore.Blazor.Components.EventHandlerInvoker binding, Microsoft.AspNetCore.Blazor.UIEventArgs args) <0x1c1a268 + 0x0001a> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.ComponentState.DispatchEvent (:54789/Microsoft.AspNetCore.Blazor.Components.EventHandlerInvoker binding, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1c1a008 + 0x0003c> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (:54789/System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1c19a40 + 0x00054> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (:54789/System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1c198d8 + 0x00020> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (:54789/System.String eventDescriptorJson, System.String eventArgsJson) <0x1bd69d8 + 0x0005a> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n    at Object.callMethod (MonoPlatform.ts:70)\r\n    at raiseEvent (BrowserRenderer.ts:327)\r\n    at EventDelegator.onEvent (BrowserRenderer.ts:19)\r\n    at EventDelegator.onGlobalEvent (EventDelegator.ts:83)`","Url":"https://github.com/aspnet/Blazor/issues/752","RelatedDescription":"Closed issue \"Storing javascript objects in C#\" (#752)"},{"Id":"320173099","IsPullRequest":false,"CreatedAt":"2018-05-04T09:03:36","Actor":"MihaMarkic","Number":"750","RawContent":null,"Title":"Comparing two ElementRef?","State":"closed","Body":"How does one compare two ElementRef instances whether they point to the same DOM element?","Url":"https://github.com/aspnet/Blazor/issues/750","RelatedDescription":"Closed issue \"Comparing two ElementRef?\" (#750)"},{"Id":"320161599","IsPullRequest":false,"CreatedAt":"2018-05-04T08:55:43","Actor":"drkmn","Number":"747","RawContent":null,"Title":"Option to JSON Serialize/Deserialize enums as string","State":"closed","Body":"Please add the (optional) ability to serialize/deserialize Enum values to/from (camelCased) string rather than numeric value. This functionality is available in Json.NET as well. \r\n\r\nSeveral API's  expose fixed \"choice\" values as string-like enumerations and with the current functionality we would be forced to map such values to a string and roll our own post-deserialization parse logic.","Url":"https://github.com/aspnet/Blazor/issues/747","RelatedDescription":"Closed issue \"Option to JSON Serialize/Deserialize enums as string\" (#747)"},{"Id":"320163600","IsPullRequest":false,"CreatedAt":"2018-05-04T08:47:17","Actor":"babula38","Number":"748","RawContent":null,"Title":"Bootstrap Tool tip is not working","State":"closed","Body":"Hi this is blazor issue or i am doing something wrong. Even i tried working with Modal pop up even that did not work either. \r\nHtml code in one of the component.\r\n```html\r\n <a href=\"#\" data-toggle=\"tooltip\" title=\"Tooltip on top\" id=\"idname\">\r\n                <span class=\"glyphicon glyphicon-plus\"></span>\r\n  </a>\r\n```\r\nthis is in one of the js file test.js\r\n```jquery\r\n$(function () {\r\n    $('#idname').tooltip();\r\n    console.log(\"tool tip added\");\r\n});\r\n```\r\nbelow is the sequence of  files in index.html\r\n```html\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n    <link href=\"css/task.css\" rel=\"stylesheet\" />\r\n</head>\r\n<body>\r\n    <app>Loading...</app>\r\n    <script src=\"js/jquery.min.js\"></script>\r\n    <script src=\"js/bootstrap.min.js\"></script>\r\n    <script src=\"js/test.js\"></script>\r\n    <script type=\"blazor-boot\">\r\n    </script>\r\n</body>\r\n```\r\n**Note:- bootstrap version is v3.3.7, jquery version is v1.12.4**\r\nI took the same files and same htmls to another project WebForm project for testing and it is working fine there.","Url":"https://github.com/aspnet/Blazor/issues/748","RelatedDescription":"Closed issue \"Bootstrap Tool tip is not working\" (#748)"},{"Id":"320168723","IsPullRequest":false,"CreatedAt":"2018-05-04T08:46:27","Actor":"MihaMarkic","Number":"749","RawContent":null,"Title":"ParameterAttribute could not be found in a new library","State":"closed","Body":"`dotnet new blazorlib`\r\n\r\nAdd sample property\r\n\r\n```\r\n@functions {\r\nint currentCount = 0;\r\n\r\n[Parameter]\r\nprivate int IncrementAmount { get; set; } = 1;\r\n\r\nvoid IncrementCount()\r\n{\r\n    currentCount += IncrementAmount;\r\n}\r\n}\r\n```\r\n\r\nerror CS0246: The type or namespace name 'ParameterAttribute' could not be found (are you missing a using directive or an assembly reference?)\r\n\r\nI have to add\r\n`@using Microsoft.AspNetCore.Blazor.Components`\r\nin order to make it work.","Url":"https://github.com/aspnet/Blazor/issues/749","RelatedDescription":"Closed issue \"ParameterAttribute could not be found in a new library\" (#749)"},{"Id":"320195638","IsPullRequest":true,"CreatedAt":"2018-05-04T08:45:32","Actor":"SteveSandersonMS","Number":"751","RawContent":null,"Title":"In Blazor cshtml, auto-reference Microsoft.AspNetCore.Blazor and .Components","State":"open","Body":"Fixes #749.\r\n\r\nI know that arguably we don't *have* to do this (C# developers already add `using` for things they need), but for a Blazor cshtml file there's basically no scenario where you'd ever not want to import `Microsoft.AspNetCore.Blazor` and `Microsoft.AspNetCore.Blazor.Components`. So this PR adds those namespaces to the ones implicitly referenced both at design time and build time. Can't think of any reason we shouldn't do this.\r\n\r\nIt looks like a big PR because so many baseline files are affected, but really it's quite a small change. For easier review, you might want to consider each of the commits separately.\r\n\r\nI'm not proposing to auto-add other namespaces like `.Routing`, `.Layouts`, `.Browser.Interop`, etc., because there are plenty of cases where you might not want them, and their type names might clash with some other library you're using.","Url":"https://github.com/aspnet/Blazor/pull/751","RelatedDescription":"Open PR \"In Blazor cshtml, auto-reference Microsoft.AspNetCore.Blazor and .Components\" (#751)"},{"Id":"319974387","IsPullRequest":false,"CreatedAt":"2018-05-03T23:06:56","Actor":"hungdluit","Number":"738","RawContent":null,"Title":"Duplicated Render while using child component","State":"closed","Body":"Version 0.3.0\r\n\r\nCommandButton.cshtml\r\n\r\n```\r\n@using Microsoft.AspNetCore.Blazor\r\n<div class=\"@GetClassNames()\" ref=\"Root\">\r\n    @ChildContent\r\n    @Text\r\n</div>\r\n\r\n@functions {\r\n\r\n    public ElementRef Root;\r\n\r\n    [Parameter]\r\n    protected RenderFragment ChildContent { get; set; }\r\n\r\n    [Parameter]\r\n    protected string Text { get; set; }\r\n\r\n    [Parameter]\r\n    protected ItemStyle Style { get; set; } = ItemStyle.None;\r\n\r\n    [Parameter]\r\n    protected bool IsOutLine { get; set; }\r\n\r\n    [Parameter]\r\n    protected ItemSize Size { get; set; } = ItemSize.Default;\r\n\r\n    private string GetClassNames()\r\n    {\r\n        IconButton a;\r\n        string buttonStyle = string.Empty;\r\n        if (Style != ItemStyle.None)\r\n        {\r\n            buttonStyle = Enum.GetName(typeof(ItemStyle), Style).ToLowerInvariant();\r\n        }\r\n\r\n        string outline = IsOutLine ? \"outline\" : string.Empty;\r\n\r\n        return ClassNames.Get(\"button\", buttonStyle, outline);\r\n    }\r\n}\r\n```\r\n\r\nIconButton.cshtml\r\n\r\n```\r\n@inherits CommandButton\r\n<CommandButton Text=@Text Style=@Style>\r\n    <span class=\"@Icon\"></span>\r\n</CommandButton>\r\n\r\n@functions {\r\n\r\n    [Parameter]\r\n    private string Icon { get; set; }\r\n}\r\n```\r\n\r\n`<IconButton Icon=\"mif-checkmark\" Text=\"Click Me\"></IconButton>\r\n`\r\nRendered HTML\r\n\r\n![image](https://user-images.githubusercontent.com/5623089/39587013-be4e213a-4f22-11e8-9a7e-ae0c24c94952.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/738","RelatedDescription":"Closed issue \"Duplicated Render while using child component\" (#738)"},{"Id":"320097443","IsPullRequest":false,"CreatedAt":"2018-05-03T22:09:58","Actor":"DNF-SaS","Number":"745","RawContent":null,"Title":"Multiple @implements in single .cshtml","State":"open","Body":"Like\r\n```\r\n@implements IEventListener\r\n@implements IDisposable\r\n```\r\n\r\nthe resulting code should be like\r\n\r\n`public class MyClass: Microsoft.AspNetCore.Blazor.Components.BlazorComponent, IEventListener, IDisposable`\r\n\r\nbut is only\r\n`public class MyClass: Microsoft.AspNetCore.Blazor.Components.BlazorComponent, IEventListener`","Url":"https://github.com/aspnet/Blazor/issues/745","RelatedDescription":"Open issue \"Multiple @implements in single .cshtml\" (#745)"},{"Id":"320075614","IsPullRequest":false,"CreatedAt":"2018-05-03T21:29:54","Actor":"jwaller2040","Number":"744","RawContent":null,"Title":"supported products only for Microsoft.VisualStudio.Community","State":"closed","Body":"I tried to install Microsoft.VisualStudio.BlazorExtension.vsix to my Visual Studio Professional 2017 but the error says it's only supporting Visual Studio Community. Why?\r\n\r\n[VSIXInstaller_de52d3d4-1758-4b62-9137-e2ba46f40268.log](https://github.com/aspnet/Blazor/files/1972611/VSIXInstaller_de52d3d4-1758-4b62-9137-e2ba46f40268.log)\r\n","Url":"https://github.com/aspnet/Blazor/issues/744","RelatedDescription":"Closed issue \"supported products only for Microsoft.VisualStudio.Community\" (#744)"},{"Id":"320034091","IsPullRequest":false,"CreatedAt":"2018-05-03T19:02:49","Actor":"cheng93","Number":"742","RawContent":null,"Title":"[0.3.0] ParameterAttribute","State":"closed","Body":"Getting errors when trying to build client library after updating 0.3.0\r\n\r\n```\r\nComponents/Alchemy/AlchemistDropdown.cshtml(13,6): error CS0246: The type or namespace name 'ParamaterAttribute' could not be found (are you missing a using directive or an assembly reference?) \r\nComponents/Alchemy/AlchemistDropdown.cshtml(13,6): error CS0246: The type or namespace name 'Paramater' could not be found (are you missing a using directive or an assembly reference?) \r\n```\r\n\r\n```\r\ndotnet --info\r\n```\r\n\r\n```.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-preview2-008533\r\n Commit:    996eb6c92c\r\n\r\nRuntime Environment:\r\n OS Name:     arch\r\n OS Version:  \r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /opt/dotnet/sdk/2.1.300-preview2-008533/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-preview2-26406-04\r\n  Commit:  6833f3026b\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300-preview2-008533 [/opt/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [/opt/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [/opt/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [/opt/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [/opt/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/aspnet/Blazor/issues/742","RelatedDescription":"Closed issue \"[0.3.0] ParameterAttribute\" (#742)"},{"Id":"320016714","IsPullRequest":false,"CreatedAt":"2018-05-03T18:16:06","Actor":"babula38","Number":"741","RawContent":null,"Title":"Suggestion to make client javascript function call easier","State":"closed","Body":"I was working on something today, the requirement was to call a JavaScript function when there is a button click. \r\n\r\n```html\r\n<input type=\"button\" onclick=\"callJavascriptFunc\" value=\"click\"/>\r\n```\r\nI do not know but i guess with the current framework we can call only C# functions in **onclick**.\r\n \r\n```html\r\n<input type=\"button\" onclick=\"csharpFunction\" value=\"click\"/>\r\n```\r\n```csharp\r\n@functions{\r\npublic void csharpFunction(){\r\n//if i want to call any javascript function then i have to call\r\n//RegisteredFunction.Invoke<> here\r\n//this function works like a middle man or proxy here\r\n}\r\n}\r\n```\r\n \r\nhow it will be if we make the call easier i.e.\r\n```html\r\n<input type=\"button\" onclick=\"javascript:csharpFunction\" value=\"click\"/>\r\n```\r\n \r\nHere based on the keyword **JavaScript** the framework will call the JavaScript function directly, if the keyword **JavaScript** is missing then call C# function.In this case there is no need of any C# function to proxy the call JavaScript function.\r\n ","Url":"https://github.com/aspnet/Blazor/issues/741","RelatedDescription":"Closed issue \"Suggestion to make client javascript function call easier\" (#741)"},{"Id":"319999290","IsPullRequest":false,"CreatedAt":"2018-05-03T16:49:20","Actor":"chanan","Number":"740","RawContent":null,"Title":"JS Interop doesnt handle arrays well","State":"open","Body":"Javscript:\r\n```\r\nBlazor.registerFunction('BlazorLogger.Logger.Log', function (args) {\r\n    if (Array.isArray(args)) {\r\n        console[\"log\"].apply(this, args)\r\n    } else {\r\n        console.log(args);\r\n    }\r\n    return true;\r\n});\r\n```\r\nC# Interop:\r\n```\r\npublic static void Log(params object[] list)\r\n{\r\n  var _list = new List<object>(list);\r\n  RegisteredFunction.Invoke<bool>(\"BlazorLogger.Logger.Log\", _list);\r\n}\r\n```\r\nNote the first line is needed.\r\n\r\nC# Calling code:\r\n```\r\nvar person = new Person { FirstName = \"John\", LastName = \"Smith\" };\r\nvar message = \"Hello, %O, you have been called %i times\";\r\nfor (int i = 0; i < 5; i++)\r\n{\r\n  Logger.Log(message, person, i + 1);\r\n}\r\n```\r\n\r\nWithout the first line in the interop code `var _list = new List<object>(list);` The output on the console is : `Hello, %O, you have been called %i times`. With the first line the output is as expected:\r\n\r\n```\r\nHello, \r\nObject\r\nFirstName\r\n:\r\n\"John\"\r\nLastName\r\n:\r\n\"Smith\"\r\n__proto__\r\n:\r\nObject\r\n, you have been called 1 times\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/740","RelatedDescription":"Open issue \"JS Interop doesnt handle arrays well\" (#740)"},{"Id":"319986630","IsPullRequest":false,"CreatedAt":"2018-05-03T16:11:13","Actor":"chanan","Number":"739","RawContent":null,"Title":"RegisteredFunction.Invoke<T> should handle receiving 'null' for 'args'","State":"open","Body":"This is a bit strange.\r\nThis is my JS function:\r\n\r\n```\r\nBlazor.registerFunction('BlazorLogger.Logger.Count', function (label) {\r\n    if (label !== null) console.count(label);\r\n    else console.count();\r\n    return true;\r\n});\r\n```\r\n\r\nAnd defined these two interop functions:\r\n\r\n```\r\npublic static void Count()\r\n{\r\n  RegisteredFunction.Invoke<bool>(\"BlazorLogger.Logger.Count\", null);\r\n}\r\n\r\npublic static void Count(string label)\r\n{\r\n  RegisteredFunction.Invoke<bool>(\"BlazorLogger.Logger.Count\", label);\r\n}\r\n```\r\n\r\nAnd calling it like so:\r\n\r\n```\r\nLogger.Count();\r\nLogger.Count(null);\r\nLogger.Count(\"bob\");\r\n```\r\n\r\nStrangely, lines 2 & 3 work fine, but line 1 which seems to do more or less the same thing as line 2 does not:\r\n\r\n```\r\nUncaught Error: System.ArgumentNullException: Value cannot be null.\r\nParameter name: source\r\n  at System.Linq.Enumerable.Select[TSource,TResult] (:11690/System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult] selector) <0x1c01168 + 0x0001a> in <2e4578bfc56440cca13db140d3ae997a>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.Invoke[TRes] (:11690/System.String identifier, System.Object[] args) <0x1c00820 + 0x00018> in <92ed9c6772a34798bccecc99cc26cbcd>:0 \r\n  at :11690/BlazorLogger.Logger.Count () <0x1c003b0 + 0x00006> in <f4f92b4bec764f4ab07179cba15c0d18>:0 \r\n  at :11690/Sample.Pages.Index.onclickCount () <0x1bff3b8 + 0x00004> in <0f6654494db343ba856c72c5c375f027>:0 \r\n  at Microsoft.AspNetCore.Blazor.Components.EventHandlerInvoker.Invoke (:11690/Microsoft.AspNetCore.Blazor.UIEventArgs e) <0x1bff148 + 0x00076> in <0d9c96ffc9704aa9b088cbbe138126c6>:0 \r\n...\r\n```","Url":"https://github.com/aspnet/Blazor/issues/739","RelatedDescription":"Open issue \"RegisteredFunction.Invoke<T> should handle receiving 'null' for 'args'\" (#739)"},{"Id":"319734438","IsPullRequest":false,"CreatedAt":"2018-05-02T22:32:30","Actor":"InnovationGB","Number":"737","RawContent":null,"Title":"Razor syntax highlighting/intellisense not working","State":"open","Body":"Currently I need to copy my code to C# files in order to gain intellisense and syntax highlighting. Is this not currently supported in Blazor?","Url":"https://github.com/aspnet/Blazor/issues/737","RelatedDescription":"Open issue \"Razor syntax highlighting/intellisense not working\" (#737)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-05-05T05:30:02.6992765Z","RunDurationInMilliseconds":1385}