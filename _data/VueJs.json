{"Data":{"Vue-Issues":{"Issues":[{"Id":"512691725","IsPullRequest":false,"CreatedAt":"2019-10-25T20:12:33","Actor":"shahinseu123","Number":"10765","RawContent":null,"Title":"This keyword issue inside created hook when using custom event","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/shahin-alam-the-encoder/pen/OJJgyej](https://codepen.io/shahin-alam-the-encoder/pen/OJJgyej)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ncreated: () => {\r\n         Bus.$on('buswithid',(id) => {\r\n             hey.invoice_id = id\r\n             console.log('this is invoice id' hey.invoice_id)\r\n             \r\n         })\r\n\r\n### What is expected?\r\ncreated(){\r\n  Bus.$on('eventbus', (value) => {\r\n      this.msg = value\r\n})\r\n}\r\n\r\nvalue is inside data and I expect the value set to msg inside data\r\n\r\n### What is actually happening?\r\nwhen I console.log(msg) inside $on(the arrow function it shows me the value inside msg, but the value is not set inside data->mag.\r\n\r\n\r\n---\r\nI am new in Vue, I hope you help and I love vue and vue team.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10765","RelatedDescription":"Closed issue \"This keyword issue inside created hook when using custom event\" (#10765)"},{"Id":"512683694","IsPullRequest":false,"CreatedAt":"2019-10-25T19:32:35","Actor":"shahinseu123","Number":"10764","RawContent":null,"Title":"Issue with this key word in created hook.","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/10764","RelatedDescription":"Closed issue \"Issue with this key word in created hook.\" (#10764)"},{"Id":"512674289","IsPullRequest":true,"CreatedAt":"2019-10-25T19:08:52","Actor":"vue-bot","Number":"10763","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"open","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10763","RelatedDescription":"Open PR \"[automated] Patreon sponsors update\" (#10763)"},{"Id":"512654608","IsPullRequest":false,"CreatedAt":"2019-10-25T18:24:55","Actor":"EvanSanderson","Number":"10762","RawContent":null,"Title":"Computed properties with getter/setter do not provide expected Typescript type annotation","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/quiet-glitter-qk7fy?fontsize=14](https://codesandbox.io/s/quiet-glitter-qk7fy?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Create a computed property in a single file component that is lang=\"ts\" - call it myComputedProp\r\n\r\n2) Add a get() and set() method for that computed prop\r\n\r\n3) Annotate the get() method (for example get(): string)\r\n\r\n4) Annotate the set() method (for example set(myValue: number): void ) \r\n\r\n5) Check the inferred types of myComputedProp - it looks like it will be string | number\r\n\r\n### What is expected?\r\nWhen the get() method of a computed property is annotated with a type, the computed properties type will correspond to that annotation. \r\n\r\n### What is actually happening?\r\nWhen the get() method of a computed property is annotated with a type (A), and the set() methods parameter has been annotated with a type as well (B), the computed property has a type of A | B\r\n\r\n---\r\nThis may very well be a user error on our part as well, and perhaps the community or Vue team has some suggestions for how to better handle this. We provide auto generated types from an api client, so having the \"or\" syntax with the computed annotation in this case means we need to use a type assertion to circumvent this. Thanks a ton! Happy to provide screenshots I took as well.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10762","RelatedDescription":"Open issue \"Computed properties with getter/setter do not provide expected Typescript type annotation\" (#10762)"},{"Id":"512374649","IsPullRequest":true,"CreatedAt":"2019-10-25T14:58:22","Actor":"zhouhuafei","Number":"10761","RawContent":null,"Title":"chore: ignore WebStorm IDE files","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: ignore WebStorm IDE files\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nWhy can have `.vscode` ?\r\nCan't have `.idea` !","Url":"https://github.com/vuejs/vue/pull/10761","RelatedDescription":"Closed or merged PR \"chore: ignore WebStorm IDE files\" (#10761)"},{"Id":"512303399","IsPullRequest":false,"CreatedAt":"2019-10-25T05:03:24","Actor":"HuberTRoy","Number":"10760","RawContent":null,"Title":"<slot> will lost the first scoped style when the tags has a selector with v-if","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-ptrum?fontsize=14](https://codesandbox.io/s/vue-template-ptrum?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen the parent style is scoped the `<slot>` will lost the style of the first tag if other tags on component has a selector with v-if.\r\n\r\nExample:\r\n\r\nMain.vue:\r\n```\r\n<template>\r\n  <Test>\r\n    <div class=\"test\">\r\n      <div class=\"test2\">\r\n      </div>\r\n      <div class=\"test2\">\r\n      </div>\r\n    </div>\r\n  </Test>\r\n</template>\r\n<script>\r\nimport Test from './Test.vue'\r\nexport default {\r\n     components: {\r\n        Test\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.test {\r\n    display: flex;\r\n}\r\n\r\n.test2 {\r\n   width: 200px;\r\n   height: 200px;\r\n   background: black;\r\n}\r\n</style>\r\n```\r\n\r\nTest.vue\r\n```\r\n<template>\r\n  <div>\r\n    <div v-if=\"f\" class=\"_test_style_class_name\">\r\n    </div>\r\n    <slot v-else>\r\n    </slot>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n     data () {\r\n         return {\r\n             f: true\r\n         }     \r\n     },\r\n     mounted () {  this.f = false }\r\n}\r\n</script>\r\n```\r\nOpen it on Chrome, and no style set on class `test` but I have set it on `Main.vue`. \r\nIf I remove `class=\"...\"` or remove `v-if=\"f\"` on `Test.vue` then the class `test` will set..\r\n\r\nIs it that I lost something to know in using `<slot>`?\r\n\r\nThanks.\r\n\r\n### What is expected?\r\nNo lost style.\r\n\r\n### What is actually happening?\r\nNo Style set on the first tag.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10760","RelatedDescription":"Closed issue \"<slot> will lost the first scoped style when the tags has a selector with v-if\" (#10760)"},{"Id":"512300603","IsPullRequest":false,"CreatedAt":"2019-10-25T04:48:04","Actor":"HuberTRoy","Number":"10759","RawContent":null,"Title":"<slot> will lost the first scoped style when the tags has a selector with v-if.","State":"closed","Body":"When the parent style is scoped the `<slot>` will lost the style of the first tag if other tags on component has a selector with v-if.\r\n\r\nExample:\r\n\r\nMain.vue:\r\n```\r\n<template>\r\n  <Test>\r\n    <div class=\"test\">\r\n      <div class=\"test2\">\r\n      </div>\r\n      <div class=\"test2\">\r\n      </div>\r\n    </div>\r\n  </Test>\r\n</template>\r\n<script>\r\nimport Test from './Test.vue'\r\nexport default {\r\n     components: {\r\n        Test\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.test {\r\n    display: flex;\r\n}\r\n\r\n.test2 {\r\n   width: 200px;\r\n   height: 200px;\r\n   background: black;\r\n}\r\n</style>\r\n```\r\n\r\nTest.vue\r\n```\r\n<template>\r\n  <div>\r\n    <div v-if=\"f\" class=\"_test_style_class_name\">\r\n    </div>\r\n    <slot v-else>\r\n    </slot>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n     data () {\r\n         return {\r\n             f: true\r\n         }     \r\n     },\r\n     mounted () {  this.f = false }\r\n}\r\n</script>\r\n```\r\nOpen it on Chrome, and no style set on class `test` but I have set it on `Main.vue`. \r\nIf I remove `class=\"...\"` or remove `v-if=\"f\"` on `Test.vue` then the class `test` will set..\r\n\r\nIs it that I lost something to know in using `<slot>`?\r\n\r\nThanks.","Url":"https://github.com/vuejs/vue/issues/10759","RelatedDescription":"Closed issue \"<slot> will lost the first scoped style when the tags has a selector with v-if.\" (#10759)"},{"Id":"512270214","IsPullRequest":false,"CreatedAt":"2019-10-25T02:39:15","Actor":"cdoneshot","Number":"10758","RawContent":null,"Title":"\"transitionend\" event not trigger when computer or browser slow","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\nhttps://jsfiddle.net/zwc0e23q/17/\r\n\r\n### Steps to reproduce\r\n- click \"show dialog\"\r\n- click \"close myself\"\r\n- repeat above\r\n\r\n### What is expected?\r\n- transitionend be triggered\r\n- console \"close method be called\" and \"transitionend trigger\" in pair\r\n- \"dialog-container\" be removed \r\n\r\n### What is actually happening?\r\n- transitionend not be triggered sometimes\r\n- console \"close method be called\" only\r\n- \"dialog-container\" not be removed\r\n\r\n---\r\n**This is not a frequent problem. Most of the time it will works fine, but I noticed that it often occurs when my computer or browser is running slowly. I added some consoles to my code, then observed the print results and found that transitionend was not triggered.**\r\n\r\n- works fine\r\n![image](https://user-images.githubusercontent.com/20412044/67537285-45d91180-f70d-11e9-9c9e-b71c902f5882.png)\r\n\r\n- transitionend not triggered\r\n![image](https://user-images.githubusercontent.com/20412044/67541431-8a6ba980-f71b-11e9-80fd-5288db529a63.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/20412044/67541150-7f644980-f71a-11e9-8a9b-9d9500602ec4.png)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10758","RelatedDescription":"Closed issue \"\"transitionend\" event not trigger when computer or browser slow\" (#10758)"},{"Id":"511991563","IsPullRequest":true,"CreatedAt":"2019-10-24T14:42:34","Actor":"bgalek","Number":"10757","RawContent":null,"Title":"fix(build): istanbul@0.4.5 is no longer maintained","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [x] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nDuring build, user sees warning that istanbul@0.4.5 is no longer maintained. This problem is fixed in peer dependecy that I've updated in this project ;)\r\n","Url":"https://github.com/vuejs/vue/pull/10757","RelatedDescription":"Open PR \"fix(build): istanbul@0.4.5 is no longer maintained\" (#10757)"},{"Id":"511760426","IsPullRequest":false,"CreatedAt":"2019-10-24T14:15:23","Actor":"lang1427","Number":"10754","RawContent":null,"Title":"Server-side bundle should have one single entry file. Avoid using CommonsChunkPlugin in the server config.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://gitee.com/weiZhiXiang1219/vueSSR](https://gitee.com/weiZhiXiang1219/vueSSR)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1：download package ： npm install\r\n2： npm run build\r\n\r\n### What is expected?\r\nvue-server-renderer/server-plugin   entryAssets.length!>1\r\n\r\n### What is actually happening?\r\nBuilding for server...(node:7044) UnhandledPromiseRejectionWarning: Error: Server-side bundle should have one single entry file. Avoid using CommonsChunkPlugin\r\nin the server config.\r\n    at C:\\Users\\Kinggz\\Desktop\\vueSSR\\node_modules\\_vue-server-renderer@2.6.10@vue-server-renderer\\server-plugin.js:68:13\r\n    at _next1 (eval at create (C:\\Users\\Kinggz\\Desktop\\vueSSR\\node_modules\\_tapable@1.1.3@tapable\\lib\\HookCodeFactory.js:33:10), <anonymous>:8:1)\r\n    at _err1 (eval at create (C:\\Users\\Kinggz\\Desktop\\vueSSR\\node_modules\\_tapable@1.1.3@tapable\\lib\\HookCodeFactory.js:33:10), <anonymous>:22:1)\r\n    at Promise.all.catch.then (C:\\Users\\Kinggz\\Desktop\\vueSSR\\node_modules\\_copy-webpack-plugin@5.0.4@copy-webpack-plugin\\dist\\index.js:90:9)\r\n(node:7044) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\r\n(node:7044) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\r\n/  Building for server...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10754","RelatedDescription":"Closed issue \"Server-side bundle should have one single entry file. Avoid using CommonsChunkPlugin in the server config.\" (#10754)"},{"Id":"511827216","IsPullRequest":false,"CreatedAt":"2019-10-24T14:11:19","Actor":"imic07","Number":"10756","RawContent":null,"Title":"v-for will change objects key to string type","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fav1bmwL/2/](https://jsfiddle.net/fav1bmwL/2/)\r\n\r\n\r\n### Steps to reproduce\r\n```\r\n  <span v-for=\"(val, key) in { 1: '是', 0: '否' }\" :key=key>\r\n    {{ val }}-typeof val: {{typeof val}} -typeof key: {{typeof key}}<br>\r\n  </span>\r\n\r\n```\r\n\r\n\r\n### What is expected?\r\ntypeof key is number\r\n\r\n### What is actually happening?\r\ntypeof key is string\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10756","RelatedDescription":"Closed issue \"v-for will change objects key to string type\" (#10756)"},{"Id":"511826960","IsPullRequest":false,"CreatedAt":"2019-10-24T14:09:25","Actor":"MatteoGabriele","Number":"10755","RawContent":null,"Title":"Method in HTML called every time v-model changes","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-prt6g](https://codesandbox.io/s/vue-template-prt6g)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- type something in the input field and press the 'Add' button.\r\n- by rendering a new item in the page, a method to decorate the text is called. the method simply interpolates a string.\r\n- once the first item is added, typing in the input field will trigger that function while typing and for all items inside the array. So if there are 5 items in the array, every key stroke will call the function 5 times.\r\n\r\n### What is expected?\r\nI am expecting to call that function only when an item is rendered the first time or if the content of that same item changes\r\n\r\n### What is actually happening?\r\nthe function is called every time I use the input text, after the first item is rendered\r\n\r\n---\r\nI came across this issue and I couldn't explain it to myself, to be honest.\r\nIn the example we are only interpolating a string, but if more complex logic is applied, this could slow down the application quite a lot\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10755","RelatedDescription":"Closed issue \"Method in HTML called every time v-model changes\" (#10755)"},{"Id":"511752784","IsPullRequest":false,"CreatedAt":"2019-10-24T07:11:47","Actor":"lang1427","Number":"10753","RawContent":null,"Title":"Server-side bundle should have one single entry file. Avoid using CommonsChunkPlugin in the server config.","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n\r\n\r\n`\r\nconst VueSSRServerPlugin = require('vue-server-renderer/server-plugin') \r\nconst VueSSRClientPlugin = require('vue-server-renderer/client-plugin') \r\nconst nodeExternals = require('webpack-node-externals')\r\nconst merge = require('lodash.merge')\r\n\r\n// 环境变量  决定入口是客户端还是服务端 （如果WEBPACK_TARGET=node则是服务端否则是客户端）\r\nconst TARGET_NODE = process.env.WEBPACK_TARGET === \"node\"\r\nconst target = TARGET_NODE ? \"server\" : \"client\"\r\n\r\nconst path = require('path')\r\nmodule.exports = {\r\n    css: {\r\n        extract: false\r\n    },\r\n    outputDir: path.join(__dirname, './dist/' + target),\r\n    configureWebpack: () => ({\r\n        entry: path.join(__dirname, `./src/entry-${target}.js`),\r\n        devtool: 'source-map',\r\n        target: TARGET_NODE ? \"node\" : \"web\",\r\n        node: TARGET_NODE ? undefined : false,\r\n        output: {\r\n            libraryTarget: TARGET_NODE ? \"commonjs2\" : undefined\r\n        },\r\n        externals: TARGET_NODE ? nodeExternals({\r\n            whitelist: [/\\.css$/]\r\n        }) : undefined,\r\n        optimization: {\r\n            splitChunks: undefined\r\n        },\r\n        plugins: [TARGET_NODE ? new VueSSRServerPlugin() : new VueSSRClientPlugin()]\r\n    }),\r\n    chainWebpack: config => {\r\n        config.module\r\n            .rule(\"vue\")\r\n            .use(\"vue-loader\")\r\n            .tap(options => {\r\n                merge(options, {\r\n                    optimizeSSR: false\r\n                });\r\n            });\r\n    }\r\n[}`\r\n\r\npackage.json:\r\n \"scripts\": {\r\n    \"build:client\": \"vue-cli-service build\",\r\n    \"build:server\": \"cross-env WEBPACK_TARGET=node vue-cli-service build --mode server\",\r\n    \"build\": \"npm run build:server && npm run build:client\"\r\n  },\r\n","Url":"https://github.com/vuejs/vue/issues/10753","RelatedDescription":"Closed issue \"Server-side bundle should have one single entry file. Avoid using CommonsChunkPlugin in the server config.\" (#10753)"},{"Id":"511721138","IsPullRequest":true,"CreatedAt":"2019-10-24T05:50:26","Actor":"kartikpanchal2000","Number":"10752","RawContent":null,"Title":"Update head","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10752","RelatedDescription":"Closed or merged PR \"Update head\" (#10752)"},{"Id":"511658228","IsPullRequest":false,"CreatedAt":"2019-10-24T02:58:01","Actor":"ajmar","Number":"10751","RawContent":null,"Title":"Vue strips methods from sub classes of Arrays.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mpqx6y8r/2/](https://jsfiddle.net/mpqx6y8r/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the JSFiddle with the browser console open.\r\n\r\nA `created` hook on the Vue component will attempt to log to the console the return value of `this.Pet.getSpecies()` and `this.WaitingList.frontPerson()`.\r\n\r\nHowever, Vue will fail the second call since this array method (class ExtendArray extends Array) has been stripped during data registration. The same does not happen with plain Objects (class ExtendObject extends Object).\r\n\r\n### What is expected?\r\nConsole output:\r\n\r\n'Pet: Dog',\r\n\r\n'WaitingList: Jack'\r\n\r\n### What is actually happening?\r\nConsole output:\r\n\r\n'Pet: Dog',\r\n\r\n'TypeError: this.WaitingList.frontPerson is not a function'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10751","RelatedDescription":"Closed issue \"Vue strips methods from sub classes of Arrays.\" (#10751)"},{"Id":"511152973","IsPullRequest":false,"CreatedAt":"2019-10-23T14:32:01","Actor":"LANGERGabriel","Number":"10748","RawContent":null,"Title":"Spread operator on Set in template not working properly","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-l3431?fontsize=14](https://codesandbox.io/s/vue-template-l3431?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNo interaction required\r\n\r\n### What is expected?\r\nThe console shows the expected result: Spread operator behaves in the same way for a Set and for an Array. The resulting array contains every element from the set.\r\n\r\n### What is actually happening?\r\nThe array is spread correctly, however the Set is not spread and is the single element in the resulting array.\r\n\r\n---\r\nThe template seams to compile to [].concat(set), which should not work for any traversable.\r\nWorkaround: Use Array.from instead/before spreading\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10748","RelatedDescription":"Closed issue \"Spread operator on Set in template not working properly\" (#10748)"},{"Id":"511270180","IsPullRequest":false,"CreatedAt":"2019-10-23T14:20:16","Actor":"kvdmolen","Number":"10749","RawContent":null,"Title":"Using this.$slots.default inside 'computed' will break the reactivity of slots","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/q8az4n02/](https://jsfiddle.net/q8az4n02/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSelf-explaining\r\n\r\n### What is expected?\r\nnewTitle is displayed\r\n\r\n### What is actually happening?\r\ninitTitle is displayed\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10749","RelatedDescription":"Closed issue \"Using this.$slots.default inside 'computed' will break the reactivity of slots\" (#10749)"},{"Id":"511353446","IsPullRequest":true,"CreatedAt":"2019-10-23T14:14:50","Actor":"vue-bot","Number":"10750","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"open","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10750","RelatedDescription":"Open PR \"[automated] Patreon sponsors update\" (#10750)"},{"Id":"511045800","IsPullRequest":false,"CreatedAt":"2019-10-23T03:25:18","Actor":"cutPicturesMan","Number":"10747","RawContent":null,"Title":"remove useless if condition judgement to the function markStatic","State":"closed","Body":"### What problem does this feature solve?\r\nThe if condition judgement in [src/compiler/optimizer.js#L62](https://github.com/vuejs/vue/blob/d7d8ff06b70cf1a2345e3839c503fdb08d75ba49/src/compiler/optimizer.js#L62) is useless.\r\n\r\nAs we know, the ASTNode which use `v-if` directive will always been marked `node.static = false` because of the function [isStatic](https://github.com/vuejs/vue/blob/d7d8ff06b70cf1a2345e3839c503fdb08d75ba49/src/compiler/optimizer.js#L109).It‘s unnecessary to remark `v-if` ASTNode.static false again.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nremove L62~L64 code in optimizer.js\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10747","RelatedDescription":"Closed issue \"remove useless if condition judgement to the function markStatic\" (#10747)"},{"Id":"510782781","IsPullRequest":false,"CreatedAt":"2019-10-22T16:53:39","Actor":"jonathanbrenman","Number":"10746","RawContent":null,"Title":"v-on:click not working when v-if  state is false at component loading","State":"closed","Body":"Hi!\r\nI guess I have found a potencial bug.\r\n\r\nWhen you have an html element with tag v-if and in the same element you have v-on:click if the first state for the v-if is false when component rendering or loaded then the v-on:click do not work.\r\n\r\nI guess that it is because the event listener is not loaded until the html element exist (like in jquery).\r\n_*Note that if you change the v-if with v-show it is work and also if the first state for the v-if is true!_\r\n\r\n**Example**\r\n`<v-icon\r\n                  class=\"btn-action\"\r\n                  v-if=\"editable[1].name\"\r\n                  v-on:click=\"resetSelected(1)\"\r\n                >mdi-close-circle-outline</v-icon>`","Url":"https://github.com/vuejs/vue/issues/10746","RelatedDescription":"Closed issue \"v-on:click not working when v-if  state is false at component loading\" (#10746)"},{"Id":"510685652","IsPullRequest":false,"CreatedAt":"2019-10-22T14:13:47","Actor":"nicolas15000","Number":"10745","RawContent":null,"Title":"unable to add a module (No WebPack)","State":"closed","Body":"Hello, \r\n\r\nI'm using a basical Vue Routing \r\n\r\n```\r\nconst routes = [\r\n     { path: \"/home\", component: Home }\r\n];\r\nconst router = new VueRouter({\r\n  routes // short for `routes: routes`\r\n});\r\n\r\nconst app = new Vue({\r\n  router\r\n}).$mount(\"#app\");\r\n```\r\n\r\nNow, I'm adding the library inside of index.html \r\n```\r\n<script src=\"https://cdn.jsdelivr.net/npm/apexcharts\" type=\"module\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/vue-apexcharts\" type=\"module\"></script>\r\n```\r\n\r\nThis is one my component , using literals  \r\n\r\n```\r\nconst Home = {\r\n  data: function() {\r\n    return {\r\n      options: {\r\n        chart: {\r\n          id: 'vuechart-example'\r\n        },\r\n        xaxis: {\r\n          categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]\r\n        }\r\n      },\r\n      series: [{\r\n        name: 'series-1',\r\n        data: [30, 40, 45, 50, 49, 60, 70, 91]\r\n      }]\r\n    }\r\n  },\r\n  template:\r\n    '<div><apexchart width=\"500\" type=\"bar\" :options=\"options\" :series=\"series\"></apexchart></div>'\r\n};\r\n```\r\n\r\nand this is the error \r\n`[Vue warn]: Unknown custom element: <apexchart> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option`\r\n\r\nMy question is : how can I import this module, without webpack, and using the vue 2 router ? I can't use 'IMPORT', it is not working, **is there any way to mention the module name inside of the vue instantiation new Vue** ?","Url":"https://github.com/vuejs/vue/issues/10745","RelatedDescription":"Closed issue \"unable to add a module (No WebPack)\" (#10745)"},{"Id":"510579108","IsPullRequest":false,"CreatedAt":"2019-10-22T10:58:55","Actor":"sanpon","Number":"10744","RawContent":null,"Title":"自定义组件添加自定义局部指令 ","State":"closed","Body":"在自定义组件内部定义一个局部指令 提示Failed to resolve directive   是不支持这种方式 还是用法错误 采用全局定义指令的方式不报错 以下是核心代码  谢谢\r\nhtml代码\r\n    `<div id=\"app\"><vu-button v-focus></vu-button></div>`\r\n`<script>\r\nlet VUButton ='<el-button :icon=\"value ? 'el-icon-loading' : 'el-icon-search'\" type=\"primary\" :size=\"size\"><slot></slot></el-button>'\r\nVue.component('vu-button', {\r\n\t\ttemplate: VUButton,\r\n\t\tprops: {\r\n\t\t\tvalue: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n\t\t\tsize: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'small'\r\n\t\t\t}\r\n\t\t},\r\n\t\tdirectives: {\r\n\t\t\tfocus: function (el) {\r\n\t\t\t\tconsole.log(el);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n#new Vue()实例\r\n</script>\r\n`","Url":"https://github.com/vuejs/vue/issues/10744","RelatedDescription":"Closed issue \"自定义组件添加自定义局部指令 \" (#10744)"},{"Id":"510441044","IsPullRequest":true,"CreatedAt":"2019-10-22T05:45:06","Actor":"emensch","Number":"10743","RawContent":null,"Title":"fix(types): Update compiler module types to include optional modifiers","State":"open","Body":"The Vue compiler accepts modules that have any combination of the available properties - none are\r\nrequired. This commit updates the flow and TypeScript definitions for ModuleOptions to accurately\r\nreflect the optional nature of compiler module properties.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [X] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10743","RelatedDescription":"Open PR \"fix(types): Update compiler module types to include optional modifiers\" (#10743)"},{"Id":"510293068","IsPullRequest":false,"CreatedAt":"2019-10-21T21:05:19","Actor":"WisdomSky","Number":"10742","RawContent":null,"Title":"Vue purposely removes vendor prefixes when using style binding","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/80o2ef9w/](https://jsfiddle.net/80o2ef9w/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate an element and add style binding:\r\n\r\n    <div :style=\"{'-webkit-clip-path': 'some values'}\">example</div>\r\n\r\n### What is expected?\r\n    <div style=\"-webkit-clip-path: some values\">example</div>\r\n\r\n### What is actually happening?\r\n    <div style=\"clip-path: some values\">example</div>\r\n\r\n---\r\nIn the docs, it is stated that Vue supposedly automatically adds vendor prefixes to CSS properties if it needs them, but not for `clip-path`. In Safari, the `-webkit-` prefix is required to be specified in order for it to work.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10742","RelatedDescription":"Open issue \"Vue purposely removes vendor prefixes when using style binding\" (#10742)"},{"Id":"509921594","IsPullRequest":false,"CreatedAt":"2019-10-21T14:08:30","Actor":"masx200","Number":"10737","RawContent":null,"Title":"Suggestion for Vue 3.0 : Add the method \"valueOf\", \"toString\", \"Symbol.toPrimitive\" to the \"ref\" type For implicit type conversion to work properly.","State":"closed","Body":"### What problem does this feature solve?\r\nSuggestion for Vue 3.0 : Add the method \"valueOf\", \"toString\", \"Symbol.toPrimitive\" to the \"ref\" type\r\nFor implicit type conversion to work properly.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst num=ref(8)\r\nconst xxx=ref(4)\r\nconst yyy=ref(\"hello\")\r\n\r\nnum+ xxx\r\n//expected  : 12\r\n//[object Object][object Object]\r\n//\r\nnum*xxx\r\n//expected  : 32\r\n//NaN\r\nyyy+xxx\r\n//expected  : \"8hello\"\r\n//[object Object][object Object]\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10737","RelatedDescription":"Closed issue \"Suggestion for Vue 3.0 : Add the method \"valueOf\", \"toString\", \"Symbol.toPrimitive\" to the \"ref\" type For implicit type conversion to work properly.\" (#10737)"},{"Id":"509980299","IsPullRequest":true,"CreatedAt":"2019-10-21T13:56:06","Actor":"xx1124961758","Number":"10741","RawContent":null,"Title":"feat: support symbols as keys in observed objects","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10741","RelatedDescription":"Open PR \"feat: support symbols as keys in observed objects\" (#10741)"},{"Id":"509945853","IsPullRequest":true,"CreatedAt":"2019-10-21T12:59:07","Actor":"trykers","Number":"10740","RawContent":null,"Title":"Vnode $scopedSlot with no prop (like callback)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nBecause use $scopedSlot with callback inside (with no prop)","Url":"https://github.com/vuejs/vue/pull/10740","RelatedDescription":"Open PR \"Vnode $scopedSlot with no prop (like callback)\" (#10740)"},{"Id":"509926710","IsPullRequest":false,"CreatedAt":"2019-10-21T12:21:00","Actor":"ddosakura","Number":"10739","RawContent":null,"Title":"There is no a attribute like react's $$typeof to prevent XSS injection in the vnode of Vue.","State":"open","Body":"### Version\r\n\r\n\r\n### Reproduction link\r\n[https://codepen.io/ddosakura/pen/eYYgYqZ](https://codepen.io/ddosakura/pen/eYYgYqZ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvue 的 vnode 中，没有一个类似 react 的 $$typeof 属性来防止 XSS 注入。\r\n\r\n```js\r\nconst inject = {\r\n  tag: \"div\",\r\n  children: [\r\n    {\r\n      text: \"injecting\"\r\n    }\r\n  ]\r\n}\r\nconst no_inject = \"no_inject\"\r\n\r\nconst InjectTest = () => {\r\n  return <div>\r\n    { inject }\r\n    { no_inject }\r\n  </div>\r\n}\r\n```\r\n\r\n### What is expected?\r\n希望像 React 中一样，在 vnode 中添加类似 $$typeof 的 Symbol 属性来防止 XSS 注入。\r\n\r\n### What is actually happening?\r\n一个伪造的 vnode 对象，会被正常渲染成 dom。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10739","RelatedDescription":"Open issue \"There is no a attribute like react's $$typeof to prevent XSS injection in the vnode of Vue.\" (#10739)"},{"Id":"509925584","IsPullRequest":false,"CreatedAt":"2019-10-21T12:18:49","Actor":"thihy","Number":"10738","RawContent":null,"Title":"generateCodeFrame死循环","State":"closed","Body":"https://github.com/vuejs/vue/blob/7a8de91cd78f523fabe8452652513250871a01c6/src/compiler/codeframe.js#L16\r\n\r\n当`count < end`时，此for循环无法停止。","Url":"https://github.com/vuejs/vue/issues/10738","RelatedDescription":"Closed issue \"generateCodeFrame死循环\" (#10738)"},{"Id":"509921504","IsPullRequest":false,"CreatedAt":"2019-10-21T12:11:05","Actor":"twarogowski-dts","Number":"10736","RawContent":null,"Title":"ue","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/10736","RelatedDescription":"Closed issue \"ue\" (#10736)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"512288680","IsPullRequest":true,"CreatedAt":"2019-10-25T03:57:24","Actor":"iiijarvis","Number":"3010","RawContent":null,"Title":"delete redundant code","State":"closed","Body":"No need to judge again \r\n```js\r\nsearchIndex > -1\r\n```","Url":"https://github.com/vuejs/vue-router/pull/3010","RelatedDescription":"Closed or merged PR \"delete redundant code\" (#3010)"},{"Id":"511766654","IsPullRequest":true,"CreatedAt":"2019-10-24T07:42:23","Actor":"theprojectsomething","Number":"3009","RawContent":null,"Title":"Allow scrollBehavior selectors to match ids with unescaped CSS special characters (feature request #3008)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nAs per the title and the original feature request #3008 this PR means a wider range of selectors are passed to `document.getElementById`, resulting in more straightforward use of `scrollBehavior` with e.g. `to.hash`","Url":"https://github.com/vuejs/vue-router/pull/3009","RelatedDescription":"Open PR \"Allow scrollBehavior selectors to match ids with unescaped CSS special characters (feature request #3008)\" (#3009)"},{"Id":"511747438","IsPullRequest":false,"CreatedAt":"2019-10-24T07:00:06","Actor":"theprojectsomething","Number":"3008","RawContent":null,"Title":"Allow scrollBehavior selectors to match ids with unescaped CSS special characters","State":"open","Body":"### What problem does this feature solve?\r\nCurrently if you pass a hash id with unescaped CSS special characters `/[!\"#$%&'()*+,\\-./:;<=>?@[\\\\]^{|}~]/` to a scrollBehavior selector, execution will fail: \r\n```\r\n'XXX' is not a valid selector\r\n```\r\nBecause of this url-styled hashes (e.g. `\"#one/two\"` or `\"#main/secondary\"`), both valid ids in HTML5, cannot be passed directly from the `to.hash` or `from.hash` parameters.\r\nThis is because behind the scenes `document.querySelector`, which relies on CSS character compliance, is used in all but a very small number of circumstances (i.e. `/^#\\d/`). This feature proposes broadening the use case for `document.getElementById` to all selectors that have the appearance of an id, specifically ungrouped selectors starting with a hash (i.e. `/^#[^, ]+$/`)\r\n\r\n### What does the proposed API look like?\r\nAPI doesn't change, except the following would work:\r\n```\r\nscrollBehavior(to, from, savedPosition) {\r\n  return {\r\n    selector: to.hash,\r\n  }\r\n}\r\n// where:\r\nwindow.location = '/one/two#three/four';\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3008","RelatedDescription":"Open issue \"Allow scrollBehavior selectors to match ids with unescaped CSS special characters\" (#3008)"},{"Id":"510688904","IsPullRequest":false,"CreatedAt":"2019-10-23T15:09:53","Actor":"ksurakka","Number":"3006","RawContent":null,"Title":"Should history.state object be extended rather than overridden?  ","State":"closed","Body":"### What problem does this feature solve?\r\nIt makes it possible for other libraries to store and use information from history.state objects as they would not been overridden by vue-router.\r\n\r\nI encountered this when I was trying to build a bookmarking feature. I was able to use keys provided by vue-router for this, but I was just thinking that overriding may cause hard-to-find problems in some environments and also because this overriding could be easy to replace by extending.\r\n\r\nI mean these two lines in the codebase:\r\nhttps://github.com/vuejs/vue-router/blob/638278b334199f17e052a54a0837c97624940c0c/src/util/push-state.js#L31\r\nhttps://github.com/vuejs/vue-router/blob/638278b334199f17e052a54a0837c97624940c0c/src/util/push-state.js#L33\r\n\r\nUsing e.g.:\r\n`history.replaceState( {...history.state, ... { key: getStateKey() }}, '', url)`\r\n\r\ncould cause less harm. Of course the key attribute would be still overridden. \r\n\r\n### What does the proposed API look like?\r\nThere are no API changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3006","RelatedDescription":"Closed issue \"Should history.state object be extended rather than overridden?  \" (#3006)"},{"Id":"510816464","IsPullRequest":false,"CreatedAt":"2019-10-23T02:57:32","Actor":"webcoderkz","Number":"3007","RawContent":null,"Title":"Vue router's link active class naming convention (BEM)","State":"closed","Body":"### What problem does this feature solve?\r\nRight now, we can override a class name for an active router link menu, but it doesn't solve a problem, if we have, for example, 2 different navbar's across our web application. I am using BEM (https://en.bem.info/methodology/), so let's say if i override an active class name to \"navbar__link_active\" in the first navbar (parent is \"navbar\" class), then i would get the same class name in my 2nd navbar, though i have a different parent class on it \"footer-menu\", so it should have \"footer-menu__link_active\" class ideally.\r\n\r\ncode example:\r\n\r\n```\r\n// i overrided an active class to \"navbar__link_active\"\r\n<ul class=\"navbar\">\r\n  <router-link class=\"navbar__link navbar__link_active\">Menu 1 is active</router-link>\r\n  <router-link class=\"navbar__link\">Menu 2</router-link>\r\n  <router-link class=\"navbar__link\">Menu 3</router-link>\r\n</ul>\r\n\r\n// 2nd navbar\r\n<ul class=\"footer-navbar\">\r\n  <router-link class=\"footer-navbar navbar__link_active\">Menu 1 is active</router-link>\r\n  <router-link class=\"footer-navbar\">Menu 2</router-link>\r\n  <router-link class=\"footer-navbar\">Menu 3</router-link>\r\n</ul>\r\n// notice here, an active class would be the same, as for the 1st navbar, that's not what i wanted, instead it should be \"footer-navbar__link_active\"\r\n```\r\n\r\n### What does the proposed API look like?\r\nThere should be a setting in a router instance config, to set an active class for specific menus or something like that.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3007","RelatedDescription":"Closed issue \"Vue router's link active class naming convention (BEM)\" (#3007)"},{"Id":"509746596","IsPullRequest":false,"CreatedAt":"2019-10-21T13:55:43","Actor":"jeff-hykin","Number":"3003","RawContent":null,"Title":"Button as router-link (please see details)","State":"closed","Body":"## What is the *initial* issue?\r\n\r\nUsing a button from a library, for example\r\n```\r\n<ui-button color=\"primary\" style=\"text\" :text=\"page.name\" />\r\n```\r\nAnd making it behave as a router-link.\r\n\r\n## Solution 1: Why not use the **`tag`** property?\r\nexample:  `<router-link tag='ui-button' />`\r\n\r\nThis is the first solution many seem to reach, however the `color=\"primary\"` property needs to be passed to the ui-button (otherwise it is invisible in my use-case). So, the question becomes: how do I pass props to the router-link button? There does not currently seem to be a direct way to do this.\r\n\r\n## Solution 2: Why not just **Wrap** the Button in a router-link?\r\nexample:\r\n```\r\n<router-link tag='div' >\r\n    <ui-button color=\"primary\" />\r\n</router-link>\r\n```\r\nThis has a few drawbacks. When using a button from a library, the button can have margins or may change css-properties such as `align-self: flex-start`. When the button is wrapped, this can obviously cause problems and makes the library not behave as intended: clicking the margin of a button should not activate the button. In addition to that, the default router-link tag is the anchor tag, which means the user must go learn about the `tag` property and change it, lest they want all of their buttons to have underlined text. This is not an ideal programmer experience.\r\n\r\n## Solution 3: Why not use **$router** ?\r\nexample: `<ui-button @click=\"()=>$router.push('about')\" />`\r\n\r\nThis does not behave the same as an href or router-link. For example, router-links can be opened in a new tab by pressing CMD/CTRL   CLICK, however that behavior doesn't happen on an `@click` like the one above. This is generally a tell-tale sign of a poorly coded SPA site and is not an ideal user experience. However, making it an ideal user experience requires a non-ideal developer experience.\r\n\r\n## Solution 4: Why not create a **custom component** wrapper?\r\nexample: `<router-link tag='custom-button'>`\r\n\r\nThis would work, except for when the button needs the page name or other parent-dependent data to be passed as an attribute/property. Even if this did work, the bulkiness of this solution is problematic. Making a component redirect is incredibly basic functionality. Requiring an the creation of a wrapper component, registering it, and then attaching it to the router-link is a disproportional amount of work for such a straightforward goal.\r\n\r\n## Solution 5: Why not use href?\r\nexample: `<ui-button href='page-route' />`\r\n\r\nThis circumvents the process, which makes page-transition animations and other aspects fail.\r\n\r\n## Solution 6: Why not use the **slots API**?\r\n\r\nexample:\r\n```\r\n<router-link to=\"/about\" v-slot=\"{ href, route, navigate}\">\r\n    <ui-button :href=\"href\" @click=\"navigate\" color=\"primary\" style=\"text\" :text=\"route.name\" />\r\n</router-link>\r\n```\r\nThis is now my current solution, and is likely the best solution. However, the documentation describes the slots API as  \"advanced\", \"low-level customization\", that is \"primarily for library authors\".  Requiring devs to dive all the way into the most advanced features just for a button click is not a good experience. The slots API is very extensive, so if this was advertised as the default method of creating router-links then this likely wouldn't be as much of an issue.\r\n\r\n## What is the *final* issue?\r\nThis is a common task, with 5 separate unintuitive ways to poorly accomplish it, an one relatively hidden advanced but good solution. Ideally there would be one obvious standardized ideal way. As a developer, I feel like I am required to become Vue-Router expert just to make a button redirect to a new page. This is very discouraging for anyone trying to adopt the framework. \r\n\r\n#### Reference\r\nThere is a question [here](https://stackoverflow.com/questions/45638239/enclosing-a-router-link-tag-in-a-button-in-vuejs) that provides evidence of many of the challenges people have with this.\r\n\r\n\r\n# What does the proposed API look  like?\r\n### Overview\r\n\r\nThe ideal solution would be to create a universal `v-href` and `v-route` property for all components similar to the way Vue handles `@click` on existing components. \r\n<br>For example `<ui-button v-href='page.location' />`.\r\nThis is consistent with Vue's goal of keeping the API small and intuitively close to the Javascript/HTML counterparts that developers are already familiar with.\r\n\r\n### Context\r\nThis will likely require Vue itself (and not just Vue-Router) to change. This would be designed as a full replacement of `router-link` component, with the intention of eventually deprecating router-link.\r\n\r\n### Details\r\nThe API for the `v-href` property would be identical to the current router-link \"`to`\" property. All additional prop functionality of `router-link` would be handled through an object on the `v-route` property. This would behave identically to how a router-link would behave, if the router-link were given both a `tag` property and (somehow) was able to pass properties/attributes to that tag.\r\n\r\nFurther implementation details will need to be discussed to ensure the intended behavior is fully defined.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3003","RelatedDescription":"Closed issue \"Button as router-link (please see details)\" (#3003)"},{"Id":"509894350","IsPullRequest":false,"CreatedAt":"2019-10-21T11:12:36","Actor":"floydback","Number":"3005","RawContent":null,"Title":"$router.push not emit router.beforeEach","State":"closed","Body":"I find out that \r\n`$router.push({ name: routName }) `\r\ndoesn't emit instructions inside my router.beforeEach\r\n```\r\nrouter.beforeEach((to, from, next) => { \r\n  console.log('catch from beforeEach') \r\n})\r\n```\r\n\r\nWhen I use **<router-link :to=\"path\">About</router-link>** I can see in my console log _catch from beforeEach_ but when I use **$router.push(...)**  there is no logs in console\r\n\r\nIs it normal behavior or may be I do something wrong?","Url":"https://github.com/vuejs/vue-router/issues/3005","RelatedDescription":"Closed issue \"$router.push not emit router.beforeEach\" (#3005)"},{"Id":"509826373","IsPullRequest":false,"CreatedAt":"2019-10-21T08:58:44","Actor":"Bee777","Number":"3004","RawContent":null,"Title":"import as Async component way with Vue.extend beforeRouteLeave throw error parentVal.concat is not a function","State":"open","Body":"### Version\r\n3.0.3, also 3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-1148z](https://codesandbox.io/s/vue-template-1148z)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTo see the error:\r\n\r\n1. Enter a page for the target route, not by $router.push but manually enter the url target and press enter on  keyboard\r\n2. See error on browser console.\r\n\r\n\r\n\r\n### What is expected?\r\nGet into the page as usually without the error.\r\n\r\n### What is actually happening?\r\nWhen entered the page got the error:\r\n\r\n vue-router.esm.js?8c4f:2079 TypeError: parentVal.concat is not a function\r\n    at mergeHook (vue.runtime.esm.js?2b0e:1272)\r\n    at mergeField (vue.runtime.esm.js?2b0e:1552)\r\n    at mergeOptions (vue.runtime.esm.js?2b0e:1543)\r\n    at Function.Vue.extend (vue.runtime.esm.js?2b0e:5153)\r\n\r\n---\r\nTo make its work 3 ways:\r\n1. import as a normal not async way.\r\n2. combine import as a normal and import as async way.\r\n3. just remove the beforeRouteLeave.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3004","RelatedDescription":"Open issue \"import as Async component way with Vue.extend beforeRouteLeave throw error parentVal.concat is not a function\" (#3004)"},{"Id":"509278022","IsPullRequest":true,"CreatedAt":"2019-10-18T19:48:06","Actor":"BARNZ","Number":"3002","RawContent":null,"Title":"docs: Add missing favicon (fix #3001)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nHave copied the icons and setup straight from vuex docs for consistency.","Url":"https://github.com/vuejs/vue-router/pull/3002","RelatedDescription":"Open PR \"docs: Add missing favicon (fix #3001)\" (#3002)"},{"Id":"509262516","IsPullRequest":false,"CreatedAt":"2019-10-18T19:11:26","Actor":"BARNZ","Number":"3001","RawContent":null,"Title":"Add vue-router docs favicon?","State":"open","Body":"### What problem does this feature solve?\r\nI notice the vue-router docs does not have any favicon. Can one be added?\r\n\r\n### What does the proposed API look like?\r\nfavicon.ico\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nJust helps to identify it when users have the tab pinned like me:\r\n\r\n![image](https://user-images.githubusercontent.com/2202345/67121366-d2845b00-f247-11e9-8aa1-2504c9fc6457.png)","Url":"https://github.com/vuejs/vue-router/issues/3001","RelatedDescription":"Open issue \"Add vue-router docs favicon?\" (#3001)"},{"Id":"508576038","IsPullRequest":true,"CreatedAt":"2019-10-17T16:03:37","Actor":"bailnl","Number":"3000","RawContent":null,"Title":"feat: add destroy method, remove event listener on destroy","State":"open","Body":"I have a problem in the process of implementing the micro-frontend. When switching between multiple applications, because the Router instance was not destroyed, the event listener was not removed. \r\n\r\nI consulted the API documentation and did not find the destroy API。\r\n\r\nso~ I implemented One, in the destroy method will remove the existing event listener","Url":"https://github.com/vuejs/vue-router/pull/3000","RelatedDescription":"Open PR \"feat: add destroy method, remove event listener on destroy\" (#3000)"},{"Id":"508516511","IsPullRequest":true,"CreatedAt":"2019-10-17T15:30:51","Actor":"bailnl","Number":"2999","RawContent":null,"Title":"feat: add destroy method, remove event listener on destroy","State":"closed","Body":"I need to implement a micro-frontend. When I switch between applications, I have a problem and I can't remove the bound event, which prevents multiple instances from being present at the same time. so~, I need manually remove those events","Url":"https://github.com/vuejs/vue-router/pull/2999","RelatedDescription":"Closed or merged PR \"feat: add destroy method, remove event listener on destroy\" (#2999)"},{"Id":"508191961","IsPullRequest":false,"CreatedAt":"2019-10-17T07:03:59","Actor":"hankun8645","Number":"2997","RawContent":null,"Title":"addRoutes后，我换一个账号登录权限不一样了，怎么删除之前添加的的路由？","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n目前是判断权限生成可访问的路由后addRoutes进去。但是退出登录后换一个账号登录，然后又重新生成一次，之后addRoutes。\r\n问题1：控制台会警告提示[vue-router] Duplicate named routes，就是有重复的路由add进去了。\r\n问题2：可能存在，直接输入地址栏跳转到前一账号可访问的路由（目前是在输地址栏后跳转，整个单页应用会重新init一次，根据当前缓存的账号权限重新生成routes，此问题暂时好像不需要解决）\r\n\r\n会不会有方法去删除已经添加的routes？我看过vue-router的文档没有写这个方法。\r\n\r\n### What is expected?\r\n解决问题\r\n\r\n### What is actually happening?\r\n问题没有解决\r\n\r\n---\r\nmatcher方法并不生效\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2997","RelatedDescription":"Closed issue \"addRoutes后，我换一个账号登录权限不一样了，怎么删除之前添加的的路由？\" (#2997)"},{"Id":"508257301","IsPullRequest":false,"CreatedAt":"2019-10-17T07:02:57","Actor":"de-don","Number":"2998","RawContent":null,"Title":"Router-link by name \":to-name\"","State":"closed","Body":"### What problem does this feature solve?\r\nIt would be convenient to have a shortcode for routing by name of the route. This will save the user from constantly passing an object with only one \"name\" field\r\n\r\n### What does the proposed API look like?\r\nI propose to create a shortcut:\r\n```vue\r\n<router-link to-name=\"home\"> Home page </router-link>\r\n```\r\nthat will be equal to\r\n```vue\r\n<router-link :to=\"{name: 'home'}\"> Home page </router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2998","RelatedDescription":"Closed issue \"Router-link by name \":to-name\"\" (#2998)"},{"Id":"508191418","IsPullRequest":false,"CreatedAt":"2019-10-17T02:16:19","Actor":"hankun8645","Number":"2996","RawContent":null,"Title":"console warnin：Duplicate named routes definition","State":"closed","Body":"matcher方法重置路由 在退出或者登录之前 并不生效，有没好的办法啊","Url":"https://github.com/vuejs/vue-router/issues/2996","RelatedDescription":"Closed issue \"console warnin：Duplicate named routes definition\" (#2996)"},{"Id":"507192972","IsPullRequest":false,"CreatedAt":"2019-10-15T11:50:24","Actor":"webigorkiev","Number":"2968","RawContent":null,"Title":"Invalid scroll position when using nested routes","State":"closed","Body":"When a click occurs on the router link in the nested route, savedPosition in the history is erroneous. When you push forward or backward, everything is fine. Problem when you click on the link.","Url":"https://github.com/vuejs/vue-router/issues/2968","RelatedDescription":"Closed issue \"Invalid scroll position when using nested routes\" (#2968)"},{"Id":"507132901","IsPullRequest":false,"CreatedAt":"2019-10-15T09:49:23","Actor":"hankun8645","Number":"2967","RawContent":null,"Title":"addRoutes后，我换一个账号登录权限不一样了，怎么删除之前添加的的路由","State":"closed","Body":"系统再切换用户时，路由不会动态更新。之前的路由还是保留，所以需要在登出函数中加上location.reload();刷新浏览器。这个有没有其他办法解决一下","Url":"https://github.com/vuejs/vue-router/issues/2967","RelatedDescription":"Closed issue \"addRoutes后，我换一个账号登录权限不一样了，怎么删除之前添加的的路由\" (#2967)"},{"Id":"506145269","IsPullRequest":false,"CreatedAt":"2019-10-15T07:55:35","Actor":"alreadytaken1990","Number":"2965","RawContent":null,"Title":"Add a switch for open/close 'hashchange' and 'statepop' event","State":"closed","Body":"### What problem does this feature solve?\r\nwe want anlysis user behivour PV/UV out of vue project, like a static js by add event listener\r\n\r\n### What does the proposed API look like?\r\nrouter = {\r\n    mode: 'history'\r\n    routes: [],\r\n    openEvents: ['statpop','hashchange']\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2965","RelatedDescription":"Closed issue \"Add a switch for open/close 'hashchange' and 'statepop' event\" (#2965)"},{"Id":"506730562","IsPullRequest":false,"CreatedAt":"2019-10-14T15:59:24","Actor":"gkatsanos","Number":"2966","RawContent":null,"Title":"How to handle multiple dynamic nested routes?","State":"closed","Body":"### What problem does this feature solve?\r\nHaving something like /properties/:id/:tab and redirecting all /properties/:id to a default :tab\r\n\r\nExample:\r\n```js\r\n  { path: '/real-properties/:id', redirect: '/real-properties/:id/gateways-table', name: 'real-property' },\r\n  { path: '/real-properties/:id/:activeTab?', component: RealProperty, name: 'real-property-tab' },\r\n```\r\nthe above doesn't work correctly : routes that match `/real-properties/:id/:activeTab` don't redirect to an other :id .. .\r\n### What does the proposed API look like?\r\nHaving something like /properties/:id/:tab and redirecting all /properties/:id to a default :tab\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2966","RelatedDescription":"Closed issue \"How to handle multiple dynamic nested routes?\" (#2966)"},{"Id":"506124149","IsPullRequest":false,"CreatedAt":"2019-10-12T09:46:13","Actor":"yutaolian","Number":"2964","RawContent":null,"Title":"router like tree node,visit leaf node just get it's parent node component","State":"closed","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen visit http://xxx/test/test2/test21\r\ni just get test2 component.\r\nrealiy i want get test21 component\r\nwhy?\r\ni need add a Empty page wirte router-view label\r\n\r\nthis is unfriendly when id create menu\r\n\r\n### What is expected?\r\nwhen i visit leaf node ,get leaf node component\r\n\r\n### What is actually happening?\r\nwhen i visit leaf node ,get leaf parent node component\r\n\r\n---\r\nrouter like this \r\n\r\nexport const tempRoutes1 = [{\r\npath: '/test',\r\ncomponent: Layout,\r\nname: 'test',\r\nmeta: {\r\ntitle: '测试菜单',\r\nicon: 'component'\r\n},\r\nchildren: [\r\n{\r\npath: 'test1',\r\ncomponent: () => import('@/views/test/test1'),\r\nname: 'test1',\r\nmeta: {title: '测试菜单1', icon: 'guide', noCache: true}\r\n},\r\n{\r\npath: 'test2',\r\ncomponent: () => import('@/views/test/test2'),\r\nname: 'test2',\r\nmeta: {title: '测试菜单2', icon: 'guide', noCache: true},\r\nchildren: [\r\n{\r\npath: 'test21',\r\ncomponent: () => import('@/views/test/test2/test21'),\r\nname: 'test21',\r\nmeta: {title: '测试菜单21', icon: 'guide', noCache: true},\r\nchildren: [\r\n{\r\npath: 'test211',\r\ncomponent: () => import('@/views/test/test2/test21/test211'),\r\nname: 'test211',\r\nmeta: {title: '测试菜单211', icon: 'guide', noCache: true}\r\n}\r\n]\r\n},\r\n{\r\npath: 'test22',\r\ncomponent: () => import('@/views/test/test2/test22'),\r\nname: 'test22',\r\nmeta: {title: '测试菜单22', icon: 'guide', noCache: true},\r\n}\r\n]\r\n}\r\n]\r\n}\r\n]\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2964","RelatedDescription":"Closed issue \"router like tree node,visit leaf node just get it's parent node component\" (#2964)"},{"Id":"505845785","IsPullRequest":false,"CreatedAt":"2019-10-11T13:33:03","Actor":"dominik-bln","Number":"2963","RawContent":null,"Title":"Make `NavigationDuplicated` a no-op for `push` and `replace`","State":"closed","Body":"### What problem does this feature solve?\r\nSince a recent change every call to `push` or `replace` that is handed the same path as is currently active is rejecting with a `NavigationDuplicated` error and clients that don't care about this duplication need to attach a no-op `catch` clause to all calls. I am aware that there was already a discussion on this topic in #2872 and can understand the viewpoints expressed by the maintainers there. However I'd still like to ask to reconsider this change and not reject for duplicated navigations.\r\n\r\nThe main arguments I would put into consideration against treating `NavigationDuplicated` as an error are:\r\n\r\n- Not rejecting is more consistent with how `<a>` tags and `<router-link>` are working, i. e. I'd argue it is the API that is least surprising to users of `vue-router` because it is how browsers usually work.\r\n- A client can already find out if a duplication is happening by looking at the current route and the push target if this functionality is desired. While this might be slightly more complicated for that use-case,  the changed API puts a burden on all clients that don't care about the duplication, which is IMHO the more common case.\r\n- It essentially seems not possible anymore to call `push` without an attached `catch` because otherwise we might get irrelevant error logs, i. e. the API is now always (albeit minimally) more complex.\r\n- Introducing the rejection was effectively a breaking change of the API for a lot of clients. The observable behaviour of pushing the same navigation twice was a no-op before and now it isn't anymore.\r\n\r\n### What does the proposed API look like?\r\nA duplicated navigation is a \"no-op\" or warning log in vue-router itself and doesn't require clients to handle this in any way.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2963","RelatedDescription":"Closed issue \"Make `NavigationDuplicated` a no-op for `push` and `replace`\" (#2963)"},{"Id":"505537270","IsPullRequest":true,"CreatedAt":"2019-10-10T22:11:38","Actor":"AndrusGerman","Number":"2962","RawContent":null,"Title":"DOCS: example is added with a server written in Go (history-mode)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n#### Reason for the proposal:\r\nBecause different servers already support **golang**. I think it's a good idea to add golang as an example.\r\n\r\n#### why gorilla/mux:\r\nSince it complies with the net / http standards of golang. It has no conflicts with the standard library\r\n> The code (**Golang**) has been verified and works correctly.\r\n\r\n#### What exactly did you modify?\r\nThese changes only include modifications to the **'history-mode.md**' files. Adding the example of a server in **Go**\r\n\r\n#### Did you implement the example in all languages?\r\nYes\r\n\r\n#### Notes\r\n> I previously created a **pull request #2961**, but the implementation was not complete and **created** a **new pull request**.\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/pull/2962","RelatedDescription":"Open PR \"DOCS: example is added with a server written in Go (history-mode)\" (#2962)"},{"Id":"505397720","IsPullRequest":true,"CreatedAt":"2019-10-10T21:26:04","Actor":"AndrusGerman","Number":"2961","RawContent":null,"Title":"DOCS: An example with the server written in golang is added (essentials/history-mode)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n#### Reason for the proposal:\r\nBecause different servers already support **golang**. I think it's a good idea to add golang as an example.\r\n\r\n#### why gorilla/mux:\r\nSince it complies with the net / http standards of golang. It has no conflicts with the standard library\r\n> The code has been verified and works correctly\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/pull/2961","RelatedDescription":"Closed or merged PR \"DOCS: An example with the server written in golang is added (essentials/history-mode)\" (#2961)"},{"Id":"504581658","IsPullRequest":true,"CreatedAt":"2019-10-09T11:14:21","Actor":"Boycce","Number":"2960","RawContent":null,"Title":"feat(history): allow same route navigation","State":"open","Body":"To get the component to build a fresh instance you need to add a key attribute i.e `<router-view :key=\"$route.id\"></router-view>`. Regardless the vue-router hooks still fire when reloading.\r\n\r\nIssue: #974 \r\nRelated: #2957 #2430 \r\n","Url":"https://github.com/vuejs/vue-router/pull/2960","RelatedDescription":"Open PR \"feat(history): allow same route navigation\" (#2960)"},{"Id":"503947368","IsPullRequest":false,"CreatedAt":"2019-10-08T10:09:30","Actor":"fayt81","Number":"2959","RawContent":null,"Title":"this.$route.query and fullPath not working in abstract mode","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-0vm7k](https://codesandbox.io/embed/vue-template-0vm7k)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith vue-router set in abstract mode, when the main App is created, call console.log(this.$route.query) and console.log(this.$route.fullPath), either before or after router.replace('/').\r\n\r\n### What is expected?\r\nthis.$route.query should be an object with the GET values\r\nthis.$route.fullPath should display the full route path in the URL\r\n\r\n### What is actually happening?\r\nregardless of what you write in the URL\r\nthis.$route.query is an empty object\r\nthis.$route.fullPath is always '/' \r\n\r\n---\r\nIf you set vue-router in history mode, this.$route.query and fullPath provide the expected value (of course before router.replace('/')).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2959","RelatedDescription":"Closed issue \"this.$route.query and fullPath not working in abstract mode\" (#2959)"},{"Id":"503859884","IsPullRequest":false,"CreatedAt":"2019-10-08T06:44:26","Actor":"valonY","Number":"2958","RawContent":null,"Title":"How can i get router-view in TSX?","State":"closed","Body":"I looked at the source code, but i can not find the 'router-view' component.\r\nIn the install.js i can see the componnet of 'router-view' had registered but not export, so i can not use it as like this ⬇️\r\n  `import { RouterView } from 'vue-router'`\r\nor\r\n  `import { RouterViewCfg } from 'vue-router'\r\n  const RouterView = Vue.component('RouterView', RouterViewCfg)\r\n  `","Url":"https://github.com/vuejs/vue-router/issues/2958","RelatedDescription":"Closed issue \"How can i get router-view in TSX?\" (#2958)"},{"Id":"503683460","IsPullRequest":false,"CreatedAt":"2019-10-07T21:06:39","Actor":"Boycce","Number":"2957","RawContent":null,"Title":"Allow reloading of the current route when clicked","State":"closed","Body":"### What problem does this feature solve?\r\nI think it's important for `vue-router` to try mimic native browser for such as when dealing with links being clicked.  Adding an option to allow the current route being reloaded when clicked would allow any API requests to be re-fetched that located under the navigational guards (beforeEach, beforeRouteEnter, etc)\r\n\r\n### What does the proposed API look like?\r\nMaybe include a router instance option to allow for this behaviour\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2957","RelatedDescription":"Closed issue \"Allow reloading of the current route when clicked\" (#2957)"},{"Id":"503374613","IsPullRequest":false,"CreatedAt":"2019-10-07T12:43:55","Actor":"afwn90cj93201nixr2e1re","Number":"2956","RawContent":null,"Title":"onError not called on next false","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/history/base.js#L107\r\nnot called on return false, should be called, or add global onAbort hook.\r\nAlso npm src, doesn't contain subdirs, there only 4-5 files in root src, nothing else.\r\n\r\n@posva\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2956","RelatedDescription":"Closed issue \"onError not called on next false\" (#2956)"},{"Id":"501913256","IsPullRequest":true,"CreatedAt":"2019-10-04T14:25:28","Actor":"AVGP","Number":"2954","RawContent":null,"Title":"Adds note on subfolders to history mode samples","State":"closed","Body":"fixes #2863\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2954","RelatedDescription":"Closed or merged PR \"Adds note on subfolders to history mode samples\" (#2954)"},{"Id":"502547911","IsPullRequest":true,"CreatedAt":"2019-10-04T10:06:10","Actor":"yooouuri","Number":"2955","RawContent":null,"Title":"Not only string can be passed as a param in Location","State":"open","Body":"When I do the following:\r\n\r\n```\r\nthis.$router.push({ name: 'somepage', params: { someParam: false } });\r\n```\r\n\r\nThe following error occurs:\r\n\r\n![image](https://user-images.githubusercontent.com/12934957/66199491-02a3f980-e69f-11e9-824e-6c42244de5cc.png)\r\n\r\nWhen I console.log `this.$route.params` in my somepage route, the `someParam` variable with `false` as value exists.\r\n\r\nSo update the type to allow more than a string.","Url":"https://github.com/vuejs/vue-router/pull/2955","RelatedDescription":"Open PR \"Not only string can be passed as a param in Location\" (#2955)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"512682715","IsPullRequest":false,"CreatedAt":"2019-10-25T19:30:02","Actor":"sumitkumardey91","Number":"1631","RawContent":null,"Title":"update mutations , with object property , then watch property (vue js) not firing ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1631","RelatedDescription":"Closed issue \"update mutations , with object property , then watch property (vue js) not firing \" (#1631)"},{"Id":"510681706","IsPullRequest":true,"CreatedAt":"2019-10-22T14:07:45","Actor":"jefer590","Number":"1630","RawContent":null,"Title":"Vuex TypeScript Docs","State":"open","Body":"I noticed that Vuex has already a couple of interfaces to support Typed stores but I didn't found any info about this. So this guide that I made for the Vuex docs is pretty much what i've done in my experience. \r\n\r\nFeedback is very welcome 💪 ","Url":"https://github.com/vuejs/vuex/pull/1630","RelatedDescription":"Open PR \"Vuex TypeScript Docs\" (#1630)"},{"Id":"505767150","IsPullRequest":false,"CreatedAt":"2019-10-11T10:20:31","Actor":"RDMStreet","Number":"1629","RawContent":null,"Title":"How to avoid vuex over reactivity?","State":"open","Body":"### What problem does this feature solve?\r\nIf the getter returns an object or an array, this causes a recalculation of the properties that depend on this getter, even if the data in the object that returned the getter did not change. Can I somehow return the result of a previous getter calculation if the data has not really changed?\r\n\r\n### What does the proposed API look like?\r\n`someGetter(state, getters, rootState, rootGetters, oldValue) {\r\n...\r\nif (JSON.stringify(result) === JSON.stringify(oldValue)) return oldValue;\r\nreturn result;\r\n}`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1629","RelatedDescription":"Open issue \"How to avoid vuex over reactivity?\" (#1629)"},{"Id":"490751423","IsPullRequest":false,"CreatedAt":"2019-10-11T01:49:46","Actor":"Abhith","Number":"1615","RawContent":null,"Title":"Docs Website : Add a favicon","State":"closed","Body":"### What problem does this feature solve?\r\nIn case if the user opened so many browser tabs including other websites without a favicon, it's difficult to identify the docs tab from them.\r\n\r\n### What does the proposed API look like?\r\nAdd a favicon.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1615","RelatedDescription":"Closed issue \"Docs Website : Add a favicon\" (#1615)"},{"Id":"505384243","IsPullRequest":true,"CreatedAt":"2019-10-11T01:49:35","Actor":"angeliski","Number":"1628","RawContent":null,"Title":"fix: Add meat info (fixed #1615)","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1628","RelatedDescription":"Closed or merged PR \"fix: Add meat info (fixed #1615)\" (#1628)"},{"Id":"505171778","IsPullRequest":false,"CreatedAt":"2019-10-11T01:44:29","Actor":"iliakut","Number":"1627","RawContent":null,"Title":"The Set object accessor size","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/iliakut/pen/PooPPLm](https://codepen.io/iliakut/pen/PooPPLm)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nlet Vuex see changes in Set object accessor size\r\n\r\n### What is expected?\r\ngetter return size of Set object\r\n\r\n### What is actually happening?\r\ngetter can't return size of Set object\r\n\r\n---\r\nI have a getter in vuex that returns state.setObject.size, but getter does't return actual size;\r\nexample: getter: state => state.setObject.size\r\nI use setObject.add() and setObject.delete() methods to change setObject. \r\nAre there any ways to read setObject.size? Exclude component computed cache: false.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1627","RelatedDescription":"Closed issue \"The Set object accessor size\" (#1627)"},{"Id":"503785817","IsPullRequest":false,"CreatedAt":"2019-10-08T02:21:55","Actor":"1269886839","Number":"1626","RawContent":null,"Title":"vuex0.8.2跟vue1.0.0的问题","State":"closed","Body":"\"vue\": \"^1.0.0\"跟 \"vuex\": \"^0.8.2\"结合的项目在window10 跑没问题。。今天换了电脑 window7 npm install ， npm run 之后就跑不起来了。\r\n报这个错 。Uncaught TypeError: Cannot read property 'bind' of undefined\r\n\r\nonInit | @ | vuex.js?588b:131\r\n| eval | @ | vuex.js?588b:570\r\n| _setupMiddlewares | @ | vuex.js?588b:568\r\n| Store | @ | vuex.js?588b:370\r\n| eval | @ | store.js?a259:11\r\n| (anonymous) | @ | build.js:3259\r\n| __webpack_require__ | @ | build.js:556\r\n| fn | @ | build.js:87\r\n| eval | @ | VM4857:11\r\n| (anonymous) | @ | build.js:3091\r\n| __webpack_require__ | @ | build.js:556\r\n| fn | @ | build.js:87\r\n| eval | @ | App.vue?ee3a:5\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1626","RelatedDescription":"Closed issue \"vuex0.8.2跟vue1.0.0的问题\" (#1626)"},{"Id":"502633738","IsPullRequest":true,"CreatedAt":"2019-10-04T13:21:09","Actor":"fabalint","Number":"1625","RawContent":null,"Title":"action subscribers would receive a call even when the action failed","State":"open","Body":"That cause might be a promise.rejection or js error.\r\n\r\nThis way the action subscribers of the 'after' would not miss the end of the action,\r\nas they would receive the existing 'action' and 'state' parameters, and the additional 'isSuccess' and 'errorResult' values. \r\nThis applies for the then-side of the promise too, but there they would receive the result.\r\n\r\nThe true/false value might be useful for after action handlers, but the result might be too tempting to be used for modification for example, might be that too much info is handled out in this way. The same goes for the success-side of the after subscribers too.\r\n\r\nWhile reviewing mind that: I cannot access github directly (firewalls), so this was a manual insertion of the locally working code. Typos might came along! (: In case there is a problem, tell me and I fix that, or say a thank you for your fix (:","Url":"https://github.com/vuejs/vuex/pull/1625","RelatedDescription":"Open PR \"action subscribers would receive a call even when the action failed\" (#1625)"},{"Id":"502343330","IsPullRequest":false,"CreatedAt":"2019-10-03T23:12:55","Actor":"lwxbr","Number":"1624","RawContent":null,"Title":"Watchers should be a core concept of Vuex","State":"open","Body":"### What problem does this feature solve?\r\nThis will make the flow of vuex, that is already very intuitive, more easier.\r\n\r\n### What does the proposed API look like?\r\nIn the analogy of component vs vuex:\r\n\r\n```\r\ndata => state,\r\nmethods => mutations and actions ,\r\ncomputed properties => getters,\r\nwatchers => watchers\r\n```\r\n\r\nThe users will not have to use store.$watch, they will create watchers in the Vuex.Store and in modules directly.\r\n\r\nThe good news is that it will not destroy any existant flow, will only increase a feature that will help the flow of vuex.\r\n\r\nThis is the model of a module of vuex with watchers:\r\n\r\n```\r\nconst state = {};\r\nconst getters = {};\r\nconst mutations = {};\r\nconst actions = {};\r\nconst watchers = {};\r\n\r\nexport default {\r\n    namespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tmutations,\r\n\tactions,\r\n\twatchers,\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1624","RelatedDescription":"Open issue \"Watchers should be a core concept of Vuex\" (#1624)"},{"Id":"500270519","IsPullRequest":false,"CreatedAt":"2019-10-01T09:50:29","Actor":"Rolanddoda","Number":"1622","RawContent":null,"Title":"Watching vuex getters is causing: [vuex] module namespace not found in mapGetters() error","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-bms46](https://codesandbox.io/s/vue-template-bms46)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust go to the \"Link to minimal reproduction\" and focus on `App.vue` where I have:\r\n\r\n```\r\n  computed: {\r\n    ...mapGetters(\"module\", {\r\n      user: \"person\"\r\n    })\r\n  },\r\n\r\n  watch: {\r\n    user: {\r\n      handler(user) {\r\n        console.log(user);\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n\r\n```\r\n\r\n### What is expected?\r\nHaving the computed and watcher properties should work fine..\r\n\r\n### What is actually happening?\r\nHowever, the watcher seems to cause an issue and the `user` getter becomes undefined and in the console you see the error: \r\n\r\n`[vuex] module namespace not found in mapGetters()`\r\n\r\nIf you remove the user watcher everything works normally.\r\n\r\n---\r\nHow can the watcher affect the mapGetter ???\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1622","RelatedDescription":"Closed issue \"Watching vuex getters is causing: [vuex] module namespace not found in mapGetters() error\" (#1622)"},{"Id":"500721888","IsPullRequest":true,"CreatedAt":"2019-10-01T09:47:29","Actor":"xxLestadxx","Number":"1623","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1623","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1623)"},{"Id":"499225737","IsPullRequest":false,"CreatedAt":"2019-09-27T04:19:31","Actor":"mjmnagy","Number":"1621","RawContent":null,"Title":"Component not updating after mutation","State":"closed","Body":"I have the following component and i cannot figure out why the computed property of `details` is not updating when the `fetch()` method is being called\r\n\r\n\t\t<template>\r\n\t\t  <div>\r\n\t\t\t{{ haveData }} //remains undefined\r\n\t\t  </div>\r\n\t\t</template>\r\n\r\n\t\t<script>\r\n\t\texport default {\r\n\t\t  props: {\r\n\t\t\tgroup: {\r\n\t\t\t  type: Object,\r\n\t\t\t  required: true\r\n\t\t\t},\r\n\t\t  },\r\n\t\t  computed: {\r\n\t\t\tcurrentGroup() {\r\n\t\t\t  return this.$store.getters['user/navbar_menu_app_current_group'](\r\n\t\t\t\tthis.group.id\r\n\t\t\t  )\r\n\t\t\t  \r\n\t\t\t  /*-- which is the following function \r\n\t\t\t\t navbar_menu_app_current_group: state => item => {\r\n\t\t\t\t\treturn state.menu.find(m => {\r\n\t\t\t\t\t  return m.id == item\r\n\t\t\t\t\t})\r\n\t\t\t\t  }\r\n\t\t\t  */\r\n\t\t\t  \r\n\t\t\t  /*-- this function returns an object like so \r\n\t\t\t\t  {\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\tlabel: 'kity cats',\r\n\t\t\t\t  }\r\n\t\t\t\t  ***details --> IS NOT DEFINED. if i add it to the current group as null my problem goes away however this is a previous api call which does not set the \"details\" parameter\r\n\t\t\t  */\r\n\t\t\t},\r\n\t\t\tdetails() {\r\n\t\t\t  let c = this.currentGroup.details\r\n\t\t\t  console.log(c) // returns undefined which makes sense but it should be updated after this.fetch() is called\r\n\t\t\t  return c\r\n\t\t\t},\r\n\t\t\thaveData() {\r\n\t\t\t  return this.details != null\r\n\t\t\t}\r\n\t\t  },\r\n\t\t  methods: {\r\n\t\t\tasync fetch() {\r\n\t\t\t  await this.$store.dispatch(\r\n\t\t\t\t'user/navbar_menu_app_details_get',\r\n\t\t\t\tthis.group.id\r\n\t\t\t  )\r\n\t\t\t  //this is setting the \"details\" part of the state on menu which is referred to in the computed properties above\r\n\t\t\t  //Previous to this there is no state \"this.group.details\"\r\n              //If i add a console log to the mutation the action calls i get what is expected\r\n\t\t\t}\r\n\t\t  },\r\n\t\t  created() {\r\n\t\t\tif (!this.haveData) {\r\n\t\t\t  this.fetch()\r\n\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\t</script>\r\n\r\n\r\nit seems if i change the array listing to include detail it works\r\n\r\n`original`\r\n\r\n        [\r\n\t\t  {\r\n\t\t\t\tid: 1,\r\n\t\t\t\tlabel: 'kity cats',\r\n\t\t  }\r\n         ....\r\n        ]\r\n\r\nto\r\n\r\n\t\t  {\r\n\t\t\t\tid: 1,\r\n\t\t\t\tlabel: 'kity cats',\r\n                details: null\r\n\t\t  }\r\n\r\nI do not get this problem\r\n\r\nThe unfortunate part is that the array is created from a large api call and adding the details seems like unnecessary as it may never be needed\r\n\r\nHow can i get the computed properties to work without adding the `details:null` to the `default` state?\r\n\r\nthanks ","Url":"https://github.com/vuejs/vuex/issues/1621","RelatedDescription":"Closed issue \"Component not updating after mutation\" (#1621)"},{"Id":"499097651","IsPullRequest":false,"CreatedAt":"2019-09-26T20:23:28","Actor":"Brimstedt","Number":"1620","RawContent":null,"Title":"subscribeAction no longer fails when error is thrown","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/4y81kgfs/7/](https://jsfiddle.net/4y81kgfs/7/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSince version 3.1.0 there is a 'fix' which I consider a regression.  \"Errors thrown inside action subscribers no longer cause the entire action to fail.\"\r\n\r\n1) Create an action subscriber\r\n\r\n2) throw an error in the subscriber\r\n\r\n3) --> action is performed regardless of exception\r\n\r\n\r\n### What is expected?\r\nWhen an error is thrown in an action subscriber, I expect the action to be interrupted and the exception to bubble up to the caller.\r\n\r\n### What is actually happening?\r\nThe exception is quietly swallowed.\r\nAlso seems i cannot catch the exception.\r\n\r\n\r\n---\r\nIm not sure you can revert to the old behaviour since other users might be dependent on this silent swallowing (though I fail to see why anyone would like such behaviour :-) ... fail early and never ignore exceptions.)\r\nIf it cant be reverted, it would be nice to be able to interrupt the action flow by some other mechanism.\r\n\r\nI use this as part of validation/permission framework to prevent user in UI to perform actions shes not allowed to do. Of course this is checked in backend also, but user feedback can be given quicker and easier this way and it does not require implementation in every action - only in the subscriber.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1620","RelatedDescription":"Open issue \"subscribeAction no longer fails when error is thrown\" (#1620)"},{"Id":"498616677","IsPullRequest":false,"CreatedAt":"2019-09-26T02:26:15","Actor":"cvhainb","Number":"1619","RawContent":null,"Title":"How to set a nested object","State":"closed","Body":"Hello,\r\n\r\nI want to set an object like this\r\n\r\n```\r\nconst obj = {\r\n    'name': {'en': 'title en', 'de': 'title de'},\r\n};\r\n```\r\nI have posted a full here: [https://forum.vuejs.org/t/how-to-set-vuex-state-with-multi-languages/75041](https://forum.vuejs.org/t/how-to-set-vuex-state-with-multi-languages/75041)\r\n\r\nSorry for bad english.","Url":"https://github.com/vuejs/vuex/issues/1619","RelatedDescription":"Closed issue \"How to set a nested object\" (#1619)"},{"Id":"496208047","IsPullRequest":false,"CreatedAt":"2019-09-20T08:03:15","Actor":"yywc","Number":"1618","RawContent":null,"Title":"The third parameter of dispatch is undefined.","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-4fv3d](https://codesandbox.io/s/vue-template-4fv3d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. go to link;\r\n2. open Console of page in the bottom;\r\n3. see the undefined;\r\n\r\n### What is expected?\r\nIn theory,it should show the code of cb.\r\n\r\n### What is actually happening?\r\nIn fact,it's undefined.\r\n\r\n---\r\nAccording to `Vuex` code, `wrappedActionHandler` function provide two params.One is `payload`,the other is `cb`.\r\n\r\n```js\r\n  // notice the cb\r\n  entry.push(function wrappedActionHandler (payload, cb) {\r\n    let res = handler.call(store, {\r\n      dispatch: local.dispatch,\r\n      commit: local.commit,\r\n      getters: local.getters,\r\n      state: local.state,\r\n      rootGetters: store.getters,\r\n      rootState: store.state\r\n    }, payload, cb) // pass it and do nothing\r\n    if (!isPromise(res)) {\r\n      res = Promise.resolve(res)\r\n    }\r\n    if (store._devtoolHook) {\r\n      return res.catch(err => {\r\n        store._devtoolHook.emit('vuex:error', err)\r\n        throw err\r\n      })\r\n    } else {\r\n      return res\r\n    }\r\n  })\r\n\r\n  // dispatch function only use payload\r\n  dispatch (_type, _payload) {\r\n    // check object-style dispatch\r\n    const {\r\n      type,\r\n      payload\r\n    } = unifyObjectStyle(_type, _payload)\r\n\r\n    const action = { type, payload }\r\n    const entry = this._actions[type]\r\n    // ...\r\n    const result = entry.length > 1\r\n      ? Promise.all(entry.map(handler => handler(payload))) // only payload parameter\r\n      : entry[0](payload)\r\n  }\r\n```\r\nSo I think `cb` parameter is useless and it should be delete from code in order to \r\neliminate misunderstanding.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1618","RelatedDescription":"Open issue \"The third parameter of dispatch is undefined.\" (#1618)"},{"Id":"490394247","IsPullRequest":true,"CreatedAt":"2019-09-19T06:00:40","Actor":"sandofvega","Number":"1613","RawContent":null,"Title":"[docs] Flux link update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1613","RelatedDescription":"Closed or merged PR \"[docs] Flux link update\" (#1613)"},{"Id":"494684457","IsPullRequest":true,"CreatedAt":"2019-09-17T15:09:54","Actor":"rivajunior","Number":"1617","RawContent":null,"Title":"Update mutations.md Object Rest/Spread reference","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1617","RelatedDescription":"Open PR \"Update mutations.md Object Rest/Spread reference\" (#1617)"},{"Id":"493255066","IsPullRequest":false,"CreatedAt":"2019-09-13T15:47:35","Actor":"berniegp","Number":"1616","RawContent":null,"Title":"$router.push() with redirect in route's beforeEnter hook causes uncaught promise rejection","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/asu3qnry/](https://jsfiddle.net/asu3qnry/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTo trigger the uncaught promise rejection, click on \"/home\" and then the button.\r\n\r\n### What is expected?\r\nNo error in console\r\n\r\n### What is actually happening?\r\nConsole reports `Uncaught (in promise) undefined`\r\n\r\n---\r\nUsing a `router-link` instead of the initial `$router.push()` call removes the error.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1616","RelatedDescription":"Closed issue \"$router.push() with redirect in route's beforeEnter hook causes uncaught promise rejection\" (#1616)"},{"Id":"490547764","IsPullRequest":true,"CreatedAt":"2019-09-06T22:33:29","Actor":"Jinjiang","Number":"1614","RawContent":null,"Title":"docs(zh): updated","State":"open","Body":"https://github.com/vuejs/vuex/compare/91f3e69...a5dd20c /ping @justineo\r\n","Url":"https://github.com/vuejs/vuex/pull/1614","RelatedDescription":"Open PR \"docs(zh): updated\" (#1614)"},{"Id":"488913330","IsPullRequest":true,"CreatedAt":"2019-09-04T04:16:04","Actor":"jungor","Number":"1612","RawContent":null,"Title":"docs(zh): fix typo","State":"closed","Body":"fix typo in zh docs of `modules`","Url":"https://github.com/vuejs/vuex/pull/1612","RelatedDescription":"Closed or merged PR \"docs(zh): fix typo\" (#1612)"},{"Id":"486669084","IsPullRequest":true,"CreatedAt":"2019-08-29T00:13:59","Actor":"theneverstill","Number":"1611","RawContent":null,"Title":"docs: Patch preserveState option usage","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1611","RelatedDescription":"Open PR \"docs: Patch preserveState option usage\" (#1611)"},{"Id":"484453250","IsPullRequest":false,"CreatedAt":"2019-08-23T10:19:58","Actor":"zjhILYxxq","Number":"1610","RawContent":null,"Title":"vuex3.1.1版本 unregisterModule方法存在问题","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n### 卸载一个不存在的动态module\r\n源码:\r\n```\r\nunregister (path) {\r\n    const parent = this.get(path.slice(0, -1))\r\n    const key = path[path.length - 1]\r\n    if (!parent.getChild(key).runtime) return\r\n\r\n    parent.removeChild(key)\r\n  }\r\n```\r\n\r\n  如果要 **卸载** 的 **module** 在 **父module** 中不存在， **parent.getChild(key)** 返回 **undefined** ，会抛出异常: **Cannot read property 'runtime' of undefined**。","Url":"https://github.com/vuejs/vuex/issues/1610","RelatedDescription":"Closed issue \"vuex3.1.1版本 unregisterModule方法存在问题\" (#1610)"},{"Id":"480860186","IsPullRequest":true,"CreatedAt":"2019-08-21T12:42:04","Actor":"Alex-Sokolov","Number":"1607","RawContent":null,"Title":"docs: [RU] Example syntax fixes","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1607","RelatedDescription":"Closed or merged PR \"docs: [RU] Example syntax fixes\" (#1607)"},{"Id":"482305835","IsPullRequest":true,"CreatedAt":"2019-08-19T22:51:17","Actor":"faithyang","Number":"1609","RawContent":null,"Title":"replace Array indexof with includes","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1609","RelatedDescription":"Closed or merged PR \"replace Array indexof with includes\" (#1609)"},{"Id":"480976058","IsPullRequest":true,"CreatedAt":"2019-08-15T03:17:48","Actor":"linlinyang","Number":"1608","RawContent":null,"Title":"webpack preset useBuiltIns usage toast promise error","State":"open","Body":"when we use webpack,\r\nand set babel presets property useBuiltIns is 'usage'\r\nthen the polyfill will be loaded when Promise used\r\nso this way has a bug when we webpack,if we use vuex without used Promise,always show the error: vuex requires a Promise polyfill in this browser.\r\n\r\nso I have change the validate Promise way to:\r\n```\r\n      try {\r\n        new Promise(() => {})\r\n      } catch (error) {\r\n        assert(false, `vuex requires a Promise polyfill in this browser.`)\r\n      }\r\n```","Url":"https://github.com/vuejs/vuex/pull/1608","RelatedDescription":"Open PR \"webpack preset useBuiltIns usage toast promise error\" (#1608)"},{"Id":"480736391","IsPullRequest":true,"CreatedAt":"2019-08-14T15:11:52","Actor":"owanhunte","Number":"1606","RawContent":null,"Title":"Minor typo fix for Actions docs page.","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1606","RelatedDescription":"Open PR \"Minor typo fix for Actions docs page.\" (#1606)"},{"Id":"480571064","IsPullRequest":true,"CreatedAt":"2019-08-14T09:19:15","Actor":"SergioCrisostomo","Number":"1605","RawContent":null,"Title":"Add warning when setting state of a non-existent state property name ","State":"open","Body":"This PR add the possibility to be warned in development for the problem described in 1120.\r\nIt adds a unit test for that scenario.\r\n\r\nWhile testing this I found out another unit test that needed adjustment and did that in a separate commit. \r\n\r\nFixes #1120","Url":"https://github.com/vuejs/vuex/pull/1605","RelatedDescription":"Open PR \"Add warning when setting state of a non-existent state property name \" (#1605)"},{"Id":"480455403","IsPullRequest":false,"CreatedAt":"2019-08-14T02:48:46","Actor":"Asyncinfo","Number":"1604","RawContent":null,"Title":"previous data","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1604","RelatedDescription":"Closed issue \"previous data\" (#1604)"},{"Id":"480453939","IsPullRequest":true,"CreatedAt":"2019-08-14T02:41:43","Actor":"anhmv","Number":"1603","RawContent":null,"Title":"refactor zero padding function","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1603","RelatedDescription":"Open PR \"refactor zero padding function\" (#1603)"},{"Id":"480177433","IsPullRequest":true,"CreatedAt":"2019-08-14T01:07:01","Actor":"Alex-Sokolov","Number":"1602","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1602","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1602)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-26T05:30:50.6502415Z","RunDurationInMilliseconds":2061}