{"Data":{"Blog":{"FeedItems":[{"Title":"Visual Challenge Conquered!","PublishedOn":"2019-04-03T19:03:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Visual Challenge Conquered! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/visual-challenge-conquered/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019","PublishedOn":"2019-04-02T16:56:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post What&#8217;s New for Xamarin Developers in Visual Studio 2019 appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-visual-studio-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in April","PublishedOn":"2019-04-01T19:05:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Xamarin and .NET Developer Events in April appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-and-net-developer-events-in-april/","RawContent":null},{"Title":"GlideX For Fast Images on Android","PublishedOn":"2019-03-28T16:01:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post GlideX For Fast Images on Android appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/glidex-fast-images-android/","RawContent":null},{"Title":"Introducing the Xamarin.iOS Interpreter","PublishedOn":"2019-03-26T16:41:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Introducing the Xamarin.iOS Interpreter appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/introducing-xamarin-ios-interpreter/","RawContent":null},{"Title":"Join the Xamarin Visual Challenge","PublishedOn":"2019-03-22T20:00:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past month, we have been running a low-key challenge to flex the new Xamarin.Forms 3.6 feature, Visual with Material Design. For more information about what Visual is and what you can do with...","Href":"https://devblogs.microsoft.com/xamarin/join-the-xamarin-visual-challenge/","RawContent":null},{"Title":"Get Your Apps Ready for Apple’s New Watch Processor Architecture","PublishedOn":"2019-03-20T19:59:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Get Your Apps Ready for Apple&#8217;s New Watch Processor Architecture appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/apple-new-processor-architecture/","RawContent":null},{"Title":"Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More!","PublishedOn":"2019-03-18T18:54:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-essentials-detect-shake-browser-customization/","RawContent":null},{"Title":"Introducing the New Xamarin Customer Showcase","PublishedOn":"2019-03-15T16:53:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Introducing the New Xamarin Customer Showcase appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-customer-showcase/","RawContent":null},{"Title":"A Quick Update on Google Components for iOS and Android","PublishedOn":"2019-03-13T19:12:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post A Quick Update on Google Components for iOS and Android appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/update-google-components-ios-android/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9383052823","Type":"PullRequestEvent","CreatedAt":"2019-04-05T01:18:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2927","RelatedDescription":"Merged pull request \"[build-tools] Increase the emulator disk space.\" (#2927) at xamarin/xamarin-android","RelatedBody":"We have more and more tests running on the emulator\r\nnow. Sometimes we run out of space to run the tests.\r\nThis PR increases the disk space.\r\n\r\nWe also handle a problem with the `CreateAndroidEmulator`\r\nerror processing.  `advmanager` was returning the following\r\nwarning.\r\n\r\n\tWarning: cvc-pattern-valid: Value '' is not facet-valid with respect to pattern '[a-zA-Z0-9_-]+' for type 'idType'.\r\n\t\torg.xml.sax.SAXParseException; lineNumber: 134; columnNumber: 341; cvc-pattern-valid: Value '' is not facet-valid with respect to pattern '[a-zA-Z0-9_-]+' for type 'idType'.\r\n\t\tat com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)\r\n\t\tat com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)\r\n\r\nOnly the first line was being picked up as a warning, the rest\r\nwas being reported as an error. The result was the emulator\r\nnever ran!"},{"Id":"9382534828","Type":"IssuesEvent","CreatedAt":"2019-04-04T22:49:06","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2931","RelatedDescription":"Closed issue \"\"Error inflating class android.support.v7.widget.ActionBarOverlayLayout\" when using the r8.jar version in the d16-0 branch rather than ProGuard\" (#2931) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nAttempt to run the [attached test case](https://github.com/xamarin/xamarin-android/files/3045715/R8AndroidSupport.zip) in either the Debug or Release configuration any Android device or emulator. (I tested on an Android 9.0 Pie (API level 28) Google Pixel 3 as well as an Android 7.1.1 Nougat (API level 25) device.)\r\n\r\n(The test case is the **Android App (Xamarin) > Blank App** template, modified to add `<AndroidLinkTool>r8</AndroidLinkTool>` and to enable linking and disable the shared runtime in the Debug configuration.)\r\n\r\n### Expected Behavior\r\n\r\nIf the *.csproj* is configured with `<AndroidLinkTool>proguard</AndroidLinkTool>` instead, the app launches successfully and displays the text \"Large Text\". This behavior is consistent back to at least Visual Studio 2017 version 15.7.6 (using the older `<AndroidEnableProguard>true</AndroidEnableProguard>` property).\r\n\r\n(For historical reference, the older **Mobile App (Xamarin.Forms) > Master Detail** template that was shipped in Visual Studio 2017 version 15.7.6 used to hit a `NullReferenceException` during app startup when built with Visual Studio 2017 version 15.7.6 and `<AndroidEnableProguard>true</AndroidEnableProguard>` [unless some additional rules were added in a `@(ProguardConfiguration)` item](https://github.com/xamarin/xamarin-android/issues/1646#issuecomment-425479814). But, like the attached test case, the *current* **Mobile App (Xamarin.Forms) > Master-Detail** template that is shipped in Visual Studio 2019 runs successfully when built using Visual Studio 2017 version 15.7.6 and `<AndroidEnableProguard>true</AndroidEnableProguard>`, with no need for an additional `@(ProguardConfiguration)` item.)\r\n\r\n### Actual Behavior\r\n\r\nThe application hits an unhandled exception during launch. Excerpt of the top of the stack trace:\r\n\r\n```\r\nUNHANDLED EXCEPTION:\r\nJava.Lang.Exception: Binary XML file line #17: Binary XML file line #17: Error inflating class android.support.v7.widget.ActionBarOverlayLayout ---> Java.Lang.Exception: Binary XML file line #17: Error inflating class android.support.v7.widget.ActionBarOverlayLayout ---> Java.Lang.ReflectiveOperationException: <init> [class android.content.Context, interface android.util.AttributeSet]\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualVoidMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00089] in <b49e0c493a5e4c5186212e29f6b77d1e>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x0005d] in <b49e0c493a5e4c5186212e29f6b77d1e>:0 \r\n  at Android.App.Activity.SetContentView (System.Int32 layoutResID) [0x00022] in <db7eb011ae5d498ba9f82c91bf3ead2d>:0 \r\n  at Test1.MainActivity.OnCreate (Android.OS.Bundle savedInstanceState) [0x0000e] in <7e409eb71a644608be0a248b58beee09>:0 \r\n  at Android.App.Activity.n_OnCreate_Landroid_os_Bundle_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_savedInstanceState) [0x00011] in <db7eb011ae5d498ba9f82c91bf3ead2d>:0 \r\n  at (wrapper dynamic-method) Android.Runtime.DynamicMethodNameCounter.3(intptr,intptr,intptr)\r\n  --- End of managed Java.Lang.Exception stack trace ---\r\nandroid.view.InflateException: Binary XML file line #17: Binary XML file line #17: Error inflating class android.support.v7.widget.ActionBarOverlayLayout\r\nCaused by: android.view.InflateException: Binary XML file line #17: Error inflating class android.support.v7.widget.ActionBarOverlayLayout\r\nCaused by: java.lang.NoSuchMethodException: <init> [class android.content.Context, interface android.util.AttributeSet]\r\n\tat java.lang.Class.getConstructor0(Class.java:2204)\r\n\tat java.lang.Class.getConstructor(Class.java:1683)\r\n\tat android.view.LayoutInflater.createView(LayoutInflater.java:618)\r\n```\r\n\r\n### Possible Workaround\r\n\r\nFor this simple test scenario, the following steps are sufficient to work around the error during app startup. There might be other scenarios that the current version of *r8.jar* doesn't handle that would require additional custom rules to solve.\r\n\r\n 1. Create a new text file in the app project. I named mine *proguard.cfg* to follow the old habit from when ProGuard was the only available code shrinking option.\r\n 2. Add the following lines to the file:\r\n\r\n    ```txt\r\n    -keep class android.support.v7.widget.** { *; }\r\n    -dontwarn android.support.v7.widget.*\r\n    -keep class android.support.v7.view.** { *; }\r\n    -dontwarn android.support.v7.view.*\r\n    ```\r\n  3. Use **File > Save ... As** to save the file. Click the drop-down menu on the **Save** button to select **Save with Encoding** and click **Yes** to confirm overwriting the existing file.\r\n  4. Select the **US-ASCII - Codepage 20127** encoding and click **OK**.  This step is necessary to remove a byte-order mark that otherwise causes an error when `r8` reads the file.\r\n  5. Set the **View > Properties Window > Build Action** for the new file to **ProguardConfiguration**.\r\n  6. **Build > Clean** the project, and then build and redeploy it.\r\n\r\n### Version Information\r\n\r\nXamarin.Android 9.2.0.5 (d16-0@fa7ba9db04226e63e583e185304593509cc5cda6)\r\n\r\n### Logs\r\n\r\n[adblogcat.txt](https://github.com/xamarin/xamarin-android/files/3045723/adblogcat.txt)"},{"Id":"9382524306","Type":"IssuesEvent","CreatedAt":"2019-04-04T22:46:33","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2931","RelatedDescription":"Opened issue \"\"Error inflating class android.support.v7.widget.ActionBarOverlayLayout\" when using the r8.jar version in the d16-0 branch rather than ProGuard\" (#2931) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nAttempt to run the [attached test case](https://github.com/xamarin/xamarin-android/files/3045715/R8AndroidSupport.zip) in either the Debug or Release configuration any Android device or emulator. (I tested on an Android 9.0 Pie (API level 28) Google Pixel 3 as well as an Android 7.1.1 Nougat (API level 25) device.)\r\n\r\n(The test case is the **Android App (Xamarin) > Blank App** template, modified to add `<AndroidLinkTool>r8</AndroidLinkTool>` and to enable linking and disable the shared runtime in the Debug configuration.)\r\n\r\n### Expected Behavior\r\n\r\nIf the *.csproj* is configured with `<AndroidLinkTool>proguard</AndroidLinkTool>` instead, the app launches successfully and displays the text \"Large Text\". This behavior is consistent back to at least Visual Studio 2017 version 15.7.6 (using the older `<AndroidEnableProguard>true</AndroidEnableProguard>` property).\r\n\r\n(For historical reference, the older **Mobile App (Xamarin.Forms) > Master Detail** template that was shipped in Visual Studio 2017 version 15.7.6 used to hit a `NullReferenceException` during app startup when built with Visual Studio 2017 version 15.7.6 and `<AndroidEnableProguard>true</AndroidEnableProguard>` [unless some additional rules were added in a `@(ProguardConfiguration)` item](https://github.com/xamarin/xamarin-android/issues/1646#issuecomment-425479814). But, like the attached test case, the *current* **Mobile App (Xamarin.Forms) > Master-Detail** template that is shipped in Visual Studio 2019 runs successfully when built using Visual Studio 2017 version 15.7.6 and `<AndroidEnableProguard>true</AndroidEnableProguard>`, with no need for an additional `@(ProguardConfiguration)` item.)\r\n\r\n### Actual Behavior\r\n\r\nThe application hits an unhandled exception during launch. Excerpt of the top of the stack trace:\r\n\r\n```\r\nUNHANDLED EXCEPTION:\r\nJava.Lang.Exception: Binary XML file line #17: Binary XML file line #17: Error inflating class android.support.v7.widget.ActionBarOverlayLayout ---> Java.Lang.Exception: Binary XML file line #17: Error inflating class android.support.v7.widget.ActionBarOverlayLayout ---> Java.Lang.ReflectiveOperationException: <init> [class android.content.Context, interface android.util.AttributeSet]\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualVoidMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00089] in <b49e0c493a5e4c5186212e29f6b77d1e>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x0005d] in <b49e0c493a5e4c5186212e29f6b77d1e>:0 \r\n  at Android.App.Activity.SetContentView (System.Int32 layoutResID) [0x00022] in <db7eb011ae5d498ba9f82c91bf3ead2d>:0 \r\n  at Test1.MainActivity.OnCreate (Android.OS.Bundle savedInstanceState) [0x0000e] in <7e409eb71a644608be0a248b58beee09>:0 \r\n  at Android.App.Activity.n_OnCreate_Landroid_os_Bundle_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_savedInstanceState) [0x00011] in <db7eb011ae5d498ba9f82c91bf3ead2d>:0 \r\n  at (wrapper dynamic-method) Android.Runtime.DynamicMethodNameCounter.3(intptr,intptr,intptr)\r\n  --- End of managed Java.Lang.Exception stack trace ---\r\nandroid.view.InflateException: Binary XML file line #17: Binary XML file line #17: Error inflating class android.support.v7.widget.ActionBarOverlayLayout\r\nCaused by: android.view.InflateException: Binary XML file line #17: Error inflating class android.support.v7.widget.ActionBarOverlayLayout\r\nCaused by: java.lang.NoSuchMethodException: <init> [class android.content.Context, interface android.util.AttributeSet]\r\n\tat java.lang.Class.getConstructor0(Class.java:2204)\r\n\tat java.lang.Class.getConstructor(Class.java:1683)\r\n\tat android.view.LayoutInflater.createView(LayoutInflater.java:618)\r\n```\r\n\r\n### Possible Workaround\r\n\r\nFor this simple test scenario, the following steps are sufficient to work around the error during app startup. There might be other scenarios that the current version of *r8.jar* doesn't handle that would require additional custom rules to solve.\r\n\r\n 1. Create a new text file in the app project. I named mine *proguard.cfg* to follow the old habit from when ProGuard was the only available code shrinking option.\r\n 2. Add the following lines to the file:\r\n\r\n    ```txt\r\n    -keep class android.support.v7.widget.** { *; }\r\n    -dontwarn android.support.v7.widget.*\r\n    -keep class android.support.v7.view.** { *; }\r\n    -dontwarn android.support.v7.view.*\r\n    ```\r\n  3. Use **File > Save ... As** to save the file. Click the drop-down menu on the **Save** button to select **Save with Encoding** and click **Yes** to confirm overwriting the existing file.\r\n  4. Select the **US-ASCII - Codepage 20127** encoding and click **OK**.  This step is necessary to remove a byte-order mark that otherwise causes an error when `r8` reads the file.\r\n  5. Set the **View > Properties Window > Build Action** for the new file to **ProguardConfiguration**.\r\n  6. **Build > Clean** the project, and then build and redeploy it.\r\n\r\n### Version Information\r\n\r\nXamarin.Android 9.2.0.5 (d16-0@fa7ba9db04226e63e583e185304593509cc5cda6)\r\n\r\n### Logs\r\n\r\n[adblogcat.txt](https://github.com/xamarin/xamarin-android/files/3045723/adblogcat.txt)"},{"Id":"9382376809","Type":"PullRequestEvent","CreatedAt":"2019-04-04T22:13:22","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2930","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] <GetImportedLibraries/> perf improvements\" (#2930) at xamarin/xamarin-android","RelatedBody":"I noticed a target running on an incremental build with only a XAML\r\ncode change:\r\n\r\n    116 ms  _BuildLibraryImportsCache                  1 calls\r\n\r\nThis was using VS 2019 GA, just a blank Xamarin.Forms app.\r\n\r\nReviewing `<GetImportedLibraries/>` it had some general perf\r\nimprovements that could be done:\r\n\r\n* It called `Directory.EnumerateFiles` three times...\r\n* It used a bunch of LINQ where a `foreach` would do.\r\n\r\nAdditionally, I saw some improvements I could do at the MSBuild target\r\nlevel:\r\n\r\n    <Target Name=\"_BuildLibraryImportsCache\"\r\n            Inputs=\"$(MSBuildProjectFullPath);@(_ReferencePath);@(_ReferenceDependencyPaths);$(_AndroidBuildPropertiesCache);$(_AndroidLibraryProjectImportsCache)\"\r\n            Outputs=\"$(_AndroidLibraryImportsCache).stamp\">\r\n\r\nThis target operates on the output of `_ResolveLibraryProjectImports`,\r\nbut it was re-running if *any* assembly changed?\r\n\r\nI think the `Inputs` and `Outputs` would more appropriately be:\r\n\r\n    Inputs=\"$(_AndroidLibraryProjectImportsCache)\"\r\n    Outputs=\"$(_AndroidStampDirectory)_BuildLibraryImportsCache.stamp\"\r\n\r\nThis way, if `_ResolveLibraryProjectImports` runs and does work, it\r\nwrites to `$(_AndroidLibraryProjectImportsCache)`. We then only need\r\nto run this task when that file changes.\r\n\r\nI also updated this target so it follows our new convention for\r\nplacing stamp files in `$(_AndroidStampDirectory)`.\r\n\r\n## Results ##\r\n\r\nAn example of an initial build of the Xamarin.Forms project in this\r\nrepo:\r\n\r\n    Before:\r\n    299 ms  GetImportedLibraries                       1 calls\r\n    After:\r\n    172 ms  GetImportedLibraries                       1 calls\r\n\r\nAnd then an incremental build, that is a XAML change:\r\n\r\n    Before:\r\n    109 ms  _BuildLibraryImportsCache                  1 calls\r\n    After:\r\n    n/a\r\n\r\nThe task is skipped now:\r\n\r\n    _BuildLibraryImportsCache:\r\n    Skipping target \"_BuildLibraryImportsCache\" because all output files are up-to-date with respect to the input files.\r\n\r\nOverall, I would say there is a ~120ms improvement on initial build.\r\nIncremental builds with XAML changes have a ~100ms improvement."},{"Id":"9381175842","Type":"IssuesEvent","CreatedAt":"2019-04-04T18:56:50","Actor":"sheiksyedm","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2929","RelatedDescription":"Opened issue \"App crashes when collecting GC \" (#2929) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run the attached sample \r\n2. Perform freehand drawing over a screen\r\n3. Application get crashed with ObjectDisposedException\r\n. \r\nSample : https://github.com/sheiksyedm/GC_Collect_Android\r\n\r\n### Expected Behavior\r\n\r\nI expect the app will not get crash when doing freehand drawing even GC collected. \r\n\r\n### Actual Behavior\r\nIn my project, when doing freehand drawing or some interaction like added shapes and resizing it, the app is getting crashed. It's happened when mono run time executing a GC.Collect(). \r\nSo, i have prepared the demo app similar like my project and manually called the GC.Collect() for this demo purpose. As like my project, the exception thrown in the attached demo app. \r\n\r\n### Version Information\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.9.7\r\nVisualStudio.15.Release/15.9.7+28307.423\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Enterprise\r\n\r\n### Log File\r\n\r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Android.Graphics.Path'. occurred\r\n\r\n04-05 00:22:58.769 D/Mono    (  376): DllImport searching in: '__Internal' ('(null)').\r\n04-05 00:22:58.769 D/Mono    (  376): Searching for 'java_interop_jnienv_call_void_method_a'.\r\n04-05 00:22:58.769 D/Mono    (  376): Probing 'java_interop_jnienv_call_void_method_a'.\r\n04-05 00:22:58.769 D/Mono    (  376): Found as 'java_interop_jnienv_call_void_method_a'.\r\n04-05 00:22:58.771 D/Mono    (  376): DllImport searching in: '__Internal' ('(null)').\r\n04-05 00:22:58.771 D/Mono    (  376): Searching for 'java_interop_jnienv_get_static_field_id'.\r\n04-05 00:22:58.771 D/Mono    (  376): Probing 'java_interop_jnienv_get_static_field_id'.\r\n04-05 00:22:58.771 D/Mono    (  376): Found as 'java_interop_jnienv_get_static_field_id'.\r\n04-05 00:22:58.772 D/Mono    (  376): DllImport searching in: '__Internal' ('(null)').\r\n04-05 00:22:58.772 D/Mono    (  376): Searching for 'java_interop_jnienv_get_static_object_field'.\r\n04-05 00:22:58.772 D/Mono    (  376): Probing 'java_interop_jnienv_get_static_object_field'.\r\n04-05 00:22:58.772 D/Mono    (  376): Found as 'java_interop_jnienv_get_static_object_field'.\r\n04-05 00:22:58.784 D/vndksupport(  376): Loading /vendor/lib64/hw/android.hardware.graphics.mapper@2.0-impl.so from current namespace instead of sphal namespace.\r\n04-05 00:22:58.804 D/InputMethodManager(  376): prepareNavigationBarInfo() DecorView@aa7cfb4[MainActivity]\r\n04-05 00:22:58.805 D/InputMethodManager(  376): getNavigationBarColor() -855310\r\n04-05 00:22:58.805 V/InputMethodManager(  376): Starting input: tba=GC_Collect_Android.GC_Collect_Android ic=null mNaviBarColor -855310 mIsGetNaviBarColorSuccess true , NavVisible : true , NavTrans : false\r\n04-05 00:22:58.805 D/InputMethodManager(  376): startInputInner - Id : 0\r\n04-05 00:22:58.809 D/ViewRootImpl@e28124d[MainActivity](  376): MSG_RESIZED: frame=Rect(0, 0 - 1440, 2960) ci=Rect(0, 84 - 0, 168) vi=Rect(0, 84 - 0, 168) or=1\r\n04-05 00:22:59.862 D/ViewRootImpl@e28124d[MainActivity](  376): ViewPostIme pointer 0\r\n04-05 00:22:59.872 D/Mono    (  376): DllImport searching in: '__Internal' ('(null)').\r\n04-05 00:22:59.872 D/Mono    (  376): Searching for 'java_interop_jnienv_call_nonvirtual_int_method_a'.\r\n04-05 00:22:59.872 D/Mono    (  376): Probing 'java_interop_jnienv_call_nonvirtual_int_method_a'.\r\n04-05 00:22:59.873 D/Mono    (  376): Found as 'java_interop_jnienv_call_nonvirtual_int_method_a'.\r\n04-05 00:22:59.877 D/Mono    (  376): DllImport searching in: '__Internal' ('(null)').\r\n04-05 00:22:59.877 D/Mono    (  376): Searching for 'java_interop_jnienv_call_nonvirtual_float_method_a'.\r\n04-05 00:22:59.877 D/Mono    (  376): Probing 'java_interop_jnienv_call_nonvirtual_float_method_a'.\r\n04-05 00:22:59.877 D/Mono    (  376): Found as 'java_interop_jnienv_call_nonvirtual_float_method_a'.\r\n04-05 00:22:59.883 D/Mono    (  376): DllImport searching in: '__Internal' ('(null)').\r\n04-05 00:22:59.883 D/Mono    (  376): Searching for 'java_interop_jnienv_call_nonvirtual_boolean_method_a'.\r\n04-05 00:22:59.883 D/Mono    (  376): Probing 'java_interop_jnienv_call_nonvirtual_boolean_method_a'.\r\n04-05 00:22:59.883 D/Mono    (  376): Found as 'java_interop_jnienv_call_nonvirtual_boolean_method_a'.\r\n04-05 00:22:59.886 D/Mono    (  376): DllImport searching in: '__Internal' ('(null)').\r\n04-05 00:22:59.886 D/Mono    (  376): Searching for 'java_interop_jnienv_call_boolean_method_a'.\r\n04-05 00:22:59.886 D/Mono    (  376): Probing 'java_interop_jnienv_call_boolean_method_a'.\r\n04-05 00:22:59.886 D/Mono    (  376): Found as 'java_interop_jnienv_call_boolean_method_a'.\r\n04-05 00:23:03.581 D/Mono    (  376): GC_BRIDGE waiting for bridge processing to finish\r\n04-05 00:23:03.592 I/Collect_Androi(  376): Explicit concurrent copying GC freed 9460(2MB) AllocSpace objects, 3(60KB) LOS objects, 83% free, 1217KB/7MB, paused 222us total 21.766ms\r\n04-05 00:23:03.593 D/Mono    (  376): GC_TAR_BRIDGE bridges 17 objects 17 opaque 0 colors 15 colors-bridged 15 colors-visible 15 xref 4 cache-hit 0 cache-semihit 0 cache-miss 0 setup 0.05ms tarjan 0.05ms scc-setup 0.01ms gather-xref 0.00ms xref-setup 0.00ms cleanup 0.07ms\r\n04-05 00:23:03.593 D/Mono    (  376): GC_BRIDGE: Complete, was running for 23.42ms\r\n04-05 00:23:03.593 D/Mono    (  376): GC_MAJOR: (user request) time 1.61ms, stw 2.82ms los size: 1024K in use: 16K\r\n04-05 00:23:03.593 D/Mono    (  376): GC_MAJOR_SWEEP: major size: 832K in use: 91K\r\nUnhandled Exception:\r\n\r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Android.Graphics.Path'."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9383357418","Type":"IssuesEvent","CreatedAt":"2019-04-05T03:01:04","Actor":"cherrybbb","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5817","RelatedDescription":"Opened issue \"ImageButton\" (#5817) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI am trying to create an ImageButton that uses a different image for the normal (unpressed) state and the state where the user is actively pressing the button. I found an article that uses a VisualStateGroup to change the appearance of the button based on the state:\r\n\r\nhttps://docs.microsoft.com/en-us/xamarin/xamarin-forms/user-interface/imagebutton#imagebutton-visual-states\r\n\r\nI am able to successfully use this to change the image. However, if I set a different image for the 'Pressed' state, when I click on the button, it does change to the new image as expected, but when I release the button it's visual state continues to display the pressed image and does not return to the 'Normal' state until I click somewhere else in the window.\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: works\r\n  - UWP:  not work\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nhttps://stackoverflow.com/questions/55466773/xamarin-imagebutton-states\r\n"},{"Id":"9383143442","Type":"IssuesEvent","CreatedAt":"2019-04-05T01:49:42","Actor":"Magendanz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5816","RelatedDescription":"Opened issue \"No selection feedback for shell menu items\" (#5816) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nUnlike ShellItems, MenuItems don't get selection feedback or indicate selected state after being tapped.  The flyout is also not automatically hidden after selection when FlyoutBehavior if set to Flyout.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Create new project based on Xaramin shell template\r\n2.  Modify default shell page to enable items in flyout menu\r\n\r\n`<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \r\n       xmlns:local=\"clr-namespace:XamShellApp.Views\"\r\n       RouteScheme=\"app\"\r\n       Route=\"xamshellapp\"\r\n       FlyoutBehavior=\"Flyout\"\r\n       Title=\"XamShellApp\"\r\n       x:Class=\"XamShellApp.AppShell\"\r\n       x:Name=\"MyShell\">\r\n\r\n    <!-- Your Pages -->\r\n    <Shell.Items>\r\n        <ShellItem Title=\"Items 1\">\r\n            <ShellSection>\r\n                <ShellContent ContentTemplate=\"{DataTemplate local:ItemsPage}\" />\r\n            </ShellSection>\r\n        </ShellItem>\r\n        <ShellItem Title=\"Items 2\">\r\n            <ShellSection>\r\n                <ShellContent ContentTemplate=\"{DataTemplate local:ItemsPage}\" />\r\n            </ShellSection>\r\n        </ShellItem>\r\n    </Shell.Items>\r\n    <Shell.MenuItems>\r\n        <MenuItem BindingContext=\"{x:Reference MyShell}\" Command=\"{Binding AboutCommand}\" Text=\"About\" />\r\n    </Shell.MenuItems>\r\n</Shell>`\r\n\r\nNote: Binding context on MenuItem must be explicitly set until bug #5707 is fixed.\r\n\r\n3.  Add Command to handle menu selection\r\n\r\n`using Xamarin.Forms;\r\nusing XamShellApp.Views;\r\n\r\nnamespace XamShellApp\r\n{\r\n    public partial class AppShell : Shell\r\n    {\r\n        public Command AboutCommand { get; }\r\n\r\n        public AppShell()\r\n        {\r\n            Routing.RegisterRoute(\"about\", typeof(AboutPage));\r\n            AboutCommand = new Command(() =>\r\n            {\r\n                GoToAsync(\"app:///xamshellapp/about\");\r\n                FlyoutIsPresented = false;\r\n            });\r\n\r\n            BindingContext = this;\r\n            InitializeComponent();\r\n        }\r\n    }\r\n}`\r\n\r\n### Expected Behavior\r\n\r\nSelecting a menu items should behave the same as selecting a ShellItem.\r\n\r\n### Actual Behavior\r\n\r\nSelecting a menu item:\r\n- Has no visual feedback when tapped\r\n- Does not maintain selected state like ShellItem\r\n- Does not automatically hide flyout after selection\r\n\r\n### Basic Information\r\n\r\n- Version with issue: v4.0.0.204370-pre8\r\n- Last known good version: N/A\r\n- IDE: v16.0.0\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: v9.2.0.5 SDK \r\n  - iOS:  Not tested (but expect same issue)\r\n\r\n"},{"Id":"9382820589","Type":"IssuesEvent","CreatedAt":"2019-04-05T00:05:47","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5811","RelatedDescription":"Closed issue \"[iOS,Shell] Incorrect ContentPage position\" (#5811) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe content page displayed inside a ShellSection (bottom tabs mode) is incorrectly positioned: the top of the page goes behind the top edge of the screen. I tried only the iOS emulator (not a real device). It works fine with Android emulator.\r\n\r\nIt looks to me that the portion of the ContentPage that overlaps the top edge has the same height of the bottom tab bar.\r\n\r\n### Steps to Reproduce\r\nI just created a new solution with Visual Studio for Mac (Enterprise 2019) using the \"Xamarin.Forms Shell\" template and I ran it. Nothing more. As you can see, both the pages (Browse and About) are cut in the upper side (part of the page is positioned beyond the upper side).\r\n \r\n### Expected Behavior\r\nThe ContentPage should be fully visible. \r\n\r\n### Actual Behavior\r\nThe ContentPage is cut at the top side.\r\n\r\n### Basic Information\r\n- Xamarin.Forms 3.6.0.264807\r\n- iOS emulator (different iPhones and iPads) with iOS 12.2\r\n- Visual Studio 2019 for Mac\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n<img width=\"350\" alt=\"screen-1\" src=\"https://user-images.githubusercontent.com/5046792/55565966-19bb5c00-56fb-11e9-8cc1-0e09c2ac0369.png\">\r\n<img width=\"350\" alt=\"screen-2\" src=\"https://user-images.githubusercontent.com/5046792/55565968-19bb5c00-56fb-11e9-89ed-5042215dc10c.png\">\r\n\r\n"},{"Id":"9382792029","Type":"IssuesEvent","CreatedAt":"2019-04-04T23:57:39","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5333","RelatedDescription":"Closed issue \"Entry border collapsed when change color dynamically\" (#5333) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nHere I am using an entry where initially I'm setting a background color and using entry renderer I have given a color for Tint. But in runtime while changing the background color I'm mapping the color to renderer's background color, hence the tint color set to the renderer's(EditText's) background color automatically. Hence in dynamic ,the Tint is not visible while tintcolor overlaps along with background color. \r\n### Steps to Reproduce\r\n\r\n1. Run a sample with entry and change tint color using renderer.\r\n2. Change background color of renderer and not from forms.\r\n3.The background color is seen the color which we given for tint.\r\n\r\n### Expected Behavior\r\nThe background color and tint color should be shown as given.\r\n\r\n### Actual Behavior\r\nThe tint color set to the background color of edit text(renderer)\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms : 3.1.0.697729\r\n- IDE: Visual studio 2017\r\n\r\n### Screenshots\r\n\r\nI have given blue color to border but it remains as gray in initial loading\r\n\r\n![image](https://user-images.githubusercontent.com/41435300/53147805-adfbb480-35ce-11e9-99c6-77a683ce8307.png)\r\n\r\nChanged color in run time border collapsed.\r\n\r\n![image](https://user-images.githubusercontent.com/41435300/53147841-c7046580-35ce-11e9-9a68-233d5292df1e.png)\r\n\r\n### Reproduction Link\r\n\r\nPlease provide a suggestion on above issue, If the above case is achievable then please provide a sample.\r\nThank you in advance.\r\n"},{"Id":"9382770889","Type":"IssuesEvent","CreatedAt":"2019-04-04T23:51:25","Actor":"drewgillies","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4296","RelatedDescription":"Closed issue \"Forms Previewer shows \"AndroidFormsPreviewerRenderer\" and does not render anything else\" (#4296) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nForms Previewer renders just text \"AndroidFormsPreviewerRenderer\". There are no build errors.\r\nThe AndroidDesigner log shows:\r\nWARNING: Xamarin.Android support for custom controls has been disabled by IDE request.\r\n...\r\nINFO: Trying to load class xamarindesigner.AndroidFormsPreviewerRenderer\r\nNot loading custom component, monodroid is not ready\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the previewer pane.\r\n2. The text is shown.\r\n\r\n### Expected Behavior\r\n\r\nIf there are some errors or run-time exceptions when loading the code in the previewer, these have to be logged or shown somewhere.\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\nVS 15.8.7\r\nXamarin 4.11.0.776\r\nXamarin.Designer 4.15.9\r\nXamarin.Android.SDK 9.0.0.19\r\nXamarin.Forms 3.0.0.561731\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n![image](https://user-images.githubusercontent.com/747563/47962823-d4e3aa00-e022-11e8-9e6f-acd14b601086.png)\r\n\r\n\r\n### Log\r\n\r\n```\r\n[2018-11-04 11:07:33.6] Renderer >> INFO: Clearing out 1 existing ClassLoaders\r\n[2018-11-04 11:07:33.6] Renderer >> \r\n[2018-11-04 11:07:35.8] INFO: : Initializing the previewer with Android API level 26.\r\n[2018-11-04 11:07:36.1] INFO: : Regenerating 1/12 resource repositories\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Indirect rendering available\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Changing layoutlib, from 0 to 26\r\n[2018-11-04 11:07:36.1] Renderer >> \r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 113\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 943\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 287\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:36.1] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:36.2] Renderer >> WARNING: Xamarin.Android support for custom controls has been disabled by IDE request.\r\n[2018-11-04 11:07:38.0] Renderer >> INFO: Creating LibraryClassLoader in shadow copy path C:\\Users\\s\\AppData\\Local\\Temp\\AndroidDesignerJars6897347629077289426\r\n[2018-11-04 11:07:38.0] Renderer >> INFO: Trying to load class xamarindesigner.AndroidFormsPreviewerRenderer\r\n[2018-11-04 11:07:38.0] Renderer >> \r\n[2018-11-04 11:07:38.0] Renderer >> Not loading custom component, monodroid is not ready\r\n[2018-11-04 11:07:38.2] INFO: : Regenerating 0/12 resource repositories\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 113\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 943\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 287\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:38.3] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:38.5] INFO: : Regenerating 1/12 resource repositories\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 113\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 943\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 287\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:38.6] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:38.7] INFO: : Regenerating 1/12 resource repositories\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 112\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 944\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 290\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:38.7] Renderer >> INFO: Trying to load class xamarindesigner.AndroidFormsPreviewerRenderer\r\n[2018-11-04 11:07:38.7] Renderer >> \r\n[2018-11-04 11:07:38.7] Renderer >> Not loading custom component, monodroid is not ready\r\n[2018-11-04 11:07:38.9] INFO: : Regenerating 0/12 resource repositories\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 112\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 944\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 290\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:38.9] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:39.2] INFO: : Regenerating 1/12 resource repositories\r\n[2018-11-04 11:07:39.2] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:39.2] Renderer >> INFO: Streaming 112\r\n[2018-11-04 11:07:39.2] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:39.2] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:39.2] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:39.2] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:39.2] Renderer >> INFO: Streaming 944\r\n[2018-11-04 11:07:39.2] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:39.2] Renderer >> INFO: Streaming 290\r\n[2018-11-04 11:07:39.3] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:39.3] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:39.3] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:39.4] INFO: : Regenerating 1/12 resource repositories\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 113\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 943\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 287\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:39.4] Renderer >> INFO: Trying to load class xamarindesigner.AndroidFormsPreviewerRenderer\r\n[2018-11-04 11:07:39.4] Renderer >> \r\n[2018-11-04 11:07:39.4] Renderer >> Not loading custom component, monodroid is not ready\r\n[2018-11-04 11:07:39.6] INFO: : Regenerating 0/12 resource repositories\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 113\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 943\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 287\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:39.6] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:39.8] INFO: : Regenerating 1/12 resource repositories\r\n[2018-11-04 11:07:39.9] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:39.9] Renderer >> INFO: Streaming 113\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: Streaming 943\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: Streaming 287\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:40.0] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:40.1] INFO: : Regenerating 1/12 resource repositories\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 112\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 944\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 290\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: We have retrieved 1781 resources\r\n[2018-11-04 11:07:40.1] Renderer >> INFO: Trying to load class xamarindesigner.AndroidFormsPreviewerRenderer\r\n[2018-11-04 11:07:40.1] Renderer >> \r\n[2018-11-04 11:07:40.1] Renderer >> Not loading custom component, monodroid is not ready\r\n[2018-11-04 11:07:40.3] INFO: : Regenerating 0/12 resource repositories\r\n[2018-11-04 11:07:40.3] Renderer >> INFO: Streaming 16\r\n[2018-11-04 11:07:40.3] Renderer >> INFO: Streaming 112\r\n[2018-11-04 11:07:40.3] Renderer >> INFO: Streaming 176\r\n[2018-11-04 11:07:40.3] Renderer >> INFO: Streaming 44\r\n[2018-11-04 11:07:40.3] Renderer >> INFO: Streaming 10\r\n[2018-11-04 11:07:40.3] Renderer >> INFO: Streaming 0\r\n[2018-11-04 11:07:40.3] Renderer >> INFO: Streaming 944\r\n[2018-11-04 11:07:40.4] Renderer >> INFO: Streaming 13\r\n[2018-11-04 11:07:40.4] Renderer >> INFO: Streaming 290\r\n[2018-11-04 11:07:40.4] Renderer >> INFO: Streaming 8\r\n[2018-11-04 11:07:40.4] Renderer >> INFO: Streaming 1\r\n[2018-11-04 11:07:40.4] Renderer >> INFO: We have retrieved 1781 resources\r\n```\n\n> VS bug [#724558](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/724558)"},{"Id":"9382443459","Type":"IssuesEvent","CreatedAt":"2019-04-04T22:27:45","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5815","RelatedDescription":"Opened issue \"Update instructions for building Xamarin.Forms\" (#5815) at xamarin/Xamarin.Forms","RelatedBody":"@davidortinau Now that VSTS is Azure DevOps, I believe the [instructions](https://github.com/xamarin/Xamarin.Forms/wiki/How-to-Build-Xamarin.Forms-NuGet) need to be updated. The user interface of DevOps looks significantly different and makes the existing instructions difficult to follow. Please make sure the new instructions mention building an XF fork as well as the master branch. Most of us will probably need to build our own forks."}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9382128017","Type":"PullRequestEvent","CreatedAt":"2019-04-04T21:26:42","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5855","RelatedDescription":"Opened pull request \"[mmp] Don't apply libintl hack when you explicitly ask for that file\" (#5855) at xamarin/xamarin-macios","RelatedBody":"- A long while ago, this hack was added to mmp:\r\n```\r\n \t// Shutup the warning until we decide on bug: 36478\r\n\tif (shortendName.ToLowerInvariant () == \"intl\" && IsUnifiedFullXamMacFramework)\r\n```\r\n- This breaks use cases were we explicitly ask for that file, so let's\r\nfix that for now until we can fix the root cause for real"},{"Id":"9381583416","Type":"PullRequestEvent","CreatedAt":"2019-04-04T20:00:32","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5854","RelatedDescription":"Opened pull request \"[XHarness] Fix issues building the today extensions for the BCL tests apps.\" (#5854) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9380953664","Type":"PullRequestEvent","CreatedAt":"2019-04-04T18:23:14","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5853","RelatedDescription":"Opened pull request \"[apidiff] Update the references (xml files) for pre-xcode 10.2 support\" (#5853) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9380535161","Type":"PullRequestEvent","CreatedAt":"2019-04-04T17:19:55","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5852","RelatedDescription":"Opened pull request \"[master] [apidiff] Update the references (URL) to 16.0 final releases\" (#5852) at xamarin/xamarin-macios","RelatedBody":"\n\nBackport of #5851.\n\n/cc @spouliot "},{"Id":"9380376934","Type":"PullRequestEvent","CreatedAt":"2019-04-04T16:56:00","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5851","RelatedDescription":"Opened pull request \"[apidiff] Update the references (URL) to 16.0 final releases\" (#5851) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9380234800","Type":"PullRequestEvent","CreatedAt":"2019-04-04T16:34:23","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5848","RelatedDescription":"Merged pull request \"[XHarness] Ignore a failing test on devices.\" (#5848) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9380110429","Type":"PullRequestEvent","CreatedAt":"2019-04-04T16:16:39","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5850","RelatedDescription":"Opened pull request \"[Intents] Update according to breaking changes from Apple.\" (#5850) at xamarin/xamarin-macios","RelatedBody":"Reference: https://trello.com/c/dtVv2a6R/131-43425168-inworkoutintentresponsecode-enum-values-changed\nReference: rdar://43425168\n\nWorking around this breaking change becomes quite complicates, so I just\nexposed it instead. Customers can still work around it if needed by casting\nthe expected numeric value to the enum type."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":26,"FavoriteCount":9,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":131,"FavoriteCount":46,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":143,"FavoriteCount":69,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":37,"RawContent":null},{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":93,"FavoriteCount":43,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":67,"FavoriteCount":29,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":25,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":119,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":42,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":150,"FavoriteCount":70,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":41,"FavoriteCount":9,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":18,"RawContent":null}]}},"RunOn":"2019-04-05T05:30:52.5763565Z","RunDurationInMilliseconds":2694}