{"Data":{"Blog":{"FeedItems":[{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":36,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel. Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7493685188","Type":"IssuesEvent","CreatedAt":"2018-04-06T23:54:43","Actor":"mrlife","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3035","RelatedDescription":"Opened issue \"macOS support for 2.1.0-preview1-final?\" (#3035) at aspnet/Home","RelatedBody":"Using the latest beta release of Visual Studio for Mac, [which should have support for 2.1](https://blogs.msdn.microsoft.com/visualstudio/2018/03/21/visual-studio-for-mac-version-7-5-preview-1/).\r\n\r\n<img width=\"230\" alt=\"screen shot 2018-04-06 at 7 48 38 pm\" src=\"https://user-images.githubusercontent.com/213164/38448646-c63860c2-39d3-11e8-8827-0dc7399e6469.png\">\r\n\r\nI installed 2.1 preview using the link on the [announcement blog post](https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-now-available/).\r\n\r\n> $ dotnet --version\r\n> 2.1.300-preview1-008174\r\n\r\nFollowed the steps from the announcement blog post linked above and restarted my computer.\r\n\r\nI'm seeing this in the project options:\r\n\r\n<img width=\"524\" alt=\"screen shot 2018-04-06 at 7 37 13 pm\" src=\"https://user-images.githubusercontent.com/213164/38448661-f3056b86-39d3-11e8-9bbc-f1cd44277e79.png\">\r\n\r\nFor step 9 in the announcement blog post, is this checkbox in another location in Visual Studio for Mac?\r\n> 9: Open the “Debug” tab and in the IIS Express profile, check the “Enable SSL” checkbox and save the changes\r\n\r\nI attempted to run the project from CLI and it says it's running, but going to localhost:5000 shows it's not really running.\r\n\r\nPlease let me know if I am missing something or if this should be posted somewhere else."},{"Id":"7493373588","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:58:59","Actor":"ryanbrandenburg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3034","RelatedDescription":"Opened issue \"Flaky test: System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory\" (#3034) at aspnet/Home","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=442272&tab=buildResultsDiv&buildTypeId=XPlat_Windows_Win10Universe#testNameId1329483692832033125) sometimes with the following error:\r\n\r\n```\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-Keys' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 89\r\n======= Failed test run #2 ==========\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-KeysTemp' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 55\r\n```\r\n\r\nFuture instances of this failure can be tracked [here](http://aspnetci/project.html?projectId=XPlat&buildTypeId=&tab=testDetails&testNameId=1329483692832033125&order=TEST_STATUS_DESC&branch_XPlat=__all_branches__&itemsCount=50)."},{"Id":"7493270003","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:29:41","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2774","RelatedDescription":"Closed issue \"Mvc.UseStaticFiles() will not serve files that are symbolic links; yielding empty files instead.\" (#2774) at aspnet/Home","RelatedBody":"Mvc.UseStaticFiles() will not serve files that are symbolic links; yielding empty files instead.\r\n\r\nReason: (new FileInfo(path)).Length does the wrong thing for what we are trying to do.\r\n\r\nhttps://github.com/aspnet/FileSystem/blob/dev/src/FS.Physical/PhysicalFileInfo.cs:\r\n\r\n    System.IO.FileInfo _info;\r\n\r\n    public long Length => _info.Length;\r\n\r\nNope. That's not going to work.\r\n\r\nDue to lack of an appropriate API, the only way to get the length is to open the file, seek to the end, and read the position."},{"Id":"7493261969","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:27:34","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2532","RelatedDescription":"Closed issue \"CompositeFileProvider should implement IDisposable\" (#2532) at aspnet/Home","RelatedBody":"_From @jiatao99 on Wednesday, December 13, 2017 8:20:12 AM_\r\n\r\n1. I implement my own IFileProvider (like Zip)  and implement IDisposable\r\n2. I add my provider into CompositeFileProvider\r\n3. I add CompositeFileProvider into ServiceCollection \r\n\r\nResult:  my provider will not be disposed properly\r\n\r\nCompositeFileProvider should implement IDisposable and dispose inner providers.\r\n\r\n\r\n_Copied from original issue: aspnet/FileSystem#307_"},{"Id":"7493258902","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:26:44","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2533","RelatedDescription":"Closed issue \"PhysicalDirectoryInfo.PhysicalPath should return relative path\" (#2533) at aspnet/Home","RelatedBody":"_From @jiatao99 on Wednesday, December 13, 2017 7:55:14 AM_\r\n\r\nCall provider.GetDirectoryContents(\"\") might return a PhysicalDirectoryInfo. From there, I should be able to call the provider.GetDirectoryContents(dir.PhysicalPath) to retrieve the directory content from sub folder. However, the PhysicalDirectoryInfo.PhysicalPath returns the absolute path.\r\n\r\nSince PhysicalFileProvider only take relative path, I have no easy way to recursively list all the directory contents in the file system. \r\n\r\nIn my opinion, both PhysicalDirectoryInfo and PhysicalFileInfo should always return relative path (to provider) to follow the design pattern\r\n\r\n_Copied from original issue: aspnet/FileSystem#306_"},{"Id":"7493256919","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:26:11","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2535","RelatedDescription":"Closed issue \"[Suggest] Multi-targeting support for netfx\" (#2535) at aspnet/Home","RelatedBody":"_From @hcoona on Thursday, November 23, 2017 11:06:19 PM_\r\n\r\nI think this is a topic related to all aspnet common libraries (`Microsoft.Extensions.*`) but I didn't found a suitable place for it.\r\n\r\nI want the libraries enable multi-targeting feature to decouple netfx with netstandards. There are 2 main benefits for it:\r\n1. Get rid of whole net standard libraries for netfx projects.\r\n1. Support net45 or somehow earlier version of netfx.\r\n\r\nA pure netfx project would not like to involve whole net standard libraries for no gain. This would increase the complexity of maintaining & deploying.\r\n\r\nWe didn't use most new features in net standard 2.0, especially for the features not appears in net45. However, we dropped the support to net45 for the reason we want to target to net standard. Surely we can target to net standard. There's no reason we couldn't target to netfx also with the help of multi-targeting.\r\n\r\nI noticed that there is a 3rd party works on it https://www.nuget.org/packages?q=NetFx.Extensions but I think it better to be provided by official.\r\n\r\n_Copied from original issue: aspnet/FileSystem#302_"},{"Id":"7493249816","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:24:16","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2537","RelatedDescription":"Closed issue \"Support GetFileInfo for directories\" (#2537) at aspnet/Home","RelatedBody":"_From @stilettk on Friday, November 3, 2017 2:56:28 AM_\r\n\r\nCurrently `GetFileInfo` supports only files: when called on a path that points to a directory it returns `PhysicalFileInfo` which has `IsDirectory == false`. \r\n\r\nSo, when given a path, how to decide what to do: to call `GetFileInfo` (if it's a file) or call `GetDirectoryContents` (if it's a folder)? Currently the only way I found isn't very intuitive:\r\n`bool isDirectory = fileProvider.GetDirectoryContents(myPath).Exists`\r\n\r\nMy suggestion:\r\n`new PhysicalFileProvider(myPath).GetFileInfo(\"data\")` \r\nExpected:\r\n`PhysicalDirectoryInfo`\r\nActual:\r\n`PhysicalFileInfo`\r\n\r\n_Copied from original issue: aspnet/FileSystem#298_"},{"Id":"7493246807","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:23:27","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2538","RelatedDescription":"Closed issue \"Editing files\" (#2538) at aspnet/Home","RelatedBody":"_From @Daniel15 on Saturday, October 21, 2017 11:01:46 PM_\r\n\r\nIt looks like this abstraction is read-only... Is there any abstraction that handles writing files too?\r\n\r\n_Copied from original issue: aspnet/FileSystem#297_"},{"Id":"7493244647","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:22:51","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2539","RelatedDescription":"Closed issue \"Use FileProvider to stream views and static files hosted in the cloud\" (#2539) at aspnet/Home","RelatedBody":"_From @marcuslindblom on Thursday, October 5, 2017 5:30:03 AM_\r\n\r\nIs it possible to use any `IFileProvider` implementation, or any other feature to load views and static files via `http`?\r\n\r\nWhat I'm trying to achieve is to have an interface in my MVC app that is accessible via `http://domain.com/myarea` that loads the `_Layout.cshtml`, all views and static files for that specific area without having them on disk?\r\n\r\n_Copied from original issue: aspnet/FileSystem#295_"},{"Id":"7493242817","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:22:21","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2542","RelatedDescription":"Closed issue \"ChangeToken.OnChange fires twice when listening for configuration changes\" (#2542) at aspnet/Home","RelatedBody":"_From @Tratcher on Wednesday, July 19, 2017 9:08:36 AM_\r\n\r\n_From @magnusbakken on March 20, 2017 10:22_\n\nWhen I use ChangeToken.OnChange to listen to configuration changes as described in https://github.com/aspnet/Configuration/issues/432, my handler usually gets called twice in quick succession.\r\n\r\nTo reproduce:\r\n1. Create a new ASP.NET Core targeting .NET Framework project using the Web API template (I haven't tested targeting .NET Core).\r\n2. Add this line in the Configure method in Startup.cs: `ChangeToken.OnChange(Configuration.GetReloadToken, () => loggerFactory.CreateLogger<Startup>().LogWarning(\"Configuration changed\"));`\r\n3. Start the app.\r\n4. While the app is running, make a change in appsettings.json and save the file.\r\n\r\nThe line \"Configuration changed\" shows up twice in the console output.\r\n\r\nI've tried to make the file change from multiple programs (Visual Studio, Notepad, emacs), and by copying and replacing the file in its entirety. At least once I *think* I saw the change only being logged once, but usually you get it twice with just a few milliseconds between the log events.\r\n\r\nI've attached the call stacks I see from the debugger for the first and second call respectively:\r\n[first-callstack.txt](https://github.com/aspnet/Configuration/files/854463/first-callstack.txt)\r\n[second-callstack.txt](https://github.com/aspnet/Configuration/files/854464/second-callstack.txt)\r\n\r\nThe only difference is the following five lines in the middle of the second stack:\r\n\r\n    mscorlib.dll!System.Threading.CancellationTokenSource.InternalRegister(System.Action<object> callback, object stateForCallback, System.Threading.SynchronizationContext targetSyncContext, System.Threading.ExecutionContext executionContext)\tUnknown\r\n    mscorlib.dll!System.Threading.CancellationToken.Register(System.Action<object> callback, object state, bool useSynchronizationContext, bool useExecutionContext)\tUnknown\r\n    mscorlib.dll!System.Threading.CancellationToken.Register(System.Action<object> callback, object state)\tUnknown\r\n    Microsoft.Extensions.Primitives.dll!Microsoft.Extensions.Primitives.CancellationChangeToken.RegisterChangeCallback(System.Action<object> callback, object state)\tUnknown\r\n    Microsoft.Extensions.Primitives.dll!Microsoft.Extensions.Primitives.ChangeToken.OnChange.AnonymousMethod__0(object s)\tUnknown\n\n_Copied from original issue: aspnet/Configuration#624_\r\n\r\n_Copied from original issue: aspnet/FileSystem#287_"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7496076491","Type":"IssuesEvent","CreatedAt":"2018-04-08T05:10:11","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1905","RelatedDescription":"Opened issue \"SignalR and culture\" (#1905) at aspnet/SignalR","RelatedBody":"SignalR server and client should run consistently regardless of the computer's configured culture.\r\n\r\nEnsure `CultureInfo.InvariantCulture` is used when converting between strings and values.\r\n\r\nhttp://www.moserware.com/2008/02/does-your-code-pass-turkey-test.html"},{"Id":"7496048928","Type":"PullRequestEvent","CreatedAt":"2018-04-08T04:45:00","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1904","RelatedDescription":"Opened pull request \" Minor DefaultHubLifetimeManager improvements\" (#1904) at aspnet/SignalR","RelatedBody":""},{"Id":"7496037961","Type":"IssuesEvent","CreatedAt":"2018-04-08T04:35:03","Actor":"brettclutch","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1903","RelatedDescription":"Opened issue \"Send AccessToken via C# Client for [Authorize] protected hub\" (#1903) at aspnet/SignalR","RelatedBody":"This is I believe a duplicate of: https://github.com/aspnet/SignalR/issues/1039 but all of the information appears is no longer relevant in 1.0.0-alpha2-final release and almost feels like removed on purpose. I wanted to post to make sure this requirement is not missed as its very important to me. \r\n\r\nThe question:\r\n* How to send an AccessToken along with the c# client HubConnectionBuilder / HubConnection to authenticate a connection for accessing a [Authorize] protected hub. \r\n\r\nI so far can't figure it out. Thx. "},{"Id":"7496020840","Type":"IssuesEvent","CreatedAt":"2018-04-08T04:20:02","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1902","RelatedDescription":"Opened issue \"Optimize Groups data structure\" (#1902) at aspnet/SignalR","RelatedBody":"Groups are basically stored as `ConcurrentDictionary<string, ConcurrentDictionary<string, HubConnectionContext>>` (groups by name, containing connections by ID)\r\n\r\nOptimize how groups are stored to use a more light-weight data structure on the server to increase availability."},{"Id":"7495981743","Type":"PullRequestEvent","CreatedAt":"2018-04-08T03:47:02","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1901","RelatedDescription":"Merged pull request \"readonly all the things\" (#1901) at aspnet/SignalR","RelatedBody":""},{"Id":"7495891859","Type":"PullRequestEvent","CreatedAt":"2018-04-08T02:40:22","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1901","RelatedDescription":"Opened pull request \"readonly all the things\" (#1901) at aspnet/SignalR","RelatedBody":""},{"Id":"7495762460","Type":"PullRequestEvent","CreatedAt":"2018-04-08T01:00:22","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1900","RelatedDescription":"Opened pull request \"Use in for ReadOnlySequence\" (#1900) at aspnet/SignalR","RelatedBody":"It's a big enough struct that there *could* be a benefit."},{"Id":"7495751564","Type":"PullRequestEvent","CreatedAt":"2018-04-08T00:51:13","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1899","RelatedDescription":"Merged pull request \"Remove traces of ASP.NET Core Sockets\" (#1899) at aspnet/SignalR","RelatedBody":""},{"Id":"7495709003","Type":"PullRequestEvent","CreatedAt":"2018-04-08T00:14:44","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1899","RelatedDescription":"Opened pull request \"Remove traces of ASP.NET Core Sockets\" (#1899) at aspnet/SignalR","RelatedBody":""},{"Id":"7495671362","Type":"PullRequestEvent","CreatedAt":"2018-04-07T23:41:53","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1898","RelatedDescription":"Merged pull request \"Buffer messages so we get a single outgoing request\" (#1898) at aspnet/SignalR","RelatedBody":"Fixes #1897"},{"Id":"7495671353","Type":"IssuesEvent","CreatedAt":"2018-04-07T23:41:53","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1897","RelatedDescription":"Closed issue \"LongPollingTransportSendsAvailableMessagesWhenTheyArrive flakyness\" (#1897) at aspnet/SignalR","RelatedBody":"I believe I made this test flaky with this change https://github.com/aspnet/SignalR/commit/e3da7feab428725b4400f9df68acd21058553334. \r\n\r\n```\r\n[xUnit.net 00:00:04.4303206]     Microsoft.AspNetCore.SignalR.Client.Tests.LongPollingTransportTests.LongPollingTransportSendsAvailableMessagesWhenTheyArrive [FAIL]\r\nFailed   Microsoft.AspNetCore.SignalR.Client.Tests.LongPollingTransportTests.LongPollingTransportSendsAvailableMessagesWhenTheyArrive\r\nError Message:\r\n The collection contained 2 matching element(s) instead of 1.\r\nStack Trace:\r\n   at Microsoft.AspNetCore.SignalR.Client.Tests.LongPollingTransportTests.LongPollingTransportSendsAvailableMessagesWhenTheyArrive() in /_/test/Microsoft.AspNetCore.SignalR.Client.Tests/LongPollingTransportTests.cs:line 338\r\n   at Microsoft.AspNetCore.SignalR.Client.Tests.LongPollingTransportTests.LongPollingTransportSendsAvailableMessagesWhenTheyArrive() in /_/test/Microsoft.AspNetCore.SignalR.Client.Tests/LongPollingTransportTests.cs:line 343\r\n```\r\n\r\nThe fix is simple."},{"Id":"7495650669","Type":"PullRequestEvent","CreatedAt":"2018-04-07T23:24:37","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1898","RelatedDescription":"Opened pull request \"Buffer messages so we get a single outgoing request\" (#1898) at aspnet/SignalR","RelatedBody":"Fixes #1897"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7494399310","Type":"IssuesEvent","CreatedAt":"2018-04-07T09:11:38","Actor":"JerryBian","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7612","RelatedDescription":"Opened issue \"fail to apply Guid route constraint?\" (#7612) at aspnet/Mvc","RelatedBody":"I am not quite sure whether I did it wrong. From [doc](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/routing#route-constraint-reference) it seems following is valid for routing, but when I tried to access it always return 404.\r\n\r\n```\r\n[Route(\"/test/{id:guid}\")]\r\npublic IActionResult Test([FromRoute]Guid id)\r\n{\r\n    Trace.TraceInformation(id.ToString());\r\n    return Ok();\r\n}\r\n```\r\n\r\ne.g. http://localhost:63950/test/826510d7-00b7-42cc-aeea-6f455f19ec4b\r\n\r\nDo I need to setup somewhere to enable Guid support for routing? Thanks."},{"Id":"7494351185","Type":"IssuesEvent","CreatedAt":"2018-04-07T08:32:48","Actor":"j0nimost","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7611","RelatedDescription":"Opened issue \"Encrypt the Secrets.JSON \" (#7611) at aspnet/Mvc","RelatedBody":"Recently as i was working on a team project I saw a developer store encryption Keys in the Secrets.Json for sure this is not advisable but according to him storing the Key inside a class then pushing the code to a version control accessible to other team members was worse. Obviously this meant he had to access the Secrets.JSON at all times be it in Production or Development environments. I would be nice to have the Secrets.JSON encrypted and Partially accessible that is only certain Json Objects are accessible at run time in regardless of the environment. "},{"Id":"7493500736","Type":"IssuesEvent","CreatedAt":"2018-04-06T22:39:27","Actor":"PaulParker","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7610","RelatedDescription":"Opened issue \"Custom error page for exceptions in .cshtml view files\" (#7610) at aspnet/Mvc","RelatedBody":"We're using `UseStatusCodePagesWithReExecute()` successfully to send users to our custom error page on exceptions in controllers, but for errors in razor/cshtml views `UseStatusCodePagesWithReExecute()` doesn't seem to do anything.\r\n\r\nIs there a way to send users to our error page if the exception originates in a view?"},{"Id":"7492933259","Type":"IssuesEvent","CreatedAt":"2018-04-06T20:07:02","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7609","RelatedDescription":"Opened issue \"ApiBehaviorApplicationModelProvideroverwrites existing BindingInfo in entirety when inferring binding sources\" (#7609) at aspnet/Mvc","RelatedBody":"Problematic code: https://github.com/aspnet/Mvc/blob/dev/src/Microsoft.AspNetCore.Mvc.Core/Internal/ApiBehaviorApplicationModelProvider.cs#L180-L186"},{"Id":"7492358499","Type":"IssuesEvent","CreatedAt":"2018-04-06T18:01:49","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7605","RelatedDescription":"Closed issue \"Routes are not found when using Microsoft.AspNetCore.All\" (#7605) at aspnet/Mvc","RelatedBody":"In the benchmarks app    \r\n\r\n```\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"$(BenchmarksAspNetCoreVersion)\" />\r\n```\r\n\r\nI can't reach mvc endpoints, but when I use\r\n```\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"$(BenchmarksAspNetCoreVersion)\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv\" Version=\"$(BenchmarksAspNetCoreVersion)\" />\r\n```\r\nThen mvc is enabled, but I get a 404 and a debug message stating no route matched.\r\n\r\nThis application uses attribute routing, so I assume the controller is not found in this case.\r\nAll other middleware work as expected.\r\nI tried with the latest aspnet core version and also a one week old one.\r\n\r\nNote: I have not yet tried the templates to repro ... doing it now"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7492778643","Type":"IssuesEvent","CreatedAt":"2018-04-06T19:31:43","Actor":"ivanstamenic","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1740","RelatedDescription":"Opened issue \"RoleManager.CreateAsync throw an Exception when role with the same name already exists.\" (#1740) at aspnet/Identity","RelatedBody":"When role with the same name already exists _RoleManager.CreateAsync_ throw an Exception \"Object reference not set to an instance of an object.\"."},{"Id":"7489319127","Type":"IssuesEvent","CreatedAt":"2018-04-06T07:09:37","Actor":"maxwang","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1739","RelatedDescription":"Opened issue \"Cookie is broken when there are too many permission for a user. \" (#1739) at aspnet/Identity","RelatedBody":"Dear Sir/Madam,\r\n\r\nWe use Asp.Net Identity framework as our ACL and wrote some custom code to fit our requirement.  The framework works fine. We use Claims-based authorisation. \r\n\r\nWe found a very strange issue today. There is a user who belongs many roles which have lots of permission claims. And this use keep getting:\r\n\r\n \"HTTP Error 400. The size of the request headers is too long.\" error. \r\n\r\nAnd I checked and found there are some ASP.Net core identity cookies as attached image:\r\n\r\n![img_04042018_090514_0](https://user-images.githubusercontent.com/716782/38407080-6edc3942-39bb-11e8-819f-f43c2bb9272a.png)\r\n\r\nI manually removed cookie and that user could work for a while. And I also found this only happens after second AJAX call (not cross domain AJAX call).\r\n\r\nAfter I remove this user from some roles and only keep one or two roles for him, everything works perfectly.\r\n\r\nMy development environment is .Net Core 1.1. \r\n\r\nDoes anyone have some idea on this issue?\r\n\r\nThanks.\r\n\r\nRegards,\r\nMax\r\n"},{"Id":"7488380870","Type":"IssuesEvent","CreatedAt":"2018-04-06T00:53:37","Actor":"mderriey","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1738","RelatedDescription":"Opened issue \"Would it be possible to separate the Compat DbContext and CookieInterop classes in separate NuGet packages?\" (#1738) at aspnet/Identity","RelatedBody":"Hi there :wave:,\r\n\r\nWe have an existing EF6-, Identity v2-based solution that targets .NET 4.5.1.\r\n\r\nWe want to create a new ASP.NET Core 2.0 application that targets the same database.\r\nSince ASP.NET Core only supports Identity v3, it means the schema needs to be updated.\r\n\r\nThis is where the `Microsoft.AspNet.Identity.AspNetCoreCompat` comes into play.\r\nFrom what I understand, this package allows an application based on Identity v2 to be compatible with the Identity v3 schema. This is done by using the classes in that package.\r\n\r\nNow, in our case, since we want to keep the Identity v2 bits running as-is, we're not interested in sharing cookies between the v2 and v3 app. Still, the package comes with the OWIN-compatible secure data format that allows it to decrypt cookies issues with the new .NET Core DataProtection stack.\r\n\r\nThis has two implications for us:\r\n\r\n - The need to upgrade every single project that uses the ASP.NET Identity v2 to .NET 4.6.1 to be able to install the NuGet package\r\n - Since it depends on the new DataProtection stack and the OWIN-interop, it installs 27 dependent packages that we don't use\r\n\r\nIs there a possibility to separate these two capabilities in separate NuGet packages?\r\n"},{"Id":"7488264414","Type":"IssuesEvent","CreatedAt":"2018-04-06T00:08:03","Actor":"kichalla","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1737","RelatedDescription":"Opened issue \"[Preview2-Validation] Pages under Account/Manage loose the 'Title' information from ViewData\" (#1737) at aspnet/Identity","RelatedBody":"For example, when we go to `Manage` page, we should see the title of the html page to be like `Profile - <application-name>` but we only get ` - <application-name>`.\r\n\r\n@pranavkm and I debugged through this and think that the cause of this issue could be with how Identity UI uses a model type(abstract) on the view versus the actual type(implementation). Following line of code is a suspect:\r\nhttps://github.com/aspnet/Mvc/commit/7127bb5dbbb07eb325a2852ac9a91be0cf443205#diff-0901f55a5e636aeef89b9663dafcb625R171"},{"Id":"7487312237","Type":"IssuesEvent","CreatedAt":"2018-04-05T20:02:18","Actor":"dougbu","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1736","RelatedDescription":"Opened issue \"/Identity/Account/ResetPassword page is not reachable when auth required globally\" (#1736) at aspnet/Identity","RelatedBody":"Looks like at least one page was missed when fixing #1617 \r\n## Repro steps\r\n1. `dotnet new mvc --name netcoreIndividualAuth --auth Individual --use-local-db` (doubt `--use-local-db` is mandatory)\r\n2. `cd netcoreIndividualAuth`\r\n3. Open project in Visual Studio\r\n4. Edit `Startup.ConfigureServices(...)` to require an authenticated user globally i.e. change `services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);` to\r\n  ``` c#\r\n  services\r\n      .AddMvc(configuration =>\r\n      {\r\n          var policy = new AuthorizationPolicyBuilder()\r\n              .RequireAuthenticatedUser()\r\n              .Build();\r\n          configuration.Filters.Add(new AuthorizeFilter(policy));\r\n      })\r\n      .SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n  ```\r\n\r\n5. Start app in the debugger\r\n6. Ensure debug option \"Enable Just My Code\" is disabled and \"Microsoft Symbol Servers\" are enabled under \"Symbols\"\r\n7. Set C# function breakpoint at `Microsoft.AspNetCore.Identity.UI.Services.EmailSender.SendEmailAsync` \r\n8. In browser, register a new user\r\n9. In debugger, copy the URL in the `htmlMessage` parameter\r\n10. In browser, head to the copied URL but change `&amp;code` to `&code`\r\n11. In browser, log out, click on \"Forgot your password\", then enter the new user's email and click Submit\r\n12. In debugger, copy the URL in the `htmlMessage` parameter\r\n13. In browser, head to the copied URL\r\n\r\n### Expected\r\n- Land on /Identity/Account/ForgotPasswordConfirmation page after step 11\r\n- Land on /Identity/Account/ResetPassword page after step 13\r\n### Actual\r\nRedirected to the login page again in both cases i.e. both page models lack `[AllowAnonymous]` though the lack in /Identity/Account/ResetPassword is more troublesome.\r\n\r\n----\r\nThis is a small part of #1617 which does not work end-to-end. Found while verifying (aspnet/Release#263) with the 2.1.300-preview2-008523 SDK and Microsoft.AspNetCore.Identity.UI 2.1.0-preview2-30552."},{"Id":"7482980019","Type":"IssuesEvent","CreatedAt":"2018-04-05T05:13:01","Actor":"DamianEdwards","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1735","RelatedDescription":"Opened issue \"Localize the default UI\" (#1735) at aspnet/Identity","RelatedBody":"Now that we have Identity UI in a library, we should consider having it use `IViewLocalizer` and `IStringLocalizer` to support localization of the various strings. I think it might be possible to just wrap all strings with calls to these interfaces, but **not** provide any resources, but rather have them picked up via the app if they're provided and configured correctly (we added features in 2.0 if I recall to enable this scenario)."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7495832518","Type":"PullRequestEvent","CreatedAt":"2018-04-08T01:56:00","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2472","RelatedDescription":"Merged pull request \"Remove IConnection\" (#2472) at aspnet/KestrelHttpServer","RelatedBody":"ConnectionContext is now the exchange type on the client and server.\r\n\r\nSee @pakrym I told you it would go away 😜 "},{"Id":"7495769317","Type":"PullRequestEvent","CreatedAt":"2018-04-08T01:05:56","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2472","RelatedDescription":"Opened pull request \"Remove IConnection\" (#2472) at aspnet/KestrelHttpServer","RelatedBody":"ConnectionContext is now the exchange type on the client and server"},{"Id":"7493427851","Type":"PullRequestEvent","CreatedAt":"2018-04-06T22:15:13","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2471","RelatedDescription":"Opened pull request \"Skip flaky tests\" (#2471) at aspnet/KestrelHttpServer","RelatedBody":"Skip tests from #2434 and #2464."},{"Id":"7493032038","Type":"IssuesEvent","CreatedAt":"2018-04-06T20:30:18","Actor":"joshmackey","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2470","RelatedDescription":"Opened issue \"1000ms delay when only IPv4 address is used when specifying ListenOptions for Kestrel.\" (#2470) at aspnet/KestrelHttpServer","RelatedBody":"I've noticed that http requests to Kestrel take at least 1000ms if only a IPv4 endpoint is bound to. If a request normally takes 15ms, it will take 1015ms instead.\r\n\r\nIf you use `UseKestrel()` on its own, it automatically listens to the localhost IPv4 and IPv6 addresses. If you manually specify addresses using `KestrelServerOptions` but only specify a single `Listen` with an IPv4, then you see the bug. If you add a second endpoint that uses IPv6, the bug goes away.\r\n\r\n\r\nUsing a default ASP.NET Core 2 template from VS 2017:\r\n\r\nNo bug\r\n```\r\n.UseKestrel((options) =>\r\n            {\r\n                options.Listen(IPAddress.Loopback, 5000);\r\n                options.Listen(IPAddress.IPv6Loopback, 5000);\r\n            })\r\n```\r\n\r\nBug\r\n```\r\n.UseKestrel((options) =>\r\n            {\r\n                options.Listen(IPAddress.Loopback, 5000);\r\n            })\r\n```\r\n"},{"Id":"7492414240","Type":"IssuesEvent","CreatedAt":"2018-04-06T18:13:46","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2469","RelatedDescription":"Opened issue \"Flaky test: RejectsConnectionsWhenLimitReached\" (#2469) at aspnet/KestrelHttpServer","RelatedBody":"This test fails with the following error:\r\n```\r\nSystem.TimeoutException : The operation at /_/test/shared/TestConnection.cs:129 timed out after reaching the limit of 60000ms.\r\n   at Microsoft.AspNetCore.Testing.TaskExtensions.<TimeoutAfter>d__0`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Testing.TestConnection.<Receive>d__21.MoveNext() in /_/test/shared/TestConnection.cs:line 131\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ConnectionLimitTests.<RejectsConnectionsWhenLimitReached>d__2.MoveNext() in /_/test/Kestrel.FunctionalTests/ConnectionLimitTests.cs:line 113\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\nThis is part of an overall issue whose members can all be viewed [here](http://aspnetci/httpAuth/app/rest/builds?locator=tag:timeout,sinceDate:201710010T000000-0001&fields=build(startDate,buildTypeId,status,branchName,webUrl,tags))."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7493344010","Type":"IssuesEvent","CreatedAt":"2018-04-06T21:50:26","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2246","RelatedDescription":"Opened issue \"dotnet build includes a refs directory containing all binaries from the shared fx\" (#2246) at aspnet/Razor","RelatedBody":"1. `dotnet new mvc`\r\n2. `dotnet build`\r\n\r\nThere's a refs directory in the `bin\\debug\\netcoreapp2.1` directory containing a slew of files from `Microsoft.NETCore.App` and `Microsoft.AspNetCore.App`."},{"Id":"7492249076","Type":"IssuesEvent","CreatedAt":"2018-04-06T17:38:02","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2245","RelatedDescription":"Closed issue \"extra space when using condition in Razor.\" (#2245) at aspnet/Razor","RelatedBody":"I have this code in my layout file\r\n```\r\n @if (condition1)\r\n    {\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css\" rel=\"stylesheet\" />\r\n    }\r\n    else\r\n    {\r\n        <style>\r\n           // my extra css\r\n        </style>\r\n    }\r\n```\r\nThis thing render with a extra indent. The indent is used for Visual studio format. So in case I have 17 line. Line inside this condition rendered with a extra indent. Is this could be fixed.\r\n\r\nThanks"},{"Id":"7490081599","Type":"IssuesEvent","CreatedAt":"2018-04-06T10:08:55","Actor":"anirugu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2245","RelatedDescription":"Opened issue \"extra space when using condition in Razor.\" (#2245) at aspnet/Razor","RelatedBody":"I have this code in my layout file\r\n\r\n @if (condition1)\r\n    {\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css\" rel=\"stylesheet\" />\r\n    }\r\n    else\r\n    {\r\n        <style>\r\n           // my extra css\r\n        </style>\r\n    }\r\n\r\nThis thing render with a extra indent. The indent is used for Visual studio format. So in case I have 17 line. Line inside this condition rendered with a extra indent. Is this could be fixed.\r\n\r\nThanks"},{"Id":"7487958066","Type":"PullRequestEvent","CreatedAt":"2018-04-05T22:27:06","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2244","RelatedDescription":"Merged pull request \"Add experimental flag to un-special-case data-\" (#2244) at aspnet/Razor","RelatedBody":"This change allows blazor to opt into treating data- attributes the same\r\nway as normal attributes in the parser."},{"Id":"7487956782","Type":"PullRequestEvent","CreatedAt":"2018-04-05T22:26:44","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2242","RelatedDescription":"Merged pull request \"Add support for type parameters to class nodes\" (#2242) at aspnet/Razor","RelatedBody":"This change will allow someone extending Razor to use generic type\r\nparameters in generated classes.\r\n\r\nThere's no user-level extensibility provided here yet, as in there is no\r\nlanguage support for adding type parameters."},{"Id":"7487904451","Type":"IssuesEvent","CreatedAt":"2018-04-05T22:12:18","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2119","RelatedDescription":"Closed issue \"Razor Sdk: Require docs on various available settings and instructions for users to use the Sdk in a class library\" (#2119) at aspnet/Razor","RelatedBody":"We need some documentation for various settings for the Sdk. In addition, the fwlink https://go.microsoft.com/fwlink/?linkid=868374 needs to include details on how to get the right set of additional references to use the Sdk\r\n\r\n### Wiring up the Sdk\r\n* [ ] RazorCompileOnBuild\r\n* [ ] RazorCompileOnPublish\r\n\r\n### Inputs and outputs\r\n* [ ] EnableDefaultContentItems \r\n* [ ] EnableDefaultRazorGenerateItems\r\n* [ ] GenerateRazorTargetAssemblyInfo\r\n* [ ] EnableDefaultRazorTargetAssemblyInfoAttributes\r\n* [ ] RazorGenerate\r\n* [ ] RazorCompile\r\n* [ ] RazorAssemblyAttribute\r\n* [ ] RazorTargetName\r\n* [ ] RazorOutputPath\r\n* [ ] CopyRazorGenerateFilesToPublishDirectory\r\n* [ ] CopyRefAssembliesToPublishDirectory\r\n* [ ] IncludeRazorContentInPack\r\n* [ ] EmbedRazorGenerateSources\r\n\r\n### Sdk lifecycle targets and properties\r\n* [ ] RazorGenerate\r\n* [ ] RazorCompile\r\n* [ ] RazorCompileToolset\r\n* [ ] UseRazorBuildServer\r\n* [ ] CustomBeforeRazorSdkTargets \\ CustomAfterRazorSdkTargets"},{"Id":"7487829208","Type":"PullRequestEvent","CreatedAt":"2018-04-05T21:52:58","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2244","RelatedDescription":"Opened pull request \"Add experimental flag to un-special-case data-\" (#2244) at aspnet/Razor","RelatedBody":"This change allows blazor to opt into treating data- attributes the same\r\nway as normal attributes in the parser."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7369868082","Type":"IssuesEvent","CreatedAt":"2018-03-13T05:33:42","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067) at aspnet/Tooling","RelatedBody":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."},{"Id":"7390872316","Type":"IssuesEvent","CreatedAt":"2018-03-16T13:54:05","Actor":"mnmr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Opened issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":15,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":98,"FavoriteCount":55,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":160,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":4,"RawContent":null},{"Id":"974274384792866817","CreatedAt":"2018-03-15T13:21:29+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/vJe8zHT12j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null},{"Id":"973691520728510464","CreatedAt":"2018-03-13T22:45:23+00:00","UserScreenname":"aspnet","Text":"Starting now... join us for the weekly #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":12,"RawContent":null},{"Id":"973553523186159621","CreatedAt":"2018-03-13T13:37:02+00:00","UserScreenname":"aspnet","Text":"Today, Jeff shows you how to use dependency injection with web forms... check it out! https://t.co/viqZ28DBrV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":9,"RawContent":null},{"Id":"973350716046626816","CreatedAt":"2018-03-13T00:11:09+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"972484011556818945","CreatedAt":"2018-03-10T14:47:10+00:00","UserScreenname":"aspnet","Text":"Be sure to check out Jeff's live coding stream this morning to see more about our #ASP.NET Core 2.1 preview release. https://t.co/EtKk0fMOgU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2018-04-08T05:30:09.7271671Z","RunDurationInMilliseconds":8352}