{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null},{"Title":"January 2018 Preview of Quality Rollup","PublishedOn":"2018-01-27T00:52:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the January 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Behavior change of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/26/january-2018-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."},{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7325022971","Type":"PullRequestEvent","CreatedAt":"2018-03-03T03:15:22","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15777","RelatedDescription":"Merged pull request \"Implement Shuffle* Sse2 Intel hardware intrinsics \" (#15777) at dotnet/coreclr","RelatedBody":"Fixes #16714  "},{"Id":"7325022963","Type":"IssuesEvent","CreatedAt":"2018-03-03T03:15:22","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16714","RelatedDescription":"Closed issue \"Make codegen of all HW intrinsics with changing number of args in signature resilient to using exact numArgs value\" (#16714) at dotnet/coreclr","RelatedBody":"Some HW intrinsics have signatures with number of arguments varying depending on base type. To handle this table used in codegen allows passing -1 in `numArgs` field to indicate this behavior.  After changes to \r\n```\r\nint Compiler::numArgsOfHWIntrinsic(NamedIntrinsic intrinsic, GenTreeHWIntrinsic* node)\r\n```\r\nimplementation some of this intrinsics hit asserts. To avoid this temporary solution is to limit new path execution only to those intrinsics which need information about exact number of arguments.\r\n\r\nThis issue tracks work item in which fix to all `-1` intrinsic should be applied and temporary solution removed from  `numArgsOfHWIntrinsic` implementation."},{"Id":"7325019067","Type":"PullRequestEvent","CreatedAt":"2018-03-03T03:12:31","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16730","RelatedDescription":"Opened pull request \"Update CoreFx to preview2-26303-01 (master)\" (#16730) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7325017165","Type":"PullRequestEvent","CreatedAt":"2018-03-03T03:11:07","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16729","RelatedDescription":"Opened pull request \"Replace install with _install in all superpmi CMakeLists.txt files\" (#16729) at dotnet/coreclr","RelatedBody":"Currently, we don't build cross-architecture superpmi when running on Linux (as defined in crosscomponents.cmake), but we continue installing them in superpmi CMakeLists.txt files which causes CMake errors during build. For example, when running the following command: `build.sh arm checked cross crosscomponent`\r\n\r\nThis PR will replace `install` with `_install` in superpmi CMakeLists.txt files which install only if we are NOT building cross-architecture components (i.e., if we do native build)\r\n \r\n@BruceForstall @dotnet/jit-contrib @janvorli PTAL"},{"Id":"7324992496","Type":"PullRequestEvent","CreatedAt":"2018-03-03T02:57:24","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16728","RelatedDescription":"Opened pull request \"[ARM32] RyuJIT support for profiler ELT callbacks \" (#16728) at dotnet/coreclr","RelatedBody":"The second part of #16565.\r\n\r\nFixes out internal tests for arm32, cc @sywhang . \r\n\r\nPTAL @dotnet/arm32-contrib "},{"Id":"7324927967","Type":"IssuesEvent","CreatedAt":"2018-03-03T02:12:36","Actor":"4creators","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16712","RelatedDescription":"Closed issue \"HW Intrinsics SSE2 template tests fail fast after first error instead of executing full suite and reporting all errors\" (#16712) at dotnet/coreclr","RelatedBody":"If one of the tests in suite fails program stops execution and prints all executed tests til the test with the first error. This causes that all tests which should be executed after failing test  are not runing.\r\n\r\n@tannergooding @fiigii \r\n\r\n```\r\ne:\\src\\ms\\dotnet\\coreclr>e:\\src\\ms\\dotnet\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\JIT\\HardwareIntrinsics\\X86\\Sse2\\Sse2_ro\\Sse2_ro.cmd\r\nBEGIN EXECUTION\r\n \"e:\\src\\ms\\dotnet\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\corerun.exe\" Sse2_ro.exe\r\nRunning Add.Double test...\r\nRunning Add.Byte test...\r\nRunning Add.Int16 test...\r\nRunning Add.Int32 test...\r\nRunning Add.Int64 test...\r\nRunning Add.SByte test...\r\nRunning Add.UInt16 test...\r\nRunning Add.UInt32 test...\r\nRunning Add.UInt64 test...\r\nRunning And.Double test...\r\nRunning And.Byte test...\r\nRunning And.Int16 test...\r\nRunning And.Int32 test...\r\nRunning And.Int64 test...\r\nRunning And.SByte test...\r\nRunning And.UInt16 test...\r\nRunning And.UInt32 test...\r\nRunning And.UInt64 test...\r\nRunning AndNot.Double test...\r\nRunning AndNot.Byte test...\r\nRunning AndNot.Int16 test...\r\nRunning AndNot.Int32 test...\r\nRunning AndNot.Int64 test...\r\nRunning AndNot.SByte test...\r\nRunning AndNot.UInt16 test...\r\nRunning AndNot.UInt32 test...\r\nRunning AndNot.UInt64 test...\r\nRunning CompareEqual.Double test...\r\nRunning CompareEqual.Byte test...\r\nRunning CompareEqual.Int16 test...\r\nRunning CompareEqual.Int32 test...\r\nRunning CompareEqual.SByte test...\r\nRunning CompareEqual.UInt16 test...\r\nRunning CompareEqual.UInt32 test...\r\nRunning CompareGreaterThan.Double test...\r\nRunning CompareGreaterThan.Int16 test...\r\nRunning CompareGreaterThan.Int32 test...\r\nRunning CompareGreaterThan.SByte test...\r\nRunning CompareGreaterThanOrEqual.Double test...\r\nRunning CompareLessThan.Double test...\r\nRunning CompareLessThan.Int16 test...\r\nRunning CompareLessThan.Int32 test...\r\nRunning CompareLessThan.SByte test...\r\nRunning CompareLessThanOrEqual.Double test...\r\nRunning CompareNotEqual.Double test...\r\nRunning CompareNotGreaterThan.Double test...\r\nRunning CompareNotGreaterThanOrEqual.Double test...\r\nRunning CompareNotLessThan.Double test...\r\nRunning CompareNotLessThanOrEqual.Double test...\r\nRunning CompareOrdered.Double test...\r\nRunning CompareUnordered.Double test...\r\nRunning Divide.Double test...\r\nRunning Max.Double test...\r\nRunning Max.Byte test...\r\nRunning Max.Int16 test...\r\nRunning Min.Double test...\r\nRunning Min.Byte test...\r\nRunning Min.Int16 test...\r\nRunning Multiply.Double test...\r\nRunning Or.Double test...\r\nRunning Or.Byte test...\r\nRunning Or.Int16 test...\r\nRunning Or.Int32 test...\r\nRunning Or.Int64 test...\r\nRunning Or.SByte test...\r\nRunning Or.UInt16 test...\r\nRunning Or.UInt32 test...\r\nRunning Or.UInt64 test...\r\nRunning Subtract.Double test...\r\nRunning Subtract.Byte test...\r\nRunning Subtract.Int16 test...\r\nRunning Subtract.Int32 test...\r\nRunning Subtract.Int64 test...\r\nRunning Subtract.SByte test...\r\nRunning Subtract.UInt16 test...\r\nRunning Subtract.UInt32 test...\r\nRunning Subtract.UInt64 test...\r\nRunning Xor.Double test...\r\nRunning Xor.Byte test...\r\nRunning Xor.Int16 test...\r\nRunning Xor.Int32 test...\r\nRunning Xor.Int64 test...\r\nRunning Xor.SByte test...\r\nRunning Xor.UInt16 test...\r\nRunning Xor.UInt32 test...\r\nRunning Xor.UInt64 test...\r\nRunning ShiftLeftLogical.Int16.1 test...\r\nRunning ShiftLeftLogical.UInt16.1 test...\r\nRunning ShiftLeftLogical.Int32.1 test...\r\nRunning ShiftLeftLogical.UInt32.1 test...\r\nRunning ShiftLeftLogical.Int64.1 test...\r\nRunning ShiftLeftLogical.UInt64.1 test...\r\nRunning ShiftLeftLogical.Int16.16 test...\r\nRunning ShiftLeftLogical.UInt16.16 test...\r\nRunning ShiftLeftLogical.Int32.32 test...\r\nRunning ShiftLeftLogical.UInt32.32 test...\r\nRunning ShiftLeftLogical.Int64.64 test...\r\nRunning ShiftLeftLogical.UInt64.64 test...\r\nRunning ShiftRightLogical.Int16.1 test...\r\nRunning ShiftRightLogical.UInt16.1 test...\r\nRunning ShiftRightLogical.Int32.1 test...\r\nRunning ShiftRightLogical.UInt32.1 test...\r\nRunning ShiftRightLogical.Int64.1 test...\r\nRunning ShiftRightLogical.UInt64.1 test...\r\nRunning ShiftRightLogical.Int16.16 test...\r\nRunning ShiftRightLogical.UInt16.16 test...\r\nRunning ShiftRightLogical.Int32.32 test...\r\nRunning ShiftRightLogical.UInt32.32 test...\r\nRunning ShiftRightLogical.Int64.64 test...\r\nRunning ShiftRightLogical.UInt64.64 test...\r\nRunning ShiftRightArithmetic.Int16.1 test...\r\nRunning ShiftRightArithmetic.Int32.1 test...\r\nRunning ShiftRightArithmetic.Int16.16 test...\r\nRunning ShiftRightArithmetic.Int32.32 test...\r\nRunning ShiftLeftLogical128BitLane.SByte.1 test...\r\n\r\nAssert failure(PID 16732 [0x0000415c], Thread: 7264 [0x1c60]): Assertion failed 'valInByte' in 'System.Runtime.Intrinsics.X86.Sse2:ShiftLeftLogical128BitLane(struct,ubyte):struct' (IL size 8)\r\n\r\n    File: e:\\src\\ms\\dotnet\\coreclr\\src\\jit\\emitxarch.cpp Line: 10846\r\n    Image: e:\\src\\ms\\dotnet\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n\r\nExpected: 100\r\nActual: 123456789\r\nEND EXECUTION - FAILED\r\nFAILED\r\n\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7325012533","Type":"IssuesEvent","CreatedAt":"2018-03-03T03:07:48","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8720","RelatedDescription":"Opened issue \"Installing a final version of an SDK should remove preview versions\" (#8720) at dotnet/cli","RelatedBody":"@onovotny commented on [Fri Mar 02 2018](https://github.com/dotnet/core-setup/issues/3770)\n\nSee this thread:\r\n\r\nhttps://twitter.com/DamianEdwards/status/969762795926429696\r\n\r\nIssue is that after a while, users wind up with tons of preview SDK's (either due to direct install or by being chained into a VS Preview channel update). They never get uninstalled.\r\n\r\nInstalling the final version of an SDK should remove the corresponding preview versions as it's very unlikely that a user would intend on having the older previews alongside.\r\n\r\n/cc @nickcraver\r\n\n\n"},{"Id":"7324739923","Type":"IssuesEvent","CreatedAt":"2018-03-03T00:32:34","Actor":"rakeshsinghranchi","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8714","RelatedDescription":"Closed issue \"dotnet store command fails when --output path has whitespace \" (#8714) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Create manifest csproj file as below : ( packages.csproj)\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Moq\" Version=\"4.7.63\" />\r\n  </ItemGroup>\r\n</Project>\r\n2. Run command : \r\ndotnet store --manifest packages.csproj --runtime win10-x64 --framework netcoreapp2.1 --framework-version 2.1.0-preview1-26216-03 --output \"C:\\**Program Files**\\dotnet\\store\"\r\n\r\n## Expected  behavior\r\ndotnet store command executes successfully and provisions the nuget packages under c:\\program files\\dotnet\\\r\n\r\n## Actual behavior\r\ndotnet store command fails to execute : \r\nC:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ComposeStore.targets(269,5): error MSB3191: Unable to create directory \"C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.1\\\". Access to the path 'C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.1\\' is denied. [C:\\Users\\raksingh\\packages.csproj]\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.300-preview1-008174)\r\n\r\nProduct Information:\r\n Version:            2.1.300-preview1-008174\r\n Commit SHA-1 hash:  b8df89a54f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26216-03\r\n  Build    : f2c3216183d20416568a4bbf5bb7d153e826f153\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7324607244","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:39:20","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8657","RelatedDescription":"Merged pull request \"Updating the WebSdk version to 2.1.300-preview2-20180221-1406058\" (#8657) at dotnet/cli","RelatedBody":"Package available here - https://dotnet.myget.org/feed/dotnet-web/package/nuget/Microsoft.NET.Sdk.Web/2.1.300-preview2-20180221-1406058\r\n\r\nWebsdk will have similar package version numbers as .NETSdk going forward.\r\n\r\n@livarcocc \r\n"},{"Id":"7324605590","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:38:44","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8706","RelatedDescription":"Merged pull request \"Update 2.0 test templates for the 15.7 test SDK\" (#8706) at dotnet/cli","RelatedBody":"Carries the update made by @abhishkk in https://github.com/dotnet/templating/pull/1433"},{"Id":"7324588481","Type":"IssuesEvent","CreatedAt":"2018-03-02T23:32:39","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/6812","RelatedDescription":"Closed issue \"dotnet publish won't embed edmx resources\" (#6812) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Create new ASP.NET Core Web Application (.NET Framework),\r\n2. Add new Project to solution (Visual C# > Windows Classic Desktop) and select Class Library (.NET Framework),\r\n3. Add EntityFramework 6.1.3 as a reference to previously added class library,\r\n4. Add new Item to class library (Visual C# Items > Data > ADO.NET Entity Data Model),\r\n5. Choose Model Contents -> EF Designer from database, select any of your database, also select that you want to use \"Entity Framework 6.x\", and choose at least one table to include in your model, in this step VS will create EDMX file,\r\n6. Add reference to project \"class library\" from WebApplication,\r\n7. Build whole solution with Visual Studio, go to bin directory in Class Library folder, and open this library with any resource viewer (resedit, ILSpy), notice that few resources are embedded (*.msl, *.csdl, *.ssdl),\r\n8. Restore nuget packages \"nuget restore Solution.sln\" and publish solution with \"dotnet publish Solution.sln\", go to bin directory in Class Library folder, and open this library with any resource viewer (resedit, ILSpy), notice that embedded resources are missing.\r\n\r\n## Expected  behavior\r\n\"dotnet publish\" and \"MSBuild\" should produce same libraries.\r\n\r\n## Actual behavior\r\nClass library produced by \"dotnet publish\" is without embedded resources.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (1.0.4)\r\n\r\nProduct Information:\r\n Version:            1.0.4\r\n Commit SHA-1 hash:  af1e6684fd\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\1.0.4\r\n\r\n\r\n`nuget` output:\r\nNuGet Version: 4.1.0.2450\r\n\r\n[WebApplication1.zip](https://github.com/dotnet/cli/files/1063458/WebApplication1.zip)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7325056263","Type":"IssuesEvent","CreatedAt":"2018-03-03T03:40:33","Actor":"mperdeck","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/663","RelatedDescription":"Opened issue \"When running ASP.NET Core web site targeting net47 in IIS, dotnet.exe does not appear in process list\" (#663) at dotnet/standard","RelatedBody":"I just converted a large legacy site to Net Core. Because of some old code, I have to target net47 instead of netcoreapp2.0 / netstandard2.0.\r\n\r\nProblem is that when I run the site in IIS, it starts up correctly, but then I cannot attach the debugger. The process list (Debug | Attach to process) does not show the dotnet.exe process at all.\r\n\r\nTo investigate this:\r\n* I created a new ASP.NET Core web application in Visual Studio 2017 targeting netcoreapp2.0, \r\n* published it (dotnet publish) and \r\n* pointed my IIS web site to the published directory. \r\n\r\nAfter hitting the site, I was able to attach to the dotnet.exe process ok.\r\n\r\n````\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  \r\n  <!-- dotnet.exe shows up in process list in Visual Studio 2017 -->\r\n  \r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.3\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n````\r\n\r\nI then retargeted it to net47 because that is what my site uses. \r\n* Because Microsoft.AspNetCore.All does not support net47, I replaced it with enough individual packages to make the site compile. \r\n* Published it (dotnet publish -f net47). \r\n* Pointed the IIS site to the new net47 published directory. \r\n\r\nI could load the site ok and navigate around. However, dotnet.exe no longer appeared in the process list.\r\n\r\n````\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  \r\n  <!-- dotnet.exe does NOT show up in process list in Visual Studio 2017 -->\r\n  \r\n  <PropertyGroup>\r\n    <TargetFramework>net47</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Abstractions\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.BrowserLink\" Version=\"2.0.*\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n````\r\n\r\n\r\nIs there any way I can debug a site running in IIS that targets the Net Framework?\r\n\r\n"},{"Id":"7314708657","Type":"IssuesEvent","CreatedAt":"2018-03-01T08:29:09","Actor":"abdullahsalem","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/662","RelatedDescription":"Opened issue \"Standardizing XLIFF\" (#662) at dotnet/standard","RelatedBody":"I share @valdisiljuconoks this interest: https://github.com/Microsoft/XLIFF2-Object-Model/issues/28, and I think it's a good direction to support this standardized file format for a localization process.\r\n"},{"Id":"7312130000","Type":"PullRequestEvent","CreatedAt":"2018-02-28T19:57:32","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/661","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02528-05 (master)\" (#661) at dotnet/standard","RelatedBody":""},{"Id":"7312017249","Type":"IssuesEvent","CreatedAt":"2018-02-28T19:36:13","Actor":"mwilton","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/660","RelatedDescription":"Opened issue \"TimeZoneInfo for Samoa Standard Time doesn't match online documentation\" (#660) at dotnet/standard","RelatedBody":"Here are the properties of the Samoa Standard Time TimeZoneInfo object (+13):\r\n![image](https://user-images.githubusercontent.com/7872394/36808900-502351dc-1c7b-11e8-89ea-b0d9addaa71a.png)\r\n\r\nAnd here is Microsoft's online documentation (-11):\r\n![image](https://user-images.githubusercontent.com/7872394/36808960-75af3d62-1c7b-11e8-9e79-60ee13c891c5.png)\r\n\r\nWhich comes from:\r\nhttps://msdn.microsoft.com/en-us/library/ms912053(v=winembedded.10).aspx\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7325165719","Type":"IssuesEvent","CreatedAt":"2018-03-03T05:07:23","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27679","RelatedDescription":"Opened issue \"Improve test coverage of DateTime ParseExact with different DateTimeStyles\" (#27679) at dotnet/corefx","RelatedBody":"See https://github.com/dotnet/corefx/pull/27678 for context.\r\n\r\n@joperezr, @AlexGhiondea, @stephentoub, @jkotas "},{"Id":"7325165580","Type":"PullRequestEvent","CreatedAt":"2018-03-03T05:07:16","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27678","RelatedDescription":"Opened pull request \"Add DateTime ParseExact test with 'Allow White' styles\" (#27678) at dotnet/corefx","RelatedBody":"See https://github.com/dotnet/coreclr/pull/16718#discussion_r171988184 for context.\r\n\r\ncc @jkotas, @stephentoub \r\n\r\nAdded some test to cover RemoveLeadingInQuoteSpaces / RemoveTrailingInQuoteSpaces. There are other DateTimeStyles that are still not well covered."},{"Id":"7325154064","Type":"PullRequestEvent","CreatedAt":"2018-03-03T04:57:47","Actor":"mconnew","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26612","RelatedDescription":"Merged pull request \"Support Syndication Support Rss Optional Elements\" (#26612) at dotnet/corefx","RelatedBody":"Implementation and tests for supporting some RSS elements which we didn't previously support. This adds support for the following RSS feed elements:\r\n* `<docs>` Link to Uri explaining feed schema - Documentation\r\n* `<skipDays>` List of days for an aggregator to skip fetching - SkipDays\r\n* `<skipHours>` List of hours for an aggregator to not fetch the feed - SkipHours\r\n* `<textInput>` Describes an input field and url to submit some data to - TextInput\r\n* `<ttl>` How long the feed should be considered valid in a cache - TimeToLive\r\nThe TextInput is of type `SyndicationTextInput` which contains 4 fields matching the RSS spec. See [here](https://cyber.harvard.edu/rss/rss.html#lttextinputgtSubelementOfLtchannelgt) for details.\r\n\r\nThe API review for this change is #25718 and has been approved. This PR replaces #25625\r\nFixes #25718"},{"Id":"7325154058","Type":"IssuesEvent","CreatedAt":"2018-03-03T04:57:47","Actor":"mconnew","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/25718","RelatedDescription":"Closed issue \"New APIs for Accessing RSS Optional Elements\" (#25718) at dotnet/corefx","RelatedBody":"We proposed adding the following APIs to enable developers to easily read/write RSS optional elements (see http://cyber.harvard.edu/rss/rss.html#optionalChannelElements). We planned to add the APIs on .Net Core only, not in netstandard.\r\n\r\n```c#\r\nnamespace System.ServiceModel.Syndication\r\n{\r\n    public partial class SyndicationFeed\r\n    {\r\n        public SyndicationLink Documentation { get{ throw null; } set{ } }\r\n        public System.Collections.ObjectModel.Collection<string> SkipDays { get { throw null; } }\r\n        public System.Collections.ObjectModel.Collection<int> SkipHours { get { throw null; } }\r\n        public System.ServiceModel.Syndication.SyndicationTextInput TextInput { get { throw null; } set { } }\r\n        public int? TimeToLive { get { throw null; } set { } }\r\n    }\r\n    public partial class SyndicationTextInput\r\n    {\r\n        public string Description;\r\n        public System.ServiceModel.Syndication.SyndicationLink Link;\r\n        public string Name;\r\n        public string Title;\r\n        public SyndicationTextInput() { }\r\n    }\r\n}\r\n```"},{"Id":"7325064391","Type":"PullRequestEvent","CreatedAt":"2018-03-03T03:47:08","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27599","RelatedDescription":"Merged pull request \"Add tests for TypeForwardedFromAttribute\" (#27599) at dotnet/corefx","RelatedBody":"Fixes #27554"},{"Id":"7325043070","Type":"PullRequestEvent","CreatedAt":"2018-03-03T03:30:32","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27673","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#27673) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7325024340","Type":"IssuesEvent","CreatedAt":"2018-03-03T03:16:25","Actor":"benaadams","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27677","RelatedDescription":"Opened issue \"System.Transactions.Local.Tests 🔥 Linux x64 Release Build\" (#27677) at dotnet/corefx","RelatedBody":"Linux x64 Release Build\r\nOpenSuse.423.Amd64.Open:Release-x64\r\nSystem.Transactions.Local.Tests 🔥\r\n\r\n```\r\n\r\nDetails from Job ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226\r\nExitCode: -3 \r\nRan on Machine: jofortes-opensuse-test \r\nExecuted on jofortes-opensuse-test\r\nlix Script Runner v0.1 starting\r\npying execution payload files from /home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip to /home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Exec/execution\r\nofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip/System.Transactions.Local.Tests.dll' to '/home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Exec/execution/System.Transactions.Local.Tests.dll'\r\nofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip/xunit.console.netcore.exe' to '/home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Exec/execution/xunit.console.netcore.exe'\r\nofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip/RunTests.sh' to '/home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Exec/execution/RunTests.sh'\r\nofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip/xunit.console.netcore.runtimeconfig.json' to '/home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Exec/execution/xunit.console.netcore.runtimeconfig.json'\r\nofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip/System.Transactions.Local.Tests.pdb' to '/home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Exec/execution/System.Transactions.Local.Tests.pdb'\r\nofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip/DumplingHelper.py' to '/home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Exec/execution/DumplingHelper.py'\r\n /home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip/RunTests.sh /home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Payload\r\nme/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip\r\n----- start 02:25:09 =============== To repro directly: =====================================================\r\npushd /home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip\r\npython DumplingHelper.py install_dumpling\r\n__TIMESTAMP=`python DumplingHelper.py get_timestamp`\r\nchmod +x /home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Payload/dotnet\r\n/home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Payload/dotnet xunit.console.netcore.exe System.Transactions.Local.Tests.dll  -xml testResults.xml -notrait Benchmark=true -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests  -notrait category=OuterLoop -notrait category=failing\r\npython DumplingHelper.py collect_dump $\\ `pwd`  System.Transactions.Local.Tests /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Release+AGroup_x64+TestOuter_false_prtest/bin/runtime/netcoreapp-Linux-Release-x64/,/mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Release+AGroup_x64+TestOuter_false_prtest/bin/tests/System.Transactions.Local.Tests/netcoreapp-Linux-Release-x64/,/home/jofortes/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Payload,/lib/x86_64-linux-gnu/libgcc_s.so.1,/lib/x86_64-linux-gnu/libpthread.so.0,/lib/x86_64-linux-gnu/librt.so.1,/usr/lib/x86_64-linux-gnu/libunwind.so.8,/lib/x86_64-linux-gnu/libdl.so.2,/lib/x86_64-linux-gnu/libuuid.so.1,/usr/lib/x86_64-linux-gnu/libunwind-x86_64.so.8,/usr/lib/x86_64-linux-gnu/libstdc++.so.6,/lib/x86_64-linux-gnu/libm.so.6,/lib/x86_64-linux-gnu/libc.so.6,/lib64/ld-linux-x86-64.so.2,/lib/x86_64-linux-gnu/liblzma.so.5\r\npopd\r\n===========================================================================================================\r\n~/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip ~/dotnetbuild/work/ab3d3d99-d911-4dbc-bb9b-bcf3ee74d226/Work/6288c9a0-0d0b-41e7-b7c4-d4ef6369079a/Unzip\r\nDumpling cannot be installed due to: HTTP Error 403 Site Disabled\r\nxUnit.net console test runner (64-bit .NET Core)\r\nCopyright (C) 2014 Outercurve Foundation.\r\n\r\nDiscovering: System.Transactions.Local.Tests\r\nDiscovered:  System.Transactions.Local.Tests\r\nStarting:    System.Transactions.Local.Tests\r\n```\r\n\r\nSeen in https://github.com/dotnet/corefx/pull/27673"},{"Id":"7325015650","Type":"PullRequestEvent","CreatedAt":"2018-03-03T03:10:05","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27676","RelatedDescription":"Opened pull request \"Update CoreFx to preview2-26303-01 (master)\" (#27676) at dotnet/corefx","RelatedBody":""},{"Id":"7324993783","Type":"IssuesEvent","CreatedAt":"2018-03-03T02:58:24","Actor":"caozhiyuan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27675","RelatedDescription":"Opened issue \" 2.1 preview1 TaskCompletionSource TrySetResult  \" (#27675) at dotnet/corefx","RelatedBody":"when up to 2.1 preview1  run app in cmd dotnet run -c release -f netcoreapp2.1\r\nTaskCompletionSource TrySetResult  be blocked, in vs debug and release it's ok\r\n\r\nit's hard to write a mini repo\r\n\r\n```\r\n public sealed class TaskCompletionSource : TaskCompletionSource<int>\r\n    {\r\n        public static readonly TaskCompletionSource Void = CreateVoidTcs();\r\n\r\n        public TaskCompletionSource(object state)\r\n            : base(state)\r\n        {\r\n        }\r\n\r\n        public TaskCompletionSource()\r\n        {\r\n        }\r\n\r\n        public bool TryComplete()\r\n        {\r\n            Console.WriteLine(\"111\");\r\n            try\r\n            {\r\n\r\n                return this.TrySetResult(0);\r\n            }\r\n            finally\r\n            {\r\n                Console.WriteLine(\"22222222\");\r\n            }\r\n        }\r\n\r\n        public void Complete() => this.SetResult(0);\r\n\r\n        // todo: support cancellation token where used\r\n        public bool SetUncancellable() => true;\r\n\r\n        public override string ToString() => \"TaskCompletionSource[status: \" + this.Task.Status.ToString() + \"]\";\r\n\r\n        static TaskCompletionSource CreateVoidTcs()\r\n        {\r\n            var tcs = new TaskCompletionSource();\r\n            tcs.TryComplete();\r\n            return tcs;\r\n        }\r\n    }\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7325043486","Type":"IssuesEvent","CreatedAt":"2018-03-03T03:30:49","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25187","RelatedDescription":"Closed issue \"Allow 'ref readonly struct' for 'readonly ref struct'\" (#25187) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVisual Studio 2017 27428.0.d15.7\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a C# project for netcoreapp2.1\r\n2. Write a declaration of a ref struct:\r\n```C#\r\npublic readonly ref struct S { }\r\n```\r\n\r\n**Expected Behavior**:\r\nThe order of 'ref' and 'readonly' should not matter; I can either use 'readonly ref struct' or 'ref readonly struct' to declare readonly ref-like types.\r\n\r\n**Actual Behavior**:\r\n'ref readonly struct' is not allowed. looks like `ref struct` is a compound keyword like `partial class`."},{"Id":"7324936011","Type":"PullRequestEvent","CreatedAt":"2018-03-03T02:17:57","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25168","RelatedDescription":"Merged pull request \"Jenkins embedded pdb\" (#25168) at dotnet/roslyn","RelatedBody":"Infrastructure only change.\r\n\r\n[This change](https://github.com/dotnet/roslyn/commit/754630280a1f5c092b107909a2f7e829d8892e4e#diff-5784754bb70e21737b84a68a33ddef69) accidentally turned embedded PDBs off on Jenkins. Turn it back on to streamline Jenkins crash dump investigations."},{"Id":"7324934648","Type":"PullRequestEvent","CreatedAt":"2018-03-03T02:17:04","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25201","RelatedDescription":"Opened pull request \"WIP: Dsr dependency\" (#25201) at dotnet/roslyn","RelatedBody":"<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7324933961","Type":"PullRequestEvent","CreatedAt":"2018-03-03T02:16:33","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25200","RelatedDescription":"Closed pull request \"WIP: Dsr dependency\" (#25200) at dotnet/roslyn","RelatedBody":"<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7324932950","Type":"PullRequestEvent","CreatedAt":"2018-03-03T02:15:53","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25200","RelatedDescription":"Opened pull request \"WIP: Dsr dependency\" (#25200) at dotnet/roslyn","RelatedBody":"…nction parameter (#25147)\r\n\r\n* updated matrix for unreachable code case\r\n\r\n* more unreachable tests\r\n\r\n* updated comments\r\n\r\n* add support for local function\r\n\r\n<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7324899540","Type":"PullRequestEvent","CreatedAt":"2018-03-03T01:54:59","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25199","RelatedDescription":"Opened pull request \"Managed core targets\" (#25199) at dotnet/roslyn","RelatedBody":"<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7324921588","Type":"PullRequestEvent","CreatedAt":"2018-03-03T02:08:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5490","RelatedDescription":"Merged pull request \"Update dependencies\" (#5490) at dotnet/corert","RelatedBody":""},{"Id":"7324825500","Type":"PullRequestEvent","CreatedAt":"2018-03-03T01:12:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5490","RelatedDescription":"Opened pull request \"Update dependencies\" (#5490) at dotnet/corert","RelatedBody":""},{"Id":"7324823065","Type":"PullRequestEvent","CreatedAt":"2018-03-03T01:11:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5489","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5489) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7324796022","Type":"PullRequestEvent","CreatedAt":"2018-03-03T00:58:17","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5482","RelatedDescription":"Merged pull request \"Update buildtools\" (#5482) at dotnet/corert","RelatedBody":"Official build have been [failing](https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1433923) since the last buildtools update with\r\n\r\n```\r\n##[error]Required: 'SymbolServerType' input\r\n```\r\n\r\nI tried looking for `SymbolServerType` in CoreFX, buildtools, and in CoreFX build definitions, but found nothing so far. Going with a theory that this is something that existed, but doesn't anymore, and matching buildtoolsversion of CoreFX will fix that. If it won't, I have some more digging to do..."},{"Id":"7324660737","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:59:57","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5489","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5489) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7324618913","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:43:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5485","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5485) at dotnet/corert","RelatedBody":""},{"Id":"7324618445","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:43:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5488","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5488) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7324496091","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:01:06","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5488","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5488) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7324272698","Type":"PullRequestEvent","CreatedAt":"2018-03-02T21:59:07","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5487","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5487) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7324270473","Type":"PullRequestEvent","CreatedAt":"2018-03-02T21:58:33","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5487","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5487) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7324115139","Type":"IssuesEvent","CreatedAt":"2018-03-02T21:20:49","Actor":"h3x4d3c1m4l","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5486","RelatedDescription":"Opened issue \"Compiler does not honor Deterministic flag\" (#5486) at dotnet/corert","RelatedBody":"Using the defualt .NET Core 2.0 compiler, I can build my projects deterministically by creating a `Directory.Build.props` with the following contents:\r\n\r\n```\r\n<Project>\r\n    <PropertyGroup>\r\n        <Deterministic>true</Deterministic>\r\n        <Features>pdb-path-determinism</Features>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nThis means that if I rebuild the code without changing any of it, the new files have no differences with the old ones. If I build with CoreRT there are differences and the binaries contain the whole path to the pdb files instead of the relative path. It seems it ignores both properties from the PropertyGroup.\r\n\r\nAny plans to implement this or is there any workaround possible?"},{"Id":"7323730995","Type":"PullRequestEvent","CreatedAt":"2018-03-02T19:49:01","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5485","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5485) at dotnet/corert","RelatedBody":""},{"Id":"7323728704","Type":"PullRequestEvent","CreatedAt":"2018-03-02T19:48:31","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5484","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5484) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7320572920","Type":"PullRequestEvent","CreatedAt":"2018-03-02T08:00:50","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2017","RelatedDescription":"Opened pull request \"Merge release/2.1 to release/2.1.1xx\" (#2017) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into release/2.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-release/2.1.1xx\ngit reset --hard upstream/release/2.1.1xx\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-release/2.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7319493536","Type":"PullRequestEvent","CreatedAt":"2018-03-02T01:08:10","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2016","RelatedDescription":"Opened pull request \"Port fix for mismatched NuGet versions to release/2.1.1xx.\" (#2016) at dotnet/sdk","RelatedBody":"This commit ports the fix for the mismatched NuGet version numbers used by the\r\nSDK.\r\n\r\nSee https://github.com/dotnet/sdk/pull/1831 for the change into master."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"969672659385700354","CreatedAt":"2018-03-02T20:35:52+00:00","UserScreenname":"dotnet","Text":"It's not too late... Happening now: Miguel de Icaza's Developer Tools Reddit AMA. Ask him anything ab out what we'v… https://t.co/Ct6QA3l0FL","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"968893314832285697","CreatedAt":"2018-02-28T16:59:02+00:00","UserScreenname":"dotnet","Text":"And by \"check out\" @terrajobst really means: please subscribe :-) https://t.co/O2IOMK3aAU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":10,"RawContent":null},{"Id":"968549530395336704","CreatedAt":"2018-02-27T18:12:57+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1.0-preview1 now available https://t.co/jAZAQmZq7Q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":106,"RawContent":null},{"Id":"968549278879592449","CreatedAt":"2018-02-27T18:11:57+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework Core 2.1 Preview 1 https://t.co/myZTqqSPuJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":89,"FavoriteCount":69,"RawContent":null},{"Id":"968549057403604992","CreatedAt":"2018-02-27T18:11:04+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 2.1 Preview 1 https://t.co/YMrTQJHDhU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":514,"FavoriteCount":402,"RawContent":null}]}},"RunOn":"2018-03-03T05:30:27.922105Z","RunDurationInMilliseconds":11991}