{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel.Â Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing compatibility version in MVC","PublishedOn":"2018-02-27T22:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Ryan Nowak In 2.1 we&#8217;re adding a feature to address a long-standing problem for maintaining MVC &#8211; how do we make improvements to framework code without making it...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/introducing-compatibility-version-in-mvc/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Getting started with SignalR","PublishedOn":"2018-02-27T21:57:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Since 2013, ASP.NET developers have been using SignalR to build real-time web applications. Now, with ASP.NET Core 2.1 Preview 1, we&#8217;re bringing SignalR over to ASP.NET Core so you can build...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Using ASP.NET Core Previews on Azure App Service","PublishedOn":"2018-02-27T19:18:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are 3 options to get ASP.NET Core 2.1 Preview applications running on Azure App Service: Installing the Preview1 site extension Deploying your app self-contained Using Web Apps for Containers...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7387815508","Type":"IssuesEvent","CreatedAt":"2018-03-15T22:59:16","Actor":"jasondaicoder","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2965","RelatedDescription":"Opened issue \".net Core web application using DataProtection with redis as storage provider\" (#2965) at aspnet/Home","RelatedBody":"Hi guys,\r\n\r\nI have a .net core 2.0 web api project which is deployed as AWS Lambda using data protection with redis as storage provider. I followed the article https://docs.microsoft.com/en-us/aspnet/core/security/data-protection/configuration/overview?tabs=aspnetcore2x to set up. I also use x.509 certificate for the key encryption. However I always get the below errors during the startup.\r\n\r\n[Error] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: An exception occurred while processing the key element '<key id=\"a0604cb3-8f04-43f0-a9eb-a2ed5138a486\" version=\"1\" />'. \r\n\r\n[Warning] Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver: Key {a0604cb3-8f04-43f0-a9eb-a2ed5138a486} is ineligible to be the default key because its CreateEncryptor method failed. \r\n\r\nCan anyone give some advice?\r\n\r\nCheers\r\n\r\nJason"},{"Id":"7387782597","Type":"IssuesEvent","CreatedAt":"2018-03-15T22:49:44","Actor":"Antaris","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2964","RelatedDescription":"Opened issue \"[Advice] Tackling multi-tenancy with stock DI - open generics\" (#2964) at aspnet/Home","RelatedBody":"Hi team,\r\n\r\nI'm tackling a design around supporting multi-tenancy in my application. Up until now, I've entirely relied on the stock DI libraries for all my IoC needs. To handle multi-tenancy, I wanted to enable scenarios around service lifetime that segregates tenant-scoped services away from singletons, scoped and transient services.\r\n\r\nI know [saaskit](https://github.com/saaskit/saaskit) has gone a long way to provide a generic approach to multienancy, but, they've specifically built there DI story around StructureMap, which I am looking to avoid doing. In a future ideal world, I'd like my approach to multi-tenancy to support any DI container that .NET Core supports and is `IServiceProvider` compatible.\r\n\r\nMy current approach is to introduce a subclass of `ServiceDescriptor`: the `TenantScopedServiceDescriptor`. This descriptor supports a fixed lifetime scope of `Singleton`, so if the mutli-tenancy feature is disabled, any services registered with my `AddTenantScoped(...)` are singleton on the root provider.\r\n\r\nThe way I am planning to handle tenant-scoped services, was to create a new `IServiceProvider` on request, once a `TenantId` is resolved. This tenant-scoped provider is cached for the lifetime of the application, like `ApplicationServices`  is. Once I have the tenant-scoped service provider, the next logical step is to replace `RequestServices` with my own scoped instance from my tenant-scoped parent provider. This is handled through middleware.\r\n\r\nThe way this works under the hood, is when creating the tenant-scoped provider, I enumerate through all the available service registrations, and clone the service collection - except where I encounter a Singleton descriptor (which is not my `TenantScopedServiceDescriptor`). For singleton services, I create a new `ServiceDescriptor` which essentially delegates the instance resolution back to my root provider. The net effect should mean that transient and scoped services still behave as intended, but tenant-scoped services are resolved from my tenant-specific provider, and singletons from `ApplicationServices`:\r\n\r\n```\r\nIServiceCollection tenantServices = new ServiceCollection();\r\nforeach (var descriptor in services)\r\n{\r\n    if (descriptor.Lifetime != ServiceLifetime.Singleton)\r\n    {\r\n        // MA - Scoped and transient service descriptors can be added directly.\r\n        tenantServices.Add(descriptor);\r\n    }\r\n    else\r\n    {\r\n        if (descriptor is TenantScopedServiceDescriptor tssd)\r\n        {\r\n            // MA - Tenant scoped services become singletons in tenant-specific service provider.\r\n            tenantServices.Add(descriptor);\r\n        }\r\n        else if (descriptor.ServiceType != typeof(IServiceCollection))\r\n        {\r\n            // MA - True singletons can be forwarded to the application services for resolution\r\n            tenantServices.Add(new ServiceDescriptor(\r\n                descriptor.ServiceType,\r\n                sp => applicationServices.GetService(descriptor.ServiceType),\r\n                ServiceLifetime.Singleton));\r\n        }\r\n    }\r\n}\r\n```\r\n \r\nWhere this design is falling down, is that I can't create a forwarding `ServiceDesriptor` for open generics, as it requires an explicit open generic implementation type:\r\n\r\n> Open generic service type 'Microsoft.Extensions.Options.IOptions`1[TOptions]' requires registering an open generic implementation type.\r\n\r\nI was hoping that there was an existing overload for Add* which would support `Func<IServiceProvider, Type, object>` for instance resolution, providing the second argument `Type` as the concrete service type being requested. I can see this has been raised previously in #588, #474 and #498 but each was closed without any real resolution.\r\n\r\nEven if that were possible, it might require some additional changes under the hood to allow open generics to be delegated to an instance factory method - but even that has pitfalls in terms of type assurance etc.\r\n\r\nDoes anyone have advice - I'm specifically looking to stick around the stock DI rather than pull in another DI container."},{"Id":"7387277627","Type":"IssuesEvent","CreatedAt":"2018-03-15T20:50:06","Actor":"TonyValenti","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2962","RelatedDescription":"Closed issue \"Issue in Microsoft.Net.Http.Headers 2.0.2\" (#2962) at aspnet/Home","RelatedBody":"Hi All,\r\nI'm not sure if this was intended or not, but it looks like the constructor signature of EntityTagHeaderValue changed.  It used to accept a string and now it accepts a StringSegment.  This is causing MissingMethodExceptions in third party libraries such as Swashbuckle and such:\r\n\r\nSystem.MissingMethodException: 'Method not found: 'Void Microsoft.Net.Http.Headers.EntityTagHeaderValue..ctor(System.String)'.'"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7388573332","Type":"IssuesEvent","CreatedAt":"2018-03-16T03:31:43","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1614","RelatedDescription":"Opened issue \"Suppress detailed exception messages from the protocol messages by default\" (#1614) at aspnet/SignalR","RelatedBody":"Right now, we produce error messages in the protocol (`Completion`, `Close`, `HandshakeResponse`) containing exception messages. This need to be disabled by default as in SignalR for ASP.NET."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7388129397","Type":"PullRequestEvent","CreatedAt":"2018-03-16T00:42:20","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7485","RelatedDescription":"Closed pull request \"Testing build\" (#7485) at aspnet/Mvc","RelatedBody":""},{"Id":"7388049276","Type":"PullRequestEvent","CreatedAt":"2018-03-16T00:12:40","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7485","RelatedDescription":"Opened pull request \"Testing build\" (#7485) at aspnet/Mvc","RelatedBody":""},{"Id":"7387842890","Type":"IssuesEvent","CreatedAt":"2018-03-15T23:07:29","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7379","RelatedDescription":"Closed issue \"Rename PartialTagHelper asp-for to for\" (#7379) at aspnet/Mvc","RelatedBody":"The `PartialTagHelper` is a brand new element and therefore we shouldn't be prefixing the for property on the `TagHelper`\r\n\r\n/cc @pranavkm "},{"Id":"7387842093","Type":"PullRequestEvent","CreatedAt":"2018-03-15T23:07:14","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7483","RelatedDescription":"Merged pull request \"Rename PartialTagHelper `asp-for` to `for`.\" (#7483) at aspnet/Mvc","RelatedBody":"#7379"},{"Id":"7387818897","Type":"IssuesEvent","CreatedAt":"2018-03-15T23:00:16","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7484","RelatedDescription":"Opened issue \"Fragile handling of array indices when rewriting JQuery request data\" (#7484) at aspnet/Mvc","RelatedBody":"Follow-on for aspnet/Mvc#7423&hellip;\r\n\r\nThe `JQueryFormValueProviderFactory` and `JQueryQueryStringValueProviderFactory` attempt to special case array indices when rewriting keys. The code checks only the first character of the key, not the entire key. The created value providers may contain partially-rewritten keys e.g. `[0abc].a0bc` when the whole string should be rewritten.\r\n\r\nNaive fix is to rewrite bracket syntax to dot notation only when _all_ characters within the brackets are numeric. This would remove some inconsistency from the model binding system.\r\n\r\nMight seem more correct to go in the opposite direction and rewrite only when the bracketed \"key\" looks like a valid C# property name. But, this may cause breaking changes and ignores `[ModelBinder(Name = \"<whatever>\")]` and other ways to give properties almost-any name.\r\n\r\n----\r\nSuggest first step is to get the aspnet/Mvc#7423 fix in. Then, experiment to see if there are scenarios where this oddity leads to user-visible issues. For example, can model binding arrays of complex types hit issues with the existing value provider factories?"},{"Id":"7386547769","Type":"PullRequestEvent","CreatedAt":"2018-03-15T18:26:17","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7483","RelatedDescription":"Opened pull request \"Rename PartialTagHelper `asp-for` to `for`.\" (#7483) at aspnet/Mvc","RelatedBody":"#7379"},{"Id":"7386094356","Type":"IssuesEvent","CreatedAt":"2018-03-15T17:09:30","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7482","RelatedDescription":"Closed issue \"Missing service for IAuthorizationPolicyProvider when using AddMvcCore().AddRazorPages()\" (#7482) at aspnet/Mvc","RelatedBody":"I'm trying to make a minimal razor pages app, but it seems just using ServiceCollection.AddMvcCore().AddRazorPages() does not add all needed services. Should this work or is there some other call I'm expected to add?\r\n\r\nError:\r\n```\r\nApplication startup exception: System.InvalidOperationException: Unable to resolve service for type 'Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider' while attempting to activate 'Microsoft.AspNetCore.Mvc.RazorPages.Internal.AuthorizationPageApplicationModelProvider'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n```\r\n\r\n**Repro**\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace Test1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            CreateWebHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Program>();\r\n\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvcCore().AddRazorPages();\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n            app.UseMvcWithDefaultRoute();\r\n        }\r\n    }\r\n}\r\n```\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.0-preview1-final\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7387898737","Type":"PullRequestEvent","CreatedAt":"2018-03-15T23:24:58","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1686","RelatedDescription":"Merged pull request \"Add Test to diagnose CI issues\" (#1686) at aspnet/Identity","RelatedBody":""},{"Id":"7387653522","Type":"PullRequestEvent","CreatedAt":"2018-03-15T22:15:02","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1686","RelatedDescription":"Opened pull request \"Add Test to diagnose CI issues\" (#1686) at aspnet/Identity","RelatedBody":""},{"Id":"7387494818","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:36:51","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1685","RelatedDescription":"Opened issue \"Improve external login token/claim flow to identity in default templates\" (#1685) at aspnet/Identity","RelatedBody":"While we have various features today to make this possible it requires a fair bit of wire up and its pretty complex.  See (https://github.com/aspnet/AuthSamples/tree/dev/samples/Identity.ExternalClaims)\r\n\r\nThis issue is to track making the two following scenarios easier:\r\n1. Ability to flow any AuthenticationTokens(i.e. refresh/access) to the Identity database\r\n2. Ability to flow any claims that are part of the external claims identity into the Identity database\r\n\r\nRelated: https://github.com/aspnet/Identity/issues/628 https://github.com/aspnet/Security/issues/1685\r\n"},{"Id":"7386251624","Type":"PullRequestEvent","CreatedAt":"2018-03-15T17:35:30","Actor":"JunTaoLuo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1684","RelatedDescription":"Opened pull request \"Add test logging to functional tests.\" (#1684) at aspnet/Identity","RelatedBody":"Recommend to review with `?w=1`.\r\n\r\nMy current though is to go through our repos and add logging, which will also log to files, for all functional tests that sets up a server so we can take advantage of the default logging. In case where the tests are known to be flaky, I will set the log level to Debug instead of the default, which is Information.\r\n\r\nAs an example, with the added logging we will produce log files like \r\n`C:\\gh\\Identity\\artifacts\\testlogs\\Microsoft.AspNetCore.Identity.FunctionalTests\\NET Core 4.6.26020.03\\ManagementTests\\CanConfirmEmail.log`\r\n```\r\n2018-03-15 10:26:39.388 -07:00 [TestLifetime] [Information] Starting test \"CanConfirmEmail\"\r\n2018-03-15 10:26:39.413 -07:00 [Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager] [Information] User profile is available. Using '\"C:\\Users\\johluo\\AppData\\Local\\ASP.NET\\DataProtection-Keys\"' as key repository and Windows DPAPI to encrypt keys at rest.\r\n2018-03-15 10:26:39.435 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request starting HTTP/1.1 GET https://localhost/  \r\n2018-03-15 10:26:40.035 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Route matched with \"{page = \\\"/Index\\\", area = \\\"\\\"}\". Executing action \"/Index\"\r\n2018-03-15 10:26:40.036 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executing handler method \"OnGet\" with arguments (null) - ModelState is Valid\r\n2018-03-15 10:26:40.552 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executed action \"/Index\" in 516.6049ms\r\n2018-03-15 10:26:40.559 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request finished in 1124.5577ms 200 text/html; charset=utf-8\r\n2018-03-15 10:26:40.566 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request starting HTTP/1.1 GET https://localhost/Identity/Account/Register  \r\n2018-03-15 10:26:40.573 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Route matched with \"{page = \\\"/Account/Register\\\", area = \\\"Identity\\\"}\". Executing action \"/Account/Register\"\r\n2018-03-15 10:26:40.577 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executing handler method \"OnGet\" with arguments ([\"\"]) - ModelState is Valid\r\n2018-03-15 10:26:40.596 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executed action \"/Account/Register\" in 22.5232ms\r\n2018-03-15 10:26:40.596 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request finished in 29.6867ms 200 text/html; charset=utf-8\r\n2018-03-15 10:26:40.598 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request starting HTTP/1.1 Post https://localhost/Identity/Account/Register application/x-www-form-urlencoded \r\n2018-03-15 10:26:40.598 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Route matched with \"{page = \\\"/Account/Register\\\", area = \\\"Identity\\\"}\". Executing action \"/Account/Register\"\r\n2018-03-15 10:26:40.599 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executing handler method \"OnPostAsync\" with arguments ([\"\"]) - ModelState is Valid\r\n2018-03-15 10:26:40.615 -07:00 [Microsoft.EntityFrameworkCore.Model] [Information] The best match for foreign key properties \"{'Id' : int}\" are incompatible with the principal key \"{'Id' : string}\".\r\n2018-03-15 10:26:40.615 -07:00 [Microsoft.EntityFrameworkCore.Model] [Information] The best match for foreign key properties \"{'Id' : int}\" are incompatible with the principal key \"{'Id' : string}\".\r\n2018-03-15 10:26:40.625 -07:00 [Microsoft.EntityFrameworkCore.Model] [Information] The index \"{'UserId'}\" was not created as the properties are already covered by the index \"{'UserId', 'LoginProvider', 'Name'}\".\r\n2018-03-15 10:26:40.626 -07:00 [Microsoft.EntityFrameworkCore.Model] [Information] The best match for foreign key properties \"{'Id' : int}\" are incompatible with the principal key \"{'Id' : string}\".\r\n2018-03-15 10:26:40.627 -07:00 [Microsoft.EntityFrameworkCore.Model] [Information] The best match for foreign key properties \"{'Id' : int}\" are incompatible with the principal key \"{'Id' : string}\".\r\n2018-03-15 10:26:40.627 -07:00 [Microsoft.EntityFrameworkCore.Model] [Information] The index \"{'UserId'}\" was not created as the properties are already covered by the index \"{'UserId', 'RoleId'}\".\r\n2018-03-15 10:26:40.656 -07:00 [Microsoft.EntityFrameworkCore.Infrastructure] [Information] Entity Framework Core \"2.1.0-preview2-30274\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.InMemory\"' with options: \"StoreName=CanConfirmEmail \"\r\n2018-03-15 10:26:40.677 -07:00 [Microsoft.EntityFrameworkCore.Update] [Information] Saved 1 entities to in-memory store.\r\n2018-03-15 10:26:40.677 -07:00 [Microsoft.AspNetCore.Identity.UI.Pages.Account.Internal.LoginModel] [Information] User created a new account with password.\r\n2018-03-15 10:26:40.684 -07:00 [Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler] [Information] AuthenticationScheme: \"Identity.Application\" signed in.\r\n2018-03-15 10:26:40.684 -07:00 [Microsoft.AspNetCore.Mvc.Infrastructure.LocalRedirectResultExecutor] [Information] Executing LocalRedirectResult, redirecting to \"/\".\r\n2018-03-15 10:26:40.684 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executed action \"/Account/Register\" in 86.128ms\r\n2018-03-15 10:26:40.684 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request finished in 86.6266ms 302 \r\n2018-03-15 10:26:40.684 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request starting HTTP/1.1 GET https://localhost/  \r\n2018-03-15 10:26:40.685 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Route matched with \"{page = \\\"/Index\\\", area = \\\"\\\"}\". Executing action \"/Index\"\r\n2018-03-15 10:26:40.685 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executing handler method \"OnGet\" with arguments (null) - ModelState is Valid\r\n2018-03-15 10:26:40.695 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executed action \"/Index\" in 9.7907ms\r\n2018-03-15 10:26:40.695 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request finished in 10.5601ms 200 text/html; charset=utf-8\r\n2018-03-15 10:26:40.698 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request starting HTTP/1.1 GET https://localhost/Identity/Account/Manage  \r\n2018-03-15 10:26:40.708 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Route matched with \"{page = \\\"/Account/Manage/Index\\\", area = \\\"Identity\\\"}\". Executing action \"/Account/Manage/Index\"\r\n2018-03-15 10:26:40.708 -07:00 [Microsoft.AspNetCore.Authorization.DefaultAuthorizationService] [Information] Authorization was successful.\r\n2018-03-15 10:26:40.708 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executing handler method \"OnGetAsync\" with arguments (null) - ModelState is Valid\r\n2018-03-15 10:26:40.709 -07:00 [Microsoft.EntityFrameworkCore.Infrastructure] [Information] Entity Framework Core \"2.1.0-preview2-30274\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.InMemory\"' with options: \"StoreName=CanConfirmEmail \"\r\n2018-03-15 10:26:40.738 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executed action \"/Account/Manage/Index\" in 30.4474ms\r\n2018-03-15 10:26:40.738 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request finished in 40.2044ms 200 text/html; charset=utf-8\r\n2018-03-15 10:26:40.743 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request starting HTTP/1.1 Post https://localhost/Identity/Account/Manage?handler=SendVerificationEmail application/x-www-form-urlencoded \r\n2018-03-15 10:26:40.743 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Route matched with \"{page = \\\"/Account/Manage/Index\\\", area = \\\"Identity\\\"}\". Executing action \"/Account/Manage/Index\"\r\n2018-03-15 10:26:40.743 -07:00 [Microsoft.AspNetCore.Authorization.DefaultAuthorizationService] [Information] Authorization was successful.\r\n2018-03-15 10:26:40.745 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executing handler method \"OnPostSendVerificationEmailAsync\" with arguments (null) - ModelState is Valid\r\n2018-03-15 10:26:40.749 -07:00 [Microsoft.EntityFrameworkCore.Infrastructure] [Information] Entity Framework Core \"2.1.0-preview2-30274\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.InMemory\"' with options: \"StoreName=CanConfirmEmail \"\r\n2018-03-15 10:26:40.751 -07:00 [Microsoft.AspNetCore.Mvc.RedirectToRouteResult] [Information] Executing RedirectToPageResult, redirecting to null.\r\n2018-03-15 10:26:40.751 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executed action \"/Account/Manage/Index\" in 7.7488ms\r\n2018-03-15 10:26:40.751 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request finished in 8.7622ms 302 \r\n2018-03-15 10:26:40.752 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request starting HTTP/1.1 GET https://localhost/Identity/Account/Manage  \r\n2018-03-15 10:26:40.752 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Route matched with \"{page = \\\"/Account/Manage/Index\\\", area = \\\"Identity\\\"}\". Executing action \"/Account/Manage/Index\"\r\n2018-03-15 10:26:40.752 -07:00 [Microsoft.AspNetCore.Authorization.DefaultAuthorizationService] [Information] Authorization was successful.\r\n2018-03-15 10:26:40.752 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executing handler method \"OnGetAsync\" with arguments (null) - ModelState is Valid\r\n2018-03-15 10:26:40.752 -07:00 [Microsoft.EntityFrameworkCore.Infrastructure] [Information] Entity Framework Core \"2.1.0-preview2-30274\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.InMemory\"' with options: \"StoreName=CanConfirmEmail \"\r\n2018-03-15 10:26:40.756 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executed action \"/Account/Manage/Index\" in 4.4468ms\r\n2018-03-15 10:26:40.757 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request finished in 5.0391ms 200 text/html; charset=utf-8\r\n2018-03-15 10:26:40.785 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request starting HTTP/1.1 GET https://localhost/Identity/Account/ConfirmEmail?userId=56622db1-c4cb-4c9a-a9ba-ec9dd4201df5&code=CfDJ8LP8RUgbZeBOjFymQpmY2%2F2ZtHW51WoKy4GuI1MBvmkXp%2BI3EMQVPlgrLBx9d3KDN1xFxOy7rOtNkBsb93lYh8oPNo%2B6ZRzwSeRCxcVVYJ6JVPhKY7CJkN7LPtrMT%2F8yij0C7d7gL0i29%2BDKK5XgKk%2FwAsUmOUzTVRKlwUyBUTZNRpPcvsHkAVgK3B5F3BD%2B3R32Um6xJCBpjsiuS4T4gktJH9iKS1CBdO4%2BX2BkmMc6XhSunQ4mZjfB8JWShf1xyw%3D%3D  \r\n2018-03-15 10:26:40.794 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Route matched with \"{page = \\\"/Account/ConfirmEmail\\\", area = \\\"Identity\\\"}\". Executing action \"/Account/ConfirmEmail\"\r\n2018-03-15 10:26:40.795 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executing handler method \"OnGetAsync\" with arguments ([\"56622db1-c4cb-4c9a-a9ba-ec9dd4201df5\", \"CfDJ8LP8RUgbZeBOjFymQpmY2/2ZtHW51WoKy4GuI1MBvmkXp+I3EMQVPlgrLBx9d3KDN1xFxOy7rOtNkBsb93lYh8oPNo+6ZRzwSeRCxcVVYJ6JVPhKY7CJkN7LPtrMT/8yij0C7d7gL0i29+DKK5XgKk/wAsUmOUzTVRKlwUyBUTZNRpPcvsHkAVgK3B5F3BD+3R32Um6xJCBpjsiuS4T4gktJH9iKS1CBdO4+X2BkmMc6XhSunQ4mZjfB8JWShf1xyw==\"]) - ModelState is Valid\r\n2018-03-15 10:26:40.799 -07:00 [Microsoft.EntityFrameworkCore.Infrastructure] [Information] Entity Framework Core \"2.1.0-preview2-30274\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.InMemory\"' with options: \"StoreName=CanConfirmEmail \"\r\n2018-03-15 10:26:40.827 -07:00 [Microsoft.EntityFrameworkCore.Update] [Information] Saved 1 entities to in-memory store.\r\n2018-03-15 10:26:40.832 -07:00 [Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker] [Information] Executed action \"/Account/ConfirmEmail\" in 37.956ms\r\n2018-03-15 10:26:40.832 -07:00 [Microsoft.AspNetCore.Hosting.Internal.WebHost] [Information] Request finished in 47.4784ms 200 text/html; charset=utf-8\r\n2018-03-15 10:26:40.834 -07:00 [TestLifetime] [Information] Finished test \"CanConfirmEmail\" in 1.4455876s\r\n\r\n```"},{"Id":"7384301916","Type":"IssuesEvent","CreatedAt":"2018-03-15T12:24:16","Actor":"farhadibehnam","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1683","RelatedDescription":"Opened issue \"System.Data.SqlClient.SqlException: 'Invalid column name 'ApplicationRoleId'.'\" (#1683) at aspnet/Identity","RelatedBody":"\r\n\r\nI'm working on my project it's based on ASP.net Core 2.0. I've created ApplicationRole and ApplicationUser class. I've wrote a snippet code for making roles when I run my project I've got this error:\r\n\r\n    \r\n\r\n> System.Data.SqlClient.SqlException: 'Invalid column name 'ApplicationRoleId'.\r\n\r\nBut the same code that I use in ASP.net Core 1.1 didn't have any problem.\r\n\r\nI think it has a problem with this line of code:\r\n\r\n    \r\n\r\n> lineNumberOfUsers =  r.Users.Count\r\n\r\nBecause when I comment this code project works fine, but I need count of users for every role.\r\n\r\nController:\r\n\r\n```\r\npublic class ApplicationRoleController : Controller\r\n{\r\n    private readonly UserManager<ApplicationUser> _userManager;\r\n    private readonly RoleManager<ApplicationRole> _roleManager;\r\n\r\n    public ApplicationRoleController(UserManager<ApplicationUser> userManager, RoleManager<ApplicationRole> roleManager)\r\n    {\r\n        _userManager = userManager;\r\n        _roleManager = roleManager;\r\n    }\r\n\r\n    public IActionResult Index()\r\n    {    \r\n        List<ApplicationRoleViewModel> models = new List<ApplicationRoleViewModel>();\r\n        models = _roleManager.Roles.Select(r => new ApplicationRoleViewModel\r\n        {\r\n\r\n            Id = r.Id,\r\n            Name = r.Name,\r\n            Description = r.Description,\r\n            NumberOfUsers =  r.Users.Count \r\n        }).ToList();\r\n        return View(models);\r\n    }\r\n}\r\n```\r\n\r\nModel\r\n\r\n```\r\npublic class ApplicationRole : IdentityRole\r\n{\r\n    public string Description { get; set; }\r\n    public virtual ICollection<ApplicationUser> Users { get; } = new List<ApplicationUser>(); \r\n}\r\n```\r\n\r\nI've checked sql query in sql server profiler. when i ran sql query in sql server I got the same error.\r\n\r\n   \r\n\r\n>  Invalid column name 'ApplicationRoleId'.\r\n\r\n```\r\nSELECT [r].[Id], [r].[Name], [r].[Description], (\r\n    SELECT COUNT(*)\r\n    FROM [AspNetUsers] AS [a]\r\n    WHERE [r].[Id] = [a].[ApplicationRoleId]\r\n) AS [NumberOfUsers]\r\nFROM [AspNetRoles] AS [r]\r\n```\r\n\r\n"},{"Id":"7381472898","Type":"IssuesEvent","CreatedAt":"2018-03-14T23:02:21","Actor":"Gengadook","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1682","RelatedDescription":"Opened issue \"Allow specifying the default authorization scheme on a controller action without the authorize attribute\" (#1682) at aspnet/Identity","RelatedBody":"This would be useful in the situation where I have some api controllers hosted within an MVC app that already uses a default cookies authorization scheme. In this scenario, the api controllers would use a JWT Bearer token for auth rather than the default cookie scheme used by the rest of the web app.\r\n\r\nNormally the way to do this would be to decorate the controller or action with [Authorize(AuthenticationSchemes=\"Bearer\")]. \r\nHowever, say I wish to allow anonymous requests to the api action method and return a specific result based on User.Identity.IsAuthenticated as in the example below. \r\n\r\n\r\n```\r\n[HttpGet(\"\")]\r\npublic IActionResult GetApiAction(){\r\n    if(User.Identity.IsAuthenticated){\r\n        // result for authenticated users\r\n        return Ok(...);\r\n    }else{\r\n        // result for unauthenticated users\r\n        return Ok(...);\r\n    }\r\n} \r\n```\r\n\r\nIn this scenario, the authentication scheme cannot be applied to the controller action anymore and it defaults back to cookie auth rather than populating the UserPrincipal when a valid JWT token is supplied in the request.\r\n\r\nI feel it would be more flexible to allow the scheme to be added via its own attribute similar to [AuthenticationSchemes(Schemes=\"...\")] rather than being coupled to the [Authorize] attribute directly."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7388743816","Type":"PullRequestEvent","CreatedAt":"2018-03-16T04:44:35","Actor":"javiercn","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2399","RelatedDescription":"Merged pull request \"Reenable API Check\" (#2399) at aspnet/KestrelHttpServer","RelatedBody":"I've tried it locally and it works. \r\nI'll also have to upgrade the dependencies in this repo before merging tomorrow."},{"Id":"7388000709","Type":"PullRequestEvent","CreatedAt":"2018-03-15T23:58:55","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2380","RelatedDescription":"Merged pull request \"[DO NOT MERGE]: React to pipelines changes\" (#2380) at aspnet/KestrelHttpServer","RelatedBody":"Need to update universe ð "},{"Id":"7387997139","Type":"PullRequestEvent","CreatedAt":"2018-03-15T23:57:38","Actor":"javiercn","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2399","RelatedDescription":"Opened pull request \"Reenable API Check\" (#2399) at aspnet/KestrelHttpServer","RelatedBody":"I've tried it locally and it works. \r\nI'll also have to upgrade the dependencies in this repo before merging tomorrow."},{"Id":"7382831711","Type":"PullRequestEvent","CreatedAt":"2018-03-15T07:09:14","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2397","RelatedDescription":"Closed pull request \"Revert \"Handle posting to the libuv thread after StopAsync (#2388)\"\" (#2397) at aspnet/KestrelHttpServer","RelatedBody":"This reverts commit 572627e88ce4db2ca2b3f18a200d5ff2a73fdead.\r\n\r\nTurns out this regresses performance ð .  I'll have to catch on Abort....\r\n\r\n/cc @benaadams "},{"Id":"7382665775","Type":"PullRequestEvent","CreatedAt":"2018-03-15T06:18:05","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2398","RelatedDescription":"Opened pull request \"Query EndPoints once during reset\" (#2398) at aspnet/KestrelHttpServer","RelatedBody":"Currently queries endpoints via interface twice rather than once"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7388770604","Type":"IssuesEvent","CreatedAt":"2018-03-16T04:57:07","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2148","RelatedDescription":"Closed issue \"Updating to new SDK breaks Razor code generation\" (#2148) at aspnet/Razor","RelatedBody":"MVC build fails with:\r\n```\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\TagHelpersWebSite\\obj\\Release\\netcoreapp2.0\\Razor\\Views\\Home\\ViewComponentTagHelpers.cs(39,25): error CS0400: The type or namespace name '__Generated__GenericViewComponentTagHelper' could not be found in the global namespace (are you missing an assembly reference?)\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\TagHelpersWebSite\\obj\\Release\\netcoreapp2.0\\Razor\\Views\\Home\\ViewComponentTagHelpers.cs(41,25): error CS0400: The type or namespace name '__Generated__DanViewComponentTagHelper' could not be found in the global namespace (are you missing an assembly reference?)\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\TagHelpersWebSite\\obj\\Release\\netcoreapp2.0\\Razor\\Views\\Home\\ViewComponentTagHelpers.cs(43,25): error CS0400: The type or namespace name '__Generated__CopyrightViewComponentTagHelper' could not be found in the global namespace (are you missing an assembly reference?)\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\TagHelpersWebSite\\obj\\Release\\netcoreapp2.1\\Razor\\Views\\Home\\ViewComponentTagHelpers.cs(39,25): error CS0400: The type or namespace name '__Generated__GenericViewComponentTagHelper' could not be found in the global namespace (are you missing an assembly reference?)\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\TagHelpersWebSite\\obj\\Release\\netcoreapp2.1\\Razor\\Views\\Home\\ViewComponentTagHelpers.cs(41,25): error CS0400: The type or namespace name '__Generated__DanViewComponentTagHelper' could not be found in the global namespace (are you missing an assembly reference?)\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\TagHelpersWebSite\\obj\\Release\\netcoreapp2.1\\Razor\\Views\\Home\\ViewComponentTagHelpers.cs(43,25): error CS0400: The type or namespace name '__Generated__CopyrightViewComponentTagHelper' could not be found in the global namespace (are you missing an assembly reference?)\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\TagHelpersWebSite\\obj\\Release\\net461\\Razor\\Views\\Home\\ViewComponentTagHelpers.cs(39,25): error CS0400: The type or namespace name '__Generated__GenericViewComponentTagHelper' could not be found in the global namespace (are you missing an assembly reference?)\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\TagHelpersWebSite\\obj\\Release\\net461\\Razor\\Views\\Home\\ViewComponentTagHelpers.cs(41,25): error CS0400: The type or namespace name '__Generated__DanViewComponentTagHelper' could not be found in the global namespace (are you missing an assembly reference?)\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\TagHelpersWebSite\\obj\\Release\\net461\\Razor\\Views\\Home\\ViewComponentTagHelpers.cs(43,25): error CS0400: The type or namespace name '__Generated__CopyrightViewComponentTagHelper' could not be found in the global namespace (are you missing an assembly reference?)\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\RazorPagesWebSite\\Login.cshtml(2,7): error CS0103: The name 'Context' does not exist in the current context\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\RazorPagesWebSite\\Show.cshtml(3,7): error CS0103: The name 'function' does not exist in the current context\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\RazorPagesWebSite\\Login.cshtml(2,7): error CS0103: The name 'Context' does not exist in the current context\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\RazorPagesWebSite\\Show.cshtml(3,7): error CS0103: The name 'function' does not exist in the current context\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\ErrorPageMiddlewareWebSite\\Views\\ErrorPageMiddleware\\ParserError.cshtml(1,2): error RZ1006: The code block is missing a closing \"}\" character. Make sure you have a matching \"}\" character for all the \"{\" characters within this block, and that none of the \"}\" characters are being interpreted as markup.\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\ErrorPageMiddlewareWebSite\\Views\\ErrorPageMiddleware\\ParserError.cshtml(1,2): error RZ1006: The code block is missing a closing \"}\" character. Make sure you have a matching \"}\" character for all the \"{\" characters within this block, and that none of the \"}\" characters are being interpreted as markup.\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\BasicWebSite\\Views\\RemoteAttribute_Home\\Details.cshtml(5,58): error CS1503: Argument 2: cannot convert from 'out string' to 'out object'\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\BasicWebSite\\Views\\RemoteAttribute_Home\\Details.cshtml(5,58): error CS1503: Argument 2: cannot convert from 'out string' to 'out object'\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\RazorPagesWebSite\\Login.cshtml(2,7): error CS0103: The name 'Context' does not exist in the current context\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\RazorPagesWebSite\\Show.cshtml(3,7): error CS0103: The name 'function' does not exist in the current context\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\BasicWebSite\\Views\\RemoteAttribute_Home\\Details.cshtml(5,58): error CS1503: Argument 2: cannot convert from 'out string' to 'out object'\r\n[11:59:00] Mvc | C:\\b\\w\\7471ab17b6f47b37\\modules\\Mvc\\test\\WebSites\\ErrorPageMiddlewareWebSite\\Views\\ErrorPageMiddleware\\ParserError.cshtml(1,2): error RZ1006: The code block is missing a closing \"}\" character. Make sure you have a matching \"}\" character for all the \"{\" characters within this block, and that none of the \"}\" characters are being interpreted as markup.\r\n[11:59:00] Mvc | 0 Warning(s)\r\n[11:59:00] Mvc | 21 Error(s)\r\n\r\n``` \r\n\r\nYou can repro it localy by changing `korebuild-lock.txt` to version `2.1.0-preview2-15732`\r\n\r\n/cc @JunTaoLuo  @ryanbrandenburg  @rynowak  @natemcmaster  @pranavkm "},{"Id":"7388727912","Type":"PullRequestEvent","CreatedAt":"2018-03-16T04:37:05","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2176","RelatedDescription":"Opened pull request \"Update BuildTools to fix dotnet-ci builds\" (#2176) at aspnet/Razor","RelatedBody":""},{"Id":"7388727510","Type":"PullRequestEvent","CreatedAt":"2018-03-16T04:36:54","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/2174","RelatedDescription":"Closed pull request \"Please ignore\" (#2174) at aspnet/Razor","RelatedBody":""},{"Id":"7388179160","Type":"IssuesEvent","CreatedAt":"2018-03-16T01:00:54","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2175","RelatedDescription":"Opened issue \"Make the error logging for build server consistent with the logging for the cli tool\" (#2175) at aspnet/Razor","RelatedBody":"Assume there is a compilation error in one of the views.\r\nIt will try to compile it in the server. That will return an error code of -1 because RazorGenerate failed. The MsBuild task would fallback to in process compilation and repeat the same process and fail again. (This is the error we are currently seeing in output)\r\nInstead, we should just report the error from server without having to fallback to the cli. \r\n\r\nAlready have a PR out for this. Created this item now to track it."},{"Id":"7388131752","Type":"PullRequestEvent","CreatedAt":"2018-03-16T00:43:13","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2174","RelatedDescription":"Opened pull request \"Please ignore\" (#2174) at aspnet/Razor","RelatedBody":""},{"Id":"7386981477","Type":"PullRequestEvent","CreatedAt":"2018-03-15T19:49:58","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2170","RelatedDescription":"Merged pull request \"Ensure PreserveCompilationContext is set if we're targeting precompilation tool\" (#2170) at aspnet/Razor","RelatedBody":"PreserveCompilationContext must be set for precompilation tool to work, even when\r\nthe app has no views.\r\n\r\nFixes #2168"},{"Id":"7386981462","Type":"IssuesEvent","CreatedAt":"2018-03-15T19:49:57","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2168","RelatedDescription":"Closed issue \"With 2.1.300-preview2-008322, Razor precompilation isn't back-compatible with 2.0.0 applications\" (#2168) at aspnet/Razor","RelatedBody":"Repro:\r\n\r\n* Create this trivial project: https://gist.github.com/SteveSandersonMS/0d25e89db93b8092577c3e10d428b533\r\n* Run `dotnet publish -c Release`\r\n\r\nExpected: Publish succeeds\r\nActual: With the preview 2 SDK, it fails with the following error:\r\n\r\n```\r\nEXEC : warning CS8021: No value for RuntimeMetadataVersion found. No assembly containing System.Object was found nor was a value for RuntimeMetadataVersion specified through options. [C:\\Users\\username\\Desktop\\tmpaspnet\\tmpaspnet.csproj]\r\nEXEC(1,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?) [C:\\Users\\username\\Desktop\\tmpaspnet\\tmpaspnet.csproj]\r\nEXEC(1,54): error CS0518: Predefined type 'System.String' is not defined or imported [C:\\Users\\username\\Desktop\\tmpaspnet\\tmpaspnet.csproj]\r\nC:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.targets(60,5): error MSB3073: The command \"\"C:\\Users\\username\\.dotnet\\x64\\dotnet.exe\" exec --runtimeconfig \"C:\\Users\\username\\Desktop\\tmpaspnet\\bin\\Release\\netcoreapp2.0\\tmpaspnet.runtimeconfig.json\" --depsfile \"C:\\Users\\username\\Desktop\\tmpaspnet\\bin\\Release\\netcoreapp2.0\\tmpaspnet.deps.json\" \"C:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.dll\" @\"obj\\Release\\netcoreapp2.0\\microsoft.aspnetcore.mvc.razor.viewcompilation.rsp\"\" exited with code 1. [C:\\Users\\username\\Desktop\\tmpaspnet\\tmpaspnet.csproj]\r\n```\r\n\r\nNote that the same steps work fine with the 2.1.0-preview1 final SDK (and of course with 2.0.x)."},{"Id":"7386952784","Type":"IssuesEvent","CreatedAt":"2018-03-15T19:44:05","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2172","RelatedDescription":"Opened issue \"Handle errored Roslyn compilations properly when discovering TagHelpers.\" (#2172) at aspnet/Razor","RelatedBody":"Roslyn compilations can be errored for many reasons. Not being able to restore, truly a compile error, mismatched CLI etc. In the case of a CLI issue we aren't able to introspect over Attribute named arguments through Roslyn. We should be handle these cases better and properly not discover TagHelper where we can't get a complete picture.\r\n\r\nHow this ends up behaving today is you get TagHelpers that attach to every element (can't decipher `Attributes =\"...\"` in `HtmlTargetElementAttribute`). For example, in VS4Mac with a mismatched CLI (`TagHelper`s are colored black bolded):\r\n\r\n![image](https://user-images.githubusercontent.com/2008729/37487347-79a5409a-284e-11e8-9c6d-21edfa43cd2c.png)\r\n"},{"Id":"7386703441","Type":"IssuesEvent","CreatedAt":"2018-03-15T18:54:30","Actor":"sebastienros","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2161","RelatedDescription":"Closed issue \"Using Microsoft.NET.Sdk.Web on a class library prevents the app to start\" (#2161) at aspnet/Razor","RelatedBody":"Developing a modular application using Orchard Core Framework, I wanted to use the Web sdk for one of the modules containing controllers and razor pages. Can't start the host app anymore. Using Microsoft.NET.Sdk back fixes the issue.\r\n\r\n![image](https://user-images.githubusercontent.com/1165805/37422741-2885caac-2779-11e8-880f-f1317234b3b1.png)\r\n"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7369868082","Type":"IssuesEvent","CreatedAt":"2018-03-13T05:33:42","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067) at aspnet/Tooling","RelatedBody":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine."},{"Id":"7364725434","Type":"IssuesEvent","CreatedAt":"2018-03-12T10:19:58","Actor":"RehanSaeed","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Opened issue \"Support dotnet watch in launchSettings.json\" (#1067) at aspnet/Tooling","RelatedBody":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine."},{"Id":"7307968614","Type":"IssuesEvent","CreatedAt":"2018-02-28T06:01:18","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file."},{"Id":"7307353364","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:19:15","Actor":"rjamesnw","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Opened issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7373364495","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:04:24","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/294","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\" (#294) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where, if an application is hosted behind Internet Information Server (IIS) a remote unauthenticated attacker can use a specially crafted request can cause a Denial of Service.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/IISIntegration/issues/658\r\n\r\n### Mitigation Factors\r\nAny site hosted behind a different proxy, such as nginx or an application hosted in Azure, which uses Application Request Routing (ARR) as a proxy is not affected. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft ASP.NET Core project if it is hosted behind an IIS server running AspNetCoreModule (ANCM) prior to 7.1.1990.0.\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected? \r\n\r\nOpen a PowerShell prompt and run the following command\r\n\r\n```powershell\r\n(Get-Item $env:SystemDrive\\Windows\\System32\\inetsrv\\aspnetcore.dll).VersionInfo\r\n```\r\n\r\nor use the Windows file properties dialog to check the version on `C:\\Windows\\System32\\inetsrv\\aspnetcore.dll`, where C: is your OS install drive.\r\n\r\nIf the file version is less than 7.1.1990.0 you are affected.\r\n\r\n### How do I fix the issue? \r\nInstall the latest version of the ASP.NET Core Hosting Bundle \r\n(You need only install a single version, i.e. installing Version 2.0 will protect Version 1.0/1.1 .NET Core applications and vice versa. Choose the one that corresponds to the highest runtime version on your server).\r\n\r\n* [Hosting Bundle for ASP.NET Core 1.0/1.1](https://go.microsoft.com/fwlink/?linkid=869677)\r\n* [Hosting Bundle for ASP.NET Core 2.0](https://go.microsoft.com/fwlink/?linkid=869674)\r\n\r\nThen restart IIS by running \r\n\r\n```\r\nnet stop was /y\r\nnet start w3svc\r\n```\r\n\r\nfrom an elevated command line.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\t\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\nAndrei Gorlov\r\n\r\n### External Links\r\n\r\n[CVE-2018-0808](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0808)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_"},{"Id":"7352155171","Type":"IssuesEvent","CreatedAt":"2018-03-08T19:37:26","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/199","RelatedDescription":"Closed issue \"ASP.NET/EF Core feeds renamed and moved to dotnet.myget.org\" (#199) at aspnet/Announcements","RelatedBody":"The ASP.NET and EF Core MyGet feeds have moved from www.myget.org to dotnet.myget.org. There are automatic redirects from the old feeds to the new feeds so no _immediate_ change is needed. If you use the nightly feeds for packages, please move to the new feeds ASAP. The redirects will be available for at least a few weeks.\n\n| https://www.myget.org/f/ (Before) | https://dotnet.myget.org/f/ (After) |\n| --- | --- |\n| aspnetvnext | aspnetcore-dev |\n| aspnetrelease | aspnetcore-release |\n| aspnetmaster | aspnetcore-master |\n| aspnetcidev | aspnetcore-ci-dev |\n| aspnetcirelease | aspnetcore-ci-release |\n\nPlease use https://github.com/aspnet/Home/issues/1708 for further discussion.\n"},{"Id":"7340008772","Type":"IssuesEvent","CreatedAt":"2018-03-06T20:07:16","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/292","RelatedDescription":"Opened issue \"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image\" (#292) at aspnet/Announcements","RelatedBody":"We will be deprecating the following Docker images\r\n \r\n- microsoft/aspnetcore-build:1.0-1.1\r\n- microsoft/aspnetcore-build:1.0-2.0\r\n\r\nWe will not delete these images. These images will continue to receive patch update whenever a 1.0.x, 1.1.x, or 2.0.x update ships, however, we will not produce a new version which contains the 2.1 runtime.\r\n\r\n### Why?\r\n \r\nThese images existed to support CI/CD pipelines that run apps on multiple versions for .NET Core in the same container. With each release, these images have grown in size. The 1.0-2.0 image is already about 1GB, and would continue to grow with runtime updates. \r\n \r\nFortunately, recent improvements to .NET Core (such as minor version roll-forward) and Docker (multi-stage builds) have reduced the need to use an image with multiple versions of .NET Core. We have seen usage of these multi-version images declining over time, and today, they are a small percentage of our Docker image usage.\r\n\r\nRather than maintaining a single, large image with all possible .NET Core runtimes, we encourage users to use multi-stage builds. Docker's multi-stage feature allows you to compose a single Dockerfile, but still use multiple .NET Core runtimes. Also, starting in 2.1, .NET Core supports rolling forward the runtime version within the major version, which will further reduce the need to have multiple 2.x runtimes side-by-side.\r\n \r\nFor discussion, use https://github.com/aspnet/aspnet-docker/issues/349"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application tâ¦ https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"974274384792866817","CreatedAt":"2018-03-15T13:21:29+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/vJe8zHT12j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":3,"RawContent":null},{"Id":"973691520728510464","CreatedAt":"2018-03-13T22:45:23+00:00","UserScreenname":"aspnet","Text":"Starting now... join us for the weekly #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":12,"RawContent":null},{"Id":"973553523186159621","CreatedAt":"2018-03-13T13:37:02+00:00","UserScreenname":"aspnet","Text":"Today, Jeff shows you how to use dependency injection with web forms... check it out! https://t.co/viqZ28DBrV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":9,"RawContent":null},{"Id":"973350716046626816","CreatedAt":"2018-03-13T00:11:09+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"972484011556818945","CreatedAt":"2018-03-10T14:47:10+00:00","UserScreenname":"aspnet","Text":"Be sure to check out Jeff's live coding stream this morning to see more about our #ASP.NET Core 2.1 preview release. https://t.co/EtKk0fMOgU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"971084152693866496","CreatedAt":"2018-03-06T18:04:38+00:00","UserScreenname":"aspnet","Text":"We are live at https://t.co/4Ioo9jNSN2 ! Join us!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":4,"RawContent":null},{"Id":"971075755168841728","CreatedAt":"2018-03-06T17:31:16+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup starts at 10 AM  Pacific / 1800 GMT. Ryan Nowak will be showing Web API 2.1 fâ¦ https://t.co/OW0zeYZPyq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"970812132399890432","CreatedAt":"2018-03-06T00:03:43+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is a feature deep dive on Web API improvements in 2.1 with Ryan Nowak.\n\nTuesdâ¦ https://t.co/eKElaXNIR3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null},{"Id":"969671939106025473","CreatedAt":"2018-03-02T20:33:00+00:00","UserScreenname":"aspnet","Text":"Jon the Azure AD team for their first Office Hours call on March 8. https://t.co/kVYF9JWzeZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":6,"RawContent":null},{"Id":"968561906003791872","CreatedAt":"2018-02-27T19:02:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"968550190889267201","CreatedAt":"2018-02-27T18:15:34+00:00","UserScreenname":"aspnet","Text":"#ASPNET Core 2.1.0-preview1 now available https://t.co/loVh03KKfz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":70,"FavoriteCount":54,"RawContent":null},{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Raâ¦ https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"965964952442933249","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"aspnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/HVyIw0Wcgd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":9,"RawContent":null},{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.â¦ https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-03-16T05:30:09.7160118Z","RunDurationInMilliseconds":8366}