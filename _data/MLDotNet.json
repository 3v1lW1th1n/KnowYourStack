{"Data":{"GitHub":{"Issues":[{"Id":"429020485","IsPullRequest":false,"CreatedAt":"2019-04-04T01:21:58","Actor":"najeeb-kazmi","Number":"3196","RawContent":null,"Title":"Custom Exception exposes .Message","State":"closed","Body":"Related to: VSO Task [799758](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/799758)\r\n\r\nSecurity guidelines for release include the following for exposing sensitive data.\r\n\r\nApplications MUST NOT expose sensitive application data to end-users through error messages. This can be achieved by trapping all errors or exceptions within an application and exposing only a generic, innocuous message to the end-user. For example:\r\n\r\n- If a user attempts to login to a resource using a username/password combination, failures MUST NOT disclose whether it was the username or password that was incorrect. Instead, a more generic error message such as \"Invalid credentials, please try again.\" should be displayed to the user.\r\n- For custom exception classes, display MUST NOT include direct output from .ToString(), .Message, or .StackTrace. On other platforms, similar guidance applies.\r\n- For web applications, a generic \"HTTP 500\" page SHOULD BE returned instead of a stack trace. This can be enabled within IIS through customer error pages (via CustomErrors).\r\n\r\n\r\nFound one instance of a custom exception class having .Message exposed. I don't think exposing a message related to premature convergence is in any way exposing sensitive information, but filing this issue for the sake of completeness. \r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.StandardTrainers/Standard/LogisticRegression/LbfgsPredictorBase.cs#L575-L581\r\n\r\ncc: @glebuk @TomFinley ","Url":"https://github.com/dotnet/machinelearning/issues/3196","RelatedDescription":"Closed issue \"Custom Exception exposes .Message\" (#3196)"},{"Id":"429036395","IsPullRequest":true,"CreatedAt":"2019-04-04T01:00:27","Actor":"rogancarr","Number":"3199","RawContent":null,"Title":"Renaming OptimizationTolerance to fix a spelling error.","State":"open","Body":"In the `LbfgsTrainerBase`, the `OptmizationTolerance` option was misspelled.\r\n\r\nFixes #3198","Url":"https://github.com/dotnet/machinelearning/pull/3199","RelatedDescription":"Open PR \"Renaming OptimizationTolerance to fix a spelling error.\" (#3199)"},{"Id":"429027388","IsPullRequest":false,"CreatedAt":"2019-04-04T00:14:25","Actor":"daholste","Number":"3198","RawContent":null,"Title":"OptmizationTolerance public trainer API options misspelling","State":"open","Body":"Should be \"Optim\" instead of \"Optm\". Misspelling occurs on the public API for some trainers, like\r\nhttps://github.com/dotnet/machinelearning/blob/b6c5b703de4bdc2e0212597075223f4710dc98da/src/Microsoft.ML.StandardTrainers/Standard/LogisticRegression/LbfgsPredictorBase.cs#L54","Url":"https://github.com/dotnet/machinelearning/issues/3198","RelatedDescription":"Open issue \"OptmizationTolerance public trainer API options misspelling\" (#3198)"},{"Id":"429021548","IsPullRequest":false,"CreatedAt":"2019-04-03T23:47:19","Actor":"ganik","Number":"3197","RawContent":null,"Title":"internal class GraphRunner needs to be exposed for NimbusML","State":"open","Body":"Version 0.12.0-preview\r\ninternal sealed class GraphRunner  breaks NimbusML build as the class can not be found.\r\nNeed [BestFriend] attribute","Url":"https://github.com/dotnet/machinelearning/issues/3197","RelatedDescription":"Open issue \"internal class GraphRunner needs to be exposed for NimbusML\" (#3197)"},{"Id":"429019876","IsPullRequest":true,"CreatedAt":"2019-04-03T23:39:27","Actor":"TomFinley","Number":"3195","RawContent":null,"Title":"Update DataViewRow and DataViewRowCursor implementation documentation.","State":"open","Body":"Towards #3095. The XML documentation for the classes themselves, while it could potentially be improved, is actually mostly correct already, unlike the situation for key-types where some information was wrong.","Url":"https://github.com/dotnet/machinelearning/pull/3195","RelatedDescription":"Open PR \"Update DataViewRow and DataViewRowCursor implementation documentation.\" (#3195)"},{"Id":"429018234","IsPullRequest":true,"CreatedAt":"2019-04-03T23:32:07","Actor":"TomFinley","Number":"3194","RawContent":null,"Title":"Key type documentation.","State":"open","Body":"Towards #3095, specifically w.r.t. key types.","Url":"https://github.com/dotnet/machinelearning/pull/3194","RelatedDescription":"Open PR \"Key type documentation.\" (#3194)"},{"Id":"429009394","IsPullRequest":false,"CreatedAt":"2019-04-03T22:55:29","Actor":"najeeb-kazmi","Number":"3193","RawContent":null,"Title":"Exception Swallowing issues","State":"open","Body":"Related to: VSO Task [799764](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/799764)\r\n\r\nSecurity guidelines for release include the following for exception handling.\r\n\r\nException Handlers\r\nAll new product code must be free of \"swallow everything\" exception handlers:\r\n\r\n- C code must not catch and dismiss all SEH exceptions or SEH exceptions that your application cannot responsibly handle.\r\n- In unmanaged C++ code, do not enable asynchronous exception handling [/EHa flag] in combination with catching and \"swallowing\" all exceptions.\r\n/Eha has the side-effect of swallowing all exceptions from hardware (ex. floating point exceptions, division by zero, and access violations) when catch(…) is used.\r\n- In managed code do not use HandleProcessCorruptedStateExceptionsAttribute in combination with catching and \"swallowing\" all exceptions.\r\n- Recover only on exceptions that your application can handle safely, and let all other exceptions pass through.\r\n\r\n\r\nReviewing the repo, I found the following cases that looked questionable to me in src folder (ignoring test folder).  Please see if any of these requires more adequate handling.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/CommandLine/CmdParser.cs#L1895-L1898\r\n\r\nShould we inform user what the exception is here and then return null?\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/ComponentModel/AssemblyLoadingUtils.cs#L213-L216\r\n\r\nShould we raise the actual error instead of just saying that Action xyz failed in IFileHandle?\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/IFileHandle.cs#L110-L114\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/IFileHandle.cs#L125-L129\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/IFileHandle.cs#L142-L146\r\n\r\nA comment explaining that this should not throw.\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/Repository.cs#L181-L183\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Core/Data/Repository.cs#L381-L383\r\n\r\nSee the review comment here.\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.Data/DataLoadSave/Binary/BinaryLoader.cs#L1384-L1393\r\n\r\nAn error message here?\r\nhttps://github.com/dotnet/machinelearning/blob/ac53748721939024d85e984c0b8911dbb1af3339/src/Microsoft.ML.TensorFlow/TensorFlow/TensorflowUtils.cs#L206-L207\r\n\r\ncc: @glebuk @TomFinley ","Url":"https://github.com/dotnet/machinelearning/issues/3193","RelatedDescription":"Open issue \"Exception Swallowing issues\" (#3193)"},{"Id":"428975243","IsPullRequest":false,"CreatedAt":"2019-04-03T21:06:52","Actor":"Ivanidzo4ka","Number":"3192","RawContent":null,"Title":"LDA always prints to console","State":"open","Body":"Run LDA documentation sample:\r\n```\r\nusing 10 thread(s) to do train/test\r\nmem_block_size = 252\r\nalias_mem_block_size = 348\r\nstarted training with 10 threads\r\nIter: 0000      Thread = 0      Tokens: 29      Took: 0.0002612 sec     Throughput: 111026 token/(thread*sec)\r\nTotal likelihood: -210.838      ..........[Nomralized word ll: -323.375 Word  likelihood: 174.678       Doc   likelihood: -62.1403]\r\n```\r\nand so on without any option to turn it off.","Url":"https://github.com/dotnet/machinelearning/issues/3192","RelatedDescription":"Open issue \"LDA always prints to console\" (#3192)"},{"Id":"428965681","IsPullRequest":true,"CreatedAt":"2019-04-03T20:42:39","Actor":"zeahmed","Number":"3191","RawContent":null,"Title":" Created sample for 'LatentDirichletAllocation' API.","State":"open","Body":"Related to #1209.","Url":"https://github.com/dotnet/machinelearning/pull/3191","RelatedDescription":"Open PR \" Created sample for 'LatentDirichletAllocation' API.\" (#3191)"},{"Id":"428898327","IsPullRequest":false,"CreatedAt":"2019-04-03T17:55:23","Actor":"shmoradims","Number":"3190","RawContent":null,"Title":"API reference: Add a sanity test that ensures samples are runnable","State":"open","Body":"This is a simpler version of #2954.\r\n\r\nWe need to make sure all the samples are runnable. Basically we'd need to look inside Microsoft.ML.Samples with reflection and run all static methods called Example().","Url":"https://github.com/dotnet/machinelearning/issues/3190","RelatedDescription":"Open issue \"API reference: Add a sanity test that ensures samples are runnable\" (#3190)"},{"Id":"428339561","IsPullRequest":true,"CreatedAt":"2019-04-03T17:00:54","Actor":"codemzs","Number":"3172","RawContent":null,"Title":"Multi-column mapping API for normalizer estimators.","State":"closed","Body":"fixes #3171","Url":"https://github.com/dotnet/machinelearning/pull/3172","RelatedDescription":"Closed or merged PR \"Multi-column mapping API for normalizer estimators.\" (#3172)"},{"Id":"428339300","IsPullRequest":false,"CreatedAt":"2019-04-03T17:00:53","Actor":"codemzs","Number":"3171","RawContent":null,"Title":"Multi-column mapping API for normalizer estimators.","State":"closed","Body":"We need an API that lets the user normalize multiple columns at once for ease and more importantly performance benefits. ","Url":"https://github.com/dotnet/machinelearning/issues/3171","RelatedDescription":"Closed issue \"Multi-column mapping API for normalizer estimators.\" (#3171)"},{"Id":"428474581","IsPullRequest":true,"CreatedAt":"2019-04-03T16:56:26","Actor":"eerhardt","Number":"3182","RawContent":null,"Title":"Fix IncludeBuildNumberInPackageVersion for official builds","State":"closed","Body":"When doing an official build and setting a AzDO build variable, the variable turns into an environment variable. When MSBuild props/targets files declare a property, if they don't check if the property is already set, the MSBuild props file will override the environment variable. This causes the AzDO build variable to be ignored.\r\n\r\nAdding a check if the IncludeBuildNumberInPackageVersion property is already set before setting it in Directory.Build.props.\r\n\r\nThis is a cherry-pick of #3181 for the `master` branch.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3182","RelatedDescription":"Closed or merged PR \"Fix IncludeBuildNumberInPackageVersion for official builds\" (#3182)"},{"Id":"428809129","IsPullRequest":true,"CreatedAt":"2019-04-03T16:32:35","Actor":"eerhardt","Number":"3189","RawContent":null,"Title":"Fix NuGet badge on README to show pre-release","State":"closed","Body":"Currently, the badge on the README is still showing `v0.11.0`, and not `v1.0.0-preview`.\r\n\r\nUse the `vpre` URL to show pre-release versions on the badge, as specified by\r\n\r\nhttps://shields.io/category/version\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3189","RelatedDescription":"Closed or merged PR \"Fix NuGet badge on README to show pre-release\" (#3189)"},{"Id":"428744072","IsPullRequest":false,"CreatedAt":"2019-04-03T12:39:35","Actor":"byQ96","Number":"3188","RawContent":null,"Title":"Evaluation ArgumentOutOfRangeException 'Score not found' and predicted val=0","State":"open","Body":"### System information\r\n\r\n- OS version/distro: Windows 10\r\n- .NET Version (eg., dotnet --info): Core 2.1 \r\n\r\n### Issue\r\n\r\n- What did you do?\r\nTrying to implement Movie recommendation example from: https://docs.microsoft.com/pl-pl/dotnet/machine-learning/tutorials/movie-recommmendation#other-recommendation-algorithms\r\n- What happened?\r\nReturned predicted values are 0. While model evaluation there is an error: ArgumentOutOfRangeException 'Score not found'\r\n- What did you expect?\r\nReturns wellpredicted rating values. evaluation proccess ends successfully and returns R2 error.\r\n\r\n### Source code / logs\r\n\r\nModels:\r\n```C#\r\npublic class MovieRating\r\n{\r\n    [LoadColumn(0)]\r\n    public string userId;\r\n\r\n    [LoadColumn(1)]\r\n    public string movieId;\r\n\r\n    [LoadColumn(2)]\r\n    public float Label;\r\n}\r\n\r\npublic class MovieRatingPrediction\r\n{\r\n    [ColumnName(\"Label\")]\r\n    public float Label;\r\n       \r\n    [ColumnName(\"Score\")]\r\n    public float Score;\r\n}\r\n```\r\nTraining:\r\n```C#\r\nIEstimator<ITransformer> estimator = mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \"userIdEncoded\", inputColumnName: \"userId\")\r\n                .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \"movieIdEncoded\", inputColumnName: \"movieId\"));\r\n\r\nvar options = new MatrixFactorizationTrainer.Options\r\n            {\r\n                MatrixColumnIndexColumnName = \"userIdEncoded\",\r\n                MatrixRowIndexColumnName = \"movieIdEncoded\",\r\n                LabelColumnName = \"Label\",\r\n                NumberOfIterations = 20,\r\n                ApproximationRank = 100\r\n            };\r\n\r\nvar trainerEstimator = estimator.Append(mlContext.Recommendation().Trainers.MatrixFactorization(options));\r\n\r\nvar trained_model = estimator.Fit(dataView);\r\n```\r\nSingle prediction:\r\n```C#\r\nvar predictionFunction = loadedModel.CreatePredictionEngine<MovieRating, MovieRatingPrediction>(mlContext);\r\n\r\nvar prediction = predictionFunction.Predict(new MovieRating { userId = \"1\", movieId = \"2\" });\r\n\r\nLog(\"Predicted rating: \" + prediction.Score);\r\n```\r\nEvaluation:\r\n\r\n```C#\r\nvar predictions = model.Transform(dataView);\r\n\r\nvar metrics = mlContext.Regression.Evaluate(data: predictions, label: \"Label\", score: \"Score\");\r\n```\r\nEvaluation error\r\n```C#\r\nSystem.ArgumentOutOfRangeException: „Score column 'Score' not found”\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3188","RelatedDescription":"Open issue \"Evaluation ArgumentOutOfRangeException 'Score not found' and predicted val=0\" (#3188)"},{"Id":"428588549","IsPullRequest":true,"CreatedAt":"2019-04-03T06:31:10","Actor":"sfilipi","Number":"3187","RawContent":null,"Title":"Multi column MapKeyToValue and MapValueToKey","State":"open","Body":"Towards #1209 more samples for MapKeyToValue and MapValueToKey\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3187","RelatedDescription":"Open PR \"Multi column MapKeyToValue and MapValueToKey\" (#3187)"},{"Id":"428533121","IsPullRequest":false,"CreatedAt":"2019-04-03T02:27:14","Actor":"agarwal-peeush","Number":"3186","RawContent":null,"Title":"How to transform Date column into C# DateTime Column?","State":"open","Body":"I'm working on a specific regression problem which provides Date of journey in string in dd/MM/yyyy format. How can I GetColumn as C# DateTime datatype column?\r\n\r\n```\r\npublic class IssueSample\r\n{\r\n        [LoadColumn(0)]\r\n        public string Col1;\r\n        [LoadColumn(1)]\r\n        public string DateOfJourneyStr;\r\n        \r\n        private const string DATETIME_FORMAT = \"dd/MM/yyyy\";\r\n        public DateTime? DateOfJourney\r\n            => ParseDateTime(DateOfJourneyStr);\r\n        public static DateTime? ParseDateTime(string dateOfJourneyStr)\r\n        {\r\n            if (DateTime.TryParseExact(dateOfJourneyStr, DATETIME_FORMAT, CultureInfo.InvariantCulture, DateTimeStyles.None, out var result))\r\n                return result;\r\n            return null;\r\n        }\r\n}\r\n```\r\n\r\nI'm trying to get Min and Max DateOfJourney values as following:\r\n```\r\nprivate static void BuildTrainEvaluateAndSaveModel(MLContext mlContext)\r\n        {\r\n            // STEP 1: Common data loading configuration\r\n            IDataView baseTrainingDataView = mlContext.Data.LoadFromTextFile<IssueSample>(TrainDataPath, hasHeader: true, separatorChar: ',');\r\n            IDataView testDataView = mlContext.Data.LoadFromTextFile<IssueSample>(TestDataPath, hasHeader: true, separatorChar: ',');\r\n\r\n            var dateOfJourneyMin = baseTrainingDataView.GetColumn<DateTime?>(mlContext, nameof(IssueSample.DateOfJourney)).Min();\r\n            System.Console.WriteLine($\"Min DateOfJourney = {dateOfJourneyMin}\");\r\n            var dateOfJourneyMax = baseTrainingDataView.GetColumn<DateTime?>(mlContext, nameof(IssueSample.DateOfJourney)).Max();\r\n            System.Console.WriteLine($\"Max DateOfJourney = {dateOfJourneyMax}\");\r\n        }\r\n```\r\n\r\nBut I get an error as follows: \r\n\r\n> System.ArgumentOutOfRangeException: 'Could not find input column 'DateOfJourney'\r\n> Parameter name: columnName'\r\n\r\nCould somebody suggest how to achieve this in ML.NET?","Url":"https://github.com/dotnet/machinelearning/issues/3186","RelatedDescription":"Open issue \"How to transform Date column into C# DateTime Column?\" (#3186)"},{"Id":"428507463","IsPullRequest":true,"CreatedAt":"2019-04-03T00:39:43","Actor":"yaeldekel","Number":"3185","RawContent":null,"Title":"Improve saving and loading of TextFeaturizingEstimator","State":"open","Body":"Fixes #3128.","Url":"https://github.com/dotnet/machinelearning/pull/3185","RelatedDescription":"Open PR \"Improve saving and loading of TextFeaturizingEstimator\" (#3185)"},{"Id":"428370621","IsPullRequest":false,"CreatedAt":"2019-04-03T00:19:43","Actor":"prathyusha12345","Number":"3175","RawContent":null,"Title":"Auc is NaN when loading data from IEnumerable","State":"closed","Body":"I am getting below error when I am evaluating the model.\r\n\r\nSystem.ArgumentOutOfRangeException: 'AUC is not definied when there is no negative class in the data\r\nParameter name: NegSample'\r\n### Source code / logs\r\n\r\nThe values of  label column are **true**/**false**. I applied transformation on label using MapValuetoKey to convert true to 1 and false to 0. But I still get the error while evaluating.\r\n\r\nSee the below code.\r\n\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.Data.DataView;\r\nusing System.Collections.Generic;\r\n\r\nnamespace MLNETConsoleApp3\r\n{\r\n    class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            // 1. Implement the pipeline for creating and training the model    \r\n            var mlContext = new MLContext();\r\n            var trainingData = GetTrainingData();\r\n            var TestData = GetTestData();\r\n\r\n            // 2. Specify how training data is going to be loaded into the DataView\r\n            IDataView trainingDataView = mlContext.Data.LoadFromEnumerable(trainingData);\r\n\r\n            // 2. Create a pipeline to prepare your data, pick your features and apply a machine learning algorithm.\r\n            // 2a. Featurize the text into a numeric vector that can be used by the machine learning algorithm.\r\n            var pipeline = mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \"keyName\", inputColumnName: DefaultColumnNames.Label).\r\n                Append(mlContext.Transforms.Text.FeaturizeText(outputColumnName: DefaultColumnNames.Features, inputColumnName: nameof(SentimentData.Text)))\r\n                    .Append(mlContext.BinaryClassification.Trainers.StochasticDualCoordinateAscent(labelColumnName: \"keyName\",\r\n                                                                                                   featureColumnName: DefaultColumnNames.Features))\r\n                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName: DefaultColumnNames.Label, inputColumnName: \"keyName\"));\r\n\r\n             var transformedData_default = pipeline.Fit(trainingDataView).Transform(trainingDataView);\r\n            var preViewTransformedData = transformedData_default.Preview(maxRows: 4);\r\n\r\n            foreach (var row in preViewTransformedData.RowView)\r\n            {\r\n                var ColumnCollection = row.Values;\r\n                string lineToPrint = \"Row--> \";\r\n                foreach (KeyValuePair<string, object> column in ColumnCollection)\r\n                {\r\n                    lineToPrint += $\"| {column.Key}:{column.Value}\";\r\n                }\r\n                Console.WriteLine(lineToPrint + \"\\n\");\r\n            }\r\n\r\n            // 3. Get a model by training the pipeline that was built.\r\n            Console.WriteLine(\"Creating and Training a model for Sentiment Analysis using ML.NET\");\r\n            ITransformer model = pipeline.Fit(trainingDataView);\r\n\r\n            // 4. Evaluate the model to see how well it performs on different dataset (test data).\r\n            Console.WriteLine(\"Training of model is complete \\nEvaluating the model with test data\");\r\n\r\n            IDataView testDataView = mlContext.Data.LoadFromEnumerable(TestData);\r\n            var predictions = model.Transform(testDataView);\r\n            var results = mlContext.BinaryClassification.Evaluate(predictions);\r\n            Console.WriteLine($\"Accuracy: {results.Accuracy:P2}\");\r\n\r\n            // 5. Use the model for making a single prediction.\r\n            var predictionEngine = model.CreatePredictionEngine<SentimentData, SentimentPrediction>(mlContext);\r\n            var testInput = new SentimentData { Text = \"ML.NET is fun, more samples at https://github.com/dotnet/machinelearning-samples\" };\r\n            SentimentPrediction resultprediction = predictionEngine.Predict(testInput);\r\n\r\n            /* This template uses a minimal dataset to build a sentiment analysis model which leads to relatively low accuracy. \r\n             * Building good Machine Learning models require large volumes of data. This template comes with a minimal dataset (Data/wikipedia-detox) for sentiment analysis. \r\n             * In order to build a sentiment analysis model with higher accuracy please follow the walkthrough at https://aka.ms/mlnetsentimentanalysis/. */\r\n            Console.WriteLine($\"Predicted sentiment for \\\"{testInput.Text}\\\" is: { (Convert.ToBoolean(resultprediction.Prediction) ? \"Positive\" : \"Negative\")}\");\r\n\r\n            // 6. Save the model to file so it can be used in another app.\r\n            Console.WriteLine(\"Saving the model\");\r\n\r\n            using (var fs = new FileStream(\"sentiment_model.zip\", FileMode.Create, FileAccess.Write, FileShare.Write))\r\n            {\r\n                model.SaveTo(mlContext, fs);\r\n                fs.Close();\r\n            }\r\n\r\n            Console.ReadLine();\r\n        }\r\n\r\n\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3175","RelatedDescription":"Closed issue \"Auc is NaN when loading data from IEnumerable\" (#3175)"},{"Id":"428502357","IsPullRequest":true,"CreatedAt":"2019-04-03T00:16:07","Actor":"abgoswam","Number":"3184","RawContent":null,"Title":"Samples for FeatureSelection transform estimators","State":"open","Body":"Towards #1209 \r\n\r\nThe PR makes the following changes\r\n\r\n- Adds sample for the `SelectFeaturesBasedOnCount` transform estimator.\r\n- Adds sample for the `SelectFeaturesBasedOnMutualInformation` transform estimator.\r\n- Delete old sample.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3184","RelatedDescription":"Open PR \"Samples for FeatureSelection transform estimators\" (#3184)"},{"Id":"428479112","IsPullRequest":true,"CreatedAt":"2019-04-02T22:45:40","Actor":"zeahmed","Number":"3183","RawContent":null,"Title":"Created samples for 'ProduceWordBags' and 'ProduceHashedWordBags' API.","State":"open","Body":"Related to #1209.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3183","RelatedDescription":"Open PR \"Created samples for 'ProduceWordBags' and 'ProduceHashedWordBags' API.\" (#3183)"},{"Id":"428473929","IsPullRequest":true,"CreatedAt":"2019-04-02T22:39:01","Actor":"eerhardt","Number":"3181","RawContent":null,"Title":"Fix IncludeBuildNumberInPackageVersion for official builds","State":"closed","Body":"When doing an official build and setting a AzDO build variable, the variable turns into an environment variable. When MSBuild props/targets files declare a property, if they don't check if the property is already set, the MSBuild props file will override the environment variable. This causes the AzDO build variable to be ignored.\r\n\r\nAdding a check if the IncludeBuildNumberInPackageVersion property is already set before setting it in Directory.Build.props.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3181","RelatedDescription":"Closed or merged PR \"Fix IncludeBuildNumberInPackageVersion for official builds\" (#3181)"},{"Id":"428458616","IsPullRequest":true,"CreatedAt":"2019-04-02T21:43:07","Actor":"wschin","Number":"3180","RawContent":null,"Title":"Fix a value-mapping bug","State":"open","Body":"This PR fixes #3166.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3180","RelatedDescription":"Open PR \"Fix a value-mapping bug\" (#3180)"},{"Id":"428442476","IsPullRequest":true,"CreatedAt":"2019-04-02T21:01:45","Actor":"abgoswam","Number":"3179","RawContent":null,"Title":"Samples for categorical transform estimators","State":"open","Body":"Towards #1209 \r\n\r\nThe PR makes the following changes\r\n\r\n- Adds sample for the `OneHotHashEncoding` transform estimator.\r\n- Updated  sample for the `OneHotEncoding` transform estimator.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3179","RelatedDescription":"Open PR \"Samples for categorical transform estimators\" (#3179)"},{"Id":"428425374","IsPullRequest":true,"CreatedAt":"2019-04-02T20:39:10","Actor":"shauheen","Number":"3178","RawContent":null,"Title":"Cherry pick release notes into release for RC1","State":"closed","Body":"Adding release notes for RC1 (#3176)\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3178","RelatedDescription":"Closed or merged PR \"Cherry pick release notes into release for RC1\" (#3178)"},{"Id":"428400256","IsPullRequest":true,"CreatedAt":"2019-04-02T20:19:04","Actor":"shauheen","Number":"3176","RawContent":null,"Title":"Adding release notes for RC1","State":"closed","Body":"Adding release notes for v1.0.0-preview","Url":"https://github.com/dotnet/machinelearning/pull/3176","RelatedDescription":"Closed or merged PR \"Adding release notes for RC1\" (#3176)"},{"Id":"428417671","IsPullRequest":true,"CreatedAt":"2019-04-02T20:05:31","Actor":"zeahmed","Number":"3177","RawContent":null,"Title":"Created samples for 'ProduceNgrams' and 'ProduceHashedNgrams' APIs.","State":"open","Body":"Related to #1209.","Url":"https://github.com/dotnet/machinelearning/pull/3177","RelatedDescription":"Open PR \"Created samples for 'ProduceNgrams' and 'ProduceHashedNgrams' APIs.\" (#3177)"},{"Id":"428362681","IsPullRequest":true,"CreatedAt":"2019-04-02T18:47:59","Actor":"shauheen","Number":"3174","RawContent":null,"Title":"Cherry-pick for RC1","State":"closed","Body":"Cherry picking changes into release for RC1\r\n\r\n*No Squash*","Url":"https://github.com/dotnet/machinelearning/pull/3174","RelatedDescription":"Closed or merged PR \"Cherry-pick for RC1\" (#3174)"},{"Id":"428360252","IsPullRequest":true,"CreatedAt":"2019-04-02T17:48:16","Actor":"Ivanidzo4ka","Number":"3173","RawContent":null,"Title":"Put product version with git commit into model.zip/version.txt","State":"open","Body":"Fixes #3132 ","Url":"https://github.com/dotnet/machinelearning/pull/3173","RelatedDescription":"Open PR \"Put product version with git commit into model.zip/version.txt\" (#3173)"},{"Id":"428325402","IsPullRequest":true,"CreatedAt":"2019-04-02T16:25:55","Actor":"wschin","Number":"3170","RawContent":null,"Title":"Fix matrix factorization trainer's doc based on user feedback","State":"open","Body":"This PR fixes #3169 by\r\n- updating key-typed variable's description in matrix factorization trainer's doc, and\r\n- adding one more reference for alg used.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3170","RelatedDescription":"Open PR \"Fix matrix factorization trainer's doc based on user feedback\" (#3170)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-04T05:30:33.6122214Z","RunDurationInMilliseconds":608}