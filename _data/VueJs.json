{"Data":{"Vue-Issues":{"Issues":[{"Id":"412408054","IsPullRequest":false,"CreatedAt":"2019-02-21T02:49:07","Actor":"cypressious","Number":"9534","RawContent":null,"Title":"When switching between two of the same components with slot using v-else, I get a render error","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/4l3wn6r3nx](https://codesandbox.io/s/4l3wn6r3nx)\r\n\r\n### Steps to reproduce\r\nCheck the checkbox to trigger the error\r\n\r\n### What is expected?\r\nThe value \"2\" should be rendered\r\n\r\n### What is actually happening?\r\n```\r\n[Vue warn]: Error in render: \"TypeError: item.a is undefined\"\r\n\r\nfound in\r\n\r\n---> <HelloWorld> at /src/components/HelloWorld.vue\r\n       <App> at /src/App.vue\r\n         <Root>\r\n```\r\n\r\nand \"1\" is still being rendered.\r\n\r\n---\r\nI have two of the same components next to each other and switch between them using `v-else`.\r\n\r\nThis used to work in earlier versions of Vue but in 2.6.6 I get this unexpected render error. It appears as if component 1 is being rendered with the properties of component 2.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9534","RelatedDescription":"Closed issue \"When switching between two of the same components with slot using v-else, I get a render error\" (#9534)"},{"Id":"412682342","IsPullRequest":false,"CreatedAt":"2019-02-20T23:46:44","Actor":"robertmoura","Number":"9540","RawContent":null,"Title":"Named Slot in Render Function not Registering","State":"open","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/wkyokr97m7](https://codesandbox.io/s/wkyokr97m7)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nDon't need to do anything.\r\n\r\n### What is expected?\r\nThe content slot text should be displayed (\"This is a content slot\").\r\n\r\n### What is actually happening?\r\nThe content slot is not being recognized (\"No content slot\" is displayed).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9540","RelatedDescription":"Open issue \"Named Slot in Render Function not Registering\" (#9540)"},{"Id":"412666372","IsPullRequest":false,"CreatedAt":"2019-02-20T22:50:56","Actor":"FranckFreiburger","Number":"9539","RawContent":null,"Title":"make serverPrefetch() rejection trappable","State":"open","Body":"### What problem does this feature solve?\r\nCurrently, rejections in `serverPrefetch` cannot be handled\r\neg.\r\n```\r\nserverPrefetch() {\r\n\r\n   return Promise.reject('myError')\r\n}\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nMaybe send `serverPrefetch` rejections as `renderStream` error event ?\r\n\r\neg.\r\n\r\n```\r\nconst renderStream = renderer.renderToStream(context)\r\nrenderStream.on('error', err => { ... })\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9539","RelatedDescription":"Open issue \"make serverPrefetch() rejection trappable\" (#9539)"},{"Id":"412519140","IsPullRequest":true,"CreatedAt":"2019-02-20T16:37:17","Actor":"vue-bot","Number":"9538","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9538","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9538)"},{"Id":"412508747","IsPullRequest":true,"CreatedAt":"2019-02-20T16:19:16","Actor":"vue-bot","Number":"9537","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9537","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9537)"},{"Id":"412507582","IsPullRequest":true,"CreatedAt":"2019-02-20T16:14:19","Actor":"vue-bot","Number":"9536","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9536","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9536)"},{"Id":"412419520","IsPullRequest":false,"CreatedAt":"2019-02-20T13:15:54","Actor":"danielsamuels","Number":"9535","RawContent":null,"Title":"Checkbox doesn't have it's checked state set via v-model if the click event is prevented","State":"open","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/s4ub8dnc/3/](https://jsfiddle.net/s4ub8dnc/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have a checkbox which needs to get it's checked state from a VueX store, but I also need to be able to determine whether or not shift was being held when the checkbox was clicked.  To do this I'm using `@click.prevent` on the checkbox (so that I have the event being passed to the method) and then using `v-model` to determine the checked state.\r\n\r\nHowever, regardless of whether or not the `v-model` value is true or false, the checkbox never gains the checked state if the click is prevented.  It seems that there is still a reliance on the click event in order to set the state.\r\n\r\n### What is expected?\r\nI would expect the checkbox to be checked if the `v-model` value is set to `true`, regardless of how the checkbox arrived at that state - by something else setting it to true, or by the click handler setting it.\r\n\r\n### What is actually happening?\r\nThe click binding having `.prevent` on it stops the checkbox from receiving it's checked state, even when the `v-model` value is true\r\n\r\n---\r\nThe reason why I haven't just used a setter in the computed is because the setter doesn't get given the click event, so I can determine whether or not shift was being held at the point of clicking the checkbox.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9535","RelatedDescription":"Open issue \"Checkbox doesn't have it's checked state set via v-model if the click event is prevented\" (#9535)"},{"Id":"412402964","IsPullRequest":true,"CreatedAt":"2019-02-20T12:39:40","Actor":"Shasharoman","Number":"9533","RawContent":null,"Title":"perf(util): remove unnessary variable in cached","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nVerify that the `npm run test:ssr` process fails.","Url":"https://github.com/vuejs/vue/pull/9533","RelatedDescription":"Closed or merged PR \"perf(util): remove unnessary variable in cached\" (#9533)"},{"Id":"412255101","IsPullRequest":false,"CreatedAt":"2019-02-20T05:44:00","Actor":"EricChoiKR","Number":"9532","RawContent":null,"Title":"How to use namespace defined at 'd.ts' in '.vue'?","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/m9zk5njm3x](https://codesandbox.io/s/m9zk5njm3x)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```typescript\r\n// src/components/my-component.vue\r\n\r\n<template>\r\n...\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Component } from \"vue-property-decorator\";\r\n\r\n@Component()\r\nexport default class MyComponent extends Vue {\r\n\tprivate foo: MyComponent.MyEnumType;\r\n//                   ^^^^^^^^^^^\r\n//                   'MyComponent' only refers to a type, but is being used as a namespace here.\r\n\tconstructor() { super(); }\r\n}\r\n</script>\r\n```\r\n\r\n```typescript\r\n// src/types/components/my-component.d.ts\r\n\r\ndeclare namespace MyComponent {\r\n\ttype MyEnumType: \"foo\" | \"bar\";\r\n}\r\n```\r\n\r\n```json\r\n{\r\n\t...\r\n\t\"typeRoots\": [\"node_modules/@types\", \"src/types\"]\r\n\t...\r\n}\r\n```\r\n\r\n### What is expected?\r\nHas to not exist error.\r\n\r\n### What is actually happening?\r\n'MyComponent' only refers to a type, but is being used as a namespace here.\r\n\r\n---\r\nI'm using Vue.js 2 with TypeScript 3.3 at work, I experience a problem while defining namespace.\r\n\r\n`'MyComponent' only refers to a type, but is being used as a namespace here.`\r\nI can't understand why occurrences this problem.\r\nIf I separating part of TypeScript to `.ts`, then not exists any errors in there, but I want to use a first way.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9532","RelatedDescription":"Open issue \"How to use namespace defined at 'd.ts' in '.vue'?\" (#9532)"},{"Id":"412225228","IsPullRequest":true,"CreatedAt":"2019-02-20T03:17:18","Actor":"fisker","Number":"9531","RawContent":null,"Title":"perf(util): remove unnessary variable in cached","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nremove unnessary variable in cached","Url":"https://github.com/vuejs/vue/pull/9531","RelatedDescription":"Open PR \"perf(util): remove unnessary variable in cached\" (#9531)"},{"Id":"411913801","IsPullRequest":false,"CreatedAt":"2019-02-19T13:26:46","Actor":"karaozgur","Number":"9528","RawContent":null,"Title":"Dynamic arguments upper case problem","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6s4cg2pv/3/](https://jsfiddle.net/6s4cg2pv/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen you open the fiddle you will see dynamic attributes refers camel case varibales(slotName , attributeName) but vue is looking for lower case variables.\r\nif you cahange varibale names in data to slotname  and attributename it works fine.\r\n\r\n### What is expected?\r\ndynamic attribute variables must look for exact variable name\r\n\r\n### What is actually happening?\r\ndynamic attributes refers camel case varibales but vue is looking for lower case variables.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9528","RelatedDescription":"Closed issue \"Dynamic arguments upper case problem\" (#9528)"},{"Id":"411921292","IsPullRequest":false,"CreatedAt":"2019-02-19T13:25:31","Actor":"skyline0705","Number":"9529","RawContent":null,"Title":"When execute app.$destroy(), the dom element of app.$el didn't be removed","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/xayduwf0/](https://jsfiddle.net/xayduwf0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nopen the link and run\r\n\r\n\r\n### What is expected?\r\nthere should no html in the result window\r\n\r\n\r\n### What is actually happening?\r\nthe result shows all the rendered html\r\n\r\n---\r\nI'm not sure it is by design or a bug……\r\nThe scene I can think of the use of is, if someone use Vue.js in an progressive web page, they maybe need to control the app by themself, like call $destroy by them self, now if they want to clean the document, they need to execute\r\n```javasscript\r\napp.$destroy();\r\napp.$el.parentNode.removeChild(app.$el);\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9529","RelatedDescription":"Closed issue \"When execute app.$destroy(), the dom element of app.$el didn't be removed\" (#9529)"},{"Id":"411850193","IsPullRequest":true,"CreatedAt":"2019-02-19T10:24:11","Actor":"jackmu95","Number":"9527","RawContent":null,"Title":"fix(util): handle more edge cases in `looseEqual()` util and add spec","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis PR makes the `looseEqual()` util more bulletproof and adds an extra spec for it.\r\n\r\nThe previous implementation failed at following tests:\r\n\r\n```bash\r\nExpected: false\r\nReceived: true\r\n\r\n  65 |     // Files with slightly different dates\r\n> 66 |     expect(looseEqual(file1, file3)).toBe(false)\r\n```\r\n\r\n```bash\r\nExpected: false\r\nReceived: true\r\n\r\n  102 |     // Different regex\r\n> 103 |     expect(looseEqual(rx1, rx3)).toBe(false)\r\n```\r\n\r\n```bash\r\nExpected: false\r\nReceived: true\r\n\r\n> 153 |     expect(looseEqual(obj1, date1)).toBe(false)\r\n```\r\n\r\nPerformance should also be equal or slightly better because early exits are used wherever possible:\r\nhttps://jsperf.com/looseequal-comparison\r\n\r\nShoutout to @tmorehouse for helping with the tests and handling all the edge cases.","Url":"https://github.com/vuejs/vue/pull/9527","RelatedDescription":"Open PR \"fix(util): handle more edge cases in `looseEqual()` util and add spec\" (#9527)"},{"Id":"411846855","IsPullRequest":true,"CreatedAt":"2019-02-19T10:17:01","Actor":"Shasharoman","Number":"9526","RawContent":null,"Title":"fix(#9511): avoid promise catch multiple times","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nfixed #9511 \r\n\r\nIn some cases, invokeWithErrorHandling will have nested calls, and Promise will independently catch multiple times, resulting in multiple calls to handleError.\r\n\r\nLook at a sample code：\r\n\r\n``` javascript\r\nvar p = Promise.reject('some err');\r\n\r\np.catch(() => console.log('1'));  // p = p.catch(...)\r\np.catch(() => console.log('2'));\r\n```\r\nThe above code will output 1 and 2, but if you reassign the first catch call to p, it will not output 2.","Url":"https://github.com/vuejs/vue/pull/9526","RelatedDescription":"Open PR \"fix(#9511): avoid promise catch multiple times\" (#9526)"},{"Id":"411817108","IsPullRequest":true,"CreatedAt":"2019-02-19T09:08:35","Actor":"flyyang","Number":"9525","RawContent":null,"Title":"chore: remove unused build alias","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [x] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nBuild scripts alias for entries is not exists anymore.","Url":"https://github.com/vuejs/vue/pull/9525","RelatedDescription":"Open PR \"chore: remove unused build alias\" (#9525)"},{"Id":"411733063","IsPullRequest":false,"CreatedAt":"2019-02-19T08:49:08","Actor":"askart","Number":"9522","RawContent":null,"Title":"Nested components update/rerender issue","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/00v11z0z3n?module=%2Fsrc%2Fbase-table-column.js](https://codesandbox.io/s/00v11z0z3n?module=%2Fsrc%2Fbase-table-column.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nToggle checkboxes to see changes. In 1st table columns from a to e is ok except c. by clicking c1 or c2 column e will disappear.\r\n\r\n### What is expected?\r\nif you click c1 then c1 should disappear\r\n\r\n### What is actually happening?\r\nby clicking c1 disappears e\r\n\r\n---\r\nAdded link to minimal reproduction.\r\nhtml code inside App.vue, main logic occurs in base-table-column.js file\r\n\r\ni've searched and read about HOCs in vue over the internet (github, stackoverflow, forum.vuejs.org, etc.), found nothing that can help solve this issue and decided to create this issue.\r\ngot implementation of HOC from [#6201 (comment)](https://github.com/vuejs/vue/issues/6201#issuecomment-317762527).\r\nI don't know how to implement actual v-if inside render, I've read about it in the documentation render section. But I think the problem is that component renders as component and as a slot inside component.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9522","RelatedDescription":"Closed issue \"Nested components update/rerender issue\" (#9522)"},{"Id":"411677105","IsPullRequest":false,"CreatedAt":"2019-02-19T08:42:53","Actor":"lfkwtz","Number":"9521","RawContent":null,"Title":"Vue 2.6 breaks Cleave.js formatting when v-model is used","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/lfkwtz/pen/GzzjmW](https://codepen.io/lfkwtz/pen/GzzjmW)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. See last input auto-formatting\r\n2. Update codepen to Vue 2.6x\r\n3. See last input no longer auto-formatting\r\n\r\n### What is expected?\r\nThe attached codepen comes from https://buefy.org/extensions/cleavejs\r\n\r\nIn Vue 2.5.x and below, the last example (where the input utilizes v-model) works as expected.\r\n\r\n### What is actually happening?\r\nWhen you update the codepen to Vue 2.6x, that input no longer auto-formats\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9521","RelatedDescription":"Closed issue \"Vue 2.6 breaks Cleave.js formatting when v-model is used\" (#9521)"},{"Id":"411757927","IsPullRequest":false,"CreatedAt":"2019-02-19T07:52:46","Actor":"HamedFathi","Number":"9523","RawContent":null,"Title":"Support container-less (no parent element) components ","State":"closed","Body":"### What problem does this feature solve?\r\n\r\nThis is a problem to convert some Bootstrap 4 components (or other CSS frameworks) for example: \r\n\r\n```html\r\n<div class=\"progress\">\r\n  <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 15%\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  <div class=\"progress-bar bg-success\" role=\"progressbar\" style=\"width: 30%\" aria-valuenow=\"30\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  <div class=\"progress-bar bg-info\" role=\"progressbar\" style=\"width: 20%\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n</div>\r\n```\r\n\r\nWe can not create two components `progress-group` and `progress` because inside dives can not accept another div (`parent element`). Bootstrap 4 does not work in this way.\r\n\r\nExisting `parent element` for each component destroys the Bootstrap 4 structure I can show you another examples:\r\n\r\n```html\r\n<div id=\"carouselExampleControls\" class=\"carousel slide\" data-ride=\"carousel\">\r\n  <div class=\"carousel-inner\">\r\n    <div class=\"carousel-item active\">\r\n      <img src=\"...\" class=\"d-block w-100\" alt=\"...\">\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img src=\"...\" class=\"d-block w-100\" alt=\"...\">\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img src=\"...\" class=\"d-block w-100\" alt=\"...\">\r\n    </div>\r\n  </div>\r\n```\r\n\r\n```html\r\n<div class=\"input-group mb-3\">\r\n  <div class=\"input-group-prepend\">\r\n    <span class=\"input-group-text\">$</span>\r\n  </div>\r\n  <input type=\"text\" class=\"form-control\" aria-label=\"Amount (to the nearest dollar)\">\r\n  <div class=\"input-group-append\">\r\n    <span class=\"input-group-text\">.00</span>\r\n  </div>\r\n</div>\r\n```\r\n\r\nand a lot more.\r\n\r\nSo I want to ask for **containerless (a component without `parent element` as a wrapper) feature** for component design system. It can help us to convert a CSS framework to complete Vue toolbox.\r\n\r\n### What does the proposed API look like?\r\nI am not sure the right way may be a config as `{ containerless : true }`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9523","RelatedDescription":"Closed issue \"Support container-less (no parent element) components \" (#9523)"},{"Id":"411771572","IsPullRequest":false,"CreatedAt":"2019-02-19T07:20:17","Actor":"inherithandle","Number":"9524","RawContent":null,"Title":"Korean official website doesn't redirect to the corresponding english page when switching to English from Korean.","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://kr.vuejs.org/v2/guide/index.html](https://kr.vuejs.org/v2/guide/index.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Go to https://kr.vuejs.org/v2/guide/index.html\r\n2. Click on \"다른 언어로 보기\" on the upper right of the page.\r\n3. See the unexpected result.\r\n\r\n### What is expected?\r\nI expected to get the corresponding english page.\r\n\r\n### What is actually happening?\r\nit redirected me to https://vuejs.org/\r\n\r\n---\r\nswitching from English to Korean works, not vice versa.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9524","RelatedDescription":"Closed issue \"Korean official website doesn't redirect to the corresponding english page when switching to English from Korean.\" (#9524)"},{"Id":"411598255","IsPullRequest":false,"CreatedAt":"2019-02-18T21:31:41","Actor":"askart","Number":"9520","RawContent":null,"Title":"nested components rerender issue","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/pjyj620q97?module=%2Fsrc%2FApp.vue](https://codesandbox.io/s/pjyj620q97?module=%2Fsrc%2FApp.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1st table is troublesome, 2nd table is expected behavior. toggle checkboxes in select (Columns). in 1st table columns from a to e is ok except c. by clicking c1 or c2 or c3 column e will disappear.\r\n\r\n### What is expected?\r\nif you click c1 then c1 should disappear\r\n\r\n### What is actually happening?\r\nby clicking c1 disappears e\r\n\r\n---\r\ni've searched and read about HOCs in vue over the internet (github, stackoverflow, forum.vuejs.org, etc.), found nothing that can help solve this issue and decided to create this issue.\r\ngot implementation of HOC from https://github.com/vuejs/vue/issues/6201#issuecomment-317762527.\r\nI don't know how to implement actual v-if inside render, I've read about it in the documentation render section. But I think the problem is that component renders as component and as a slot inside component.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9520","RelatedDescription":"Closed issue \"nested components rerender issue\" (#9520)"},{"Id":"411595558","IsPullRequest":false,"CreatedAt":"2019-02-18T19:34:06","Actor":"ffxsam","Number":"9517","RawContent":null,"Title":"Named slots (v-slot) not working as expected","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/pkwj6z6qp0](https://codesandbox.io/s/pkwj6z6qp0)\r\n\r\n### Steps to reproduce\r\nOpen CodeSandbox link\r\n\r\n### What is expected?\r\nWow slot shows nothing\r\n\r\n### What is actually happening?\r\nExpected text shows up in default slot instead\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9517","RelatedDescription":"Closed issue \"Named slots (v-slot) not working as expected\" (#9517)"},{"Id":"411596180","IsPullRequest":false,"CreatedAt":"2019-02-18T18:14:50","Actor":"askart","Number":"9519","RawContent":null,"Title":"nested components update/rerender issue","State":"closed","Body":"Version\r\n2.5.22\r\n\r\nReproduction link\r\nhttps://codesandbox.io/s/pjyj620q97?module=%2Fsrc%2FApp.vue\r\n\r\nSteps to reproduce\r\n1st table is troublesome, 2nd table is expected behavior. toggle checkboxes in select (Colums). in 1st table columns from a to e is ok except c. by clicking c1 or c2 or c3 column e will disappear.\r\n\r\nWhat is expected?\r\nif you click c1 then c1 should disappear\r\n\r\nWhat is actually happening?\r\nby clicking c1 disappears e\r\n\r\nI don't know how to implement v-if inside render, I've read about it in the documentation render section. But I think the problem is that component renders as component and as a slot inside component.","Url":"https://github.com/vuejs/vue/issues/9519","RelatedDescription":"Closed issue \"nested components update/rerender issue\" (#9519)"},{"Id":"411595770","IsPullRequest":false,"CreatedAt":"2019-02-18T18:13:26","Actor":"askart","Number":"9518","RawContent":null,"Title":"nested components update/rerender issue","State":"closed","Body":"Version\r\n2.5.22\r\n\r\nReproduction link\r\nhttps://codesandbox.io/s/pjyj620q97?module=%2Fsrc%2FApp.vue\r\n\r\nSteps to reproduce\r\n1st table is troublesome, 2nd table is expected behavior. toggle checkboxes in select (Colums). in 1st table columns from a to e is ok except c. by clicking c1 or c2 or c3 column e will disappear.\r\n\r\nWhat is expected?\r\nif you click c1 then c1 should disappear\r\n\r\nWhat is actually happening?\r\nby clicking c1 disappears e\r\n\r\nI don't know how to implement v-if inside render, I've read about it in the documentation render section. But I think the problem is that component renders as component and as a slot inside component.","Url":"https://github.com/vuejs/vue/issues/9518","RelatedDescription":"Closed issue \"nested components update/rerender issue\" (#9518)"},{"Id":"411595129","IsPullRequest":false,"CreatedAt":"2019-02-18T18:11:27","Actor":"askart","Number":"9516","RawContent":null,"Title":"nested components update/rerender issue","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9516","RelatedDescription":"Closed issue \"nested components update/rerender issue\" (#9516)"},{"Id":"411427017","IsPullRequest":false,"CreatedAt":"2019-02-18T11:19:16","Actor":"stevelacey","Number":"9515","RawContent":null,"Title":"Chrome overrides value if superior to max value of input[type=range] because Vue sets attributes in the same order as they are provided","State":"open","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\nhttps://codepen.io/posva/pen/LqMMNV\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n- set value attribute before max with a value > 100 on Chrome\r\n\r\n### What is expected?\r\nVue should respect the value attr regardless of whether it is outside of the bounds of the default min/max threshold\r\n\r\n### What is actually happening?\r\nVue sets the value to 100 if it is >100\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9515","RelatedDescription":"Open issue \"Chrome overrides value if superior to max value of input[type=range] because Vue sets attributes in the same order as they are provided\" (#9515)"},{"Id":"411349455","IsPullRequest":true,"CreatedAt":"2019-02-18T09:02:18","Actor":"senghout016","Number":"9514","RawContent":null,"Title":"add vue.js","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9514","RelatedDescription":"Closed or merged PR \"add vue.js\" (#9514)"},{"Id":"411321322","IsPullRequest":false,"CreatedAt":"2019-02-18T06:55:49","Actor":"antiai1","Number":"9513","RawContent":null,"Title":"vue.js for循环里用组件，怎么通过props给子组件传值","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[Hhttps://www.jianshu.com/p/df61c04c97f6)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNULL\r\n\r\n### What is expected?\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>自定义指令</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\">\r\n    <script src=\"js/flexible.js\"></script>\r\n    <link rel=\"stylesheet\" href=\"./css/index.css\">\r\n</head>\r\n<body>\r\n<div id=\"app\">\r\n    <div class=\"questions\">\r\n        <div v-for=\"(item,index) in qtArr\">\r\n            <question :qtObj=\"item\"></question>\r\n        </div>\r\n    </div>\r\n    <!--操作-->\r\n    <handler :page=\"page\"></handler>\r\n</div>\r\n<script src=\"js/vue.min.js\"></script>\r\n<script>\r\n    // component handler\r\n    Vue.component('handler', {\r\n        props: {\r\n            page: {\r\n                type: Number,\r\n                required: true\r\n            }\r\n        },\r\n        template: `\r\n            <div class=\"handler\">\r\n            <button v-if=\"this.currentPage !== 1\">上一页</button>\r\n             <button>重置</button>\r\n            <button v-if=\"this.currentPage !== 3\">下一页</button>\r\n    </div>\r\n        `,\r\n        data() {\r\n            return {\r\n                currentPage: this.page,\r\n            }\r\n        },\r\n    })\r\n    //question component\r\n    Vue.component('question', {\r\n        props:{\r\n            qtObj:{\r\n                type:String,\r\n                required: true\r\n            }\r\n        },\r\n        template: `\r\n            <div class=\"qt\">\r\n\r\n            </div>\r\n        `,\r\n        data() {\r\n            return {\r\n                dataObj: this.qtObj\r\n            }\r\n        },\r\n        mounted(){\r\n            console.log(this.qtObj);  //打印出来一直是undefined 请大神指教\r\n        }\r\n\r\n    })\r\n    var app = new Vue({\r\n        el: '#app',\r\n        data: {\r\n            page: 1,\r\n            qtArr: [\r\n                {\r\n                    num: 1,\r\n                    type: 'radio',\r\n                    title: '请问你的性别是？',\r\n                    options: [\"男\", \"女\"],\r\n                    name: 'sex',\r\n                },\r\n                {\r\n                    num: 2,\r\n                    type: 'checkbox',\r\n                    title: '你喜欢的水果有哪些？',\r\n                    options: [\"apple\", \"pear\", \"banner\", \"strawberry \"],\r\n                    name: 'Fruit'\r\n                },\r\n                {\r\n                    num: 3,\r\n                    type: 'text',\r\n                    title: '简单介绍一下你自己吧!',\r\n                    options: [],\r\n                    name: 'intro'\r\n                }\r\n            ],\r\n\r\n        },\r\n\r\n    })\r\n</script>\r\n</body>\r\n</html>\r\n\r\n\r\n### What is actually happening?\r\nquestion 组件中通过props传递进来的值是undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9513","RelatedDescription":"Closed issue \"vue.js for循环里用组件，怎么通过props给子组件传值\" (#9513)"},{"Id":"411303829","IsPullRequest":false,"CreatedAt":"2019-02-18T05:07:52","Actor":"antiai1","Number":"9512","RawContent":null,"Title":"vue.js for循环里用组件，怎么通过props给子组件传值","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/38525767/52929217-71397e80-337e-11e9-9dbd-80e7b5c9048d.png)\r\n![image](https://user-images.githubusercontent.com/38525767/52929242-975f1e80-337e-11e9-8754-96c4acfc834e.png)\r\n![image](https://user-images.githubusercontent.com/38525767/52929262-a776fe00-337e-11e9-88f2-66947550606d.png)\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/9512","RelatedDescription":"Closed issue \"vue.js for循环里用组件，怎么通过props给子组件传值\" (#9512)"},{"Id":"411234246","IsPullRequest":false,"CreatedAt":"2019-02-17T20:58:34","Actor":"jfgodoy","Number":"9511","RawContent":null,"Title":"Vue.config.errorHandler called twice when I return a rejected Promise from a handler of a component event","State":"open","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/qgQYra?editors=1011](https://codepen.io/anon/pen/qgQYra?editors=1011)\r\n\r\n### Steps to reproduce\r\nThe problem seems to happen when I handle an event emitted from a component and return a rejected promise. To see the problem in action, open the codepen link, click the button and you will see in the console two logs of the same error, which means the Vue.config.errorHandler was called twice.\r\n\r\n### What is expected?\r\nI expect the errrorHandler called once.\r\n\r\n### What is actually happening?\r\nthe errorHandler function is called twice.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9511","RelatedDescription":"Open issue \"Vue.config.errorHandler called twice when I return a rejected Promise from a handler of a component event\" (#9511)"},{"Id":"411208334","IsPullRequest":false,"CreatedAt":"2019-02-17T16:53:44","Actor":"cliffordh","Number":"9510","RawContent":null,"Title":"[Question] Use virtual DOM for own purposes?","State":"closed","Body":"I have an extensive amount of code which does manual DOM manipulation (it's a spell checker). I'd like to update the code to use a virtual DOM. Can I hook into the virtual DOM internals that Vue uses instead of importing a virtual dom library external to Vue?","Url":"https://github.com/vuejs/vue/issues/9510","RelatedDescription":"Closed issue \"[Question] Use virtual DOM for own purposes?\" (#9510)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"412230262","IsPullRequest":false,"CreatedAt":"2019-02-20T03:40:22","Actor":"esappear","Number":"2618","RawContent":null,"Title":"Memory leak when calling this.$router.replace in the created hook","State":"closed","Body":"### Version: 3.0.2\r\n### Code \r\n```vue\r\n<template>\r\n</template>\r\n<script>\r\nexport default {\r\n  created() {\r\n    this.$router.replace({\r\n      name: 'bro'\r\n    });\r\n  }\r\n}\r\n</script>\r\n```\r\nAs the title says, when calling `this.$router.replace` in the created hook, it leads to memory leak.\r\nWhen debugging on poll method in `vue-router.common.js` as below, poll methods calls in an infinite loop.\r\n```js\r\nfunction poll (\r\n  cb, // somehow flow cannot infer this is a function\r\n  instances,\r\n  key,\r\n  isValid\r\n) {\r\n  if (\r\n    instances[key] &&\r\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\r\n  ) {\r\n    cb(instances[key]);\r\n  } else if (isValid()) {\r\n    setTimeout(function () {\r\n      console.log('poll: ', instances, key, isValid());\r\n      poll(cb, instances, key, isValid);\r\n    }, 16);\r\n  }\r\n}\r\n```\r\nThough I should not call `this.$router.replace` in created hook on SSR, I wonder why.","Url":"https://github.com/vuejs/vue-router/issues/2618","RelatedDescription":"Closed issue \"Memory leak when calling this.$router.replace in the created hook\" (#2618)"},{"Id":"412225670","IsPullRequest":false,"CreatedAt":"2019-02-20T03:19:23","Actor":"iGarym","Number":"2617","RawContent":null,"Title":"Reserve optional dynamic parameters?","State":"open","Body":"### What problem does this feature solve?\r\nrepo: [jsfiddle](https://jsfiddle.net/zcgj5Lh4/)\r\n\r\nWhen using `router-link` to navigate, the optional dynamic parameter `moduleId` is missing. In order to retain the parameters, we must manually provide the parameter or use router hooks. Non-optional parameters do not have this problem. Can we reserve the optional parameters when navigate?\r\n\r\n******\r\n\r\n使用 `router-link` 跳转时，可选的动态参数 `moduleId` 丢失了。为了保留参数，需要手动传参或者在路由钩子里处理。非可选的参数不会有这个问题，所以能否在跳转的时候保留可选的参数呢？\r\n\r\n### What does the proposed API look like?\r\nNo new api.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2617","RelatedDescription":"Open issue \"Reserve optional dynamic parameters?\" (#2617)"},{"Id":"411279663","IsPullRequest":false,"CreatedAt":"2019-02-18T09:04:18","Actor":"wangjingf","Number":"2616","RawContent":null,"Title":"dynamic routing support","State":"closed","Body":"### What problem does this feature solve?\r\ndynamic routing like react-router-v4\r\n\r\n### What does the proposed API look like?\r\nAre there plans to upgrade vue-router to dynamic routing (like react-router-v4)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2616","RelatedDescription":"Closed issue \"dynamic routing support\" (#2616)"},{"Id":"409708492","IsPullRequest":false,"CreatedAt":"2019-02-13T09:50:24","Actor":"hwlv","Number":"2615","RawContent":null,"Title":"https://router.vuejs.org/   can't open ","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/ ](https://router.vuejs.org/ )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://router.vuejs.org/   can't open \r\n\r\n### What is expected?\r\nWeb page display normally\r\n\r\n### What is actually happening?\r\nWeb page display exception\r\n\r\n---\r\nPlease repair it as soon as possible.  It's seriously\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2615","RelatedDescription":"Closed issue \"https://router.vuejs.org/   can't open \" (#2615)"},{"Id":"409503817","IsPullRequest":false,"CreatedAt":"2019-02-13T09:40:46","Actor":"smellyshovel","Number":"2614","RawContent":null,"Title":"beforeRouteUpdate fires when it must not if is used with cyrillic symbols","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/rmnq4605oo](https://codesandbox.io/s/rmnq4605oo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Add the following to the path (right in the browser preview): \"fm/русский\"\r\n\r\n    The address bar should now look something like this: `https://rmnq4605oo.codesandbox.io/fm/русский`\r\n\r\n1. Click enter so to pretend that it's router's initial state (without any previous navigation via vue-router (because the page actually gets reloaded and vue-router isn't involved in this))\r\n\r\n1. Open the console (F12)\r\n\r\n1. Double-click the \"русский\" word\r\n\r\n### What is expected?\r\nThe `beforeRouteUpdate` must not be fired.\r\n\r\n### What is actually happening?\r\nIt actually gets fired. As far as I understand it happens because \"русский\" gets substituted with \"%D1%80%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9\" as you can see from the console output.\r\n\r\n---\r\nDon't know if it's only due to cyrillic symbols, but I'm pretty sure that it's expected for all the non-ascii charecters.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2614","RelatedDescription":"Closed issue \"beforeRouteUpdate fires when it must not if is used with cyrillic symbols\" (#2614)"},{"Id":"409272152","IsPullRequest":false,"CreatedAt":"2019-02-12T12:48:28","Actor":"GHakopian","Number":"2613","RawContent":null,"Title":"// makes route invalid","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/jzr5nojn39](https://codesandbox.io/s/jzr5nojn39)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen in history mode with a basePath setup,\r\nnavigating to server:123/basePath/subPath navigates to the right component\r\nbut if you add an extra / after server:234, \r\nnavigating to server:123//basePath/subPath returns 404 \r\n\r\n\r\n### What is expected?\r\nnavigating to server//basePath/subPathnavigates to configured component\r\n\r\n### What is actually happening?\r\nnavigating to server:123//basePath/subPath returns 404 \r\n\r\n---\r\nIs this a bug? i think the extra / should not change the end route, this is an issue in my case as my legacy backend application can redirect with an extra / at random. if this is intended can we then add something like \"*/basePath\" to only consider the path starting from basePath.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2613","RelatedDescription":"Closed issue \"// makes route invalid\" (#2613)"},{"Id":"408907359","IsPullRequest":false,"CreatedAt":"2019-02-11T18:04:42","Actor":"wadetandy","Number":"2612","RawContent":null,"Title":"v-if/else Causes incorrect router-link to be followed when conditional changes","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/q3mp33l879](https://codesandbox.io/s/q3mp33l879)\r\n\r\n### Steps to reproduce\r\n- Observe the navigation has links for \"Register\" and \"Sign In\"\r\n- Click the \"Sign In\" link\r\n- Click \"click here to sign in\" on the page\r\n- Observe the navigation will change to a \"signed in\" state with \"User Profile\" and \"Sign Out\" links\r\n- Click the \"User Profile\" or \"Sign Out\" links\r\n\r\n### What is expected?\r\nIf clicking \"User Profile\", the page should change to `/profile` and have the text \"hello user\"\r\nIf clicking \"Sign Out\", the page should change to `/sign_out` and be a sign out placeholder page\r\n\r\n### What is actually happening?\r\nIf clicking \"User Profile\", the page changes to `/register` and loads the corresponding component\r\nIf clicking \"Sign Out\", the page should change to `/sign_in` and loads the corresponding component\r\n\r\nIt seems the navigation link elements are not being replaced when the conditional flips, but instead the inner html is being switched out.  This causes the original click handlers to be preserved on each link, which results in the \"signed in\" links firing the click handlers of the element that corresponded to its position in the list for the \"signed out\" path.\r\n\r\n---\r\nThis may be a core vue runtime bug, but since I have run into the issue only with `router-link` I opened it here.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2612","RelatedDescription":"Open issue \"v-if/else Causes incorrect router-link to be followed when conditional changes\" (#2612)"},{"Id":"408448967","IsPullRequest":false,"CreatedAt":"2019-02-09T17:00:16","Actor":"stevenadams","Number":"2611","RawContent":null,"Title":"Support for activeStyle and exactActiveStyle","State":"open","Body":"### What problem does this feature solve?\r\nComing from React and using React Router, there is support for activeStyle property. Like activeClass but a style object of styles to apply to an element when active. This helps for things like theming where the theme color is plucked from store and needs to be applied to an element when active.\r\n\r\n### What does the proposed API look like?\r\ntakes a prop activeStyle and exactActiveStyle, both type object, works identically to activeClass and exactActiveClass\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2611","RelatedDescription":"Open issue \"Support for activeStyle and exactActiveStyle\" (#2611)"},{"Id":"408321425","IsPullRequest":false,"CreatedAt":"2019-02-08T21:31:14","Actor":"CarlosOnline","Number":"2610","RawContent":null,"Title":"Dynamic route doesn't work if route parameter contains a dot followed by text.","State":"closed","Body":"### Version\r\n2.5.1\r\n\r\n### Reproduction link\r\n[https://github.com/CarlosOnline/VueRouterBug.git](https://github.com/CarlosOnline/VueRouterBug.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with dynamic route parameter **:lab**\r\n\r\n* Start app\r\n* Navigate to MyView/**Foo** which works\r\n* Navigate to MyVew/**Number.1234** does not work\r\n\r\n\r\n\r\n```\r\n{\r\n    path: '/MyView/:lab',\r\n    component: MyView,\r\n    display: 'MyView',\r\n    meta: { title: 'MyView' }\r\n},\r\n```\r\n\r\n\r\n### What is expected?\r\nNavigate to route with dynamic parameter when no \r\n\r\n### What is actually happening?\r\nRoute is not found\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2610","RelatedDescription":"Closed issue \"Dynamic route doesn't work if route parameter contains a dot followed by text.\" (#2610)"},{"Id":"408298160","IsPullRequest":true,"CreatedAt":"2019-02-08T19:46:53","Actor":"lyonsbp","Number":"2609","RawContent":null,"Title":"Add example showing how to get HTML5 history mode working with Flask.","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2609","RelatedDescription":"Open PR \"Add example showing how to get HTML5 history mode working with Flask.\" (#2609)"},{"Id":"408267010","IsPullRequest":false,"CreatedAt":"2019-02-08T19:10:04","Actor":"jbmikk","Number":"2608","RawContent":null,"Title":"Improve function mode props with route-view attributes","State":"closed","Body":"### What problem does this feature solve?\r\nWhen passing props to the `router-view` all routed components are forced to implement the same interface if they want to use the data provided by the `router-view`.\r\n\r\nWe usually use the props as a way of avoiding coupling the components to the router. The components simply receive the props and they are not aware they come from the URL.\r\n\r\nI think it would be useful if we could decouple the components from the router-view, just the way we decouple them from the URL.\r\nI think being able to map the router-view attributes to the desired component props is more appropriate and lets our components expose the interface they need to expose, rather than the interface imposed by the router-view.\r\n\r\nI think the right place for solving this problem is the route's function mode props.\r\n\r\n### What does the proposed API look like?\r\nThe router view passes down a couple of parameters as usual:\r\n\r\n    <router-view :param1=\"value1\" :param2=\"value2\"></router-view>\r\n\r\nThe function maps the props both from the route's URL and also the `router-view` attributes.\r\nIt can also resolve conflict names between URL parameters and view parameters and determine which parameter is more important in each case.\r\n\r\n    {\r\n      path: '/test',\r\n      component: Test,\r\n      props: (route, view) => {\r\n        return {\r\n          query: route.query.q\r\n          paramA: view.attrs.param1,\r\n          paramB: view.attrs.param2 || route.query.param2\r\n        }\r\n      }\r\n    } \r\n\r\nI have done some tests with the router's code and it seems to work fine.\r\n\r\nI would like to have some feedback from the community. It is a fairly simple change. We should make sure this doesn't have any unwanted side effects, it's backwards compatible and there isn't a better way to do it.\r\n\r\nHere's a branch with a test I made and it worked for me: https://github.com/jbmikk/vue-router/commits/view-parameter-for-props\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2608","RelatedDescription":"Closed issue \"Improve function mode props with route-view attributes\" (#2608)"},{"Id":"408176071","IsPullRequest":false,"CreatedAt":"2019-02-08T14:30:15","Actor":"rocka","Number":"2607","RawContent":null,"Title":"abstract mode's router.back() was aborted when there are 2 same routes in history stack","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Rocka/bhu5vkn8/3/](https://jsfiddle.net/Rocka/bhu5vkn8/3/)\r\n\r\n### Steps to reproduce\r\n1. Click `10. artist`\r\n2. Hit button `togglePlayer`\r\n3. Click `10. artist`\r\n4. Hit button `back` 2 times\r\n\r\n### What is expected?\r\nroute back to `/search`\r\n\r\n### What is actually happening?\r\nnothing happend, route and route-view do not change\r\n\r\n---\r\n'cause I didn't figure out how to determine wether the route is going forward or backword, I decided to use `abstract` mode and traverse the router stack to find out which direction the route is going, then hit into this bug. The demo works fine if change router's mode to `hash` or `history`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2607","RelatedDescription":"Open issue \"abstract mode's router.back() was aborted when there are 2 same routes in history stack\" (#2607)"},{"Id":"404807174","IsPullRequest":true,"CreatedAt":"2019-02-08T07:05:06","Actor":"kazupon","Number":"2602","RawContent":null,"Title":"update ja docs","State":"closed","Body":"ping @ktsn \r\nCould you review it please? 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2602","RelatedDescription":"Closed or merged PR \"update ja docs\" (#2602)"},{"Id":"407467218","IsPullRequest":false,"CreatedAt":"2019-02-06T22:49:21","Actor":"ronald-d-rogers","Number":"2606","RawContent":null,"Title":"SSR memory leak in poll method","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/](https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake `router-view` appearance conditional based on some variable (or simply have it not appear):\r\n```html\r\n<div id=\"app\">\r\n  <div v-if=\"condition\">\r\n    <router-view />\r\n  </div>\r\n</div>\r\n```\r\n\r\nEnsure that the component that matches the route has a `beforeRouteEnter` guard, where a function is passed to the `next(...)` method (e.g. `next(vm => {}`):\r\n```es6\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    // Poll happens only if you pass in a function to next(...)\r\n    next(vm => {})\r\n  }\r\n}\r\n```\r\n\r\nVisit that route.\r\n```sh\r\ncurl http://localhost:8080/route\r\n```\r\n\r\nA poll will happen infinitely until `router-view` is created.\r\n\r\nIn a typical SSR application where an app is created per request, it will never be created. \r\nThe end result is a memory leak with an event loop filled with poll's every 16ms.\r\n\r\nIn the reproduction JS Fiddle, a leak occurs every time you press the `SSR Request` button.\r\nIf you set `dontLeak` to true, the leak stops.\r\n\r\nThe leak can be verified in the JS Fiddle by clicking on the `SSR Request` button a few times (say 20 times), opening Chrome Developer Tools, going to the Performance tab, and in the recording looking at the contents of \"Frame\".\r\n\r\n![capture](https://user-images.githubusercontent.com/4047399/52432208-e338da80-2ad7-11e9-9632-7e56eb414e3b.JPG)\r\n\r\nHere is an example repo as well:\r\nhttps://github.com/ronald-d-rogers/vue-router-ssr-memory-leak\r\n\r\n### What is expected?\r\nA new poll does not recurse infinitely for every SSR request.\r\n\r\n### What is actually happening?\r\nA new poll recurses infinitely for every SSR request.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2606","RelatedDescription":"Open issue \"SSR memory leak in poll method\" (#2606)"},{"Id":"406924907","IsPullRequest":false,"CreatedAt":"2019-02-05T21:14:03","Actor":"soyersoyer","Number":"2605","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include null","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/essentials/navigation.html](https://router.vuejs.org/guide/essentials/navigation.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as null. E.g.\r\n\r\n```json\r\n{\r\n  \"foo\": null\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work.\r\nThe url should be ?foo.\r\n\r\n### What is actually happening?\r\nIt works, but with an error:\r\n\r\nType '{ foo: null; }' is not assignable to type 'Dictionary<string | string[]>'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2605","RelatedDescription":"Closed issue \"Typescript: `Location` interface typing for query should include null\" (#2605)"},{"Id":"406758040","IsPullRequest":false,"CreatedAt":"2019-02-05T12:26:27","Actor":"pikax","Number":"2604","RawContent":null,"Title":"Passing new params to the current route when props=true, doesn't update router-view","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k50j5wn8or](https://codesandbox.io/s/k50j5wn8or)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- set mode to history\r\n- Add a route with `props: true` \r\n- Add props to that route component\r\n- App.vue beforeMount, add a `router.replace` or `router.push` with a the route `name` and `params` object.\r\n- If the route path is the same as the current route, it won't update the route\r\n\r\n### What is expected?\r\nUpdating the component props down based on params\r\n\r\n### What is actually happening?\r\nroute component defaults props\r\n\r\n---\r\nNot sure if this is the expected behaviour, even using ` <router-view :key=\"$route.fullPath\"></router-view>` doesn't do much because of the `params` don't affect the path.\r\n\r\nEncounter this when sending the app to `Error` page with custom props but when I refreshed was getting the expected values or times no props being passed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2604","RelatedDescription":"Closed issue \"Passing new params to the current route when props=true, doesn't update router-view\" (#2604)"},{"Id":"405301212","IsPullRequest":false,"CreatedAt":"2019-01-31T15:34:59","Actor":"WisdomEye","Number":"2603","RawContent":null,"Title":"v-if mutating router-link to","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8](https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust add an li using v-if, and then try change the value of variable, in the example bellow update start with value 0, I can add a button to increment or decrement it, and get error about mutating :for from router-link.\r\n\r\n\t<li v-if=\"update\" id=\"dashboard-menu-top-updates\">\r\n\t\t<router-link :to=\"{ name: 'Update' }\" :exact=\"$route.name === 'Update'\">Atualizações</router-link>\r\n\t</li>\r\n\r\n### What is expected?\r\nThe expected is render or remove the element without errors about mutating \":to\" from router-link\r\n\r\n### What is actually happening?\r\nThe li is correctly rendered as wished, but make a lot of erros on console about mutating \":to\" from router-link.\r\n\r\nError:\r\n\r\n[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: \"to\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2603","RelatedDescription":"Closed issue \"v-if mutating router-link to\" (#2603)"},{"Id":"404175057","IsPullRequest":false,"CreatedAt":"2019-01-29T09:25:39","Actor":"avele","Number":"2601","RawContent":null,"Title":"Keep previous component until next mounted","State":"closed","Body":"### What problem does this feature solve?\r\nI want the ability to change the router-view component only when the next one is mounted. For instance, the next router-view component could be mounted separately with ```display: none```, and after the \"mounted\" event I would make the new component visible and destroy the previous component.\r\n\r\nCurrently I can only show a spinner or an overlay while the new component is loading, but I can't keep the previous component on the screen.\r\n\r\nMy usecase is similar to github repository tabs\r\n![github tabs](https://user-images.githubusercontent.com/34437766/51894559-8f384280-23c1-11e9-9637-3fc10ae17fa4.gif)\r\nI want to mimic the standard, non-SPA browser behavior.\r\n\r\n### What does the proposed API look like?\r\nA prop for ```<router-view>,``` perhaps \"preload\" or \"changeOnMounted\".\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2601","RelatedDescription":"Closed issue \"Keep previous component until next mounted\" (#2601)"},{"Id":"403528797","IsPullRequest":true,"CreatedAt":"2019-01-27T15:14:57","Actor":"Alex-Sokolov","Number":"2599","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/c3e587238a4e6d4e650e762b3442b286fcb9fe36#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2599","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2599)"},{"Id":"403531058","IsPullRequest":false,"CreatedAt":"2019-01-27T11:32:03","Actor":"rominf","Number":"2600","RawContent":null,"Title":"beforeEnter next callback is not called","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2ykhv8jq/](https://jsfiddle.net/2ykhv8jq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with `beforeEnter` handler which calls `next` with a callback function.\r\n\r\nIn jsfiddle.net click the button and check the console.\r\n\r\n### What is expected?\r\n\"Am i called\" and the `vm` should be present. \r\n\r\n### What is actually happening?\r\nLine with \"Am i called\" is not present.\r\n\r\n---\r\nCode borrowed from https://github.com/vuejs/vue-router/issues/737#issuecomment-446565958\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2600","RelatedDescription":"Closed issue \"beforeEnter next callback is not called\" (#2600)"},{"Id":"402747012","IsPullRequest":true,"CreatedAt":"2019-01-24T15:02:10","Actor":"jcoyne","Number":"2598","RawContent":null,"Title":"Update vue-router version to match package.json","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2598","RelatedDescription":"Closed or merged PR \"Update vue-router version to match package.json\" (#2598)"},{"Id":"402626070","IsPullRequest":false,"CreatedAt":"2019-01-24T09:56:40","Actor":"cybermerlin","Number":"2597","RawContent":null,"Title":"hey guys, I have trouble with dynamic imports in routes","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509](https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\npls, watch on the screenshot\r\n\r\n### What is expected?\r\ngood work\r\n\r\n### What is actually happening?\r\nnot work\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2597","RelatedDescription":"Closed issue \"hey guys, I have trouble with dynamic imports in routes\" (#2597)"},{"Id":"402529730","IsPullRequest":false,"CreatedAt":"2019-01-24T08:23:24","Actor":"mice33","Number":"2596","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mice33/router-demo](https://github.com/mice33/router-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.run dev && visit website  \r\n2.click 'go to h2' link  \r\n3.click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\n### What is expected?\r\n3.click 'go back' link, can go back\r\n\r\n### What is actually happening?\r\n3.click 'go back' link, can't go back\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nSame problem #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2596","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2596)"},{"Id":"402518493","IsPullRequest":false,"CreatedAt":"2019-01-24T07:49:51","Actor":"ovarte","Number":"2594","RawContent":null,"Title":"vue-router and axios 拦截器一起使用 出现的异步问题","State":"closed","Body":"### Version\r\n2.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jwdtae9u/3/](https://jsfiddle.net/jwdtae9u/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n详见JSFiddle。通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，请问怎么解决呢\r\n\r\n### What is expected?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。请问怎么解决呢\r\n\r\n### What is actually happening?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。\r\n\r\n---\r\n怎么解决 vue-router和 axios 拦截器 一起使用的问题呢 非常感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2594","RelatedDescription":"Closed issue \"vue-router and axios 拦截器一起使用 出现的异步问题\" (#2594)"},{"Id":"402529161","IsPullRequest":false,"CreatedAt":"2019-01-24T03:41:50","Actor":"mice33","Number":"2595","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"Demo: https://github.com/mice33/router-demo\r\n\r\nChrome 70\r\n\r\ncan't from 'h2' page go back 'Hello World' page when the onload event of window not triggered\r\n\r\nsteps:\r\n1. run dev && visit website\r\n2. click 'go to h2' link\r\n3. click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\nlink #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2595","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2595)"},{"Id":"401790731","IsPullRequest":false,"CreatedAt":"2019-01-22T14:29:48","Actor":"yegorLitvinov","Number":"2593","RawContent":null,"Title":"replaceState Error when path starts with // and scrollBehavior is set","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/yegorLitvinov/vue-router-bug](https://github.com/yegorLitvinov/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSet scrollBehavior property in router config. Put two forward slashes into beginning of the url (e.g. http://localhost:8081//about)\r\n\r\n### What is expected?\r\nNo errors in console\r\n\r\n### What is actually happening?\r\nIn firefox: SecurityError: The operation is insecure.\r\nIn Chrome: Uncaught DOMException: Failed to execute 'replaceState' on 'History': A history state object with URL 'http://about/' cannot be created in a document with origin 'http://localhost:8081' and URL 'http://localhost:8081//about'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2593","RelatedDescription":"Open issue \"replaceState Error when path starts with // and scrollBehavior is set\" (#2593)"},{"Id":"401651538","IsPullRequest":true,"CreatedAt":"2019-01-22T08:34:55","Actor":"zrh122","Number":"2592","RawContent":null,"Title":"fix(router-view): add condition to see whether the tree is inactive (fix #2552)","State":"open","Body":"close #2552\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2592","RelatedDescription":"Open PR \"fix(router-view): add condition to see whether the tree is inactive (fix #2552)\" (#2592)"},{"Id":"401560199","IsPullRequest":true,"CreatedAt":"2019-01-22T01:15:28","Actor":"Sayegh7","Number":"2591","RawContent":null,"Title":"Warn about root paths without a leading slash (fix #2550)","State":"open","Body":"close #2550\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR creates the following warning message when a root route exists without a leading slash:\r\n<img width=\"583\" alt=\"screen shot 2019-01-22 at 3 12 15 am\" src=\"https://user-images.githubusercontent.com/13800170/51506192-b2785600-1df3-11e9-8ef0-7607ac68aa2b.png\">\r\n\r\nThis facilitates the debugging process as the current behavior does not generate any warnings or errors.","Url":"https://github.com/vuejs/vue-router/pull/2591","RelatedDescription":"Open PR \"Warn about root paths without a leading slash (fix #2550)\" (#2591)"},{"Id":"401548570","IsPullRequest":true,"CreatedAt":"2019-01-22T00:02:47","Actor":"zigomir","Number":"2590","RawContent":null,"Title":"feat: add browser ESM build","State":"open","Body":"POC\r\n\r\nfixes https://github.com/vuejs/vue-router/issues/2589\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2590","RelatedDescription":"Open PR \"feat: add browser ESM build\" (#2590)"},{"Id":"401532763","IsPullRequest":false,"CreatedAt":"2019-01-21T22:37:34","Actor":"zigomir","Number":"2589","RawContent":null,"Title":"Browser ES module build","State":"open","Body":"### What problem does this feature solve?\r\nNow with https://github.com/vuejs/vue/pull/7110 in place and https://github.com/vuejs/vuex/pull/1401 we should probably expose `vue-router` ES module build (minified and non–minifed) so that develpers can use main three vue libraries with `<script type=\"module>` and without any build step.\r\n\r\nWould you merge a PR that solves that?\r\n\r\n\r\n### What does the proposed API look like?\r\nNo changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2589","RelatedDescription":"Open issue \"Browser ES module build\" (#2589)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"412637975","IsPullRequest":false,"CreatedAt":"2019-02-20T21:31:16","Actor":"tleeaf","Number":"1513","RawContent":null,"Title":"Naming store state array 'queue' results in one dropped array member","State":"closed","Body":"I named one of my store state members 'queue', which resulted in unexpected behavior, namely that one member of the array would disappear when testing the app in-browser. This occurs independently of any other actions or mutations. I confirmed this by checking the result in vue devtools for chrome, in the vuex tab, and also by adding a v-for that produced simple tags dependent on the data in the 'queue' array.\r\n\r\n`export const store = new Vuex.Store({\r\n  state: {\r\n     queue: [ \r\n      {id: 1333333333}, //one of these members will be dropped \r\n      {id: 1222222222},\r\n      {id: 1111111111}\r\n    ],\r\n    vocabulary: [],\r\n    lessons: [],    \r\n  },\r\n  mutations, actions, getters\r\n})`","Url":"https://github.com/vuejs/vuex/issues/1513","RelatedDescription":"Closed issue \"Naming store state array 'queue' results in one dropped array member\" (#1513)"},{"Id":"412632780","IsPullRequest":true,"CreatedAt":"2019-02-20T21:18:07","Actor":"perborgen","Number":"1512","RawContent":null,"Title":"Added Scrimba lessons","State":"open","Body":"Here are the Scrimba lessons localized and with an `override.styl` file for the styling. Did I do it right?","Url":"https://github.com/vuejs/vuex/pull/1512","RelatedDescription":"Open PR \"Added Scrimba lessons\" (#1512)"},{"Id":"409173630","IsPullRequest":false,"CreatedAt":"2019-02-18T18:56:17","Actor":"visualjerk","Number":"1505","RawContent":null,"Title":"Infinite Loop With Error Handler And Vuex","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/z6ww1zp2q4](https://codesandbox.io/s/z6ww1zp2q4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- open browser console\r\n\r\n### What is expected?\r\nNot getting an infinite render loop:\r\n[Vue warn]: You may have an infinite update loop in a component render function.\r\n\r\n### What is actually happening?\r\nGetting an infinite render loop\r\n\r\n---\r\nThis happens when you handle an error that was caused during rendering and try to commit it to the store.\r\n\r\nIt looks like a component that throws an error tries to rerender after the store is updated, even so it doesn't use the store's state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1505","RelatedDescription":"Closed issue \"Infinite Loop With Error Handler And Vuex\" (#1505)"},{"Id":"411557104","IsPullRequest":true,"CreatedAt":"2019-02-18T17:28:27","Actor":"Jinjiang","Number":"1511","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/a6973fa...31e4fbc\r\n/ping @Justineo","Url":"https://github.com/vuejs/vuex/pull/1511","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1511)"},{"Id":"411250556","IsPullRequest":true,"CreatedAt":"2019-02-17T23:34:11","Actor":"brophdawg11","Number":"1510","RawContent":null,"Title":"Add support for namespace functions in mapXXX helpers","State":"open","Body":"This is a stab at adding the functionality requested by https://github.com/vuejs/vuex/issues/863.\r\n\r\nI also noticed that there was another attempt at this in https://github.com/vuejs/vuex/pull/924, but the diff seems to be beyond the scope of just the change.\r\n\r\nUnit tests have been added, but no changes have yet been made to TypeScript types or documentation, etc.","Url":"https://github.com/vuejs/vuex/pull/1510","RelatedDescription":"Open PR \"Add support for namespace functions in mapXXX helpers\" (#1510)"},{"Id":"410330210","IsPullRequest":false,"CreatedAt":"2019-02-14T14:37:44","Actor":"djam90","Number":"1509","RawContent":null,"Title":"Unit tests do not run when importing router into store and store into router","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/djam90/vuex-vue-router-issue](https://github.com/djam90/vuex-vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun `npm run test:unit` and see the failure. To get the tests to run again, do not import the store into the router and the router into the store.\r\n\r\n### What is expected?\r\nThe tests should run fine and circular imports should work. They *DO* work in the browser just not in Mocha testing environment. \r\n\r\n### What is actually happening?\r\nError as follows:\r\n\r\n```\r\nTypeError: Cannot read property 'getters' of undefined\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:261:1\r\n    at Array.forEach (<anonymous>)\r\n    at assertRawModule (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:260:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:186:1)\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:200:1\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1\r\n    at Array.forEach (<anonymous>)\r\n    at forEachValue (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:199:1)\r\n    at new ModuleCollection (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:160:1)\r\n    at new Store (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:311:1)\r\n```\r\n\r\n---\r\nMy VueX store needs to be able to import the router so it can do routing things like navigate to another page.\r\nMy router needs to be able to access state from VueX to determine what to do in a `router.beforeEach` handler.\r\n\r\nI have asked for help on Stack Overflow:\r\nhttps://stackoverflow.com/questions/54691789/unable-to-import-vuex-store-into-router-and-router-into-store-in-mocha-tests\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1509","RelatedDescription":"Open issue \"Unit tests do not run when importing router into store and store into router\" (#1509)"},{"Id":"410145165","IsPullRequest":true,"CreatedAt":"2019-02-14T06:15:56","Actor":"parth67","Number":"1508","RawContent":null,"Title":"Fixed issue#1507 : Memory leak happening while using registerModule/u…","State":"open","Body":"Fixes #1507 \r\n\r\nClosure function was fixed with helper function partial which doesn't retain oldVm in environment.","Url":"https://github.com/vuejs/vuex/pull/1508","RelatedDescription":"Open PR \"Fixed issue#1507 : Memory leak happening while using registerModule/u…\" (#1508)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-02-13T15:23:18","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"closed","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Closed or merged PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-13T15:21:16","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Closed or merged PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"409797501","IsPullRequest":false,"CreatedAt":"2019-02-13T13:09:45","Actor":"skkart","Number":"1507","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mrj8spu0/](https://jsfiddle.net/mrj8spu0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Open the JSFiddle link mentioned as part of this issue.\r\n2. Check and record the heap memory in the browser on initial stage.\r\n3. Click on the \"Register\" button to dynamically register Module B 100 times\r\n4. Now we will see an increase in heap memory on account of registering module 100 times.\r\n5. Click on \"Un-Register\" button to dynamically un-register Module B 100 times\r\n6. Check the heap memory again, at this point will see an jump in memory usage on account of un-registering 100 module. \r\n\r\n### What is expected?\r\nHeap memory generated on step 3 & 5 must be cleared after step 6. (Final stage)\r\n\r\n### What is actually happening?\r\nHeap memory of the browser is not getting cleared.\r\n\r\n---\r\nWe are observing memory leak of Store._vm while using registerModule/unregisterModule extensively.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n\r\noldVm.$destroy(); \r\noldVm = null; // This is the missing code\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52727462-4ac0bf80-2fdb-11e9-91ce-7dd012cba4b5.png)\r\n\r\n[Heap-20190213T220212.heaptimeline.zip](https://github.com/vuejs/vuex/files/2861246/Heap-20190213T220212.heaptimeline.zip)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1507","RelatedDescription":"Open issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1507)"},{"Id":"409792179","IsPullRequest":false,"CreatedAt":"2019-02-13T12:56:14","Actor":"skkart","Number":"1506","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"closed","Body":"We are observing memory leak of Store._vm while using registerModule/unregisterModule.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nI have created an demo link to illustrate the above mentioned problem\r\n[jsFiddle link](https://jsfiddle.net/mrj8spu0/)\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n**_oldVm.$destroy(); \r\noldVm = null;      // This is the missing code_**\r\n```\r\nfunction resetStoreVM (store, state, hot) {\r\n    var oldVm = store._vm;\r\n\r\n    ...\r\n\t...\r\n\r\n    if (oldVm) {\r\n      if (hot) {\r\n        // dispatch changes in all subscribed watchers\r\n        // to force getter re-evaluation for hot reloading.\r\n        store._withCommit(function () {\r\n          oldVm._data.$$state = null;\r\n        });\r\n      }\r\n\r\n      // Existing Code\r\n      Vue.nextTick(function () { return oldVm.$destroy(); });\r\n       \r\n      // The OldVm Object is still in heap even after destroy\r\n      // Appropriate Code\r\n      oldVm.$destroy(); \r\n      oldVm = null;\r\n    }\r\n  }\r\n```\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52712275-1983c780-2fba-11e9-8c67-43b24afe56e1.png)\r\n\r\n[Heap-20190213T172945.heapsnapshot.zip](https://github.com/vuejs/vuex/files/2860354/Heap-20190213T172945.heapsnapshot.zip)\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1506","RelatedDescription":"Closed issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1506)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-02-13T11:24:21","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Closed issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"407854625","IsPullRequest":false,"CreatedAt":"2019-02-13T11:12:36","Actor":"ianwalter","Number":"1504","RawContent":null,"Title":"watch instance method behavior is inconsistent between Vue and Vuex","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/ianwalter/vuex-issue](https://github.com/ianwalter/vuex-issue)\r\n\r\n### Steps to reproduce\r\n1. Register a watcher in a component with a callback function that prints the new data value and old data value\r\n2. Register a watcher on a store instance with a callback function that prints the new data value and old data value\r\n\r\n### What is expected?\r\nThat when both watchers are triggered, both of them print the new data value and the old data value.\r\n\r\n### What is actually happening?\r\nThe component watcher prints the new data value and old data value, while the store watcher only prints the new data value (state) and an empty object (getters, if you haven't defined any). \r\n\r\n---\r\nBefore reading the Vuex documentation more closely, I assumed that this method behaved in the same way as it does in a component. Returning getters to the store watcher callback seems to me like returning computed in the component watcher callback. I think the old state data is more valuable too, especially since it could provide the initial state as the old data, something you can't get in an alternative way (like subscribing to mutations which only gives you the new state as well).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1504","RelatedDescription":"Closed issue \"watch instance method behavior is inconsistent between Vue and Vuex\" (#1504)"},{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-02-10T09:25:00","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"407825529","IsPullRequest":false,"CreatedAt":"2019-02-07T17:59:59","Actor":"ianwalter","Number":"1503","RawContent":null,"Title":"Add a subscribeModule instance method","State":"open","Body":"### What problem does this feature solve?\r\nVuex doesn't provide a way for plugins to be notified when modules are added to the store dynamically through `registerModule`. This means that there can be changes in the state tree that are impossible for plugins to know about through the existing subscription methods like `subscribe` and `subscribeAction`. A common use case would be a plugin that saves the Vuex state to local storage. When a module is added through `registerModule`, the local storage plugin will not be able to store it's initial state to local storage.\r\n\r\n### What does the proposed API look like?\r\n`subscribeModule(handler: Function)`\r\n\r\nSubscribe to `registerModule`/`unregisterModule` events. The handler is called with a module object and a namespace when the module is registered. The module object is null when unregistered:\r\n\r\n```js\r\nstore.subscribeModule((mod, namespace) => {\r\n  if (mod) {\r\n    console.log(mod)\r\n  } else {\r\n    console.log(namespace)\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1503","RelatedDescription":"Open issue \"Add a subscribeModule instance method\" (#1503)"},{"Id":"407229198","IsPullRequest":false,"CreatedAt":"2019-02-06T13:13:41","Actor":"SumNeuron","Number":"1502","RawContent":null,"Title":"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm","State":"open","Body":"### What problem does this feature solve?\r\nVuex modules, in theory, are divorced of their vue components which access them. One could take the module, register it and (re)make components to utilize the vuex module as desired. However, in (perhaps poor) practice, vuex modules and vue components are often made concurrently; namely, the components serve as the api to the store and it is expected that inclusion of the vue components come _with_ the vuex module.\r\n\r\nHowever turning a vuex module and library of sfcs into reusable chunks does not seem to be straight forward.\r\n\r\nThe expected behavior would be using the vue-cli to create a new project with a vuex store.\r\nthe store would be moved to its own directory:\r\n\r\n```\r\nsrc/\r\n-- store/\r\n---- modules/\r\n------ moduleA/\r\n-------- actions.js\r\n-------- state.js\r\n-------- mutations.js\r\n-------- getters.js\r\n-------- store.js \r\n...\r\n```\r\n\r\nAll components under `src/components` (or nested directories) would be exposed so users could import each constitute component\r\nAll modules under `src/store/modules` would be exposed so users could just import the module if desired \r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n# install library\r\nnpm install vuex-vue-sfc-library\r\n\r\n# inside app.vue or some other component\r\n// import the vuex modules and components that access the modules \r\nimport {moduleA, nestedComponentB, conglomerateComponentA} from 'vuex-vue-sfc-library\r\n\r\nexport default {\r\n    components: {\r\n        nestedComponentB, conglomerateComponentA\r\n    },\r\n    created() {\r\n        this.$store.registerModule('moduleA', moduleA)\r\n    }\r\n\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1502","RelatedDescription":"Open issue \"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm\" (#1502)"},{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"398365001","IsPullRequest":true,"CreatedAt":"2019-01-31T13:11:02","Actor":"fsblemos","Number":"1484","RawContent":null,"Title":"docs: complement preserveState information","State":"closed","Body":"It is not very clear the purpose of `preserveState` option in the docs. \r\n\r\n[This comment](https://github.com/vuejs/vuex/issues/1130#issuecomment-356612119) clarified the behavior, so I included in a dedicated `preserveState` subsection.","Url":"https://github.com/vuejs/vuex/pull/1484","RelatedDescription":"Closed or merged PR \"docs: complement preserveState information\" (#1484)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"},{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-01-24T09:32:52","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"open","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Open issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"402611473","IsPullRequest":false,"CreatedAt":"2019-01-24T09:20:54","Actor":"super918180","Number":"1492","RawContent":null,"Title":"I can't  export all state from namespace module, I can only export one by one.","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/20025505/51667964-18372e80-1ffc-11e9-92ee-298f979fd8c0.png)\r\nI can't  export all state from namespace module, I can only export one by one.","Url":"https://github.com/vuejs/vuex/issues/1492","RelatedDescription":"Closed issue \"I can't  export all state from namespace module, I can only export one by one.\" (#1492)"},{"Id":"402347190","IsPullRequest":false,"CreatedAt":"2019-01-23T17:22:06","Actor":"GbAlien","Number":"1491","RawContent":null,"Title":"Optional attribute declared as required on typescript declaration","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTest a mutation without payload on typescript\r\n\r\n### What is expected?\r\nTypescript not complain about missing payload\r\n\r\n### What is actually happening?\r\nTypescript complains about missing payload\r\n\r\n---\r\nchange: \r\n\r\nexport type Mutation<S\\> = (state: S, payload: any) => any;\r\n\r\nto:\r\n\r\nexport type Mutation<S\\> = (state: S, payload?: any) => any;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1491","RelatedDescription":"Open issue \"Optional attribute declared as required on typescript declaration\" (#1491)"},{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-21T05:31:07.4645874Z","RunDurationInMilliseconds":3113}