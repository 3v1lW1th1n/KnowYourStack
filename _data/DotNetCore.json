{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":7,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. Security This release contains the following security changes. CVE-2017-8759 &#124; .NET Framework Remote Code Execution Vulnerability A remote code execution vulnerability exists... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":39,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null},{"Title":"Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance","PublishedOn":"2017-08-25T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the series of posts announced at this initial blog post (.NET Application Architecture Guidance) that explores each of the architecture areas currently covered by our team, this current blog post focuses on &#8220;Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance&#8220;. Just as a reminder, the four introductory blog posts of this series are (or... <a aria-label=\"read more about Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/","RawContent":null},{"Title":"The week in .NET – Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!","PublishedOn":"2017-08-23T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Previous posts: .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Nuke, Warden.NET, .NET in Bangalore Visual Studio extension of the week: Project File Tools The Project File Tools Visual Studio extension provides package name and version IntelliSense, tooltips for... <a aria-label=\"read more about The week in .NET &#8211; Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/","RawContent":null},{"Title":".NET Framework Update for AppContext","PublishedOn":"2017-08-18T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"A new update for .NET Framework is now available for the AppContext class. The behavior of the AppContext class was recently regressed. The update returns the class to the correct behavior. This update affects the .NET Framework 4.6 and later. The update is not required on Windows 10. The AppContext class was introduced in the... <a aria-label=\"read more about .NET Framework Update for AppContext\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/","RawContent":null},{"Title":".NET Framework August 2017 Preview of Quality Rollup","PublishedOn":"2017-08-16T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The August 2017 Preview of Quality Rollup is now available. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Values added to System.Web.Cache expire immediately, with .NET Framework 4.7. [452228] Also reported at ASP.NET Forums #2123507 ASP.NET site running on Sitefinity broken, with .NET Framework 4.7. [457739] CLR CRWLock::StaticAcquireWriterLock() never returns if... <a aria-label=\"read more about .NET Framework August 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/","RawContent":null},{"Title":"The week in .NET – .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston, and links!","PublishedOn":"2017-08-15T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Previous posts: Rezoom.SQL, Protobuf in Orlando Nuke, Warden.NET, .NET in Bangalore MIST, F# in NYC .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, and Visual Studio 2017 Update 3 launched! This is a week to celebrate for the .NET community, as .NET Core 2.0, ASP.NET Core 2.0, and Entity Framework 2.0 shipped! We&#8217;re also... <a aria-label=\"read more about The week in .NET &#8211; .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston, and links!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/15/the-week-in-net-net-core-2-0-asp-net-core-2-0-entity-framework-2-0-visual-studio-2017-update-3-enterprise-entity-framework-core-in-boston-and-links/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/15/the-week-in-net-net-core-2-0-asp-net-core-2-0-entity-framework-2-0-visual-studio-2017-update-3-enterprise-entity-framework-core-in-boston-and-links/","RawContent":null},{"Title":"F# and .NET Core Roadmap Update","PublishedOn":"2017-08-14T00:00:00","CommentsCount":58,"FacebookCount":0,"Summary":"Now that .NET Core 2.0 has been released, we wanted to take some time to talk about F# and .NET Core. F# and .NET Core 1.0 F# has been supported on .NET Core and .NET Standard since their 1.0 releases. In the months leading up to the release of .NET Core 1.0, Enrico Sada from... <a aria-label=\"read more about F# and .NET Core Roadmap Update\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/f-and-net-core-roadmap-update/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/f-and-net-core-roadmap-update/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6470589367","Type":"PullRequestEvent","CreatedAt":"2017-08-17T09:24:13","Actor":"stefanov-stefan","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Opened pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6404144202","Type":"IssuesEvent","CreatedAt":"2017-08-07T01:09:52","Actor":"ghuntley","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/84","RelatedDescription":"Opened issue \"How can we embed images into the .NET foundation website?\" (#84) at dotnet/home","RelatedBody":"The CSP policy on https://dotnetfoundation.org/reactiveui is preventing embedding images. I'd prefer to _not to adjust CSP_ policy to add the reactiveui.net and instead have some way to pull-request images into this repository.\r\n\r\n![image](https://user-images.githubusercontent.com/127353/29008831-a28cfee4-7b60-11e7-81e4-46342b074d4b.png)\r\n"},{"Id":"6404140964","Type":"IssuesEvent","CreatedAt":"2017-08-07T01:08:17","Actor":"ghuntley","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/83","RelatedDescription":"Opened issue \"Modify CSP policy to allow embedding of youtube videos\" (#83) at dotnet/home","RelatedBody":"The CSP policy on https://dotnetfoundation.org/reactiveui is preventing embedding the ReactiveUI video.\r\n\r\nhttps://developers.google.com/web/fundamentals/security/csp/\r\n\r\n```\r\nchild-src lists the URLs for workers and embedded frame contents. For example: child-src https://youtube.com would enable embedding videos from YouTube but not from other origins. Use this in place of the deprecated frame-src directive.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/127353/29008831-a28cfee4-7b60-11e7-81e4-46342b074d4b.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6541935607","Type":"IssuesEvent","CreatedAt":"2017-09-01T22:57:04","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/31","RelatedDescription":"Opened issue \"Issues with .NET Standard 2.0 with .NET Framework & NuGet\" (#31) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\nWe've designed .NET Standard & our tooling so that projects targeting .NET Framework 4.6.1 can consume NuGet packages & projects targeting .NET Standard 2.0 or earlier. Unfortunately, we've seen a few issues around that scenario. The purpose of this document is to summarize the issues, outline our plan on addressing them, and providing workarounds you can deploy with today's state of our tooling.\r\n\r\n## Symptoms and root cause\r\n\r\nThe [primary symptom](https:/github.com/dotnet/standard/issues/410) is that applications crash with a `FileLoadException` or a `FileNotFoundException`. Another symptom is warnings at build time regarding assembly versions. This is due to one or both of the following issues:\r\n\r\n1. Missing binding redirects\r\n2. Missing binaries that come from indirect NuGet packages\r\n\r\n### Missing binding redirects\r\n\r\n.NET Standard 1.x was based around contracts. Many of these contracts shipped with .NET Framework 4.5 and later. However, different versions of .NET Framework picked up different versions of these contracts, as by-design of contract versioning. As a side effect of marking .NET Framework 4.6.1 as implementing .NET Standard 2.0, some projects will now start picking up binaries built for .NET Standard 1.5 and 1.6 (as opposed to previously where .NET Framework 4.6.1 was considered as implementing .NET Standard 1.4). This results in mismatches of the assembly versions between what was shipped in .NET Framework and what was part of .NET Standard 1.5/1.6.\r\n\r\nThis can be addressed by binding redirects. As writing them by hand sucks, we added an [Automatic Binding Redirect Generation][abrg] feature in .NET Framework 4.5.1. This feature is opt-in. Unfortunately, it's not enabled based on target framework, but by which target framework was selected when the project was created (as the feature is turned on via an MSBuild property that is conditionally emitted by the template). In practice, this means it's mostly off you often upgrade existing projects, rather than creating new ones.\r\n\r\n[abrg]: https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/how-to-enable-and-disable-automatic-binding-redirection\r\n\r\n### Missing binaries\r\n\r\nThere are two primary flavors of NuGet: `packages.config` and `PackageReference`.\r\n\r\n* With `packages.config`, each project has a config file with a flattened graph of all the NuGet dependencies. The project file in turn has direct links to all the assets. The assets are selected at install time. None of this includes indirect NuGet references coming from referenced projects.\r\n\r\n* With `PackageReference` each project contains MSBuild `PackageReference` items. The project file contains no references to any assets as the assets are selected at build time. Package restore will compute the graph of all packages, including indirect NuGet references coming from referenced projects.\r\n\r\nThe default for .NET Framework projects is `packages.config`. This ensures more compatibility because `PackageReference` doesn't support all the features that `packages.config` did, for example, PowerShell install scripts and content.\r\n\r\nThe only supported mode for SDK-style projects (.NET Core/.NET Standard) is `PackageReference`. This means that a .NET Framework project referencing a .NET Standard project ends up crossing the streams between two different NuGet models. When the .NET Standard project references NuGet packages that the .NET Framework project doesn't reference, the application ends up missing all binaries coming from those packages.\r\n\r\nWhy has this worked before? Because with` packages.config`, all dependencies are copied to each project's output folder. MSBuild copies them up from there. With `PackageReference`, we don't copy the binaries because it relies on the consuming project to see its dependencies and extract the proper asset itself. This allows the consuming project to pick up the right assets for packages that use bait & switch (which many of the .NET packages must do).\r\n\r\n### Plan\r\n\r\nThe plan is to address these issues moving forward as follows:\r\n\r\n1. **Converge on `PackageReference` for all project types**, including .NET Framework. The short-term plan for (1) is to start blocking project-to-project references in Visual Studio 15.4 that will end up crossing the streams between `packages.config` and `PackageReference`. This block is UI only; you can still edit the reference by editing the project by hand. The error message will instruct you to switch the .NET Framework project to `PackageReference` if you want to reference a .NET Standard project. Referencing .NET Standard binaries or NuGet packages will not require this, it's only about project-to-project references. In later releases, we plan on providing a converter. The challenge is that `packages.config` has features we can't offer for `PackagReference` across the board, in particular PowerShell install scripts and content. We'll need good guidance and mitigations, if applicable.\r\n\r\n2. **Ensure binding redirects are on by default**. Short term, this means we need to fix our target files to make sure we turn on automatic binding redirect generation. However, binding redirects don't work well in all scenarios, when there is no application project (like unit tests or add-ins). We need to work on a plan to bring the regular “higher wins” binding policy without binding redirects. This needs a proposal and proper vetting, but it seems we've reached the point where this is necessary.\r\n\r\n## Workarounds\r\n\r\n### Regular .NET Framework projects\r\n\r\n1. Enable [automatic binding redirects][abrg] in the root .NET Framework application.\r\n2. Make sure your root application project doesn't use `packages.config` but uses `PackageReference` for NuGet packages\r\n    * If you currently don't have `packages.config`, simply add `<RestoreProjectStyle>PackageReference</RestoreProjectStyle>` to your project file\r\n    * If you currently do have a `packages.config`, convert the contents to packages references in the project file. The syntax is like this:\r\n        - `<PackageReference Include=\"package-id\" Version=\"package-version\" />`\r\n\r\n### ASP.NET web applications and web sites\r\n\r\n1. Web applications and web sites don't support automatic binding redirect generation. In order to resolve binding conflicts, you need to double click the warning in the error list and Visual Studio will add them to your `web.config` file.\r\n2. In web application projects, you should enable `PackageReference` like mentioned above. In web sites, you cannot use `PackageReference` as there is no project file. In that case, you need to install all NuGet packages into your web site that any of the direct or indirect project references depend on.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to [https://github.com/dotnet/standard/issues/481]"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6599977169","Type":"PullRequestEvent","CreatedAt":"2017-09-17T04:39:31","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14026","RelatedDescription":"Opened pull request \"Fix RuntimeTypeHandle underlying type for CoreRT\" (#14026) at dotnet/coreclr","RelatedBody":"RuntimeTypeHandles on CoreRT are backed by IntPtr today. This fix is not complete. There are likely more places that make assumption about the underlying runtime handle types, but this is enough to fix the immediate problem hit by @sergign60."},{"Id":"6599485991","Type":"IssuesEvent","CreatedAt":"2017-09-16T20:22:40","Actor":"JosephTremoulet","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/13150","RelatedDescription":"Closed issue \"JIT: mulshift optimization should happen in Lower\" (#13150) at dotnet/coreclr","RelatedBody":"Currently we have code that rewrites multiplication by constants into shift/lea sequences split between Morph and CodeGen.  Ideally it would live in Lower so that CodeGen isn't performing optimizations (which complicates its contract), the target-specific optimization is handled by the back-end, and pre-Lower optimizations see the simpler multiplication tree.\r\n\r\nSee discussion here: https://github.com/dotnet/coreclr/pull/12956#pullrequestreview-51301744"},{"Id":"6598894143","Type":"PullRequestEvent","CreatedAt":"2017-09-16T12:39:45","Actor":"JosephTremoulet","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/13994","RelatedDescription":"Merged pull request \"Update BenchmarksGame benchmarks to latest\" (#13994) at dotnet/coreclr","RelatedBody":"Previously, for each benchmark, we had a copy of what was the fastest serialized implementation (since the mechanics of tracking these and spotting regressions/improvements through noise are easier than parallel ones).  Update them all to reflect current standings, and to include the best overall for each as well as the best serial implementation for each.  Test names are suffixed to match the indices used to distinguish them on the Benchmarks Game website."},{"Id":"6598640272","Type":"PullRequestEvent","CreatedAt":"2017-09-16T08:33:20","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14025","RelatedDescription":"Opened pull request \"Remove dead code from TreeNodeInfoInitCmp\" (#14025) at dotnet/coreclr","RelatedBody":""},{"Id":"6598575198","Type":"PullRequestEvent","CreatedAt":"2017-09-16T07:30:09","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14024","RelatedDescription":"Opened pull request \"Move genLongToIntCast call to codegenlinear\" (#14024) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6598891558","Type":"IssuesEvent","CreatedAt":"2017-09-16T12:37:24","Actor":"ernestobarros","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7672","RelatedDescription":"Opened issue \"C:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007209\\NuGet.targets(102,5): error : 'W8' is not a valid version string.\" (#7672) at dotnet/cli","RelatedBody":"It's failing for all versions of dotnet sdk\r\nTried different dotnet sdk's\r\nTried: dotnet nuget locals -c all\r\n\r\n## Steps to reproduce\r\ndotnet new console -o SimpleApp\r\n\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on SimpleApp\\SimpleApp.csproj...\r\nC:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007209\\NuGet.targets(102,5): error : 'W8' is not a valid version string. [C:\\Users\\$ernesto.barros\\SimpleApp\\SimpleApp.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007209\\NuGet.targets(102,5): error : Parameter name: value [C:\\Users\\$ernesto.barros\\SimpleApp\\SimpleApp.csproj]\r\n\r\n\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6598691253","Type":"IssuesEvent","CreatedAt":"2017-09-16T09:21:51","Actor":"AhmedHussainy","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7671","RelatedDescription":"Opened issue \"Unable to create a dotnet project in Kali linux 2017.1\" (#7671) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ndotnet new console  -o example --lang c#\r\n\r\n## Expected  behavior\r\nmaking a console application in the current directory.\r\n\r\n## Actual behavior\r\n## first time it showed me this ...\r\nGetting ready...\r\nSegmentation fault\r\n\r\n## second time it showed me this...\r\n\r\nGetting ready...\r\nError: Could not install \"/usr/share/dotnet/sdk/2.0.0/Templates/microsoft.dotnet.web.projecttemplates.2.0.1.0.0-beta2-20170803-303.nupkg\".\r\nError: Error reading JObject from JsonReader. Path '', line 0, position 0.\r\nError: Could not install \"/usr/share/dotnet/sdk/2.0.0/Templates/microsoft.dotnet.web.itemtemplates.1.0.0-beta2-20170803-303.nupkg\".\r\nError: Error reading JObject from JsonReader. Path '', line 0, position 0.\r\nError: Could not install \"/usr/share/dotnet/sdk/2.0.0/Templates/microsoft.dotnet.common.projecttemplates.2.0.1.0.0-beta2-20170803-303.nupkg\".\r\nError: Error reading JObject from JsonReader. Path '', line 0, position 0.\r\nError: Could not install \"/usr/share/dotnet/sdk/2.0.0/Templates/microsoft.dotnet.web.spa.projecttemplates.1.0.417.nupkg\".\r\nError: Error reading JObject from JsonReader. Path '', line 0, position 0.\r\nError: Could not install \"/usr/share/dotnet/sdk/2.0.0/Templates/microsoft.dotnet.test.projecttemplates.2.0.1.0.0-beta2-20170803-303.nupkg\".\r\nError: Error reading JObject from JsonReader. Path '', line 0, position 0.\r\nError: Could not install \"/usr/share/dotnet/sdk/2.0.0/Templates/microsoft.dotnet.common.itemtemplates.1.0.0-beta2-20170803-303.nupkg\".\r\nError: Error reading JObject from JsonReader. Path '', line 0, position 0.\r\nObject reference not set to an instance of an object.\r\n   at Microsoft.TemplateEngine.Edge.Settings.SettingsLoader.Save(TemplateCache cacheToSave)\r\n   at Microsoft.TemplateEngine.Edge.Settings.SettingsLoader.Save()\r\n   at Microsoft.TemplateEngine.Cli.Installer.InstallPackages(IEnumerable`1 installationRequests)\r\n   at Microsoft.DotNet.Tools.New.NewCommandShim.FirstRun(IEngineEnvironmentSettings environmentSettings, IInstaller installer)\r\n   at Microsoft.TemplateEngine.Cli.New3Command.ConfigureEnvironment()\r\n   at Microsoft.TemplateEngine.Cli.New3Command.Initialize()\r\n   at Microsoft.TemplateEngine.Cli.New3Command.<ExecuteAsync>d__59.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.NewCommandInputCli.<>c__DisplayClass19_0.<<OnExecute>b__0>d.MoveNext()\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     kali\r\n OS Version:  2017.1\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6598196054","Type":"IssuesEvent","CreatedAt":"2017-09-16T01:25:51","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7670","RelatedDescription":"Opened issue \"Provide a way to have a single reference which brings in both libraries and tools\" (#7670) at dotnet/cli","RelatedBody":"Right now, `PackageReference` items are generally for NuGet packages that have libraries, and `DotNetCliToolReference` items are used for CLI tools which can be invoked with `dotnet <toolname>`.\r\n\r\nFor some scenarios, there are both libraries to be referenced as well as tools that should be added to the project (for example, Entity Framework provides libraries, but could also provide tools for EF migrations or other scenarios).  In those cases, it would make sense to allow the tools and the libraries to be referenced with a single item.  Right now, you need a `PackageReference` as well as a `DotNetCliToolReference`, and while in an IDE like Visual Studio there's UI for adding a `PackageReference`, you have to edit the project file to manually add the `DotNetCliToolReference`."},{"Id":"6597952712","Type":"IssuesEvent","CreatedAt":"2017-09-15T23:00:00","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7669","RelatedDescription":"Closed issue \"Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies for net461\" (#7669) at dotnet/cli","RelatedBody":"I keep getting the assembly binding error for net461: \r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\nIt passes OK for netstandard2.0 test target library using netstandard2.0(target lib)/netcoreapp2.0(test lib) via the dotnet cli.\r\n\r\nHowever if I remove the adapter, this makes things work through resharper/visual studio. \r\n\r\nAny idea's\r\n\r\n### Issue Tracker Info\r\n\r\n* NUnit and NUnit3TestAdapter versions\r\n\r\n```\r\nNUnit 3.8.1\r\nNUnit3TestAdapter 3.8.0\r\n```\r\n\r\n* Visual Studio edition and full version number (see Help About)\r\n\r\n```\r\nVisual Studio Community Edition 15.3.4\r\n```\r\n\r\n* A short repro, preferably attached or pointing to a git repo or gist\r\n\r\n```\r\nA very noddy wrapper around Castle Windsor. \r\n\r\n - Clone https://github.com/cryosharp/fluentwindsor/\r\n - Checkout the `fluentwindsor-next-nunit-adapter-issue` branch\r\n - cd FluentWindsor\\FluentWindsor.Tests\r\n - dotnet restore\r\n - dotnet test\r\n\r\n```\r\n\r\n* What .net platform and version is being targeted\r\n``` \r\n.NET Command Line Tools (2.0.0-preview2-006497)\r\n\r\nProduct Information:\r\n Version:            2.0.0-preview2-006497\r\n Commit SHA-1 hash:  06a2093335\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0-preview2-006497\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0-preview2-25407-01\r\n  Build    : 40c565230930ead58a50719c0ec799df77bddee9\r\n\r\n```\r\n### Full stacktrace of failure\r\n\r\n```\r\nTest run for C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll(.NETFramework,Version=v4.6.1)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.3.0-dev\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nNUnit Adapter 3.8.0.0: Test execution started\r\nRunning all tests in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll\r\nNUnit3TestExecutor converted 6 of 6 NUnit test cases\r\nNUnit Adapter 3.8.0.0: Test execution complete\r\nFailed   Then_We_Should_Be_Able_To_Register_Types_Multiple_Times_Without_Exceptions_Being_Raised\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: Attempting download of new URL file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/Microsoft.VisualStudio.TestPlatform.ObjectModel.DLL.\r\nLOG: Attempting download of new URL file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/Microsoft.VisualStudio.TestPlatform.ObjectModel/Microsoft.VisualStudio.TestPlatform.ObjectModel.DLL.\r\nLOG: Attempting download of new URL file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/Microsoft.VisualStudio.TestPlatform.ObjectModel.EXE.\r\nLOG: Attempting download of new URL file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/Microsoft.VisualStudio.TestPlatform.ObjectModel/Microsoft.VisualStudio.TestPlatform.ObjectModel.EXE.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Resolve_ServiceA\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Resolve_ServiceB\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Resolve_ServiceC\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Discover_Assemblies_That_Has_Any_Type_That_Implements_An_Interface\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Discover_Assemblies_That_Has_Any_Type_That_Inherits_From\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\n\r\nTotal tests: 6. Passed: 0. Failed: 6. Skipped: 0.\r\nTest Run Failed.\r\nTest execution time: 2.1195 Seconds\r\nTest run for C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\netcoreapp2.0\\FluentWindsor.Tests.dll(.NETCoreApp,Version=v2.0)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.3.0-dev\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nNUnit Adapter 3.8.0.0: Test execution started\r\nRunning all tests in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\netcoreapp2.0\\FluentWindsor.Tests.dll\r\nNUnit3TestExecutor converted 6 of 6 NUnit test cases\r\nNUnit Adapter 3.8.0.0: Test execution complete\r\n\r\nTotal tests: 6. Passed: 6. Failed: 0. Skipped: 0.\r\nTest Run Successful.\r\nTest execution time: 2.1551 Seconds\r\n\r\n```"},{"Id":"6597927607","Type":"IssuesEvent","CreatedAt":"2017-09-15T22:48:55","Actor":"fir3pho3nixx","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7669","RelatedDescription":"Opened issue \"Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies for net461\" (#7669) at dotnet/cli","RelatedBody":"I keep getting the assembly binding error for net461: \r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\nIt passes OK for netstandard2.0 test target library using netstandard2.0(target lib)/netcoreapp2.0(test lib) via the dotnet cli.\r\n\r\nHowever if I remove the adapter, this makes things work through resharper/visual studio. \r\n\r\nAny idea's\r\n\r\n### Issue Tracker Info\r\n\r\n* NUnit and NUnit3TestAdapter versions\r\n\r\n```\r\nNUnit 3.8.1\r\nNUnit3TestAdapter 3.8.0\r\n```\r\n\r\n* Visual Studio edition and full version number (see Help About)\r\n\r\n```\r\nVisual Studio Community Edition 15.3.4\r\n```\r\n\r\n* A short repro, preferably attached or pointing to a git repo or gist\r\n\r\n```\r\nA very noddy wrapper around Castle Windsor. \r\n\r\n - Clone https://github.com/cryosharp/fluentwindsor/\r\n - Checkout the `fluentwindsor-next-nunit-adapter-issue` branch\r\n - cd FluentWindsor\\FluentWindsor.Tests\r\n - dotnet restore\r\n - dotnet test\r\n\r\n```\r\n\r\n* What .net platform and version is being targeted\r\n``` \r\n.NET Command Line Tools (2.0.0-preview2-006497)\r\n\r\nProduct Information:\r\n Version:            2.0.0-preview2-006497\r\n Commit SHA-1 hash:  06a2093335\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0-preview2-006497\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0-preview2-25407-01\r\n  Build    : 40c565230930ead58a50719c0ec799df77bddee9\r\n\r\n```\r\n### Full stacktrace of failure\r\n\r\n```\r\nTest run for C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll(.NETFramework,Version=v4.6.1)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.3.0-dev\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nNUnit Adapter 3.8.0.0: Test execution started\r\nRunning all tests in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll\r\nNUnit3TestExecutor converted 6 of 6 NUnit test cases\r\nNUnit Adapter 3.8.0.0: Test execution complete\r\nFailed   Then_We_Should_Be_Able_To_Register_Types_Multiple_Times_Without_Exceptions_Being_Raised\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: Attempting download of new URL file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/Microsoft.VisualStudio.TestPlatform.ObjectModel.DLL.\r\nLOG: Attempting download of new URL file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/Microsoft.VisualStudio.TestPlatform.ObjectModel/Microsoft.VisualStudio.TestPlatform.ObjectModel.DLL.\r\nLOG: Attempting download of new URL file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/Microsoft.VisualStudio.TestPlatform.ObjectModel.EXE.\r\nLOG: Attempting download of new URL file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/Microsoft.VisualStudio.TestPlatform.ObjectModel/Microsoft.VisualStudio.TestPlatform.ObjectModel.EXE.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Resolve_ServiceA\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Resolve_ServiceB\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Resolve_ServiceC\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Discover_Assemblies_That_Has_Any_Type_That_Implements_An_Interface\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\nFailed   Then_We_Should_Be_Able_To_Discover_Assemblies_That_Has_Any_Type_That_Inherits_From\r\nError Message:\r\n System.Exception : FluentWindsor::Assembly Load Errors(If you use nuget please consolidate your versions or try installing the missing assemblies below, otherwise delete your bin/obj folders outside visual studio and then recompile and fix the missing assembly reference errors in your project) ->\r\n\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n,System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/code/fluentwindsor/FluentWindsor/FluentWindsor.Tests/bin/Debug/net461/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : NUnit3.TestAdapter, Version=3.8.0.0, Culture=neutral, PublicKeyToken=4cb40d35494691ac.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\net461\\FluentWindsor.Tests.dll.config\r\nLOG: Using host configuration file:\r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.VisualStudio.TestPlatform.ObjectModel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: The same bind was seen before, and was failed with hr = 0x80070002.\r\n\r\nStack Trace:\r\n   at FluentlyWindsor.Extensions.AssemblyExtensions.HasAnyTypeThatImplementsInterface[T](Assembly assembly, IAssemblyScanningPolicy[] policies)\r\n   at FluentlyWindsor.FluentWindsor.<>c.<WithInstallers>b__12_0(Assembly x)\r\n   at FluentlyWindsor.AssemblyScanner.FindAssemblies(Predicate`1 isTrueOf)\r\n   at FluentlyWindsor.FluentWindsor.WithInstallers()\r\n   at FluentWindsor.Tests.Given_We_Are_Fluently_Registering.SetUp() in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\Given_We_Are_Fluently_Registering.cs:line 14\r\n\r\nTotal tests: 6. Passed: 0. Failed: 6. Skipped: 0.\r\nTest Run Failed.\r\nTest execution time: 2.1195 Seconds\r\nTest run for C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\netcoreapp2.0\\FluentWindsor.Tests.dll(.NETCoreApp,Version=v2.0)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.3.0-dev\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nNUnit Adapter 3.8.0.0: Test execution started\r\nRunning all tests in C:\\code\\fluentwindsor\\FluentWindsor\\FluentWindsor.Tests\\bin\\Debug\\netcoreapp2.0\\FluentWindsor.Tests.dll\r\nNUnit3TestExecutor converted 6 of 6 NUnit test cases\r\nNUnit Adapter 3.8.0.0: Test execution complete\r\n\r\nTotal tests: 6. Passed: 6. Failed: 0. Skipped: 0.\r\nTest Run Successful.\r\nTest execution time: 2.1551 Seconds\r\n\r\n```"},{"Id":"6597886621","Type":"IssuesEvent","CreatedAt":"2017-09-15T22:31:51","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/5639","RelatedDescription":"Closed issue \"Stop shipping Microsoft.DotNet.TestFramework.dll in the \"sdk\" folder\" (#5639) at dotnet/cli","RelatedBody":"We accidentally started publishing the `Microsoft.DotNet.TestFramework.dll` in our shipping product.  This assembly is under `src`, but is only used for tests.  We should remove this from our shipping product.\r\n\r\n/cc @piotrpMSFT @livarcocc @jonsequitur @jgoshi "},{"Id":"6597885853","Type":"PullRequestEvent","CreatedAt":"2017-09-15T22:31:32","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7663","RelatedDescription":"Merged pull request \"Removing Microsoft.DotNet.TestFramework from the product code\" (#7663) at dotnet/cli","RelatedBody":"Removing Microsoft.DotNet.TestFramework from the product code and from the SDK deployment and moving the code to the test folder.\r\n\r\n@dotnet/dotnet-cli \r\n"},{"Id":"6597878903","Type":"PullRequestEvent","CreatedAt":"2017-09-15T22:28:58","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7666","RelatedDescription":"Merged pull request \"fix missing windows package\" (#7666) at dotnet/cli","RelatedBody":"Put back the dependency of package. Duplicate a publish step with package and use that one in all linux distro specific\r\n"},{"Id":"6597830401","Type":"PullRequestEvent","CreatedAt":"2017-09-15T22:09:57","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7668","RelatedDescription":"Merged pull request \"Insert SDK 2.0.2-vspre-20170915-1\" (#7668) at dotnet/cli","RelatedBody":"Includes:\r\n\r\n- https://github.com/dotnet/sdk/pull/1582\r\n- https://github.com/dotnet/sdk/pull/1565\r\n\r\n@MattGertz FYI for normal code flow\r\n\r\n@livarcocc @johnbeisner @wli3 for review"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6598912195","Type":"IssuesEvent","CreatedAt":"2017-09-16T12:56:18","Actor":"ddobric","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/496","RelatedDescription":"Opened issue \"APIs of Net\" (#496) at dotnet/standard","RelatedBody":"What is the roadmap of https://apisof.net ?\r\n\r\nIt is a very helpful application. However it should be improved.\r\nRight now, even certificate has expired. : DLG_FLAGS_SEC_CERT_DATE_INVALID\r\n\r\nThanks\r\n\r\n\r\n\r\n\r\n"},{"Id":"6592952439","Type":"IssuesEvent","CreatedAt":"2017-09-14T22:00:23","Actor":"stephenvfoster","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/493","RelatedDescription":"Closed issue \"Unable to Unit Test (MSTEST) F# .NET Standard Library in VS2017\" (#493) at dotnet/standard","RelatedBody":"I'm upgrading a rather large F# solution with PCL libraries to .Net Standard libraries with VS2017.  \r\n\r\nThe F# .Net Standard libraries work fine when tested from a console app, but unit tests fail with the error System.IO.FileLoadException: Could not load file or assembly 'System.Runtime, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n\r\nI have attached a minimal solution to demonstrate the issue; it contains 3 projects;\r\n- NetStandardLibrary: a F# library targeting netstandard1.6\r\n- NetStandardTests: a C# unit test targeting net462  (unit test fails)\r\n- NetStandardConsole: a C# console app targeting net462 (runs fine)\r\n\r\nCan someone please help us out!  We'd really like to upgrade to vs2017 and .Net Standard ASAP.\r\n\r\nPlease know we also tried different combinations of including the System.Runtime package, without result.  \r\n\r\nVery much appreciated,\r\n\r\nStephen\r\n\r\nP.S.  We've tried netstandard2.0 with net7 -- but this fails to compile accessors on the F# type.  :-/\r\n\r\nP.S.S.  I'm a long-term .net guy (decades), but new to this forum so please let me know if this isn't the right place for this question.  :-)\r\n[NetStandardTests.zip](https://github.com/dotnet/standard/files/1301337/NetStandardTests.zip)\r\n"},{"Id":"6592432642","Type":"IssuesEvent","CreatedAt":"2017-09-14T19:51:36","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/494","RelatedDescription":"Closed issue \"Calculating whether a .NET Standard library ref is a facade costs 0.5% of solution-wide design time build\" (#494) at dotnet/standard","RelatedBody":"See: https://github.com/dotnet/sdk/issues/1586\r\n\r\nNote: This is the most expensive condition in the entire build and give it only runs for .NET Standard projects it's overhead will be higher for a solution containing only .NET Standard projects.\r\n\r\nPass|File|Line #|Expression|Inc (ms)|Inc (%)|Exc (ms)|Exc (%)|#|Bug\r\n---|---|---:|---|---:|---:|---:|---:|---:|---\r\nTotal Evaluation||||6159|100%|54|0.9%||\r\nProperties (Pass 1)||||3312|53.8%|9|0.1%||\r\nItemDefinitionGroup (Pass 2)||||14|0.2%|2|0%||\r\nItems (Pass 3)||||566|9.2%|24|0.4%||\r\nLazy Items (Pass 3.1)||||1826|29.6%|158|2.6%||\r\nUsingTasks (Pass 4)||||59|1%|59|1%||\r\nTargets (Pass 5)||||327|5.3%|208|3.4%||\r\nLazy Items (Pass 3.1)|NETStandard.Library.targets|12|`Condition=\"'%(FileName)' != 'netstandard'\")`|33|0.5%|33|0.5%|43|\r\n\r\nThis line: https://github.com/dotnet/standard/blob/master/netstandard/pkg/targets/NETStandard.Library.targets#L12"},{"Id":"6591650102","Type":"IssuesEvent","CreatedAt":"2017-09-14T16:47:02","Actor":"prakashnandshukla","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/495","RelatedDescription":"Opened issue \" Unhandled Exception: System.ServiceModel.FaultException`1[[Microsoft.Xrm.Sdk.OrganizationServiceFault, Microsoft.Xrm.Sdk, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]:  Could not load file or assembly 'Box.V2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ddda8fe64dde1ac3' or one of its dependencies. The system cannot find the file specified.Detail: \" (#495) at dotnet/standard","RelatedBody":"Hi \r\n\r\nI am working on MS Dynamics CRM integration project with box.com, I have added Box.V2 .dll file as a reference assemble and I am using properties these assembly to generate token using JWT authentication.\r\nWhen I am creating any record I am getting this exception/error.\r\n Unhandled Exception: System.ServiceModel.FaultException`1[[Microsoft.Xrm.Sdk.OrganizationServiceFault, Microsoft.Xrm.Sdk, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]:\r\n Could not load file or assembly 'Box.V2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ddda8fe64dde1ac3' or one of its dependencies. The system cannot find the file specified.Detail: \r\n\r\nThanks\r\n[Box SDK exception.txt](https://github.com/dotnet/standard/files/1303750/Box.SDK.exception.txt)\r\n"},{"Id":"6589113085","Type":"IssuesEvent","CreatedAt":"2017-09-14T07:36:24","Actor":"davkean","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/494","RelatedDescription":"Opened issue \"Calculating whether a .NET Standard library ref is a facade costs 0.5% of solution-wide design time build\" (#494) at dotnet/standard","RelatedBody":"See: https://github.com/dotnet/sdk/issues/1586\r\n\r\nPass|File|Line #|Expression|Inc (ms)|Inc (%)|Exc (ms)|Exc (%)|#|Bug\r\n---|---|---:|---|---:|---:|---:|---:|---:|---\r\nTotal Evaluation||||6159|100%|54|0.9%||\r\nProperties (Pass 1)||||3312|53.8%|9|0.1%||\r\nItemDefinitionGroup (Pass 2)||||14|0.2%|2|0%||\r\nItems (Pass 3)||||566|9.2%|24|0.4%||\r\nLazy Items (Pass 3.1)||||1826|29.6%|158|2.6%||\r\nUsingTasks (Pass 4)||||59|1%|59|1%||\r\nTargets (Pass 5)||||327|5.3%|208|3.4%||\r\nLazy Items (Pass 3.1)|NETStandard.Library.targets|12|`Condition=\"'%(FileName)' != 'netstandard'\")`|33|0.5%|33|0.5%|43|\r\n\r\nThis line: https://github.com/dotnet/standard/blob/master/netstandard/pkg/targets/NETStandard.Library.targets#L12"},{"Id":"6588098595","Type":"IssuesEvent","CreatedAt":"2017-09-14T00:45:49","Actor":"stephenvfoster","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/493","RelatedDescription":"Opened issue \"Unable to Unit Test (MSTEST) F# .NET Standard Library in VS2017\" (#493) at dotnet/standard","RelatedBody":"I'm upgrading a rather large F# solution with PCL libraries to .Net Standard libraries with VS2017.  \r\n\r\nThe F# .Net Standard libraries work fine when tested from a console app), but unit tests fail with the error System.IO.FileLoadException: Could not load file or assembly 'System.Runtime, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n\r\nI have attached a minimal solution to demonstrate the issue; it contains 3 projects;\r\n- NetStandardLibrary: a F# library targeting netstandard1.6\r\n- NetStandardTests: a C# unit test targeting net462  (unit test fails)\r\n- NetStandardConsole: a C# console app targeting net462 (runs fine)\r\n\r\nCan someone please help us out!  We'd really like to upgrade to vs2017 and .Net Standard ASAP.\r\n\r\nVery much appreciated,\r\n\r\nStephen\r\n\r\nP.S.  We've tried netstandard2.0 with net7 -- but this fails to compile accessors on the F# type.  :-/\r\n\r\nP.S.S.  I'm a long-term .net guy (decades), but new to this forum so please let me know if this isn't the right place for this question.  :-)\r\n[NetStandardTests.zip](https://github.com/dotnet/standard/files/1301337/NetStandardTests.zip)\r\n"},{"Id":"6587834164","Type":"PullRequestEvent","CreatedAt":"2017-09-13T22:58:12","Actor":"joperezr","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/492","RelatedDescription":"Merged pull request \"Marking 2.0.1 package as stable\" (#492) at dotnet/standard","RelatedBody":"cc: @weshaggard @Petermarcu @ericstj @joshfree \r\n\r\nOnce PR #491 is merged, this PR will mark that package as stable."},{"Id":"6587833217","Type":"PullRequestEvent","CreatedAt":"2017-09-13T22:57:52","Actor":"joperezr","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/491","RelatedDescription":"Merged pull request \"Update uap10.1 TFM to uap10.0.15138 and rev up Netstandard package version\" (#491) at dotnet/standard","RelatedBody":"cc: @weshaggard @Petermarcu @ericstj @joshfree \r\n\r\nFixing Netstandard.Library package and reving up the package version to 2.0.1"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6599815031","Type":"PullRequestEvent","CreatedAt":"2017-09-17T01:44:44","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24102","RelatedDescription":"Opened pull request \"Add btrfs and other missing file system types\" (#24102) at dotnet/corefx","RelatedBody":"System.IO.FileSystem.DriveInfo tests failed on my SUSE in virtualbox because it didn't expect statfs to give a f_type of btrfs.\r\n\r\nAdded that, and took the opportunity to grep stat.c for other missing entries. Moved a couple that seemed in the wrong switch block, based on that file. \r\n\r\nNote the first and last commits just upper/lowercase so skip those to see an actual diff."},{"Id":"6599723660","Type":"PullRequestEvent","CreatedAt":"2017-09-17T00:05:06","Actor":"weitzhandler","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24101","RelatedDescription":"Opened pull request \"Data-annotations length fix\" (#24101) at dotnet/corefx","RelatedBody":"Fixes #24064 "},{"Id":"6599471651","Type":"PullRequestEvent","CreatedAt":"2017-09-16T20:10:50","Actor":"janvorli","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24100","RelatedDescription":"Merged pull request \"Fix RHEL6 linux/in.h file detection\" (#24100) at dotnet/corefx","RelatedBody":"On RHEL6, the build got broken by my recent fix of the in_pktinfo /\r\nip_mreqn detection fix. The reason is that on that platform, linux/in.h\r\ncannot be included on its own, the sys/socket.h needs to be included\r\nbefore that to provide definitions of some structures. In fact, Linux\r\ndoc states that the sys/socket.h should be included before the\r\nlinux/in.h. So I am fixing that by adding that include to the detection\r\ncode.\r\n\r\nI have verified that it works on RHEL 6, Ubuntu 14.04, Alpine Linux and FreeBSD."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6599851183","Type":"IssuesEvent","CreatedAt":"2017-09-17T02:23:52","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21952","RelatedDescription":"Closed issue \"Improve stackalloc IL emit \" (#21952) at dotnet/roslyn","RelatedBody":"It seems very brute-force\r\n\r\nWe can do much better:\r\n- stackalloc T[0]     -  should just become \"default(target type)\"\r\n- stackalloc byte[x]   -  no need to emit \" checked(x * 1) \" \r\n- stackalloc int[128]  - we could constant-fold \"128 * 4\"\r\n- unused stackalloc should be treated as not sideeffecting. The only possible sideeffect is stackoverflow - that is hardly deterministic or useful as a dependency.\r\n"},{"Id":"6599782698","Type":"PullRequestEvent","CreatedAt":"2017-09-17T01:08:54","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22157","RelatedDescription":"Merged pull request \"Optimizes emit for trivial/common cases of stackalloc\" (#22157) at dotnet/roslyn","RelatedBody":"Optimizes emit for trivial/common cases of stackalloc\r\n\r\nFixes:#21952\r\n\r\nCurrent codegen for stackalloc seems very brute-force\r\n\r\nWe can do much better:\r\n- stackalloc T[0]     -  should just become \"default(target type)\"\r\n- stackalloc byte[x]   -  no need to emit \" checked(x * 1) \" \r\n- stackalloc int[128]  - we could constant-fold \"128 * 4\"\r\n- unused stackalloc should be treated as not sideeffecting. The only possible sideeffect is a fatal stackoverflow - that is hardly deterministic or useful as a dependency.\r\n"},{"Id":"6599212710","Type":"IssuesEvent","CreatedAt":"2017-09-16T16:49:08","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22160","RelatedDescription":"Opened issue \"Compiler invariant: the members of a type should be contained by that type\" (#22160) at dotnet/roslyn","RelatedBody":"I'd like to start documenting invariants and, if possible, implement them as assertions.\r\n\r\nIn this case, I'd propose adding to the `GetMembers` method that for each of the returned members, we can check the `ContainingType` matches `this`.\r\n\r\nFYI @cston @gafter since this relates to a recent thread."},{"Id":"6598744239","Type":"IssuesEvent","CreatedAt":"2017-09-16T10:13:01","Actor":"bkoelman","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22159","RelatedDescription":"Opened issue \"Question: is there a NuGet feed for latest IOperation changes?\" (#22159) at dotnet/roslyn","RelatedBody":"I'd like to try out the latest changes to the `IOperation` API. I think they are in the features/ioperation branch.\r\n\r\nIs there a NuGet feed I can reference or do I need to build that branch from source? I've tried that in the past, but got into signing/versioning issues that prevented me to reference the output assemblies."},{"Id":"6598424410","Type":"PullRequestEvent","CreatedAt":"2017-09-16T04:57:48","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22158","RelatedDescription":"Opened pull request \"Remove Debugger.Break call from two unittests\" (#22158) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/22156\r\n\r\nI accidentally left those calls in unittests in https://github.com/dotnet/roslyn/pull/21239\r\n\r\n@dotnet/roslyn-ide for review."},{"Id":"6598266611","Type":"PullRequestEvent","CreatedAt":"2017-09-16T02:27:39","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22157","RelatedDescription":"Opened pull request \"Optimizes emit for trivial/common cases of stackalloc\" (#22157) at dotnet/roslyn","RelatedBody":"Optimizes emit for trivial/common cases of stackalloc\r\n\r\nFixes:#21952\r\n\r\nCurrent codegen for stackalloc seems very brute-force\r\n\r\nWe can do much better:\r\n- stackalloc T[0]     -  should just become \"default(target type)\"\r\n- stackalloc byte[x]   -  no need to emit \" checked(x * 1) \" \r\n- stackalloc int[128]  - we could constant-fold \"128 * 4\"\r\n- unused stackalloc should be treated as not sideeffecting. The only possible sideeffect is a fatal stackoverflow - that is hardly deterministic or useful as a dependency.\r\n"},{"Id":"6598205532","Type":"IssuesEvent","CreatedAt":"2017-09-16T01:33:45","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22091","RelatedDescription":"Reopened issue \"First touch: VisualStudioSetup.Next VS instance fails to create new Console App\" (#22091) at dotnet/roslyn","RelatedBody":"Expect first touch experience to be sync, build, launch `VisualStudioSetup.Next`, create new `Console App (.NET Core)`. Actually, failed to create console app with the following exception:\r\n\r\n>Request locate failed with message: Cannot find service module info file '*/remoteHostService.servicehub.service.json' in 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\common7\\ServiceHub\\Services', using discovery services failed: \r\n\r\n>VsixServiceDiscovery: More than one service 'remoteHostService' found at: 'C:\\USERS\\KINGC\\APPDATA\\LOCAL\\MICROSOFT\\VISUALSTUDIO\\15.0_DA80E4B2ROSLYNDEV\\EXTENSIONS\\MICROSOFT\\ROSLYN LANGUAGE SERVICES FOR VISUAL STUDIO 15\\42.42.42.42424\\remoteHostService.servicehub.service.json'; \r\n\r\n>'C:\\USERS\\KINGC\\APPDATA\\LOCAL\\MICROSOFT\\VISUALSTUDIO\\15.0_DA80E4B2ROSLYNDEV\\EXTENSIONS\\MICROSOFT\\ROSLYN LANGUAGE SERVICES\\42.42.42.42424\\remoteHostService.servicehub.service.json'\r\n\r\nWill try to reproduce starting from a bare Windows 10 install if no one can just tell me where I've gone wrong. \r\n\r\n[Dump](https://microsoft-my.sharepoint.com/:u:/p/chrkin/EQH_S9G0VwNIg8tgO0oYZgUBYW4RBRuEoK2MOs_nwCQdDw)"},{"Id":"6598204207","Type":"IssuesEvent","CreatedAt":"2017-09-16T01:32:31","Actor":"kingces95","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22156","RelatedDescription":"Opened issue \"First Touch Test Failures\" (#22156) at dotnet/roslyn","RelatedBody":"I expected master, as of the time of writing to restore, build, and test without failure. I actually observe the test run failing. I'm running Windows 10 VM in Parallels on a MacBookPro.\r\n\r\n![image](https://user-images.githubusercontent.com/4120386/30508007-fa8e5be2-9a5a-11e7-9646-304cfb6888ff.png)\r\n\r\nThe gaurd page warning comes from `csrss`. So that's weird. Instead, I attach to the console test runner at 13948:\r\n\r\n![image](https://user-images.githubusercontent.com/4120386/30508047-aa82846a-9a5b-11e7-91ea-6f2338786c10.png)\r\n\r\nWhich has a command line of:\r\n\r\n![image](https://user-images.githubusercontent.com/4120386/30508050-be18ea78-9a5b-11e7-9162-22004aabfba6.png)\r\n\r\nAnd I find the runner raised a `Debugger.Break`:\r\n\r\n![image](https://user-images.githubusercontent.com/4120386/30508080-74ffce14-9a5c-11e7-9659-7226d1ce8a72.png)\r\n\r\nAnd if I hit `F5` a few times I hit the same `Debugger.Break` until finally the test finishes and I show all tests pass:\r\n\r\n![image](https://user-images.githubusercontent.com/4120386/30508114-18972b4e-9a5d-11e7-8bda-bd72560dd075.png)\r\n\r\nThough I expected no failures, I'd expect if a dialog pops up because a test hit a debug break point, that ultimately the test runner would show a failed test.\r\n\r\nLet me know if you need more information. Happens every time on my VM. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"908763937100898304","CreatedAt":"2017-09-15T18:46:21+00:00","UserScreenname":"dotnet","Text":"Sneak peak at .NET Conf 2017 with @BethMassi and @runfaster2000 https://t.co/4TjjHQrUja","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":21,"RawContent":null},{"Id":"908559275990982656","CreatedAt":"2017-09-15T05:13:06+00:00","UserScreenname":"dotnet","Text":"Announcing SignalR for https://t.co/iOiV9qNspl Core 2.0 https://t.co/quJIZyhUdB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":326,"FavoriteCount":262,"RawContent":null},{"Id":"908126010171834368","CreatedAt":"2017-09-14T00:31:27+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 https://t.co/iOiV9qNspl and Configuration features https://t.co/6LCtKp9gfp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":117,"FavoriteCount":71,"RawContent":null},{"Id":"907775139210715137","CreatedAt":"2017-09-13T01:17:13+00:00","UserScreenname":"dotnet","Text":".NET Framework September 2017 Security and Quality Rollup https://t.co/1yk2xwnrvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":26,"RawContent":null},{"Id":"906146140000841728","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"dotnet","Text":"Getting Started with Windows Containers https://t.co/UnRPIRZySp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":183,"FavoriteCount":108,"RawContent":null},{"Id":"903669794150506500","CreatedAt":"2017-09-01T17:24:02+00:00","UserScreenname":"dotnet","Text":"#dotNETConf - streaming live directly to your favorite device. Don't miss out.\n\nIs it on your calendar yet?… https://t.co/SK3CUqUkrs","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":123,"FavoriteCount":100,"RawContent":null},{"Id":"902942589053108224","CreatedAt":"2017-08-30T17:14:23+00:00","UserScreenname":"dotnet","Text":"Introducing .NET IL Linker https://t.co/ji9Uhlalw2","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":301,"FavoriteCount":204,"RawContent":null},{"Id":"902581598876459009","CreatedAt":"2017-08-29T17:19:56+00:00","UserScreenname":"dotnet","Text":"The Week in .NET: Let's Encrypt WebApp Renewer, CodeCamp Seattle 2017, and links!\nhttps://t.co/Mssa964piA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":42,"RawContent":null}]}},"RunOn":"2017-09-17T05:30:18.0061754Z","RunDurationInMilliseconds":6139}