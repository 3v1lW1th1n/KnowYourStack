{"Data":{"GitHub":{"Issues":[{"Id":"469372929","IsPullRequest":true,"CreatedAt":"2019-07-21T20:48:06","Actor":"jmarolf","Number":"1415","RawContent":null,"Title":"add class lib templates for winforms","State":"closed","Body":"fixes #1414","Url":"https://github.com/dotnet/winforms/pull/1415","RelatedDescription":"Closed or merged PR \"add class lib templates for winforms\" (#1415)"},{"Id":"469372520","IsPullRequest":false,"CreatedAt":"2019-07-21T20:48:06","Actor":"jmarolf","Number":"1414","RawContent":null,"Title":"Support Class Library project templates","State":"closed","Body":"This is to bring us to experience parity with desktop for WPF on .NET Core 3.0.\r\n\r\nOn desktop today you can add a class library project to your existing Winforms solution and everything will just work. Due to complexities in how Framework References work this will not light up automatically. Instead we will need a Winforms Class library template that has the correct framework references.","Url":"https://github.com/dotnet/winforms/issues/1414","RelatedDescription":"Closed issue \"Support Class Library project templates\" (#1414)"},{"Id":"470626721","IsPullRequest":false,"CreatedAt":"2019-07-20T02:50:06","Actor":"maikebing","Number":"1436","RawContent":null,"Title":"If possible, want the Ribbon control.","State":"open","Body":"Existing open source projects\r\nhttps://github.com/RibbonWinForms/RibbonWinForms\r\n\r\nMFC's Ribbon Designer \r\nhttps://docs.microsoft.com/en-us/cpp/mfc/ribbon-designer-mfc?view=vs-2019\r\n\r\nSo, I think winforms should have Ribbon. ","Url":"https://github.com/dotnet/winforms/issues/1436","RelatedDescription":"Open issue \"If possible, want the Ribbon control.\" (#1436)"},{"Id":"470556285","IsPullRequest":true,"CreatedAt":"2019-07-19T21:39:45","Actor":"AdamYoblick","Number":"1434","RawContent":null,"Title":"fixing tests broken in VS only","State":"closed","Body":"Fixes tests broken in VS only. Assert.Same does not work in VS because xUnit MemberData is populated in a different AppDomain, which means the references are not equal.\r\n\r\nAssert.Equal should be used for string compares anyway ðŸ˜‰ \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1434)","Url":"https://github.com/dotnet/winforms/pull/1434","RelatedDescription":"Closed or merged PR \"fixing tests broken in VS only\" (#1434)"},{"Id":"470564771","IsPullRequest":false,"CreatedAt":"2019-07-19T21:30:36","Actor":"JeremyKuhne","Number":"1435","RawContent":null,"Title":"Remove all references to DRAWING_DESIGN_NAMESPACE ","State":"open","Body":"Most are gone, need to remove from projects and look for any other references.","Url":"https://github.com/dotnet/winforms/issues/1435","RelatedDescription":"Open issue \"Remove all references to DRAWING_DESIGN_NAMESPACE \" (#1435)"},{"Id":"470441006","IsPullRequest":true,"CreatedAt":"2019-07-19T17:11:32","Actor":"hughbe","Number":"1433","RawContent":null,"Title":"Add more ContainerControl tests, cleanup ContainerControl and fix an NRE","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1433)","Url":"https://github.com/dotnet/winforms/pull/1433","RelatedDescription":"Open PR \"Add more ContainerControl tests, cleanup ContainerControl and fix an NRE\" (#1433)"},{"Id":"470402465","IsPullRequest":true,"CreatedAt":"2019-07-19T15:58:28","Actor":"hughbe","Number":"1432","RawContent":null,"Title":"Remove remaining FXCop references","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1432)","Url":"https://github.com/dotnet/winforms/pull/1432","RelatedDescription":"Open PR \"Remove remaining FXCop references\" (#1432)"},{"Id":"470351343","IsPullRequest":true,"CreatedAt":"2019-07-19T15:50:23","Actor":"vladimir-krestov","Number":"1428","RawContent":null,"Title":"Fixing code style to avoid build fail","State":"closed","Body":"## Proposed changes\r\n\r\n- Made `service.GetTestAccessor()` construction as separate variable. This will avoid the build fail and excessive calls to `GetTestAccessor()` method.\r\n\r\n## Before\r\n\r\nAfter pulling master branch project build is fail for the reason that the compiler can't recognize `GetTestAccessor()` method.\r\n\r\n### Screenshots \r\n![image](https://user-images.githubusercontent.com/49272759/61541005-70993700-aa47-11e9-89a8-5caa60df70a0.png)\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/61540992-6b3bec80-aa47-11e9-9f5a-c861e5bfc038.png)\r\n\r\n## After\r\n\r\nProject build is successful\r\n\r\n## Test environment(s) \r\n\r\n- Microsoft Windows [Version 10.0.18362.175]\r\n- .NET Core SDK. Version: 3.0.0-preview8-27916-13\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1428)","Url":"https://github.com/dotnet/winforms/pull/1428","RelatedDescription":"Closed or merged PR \"Fixing code style to avoid build fail\" (#1428)"},{"Id":"470382906","IsPullRequest":true,"CreatedAt":"2019-07-19T15:26:27","Actor":"hughbe","Number":"1431","RawContent":null,"Title":"Add ToolTip tests, cleanup code and add missing validation","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1431)","Url":"https://github.com/dotnet/winforms/pull/1431","RelatedDescription":"Open PR \"Add ToolTip tests, cleanup code and add missing validation\" (#1431)"},{"Id":"470368440","IsPullRequest":true,"CreatedAt":"2019-07-19T15:19:21","Actor":"sharwell","Number":"1430","RawContent":null,"Title":"Field accessors for tests should return by reference","State":"closed","Body":"This change makes the test accessor fully transparent for testing purposes.","Url":"https://github.com/dotnet/winforms/pull/1430","RelatedDescription":"Closed or merged PR \"Field accessors for tests should return by reference\" (#1430)"},{"Id":"470366180","IsPullRequest":true,"CreatedAt":"2019-07-19T14:50:49","Actor":"hughbe","Number":"1429","RawContent":null,"Title":"Simplify hashcodes across winforms","State":"open","Body":"- Prefer HashCode.Combine\r\n- Use expression body members where possible\r\n- Cleanup associated code\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1429)","Url":"https://github.com/dotnet/winforms/pull/1429","RelatedDescription":"Open PR \"Simplify hashcodes across winforms\" (#1429)"},{"Id":"469108539","IsPullRequest":true,"CreatedAt":"2019-07-19T13:58:35","Actor":"vladimir-krestov","Number":"1410","RawContent":null,"Title":"Fixing keyboard up-arrow navigation and keyboard accelerators on MenuStrip","State":"closed","Body":"Fixes #1021\r\n\r\n## Proposed changes\r\n- Fix `CanProcessMnemonic` method implementation to correct work of keyboard accelerators\r\n- Change the implementation of getting the `start` item in `GetNextItemHorizontal` method to correct work of up\\down cycle navigation \r\n\r\n### Before\r\n- Issue 1: keyboard accelerators on MenuStrip are ignored\r\n- Issue 2: keyboard up-arrow return the first item when first item is focused. Focus does not move cyclically to the last element.\r\n\r\n### After\r\n- Keyboard accelerators of MenuItems work well in MenuStrip/ToolStrip/ContextMenuStrip/StatusStrip controls\r\n- Keyboard up-arrow return the last item when first item is focused. Keyboard up\\down cycle navigation works correctly\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manual keyboard testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.18362.175]\r\n- .NET Core SDK. Version: 3.0.0-preview8-27916-13\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1410","RelatedDescription":"Closed or merged PR \"Fixing keyboard up-arrow navigation and keyboard accelerators on MenuStrip\" (#1410)"},{"Id":"470296410","IsPullRequest":true,"CreatedAt":"2019-07-19T12:20:10","Actor":"hughbe","Number":"1427","RawContent":null,"Title":"Remove DataGridViewBand._bandIsRow","State":"open","Body":"Just use the `IsRow` setter and simplify the check\r\n\r\nFollow-up to #1390\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1427)","Url":"https://github.com/dotnet/winforms/pull/1427","RelatedDescription":"Open PR \"Remove DataGridViewBand._bandIsRow\" (#1427)"},{"Id":"470200040","IsPullRequest":true,"CreatedAt":"2019-07-19T12:01:22","Actor":"hughbe","Number":"1426","RawContent":null,"Title":"Add more Control tests","State":"closed","Body":"I removed the `Debug.Assert` in `DockAndAnchorLayout.SetAnchor` because it is a genuinely invalid. For example, in `Anchor_Set_TestData()`:\r\n\r\n```cs\r\npublic static IEnumerable<object[]> Anchor_Set_TestData()\r\n{\r\n    // ...\r\n    yield return new object[] { (AnchorStyles)(-1), AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right };\r\n    yield return new object[] { (AnchorStyles)int.MaxValue, AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(Anchor_Set_TestData))]\r\npublic void Control_Anchor_Set_GetReturnsExpected(AnchorStyles value, AnchorStyles expected)\r\n{\r\n    var control = new Control\r\n    {\r\n        Anchor = value\r\n    };\r\n    Assert.Equal(expected, control.Anchor);\r\n    Assert.Equal(DockStyle.None, control.Dock);\r\n\r\n    // Set same.\r\n    control.Anchor = value;\r\n    Assert.Equal(expected, control.Anchor);\r\n    Assert.Equal(DockStyle.None, control.Dock);\r\n}\r\n```\r\n\r\nBasically it normalizes the value only to include `AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1426)","Url":"https://github.com/dotnet/winforms/pull/1426","RelatedDescription":"Closed or merged PR \"Add more Control tests\" (#1426)"},{"Id":"470122915","IsPullRequest":true,"CreatedAt":"2019-07-19T03:43:50","Actor":"Tanya-Solyanik","Number":"1425","RawContent":null,"Title":"[WIP] Removing or annotating Serializable attribute on winforms classse","State":"open","Body":"Fixes #889, #890 \r\nThese changes are built upon #1236\r\nI decided to start a new PR because one of the feedback items was to factor out cleanup changes.\r\nChanges on top of #1236\r\n1. updated comments per feedback\r\n2. edited the test to cover a single assembly\r\n\r\nComing soon:\r\n1. add serializable attribute test to other assemblies\r\n2. add round trip tests\r\n3. annotate structs that are known to be used in resx serialization \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1425)","Url":"https://github.com/dotnet/winforms/pull/1425","RelatedDescription":"Open PR \"[WIP] Removing or annotating Serializable attribute on winforms classse\" (#1425)"},{"Id":"469583934","IsPullRequest":true,"CreatedAt":"2019-07-18T18:32:30","Actor":"JeremyKuhne","Number":"1419","RawContent":null,"Title":"Remove fxcop suppressions","State":"closed","Body":"- Remove all of the FxCop suppressions.\r\n- Removed unused pound defines.\r\n- Remove all of the <para> tags\r\n- Cut some extra line breaks\r\n- Remove unused usings and move most to top of file\r\n- Other summary cleanup via various regex\r\n\r\nThis was mostly done programmatically with a manual touch-up pass. Probably missing quite a bit, but this should put things in much better shape. Hopefully we can use this as a base to polish further on future code changes.\r\n\r\nShould have no functional changes.","Url":"https://github.com/dotnet/winforms/pull/1419","RelatedDescription":"Closed or merged PR \"Remove fxcop suppressions\" (#1419)"},{"Id":"469643678","IsPullRequest":true,"CreatedAt":"2019-07-18T18:26:48","Actor":"RussKie","Number":"1420","RawContent":null,"Title":"Use auto-generated resources","State":"closed","Body":"Closes #1413\r\n","Url":"https://github.com/dotnet/winforms/pull/1420","RelatedDescription":"Closed or merged PR \"Use auto-generated resources\" (#1420)"},{"Id":"469369062","IsPullRequest":false,"CreatedAt":"2019-07-18T18:26:48","Actor":"danmosemsft","Number":"1413","RawContent":null,"Title":"SR.Designer.cs is public API","State":"closed","Body":"src\\System.Windows.Forms.Design\\src\\Resources\\SR.Designer.cs contains the strings for Winforms implementation, but it is currently a public class which means we would be shipping it as public API and need to document it, not break it, etc.\r\n\r\nIt should be internal like similar classes in CoreFX (although in CoreFX it's generated in the build)\r\n\r\n```c#\r\nnamespace System.Windows.Forms.Design.Resources {\r\n    using System;\r\n...\r\n    public class SR {\r\n```","Url":"https://github.com/dotnet/winforms/issues/1413","RelatedDescription":"Closed issue \"SR.Designer.cs is public API\" (#1413)"},{"Id":"469863690","IsPullRequest":true,"CreatedAt":"2019-07-18T16:17:39","Actor":"M-Lipin","Number":"1424","RawContent":null,"Title":"Fix 1423 Accessibility: The ToolStrip control UIA hierarchy of PrintPreviewDialog is not correct","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1423 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Refactoring the ToolStripControlHost accessibility provider to make it reusable by derivates.\r\n- Implement UIA Accessibility provider for ToolStrip-hosted NumericUpDown control and its host Too;Strip item.\r\n- Rework other ToolStrip-hosted controls' accessibility where this is possible and safe.\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nPlease see #1423 \r\n- Incorrect position of spinner control in accessible hierarchy (should be the last element)\r\n- Infinite loop of UIA elements (children of ToolStrip)\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/61470488-de7f2900-a989-11e9-8752-800f7d74d370.png)\r\n\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/61470891-77ae3f80-a98a-11e9-9c90-3618ea47a840.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- Accessibility tools (Inspect, Narrator)\r\n- UIA hierarchy shoul\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Without the change the accessible hierarchy of ToolStrip control in the PrintPreviewDialog is incorrect: Spinner control has incorrect position (first instead of last) and the collection of UIA elements is endless due to the loop between the first and the last element.\r\n\r\n- With the change available accessible hierarchy is correct: spinner is the last child of ToolStrip, there is no infinite loop of ToolStrip children.\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\nVersion: 3.0.100-preview8-012929\r\nCommit: 795f8aeaa8\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18362\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\3.0.100-preview8-012929\\\r\n\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1424)","Url":"https://github.com/dotnet/winforms/pull/1424","RelatedDescription":"Open PR \"Fix 1423 Accessibility: The ToolStrip control UIA hierarchy of PrintPreviewDialog is not correct\" (#1424)"},{"Id":"469835198","IsPullRequest":false,"CreatedAt":"2019-07-18T15:24:13","Actor":"M-Lipin","Number":"1423","RawContent":null,"Title":"Accessibility: The ToolStrip control UIA hierarchy of PrintPreviewDialog is not correct","State":"open","Body":"Accessibility hierarchy of the PrintPreviewDialog's ToolStrip is not correct and may freeze the Inspect/other accessibility client app (due to infinite loop of UIA child elements):\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/61470137-31a4ac00-a989-11e9-92a4-a1ce93f6c984.png)","Url":"https://github.com/dotnet/winforms/issues/1423","RelatedDescription":"Open issue \"Accessibility: The ToolStrip control UIA hierarchy of PrintPreviewDialog is not correct\" (#1423)"},{"Id":"469732061","IsPullRequest":true,"CreatedAt":"2019-07-18T12:05:27","Actor":"dotnet-maestro[bot]","Number":"1422","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190719.2\r\n- **Date Produced**: 7/19/2019 5:55 PM\r\n- **Commit**: a190d4865fe3c86a168ec49c4fc61c90c96ae051\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19369.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19369.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19369.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19369.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1422","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1422)"},{"Id":"469653386","IsPullRequest":false,"CreatedAt":"2019-07-18T09:05:10","Actor":"Jessie-Zhang01","Number":"1421","RawContent":null,"Title":"Accessibility: [High Contrast]: The text cannot be shown when focus \"Close\" button of ToolStrip item in Print Preview dialog","State":"open","Body":"* .NET Core Version: 3.0.100 Preview8 13316 from master branch\r\n* Have you experienced this same bug with .NET Framework?: Yes.\r\n\r\n**Repro Steps:**\r\n\r\n1. Open control panel and select the respective high contrast theme.\r\n2. Open the attached application [PrintDemo .zip](https://github.com/dotnet/winforms/files/3405539/PrintDemo.zip), build and run. \r\n3. Click the 'Preview' button to show the Print preview dialog then focus on â€˜Closeâ€™ button.\r\n\r\n**Actual:**\r\nThe text cannot be shown when focus \"Close\" button of 'Print Preview' dialog on the Black and White theme. See following screenshot for Black and White theme.\r\n![image](https://user-images.githubusercontent.com/45864649/61443867-e71d3280-a97c-11e9-9dca-ba72ff67e889.png)\r\n\r\n**Expected:**\r\nThe text should be shown when focus \"Close\" button of 'Print Preview' dialog on the Black and White theme. See following screenshot for # 1 and # 2 theme.\r\n![image](https://user-images.githubusercontent.com/45864649/61444150-6a3e8880-a97d-11e9-88b0-23d83b6f178f.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/1421","RelatedDescription":"Open issue \"Accessibility: [High Contrast]: The text cannot be shown when focus \"Close\" button of ToolStrip item in Print Preview dialog\" (#1421)"},{"Id":"469489748","IsPullRequest":true,"CreatedAt":"2019-07-18T04:01:00","Actor":"ericstj","Number":"1417","RawContent":null,"Title":"Update to build '20190717.6' of 'https://github.com/dotnet/arcade'","State":"closed","Body":"Manual update since maestro didn't seem to triggering https://github.com/dotnet/winforms/pull/1309\r\n\r\n@AdamYoblick @RussKie @zsd4yr ","Url":"https://github.com/dotnet/winforms/pull/1417","RelatedDescription":"Closed or merged PR \"Update to build '20190717.6' of 'https://github.com/dotnet/arcade'\" (#1417)"},{"Id":"469504613","IsPullRequest":true,"CreatedAt":"2019-07-17T23:58:30","Actor":"dotnet-maestro[bot]","Number":"1418","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190719.09\r\n- **Date Produced**: 7/19/2019 9:12 PM\r\n- **Commit**: 3fcf1dac5531a0a92ce53af4eae4fc42316a0ccf\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27919-09\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19369.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview8.19369.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview8.19369.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview8.19369.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview8.19369.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview8.19369.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview8.19369.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview8.19369.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview8.19369.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19369.1 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19369.1 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1418","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#1418)"},{"Id":"469455885","IsPullRequest":true,"CreatedAt":"2019-07-17T21:39:44","Actor":"dotnet-maestro[bot]","Number":"1416","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190717.07\r\n- **Date Produced**: 7/17/2019 9:28 PM\r\n- **Commit**: fbe24089c59a9f330dfb7c4db4ae97a293685510\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27917-07\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1416","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1416)"},{"Id":"469065126","IsPullRequest":true,"CreatedAt":"2019-07-17T19:40:25","Actor":"dotnet-maestro[bot]","Number":"1409","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190717.05\r\n- **Date Produced**: 7/17/2019 7:29 PM\r\n- **Commit**: 6616692a7281748c11e3d6873988d85a1e79fc50\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27917-05\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19367.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview8.19367.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview8.19367.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview8.19367.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview8.19367.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview8.19367.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview8.19367.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview8.19367.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview8.19367.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1409","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1409)"},{"Id":"469361387","IsPullRequest":false,"CreatedAt":"2019-07-17T17:55:11","Actor":"DustinCampbell","Number":"1412","RawContent":null,"Title":"SnapLine is not implemented","State":"open","Body":"None of the APIs on `SnapLine` are implemented, which affects the WinForms designer.","Url":"https://github.com/dotnet/winforms/issues/1412","RelatedDescription":"Open issue \"SnapLine is not implemented\" (#1412)"},{"Id":"469141757","IsPullRequest":true,"CreatedAt":"2019-07-17T14:54:47","Actor":"v-zbsail","Number":"1411","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20190717","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\nLocalization update\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n","Url":"https://github.com/dotnet/winforms/pull/1411","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20190717\" (#1411)"},{"Id":"469063198","IsPullRequest":false,"CreatedAt":"2019-07-17T08:42:49","Actor":"Olina-Zhang","Number":"1408","RawContent":null,"Title":"The chosen menu items in MenuStrip/ContextMenuStrip/ToolStrip have no background color","State":"open","Body":"* .NET Core Version: 3.0 Preview7 012821 from Release branch\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Minimal repro:**\r\n1. Open attached Winforms .Net Core app and run it\r\n[WindowsFormsApp5.zip](https://github.com/dotnet/winforms/files/3400833/WindowsFormsApp5.zip)\r\n2. Use mouse or keyboard accelerators(after GitHub issue ![image](https://user-images.githubusercontent.com/26474449/61359933-4589ca00-a832-11e9-9f5b-2a3f18966ccd.png) fixed) to choose the drop-down menu Items in MenuStrip/ToolStrip/ContextMenuStrip controls\r\n\r\n**More Info:**  This issue cannot repro in StatusStrip in Core app.\r\n\r\n**Actual behavior:** \r\nThese chosen menu items have no background color, see following screenshots for MenuStrip/ToolStrip/ContextMenuStrip:\r\nMenuStrip:\r\n![image](https://user-images.githubusercontent.com/26474449/61360346-22134f00-a833-11e9-9603-9cd7147e6d75.png)\r\nContextMenuStrip:\r\n![image](https://user-images.githubusercontent.com/26474449/61360416-3eaf8700-a833-11e9-8724-fdf256df2074.png)\r\nToolStrip:\r\n![image](https://user-images.githubusercontent.com/26474449/61360481-5e46af80-a833-11e9-9834-fd2526c3538f.png)\r\n\r\n**Expected behavior:**\r\nThese chosen menu items have background color, like .Net framework's behavior:\r\nMenuStrip:\r\n![image](https://user-images.githubusercontent.com/26474449/61360583-93eb9880-a833-11e9-9cf6-b07198d33e11.png)\r\nContextMenuStrip:\r\n![image](https://user-images.githubusercontent.com/26474449/61360623-abc31c80-a833-11e9-93b7-19b368d1b642.png)\r\nToolStrip:\r\n![image](https://user-images.githubusercontent.com/26474449/61360672-c2697380-a833-11e9-9980-d104f85e15d6.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/1408","RelatedDescription":"Open issue \"The chosen menu items in MenuStrip/ContextMenuStrip/ToolStrip have no background color\" (#1408)"},{"Id":"469008589","IsPullRequest":true,"CreatedAt":"2019-07-17T06:33:00","Actor":"dotnet-maestro[bot]","Number":"1407","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190716.14\r\n- **Date Produced**: 7/17/2019 6:22 AM\r\n- **Commit**: f7a00f0aa4a0dcf878a9345d260c8f4cf495b65e\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27916-14\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19366.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview8.19366.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview8.19366.10 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview8.19366.10 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview8.19366.10 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview8.19366.10 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview8.19366.10 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview8.19366.10 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview8.19366.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19366.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19366.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1407","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1407)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-22T05:30:55.0385458Z","RunDurationInMilliseconds":748}