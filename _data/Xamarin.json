{"Data":{"Blog":{"FeedItems":[{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null},{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null},{"Title":"Visual Challenge Conquered!","PublishedOn":"2019-04-03T19:03:49+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The post Visual Challenge Conquered! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/visual-challenge-conquered/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019","PublishedOn":"2019-04-02T19:56:18+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The post What&#8217;s New for Xamarin Developers in Visual Studio 2019 appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-visual-studio-2019/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9523143858","Type":"IssuesEvent","CreatedAt":"2019-04-27T14:55:31","Actor":"RyanBuzzInteractive","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3035","RelatedDescription":"Opened issue \"Probable bug with tarjan GC_BRIDGE - Handle must be valid.\" (#3035) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build the solution (you will need to do it twice as the first time it builds the F# / C# mapping layer).\r\n2. Click through to the map screen\r\n3. Click RECORD in the title bar\r\n4. Background the app, which makes the location recorder switch to a foreground service with accompanying permanent notification.\r\n5. Do stuff. Notice location is still being collected in the debug output.\r\n6. Foreground the app\r\n7. Crash - System.ArgumentException: Handle must be valid. Parameter name: instance\r\n8. Set environment.txt in the Android project to build action 'AndroidEnvironment', which will revert the GC bridge to 'new' rather than the default 'tarjan'.\r\n9. Repeat 1 -> 6\r\n10. Observe no crash\r\n\r\n\r\nIt seems that the GoogleMap java object is being collected whilst the C# object is remaining available. I have tested extensively and only ever see the crash when using tarjan. \r\n\r\nThe fragment hosting it is located at SurveyIt.Droid\\Surveys\\Zones\\Fragments\\ZoneMapFragment .cs and a partial nested inside it named .ui.cs\r\n\r\nThe crash happens as soon as the data updates and tries to re-render the map poly lines.\r\n\r\nThe app is really early stages and probably has other bugs if you push it around too much, but it has all the location permissions loop in place etc and it would be a right mission to try to strip it down to a simpler repro (but if it ends up being necessary I can try).\r\n\r\n\r\n[Example of GC Bridge bug.zip](https://github.com/xamarin/xamarin-android/files/3123972/Example.of.GC.Bridge.bug.zip)\r\n\r\n\r\nThis seems like it is probably a duplicate of #2518 as it was his issue back on bugzilla that led me to the solution. It doesn't seem like he is getting any real response though.\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe GoogleMap java object should still be available to the C# proxy.\r\n\r\n### Actual Behavior\r\n\r\nSystem.ArgumentException: Handle must be valid. Parameter name: instance\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.0.2\r\nVisualStudio.16.Release/16.0.2+28803.202\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2019   00435-60000-00000-AA103\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nApplication Insights Tools for Visual Studio Package   9.0.20307.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2019   16.0.12311.10635\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.0.12311.10635\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.0.12311.10635\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.8000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.0.12311.10635\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.8000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   16.0.19074.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nExtensibility Message Bus   1.1.77 (master@24013d5)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nFile Nesting   2.6.85\r\nAutomatically nest files based on file name and enables developers to nest and unnest any file manually\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.8000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.8000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.5\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.8000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 0x10 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.0.300 (573eda3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   16.0.19074.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Conda support   16.0.19074.1\r\nConda support for Python projects.\r\n\r\nPython - Django support   16.0.19074.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   16.0.19074.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   16.0.19074.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.61903.25110\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.10306.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.0.0.0.  Commit Hash: 809f41207b74a1356208f11b8fa3a15233734050.\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisual Studio Tools for Unity   4.0.0.5\r\nVisual Studio Tools for Unity\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.0.0.515 (d16-0@a3502d929)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.17.4.418 (remotes/origin/d16-0@3d086e814)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.1.47 (31f664d)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.2.0.5 (HEAD/292d27fa)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-08-rc@5ad371dab1b\r\n    Java.Interop: xamarin/java.interop/d16-0@c987483\r\n    LibZipSharp: grendello/LibZipSharp/master@44de300\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.26.0@325e91a\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.8.0.0 (0aa8452)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n"},{"Id":"9521165066","Type":"IssuesEvent","CreatedAt":"2019-04-26T21:50:20","Actor":"nodoid","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3034","RelatedDescription":"Opened issue \"InputFilter placing buffer into dest\" (#3034) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Compile the demo below. Type ASDFGhjkl\r\n2. ASDFG shows in the edit text\r\n3. Press delete. You will need to press delete 5 times before G is delete.\r\n\r\nhttps://github.com/nodoid/edittext_error\r\n\r\n### Expected Behavior\r\nIf ASDFG is being passed in dest, pressing delete once should remove G\r\n### Actual Behavior\r\nDelete needs to be pressed however many times after the last uppercase character there is an \"illegal\" entry\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Community 2019 for Mac ===\r\n\r\nVersion 8.0.4 (build 0)\r\nInstallation UUID: 933163e9-dca5-472b-b2ed-29d7aab111ab\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.2 (d16-0 / 040682909)\r\n\r\n\tPackage version: 518010003\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.1.3 (2018-08/fdb26b0a445) (64-bit)\r\n\tPackage version: 518010003\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.2.5835\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.2.3\r\n\t2.1.9\r\n\t2.1.8\r\n\t2.1.6\r\n\t2.1.2\r\nSDK: /usr/local/share/dotnet/sdk/2.1.505/Sdks\r\nSDK Versions:\r\n\t2.1.505\r\n\t2.1.504\r\n\t2.1.500\r\n\t2.1.302\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.9\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2.1 (14490.122)\r\nBuild 10E1001\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.10.0.147 (Visual Studio Community)\r\nHash: a5f2633f\r\nBranch: d16-1\r\nBuild date: 2019-04-10 09:42:20-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.10.0.147 (Visual Studio Community)\r\nHash: a5f2633f\r\nBranch: d16-1\r\nBuild date: 2019-04-10 09:42:19-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 4.17.4.418\r\nHash: 3d086e814\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-01 09:20:10 UTC\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.3.0.14 (Visual Studio Community)\r\nAndroid SDK: /Users/pfj/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.2\r\nSDK Build Tools Version: 27.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08@bf4e8d2ae19\r\nJava.Interop: xamarin/java.interop/d16-1@5ddc3e3\r\nLibZipSharp: grendello/LibZipSharp/master@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-1@acabd26\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/pfj/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.14\r\nHash: 86df26f\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-05 16:58:56 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 800040000\r\nGit revision: 09831ae7eef8ea58cdfad2e923c65a5bf70d27fd\r\nBuild date: 2019-04-15 23:04:13+00\r\nBuild branch: master\r\nXamarin extensions: 5efedb990d786142d3b54351c01ce867af7b7680\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.4\r\nDarwin 18.5.0 Darwin Kernel Version 18.5.0\r\n    Mon Mar 11 20:40:32 PDT 2019\r\n    root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nXamarin.Forms HotReload extension 1.1.0\r\nTeam Foundation Version Control for TFS and Azure DevOps 0.4.4.5\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9521133173","Type":"PullRequestEvent","CreatedAt":"2019-04-26T21:42:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3031","RelatedDescription":"Merged pull request \"[tests] fixes for App Bundle tests\" (#3031) at xamarin/xamarin-android","RelatedBody":"If run against an x86 emulator, these tests were failing with:\r\n\r\n    [BT : 0.8.0] error : The app doesn't support ABI architectures of the device. Device ABIs: [x86], app ABIs: [armeabi-v7a, arm64-v8a].\r\n\r\nI missed this originally, because I was using a device.\r\n\r\nIn `Release` mode, we don't get x86 by default, so I added:\r\n\r\n    var abis = new string [] { \"armeabi-v7a\", \"arm64-v8a\", \"x86\" };\r\n    project.SetProperty (KnownProperties.AndroidSupportedAbis, string.Join (\";\", abis));\r\n\r\nMost of our MSBuild tests that deploy are doing this. I also added to\r\nour list of assertions to check for x86 so files.\r\n\r\nAnother problem I found was that this directory was not getting\r\ndeleted after successful test runs:\r\n\r\n    bin\\TestDebug\\temp\\BundleToolTests\r\n\r\nI changed the behavior of this test to default to using\r\n`cleanupOnDispose: true`, and toggle the value to `false` if a test\r\nfails."},{"Id":"9521005619","Type":"IssuesEvent","CreatedAt":"2019-04-26T21:15:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3033","RelatedDescription":"Opened issue \"Need to explicitly specify & control mingw-w64 version.\" (#3033) at xamarin/xamarin-android","RelatedBody":"ROFLCOPTER and OMGWTFBBQ\r\n"},{"Id":"9520396529","Type":"IssuesEvent","CreatedAt":"2019-04-26T19:21:33","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3005","RelatedDescription":"Closed issue \"Runtime calls endSession() without first calling beginSession()\" (#3005) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1.  Run Xamarin.UITest in AppCenter. Not restricted to a specific device, or OS version. Observed on Google Pixel 2, Moto G6, Huawei Nexus 6P, and others.\r\njava.lang.IllegalStateException: Attempted to endSession() without preceding matching call to beginSession().\r\n\r\n[AndroidAppCenterStackTrace.txt](https://github.com/xamarin/xamarin-android/files/3096364/AndroidAppCenterStackTrace.txt)\r\n\r\n### Expected Behavior\r\n   Test run flawlessly\r\n### Actual Behavior\r\n  App is unloaded, screenshot is the android 'desktop'. Logfile contains a stacktrace.\r\n### Version Information\r\nHuewei Nexus 6P Android 8.1.0\r\n### Log File\r\nhttps://github.com/xamarin/xamarin-android/files/3096364/AndroidAppCenterStackTrace.txt"},{"Id":"9520344329","Type":"PullRequestEvent","CreatedAt":"2019-04-26T19:11:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2899","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Support Filtering Assemblies\" (#2899) at xamarin/xamarin-android","RelatedBody":"Context #2895 \r\n\r\nAs part of the AndroidX migration system we need to\r\nbe able to skip over the older support library\r\nassemblies for certain build steps.\r\n\r\nThe following metadata is supported on the `ReferencePath`\r\nand `ReferenceDependencyPaths` ItemGroups.\r\n\r\n\tAndroidSkipAddToPackage\r\n\tAndroidSkipResourceProcessing\r\n\tAndroidSkipJavaStubGeneration\r\n\tAndroidSkipResourceExtraction\r\n\r\n`AndroidSkipResourceProcessing` is the renamed\r\n`SkipAndroidResourceProcessing` metadata item.\r\nThis is used to skip case conversion on those\r\nresources.\r\n\r\n`AndroidSkipResourceExtraction` will stop the\r\nresources in that library being extracted into\r\nthe `IntermediateOutputPath`.\r\n\r\n`AndroidSkipJavaStubGeneration` when `true` this\r\nitem will stop java code being generated for the\r\nlibrary in quetion.\r\n\r\n`AndroidSkipAddToPackage` is used by `BuildApk`\r\ntask to skip over the library and NOT add it to\r\nthe final APK.\r\n\r\nTo use these new metadata items you can define your\r\nown `ItemGroup` as follows\r\n\r\n\t<ItemGroup>\r\n\t\t<_MyStuff Include=\"Xamarin.Android.Support.v4\">\r\n\t\t\t<AndroidSkipAddToPackage>True</AndroidSkipAddToPackage>\r\n\t\t</_MyStuff>\r\n\t</ItemGroup>\r\n\r\nThen add this new `ItemGroup` to the `AndroidCustomMetaDataForReferences`\r\nlike so.\r\n\r\n\t<ItemGroup>\r\n\t\t<AndroidCustomMetaDataForReferences Include=\"@(_MyStuff)\" />\r\n\t</ItemGroup>\r\n\r\nThe `AndroidCustomMetaDataForReferences` ItemGroup will then\r\nbe processed by the `_AddAndroidCustomMetaData` target. This\r\nwill add the new metadata to the `ReferencePath`\r\nand `ReferenceDependencyPaths` ItemGroups."},{"Id":"9520338853","Type":"PullRequestEvent","CreatedAt":"2019-04-26T19:10:55","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3029","RelatedDescription":"Closed pull request \"Update Xamarin.Android.Common.targets\" (#3029) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/decfbccf3e99449c9a8d6afef113c9339f1bc85b\r\nContext: https://github.com/xamarin/xamarin-android/pull/2990\r\n\r\nWe are seeing some weird failures with incremental builds in #2990.\r\n\r\nThere were a few files added in decfbcc that weren't added to\r\n`@(FileWrites)`:\r\n\r\n* `environment.*.s`\r\n* `typemap.*.s`\r\n* `*.o`\r\n\r\nAlso one behavior difference is that\r\n`_CreateApplicationSharedLibraries` was running *only* during\r\n`SignAndroidPackage` and not during `Build`. I'm not sure we can get\r\nfiles added to `@(FileWrites)` currently in that setup...\r\n`IncrementalClean` only runs during `Build`.\r\n\r\nI don't know if this will fix the problem yet, mainly opening this to\r\nsee if this breaks anything."},{"Id":"9519290854","Type":"PullRequestEvent","CreatedAt":"2019-04-26T16:12:19","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3032","RelatedDescription":"Opened pull request \"[mono-runtimes] exclude a missing pdb file\" (#3032) at xamarin/xamarin-android","RelatedBody":"After 89be639 was merged, I was still hitting the original problem of\r\nnot being able to build on Windows. This time a different file was the\r\ncuplrit:\r\n\r\n    Building target \"_BuildUnlessCached\" completely.\r\n    Output file \"C:\\src\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\\\..\\..\\bcl-tests\\System.Reflection.TestModule.pdb\" does not exist.\r\n\r\nThis file did not exist in Xamarin.Android's bundle or the mono\r\narchive, so we need to exclude it from `Outputs` of\r\n`_BuildUnlessCached`.\r\n\r\nTo fix this, I added the file to `@(_BclExcludeDebugSymbols)` and\r\nreworked line 77 to use this item group.\r\n\r\nI then used a \"weird trick\" to hardcode the latest `(_VersionHash)`,\r\nso the Xamarin.Android bundle wasn't invalidated for me locally:\r\n\r\n    diff --git a/build-tools/create-bundle/bundle-path.targets b/build-tools/create-bundle/bundle-path.targets\r\n    index c99eeab8..9269a6b3 100644\r\n    --- a/build-tools/create-bundle/bundle-path.targets\r\n    +++ b/build-tools/create-bundle/bundle-path.targets\r\n    @@ -38,7 +38,7 @@\r\n    -      <XABundleFileName Condition=\" '$(HostOS)' == 'Windows' AND '$(XABundleFileName)' == '' \">bundle-$(XABundleVersion)-h$(_VersionHash)-$(Configuration)-Darwin-libzip=$(_LibZipHash),llvm=$(_LlvmHash),mono=$(_MonoHash).zip</XABundleFileName>\r\n    +      <XABundleFileName Condition=\" '$(HostOS)' == 'Windows' AND '$(XABundleFileName)' == '' \">bundle-$(XABundleVersion)-h62993a79-$(Configuration)-Darwin-libzip=$(_LibZipHash),llvm=$(_LlvmHash),mono=$(_MonoHash).zip</XABundleFileName>\r\n\r\nI was able to build on Windows again after this change:\r\n\r\n    Skipping target \"_BuildUnlessCached\" because all output files are up-to-date with respect to the input files."},{"Id":"9518975600","Type":"PullRequestEvent","CreatedAt":"2019-04-26T15:25:20","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3031","RelatedDescription":"Opened pull request \"[tests] fixes for App Bundle tests\" (#3031) at xamarin/xamarin-android","RelatedBody":"If run against an x86 emulator, these tests were failing with:\r\n\r\n    [BT : 0.8.0] error : The app doesn't support ABI architectures of the device. Device ABIs: [x86], app ABIs: [armeabi-v7a, arm64-v8a].\r\n\r\nI missed this originally, because I was using a device.\r\n\r\nIn `Release` mode, we don't get x86 by default, so I added:\r\n\r\n    var abis = new string [] { \"armeabi-v7a\", \"arm64-v8a\", \"x86\" };\r\n    project.SetProperty (KnownProperties.AndroidSupportedAbis, string.Join (\";\", abis));\r\n\r\nMost of our MSBuild tests that deploy are doing this. I also added to\r\nour list of assertions to check for x86 so files.\r\n\r\nAnother problem I found was that this directory was not getting\r\ndeleted after successful test runs:\r\n\r\n    bin\\TestDebug\\temp\\BundleToolTests\r\n\r\nI changed the behavior of this test to default to using\r\n`cleanupOnDispose: true`, and toggle the value to `false` if a test\r\nfails."},{"Id":"9518863914","Type":"PullRequestEvent","CreatedAt":"2019-04-26T15:09:59","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3030","RelatedDescription":"Opened pull request \"[monodroid] Try to fix designer on Mac\" (#3030) at xamarin/xamarin-android","RelatedBody":"One of the designer unit tests is failing on Mac with:\r\n\r\n    [2019-04-25 21:52:55.8] INFO: : Unhandled Exception:\r\n    [2019-04-25 21:52:55.8] INFO: : System.TypeInitializationException: The type initializer for 'System.Console' threw an exception. ---> System.DllNotFoundException: libmono-native.so\r\n    [2019-04-25 21:52:55.8] INFO: :   at (wrapper managed-to-native) Interop+Sys.Stat(byte&,Interop/Sys/FileStatus&)\r\n    [2019-04-25 21:52:55.8] INFO: :   at Interop+Sys.Stat (System.ReadOnlySpan`1[T] path, Interop+Sys+FileStatus& output) [0x00028] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.IO.FileSystem.FileExists (System.ReadOnlySpan`1[T] fullPath, System.Int32 fileType, Interop+ErrorInfo& errorInfo) [0x00007] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.IO.FileSystem.FileExists (System.ReadOnlySpan`1[T] fullPath) [0x00006] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.IO.File.Exists (System.String path) [0x00043] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.IO.LogcatTextWriter.IsRunningOnAndroid () [0x00000] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.Console.SetupStreams (System.Text.Encoding inputEncoding, System.Text.Encoding outputEncoding) [0x00050] in <ca2a591e441f458bb6bef167b4521022>:0\r\n    [2019-04-25 21:52:55.8] INFO: :   at System.Console..cctor () [0x0004f] in <ca2a591e441f458bb6bef167b4521022>:0\r\n\r\nThe `.so` extension is wrong. Make it look for `.dylib` shared library\r\ninstead."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9524076865","Type":"IssuesEvent","CreatedAt":"2019-04-27T23:12:00","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6034","RelatedDescription":"Opened issue \"[Bug] Stepper incorrectly positions inside a Grid\" (#6034) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThe top and bottom `Steppers` should be centered horizontally, but they start at the center position instead. I swapped a `Button` in to check, and that works fine.\r\n\r\n### Steps to Reproduce\r\n\r\n```<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             BackgroundColor=\"White\"\r\n             x:Class=\"Xappy.Content.ControlGallery.ProppyControls.PaddingProperty\">\r\n    <Grid Margin=\"15\">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height=\"40\"/>\r\n            <RowDefinition Height=\"*\"/>\r\n            <RowDefinition Height=\"40\"/>\r\n        </Grid.RowDefinitions>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition Width=\"100\"/>\r\n            <ColumnDefinition Width=\"*\"/>\r\n            <ColumnDefinition Width=\"100\"/>\r\n        </Grid.ColumnDefinitions>\r\n        \r\n        <Stepper Grid.Row=\"1\"\r\n                 Grid.Column=\"0\"\r\n                 VerticalOptions=\"Center\"\r\n                 />\r\n        <Stepper Grid.Row=\"0\" \r\n                 Grid.Column=\"1\"\r\n                 HorizontalOptions=\"Center\"\r\n        />\r\n        <Stepper Grid.Row=\"1\"\r\n                 Grid.Column=\"2\"\r\n                 VerticalOptions=\"Center\"\r\n        />\r\n        <Stepper Grid.Row=\"2\"\r\n                 Grid.Column=\"1\"\r\n                 HorizontalOptions=\"Center\"\r\n        />\r\n        \r\n        <Grid\r\n            Grid.Row=\"1\"\r\n            Grid.Column=\"1\"\r\n            Margin=\"8\"\r\n            >\r\n            <Grid.RowDefinitions>\r\n                <RowDefinition Height=\"*\"/>\r\n                <RowDefinition Height=\"*\"/>\r\n                <RowDefinition Height=\"*\"/>\r\n            </Grid.RowDefinitions>\r\n            <Grid.ColumnDefinitions>\r\n                <ColumnDefinition Width=\"*\"/>\r\n                <ColumnDefinition Width=\"*\"/>\r\n                <ColumnDefinition Width=\"*\"/>\r\n            </Grid.ColumnDefinitions>\r\n\r\n            \r\n            <Frame HasShadow=\"False\"\r\n                   Grid.ColumnSpan=\"3\"\r\n                   Grid.RowSpan=\"3\"\r\n                   BorderColor=\"Red\"\r\n                   BackgroundColor=\"LightBlue\">\r\n            </Frame>\r\n            \r\n            <Label Grid.Row=\"1\" Grid.Column=\"0\" x:Name=\"LeftPadding\" Text=\"0\"  VerticalOptions=\"Center\"/>\r\n            <Label Grid.Row=\"0\" Grid.Column=\"1\" x:Name=\"TopPadding\" Text=\"0\" HorizontalTextAlignment=\"Center\" />\r\n            <Label Grid.Row=\"1\" Grid.Column=\"2\" x:Name=\"RightPadding\" Text=\"0\" VerticalOptions=\"Center\" HorizontalOptions=\"End\" />\r\n            <Label Grid.Row=\"2\" Grid.Column=\"1\" x:Name=\"BottomPadding\" Text=\"0\" HorizontalOptions=\"Center\" />\r\n            \r\n        </Grid>\r\n    </Grid>\r\n</ScrollView>```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre9\r\n  - iOS:  12.2\r\n### Screenshots\r\n\r\n<img width=\"584\" alt=\"Screenshot 2019-04-27 18 08 32\" src=\"https://user-images.githubusercontent.com/41873/56856015-af6f9300-6917-11e9-9b0a-104fe0baf403.png\">\r\n\r\n\r\n"},{"Id":"9523681876","Type":"PullRequestEvent","CreatedAt":"2019-04-27T19:21:32","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6032","RelatedDescription":"Merged pull request \"additional proguard rules for shell\" (#6032) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nShell needs some additional help to work with proguard.\r\n\r\nI also added a keep for multidex which will be fixed in an upcoming VS release but I figured we might as well just include it for now to remove friction\r\n\r\nAlso added a property to disable default proguard rules if users want more fine grained control\r\n\r\n```xml\r\n<Target Name=\"IncludeProguardForAndroid\" Condition=\"'$(XFDisableDefaultProguardConfiguration)' != 'True'\">\r\n    <ItemGroup>\r\n      <ProguardConfiguration Include=\"$(MSBuildThisFileDirectory)MonoAndroid10\\proguard.cfg\" />\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #5799 \r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Testing Procedure ###\r\ninstall the nuget for this PR into a XF project using shell.  On that project enable multidex, proguard, and set the linker to full. At this point the project should run without any errors\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9523676581","Type":"PullRequestEvent","CreatedAt":"2019-04-27T19:18:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6029","RelatedDescription":"Merged pull request \"add check for null track drawable\" (#6029) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nCopy over nullable check when disposing of track to non appcompat\r\n\r\n### Issues Resolved ### \r\n- fixes #5970\r\n\r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n"},{"Id":"9523675797","Type":"PullRequestEvent","CreatedAt":"2019-04-27T19:18:09","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6031","RelatedDescription":"Merged pull request \"[Android] set dialog to null when dismissed\" (#6031) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nDialog needs to be set to null when it's dismissed so that it can live again\r\n\r\n### Issues Resolved ### \r\n- fixes #5945\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Testing Procedure ###\r\nComment out the registering of the appcompat renderer for the picker and then test some pickers\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9523671159","Type":"PullRequestEvent","CreatedAt":"2019-04-27T19:15:40","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5926","RelatedDescription":"Merged pull request \"[Android] Use Fast Renderers by Default\" (#5926) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUse Fast Renderers by default. Introduce `UseLegacyRenderers` flag to go back. Unseal fast renderers & add the most common extension points.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #5724\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9523569260","Type":"IssuesEvent","CreatedAt":"2019-04-27T18:22:36","Actor":"jsuarezruiz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6033","RelatedDescription":"Opened issue \"[Spec]  Transitions Api\" (#6033) at xamarin/Xamarin.Forms","RelatedBody":"# Transitions API\r\n\r\nXamarin.Forms already has a complete animations API allowing you to create a live and fluid content on a page. However, what happens when navigating between pages?.\r\n\r\nThis spec defines a **transitions api**. We have two types of well-differentiated transitions:\r\n- **Traditional transitions**: Traditionally transitions between different pages involved enter and exit transitions that animated entire view hierarchies independent to each other.\r\n- **Shared element transitions**: Many times, there are elements common to both activities and providing the ability to transition these shared elements separately emphasizes continuity between transitions and breaks activity boundaries as the user navigates the app.\r\n\r\n# API\r\n\r\nFor the traditional transitions, we need a new enumeration with the supported transitions:\r\n```\r\npublic enum PageTransitionType\r\n{\r\n    None,\r\n    Fade,\r\n    Flip,\r\n    Scale,\r\n    SlideFromLeft,\r\n    SlideFromRight,\r\n    SlideFromTop,\r\n    SlideFromBottom,\r\n    Turnstile\r\n}\r\n```\r\n\r\nAnd, include a new property in the **NavigationPage** and **Shell**:\r\n\r\n```\r\npublic static readonly BindableProperty TransitionTypeProperty =\r\nBindableProperty.Create(nameof(TransitionType), typeof(PageTransitionType), typeof(NavigationPage), PageTransitionType.None,\r\nBindingMode.TwoWay, null);\r\n\r\npublic PageTransitionType TransitionType\r\n{\r\n    get { return (PageTransitionType)GetValue(TransitionTypeProperty); }\r\n    set { SetValue(TransitionTypeProperty, value); }\r\n}\r\n```\r\n\r\nOther related properties can be added like:\r\n* TransitionDuration\r\n\r\nOn the other hand, we need a way to allow the shared element transitions. The key is a way to _\"link\"_ the same item available in two different pages.\r\n\r\nWe will have an attached property to the supported elements inherited from View:\r\n\r\n```\r\npublic static readonly BindableProperty TransitionTagProperty =    \r\nBindableProperty.CreateAttached(\"TransitionName\", typeof(int), typeof(Transition), 0,\r\npropertyChanged: OnPropertyChanged);\r\n```\r\n\r\nThe use would be:\r\n\r\n```\r\n<Image Source=\"xamarin.jpg\" TransitionName=\"logo\" WidthRequest=\"100\" />\r\n```\r\n\r\nTag the control to transition in the source page. \r\n\r\n```\r\n<Image Source=\"xamarin.jpg\" TransitionName=\"logo\"  WidthRequest=\"300\" />\r\n```\r\n\r\nAnd tag the control to transition in the destination page.\r\n\r\n# Difficulty : [medium]\r\n"},{"Id":"9523510840","Type":"PullRequestEvent","CreatedAt":"2019-04-27T17:52:17","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6032","RelatedDescription":"Opened pull request \"additional proguard rules for shell\" (#6032) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nShell needs some additional help to work with proguard.\r\n\r\nI also added a keep for multidex which will be fixed in an upcoming VS release but I figured we might as well just include it for now to remove friction\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #5799 \r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Testing Procedure ###\r\ninstall the nuget for this PR into a XF project using shell.  On that project enable multidex, proguard, and set the linker to full. At this point the project should run without any errors\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9523503305","Type":"PullRequestEvent","CreatedAt":"2019-04-27T17:48:27","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6030","RelatedDescription":"Merged pull request \"fix tizen obsolete errors\" (#6030) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nTizen didn't have treat warnings as errors set for debug builds (only for release builds) so these errors weren't caught"},{"Id":"9523373775","Type":"IssuesEvent","CreatedAt":"2019-04-27T16:43:47","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5799","RelatedDescription":"Closed issue \"[Visual] Entry control page does not load in release\" (#5799) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nIf there is an entry control on the page with Visual=\"Material\" the page will not load in Release mode on android\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Open TheLittleThingsPlayground\r\n2. Change MainActivity.cs code\r\nFrom\r\n``` C#\r\n  global::Xamarin.Forms.Forms.SetFlags( \"FastRenderers_Experimental\", \"Shell_Experimental\");\r\n  global::Xamarin.Forms.Forms.Init(this, bundle);\r\n  LoadApplication(new App());\r\n```\r\nTo \r\n``` C#\r\n  global::Xamarin.Forms.Forms.SetFlags( \"FastRenderers_Experimental\" );//, \"Shell_Experimental\");\r\n  global::Xamarin.Forms.Forms.Init(this, bundle);\r\n  Xamarin.Forms.FormsMaterial.Init( this, bundle );\r\n  LoadApplication(new App());\r\n```\r\n\r\n2.  start the app in release mode\r\n3.  Go to entries page\r\n\r\n### Expected Behavior\r\nEntries page loads normally\r\n\r\n### Actual Behavior\r\nEntries page shows only a black screen\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.6.0.220655\r\n- Last known good version: N/A\r\n- IDE: Visual Studio 2017 15.9.10\r\n- Platform Target Frameworks:\r\n  - Android: 9.0\r\n- Affected Devices:\r\nAll Android\r\n\r\n\r\nThis is not exclusive to TheLittleThingsPlayground, but is a good example project to illustrate the issue"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9523053699","Type":"PullRequestEvent","CreatedAt":"2019-04-27T14:12:13","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5958","RelatedDescription":"Merged pull request \"Bump maccore and Xamarin.MacDec to head of their master branch\" (#5958) at xamarin/xamarin-macios","RelatedBody":"New commits in xamarin/Xamarin.MacDev:\n\n* xamarin/Xamarin.MacDev@85e6023 Added MonoTouchSdk.SupportsArm64_32 API\n* xamarin/Xamarin.MacDev@69c48b5 Fixed PObject.Save() to properly handle parent dir being an empty string\n* xamarin/Xamarin.MacDev@ebaeb8f Make CheckSupportsFeature public (and renamed to SupportsFeature)\n* xamarin/Xamarin.MacDev@f151b13 Added XamMacSdk.SupportsSiriIntents property\n* xamarin/Xamarin.MacDev@3a5e6d8 Added SupportsSiriIntents property for MonoTouchSdk\n\nDiff: https://github.com/xamarin/Xamarin.MacDev/compare/2e94b6d2745d149056d2533dfd19e9e9ada0f149..85e6023e3f1f92a5d9597640df3719f13847d3ee\n\nNew commits in xamarin/maccore:\n\nDiff: https://github.com/xamarin/maccore/compare/f89d74b16528b736b9d449def06335b2c4cddbf3..758f471fbc69e7f979a513f76a4b00a7c8308bf6"},{"Id":"9523052849","Type":"PullRequestEvent","CreatedAt":"2019-04-27T14:11:48","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5955","RelatedDescription":"Merged pull request \"[mmp] Fix error for `mmp --version`\" (#5955) at xamarin/xamarin-macios","RelatedBody":"Some code now need to be initialized a few lines earlier... otherwise we\nend up with an error like:\n\n```\n/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/bin/mmp --version\nerror MM0000: Unexpected error - Please file a bug report at https://github.com/xamarin/xamarin-macios/issues/new\nSystem.InvalidOperationException: Nullable object must have a value.\n  at System.Nullable`1[T].get_Value () [0x0000d] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/Common/src/CoreLib/System/Nullable.cs:48\n  at Xamarin.Bundler.Driver.get_TargetFramework () [0x00001] in /Users/poupou/git/xamarin/xamarin-macios/tools/common/Driver.cs:198\n  at Xamarin.Bundler.Application.get_Platform () [0x00001] in /Users/poupou/git/xamarin/xamarin-macios/tools/common/Application.cs:62\n  at Xamarin.Bundler.RuntimeOptions.ParseHttpMessageHandler (Xamarin.Bundler.Application app, System.String value) [0x0002f] in /Users/poupou/git/xamarin/xamarin-macios/src/ObjCRuntime/RuntimeOptions.cs:43\n  at Xamarin.Bundler.RuntimeOptions.Create (Xamarin.Bundler.Application app, System.String http_message_handler, System.String tls_provider) [0x00007] in /Users/poupou/git/xamarin/xamarin-macios/src/ObjCRuntime/RuntimeOptions.cs:34\n  at Xamarin.Bundler.Driver.Main2 (System.String[] args) [0x00a78] in /Users/poupou/git/xamarin/xamarin-macios/tools/mmp/driver.cs:377\n  at Xamarin.Bundler.Driver.Main (System.String[] args) [0x00015] in /Users/poupou/git/xamarin/xamarin-macios/tools/mmp/driver.cs:211\n```"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":52,"FavoriteCount":14,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":22,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":93,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null},{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":44,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":29,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2019-04-28T05:30:51.3524989Z","RunDurationInMilliseconds":1979}