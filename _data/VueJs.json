{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7386961081","Type":"IssuesEvent","CreatedAt":"2018-03-15T19:45:47","Actor":"wrrrn","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2110","RelatedDescription":"Opened issue \"Child route removing optional param in parent\" (#2110) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/wrrrn/pen/GxqmOb](https://codepen.io/wrrrn/pen/GxqmOb)\r\n\r\n### Steps to reproduce\r\nI've linked to what the current router code is. The issue is simple, so I hope I'm missing something obvious.\r\n\r\n### What is expected?\r\nWhen the :paramOptional is set, and child route is pushed to, the path will look as such - \r\n'/search/paramOne/paramOptional/paramTwo/show-modal'\r\n\r\n### What is actually happening?\r\nWhen navigated to, the child removes the paramOptional. The resulting url is - \r\n'/search/paramOne/paramTwo/show-modal'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7384937797","Type":"IssuesEvent","CreatedAt":"2018-03-15T14:17:04","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2109","RelatedDescription":"Closed issue \"Can customize scroll element not just window by using scrollBehavior api.\" (#2109) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nWhen using scrollBehavior api, it seems that only supports window scroll i.e.\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            x: 10,\r\n            y: 10\r\n        }\r\n    }\r\n})\r\n\r\n// window triggers scrolling\r\nwindow.scrollTo({x: 10, y: 10});\r\n\r\n```\r\n,  so, I hope add a param into the return object `element`, that the element triggers scrolling, not only window.  \r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            return {\r\n                element: document.querySelector(\"#app\"),\r\n                x: 10,\r\n                y: 10\r\n            }\r\n        }\r\n    }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7384877595","Type":"IssuesEvent","CreatedAt":"2018-03-15T14:07:37","Actor":"wangyi7099","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2109","RelatedDescription":"Opened issue \"Can customize scroll element not just window by using scrollBehavior api.\" (#2109) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nWhen using scrollBehavior api, it seems that only supports window scroll i.e.\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            x: 10,\r\n            y: 10\r\n        }\r\n    }\r\n})\r\n\r\n// window triggers scrolling\r\nwindow.scrollTo({x: 10, y: 10});\r\n\r\n```\r\n,  so, I hope add a param into the return object `element`, that the element triggers scrolling, not only window.  \r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            return {\r\n                element: document.querySelector(\"#app\"),\r\n                x: 10,\r\n                y: 10\r\n            }\r\n        }\r\n    }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7384607800","Type":"IssuesEvent","CreatedAt":"2018-03-15T13:22:48","Actor":"AndreyVMarkelov","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2108","RelatedDescription":"Opened issue \"If application works inside iframe when vue-router changes history of iframe only\" (#2108) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44](https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44)\r\n\r\n### Steps to reproduce\r\nRun application into iframe\r\n\r\n### What is expected?\r\nPlease, add the way to setup window.top in VueRouter\r\n\r\n### What is actually happening?\r\nconst history = window.history\r\nis used \r\nshould be way to use\r\nconst history = window.top.history\r\nvia some flag\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7386650746","Type":"PullRequestEvent","CreatedAt":"2018-03-15T18:44:43","Actor":"DannyFeliz","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1191","RelatedDescription":"Opened pull request \"Update object spread operator stage\" (#1191) at vuejs/vuex","RelatedBody":"Ref: https://github.com/tc39/proposal-object-rest-spread#status-of-this-proposal"}],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"305756891","IsPullRequest":false,"CreatedAt":"2018-03-15T23:45:17","Actor":"pawelpanek81","Number":"7838","RawContent":null,"Title":"Transition mode=\"out-in\" has one tick delay after out before in","State":"open","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://vuejs.org/v2/guide/transitions.html](https://vuejs.org/v2/guide/transitions.html)\r\n\r\n### Steps to reproduce\r\n1. Find \"Now let’s update the transition for our on/off buttons with out-in:\" on the website.\r\n2. Click the button \"off\", \"on\" below the code.\r\n3. There is one tick while the text \"With one attribute addition, we’ve fixed that original transition without having to add any special styling.\" jump up and immediately jumb down. Bug appears on browser: Firefox 59.0. On chrome works as expected.\r\n\r\n### What is expected?\r\nNo one tick jump text under the button.\r\n\r\n### What is actually happening?\r\nThe text jumps up and down on Firefox 59.0.\r\n\r\n---\r\nI realize that this may be a browser bug, but I'm not sure.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7838","RelatedDescription":"Open issue \"Transition mode=\"out-in\" has one tick delay after out before in\" (#7838)"},{"Id":"305686985","IsPullRequest":false,"CreatedAt":"2018-03-15T19:20:58","Actor":"sqal","Number":"7837","RawContent":null,"Title":"keep-alive breaks initial transition","State":"open","Body":"### Version\r\n2.5.16 (but I also checked to version 2.5.5)\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/bpkpz6v6/](https://jsfiddle.net/bpkpz6v6/)\r\n\r\n### Steps to reproduce\r\n- Add 3 items. You can see the animation on every item ✅\r\n- Remove items in this order 3 -> 2 -> 1\r\n- Add 3 item. This time animation for item 1 is not being applied ❌\r\n- Remove items but in reverse order 1 -> 2 -> 3\r\n- Again add items. Animation works correctly again ✅\r\n\r\n\r\n### What is expected?\r\nTransition to work every time\r\n\r\n### What is actually happening?\r\nWhen transition-group inside keep-alive is activated after being deactivated, it sometimes does't apply a transition on the first rendered element.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7837","RelatedDescription":"Open issue \"keep-alive breaks initial transition\" (#7837)"},{"Id":"305673926","IsPullRequest":false,"CreatedAt":"2018-03-15T18:40:02","Actor":"harrykant","Number":"7836","RawContent":null,"Title":"Not getting 'Avoid mutating a prop directly' error when using .splice() or .shift() when the prop is an array","State":"open","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/a3js25L2/6/](https://jsfiddle.net/a3js25L2/6/)\r\n\r\n### Steps to reproduce\r\nClick on the 'x' button next to a list item\r\n\r\n### What is expected?\r\nI maybe understanding this wrong but I thought changing the  value of a bound prop from a child component was a no-go, when I was testing and I used array.splice() on the prop, I was expecting it to give me an error\r\n\r\n### What is actually happening?\r\nIt doesn't give the error and I can see in devtools that the parent updates properly. Am I missing something or is this correct? I assumed I'd have to emit back to the parent and change the value there but this works. Assigning it a completely new value however, gives me the error.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7836","RelatedDescription":"Open issue \"Not getting 'Avoid mutating a prop directly' error when using .splice() or .shift() when the prop is an array\" (#7836)"},{"Id":"305541922","IsPullRequest":false,"CreatedAt":"2018-03-15T15:16:43","Actor":"adam-cowley","Number":"7835","RawContent":null,"Title":"Unknown custom element warning with recursive components, babel","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://github.com/adam-cowley/nestedtest](https://github.com/adam-cowley/nestedtest)\r\n\r\n### Steps to reproduce\r\nThe repo is based on the webpack template.  Run `npm run dev` to start the project.\r\n\r\n### What is expected?\r\nI am attempting to reuse components in a nested pattern. The EntityComponent should render a RelationshipComponent which should in turn render an EntityComponent.  \r\n\r\n### What is actually happening?\r\nAlthough each component is defined with a name property, I receive the following warning in the console and nothing rendered on the page.\r\n\r\n```Unknown custom element: <EntityComponent> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.```\r\n\r\nIf I make a change to the EntityComponent file, it will hot swap in the component which will render without a warning.\r\n\r\nI've tried in vain to set keys and a name property on the child element and rename the element.  Attempting to alias the component name has also proved unsuccessful.\r\n\r\nRemoving the component means the rest of the component appears correctly.\r\n\r\n---\r\nThis is a barebones reproduction but the final version uses vuex for state management.  Each child component has a `reference` property passed through it, then a getter is used to pull the information for that specific reference from an array in the store.  Using 'v-for' on a div will list the relevant array entries so this part works.  It seems that the name property is being ignored for the nested component.\r\n\r\nI'm struggling to find any documentation on this - possibly due to using the wrong keywords?  I'm happy to write a blog post if/when this gets resolved to give others a helping hand.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7835","RelatedDescription":"Closed issue \"Unknown custom element warning with recursive components, babel\" (#7835)"},{"Id":"305461715","IsPullRequest":false,"CreatedAt":"2018-03-15T08:50:13","Actor":"doodlewind","Number":"7834","RawContent":null,"Title":"Unable to simulate click in `$nextTick`","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/xnjc03hy/](https://jsfiddle.net/xnjc03hy/)\r\n\r\n### Steps to reproduce\r\n1. Click on `add` in the demo, \r\n2. Comment out `$nextTick` part and uncomment the `setTimeout` part, try again.\r\n\r\n### What is expected?\r\nNative input modal is supposed to be triggered in `$nextTick`.\r\n\r\n### What is actually happening?\r\nModal not triggered in `$nextTick` but triggered by `setTimeout`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7834","RelatedDescription":"Open issue \"Unable to simulate click in `$nextTick`\" (#7834)"},{"Id":"305010504","IsPullRequest":false,"CreatedAt":"2018-03-15T08:35:16","Actor":"dabaoabc","Number":"7827","RawContent":null,"Title":"[SSR]render function when DOM node is larger than 1000","State":"closed","Body":"### What problem does this feature solve?\r\nWhen I use SSR, if the DOM node of a page is too much, it will be rendered asynchronously. but if it is not too much, it will be synchronized rendering.so I study the source code, it shows that the MAX_STACK_DEPTH 1000 has distinguish the two different rendering methods . so what's the reason for this? Is it to solve the performance problem?\r\n\r\n```javascript\r\n    let param; \r\n    vueRenderer.renderToString(new vue({\r\n        template: tmpl.content(),\r\n        data: syncData\r\n    }), function (error, htmlStr) {\r\n        if (error || !htmlStr) {\r\n            act.showErrorPage();\r\n            return; \r\n        }\r\n        param = htmlStr;\r\n        console.log(\"head\");\r\n\r\n        html = syncTmpl.frame({\r\n            act,\r\n            syncData,\r\n            imgcacheDomain,\r\n            title: title\r\n        }).replace('<content></content>', htmlStr);\r\n        // 输出HTML\r\n        act.send(html);\r\n    });\r\n    console.log(\"body\");\r\n```\r\n\r\nif the DOM NODE larger than 1000, first will console \"body\" , then console \"head\". But if the DOM NODE smaller than 1000, first will console \"head\" , then console \"body\". \r\n\r\n### What does the proposed API look like?\r\n.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7827","RelatedDescription":"Closed issue \"[SSR]render function when DOM node is larger than 1000\" (#7827)"},{"Id":"305432469","IsPullRequest":false,"CreatedAt":"2018-03-15T07:57:28","Actor":"snice","Number":"7833","RawContent":null,"Title":"所有Vue的created方法执行某段代码，vue中要怎么做？（类似AOP编程）","State":"closed","Body":"### What problem does this feature solve?\r\n1、提供AOP编程\r\n2、可以提供类似面向对象的Base类。（我现在使用中需要所有Vue在指定生命周期钩子注册和反注册某个功能代码）\r\n\r\n### What does the proposed API look like?\r\nVue.aop()\r\nVue.aopLifecycle()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7833","RelatedDescription":"Closed issue \"所有Vue的created方法执行某段代码，vue中要怎么做？（类似AOP编程）\" (#7833)"},{"Id":"305304368","IsPullRequest":false,"CreatedAt":"2018-03-14T19:57:06","Actor":"networkimprov","Number":"7832","RawContent":null,"Title":"Docs for propsData incomplete ","State":"closed","Body":"### What problem does this feature solve?\r\nThe documentation for propsData omits:\r\n\r\n1. the fact that props set via `propsData: { p: object_or_array[n] }` do not update when n's value changes.\r\n2. any description of ways to simulate reactivity for props of programmatically instantiated components.\r\n\r\n\r\n### What does the proposed API look like?\r\nNA\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7832","RelatedDescription":"Closed issue \"Docs for propsData incomplete \" (#7832)"},{"Id":"305252256","IsPullRequest":false,"CreatedAt":"2018-03-14T17:29:03","Actor":"nerdcave","Number":"7831","RawContent":null,"Title":"Hiding component with v-if results in NotFoundError: Failed to execute 'insertBefore' on 'Node'","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Lwuxeqyc/](https://jsfiddle.net/Lwuxeqyc/)\r\n\r\n### Steps to reproduce\r\nClick \"Hide Both\" in the JSFiddle.\r\n\r\n### What is expected?\r\nThe components actually hide. Or at least give a meaningful warning instead of erroring out.\r\n\r\n### What is actually happening?\r\nNotFoundError: Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7831","RelatedDescription":"Closed issue \"Hiding component with v-if results in NotFoundError: Failed to execute 'insertBefore' on 'Node'\" (#7831)"},{"Id":"305152203","IsPullRequest":false,"CreatedAt":"2018-03-14T13:12:12","Actor":"jordandobrev","Number":"7830","RawContent":null,"Title":"v-model support for web components (stenciljs)","State":"open","Body":"### What problem does this feature solve?\r\nV-model support for web components(tested with web component implemented with ionic's stenciljs compiler).\r\n\r\nDoes not work:\r\n```\r\n<ui-input v-model=\"mySelect\" />\r\n```\r\n\r\nWorks:\r\n```\r\n<ui-input :value=\"mySelect\" @input=\"mySelect = $event.target.value\" />\r\n```\r\n\r\nCan this be enabled to support ignored elements as well that have been declared with:\r\n\r\n```Vue.config.ignoredElements = [/^ui-/];```\r\n\r\n### What does the proposed API look like?\r\nDeclaration\r\n```\r\nVue.config.ignoredElements = [/^ui-/];\r\n```\r\nUsage\r\n```\r\n<ui-input v-model=\"mySelect\" />\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7830","RelatedDescription":"Open issue \"v-model support for web components (stenciljs)\" (#7830)"},{"Id":"305055711","IsPullRequest":false,"CreatedAt":"2018-03-14T07:57:36","Actor":"Justineo","Number":"7829","RawContent":null,"Title":"Provide a way to explicitly fill a (scoped) slot with nothing","State":"open","Body":"### What problem does this feature solve?\r\nSee #7064 for some background information.\r\n\r\nAfter providing an explicit way to declare that a slot is “empty”, we won't have to use props to control whether each slot is gonna be rendered or not.\r\n\r\n### What does the proposed API look like?\r\n```html\r\n<v-component>\r\n  <template slot=\"extra\" empty></template>\r\n</v-component>\r\n```\r\nor\r\n```html\r\n<v-component>\r\n  <template slot=\"extra\"><empty-slot/></template>\r\n</v-component>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7829","RelatedDescription":"Open issue \"Provide a way to explicitly fill a (scoped) slot with nothing\" (#7829)"},{"Id":"305022610","IsPullRequest":true,"CreatedAt":"2018-03-14T04:52:24","Actor":"pkaminski","Number":"7828","RawContent":null,"Title":"fix(observer): invoke getters on initial observation if setter defined. Corrects #7302","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nAfter #7302, there's an asymmetry in `defineReactive` for properties that have both a getter and a setter.  On initial creation, the value returned by the getter is not made reactive since #7302 makes sure not to fetch it and `observe(val)` is a no-op.  However, if the value is set again after the property has been made reactive, it is made reactive as well since `observe(newVal)` in `set` is not gated on missing a getter.  (The premise justifying the change in #7280 that \"why should we get the value of the property in walk, despite the fact, that it is used only if the property has no getter\" is wrong, as the value was used in the call to `observe` even if the property had a getter.)\r\n\r\nWith the present change, properties that _only_ have a getter will still not have their value fetched and won't be made reactive, which should continue to satisfy @DeyLak's needs IIUC.  However, properties that have both a getter and a setter will continue to behave like they did before, being made recursively reactive, and their initial value treated consistently with subsequently set ones.\r\n\r\nIf you think that treating getter vs getter/setter properties differently is confusing, then you may want to revert #7302 instead so all values are made recursively reactive, irrespective of how the property is defined.  This may be easier for developers to understand but would break @DeyLak's use case.\r\n","Url":"https://github.com/vuejs/vue/pull/7828","RelatedDescription":"Open PR \"fix(observer): invoke getters on initial observation if setter defined. Corrects #7302\" (#7828)"},{"Id":"304655886","IsPullRequest":false,"CreatedAt":"2018-03-13T21:49:05","Actor":"hirokiosame","Number":"7817","RawContent":null,"Title":"Named slot won't render","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hirokiosame/dronjdzm/63/](https://jsfiddle.net/hirokiosame/dronjdzm/63/)\r\n\r\n### Steps to reproduce\r\nThe jsfiddle link reproduces the issue but it's a pretty intricate combination that reproduces it.\r\n\r\nRemoving the `slot=\"namedSlot` from the `div` and wrapping it with `<template slot=\"namedSlot\">`, or `removing the usage of  the functional component `noOp`, or disabling reactivity via changing `undefined`  to `false` on L20 or removing the dependency on L9 will fix the issue.\r\n\r\n### What is expected?\r\nFor the named slot to render. In the case of the reproduction, the \"THIS TEXT SHOULD RENDER\" text.\r\n\r\n### What is actually happening?\r\nThe named slot is not rendering.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7817","RelatedDescription":"Closed issue \"Named slot won't render\" (#7817)"},{"Id":"304919109","IsPullRequest":true,"CreatedAt":"2018-03-13T20:15:28","Actor":"zapashcanon","Number":"7826","RawContent":null,"Title":"Clean shell scripts","State":"open","Body":"Hi,\r\n\r\nI fixed various things spotted by shellcheck.\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n","Url":"https://github.com/vuejs/vue/pull/7826","RelatedDescription":"Open PR \"Clean shell scripts\" (#7826)"},{"Id":"304828471","IsPullRequest":false,"CreatedAt":"2018-03-13T16:02:26","Actor":"steffans","Number":"7825","RawContent":null,"Title":"Globally registered component naming converts to kebap-case when PascalCase is used","State":"open","Body":"### Version\r\n2.5.15\r\n\r\n### Steps to reproduce\r\nCurrently all globally registered components automatically convert their name to  kebap-case. \r\n\r\n```js\r\n// register component\r\nVue.component('RouterLink', {...})\r\n\r\n// get component fails, returns undefined\r\nVue.component('RouterLink')\r\n\r\n// get component works, returns the component\r\nVue.component('router-link')\r\n```\r\n\r\nIt would be nice to have the registered components also available as with their PascalCase naming. This would also mean that you could use the PascalCase naming in `.vue` templates, which is a nice way to quickly distinguish Vue components from HTML elements. Right now its is not possible, and to make it work this code has to be used:\r\n\r\n```html\r\n<template>\r\n\r\n  <RouterLink :to=\"link\">Link</RouterLink>\r\n\r\n</template>\r\n<script>\r\n{\r\n    components: {\r\n       RouterLink: Vue.component('router-link')\r\n   }\r\n}\r\n</script>\r\n```\r\n\r\n\r\n### What is expected?\r\nAccess globally registered components with their PascalCase naming if it was provided on register function call.\r\n\r\n### What is actually happening?\r\nFor now the component naming always converts to kebap-case.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7825","RelatedDescription":"Open issue \"Globally registered component naming converts to kebap-case when PascalCase is used\" (#7825)"},{"Id":"304822365","IsPullRequest":true,"CreatedAt":"2018-03-13T15:48:22","Actor":"yyx990803","Number":"7824","RawContent":null,"Title":"perf: avoid unnecessary re-renders when computed property value did not change","State":"open","Body":"close #7767","Url":"https://github.com/vuejs/vue/pull/7824","RelatedDescription":"Open PR \"perf: avoid unnecessary re-renders when computed property value did not change\" (#7824)"},{"Id":"304822169","IsPullRequest":true,"CreatedAt":"2018-03-13T15:47:57","Actor":"yyx990803","Number":"7823","RawContent":null,"Title":"fix: invoke component node create hooks before insertion","State":"open","Body":"fix #7531","Url":"https://github.com/vuejs/vue/pull/7823","RelatedDescription":"Open PR \"fix: invoke component node create hooks before insertion\" (#7823)"},{"Id":"304822030","IsPullRequest":true,"CreatedAt":"2018-03-13T15:47:39","Actor":"yyx990803","Number":"7822","RawContent":null,"Title":"fix: beforeUpdate should be called before render and allow state mutation","State":"open","Body":"fix #7481 ","Url":"https://github.com/vuejs/vue/pull/7822","RelatedDescription":"Open PR \"fix: beforeUpdate should be called before render and allow state mutation\" (#7822)"},{"Id":"304658680","IsPullRequest":true,"CreatedAt":"2018-03-13T15:09:49","Actor":"pkaminski","Number":"7818","RawContent":null,"Title":"fix(core): Make set/delete warning condition for undefined, null and primitive values more precise.  Corrects #7452","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nLimiting set/delete to objects and arrays is overly restrictive; for example, there's no problem in setting properties on functions.  I just changed the condition to what the original PR's description claimed and clarified the warning message.\r\n","Url":"https://github.com/vuejs/vue/pull/7818","RelatedDescription":"Closed or merged PR \"fix(core): Make set/delete warning condition for undefined, null and primitive values more precise.  Corrects #7452\" (#7818)"},{"Id":"304625167","IsPullRequest":true,"CreatedAt":"2018-03-13T15:07:59","Actor":"jinzhubaofu","Number":"7814","RawContent":null,"Title":"fix: add v-show style in ssr if style is binding to an array","State":"closed","Body":"web/server/directives/show just add style.display='none', no matter style is object or array; If\r\nstyle is an array, it will lost additional property while tranformed into object by\r\nshared/utils#toObject;\r\n\r\nfix #7813\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7814","RelatedDescription":"Closed or merged PR \"fix: add v-show style in ssr if style is binding to an array\" (#7814)"},{"Id":"304620424","IsPullRequest":false,"CreatedAt":"2018-03-13T15:07:59","Actor":"jinzhubaofu","Number":"7813","RawContent":null,"Title":"[SSR] lost v-show if style is to binding to an array","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://codepen.io/ludafa/pen/Broxxy](https://codepen.io/ludafa/pen/Broxxy)\r\n\r\n### Steps to reproduce\r\n1. npm install vue vue-server-render\r\n2. new a `index.js` with this code:\r\n\r\n  ```js\r\n  const Vue = require('vue')\r\n  const app = new Vue({\r\n    template: `<div :style=\"[{color: a, background: b}]\" v-show=\"c\">test</div>`,\r\n    data() {\r\n      return {\r\n        a: 'red',\r\n        b: 'blue',\r\n        c: false\r\n      };\r\n    }\r\n  })\r\n  const renderer = require('vue-server-renderer').createRenderer()\r\n  renderer.renderToString(app, (err, html) => {\r\n    if (err) throw err\r\n    console.log(html)\r\n  })\r\n  ```\r\n\r\n3. run: node index.js\r\n\r\n### What is expected?\r\n```html\r\n<div data-server-rendered=\"true\" style=\"color:red;background:blue;display:none;\">test</div>\r\n```\r\n\r\n### What is actually happening?\r\n```html\r\n<div data-server-rendered=\"true\" style=\"color:red;background:blue;\">test</div>\r\n```\r\n\r\n---\r\nPlease run the CodePen on Node\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7813","RelatedDescription":"Closed issue \"[SSR] lost v-show if style is to binding to an array\" (#7813)"},{"Id":"304567876","IsPullRequest":false,"CreatedAt":"2018-03-13T15:06:04","Actor":"linneakw","Number":"7811","RawContent":null,"Title":"v-bind=$attrs overrides the input type attribute in 2.5.14 and above","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/linnea/onw3Lfm4/2/](https://jsfiddle.net/linnea/onw3Lfm4/2/)\r\n\r\n### Steps to reproduce\r\nCreate a custom component with an input wrapped in a div and:\r\n\r\n1. inherit attributes \r\n`v-bind=\"$attrs\"`\r\n2. Set the type attribute on the input\r\n`type=\"checkbox\"` \r\n3. Have a v-model on that input.\r\n\r\n### What is expected?\r\nThe inner input still receives type=\"checkbox\"\r\n\r\n### What is actually happening?\r\nNo type attribute is inherited\r\n\r\n---\r\nWe have a custom checkbox component that provides label styling etc, and used to be able to declare the input type as well as inherit attributes from the component. Other attributes that are set on the inner input are passed correctly (ie disabled, :true-value, etc), but not the type attribute, unless you bind it. This was working prior to v2.5.14.\r\n\r\nA temporary fix we've implemented is changing `type=\"checkbox\"` to `:type=\"'checkbox'\"`, or setting v-bind=\"$attrs\" to a computed property that returns an object with Object.assign({ type: 'checkbox'}, this.$attrs);\r\n\r\nRemoving the v-model from the input also fixes it, but we use it to handle multiple checkboxes, bound to the same array\r\n\r\nHere's the same fiddle above, working in 2.5.13\r\nhttps://jsfiddle.net/linnea/onw3Lfm4/4/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7811","RelatedDescription":"Closed issue \"v-bind=$attrs overrides the input type attribute in 2.5.14 and above\" (#7811)"},{"Id":"304679556","IsPullRequest":true,"CreatedAt":"2018-03-13T15:05:58","Actor":"hirokiosame","Number":"7819","RawContent":null,"Title":"Static type=\"checkbox\" with v-bind (fix #7811)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7819","RelatedDescription":"Closed or merged PR \"Static type=\"checkbox\" with v-bind (fix #7811)\" (#7819)"},{"Id":"304799304","IsPullRequest":false,"CreatedAt":"2018-03-13T14:55:22","Actor":"Tyetao","Number":"7821","RawContent":null,"Title":"vue 在绑定checkbox是否选中状态后，复选框无法勾选的问题","State":"closed","Body":"<input type=\"checkbox\" :checked=\"item.checked\" >","Url":"https://github.com/vuejs/vue/issues/7821","RelatedDescription":"Closed issue \"vue 在绑定checkbox是否选中状态后，复选框无法勾选的问题\" (#7821)"},{"Id":"304795452","IsPullRequest":false,"CreatedAt":"2018-03-13T14:46:32","Actor":"yousi2016","Number":"7820","RawContent":null,"Title":"I want to learn vue.js","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/7820","RelatedDescription":"Closed issue \"I want to learn vue.js\" (#7820)"},{"Id":"304651933","IsPullRequest":false,"CreatedAt":"2018-03-13T07:17:36","Actor":"ggedde","Number":"7816","RawContent":null,"Title":"Performance Question:  v-html vs {{braces}}","State":"closed","Body":"I understand the difference they provide as far as escaping tags and data binding, but I don't know what the Vue Team sees as the preferred method and what performance differences they have.\r\n\r\nFor example, what is less work for the vue engine:\r\n`<div>{{content_a}}</div>`\r\nOr \r\n`<div v-html=\"content_a\"></div>`\r\n\r\nEspecially at a large scale or used on repeaters, etc\r\nI am more curious about this since both methods provide the same outcome.\r\nI also prefer to not use braces unless absolutely necessary, but I don't want to hinder the performance by over-using v-html if it takes up more power then {{braces}}\r\n\r\nThanks","Url":"https://github.com/vuejs/vue/issues/7816","RelatedDescription":"Closed issue \"Performance Question:  v-html vs {{braces}}\" (#7816)"},{"Id":"304626407","IsPullRequest":false,"CreatedAt":"2018-03-13T06:37:54","Actor":"semi-xi","Number":"7815","RawContent":null,"Title":"It's different between  array = [] and array.length = 0","State":"closed","Body":"### Version\r\n2.2.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/smibanxi/project/editor/AdbvJQ](https://codepen.io/smibanxi/project/editor/AdbvJQ)\r\n\r\n### Steps to reproduce\r\nhave a tab view,\r\nchange tab view \r\nthe second tab is different from the third tab\r\n\r\n### What is expected?\r\nthe second tab  and the third are the same\r\n\r\n### What is actually happening?\r\nthe second tab is different from the third tab\r\n\r\n---\r\nwhen a set `array.length = 0 `, i see the data of this array is empty. but the view is still exist \r\nwhen a set `array.length = [] `, it really disappear\r\n\r\nit is this method of array wrong?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7815","RelatedDescription":"Closed issue \"It's different between  array = [] and array.length = 0\" (#7815)"},{"Id":"304611600","IsPullRequest":false,"CreatedAt":"2018-03-13T03:04:00","Actor":"edward32tnt","Number":"7812","RawContent":null,"Title":"[SSR] 服务端渲染能否增加自定义 TemplateRenderer 或者 提供部分inject的参数？","State":"open","Body":"### What problem does this feature solve?\r\n当我使用 inject: true 的参数渲染 ssr 页面时，我只想对 renderScripts 这部分做自定义修改，其他继续沿用默认templateRenderer的render**。\r\n\r\n如果 我设置了 inject: false，那我必须在 html模板中 添加 各种 {{ render** }} 。\r\n\r\n请问有没有更方便的方法？\r\n\r\n### What does the proposed API look like?\r\n```\r\ncreateBundleRenderer({\r\n  inject:true,\r\n  renderScripts: function() { ... },\r\n})\r\n\r\n```\r\nor \r\n\r\n```\r\ncreateBundleRenderer({\r\n  inject:true,\r\n  templateRenderer: new otherTemplateRenderer(),\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7812","RelatedDescription":"Open issue \"[SSR] 服务端渲染能否增加自定义 TemplateRenderer 或者 提供部分inject的参数？\" (#7812)"},{"Id":"304535310","IsPullRequest":false,"CreatedAt":"2018-03-12T23:36:38","Actor":"yaodingyd","Number":"7810","RawContent":null,"Title":"beforeload placeholder for async component","State":"closed","Body":"### What problem does this feature solve?\r\nMy use case is that parent component needs to properly calculate the number of $children to render after parent is mounted, and some of the $children can be async component, so I need a beforeload component option.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst AsyncComp = () => ({\r\n  // The component to load. Should be a Promise\r\n  component: import('./MyComp.vue'),\r\n  // A component to use while the async component is loading\r\n  loading: LoadingComp,\r\n  // A component to use before loads\r\n  beforeLoading: placeholder\r\n  // A component to use if the load fails\r\n  error: ErrorComp,\r\n  // Delay before showing the loading component. Default: 200ms.\r\n  delay: 200,\r\n  // The error component will be displayed if a timeout is\r\n  // provided and exceeded. Default: Infinity.\r\n  timeout: 3000\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7810","RelatedDescription":"Closed issue \"beforeload placeholder for async component\" (#7810)"},{"Id":"304531780","IsPullRequest":false,"CreatedAt":"2018-03-12T21:34:32","Actor":"rikte88","Number":"7809","RawContent":null,"Title":"arr.slice not always reuses dom with v-for and key","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/8s42h4bp/25/](https://jsfiddle.net/8s42h4bp/25/)\r\n\r\n### Steps to reproduce\r\n`<div v-for=\"row in visible\" :key=\"row\">{{row}}</div>`\r\n\r\nCase A (no problem): visible = rows.slice(100, 110) followed by visible = rows.slice(99, 109)\r\n\r\nCase B (problem): visible = rows.slice(100, 110) followed by visible = rows.slice(101, 111)\r\n\r\nThe first reuses DOM elements, while the latter appears to create new ones. This can be seen by inspecting the div boxes in firefox and see them all flashing orange when clicking the \"down\" button, but not the \"up\" button in the minimal reproduction. Why is this so, is it some kind of optimization, or is it a bug?\r\n\r\nI am trying to do this when scrolling a page up/down to only show rows that are in view in a huge table. It is visibly faster to scroll up than down, despite all elements being absolutely positioned. Happens in both Chrome and Firefox.\r\n\r\n### What is expected?\r\nDOM elements are reused in both case A and B.\r\n\r\n### What is actually happening?\r\nDOM elements appear to be recreated in case B, potentially causing unnecessary performance hit and contradicting:\r\nhttps://vuejs.org/v2/guide/list.html#Replacing-an-Array\r\n\r\n---\r\nLoving Vue, keep up the great work!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7809","RelatedDescription":"Closed issue \"arr.slice not always reuses dom with v-for and key\" (#7809)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"305694715","IsPullRequest":false,"CreatedAt":"2018-03-15T19:45:47","Actor":"wrrrn","Number":"2110","RawContent":null,"Title":"Child route removing optional param in parent","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/wrrrn/pen/GxqmOb](https://codepen.io/wrrrn/pen/GxqmOb)\r\n\r\n### Steps to reproduce\r\nI've linked to what the current router code is. The issue is simple, so I hope I'm missing something obvious.\r\n\r\n### What is expected?\r\nWhen the :paramOptional is set, and child route is pushed to, the path will look as such - \r\n'/search/paramOne/paramOptional/paramTwo/show-modal'\r\n\r\n### What is actually happening?\r\nWhen navigated to, the child removes the paramOptional. The resulting url is - \r\n'/search/paramOne/paramTwo/show-modal'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2110","RelatedDescription":"Open issue \"Child route removing optional param in parent\" (#2110)"},{"Id":"305566943","IsPullRequest":false,"CreatedAt":"2018-03-15T14:17:03","Actor":"wangyi7099","Number":"2109","RawContent":null,"Title":"Can customize scroll element not just window by using scrollBehavior api.","State":"closed","Body":"### What problem does this feature solve?\r\nWhen using scrollBehavior api, it seems that only supports window scroll i.e.\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            x: 10,\r\n            y: 10\r\n        }\r\n    }\r\n})\r\n\r\n// window triggers scrolling\r\nwindow.scrollTo({x: 10, y: 10});\r\n\r\n```\r\n,  so, I hope add a param into the return object `element`, that the element triggers scrolling, not only window.  \r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst router = new VueRouter({\r\n    routes: [...],\r\n    scrollBehavior(to, from, savedPosition) {\r\n        {\r\n            return {\r\n                element: document.querySelector(\"#app\"),\r\n                x: 10,\r\n                y: 10\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n//\r\n// element triggers scrolling\r\nelement.scrollTo({x: 10, y: 10});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2109","RelatedDescription":"Closed issue \"Can customize scroll element not just window by using scrollBehavior api.\" (#2109)"},{"Id":"305550402","IsPullRequest":false,"CreatedAt":"2018-03-15T13:22:48","Actor":"AndreyVMarkelov","Number":"2108","RawContent":null,"Title":"If application works inside iframe when vue-router changes history of iframe only","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44](https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L44)\r\n\r\n### Steps to reproduce\r\nRun application into iframe\r\n\r\n### What is expected?\r\nPlease, add the way to setup window.top in VueRouter\r\n\r\n### What is actually happening?\r\nconst history = window.history\r\nis used \r\nshould be way to use\r\nconst history = window.top.history\r\nvia some flag\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2108","RelatedDescription":"Open issue \"If application works inside iframe when vue-router changes history of iframe only\" (#2108)"},{"Id":"305421017","IsPullRequest":false,"CreatedAt":"2018-03-15T08:27:15","Actor":"lichenhao","Number":"2107","RawContent":null,"Title":"The router clicked but the url and view not updated follow","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/v3ox6n8xj0](https://codesandbox.io/s/v3ox6n8xj0)\r\n\r\n### Steps to reproduce\r\nRun with this code \r\n`<router-link :to=\"someroute.path\"></route-link>`\r\nand click more \r\nSometime the history or hash will not changed.\r\n\r\n### What is expected?\r\nThe page state should be switched.\r\n\r\n### What is actually happening?\r\nNothing happend\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2107","RelatedDescription":"Closed issue \"The router clicked but the url and view not updated follow\" (#2107)"},{"Id":"305386842","IsPullRequest":false,"CreatedAt":"2018-03-15T02:34:49","Actor":"code-artisan","Number":"2106","RawContent":null,"Title":"route not matched.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/code_artisan/L7hscd8h/5792/](https://jsfiddle.net/code_artisan/L7hscd8h/5792/)\r\n\r\n### Steps to reproduce\r\nclick user profile link, user profile is not matched.\r\n\r\n### What is expected?\r\nuser profile matched, not 404 page.\r\n\r\n### What is actually happening?\r\nuser profile route not matched.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2106","RelatedDescription":"Closed issue \"route not matched.\" (#2106)"},{"Id":"305234886","IsPullRequest":false,"CreatedAt":"2018-03-14T16:51:32","Actor":"rightaway","Number":"2105","RawContent":null,"Title":"Allow nested routes without parent component","State":"closed","Body":"### What problem does this feature solve?\r\nAllows the routes to be defined with a prefix that doesn't need to be repeated in each route.\r\n\r\n### What does the proposed API look like?\r\n\r\nCurrently this doesn't work because the parent route doesn't have a component specified. This feature isn't about nested routes but just about nested paths.\r\n\r\n```js\r\n{ path: '/prefix': children: [\r\n  { path: 'one', component: ... },\r\n  { path: 'two', component: ... },\r\n]}\r\n```\r\nCreates `/prefix/one` and `/prefix/two`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2105","RelatedDescription":"Closed issue \"Allow nested routes without parent component\" (#2105)"},{"Id":"305047490","IsPullRequest":false,"CreatedAt":"2018-03-14T07:33:26","Actor":"viruscamp","Number":"2104","RawContent":null,"Title":"In beforeEach hook , call next with a callback is invalid","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/viruscamp/z6j6yozx/3/](https://jsfiddle.net/viruscamp/z6j6yozx/3/)\r\n\r\n### Steps to reproduce\r\nRun this jsfiddle, open js console, and click \"Go to Foo \"\r\n\r\n### What is expected?\r\nJs console show:\r\n\r\n```\r\nrouter.beforeEach /foo  \r\nrouter.beforeEach.next /foo  \r\nrouteConfig.beforeEnter /foo  \r\nrouteConfig.beforeEnter.next /foo  \r\nrouter.beforeResolve /foo  \r\nrouter.beforeResolve.next /foo  \r\n```\r\n\r\n### What is actually happening?\r\nJs console show:\r\n\r\n```\r\nrouter.beforeEach /foo  \r\nrouteConfig.beforeEnter /foo  \r\nrouter.beforeResolve /foo  \r\n```\r\n\r\n---\r\nAs https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts show:  \r\nrouter.beforeEach, routeConfig.beforeEnter, router.beforeResolve use NavigationGuard  \r\nand next in NavigationGuard receive ((vm: Vue) => any) as argument  \r\nBut I cannot use this feature as the code show\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2104","RelatedDescription":"Closed issue \"In beforeEach hook , call next with a callback is invalid\" (#2104)"},{"Id":"304710005","IsPullRequest":false,"CreatedAt":"2018-03-13T10:38:16","Actor":"OwenCalvin","Number":"2103","RawContent":null,"Title":"scrollBehaviour after components are loaded","State":"closed","Body":"Hello,\r\nI load my components asynchronously with import('...') and i wan't to scroll to it when i'm redirected to a new page with the vue router redirection.\r\nExample:\r\nI'm redirected to 'home#page' but the components with the id 'page' aren't mounted when i'm redirected, so the scroll didn't work...\r\nCan you fix it ?","Url":"https://github.com/vuejs/vue-router/issues/2103","RelatedDescription":"Closed issue \"scrollBehaviour after components are loaded\" (#2103)"},{"Id":"304604243","IsPullRequest":true,"CreatedAt":"2018-03-13T08:35:30","Actor":"Jinjiang","Number":"2101","RawContent":null,"Title":"[docs][zh-cn] translated #2091","State":"closed","Body":"#2091 change example for apache-config\r\nand a newline between the new content and the code block.\r\n/ping @Justineo \r\nThanks.","Url":"https://github.com/vuejs/vue-router/pull/2101","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] translated #2091\" (#2101)"},{"Id":"304619946","IsPullRequest":false,"CreatedAt":"2018-03-13T03:59:22","Actor":"gzzhanghao","Number":"2102","RawContent":null,"Title":"`beforeRouteLeave` invoked twice when replacing path in target view","State":"open","Body":"### Version\r\n3.0.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Jason_Daurus/vv79u55j/](https://jsfiddle.net/Jason_Daurus/vv79u55j/)\r\n\r\n### Steps to reproduce\r\nClick at \"link-b\" in the fiddle, you'll have \"A:beforeRouteLeave\" logged twice in browser's console.\r\n\r\n### What is expected?\r\nA:beforeRouteLeave should not be invoked after B:beforeRouteEnter\r\n\r\n### What is actually happening?\r\nit does :-(\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2102","RelatedDescription":"Open issue \"`beforeRouteLeave` invoked twice when replacing path in target view\" (#2102)"},{"Id":"304311951","IsPullRequest":false,"CreatedAt":"2018-03-12T10:18:47","Actor":"konglinlin","Number":"2100","RawContent":null,"Title":"uc浏览器上有过度动效bug","State":"closed","Body":"\r\n在UC浏览器上使用动效的时候路由会更改，但是页面视图不会更新（版本：UC V11.9.0.970）","Url":"https://github.com/vuejs/vue-router/issues/2100","RelatedDescription":"Closed issue \"uc浏览器上有过度动效bug\" (#2100)"},{"Id":"302342743","IsPullRequest":true,"CreatedAt":"2018-03-11T11:44:06","Actor":"doppelreim","Number":"2091","RawContent":null,"Title":"change example for apache-config","State":"closed","Body":"This is a PR for issue #2090\r\n\r\nInstead of using `mod_rewrite`, it may be possible to use `FallbackResource` (see https://httpd.apache.org/docs/2.4/mod/mod_dir.html#fallbackresource).  \r\nThat would be more concise and would not depend on `mod_rewrite`.\r\n\r\nDisclaimer: I just started with vue and am not an expert with apache :)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2091","RelatedDescription":"Closed or merged PR \"change example for apache-config\" (#2091)"},{"Id":"303915363","IsPullRequest":false,"CreatedAt":"2018-03-09T17:17:06","Actor":"dotnetCarpenter","Number":"2099","RawContent":null,"Title":"Setting pushState title","State":"open","Body":"### What problem does this feature solve?\r\nIs there any objections against a PR that opens up for setting the `pushState()` title argument in [push-state.js](https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L50).\r\n\r\nI'm porting an app to use vue-router and the app had this before. I realise that Firefox ignores the title, but other browsers do not. The app is using vue-router to enable deep linking. The app display PDFs with hundreds of pages. I got the back/forward buttons working pretty easily but the resulting list is completely unreadable, since it is just the `document.title` repeated 10-100 times. I would like to add the page number to each entry.\r\n\r\n### What does the proposed API look like?\r\nNot sure... Could be:\r\n```js\r\nthis.$router.push({\r\n  meta: { title: `page ${pageCurrent} - foobar` }\r\n})\r\n```\r\nBut I don't have any preferences other than the one the vue-router team + community prefer. :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2099","RelatedDescription":"Open issue \"Setting pushState title\" (#2099)"},{"Id":"303898094","IsPullRequest":true,"CreatedAt":"2018-03-09T16:26:27","Actor":"bmarkovic","Number":"2098","RawContent":null,"Title":"Add support for 'disabled' attribute to <router-link>, fixes #916","State":"open","Body":"During the discussion on #916 a solution was mentioned, where attribute `disabled` in `<router-link>` would prevent the link from working. This is useful for programmatically disabling router links based on application state. \r\n\r\nCompared to other solutions, both available and proposed, this is by far the cleanest and most idiomatic if you come from a HTML mindset, as it's available on form elements with the same purpose, and some CSS frameworks like Bootstrap promote its use for `<li><a>` navigation elements. \r\n\r\nFurthermore, binding to disabled attribute is a simple, easy to style and implement, and I honestly believe that for these reasons, it is also very idiomatic to Vue.js as well.\r\n\r\nThis pull request implements that proposal.","Url":"https://github.com/vuejs/vue-router/pull/2098","RelatedDescription":"Open PR \"Add support for 'disabled' attribute to <router-link>, fixes #916\" (#2098)"},{"Id":"303819954","IsPullRequest":false,"CreatedAt":"2018-03-09T12:05:18","Actor":"helixcg","Number":"2097","RawContent":null,"Title":".$route.query传参中  数值+'/'+数值 做参数，路由页面值改变","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n    onButtonClick (type) {\r\n      var all= this.$route.query.num+\"/\"+type\r\n     // this.$route.query.num=328   type=15712121212\r\n      this.$router.push({\r\n        path: 'abc',\r\n        name: 'abc',\r\n        query:{num:all}\r\n      });\r\n    },\r\n\r\n路由页面url为   ?num=328%**2F**15712121212\r\n原因是什么呢","Url":"https://github.com/vuejs/vue-router/issues/2097","RelatedDescription":"Closed issue \".$route.query传参中  数值+'/'+数值 做参数，路由页面值改变\" (#2097)"},{"Id":"303777784","IsPullRequest":true,"CreatedAt":"2018-03-09T09:33:47","Actor":"nurdism","Number":"2096","RawContent":null,"Title":"Implements issue #2069","State":"open","Body":"This is a PR for issue #2069\r\nAdds smooth scrolling option to scrollBehavior position.","Url":"https://github.com/vuejs/vue-router/pull/2096","RelatedDescription":"Open PR \"Implements issue #2069\" (#2096)"},{"Id":"303682614","IsPullRequest":false,"CreatedAt":"2018-03-09T00:30:59","Actor":"narusas","Number":"2095","RawContent":null,"Title":"scrollBehaviour should be executed before after hooks when pressing the back button","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/narusas/ektba5vj/8/](https://jsfiddle.net/narusas/ektba5vj/8/)\r\n\r\n### Steps to reproduce\r\nOpen https://jsfiddle.net/narusas/ektba5vj/8/ \r\nOpen Dev console\r\nClick '/hello1'\r\nClear console\r\n\r\nScroll some\r\nCheck console \r\n```javascript\r\n\tscroll 4\r\n \tscroll 8\r\n \tscroll 12\r\n```\r\n\r\nClick '/hello2'\r\nCheck console\r\n```javascript\r\n\tComponent1 beforeRouteLeave\r\n\tnext-beforeRouteLeave-Component1\r\n \tglobal router  beforeEach\r\n \t/hello2 route beforeEnter\r\n \tComponent2 beforeRouteEnter\r\n\tnext-beforeRouteEnter-Component2\r\n\tglobal router beforeResolve\r\n\tglobal router afterEach\r\n\tComponent2 beforeCreate\r\n\tComponent2 created\r\n\tComponent2 beforeMount\r\n\tComponent2 mounted\r\n\tscrollBehavior\r\n\tscrollBehavior - resolve\r\n\tscroll 0 \r\n ```\r\n\r\nCurrently It's ok\r\n\r\nNow press back-button\r\nCheck console\r\n```javascript\r\n\tComponent2 beforeRouteLeave\r\n\tscroll 12   <---- Why This Timing???? Why leaving component is  scrolled??  \r\n\tnext-beforeRouteLeave-Component2\r\n\tglobal router  beforeEach\r\n\t/hello1 route beforeEnter\r\n\tComponent1 beforeRouteEnter\r\n\tnext-beforeRouteEnter-Component1\r\n\tglobal router beforeResolve\r\n\tglobal router afterEach\r\n\tComponent1 beforeCreate\r\n\tComponent1 created\r\n\tComponent1 beforeMount\r\n\tComponent1 mounted\r\n\tscrollBehavior\r\n```\r\n\r\n### What is expected?\r\nWhen press back button, \r\nBefore router leave, no scrolling is executed.\r\n\r\n### What is actually happening?\r\nWhen press back button,\r\nLeave component is  scrolled strange position. \r\nAfter that scrolling, Entering Component is entered.  \r\nIt looks like flickering. \r\n\r\n\r\n\r\n\r\n\r\n---\r\nNow I creating some SPA web site. \r\nWhen user press back/foward button, leaving component is scrolled and after that show entering component. \r\nSO It is flickering!\r\nAlso, I use lazy image loading. So user press back/foward, this not-intented  scrolling will call unnecessary image loading , and progressive loading animation is showed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2095","RelatedDescription":"Open issue \"scrollBehaviour should be executed before after hooks when pressing the back button\" (#2095)"},{"Id":"303340809","IsPullRequest":true,"CreatedAt":"2018-03-08T09:51:10","Actor":"kazupon","Number":"2094","RawContent":null,"Title":"update ja docs","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n/ping @re-fort @potato4d @lmiller1990 @38elements\r\nどなたかレビューしてもらえると助かります！ 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2094","RelatedDescription":"Closed or merged PR \"update ja docs\" (#2094)"},{"Id":"303107765","IsPullRequest":false,"CreatedAt":"2018-03-07T14:58:01","Actor":"maki10","Number":"2093","RawContent":null,"Title":"Vue Router not working properly in Component when url have some deep","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/43q4nsx9/2/](https://jsfiddle.net/43q4nsx9/2/)\r\nGo to second home, and click on an image (but you must have some deep's in URL, in order to see the issue) \r\n\r\n### Steps to reproduce\r\nWhen calling `route-link` form Component, they switch URL bad.\r\nFor example:\r\n- My domain is: `example.com/shop/shop-slug/`\r\n- Root Vue make a path: `example.com/shop/shop-slug#/`\r\n- And Bug occurred on `Product` Component when changing the path. Router link adds me: `example.com/#/product/{{ product.id }}`\r\n\r\nI try `$router.fullPath` and get `#/product/{{ product.id }}`.\r\nTry to match, replace `router-link` nothing work as I expected?\r\n\r\n\r\n### What is expected?\r\nTo match full URL.\r\n\r\n### What is actually happening?\r\nThe router doesn't catch good URL\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2093","RelatedDescription":"Closed issue \"Vue Router not working properly in Component when url have some deep\" (#2093)"},{"Id":"302588196","IsPullRequest":false,"CreatedAt":"2018-03-06T07:12:29","Actor":"cmzz","Number":"2092","RawContent":null,"Title":"路由不能跳转","State":"closed","Body":"![image](https://user-images.githubusercontent.com/6111715/37018782-9b014af4-2150-11e8-8033-f4f7f35c89d7.png)\r\n\r\n代码是 this.$router.push({path: '/'});\r\n\r\n结果无法跳转，控制台无限的输出上面图片的消息，导致浏览器卡死。\r\n\r\n请问这是什么问题呢。","Url":"https://github.com/vuejs/vue-router/issues/2092","RelatedDescription":"Closed issue \"路由不能跳转\" (#2092)"},{"Id":"302006123","IsPullRequest":true,"CreatedAt":"2018-03-05T18:10:27","Actor":"Jinjiang","Number":"2087","RawContent":null,"Title":"[docs][zh-cn] synced udpates and some typos","State":"closed","Body":"Translated #2043 and some handy typos.\r\n/ping @Justineo ","Url":"https://github.com/vuejs/vue-router/pull/2087","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] synced udpates and some typos\" (#2087)"},{"Id":"302289768","IsPullRequest":false,"CreatedAt":"2018-03-05T14:05:38","Actor":"doppelreim","Number":"2090","RawContent":null,"Title":"Update apache-example for history-mode (documentation)","State":"closed","Body":"### What problem does this feature solve?\r\nFor HTML5 History Mode, there are some example server-configurations in the documentation.\r\n\r\nSee https://github.com/vuejs/vue-router/blob/dev/docs/en/essentials/history-mode.md#apache\r\n\r\nI think the apache-example could be simplified by using https://httpd.apache.org/docs/2.4/mod/mod_dir.html#fallbackresource instead of `mod_rewrite`?\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\nFallbackResource /index.html\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2090","RelatedDescription":"Closed issue \"Update apache-example for history-mode (documentation)\" (#2090)"},{"Id":"302240531","IsPullRequest":true,"CreatedAt":"2018-03-05T10:58:54","Actor":"Haeresis","Number":"2089","RawContent":null,"Title":"[Doc FR]: update of `rout-object.md` file","State":"closed","Body":"Hi @posva !\r\n\r\nA little translation added from EN doc ;)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2089","RelatedDescription":"Closed or merged PR \"[Doc FR]: update of `rout-object.md` file\" (#2089)"},{"Id":"302191728","IsPullRequest":false,"CreatedAt":"2018-03-05T08:22:28","Actor":"Goblinlordx","Number":"2088","RawContent":null,"Title":"Allow rendering an alternate route without redirect","State":"closed","Body":"### What problem does this feature solve?\r\nGiven a few examples:\r\n\r\nhttps://github.com/someProjectThatDoesntExist\r\nhttps://github.com/goblinlordx/someRepoThatDoesntExist\r\n\r\nWhen these pages render, you can see that even though these are \"Not Found\" the route doesn't change.  This (in my opinion) is fairly important for routing.  Fortunately, this is actually possible for certain cases.  For example:\r\n\r\n```\r\n{\r\n  routes: [\r\n    {path: \"\", component: \"Index\"},\r\n    {path: \"/settings\", component: \"Settings\"},\r\n    {path: \"*\", component: \"NotFound\"},\r\n  ]\r\n}\r\n```\r\n\r\nThe above config will render the \"NotFound\" for routes such as `/doesntexist`.  For routes that are not dynamic, this is trivial to implement.  The problem comes when attempting to accomplish this same behavior when using navigation guards to determine if a path should be displayed to the user or not.  This could be because of failure to load data, or something like authorization.  The current examples do not actually accomplish this and instead actually change the path via redirection.\r\n\r\nCurrently, the navigation guard api only seems to support a few different actions that can be taken in response to a route being called.  These are:\r\n\r\n - Continue to the next route by calling `next()`\r\n - Fail to load the next route by never calling `next()` (probably not something that should be done)\r\n - Fail to load the next route by calling `next(false)`\r\n - Fail to load the next route by calling `next(<Error>)`\r\n - Redirect by pushing path `next({ path/name: \"xxx\")`\r\n - Redirect by replacing path `next({ path/name: \"xxx\", replace: true)`\r\n\r\nNone of these behave in a way similar to the Github example initially mentioned.\r\n\r\n### What does the proposed API look like?\r\nI would propose that when calling `next()` in a navigation guard (or possibly anywhere a `location` can be received) that there be an option that would allow the instance to be replaced without changing the URL.  This could be a property like `changeURL: Boolean (default false)`.  I am honestly not sure what the best name would be but it seems simple enough.  Another option might be something like calling next with something indicating it should behave as if it failed to match a route (not prevent matching another route).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2088","RelatedDescription":"Closed issue \"Allow rendering an alternate route without redirect\" (#2088)"},{"Id":"301702419","IsPullRequest":true,"CreatedAt":"2018-03-02T10:58:53","Actor":"steffans","Number":"2086","RawContent":null,"Title":"Add jsdelivr to package.json","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2086","RelatedDescription":"Closed or merged PR \"Add jsdelivr to package.json\" (#2086)"},{"Id":"301281860","IsPullRequest":true,"CreatedAt":"2018-03-01T05:25:05","Actor":"DrSensor","Number":"2085","RawContent":null,"Title":"Support this.$router.options in Typescript","State":"open","Body":"There is a time when a user wants to access metadata that was defined in `router.ts` ([example](https://github.com/DrSensor/F.I.D.E/blob/develop/src/renderer/components/NavigationSidebar.vue#L93)). I notice that in the typedef `options` is missing.\r\n\r\n![screenshot from 2018-03-01 12-16-59](https://user-images.githubusercontent.com/4953069/36828284-6ed0e5d8-1d4b-11e8-9dc6-0a62c005c384.png)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2085","RelatedDescription":"Open PR \"Support this.$router.options in Typescript\" (#2085)"},{"Id":"301272914","IsPullRequest":true,"CreatedAt":"2018-03-01T04:20:01","Actor":"cironunes","Number":"2084","RawContent":null,"Title":"feat: introduce afterResolve navigation hook","State":"open","Body":"Still missing tests, but this gives an idea of what I'm trying to achieve.\r\n\r\nLooking forward to hear from you guys.\r\n\r\nCloses #2079 ","Url":"https://github.com/vuejs/vue-router/pull/2084","RelatedDescription":"Open PR \"feat: introduce afterResolve navigation hook\" (#2084)"},{"Id":"301263579","IsPullRequest":false,"CreatedAt":"2018-03-01T03:15:04","Actor":"TyroneYvesChen","Number":"2083","RawContent":null,"Title":"官网上部分例子应使用``而不是''","State":"closed","Body":"#如：const User = {\r\n  template: '<div>User {{ $route.params.id }}</div>'\r\n}","Url":"https://github.com/vuejs/vue-router/issues/2083","RelatedDescription":"Closed issue \"官网上部分例子应使用``而不是''\" (#2083)"},{"Id":"301257346","IsPullRequest":false,"CreatedAt":"2018-03-01T02:36:18","Actor":"decademoon","Number":"2082","RawContent":null,"Title":"beforeRouteEnter next callback is not called (in this very specific async situation)","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/df4Lnuw6/271/](http://jsfiddle.net/df4Lnuw6/271/)\r\n\r\n### Steps to reproduce\r\n- Have a `<router-view v-if=\"ready\">` in the root component's template with `ready` initially `false`.\r\n- Have a single route for path `/` whose component has a `beforeRouteEnter` hook.\r\n- Perform the following in the root component's `created` hook:\r\n  1. Replace the route with `/?x=1` (this causes the same component to be reused).\r\n  2. After a timeout, set `ready` to `true`.\r\n\r\n### What is expected?\r\nThe callback function passed to `next` in the `beforeRouteEnter` hook should be called.\r\n\r\n### What is actually happening?\r\nThe callback function passed to `next` in the `beforeRouteEnter` is not called.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2082","RelatedDescription":"Open issue \"beforeRouteEnter next callback is not called (in this very specific async situation)\" (#2082)"},{"Id":"301139822","IsPullRequest":true,"CreatedAt":"2018-02-28T18:50:58","Actor":"felipe-developer","Number":"2081","RawContent":null,"Title":"Starting portuguese (pt-br) translation","State":"open","Body":"I started the Portuguese translation (pt-br). I count on the help of those who want to collaborate.","Url":"https://github.com/vuejs/vue-router/pull/2081","RelatedDescription":"Open PR \"Starting portuguese (pt-br) translation\" (#2081)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"305675539","IsPullRequest":true,"CreatedAt":"2018-03-15T18:44:43","Actor":"DannyFeliz","Number":"1191","RawContent":null,"Title":"Update object spread operator stage","State":"open","Body":"Ref: https://github.com/tc39/proposal-object-rest-spread#status-of-this-proposal","Url":"https://github.com/vuejs/vuex/pull/1191","RelatedDescription":"Open PR \"Update object spread operator stage\" (#1191)"},{"Id":"305255470","IsPullRequest":false,"CreatedAt":"2018-03-14T17:24:15","Actor":"corsarioll","Number":"1190","RawContent":null,"Title":"push element in to state ","State":"closed","Body":"I try to add an element to an array but it returns this error\r\n\r\nTypeError: Cannot add property 5, object is not extensible\r\n    at Array.push (<anonymous>)\r\n    at Store.addProjectsMutation (store.js?adc6:67)\r\n    at wrappedMutationHandler (vuex.esm.js?358c:697)\r\n    at commitIterator (vuex.esm.js?358c:389)\r\n    at Array.forEach (<anonymous>)\r\n    at eval (vuex.esm.js?358c:388)\r\n    at Store._withCommit (vuex.esm.js?358c:495)\r\n    at Store.commit (vuex.esm.js?358c:387)\r\n    at Object.boundCommit [as commit] (vuex.esm.js?358c:335)\r\n    at eval (store.js?adc6:120)\r\n\r\neste es mi codigo \r\n\r\n`addProjectsMutation (state,newValue){\r\n            var test = {\r\n                name : \"jeisson\",\r\n                email : \"test@email.com\",\r\n                logoImage : \"https://files.genial.guru/files/news/part_2/20205/1215060-4-1-650-a542d8629a-1501787353.jpg\",\r\n                description : \"test description con espacios y saltos de linea   asd  asd  das  dasd\"\r\n            }\r\n            console.log(state.projects)\r\n            state.projects.push(test)\r\n        },\r\n`","Url":"https://github.com/vuejs/vuex/issues/1190","RelatedDescription":"Closed issue \"push element in to state \" (#1190)"},{"Id":"305156527","IsPullRequest":true,"CreatedAt":"2018-03-14T13:24:40","Actor":"Jinjiang","Number":"1189","RawContent":null,"Title":"[docs] fixed text cut issue (close #1179)","State":"open","Body":"Ref: #1179 ","Url":"https://github.com/vuejs/vuex/pull/1189","RelatedDescription":"Open PR \"[docs] fixed text cut issue (close #1179)\" (#1189)"},{"Id":"304920407","IsPullRequest":true,"CreatedAt":"2018-03-13T20:19:35","Actor":"alexswiontek","Number":"1188","RawContent":null,"Title":"simplify getter","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1188","RelatedDescription":"Open PR \"simplify getter\" (#1188)"},{"Id":"304734995","IsPullRequest":false,"CreatedAt":"2018-03-13T14:25:14","Actor":"GMounir","Number":"1187","RawContent":null,"Title":"common state namespace","State":"closed","Body":"### Version\r\n3.0.0\r\n\r\nI have state with common objects for example:\r\n\r\n```\r\nexport default {\r\n\tresource: {\r\n\t\tall: [],\r\n\t\tselected: null\r\n\t},\r\n        ....\r\n}\r\n```\r\n\r\ni import the state to use in components  \r\n\r\n```\r\nimport state from '@common/store/state'\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations\r\n}\r\n```\r\n\r\nafter that i use namespace in every component everything working, but one thing i don't know if is right or not:\r\n\r\ni'm working in namespace **test1**\r\nif i did an action to resource for example fill **resource.all[...]**\r\nthe namespace **test2** also is filled.\r\ni tried _.clone(), _.assign() not working or i did not used right.\r\nPlease someone help me...\r\n\r\n\r\n### What is expected?\r\nexpected: fill only the state that i'm woking in\r\n\r\n### What is actually happening?\r\nhappening: fill all states\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1187","RelatedDescription":"Closed issue \"common state namespace\" (#1187)"},{"Id":"304732374","IsPullRequest":false,"CreatedAt":"2018-03-13T11:49:06","Actor":"GMounir","Number":"1186","RawContent":null,"Title":"Common state namespace ","State":"closed","Body":"I have state with common objects for example:\r\n\r\n```\r\nexport default {\r\n\tresource: {\r\n\t\tall: [],\r\n\t\tselected: null\r\n\t},\r\n        ....\r\n}\r\n```\r\n\r\ni import the state to use in components  \r\n\r\n```\r\nimport state from '@common/store/state'\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations\r\n}\r\n```\r\n\r\nafter that i use namespace in every component everything working, but one thing i don't know if is right or not:\r\n\r\ni'm working in namespace **test1**\r\nif i did an action to resource for example fill **resource.all[...]**\r\nthe namespace **test2** also is filled.\r\ni tried _.clone(), _.assign() not working or i did not used right.\r\nPlease someone help me...\r\n","Url":"https://github.com/vuejs/vuex/issues/1186","RelatedDescription":"Closed issue \"Common state namespace \" (#1186)"},{"Id":"304730031","IsPullRequest":false,"CreatedAt":"2018-03-13T11:41:26","Actor":"GMounir","Number":"1185","RawContent":null,"Title":"Common state with namespace ","State":"closed","Body":"I have state with common objects for example:\r\n\r\n```\r\nexport default {\r\n\tresource: {\r\n\t\tall: [],\r\n\t\tselected: null\r\n\t},\r\n        ....\r\n}\r\n```\r\n\r\ni import the state to use in components  \r\n\r\n```\r\nimport state from '@common/store/state'\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters,\r\n\tactions,\r\n\tmutations\r\n}\r\n```\r\n\r\nafter that i use namespace in every component everything working, but one thing i don't know if is right or not:\r\n\r\ni'm working in namespace **test1**\r\nif i did an action to resource for example fill **resource.all[...]**\r\nthe namespace **test2** also is filled.\r\ni tried _.clone(), _.assign() not working or i did not used right.\r\nPlease someone help me...\r\n","Url":"https://github.com/vuejs/vuex/issues/1185","RelatedDescription":"Closed issue \"Common state with namespace \" (#1185)"},{"Id":"304625771","IsPullRequest":false,"CreatedAt":"2018-03-13T04:38:45","Actor":"Shyam-Chen","Number":"1184","RawContent":null,"Title":"register a nested module","State":"closed","Body":"Replace arrays with dots.\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n});\r\n```\r\n\r\nto\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule('nested.myModule', {\r\n  // ...\r\n});\r\n```","Url":"https://github.com/vuejs/vuex/issues/1184","RelatedDescription":"Closed issue \"register a nested module\" (#1184)"},{"Id":"304608830","IsPullRequest":true,"CreatedAt":"2018-03-13T03:51:20","Actor":"Jinjiang","Number":"1183","RawContent":null,"Title":"[docs][zh-cn] translated #1173","State":"closed","Body":"#1173 Mention payload in action handler in API\r\n/ping @Justineo \r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1183","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] translated #1173\" (#1183)"},{"Id":"304302778","IsPullRequest":false,"CreatedAt":"2018-03-12T09:51:42","Actor":"1402310095","Number":"1182","RawContent":null,"Title":"动态注册和卸载module导致页面上所有的组件都销毁重建","State":"closed","Body":"  vuex版本2.4.0，使用store.registerModule和store.unregisterModule会导致页面上都组件销毁重建，可以看到其他组件的destroyed钩子被触发\r\n有没有能够不让组件刷新的办法？","Url":"https://github.com/vuejs/vuex/issues/1182","RelatedDescription":"Closed issue \"动态注册和卸载module导致页面上所有的组件都销毁重建\" (#1182)"},{"Id":"304245734","IsPullRequest":false,"CreatedAt":"2018-03-12T05:32:08","Actor":"eeerrrttty","Number":"1181","RawContent":null,"Title":"Problem with load state","State":"closed","Body":"My load state is really crazy, i have a button that is disabled on loading content from firebase, but my vuex is showing as false.\r\n\r\nButton working as normally, but im not being able to track the changes.\r\n\r\n`import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as firebase from 'firebase'\r\nimport createPersistedState from 'vuex-persistedstate'\r\n\r\nVue.use(Vuex)\r\n\r\nexport const store = new Vuex.Store({\r\n  state: {\r\n    loadedPosts: [{\r\n      imageUrl: '',\r\n      id: '',\r\n      description: ''\r\n    }],\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n  },\r\n  plugins: [createPersistedState()],\r\n  mutations: {\r\n    setUser (state, payload) {\r\n      state.user = payload\r\n    },\r\n    createPost (state, payload) {\r\n      state.loadedPosts.push(payload)\r\n    },\r\n    setLoadedPosts (state, payload) {\r\n      state.loadedPosts = payload\r\n    },\r\n    setLoading (state, payload) {\r\n      state.loading = payload\r\n    },\r\n    setError (state, payload) {\r\n      state.error = payload\r\n    },\r\n    clearError (state) {\r\n      state.error = null\r\n    }\r\n  },\r\n  actions: {\r\n    loadPosts ({commit}) {\r\n      firebase.database().ref('posts').orderByKey().limitToLast(5).once('value')\r\n        .then((data) => {\r\n          const posts = []\r\n          const obj = data.val()\r\n          for (let key in obj) {\r\n            posts.push({\r\n              id: key,\r\n              description: obj[key].description,\r\n              imageUrl: obj[key].imageUrl,\r\n              date: obj[key].date,\r\n              creatorId: obj[key].creatorId\r\n            })\r\n          }\r\n          commit('setLoadedPosts', posts)\r\n          commit('setLoading', false)\r\n        })\r\n    },\r\n    createPost ({commit, getters}, payload) {\r\n      const post = {\r\n        description: payload.description,\r\n        date: payload.date.toISOString(),\r\n        creatorId: getters.user.id\r\n      }\r\n      let imageUrl\r\n      let key\r\n      firebase.database().ref('posts').push(post)\r\n        .then((data) => {\r\n          key = data.key\r\n          return key\r\n        })\r\n        .then(key => {\r\n          const filename = payload.image.name\r\n          const ext = filename.slice(filename.lastIndexOf('.'))\r\n          return firebase.storage().ref('posts/' + key + ext).put(payload.image)\r\n        })\r\n        .then(fileData => {\r\n          imageUrl = fileData.metadata.downloadURLs[0]\r\n          return firebase.database().ref('posts').child(key).update({imageUrl: imageUrl})\r\n        })\r\n        .then(() => {\r\n          commit('createPost', {\r\n            ...post,\r\n            imageUrl: imageUrl,\r\n            id: key\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    signUserIn ({commit}, payload) {\r\n      commit('clearError')\r\n      commit('setLoading', true)\r\n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password)\r\n        .then(\r\n          user => {\r\n            commit('setLoading', false)\r\n            const newUser = {\r\n              id: user.uid\r\n            }\r\n            commit('setUser', newUser)\r\n          }\r\n        )\r\n        .catch(\r\n          error => {\r\n            commit('setLoading', false)\r\n            commit('setError', error)\r\n            console.log(error)\r\n          }\r\n        )\r\n    },\r\n    signUserUp ({commit}, payload) {\r\n      commit('clearError')\r\n      commit('setLoading', true)\r\n      firebase.auth().createUserWithEmailAndPassword(payload.email, payload.password)\r\n        .then(\r\n          user => {\r\n            commit('setLoading', false)\r\n            const newUser = {\r\n              id: user.uid\r\n            }\r\n            commit('setUser', newUser)\r\n            firebase.auth().currentUser.sendEmailVerification()\r\n              .then(function () {\r\n                alert('Confirme sua conta. Verifique seu e-mail e caixa de spam!')\r\n              })\r\n              .catch(\r\n                error => {\r\n                  commit('setLoading', false)\r\n                  commit('setError', error)\r\n                  console.log(error)\r\n                }\r\n              )\r\n          }\r\n        )\r\n        .catch(\r\n          error => {\r\n            commit('setLoading', false)\r\n            commit('setError', error)\r\n            console.log(error)\r\n          }\r\n        )\r\n    },\r\n    autoSignIn ({commit}, payload) {\r\n      commit('setUser', {id: payload.uid, email: payload.email, emailVerified: payload.emailVerified})\r\n    },\r\n    logout ({commit}) {\r\n      firebase.auth().signOut()\r\n      commit('setUser', null)\r\n    },\r\n    clearError ({commit}, payload) {\r\n      commit('clearError')\r\n    }\r\n  },\r\n  getters: {\r\n    user (state) {\r\n      return state.user\r\n    },\r\n    loadedPosts (state) {\r\n      return state.loadedPosts\r\n    },\r\n    loadedPost (state) {\r\n      return (postId) => {\r\n        return state.loadedPosts.find((post) => {\r\n          return post.id === postId\r\n        })\r\n      }\r\n    },\r\n    loading (state) {\r\n      return state.loading\r\n    },\r\n    error (state) {\r\n      return state.error\r\n    }\r\n  }\r\n})\r\n`\r\n\r\nload just not getting updated!!!","Url":"https://github.com/vuejs/vuex/issues/1181","RelatedDescription":"Closed issue \"Problem with load state\" (#1181)"},{"Id":"304162962","IsPullRequest":false,"CreatedAt":"2018-03-11T15:34:19","Actor":"parzh","Number":"1180","RawContent":null,"Title":"Add support for ES5 native getters in state","State":"closed","Body":"### What problem does this feature solve?\r\nIt allows on-demand invocations of getters.\r\n\r\nSee example: https://codepen.io/parzh/pen/KowYJQ?editors=1010\r\n\r\nIn the given example Vuex store is used to store collection of newly created accounts. Every account is designed so it has a list of related `transactions` and getter `balance`, that returns sum of all the transactions.  \r\nEven in the case with a few accounts the amount of phantom invocations is off the limits.\r\n\r\n***\r\n\r\nAlthough on-demand invocations are currently possible (sort of) through usage of Vuex getters, nevertheless such solutions require iterations:\r\n- convertion of every single account to Vuex-compatible object;\r\n- some sort of identification, that iteratively finds the target account and returns its balance;\r\n- dynamic creation of a corresponding Vuex store for every single account in a collection (huh?);\r\n\r\nNeither of the solutions above seems reasonable:\r\n- Vuex-compatible object is one with `getBalance()` method, but balance is rather dynamic property;\r\n- iteration, obviously, - number of accounts may be arbitrarily large;\r\n- it is planned that accounts can be easily created and almost as easily deleted;\r\n\r\n### What does the proposed API look like?\r\n*no additional API is expected*\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1180","RelatedDescription":"Closed issue \"Add support for ES5 native getters in state\" (#1180)"},{"Id":"303551825","IsPullRequest":true,"CreatedAt":"2018-03-10T01:15:13","Actor":"kazupon","Number":"1177","RawContent":null,"Title":"update ja docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1177","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1177)"},{"Id":"303523876","IsPullRequest":false,"CreatedAt":"2018-03-09T11:34:22","Actor":"dotnetCarpenter","Number":"1176","RawContent":null,"Title":"Publisher/subscriber pattern in vuex ","State":"closed","Body":"### What problem does this feature solve?\r\n## To notify components in a long running task ##\r\n\r\nWhile porting some code to a vuex module, I had to re-think the synchronisation pattern and while the reactive pattern is the obvious choice, I went back to pub/sub as described in https://github.com/vuejs/vuex/issues/673#issuecomment-371469565 and posted on https://forum.vuejs.org/t/solved-publisher-subscriber-pattern-in-vuex/29176.\r\n\r\nThe gist is to notify components in a long running task.\r\n\r\nShort of implementing a streaming pattern, I think that evolving the `subscribe` API is an easier solution that solve the use-case efficiently.\r\n\r\nCurrently there exist two API calls for pub/sub. `subscribe` and `subscribeAction`. While `subscribe` listen to all mutations (making it inefficient), `subscribeAction` is pretty limiting. Instead of suggesting and implementing `subscribeCommit`, I suggest leveraging vue's `emit`/`on` system. The plugin system is subject to this exact same discussion.\r\n\r\nBy using vue's pub/sub system, we can remove `subscribeAction` and have a much more flexible system. I made a hack of this, posted in the vue forum, that works very well.\r\n\r\n_Inside vuex action or commit:_\r\n```js\r\nthis._vm.$emit('event', payload)\r\n```\r\n\r\n_Inside a vue component_\r\n```js\r\nthis.$store._vm.$on('event', payload => {/* do something useful */})\r\n```\r\n\r\nBefore doing a PR, I hope to discuss this with you.\r\n\r\nI should note that, my suggestion works equally well in _classic_ mode and _module_ mode.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nstore.subscribe('pages/loaded', (payload, state) => { /* do something useful */ })\r\n```\r\nNote that `mutation` is changed to `payload` because the type is now insignificant (the first argument to subscribe tells us what we're interested in).\r\n\r\nInside a mutation, getter or action:\r\n```js\r\nthis.nofity('event', { a: 'b', c: ['d'] })\r\n```\r\n\r\nFull list of API change:\r\n1. `store.subscribe`\r\n2. `store.nofity`\r\n3. `store.unsubscribe`\r\n4. `store.subscribeOnce`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1176","RelatedDescription":"Closed issue \"Publisher/subscriber pattern in vuex \" (#1176)"},{"Id":"303577490","IsPullRequest":false,"CreatedAt":"2018-03-08T18:16:53","Actor":"bichikim","Number":"1178","RawContent":null,"Title":"Is this safety way?","State":"closed","Body":"### What problem does this feature solve?\r\nUsing a custom property in vuex\r\n\r\n### What does the proposed API look like?\r\n    store.subscribeAction((action, state) => {\r\n      if(!state[sSymbol]){\r\n        state[sSymbol] = myToolForSomething\r\n      }\r\n    })\r\n\r\nin vuex plugin\r\n\r\nIt looks likes working well\r\n\r\nfor example\r\n```\r\nconst actions = {\r\n  a({state}, payload) {\r\n    state[sSymbol](gogogo)\r\n  },\r\n} //working\r\n```\r\n\r\n\r\nWhat do you guys think?\r\nIs it ok to use in production?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1178","RelatedDescription":"Closed issue \"Is this safety way?\" (#1178)"},{"Id":"303578776","IsPullRequest":false,"CreatedAt":"2018-03-08T18:12:43","Actor":"Toltar","Number":"1179","RawContent":null,"Title":"Found text cut off in API Documentation","State":"open","Body":"Wanted to report that in the [api documentation](https://vuex.vuejs.org/en/api.html), there is cut off where it shows the arguments of the capture and dispatch methods. See image below.\r\n\r\n![documentationcutsoff](https://user-images.githubusercontent.com/6003536/37168025-310ca088-22c9-11e8-9347-4956d4916da5.PNG)\r\n","Url":"https://github.com/vuejs/vuex/issues/1179","RelatedDescription":"Open issue \"Found text cut off in API Documentation\" (#1179)"},{"Id":"303518130","IsPullRequest":false,"CreatedAt":"2018-03-08T15:21:43","Actor":"dotnetCarpenter","Number":"1175","RawContent":null,"Title":"Publisher/subscriber pattern in vuex","State":"closed","Body":"While porting some code to a vuex module, I had to re-think the synchronisation pattern and while the reactive pattern is the obvious choice, I went back to pub/sub as described in https://github.com/vuejs/vuex/issues/673#issuecomment-371469565 and posted on https://forum.vuejs.org/t/solved-publisher-subscriber-pattern-in-vuex/29176.\r\n\r\nThe gist is to notify components in a long running task.\r\n\r\nShort of implementing a streaming pattern, I think that evolving the `subscribe` API is an easier solution that solve the use-case efficiently.\r\n\r\nCurrently there exist two API calls for pub/sub. `subscribe` and `subscribeAction`. While `subscribe` listen to all mutations (making it inefficient), `subscribeAction` is pretty limiting. Instead of suggesting and implementing `subscribeCommit`, I suggest leveraging vue's `emit`/`on` system. The plugin system is subject to this exact same discussion.\r\n\r\nBy using vue's pub/sub system, we can remove `subscribeAction` and have a much more flexible system. I made a hack of this, posted in the vue forum, that works very well.\r\n\r\n_Inside vuex action or commit:_\r\n```js\r\nthis._vm.$emit('event', payload)\r\n```\r\n\r\n_Inside a vue component_\r\n```js\r\nthis.$store._vm.$on('event', payload => {/* do something useful */})\r\n```\r\n\r\nBefore doing a PR, I hope to discuss this with you.\r\n\r\nI should note that, my suggestion works equally well in _classic_ mode and _module_ mode.","Url":"https://github.com/vuejs/vuex/issues/1175","RelatedDescription":"Closed issue \"Publisher/subscriber pattern in vuex\" (#1175)"},{"Id":"303303960","IsPullRequest":false,"CreatedAt":"2018-03-08T06:28:40","Actor":"rawbin-","Number":"1174","RawContent":null,"Title":"Error: [vuex] Do not mutate vuex store state outside mutation handlers.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/m391k2vm8p](https://codesandbox.io/s/m391k2vm8p)\r\n\r\n### Steps to reproduce\r\nchange the grid lines\r\n\r\n### What is expected?\r\nshow errors\r\n\r\n### What is actually happening?\r\nno errors\r\n<img width=\"1651\" alt=\"qq20180308-073512 2x\" src=\"https://user-images.githubusercontent.com/8169783/37125015-a0c59d5e-22a5-11e8-99c1-53e85970c4a1.png\">\r\n\r\n---\r\nany good idea to do with the editable grids with vue and vuex?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1174","RelatedDescription":"Closed issue \"Error: [vuex] Do not mutate vuex store state outside mutation handlers.\" (#1174)"},{"Id":"303010970","IsPullRequest":true,"CreatedAt":"2018-03-07T13:04:30","Actor":"st-sloth","Number":"1173","RawContent":null,"Title":"docs: Mention payload in action handler in API","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1173","RelatedDescription":"Closed or merged PR \"docs: Mention payload in action handler in API\" (#1173)"},{"Id":"302363093","IsPullRequest":false,"CreatedAt":"2018-03-06T07:54:08","Actor":"rawbin-","Number":"1171","RawContent":null,"Title":"any good idea for us to express editable list using vuex?","State":"closed","Body":"### Version\r\n2.3.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/38n8j41vzq](https://codesandbox.io/s/38n8j41vzq)\r\n\r\n### Steps to reproduce\r\njust open the page\r\n\r\n### What is expected?\r\nany good way to bind form using vuex especially when there are many form item to bind\r\n\r\n### What is actually happening?\r\nfor every form item we do like this \r\n\r\n```\r\n<input v-model=\"message\">\r\n// ...\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.myModule.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  }\r\n}\r\n```\r\nin case that we use an module to express an data structure,it turns out \r\n\r\n```\r\n<input v-model=\"message\">\r\n// ...\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.myModule.someObj.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  },\r\n phone: {\r\n    get () {\r\n      return this.$store.state.myModule.someObj.phone\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updatePhone', value)\r\n    }\r\n  }\r\n}\r\n}\r\n```\r\nit's boring to do this on every form item when there is much more to do\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1171","RelatedDescription":"Closed issue \"any good idea for us to express editable list using vuex?\" (#1171)"},{"Id":"302584175","IsPullRequest":false,"CreatedAt":"2018-03-06T06:52:52","Actor":"Vheissu","Number":"1172","RawContent":null,"Title":"Decoupling Vuex from Vue","State":"open","Body":"### What problem does this feature solve?\r\nI do not work with Vue.js as my primary day-to-day library of choice, however, when I have and have used the VueX state management library with it, it was fantastic. As someone who has worked with Redux before, I appreciated just how much more simple VueX was in comparison to the over-engineered and complicated Redux library.\r\n\r\nAs it currently stands, VueX is tightly coupled to Vue. This means VueX cannot be used with any other framework or library. Would it ever be a consideration to make VueX a standalone library and remove the Vue dependency?\r\n\r\nAt the end of the day, VueX allows the user to work with a bunch of data inside of a single object tree. I have not done the investigative work just yet to see how much VueX relies on Vue, but I would love to know if the team are open to making it a standalone state management solution? It's one of the best state management libraries I have ever used.\r\n\r\n### What does the proposed API look like?\r\nThe proposed API would resemble that of the current plugin. In-fact, the only thing I could see being different is that you do not register the plugin using `Vue.use(Vuex)` and just instantiate it directly and assign the result to a variable/constant called `store` or whatever.\r\n\r\nYou would then configure your state management using the same syntax.\r\n\r\n```\r\nimport Vuex from 'vuex'\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    counter: 0\r\n  },\r\n  getters: {\r\n    counter: state => state.counter * 2\r\n  },\r\n  mutations: {\r\n    increment: state => state.counter  \r\n  }\r\n});\r\n\r\n// Usage\r\n\r\nconsole.log(store.getters.counter);\r\nstore.commit('increment');\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1172","RelatedDescription":"Open issue \"Decoupling Vuex from Vue\" (#1172)"},{"Id":"302088037","IsPullRequest":true,"CreatedAt":"2018-03-04T14:01:52","Actor":"blackmiaool","Number":"1170","RawContent":null,"Title":"docs: mention mapState needs injected store","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1170","RelatedDescription":"Open PR \"docs: mention mapState needs injected store\" (#1170)"},{"Id":"301516650","IsPullRequest":true,"CreatedAt":"2018-03-01T18:47:18","Actor":"davestewart","Number":"1169","RawContent":null,"Title":"Made getter property vs method syntax more explicit","State":"open","Body":"I've been using Vuex for about a year, and I never realised you could access store getters as methods.\r\n\r\nThis docs update makes the ability to do this explicit, as well as adding notes on caching.","Url":"https://github.com/vuejs/vuex/pull/1169","RelatedDescription":"Open PR \"Made getter property vs method syntax more explicit\" (#1169)"},{"Id":"301164712","IsPullRequest":false,"CreatedAt":"2018-03-01T08:21:15","Actor":"hrasekj","Number":"1167","RawContent":null,"Title":"If module state is an array his submodules are not reactive","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nvkupd14/16/](https://jsfiddle.net/nvkupd14/16/)\r\n\r\n### Steps to reproduce\r\nCreate an module which have his state as Array. Then create submodule for it.\r\n\r\n### What is expected?\r\nIm expecting that computed properties in modules will react to changes on submodule.\r\n\r\n### What is actually happening?\r\nVue does not map his getters & setters to submodule. So submodules state is changing, but computed properties not.\r\n\r\n---\r\nIt should warn user or something.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1167","RelatedDescription":"Closed issue \"If module state is an array his submodules are not reactive\" (#1167)"},{"Id":"301212285","IsPullRequest":false,"CreatedAt":"2018-02-28T22:42:39","Actor":"DusanMilko","Number":"1168","RawContent":null,"Title":"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'","State":"closed","Body":"All I'm doing is\r\n\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nWhen I compile my js with webpack I get \r\n`Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'`","Url":"https://github.com/vuejs/vuex/issues/1168","RelatedDescription":"Closed issue \"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'\" (#1168)"},{"Id":"300565264","IsPullRequest":true,"CreatedAt":"2018-02-27T10:18:55","Actor":"jacksonjoseph","Number":"1166","RawContent":null,"Title":"Update intro.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1166","RelatedDescription":"Closed or merged PR \"Update intro.md\" (#1166)"},{"Id":"300241798","IsPullRequest":false,"CreatedAt":"2018-02-26T14:58:31","Actor":"chetzof","Number":"1165","RawContent":null,"Title":"Vuex triggers the 'updated' hook when a completely unrelated dynamic module is being registered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/132227/](https://jsfiddle.net/50wL7mdz/132227/)\r\n\r\n### Steps to reproduce\r\nNo steps to reproduce.\r\nJust open the jsfiddle, you will see an alert that is called by the updated() hook. \r\n\r\n### What is expected?\r\nThe alert should not be displayed  because the registration of a new unrelated dynamic module should not trigger anything anywhere that is has no connection to.\r\n\r\n### What is actually happening?\r\nThe component triggers updated() hook when dynamically registering an unrelated module\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1165","RelatedDescription":"Closed issue \"Vuex triggers the 'updated' hook when a completely unrelated dynamic module is being registered\" (#1165)"},{"Id":"300150382","IsPullRequest":true,"CreatedAt":"2018-02-26T09:03:21","Actor":"yanlee26","Number":"1164","RawContent":null,"Title":"it means this?","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1164","RelatedDescription":"Closed or merged PR \"it means this?\" (#1164)"},{"Id":"300128951","IsPullRequest":false,"CreatedAt":"2018-02-26T07:02:08","Actor":"cmingxu","Number":"1163","RawContent":null,"Title":"Is it possible to call some other namespace's  getters from rootGetters?  ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n// some namespaced moduleA\r\n  getters: {\r\n    bootstrapped: ({ rootGetters }) => {\r\n      console.log( rootGetters['moduleB/getterFunc']() )\r\n    }\r\n  }","Url":"https://github.com/vuejs/vuex/issues/1163","RelatedDescription":"Closed issue \"Is it possible to call some other namespace's  getters from rootGetters?  \" (#1163)"},{"Id":"298980413","IsPullRequest":false,"CreatedAt":"2018-02-21T13:59:18","Actor":"joachimboggild","Number":"1162","RawContent":null,"Title":"Hard-to-locate error when providing wrong parameter type to mapState","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/048lw4q59n](https://codesandbox.io/s/048lw4q59n)\r\n\r\n### Steps to reproduce\r\n1) Open code sandbox provided.\r\n2) Look inside console to the error message provided.\r\n\r\nTo fix the problem, include brackets inside the mapState statement on line 97 in the HelloWorld.vue file.\r\n\r\n### What is expected?\r\nIt was expected that an error message would state that the parameter for the mapState function was invalid in 'HelloWorld.vue'.\r\n\r\n### What is actually happening?\r\nThis error message is returned: \r\n\r\n```\r\n[Vue warn]: Failed to resolve async component: function HelloWorld() {\r\n  return _promise2.default.resolve().then(function () {\r\n    return require(\"./components/HelloWorld\");\r\n  });\r\n}\r\nReason: TypeError: Cannot convert undefined or null to object\r\n```\r\n\r\n---\r\nI just thought that this was a difficult error to track, because the error message provided did not point towards the actual error. If it is possible to make the error message more precise, it would be great.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1162","RelatedDescription":"Open issue \"Hard-to-locate error when providing wrong parameter type to mapState\" (#1162)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-03-16T05:30:35.2928918Z","RunDurationInMilliseconds":4655}