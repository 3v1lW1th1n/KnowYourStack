{"Data":{"GitHub":{"Issues":[{"Id":"380502949","IsPullRequest":false,"CreatedAt":"2018-11-14T02:00:30","Actor":"nsulikowski","Number":"1617","RawContent":null,"Title":"How to get data from IDataView","State":"open","Body":"How can I get data from IDataView without a class for the record?\r\nFor instance convert IDataView to object[,] just by querying the Schema\r\nThanks,\r\nNestor","Url":"https://github.com/dotnet/machinelearning/issues/1617","RelatedDescription":"Open issue \"How to get data from IDataView\" (#1617)"},{"Id":"380470007","IsPullRequest":false,"CreatedAt":"2018-11-13T23:29:17","Actor":"sfilipi","Number":"1616","RawContent":null,"Title":"Expose the parameters of the NormalizerTransformer","State":"open","Body":"The various flavors of the NormalizerTransformer have non-public visibility over the parameters. Users need to be able to inspect those values.  ","Url":"https://github.com/dotnet/machinelearning/issues/1616","RelatedDescription":"Open issue \"Expose the parameters of the NormalizerTransformer\" (#1616)"},{"Id":"380390895","IsPullRequest":false,"CreatedAt":"2018-11-13T19:40:32","Actor":"daholste","Number":"1615","RawContent":null,"Title":"Rocket AutoML engine stops very early","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.1\r\n\r\n### Issue\r\nThe Rocket AutoML engine stops very early for numerical datasets. For a numerical binary classification problem, the engine always stops after 14 iterations.\r\nThe Rocket engine makes it successfully thru its first stage, running all 12 landmark algorithms. Then, the engine makes it into its second stage, and runs thru one batch of the top 2 two algorithms. After that, the engine stops, never making it to stage 3, 4, etc.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1615","RelatedDescription":"Open issue \"Rocket AutoML engine stops very early\" (#1615)"},{"Id":"380387202","IsPullRequest":false,"CreatedAt":"2018-11-13T19:30:48","Actor":"daholste","Number":"1614","RawContent":null,"Title":"Cannot select accuracy as target metric","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.1\r\n\r\n### Issue\r\nCannot select 'Accuracy' as target metric\r\n\r\n- **What did you do?**\r\nRan MML command line: `dotnet MML.dll execgraph \"C:\\Benchmarking\\automl_graph.json`\r\n\r\nContents of automl_.graph.json:\r\n```json\r\n{\r\n\t\"Inputs\": {\r\n\t\t\"file_train\": \"D:\\\\SplitDatasets\\\\ExcitementFG2_train.csv\",\r\n\t\t\"file_test\": \"D:\\\\SplitDatasets\\\\ExcitementFG2_valid.csv\"\r\n\t},\r\n\t\"Nodes\": [{\r\n\t\t\t\"Inputs\": {\r\n\t\t\t\t\"CustomSchema\": \"sep=, col=Label:R4:78 col=Features1:R4:0-77 col=Features2:R4:79-202 header=+\",\r\n\t\t\t\t\"InputFile\": \"$file_train\"\r\n\t\t\t},\r\n\t\t\t\"Name\": \"Data.CustomTextLoader\",\r\n\t\t\t\"Outputs\": {\r\n\t\t\t\t\"Data\": \"$data_train\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"Inputs\": {\r\n\t\t\t\t\"CustomSchema\": \"sep=, col=Label:R4:78 col=Features1:R4:0-77 col=Features2:R4:79-202 header=+\",\r\n\t\t\t\t\"InputFile\": \"$file_test\"\r\n\t\t\t},\r\n\t\t\t\"Name\": \"Data.CustomTextLoader\",\r\n\t\t\t\"Outputs\": {\r\n\t\t\t\t\"Data\": \"$data_test\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"Inputs\": {\r\n\t\t\t\t\"BatchSize\": 3,\r\n\t\t\t\t\"StateArguments\": {\r\n\t\t\t\t\t\"Name\": \"AutoMlState\",\r\n\t\t\t\t\t\"Settings\": {\r\n\t\t\t\t\t\t\"Engine\": {\r\n\t\t\t\t\t\t\t\"Name\": \"Rocket\",\r\n\t\t\t\t\t\t\t\"Settings\": {}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Metric\": \"Accuracy\",\r\n\t\t\t\t\t\t\"TerminatorArgs\": {\r\n\t\t\t\t\t\t\t\"Name\": \"IterationLimited\",\r\n\t\t\t\t\t\t\t\"Settings\": {\r\n\t\t\t\t\t\t\t\t\"FinalHistoryLength\": 100\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"TrainerKind\": \"SignatureBinaryClassifierTrainer\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"TestingData\": \"$data_test\",\r\n\t\t\t\t\"TrainingData\": \"$data_train\"\r\n\t\t\t},\r\n\t\t\t\"Name\": \"Models.PipelineSweeper\",\r\n\t\t\t\"Outputs\": {\r\n\t\t\t\t\"Results\": \"$output_data\",\r\n\t\t\t\t\"State\": \"$xyz\"\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"Outputs\": {\r\n\t\t\"output_data\": \"C:\\\\Benchmarking\\\\01-ResultsOut.csv\"\r\n\t}\r\n}\r\n```\r\n\r\n- **What happened?**\r\nAn exception was thrown (below)\r\n\r\n- **What did you expect?**\r\nA successful run\r\n\r\n### Source code / logs\r\n\r\n--- Command line args ---\r\n`dotnet MML.dll execgraph C:\\Benchmarking\\automl_graph.json`\r\n\r\n--- Exception message ---\r\n```\r\n(1) Unexpected exception: Requested value 'Accuracy' is not a member of the Enum type 'Metrics', 'System.InvalidOperationException'\r\n\r\nException context:\r\n    Throwing component: Environment\r\n\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.InputBuilder.ParseJsonValue(IExceptionContext ectx, Type type, Attributes attributes, JToken value, ComponentCatalog catalog) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\InputBuilder.cs:line 441\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.InputBuilder.TrySetValueJson(String name, JToken value) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\InputBuilder.cs:line 181\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.InputBuilder.GetComponentJson(IExceptionContext ectx, Type signatureType, String name, JObject settings, ComponentCatalog catalog) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\InputBuilder.cs:line 559\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.InputBuilder.ParseJsonValue(IExceptionContext ectx, Type type, Attributes attributes, JToken value, ComponentCatalog catalog) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\InputBuilder.cs:line 485\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.InputBuilder.TrySetValueJson(String name, JToken value) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\InputBuilder.cs:line 181\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointNode.CheckAndSetInputValue(KeyValuePair`2 pair) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 680\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointNode..ctor(IHostEnvironment env, IChannel ch, RunContext context, String id, String entryPointName, JObject inputs, JObject outputs, Boolean checkpoint, String stageId, Single cost, String label, String group, String weight, String name) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 504\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointNode.ValidateNodes(IHostEnvironment env, RunContext context, JArray nodes, String label, String group, String weight, String name) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 929\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointGraph..ctor(IHostEnvironment env, JArray nodes) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 1003\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner..ctor(IHostEnvironment env, JArray nodes) in C:\\MLDotNet\\src\\Microsoft.ML.Legacy\\Runtime\\EntryPoints\\JsonUtils\\GraphRunner.cs:line 32\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.ExecuteGraphCommand.Run() in C:\\MLDotNet\\src\\Microsoft.ML.Legacy\\Runtime\\EntryPoints\\JsonUtils\\ExecuteGraphCommand.cs:line 62\r\n   at Microsoft.ML.Runtime.Tools.Maml.MainCore(ConsoleEnvironment env, String args, Boolean alwaysPrintStacktrace) in C:\\MLDotNet\\src\\Microsoft.ML.Maml\\MAML.cs:line 139\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/1614","RelatedDescription":"Open issue \"Cannot select accuracy as target metric\" (#1614)"},{"Id":"380385102","IsPullRequest":false,"CreatedAt":"2018-11-13T19:25:26","Actor":"daholste","Number":"1613","RawContent":null,"Title":"Exception on 'IgnoreColumns' in input","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.1\r\n\r\n### Issue\r\n\r\n- **What did you do?** \r\nRan MML command line: execgraph \"C:\\Benchmarking\\automl_graph.json\"\r\n\r\nContents of automl_.graph.json:\r\n\r\n```json\r\n{\r\n  \"Inputs\": {\r\n    \"file_train\": \"D:\\\\SplitDatasets\\\\ExcitementFG2_train.csv\",\r\n    \"file_test\": \"D:\\\\SplitDatasets\\\\ExcitementFG2_valid.csv\"\r\n  },\r\n  \"Nodes\": [\r\n    {\r\n      \"Inputs\": {\r\n        \"CustomSchema\": \"sep=, col=Label:R4:78 col=Features1:R4:0-77 col=Features2:R4:79-202 header=+\",\r\n        \"InputFile\": \"$file_train\"\r\n      },\r\n      \"Name\": \"Data.CustomTextLoader\",\r\n      \"Outputs\": {\r\n        \"Data\": \"$data_train\"\r\n      }\r\n    },\r\n    {\r\n      \"Inputs\": {\r\n        \"CustomSchema\": \"sep=, col=Label:R4:78 col=Features1:R4:0-77 col=Features2:R4:79-202 header=+\",\r\n        \"InputFile\": \"$file_test\"\r\n      },\r\n      \"Name\": \"Data.CustomTextLoader\",\r\n      \"Outputs\": {\r\n        \"Data\": \"$data_test\"\r\n      }\r\n    },\r\n    {\r\n      \"Inputs\": {\r\n        \"BatchSize\": 3,\r\n        \"StateArguments\": {\r\n          \"Name\": \"AutoMlState\",\r\n          \"Settings\": {\r\n            \"Engine\": {\r\n              \"Name\": \"Rocket\",\r\n              \"Settings\": {}\r\n            },\r\n            \"Metric\": \"Accuracy\",\r\n            \"TerminatorArgs\": {\r\n              \"Name\": \"IterationLimited\",\r\n              \"Settings\": {\r\n                \"FinalHistoryLength\": 100\r\n              }\r\n            },\r\n            \"TrainerKind\": \"SignatureBinaryClassifierTrainer\"\r\n          }\r\n        },\r\n        \"TestingData\": \"$data_test\",\r\n        \"TrainingData\": \"$data_train\",\r\n\t\t\"IgnoreColumns\": [\"cost\"]\r\n      },\r\n      \"Name\": \"Models.PipelineSweeper\",\r\n      \"Outputs\": {\r\n        \"Results\": \"$output_data\",\r\n        \"State\": \"$xyz\"\r\n      }\r\n    }\r\n  ],\r\n  \"Outputs\": {\r\n    \"output_data\": \"C:\\\\Benchmarking\\\\01-ResultsOut.csv\"\r\n  }\r\n}\r\n```\r\n\r\n- **What happened?**\r\n'IgnoreColumns' in file is not respected / throws an exception (more details in logs section below)\r\n\r\n- **What did you expect?**\r\nA run w/o exception\r\n\r\n### Source code / logs\r\n\r\n--- Command line args ---\r\n`dotnet MML.dll execgraph C:\\Benchmarking\\automl_graph.json`\r\n\r\n--- Exception message ---\r\n```\r\n(1) Unexpected exception: Unexpected input: 'IgnoreColumns', 'System.InvalidOperationException'\r\n\r\nException context:\r\n    Throwing component: Environment\r\n\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointNode.CheckAndSetInputValue(KeyValuePair`2 pair) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 686\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointNode..ctor(IHostEnvironment env, IChannel ch, RunContext context, String id, String entryPointName, JObject inputs, JObject outputs, Boolean checkpoint, String stageId, Single cost, String label, String group, String weight, String name) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 505\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointNode.ValidateNodes(IHostEnvironment env, RunContext context, JArray nodes, String label, String group, String weight, String name) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 934\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointGraph..ctor(IHostEnvironment env, JArray nodes) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 1008\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner..ctor(IHostEnvironment env, JArray nodes) in C:\\MLDotNet\\src\\Microsoft.ML.Legacy\\Runtime\\EntryPoints\\JsonUtils\\GraphRunner.cs:line 32\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.ExecuteGraphCommand.Run() in C:\\MLDotNet\\src\\Microsoft.ML.Legacy\\Runtime\\EntryPoints\\JsonUtils\\ExecuteGraphCommand.cs:line 62\r\n   at Microsoft.ML.Runtime.Tools.Maml.MainCore(ConsoleEnvironment env, String args, Boolean alwaysPrintStacktrace) in C:\\MLDotNet\\src\\Microsoft.ML.Maml\\MAML.cs:line 139\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/1613","RelatedDescription":"Open issue \"Exception on 'IgnoreColumns' in input\" (#1613)"},{"Id":"380378701","IsPullRequest":true,"CreatedAt":"2018-11-13T19:08:45","Actor":"Zruty0","Number":"1612","RawContent":null,"Title":"Cookbook update for MLContext and custom mapping","State":"open","Body":"Added 2 more cookbook samples: debugging and custom mapping.\r\nAdded MLContext to the list of high-level concepts.","Url":"https://github.com/dotnet/machinelearning/pull/1612","RelatedDescription":"Open PR \"Cookbook update for MLContext and custom mapping\" (#1612)"},{"Id":"380368280","IsPullRequest":false,"CreatedAt":"2018-11-13T18:41:29","Actor":"markusweimer","Number":"1611","RawContent":null,"Title":"TextLoader should use `columns` as a parameter, not `column`","State":"open","Body":"`TextLoader` presently accepts a parameter called `column` for the array of columns to read. That seems odd, given that almost always, multiple columns are passed. Hence, it would be more natural to call that parameter `columns`.","Url":"https://github.com/dotnet/machinelearning/issues/1611","RelatedDescription":"Open issue \"TextLoader should use `columns` as a parameter, not `column`\" (#1611)"},{"Id":"380342654","IsPullRequest":false,"CreatedAt":"2018-11-13T17:35:27","Actor":"Zruty0","Number":"1610","RawContent":null,"Title":"Make schema comprehension aware of images","State":"open","Body":"Image columns are backed by `Bitmap` objects under the hood. However, our standard schema comprehension is not capable of turning `Bitmap` fields into data view columns and vice versa.\r\n\r\nWe want to be able to add this capability, but without making Core assembly aware of the image type. This potentially calls for another application of MEF: being able to inject custom 'peek/poke generators' for schema comprehension. \r\n\r\n@TomFinley , do you think this is even a reasonable idea?\r\n\r\n@CESARDELATORRE ran into this need for some of the demos they were building. \r\ncc @yaeldekel ","Url":"https://github.com/dotnet/machinelearning/issues/1610","RelatedDescription":"Open issue \"Make schema comprehension aware of images\" (#1610)"},{"Id":"380340740","IsPullRequest":false,"CreatedAt":"2018-11-13T17:30:55","Actor":"Zruty0","Number":"1609","RawContent":null,"Title":"Add a transformer/estimator for loading images out of byte vectors","State":"open","Body":"Right now we can only load images from disk files. I think it's worthwhile to either update `ImageLoadingTransformer` to be able to load from byte vectors (interpreted as streams), or add another estimator/transformer to do this.\r\n\r\ncc @CESARDELATORRE @yaeldekel ","Url":"https://github.com/dotnet/machinelearning/issues/1609","RelatedDescription":"Open issue \"Add a transformer/estimator for loading images out of byte vectors\" (#1609)"},{"Id":"380309806","IsPullRequest":false,"CreatedAt":"2018-11-13T16:23:43","Actor":"adamsitnik","Number":"1608","RawContent":null,"Title":"Remove parsing perf bottleneck in WordEmbeddingsTransform","State":"open","Body":"I am currently profiling ML.NET to find performance bottlenecks and places where .NET framework could do a better perf job.\r\n\r\nI started with two the most time-consuming benchmarks from our public benchmark suite.\r\n\r\nAfter some profiling, it turned out that parsing big text files in `WordEmbeddingsTransform` is a performance bottleneck.\r\n\r\nIn the histogram below the red box 2 is parsing.\r\n\r\n![image](https://user-images.githubusercontent.com/6011991/48427146-6a401600-e768-11e8-968b-c923d12f411e.png)\r\n\r\nI optimized the code and then parallelized it. \r\n\r\nBefore:\r\n\r\n|                                         Method |    Mean |\r\n|----------------------------------------------- |--------:|\r\n| WikiDetox_WordEmbeddings_OVAAveragedPerceptron | 286.7 s |\r\n|                WikiDetox_WordEmbeddings_SDCAMC | 184.1 s |\r\n\r\nAfter:\r\n\r\n|                                         Method |     Mean |\r\n|----------------------------------------------- |---------:|\r\n| WikiDetox_WordEmbeddings_OVAAveragedPerceptron | 169.02 s |\r\n|                WikiDetox_WordEmbeddings_SDCAMC |  65.32 s |\r\n\r\nThe PR is #1599\r\n\r\n/cc @shauheen ","Url":"https://github.com/dotnet/machinelearning/issues/1608","RelatedDescription":"Open issue \"Remove parsing perf bottleneck in WordEmbeddingsTransform\" (#1608)"},{"Id":"379892336","IsPullRequest":true,"CreatedAt":"2018-11-13T15:48:13","Actor":"Zruty0","Number":"1601","RawContent":null,"Title":"Schema propagation for custom estimator","State":"closed","Body":"Fixes #1600 \r\nAdds schema propagation for custom mapping estimator","Url":"https://github.com/dotnet/machinelearning/pull/1601","RelatedDescription":"Closed or merged PR \"Schema propagation for custom estimator\" (#1601)"},{"Id":"379889738","IsPullRequest":false,"CreatedAt":"2018-11-13T15:48:13","Actor":"Zruty0","Number":"1600","RawContent":null,"Title":"Custom mapping estimator doesn't check input schema","State":"closed","Body":"The `CustomMappingEstimator` doesn't correctly check input schema for presence and validity of the columns.","Url":"https://github.com/dotnet/machinelearning/issues/1600","RelatedDescription":"Closed issue \"Custom mapping estimator doesn't check input schema\" (#1600)"},{"Id":"379431139","IsPullRequest":true,"CreatedAt":"2018-11-13T08:41:22","Actor":"jwood803","Number":"1597","RawContent":null,"Title":"Add README to baseline output folder","State":"closed","Body":"Fix for #100.\r\n\r\nTook an initial guess at what the README file would contain, but if there's more that needs to be included, I'll gladly add it. 😄 \t","Url":"https://github.com/dotnet/machinelearning/pull/1597","RelatedDescription":"Closed or merged PR \"Add README to baseline output folder\" (#1597)"},{"Id":"380090801","IsPullRequest":true,"CreatedAt":"2018-11-13T07:20:57","Actor":"sfilipi","Number":"1607","RawContent":null,"Title":"new names, per 1318 description.","State":"open","Body":"More changes to the #1318 saga. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1607","RelatedDescription":"Open PR \"new names, per 1318 description.\" (#1607)"},{"Id":"380061597","IsPullRequest":true,"CreatedAt":"2018-11-13T05:04:05","Actor":"sfilipi","Number":"1606","RawContent":null,"Title":"renaming transforms -> transformers","State":"open","Body":"Addresses part of #1318 renaming transforms to transformers. \r\nSome addl cleanup. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1606","RelatedDescription":"Open PR \"renaming transforms -> transformers\" (#1606)"},{"Id":"380014070","IsPullRequest":true,"CreatedAt":"2018-11-13T01:04:47","Actor":"najeeb-kazmi","Number":"1605","RawContent":null,"Title":"Adding features arg to clustering CV, removing test","State":"open","Body":"Addressing comments in #1584, which was merged before comments could be addressed.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1605","RelatedDescription":"Open PR \"Adding features arg to clustering CV, removing test\" (#1605)"},{"Id":"379995458","IsPullRequest":false,"CreatedAt":"2018-11-12T23:35:31","Actor":"Zruty0","Number":"1604","RawContent":null,"Title":"Clean up our auto-caching","State":"open","Body":"Currently, some of our trainers cache the data prior to training, without a possibility to disable that. \r\n\r\nI believe the good incremental step would be to disable all auto-caching, and rely on user to call `AppendCacheCheckpoint` prior to multi-pass training. \r\n\r\nThis is not really ideal, since the default setup for multi-pass trainers will train slower. I still think it is better to have a consistent story about our 'smarts' (that is, we have no auto-normalization, no auto-caching and no auto-calibration), and use extensive documentation (and tooling, in the future) to cover these pitfalls.\r\n\r\ncc @GalOshri @TomFinley @eerhardt ","Url":"https://github.com/dotnet/machinelearning/issues/1604","RelatedDescription":"Open issue \"Clean up our auto-caching\" (#1604)"},{"Id":"379979626","IsPullRequest":false,"CreatedAt":"2018-11-12T22:35:14","Actor":"jsboige","Number":"1603","RawContent":null,"Title":"Confusion between ColumnAttribute and ColumnNameAttribute should be prevented","State":"open","Body":"I just spent nearly a whole hour in front of a class full of students trying to figure out what was wrong with my code. I was demonstrating the SentimentAnalysis classifier and had the working code in split-screen to compare. My faulty code had a Column Attribute instead of ColumnName Attribute in the prediction class.\r\nFirst, not a single pair of eyes noticed the error. For some reason, one does not seem to register the difference, however obvious it should be.\r\nThen, although the subsequent exception did mention something was wrong with columns it was virtually impossible to debug:\r\nColumnAttribute actually has the corresponding \"name\" member, it's just that the constructor with the same signature sets the \"ordinal\" member instead, and that without failing unfortunately.\r\nAccordingly, trying to compare the code execution step by step with complete source code, the only visible difference appears pretty late in SchemaDefinition.Create(..), when both attributes are tested for existence and the corresponding \"name\" value, with one of the two missing.\r\nThen the resulting exception is triggered again much later in the TypedCursorable's private constructor, where the faulty column is considered missing.\r\nThis is deadly. \r\nIf you don't notice the spelling difference visually right away, and again a whole class didn't for some reason, there is very little chance even debugging the whole engine will get you anywhere.\r\n\r\nIn short, it should be made impossible or near to impossible to use [Column(\"name\")] instead of [ColumnName(\"name\")] by mistake, and at least easier to diagnose.","Url":"https://github.com/dotnet/machinelearning/issues/1603","RelatedDescription":"Open issue \"Confusion between ColumnAttribute and ColumnNameAttribute should be prevented\" (#1603)"},{"Id":"379945906","IsPullRequest":false,"CreatedAt":"2018-11-12T20:46:43","Actor":"Zruty0","Number":"1602","RawContent":null,"Title":"Make members of Core assembly internal","State":"open","Body":"#1519 made it possible to have members that are not public, but still accessible to other ML.NET assemblies. We now plan to use it to reduce the public surface of ML.NET assemblies substantially.\r\n\r\nNamely, let's 'hide' the non-user-facing public members of `Microsoft.ML.Core` assembly","Url":"https://github.com/dotnet/machinelearning/issues/1602","RelatedDescription":"Open issue \"Make members of Core assembly internal\" (#1602)"},{"Id":"379310526","IsPullRequest":false,"CreatedAt":"2018-11-12T19:26:26","Actor":"ganik","Number":"1589","RawContent":null,"Title":"class AssemblyRegistration should be public","State":"closed","Body":"Currently AssemblyRegistration.RegisterAssemblies(...) is not accessible outside of ML.Legacy assembly. This method is needed for NimbusML to register/load assemblies","Url":"https://github.com/dotnet/machinelearning/issues/1589","RelatedDescription":"Closed issue \"class AssemblyRegistration should be public\" (#1589)"},{"Id":"379322402","IsPullRequest":true,"CreatedAt":"2018-11-12T18:41:17","Actor":"sfilipi","Number":"1590","RawContent":null,"Title":"more transform => transformer renaming","State":"closed","Body":"Fixes part of #1318 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1590","RelatedDescription":"Closed or merged PR \"more transform => transformer renaming\" (#1590)"},{"Id":"379507628","IsPullRequest":true,"CreatedAt":"2018-11-11T10:01:14","Actor":"adamsitnik","Number":"1599","RawContent":null,"Title":"Remove parsing perf  bottleneck in WordEmbeddingsTransform","State":"open","Body":"This PR improves the performance of reading large text files and affects two of our most time-consuming benchmarks.\r\n\r\nInfo:\r\n\r\n```ini\r\nBenchmarkDotNet=v0.11.2, OS=Windows 10.0.17134.345 (1803/April2018Update/Redstone4)\r\nIntel Xeon CPU E5-1650 v4 3.60GHz, 1 CPU, 12 logical and 6 physical cores\r\nFrequency=3507503 Hz, Resolution=285.1031 ns, Timer=TSC\r\n.NET Core SDK=3.0.100-alpha1-009697\r\n  [Host]     : .NET Core 2.1.5 (CoreCLR 4.6.26919.02, CoreFX 4.6.26919.02), 64bit RyuJIT\r\n  Job-OXDQNP : .NET Core 2.1.5 (CoreCLR 4.6.26919.02, CoreFX 4.6.26919.02), 64bit RyuJIT\r\n```\r\n\r\nBefore:\r\n\r\n|                                         Method |    Mean |\r\n|----------------------------------------------- |--------:|\r\n| WikiDetox_WordEmbeddings_OVAAveragedPerceptron | 286.7 s |\r\n|                WikiDetox_WordEmbeddings_SDCAMC | 184.1 s |\r\n\r\nAfter:\r\n\r\n|                                         Method |     Mean |\r\n|----------------------------------------------- |---------:|\r\n| WikiDetox_WordEmbeddings_OVAAveragedPerceptron | 169.02 s |\r\n|                WikiDetox_WordEmbeddings_SDCAMC |  65.32 s |\r\n\r\nWhich is two minutes less to read the huge file for both benchmarks which results in a **x3** boost for `WikiDetox_WordEmbeddings_SDCAMC`  and **40%** improvement for `WikiDetox_WordEmbeddings_OVAAveragedPerceptron`\r\n\r\nReading the file was a bottleneck:\r\n\r\n![image](https://user-images.githubusercontent.com/6011991/48314555-83f82680-e5cb-11e8-8948-cc5a22a07c95.png)\r\n\r\nI have applied all possible optimizations and parallelized this operation.\r\n\r\nI am going to post a detailed description on Monday.","Url":"https://github.com/dotnet/machinelearning/pull/1599","RelatedDescription":"Open PR \"Remove parsing perf  bottleneck in WordEmbeddingsTransform\" (#1599)"},{"Id":"379454991","IsPullRequest":true,"CreatedAt":"2018-11-11T02:16:28","Actor":"shauheen","Number":"1598","RawContent":null,"Title":"Increase time out on build to 45","State":"closed","Body":"I'm seeing builds getting cancelled at 40 minutes which might have completed otherwise. Increasing timeout to 45 minutes, in #1561 it was suggested we should bump this as well.","Url":"https://github.com/dotnet/machinelearning/pull/1598","RelatedDescription":"Closed or merged PR \"Increase time out on build to 45\" (#1598)"},{"Id":"379430856","IsPullRequest":true,"CreatedAt":"2018-11-10T15:23:26","Actor":"jwood803","Number":"1596","RawContent":null,"Title":"[WIP] Add doc comments","State":"open","Body":"Fix for #1265\r\n\r\nCurrently marked as WIP since I'm sure the doc comment summaries may need to be updated to provide more information. Also, the `netstandard` version of the `CpuMathUtils` will also need to be updated with doc comments.","Url":"https://github.com/dotnet/machinelearning/pull/1596","RelatedDescription":"Open PR \"[WIP] Add doc comments\" (#1596)"},{"Id":"379397351","IsPullRequest":false,"CreatedAt":"2018-11-10T06:52:08","Actor":"neven10","Number":"1595","RawContent":null,"Title":"Sentiment Analysis on Uwp - MissingMethodException","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 UWP app,   ML 0.7.0\r\n- **.NET Version (eg., dotnet --info)**:  Net standard / Targeting min Fall Creator Update\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nWas trying to run  binary classification example on Uwp.\r\n\r\n- **What happened?**\r\n\r\nSystem.MissingMethodException: Method not found: 'System.ComponentModel.Composition.Hosting.CompositionContainer Microsoft.ML.Runtime.IHostEnvironment.GetCompositionContainer()'.\r\n\r\nIt works fine with  .Net Core Console .\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1595","RelatedDescription":"Open issue \"Sentiment Analysis on Uwp - MissingMethodException\" (#1595)"},{"Id":"379329615","IsPullRequest":false,"CreatedAt":"2018-11-10T03:48:13","Actor":"ReidAnderson","Number":"1591","RawContent":null,"Title":"Error When Building Anomaly Detection Example Using 0.7.0","State":"closed","Body":"Hello, I'm a .NET developer but new to the .NET core world. I was able to verify this on two different machines. I didn't see any existing issues open on this. Hopefully I'm not missing something obvious here, and apologies if I am. Let me know if there's any further information I can provide or questions I can answer\r\n\r\n### System information\r\n\r\n- **OS version/distro**:\r\nWindows 10.0.16299\r\n- **.NET Version (eg., dotnet --info)**: \r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nPulled latest version of ML.NET to play around with the new anomaly detection algorithms. Added using statements from the [example](https://github.com/dotnet/machinelearning/blob/7fb76b026d0035d6da4d0b46bd3f2a6e3c0ce3f1/test/Microsoft.ML.TimeSeries.Tests/TimeSeriesDirectApi.cs) linked to from the [release notes](https://github.com/dotnet/machinelearning/blob/master/docs/release-notes/0.7/release-0.7.md). An example of some step by step command line instructions are below (and the file contents are in source code section):\r\n\r\n`dotnet new console `\r\n`dotnet add package Microsoft.ML --version 0.7.0`\r\n\r\n- **What happened?**\r\nFailed to build, received a missing type or name space `error CS0234: The type or namespace name 'TimeSeriesProcessing' does not exist in the namespace 'Microsoft.ML.Runtime' (are you missing an assembly reference?)`\r\nLooking through the object browser in VS I don't see any TimeSeriesProcessing namespace present in the 0.7.0 nuget package at all.\r\n\r\n- **What did you expect?**\r\nSuccessful build, finding the indicated namespace.\r\n\r\n### Source code / logs\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic; \r\nusing Microsoft.ML.Runtime.Api; \r\nusing Microsoft.ML.Runtime.Data; \r\nusing Microsoft.ML.Runtime.TimeSeriesProcessing;\r\n\r\nnamespace console_dotnetcore\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/1591","RelatedDescription":"Closed issue \"Error When Building Anomaly Detection Example Using 0.7.0\" (#1591)"},{"Id":"379367550","IsPullRequest":true,"CreatedAt":"2018-11-10T00:29:43","Actor":"sfilipi","Number":"1594","RawContent":null,"Title":"Exposing normalizer parameters ","State":"open","Body":"Fixes #1616 by exposing the weights of the normalizers. \r\n","Url":"https://github.com/dotnet/machinelearning/pull/1594","RelatedDescription":"Open PR \"Exposing normalizer parameters \" (#1594)"},{"Id":"379342440","IsPullRequest":true,"CreatedAt":"2018-11-09T23:41:33","Actor":"shauheen","Number":"1593","RawContent":null,"Title":"Update Readme.md","State":"closed","Body":"Update the code snippet","Url":"https://github.com/dotnet/machinelearning/pull/1593","RelatedDescription":"Closed or merged PR \"Update Readme.md\" (#1593)"},{"Id":"379061169","IsPullRequest":true,"CreatedAt":"2018-11-09T22:31:05","Actor":"sfilipi","Number":"1588","RawContent":null,"Title":"Renaming transforms to transformers Part 1","State":"closed","Body":"Addresses part of the third section of #1318 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1588","RelatedDescription":"Closed or merged PR \"Renaming transforms to transformers Part 1\" (#1588)"},{"Id":"379337947","IsPullRequest":true,"CreatedAt":"2018-11-09T22:04:31","Actor":"Ivanidzo4ka","Number":"1592","RawContent":null,"Title":"WIP Convert Ngram transform to estimator/transformer","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/1592","RelatedDescription":"Open PR \"WIP Convert Ngram transform to estimator/transformer\" (#1592)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-11-14T05:30:39.646984Z","RunDurationInMilliseconds":2004}