{"Data":{"Angular-Issues":{"Issues":[{"Id":"573812501","IsPullRequest":false,"CreatedAt":"2020-03-03T04:30:21","Actor":"aanand07","Number":"35789","RawContent":null,"Title":"content-type changes to text/plain in production","State":"closed","Body":"I'm facing a weird issue due to httpclient, when i set some HttpHeaders(not content-type), content-type changes to text/plain in production build, while in local content-type is application/json. \r\nDue to this my server responds with Http error 415(unsupported media type) as it can only handle application/json requests, and furthermore, this issue isn't reproducible all the time.\r\nMy understanding is that content-type by default should always be application/json.\r\n\r\n\r\n\r\n\r\n### Affected Package\r\n\"@angular/http\": \"^6.0.3\",\r\n\"angular\": \"^1.6.9\",\r\n\"@angular/common\": \"^6.0.3\",\r\n\r\n\r\n\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nNot sure\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n\r\n\r\nAngular CLI: 6.0.8\r\nNode: 10.15.3\r\nOS: win32 x64\r\nAngular: 6.1.10\r\n... animations, common, compiler, core, forms, http\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, upgrade\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.13.9\r\n@angular-devkit/build-angular     0.13.9\r\n@angular-devkit/build-optimizer   0.13.9\r\n@angular-devkit/build-webpack     0.13.9\r\n@angular-devkit/core              7.3.9\r\n@angular-devkit/schematics        0.6.8\r\n@angular/cli                      6.0.8\r\n@angular/compiler-cli             7.2.15\r\n@ngtools/webpack                  7.3.9\r\n@schematics/angular               0.6.8\r\n@schematics/update                0.6.8\r\nrxjs                              6.0.0\r\ntypescript                        3.1.6\r\nwebpack                           4.29.0-->\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nNo\r\n","Url":"https://github.com/angular/angular/issues/35789","RelatedDescription":"Closed issue \"content-type changes to text/plain in production\" (#35789)"},{"Id":"574407374","IsPullRequest":true,"CreatedAt":"2020-03-03T04:27:04","Actor":"kyliau","Number":"35816","RawContent":null,"Title":"build: avoid running duplicate tests in language service","State":"open","Body":"The test libs should only be included in one jasmine_node_test\r\notherwise `bazel test //packages/language-service/...` would\r\nend up running `feature_test` and `infra_test` twice.\r\n\r\nThis change was unintentionally introduced in https://github.com/angular/angular/pull/35688.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35816","RelatedDescription":"Open PR \"build: avoid running duplicate tests in language service\" (#35816)"},{"Id":"574374396","IsPullRequest":true,"CreatedAt":"2020-03-03T02:30:25","Actor":"sonukapoor","Number":"35815","RawContent":null,"Title":"fix(docs-infra): add top level folders into `topLevelFolders`","State":"open","Body":"Closes #35676\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #35676\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35815","RelatedDescription":"Open PR \"fix(docs-infra): add top level folders into `topLevelFolders`\" (#35815)"},{"Id":"574366498","IsPullRequest":true,"CreatedAt":"2020-03-03T02:04:40","Actor":"JiaLiPassion","Number":"35814","RawContent":null,"Title":"fix(zone.js): tickOptions processNewMacroTasksSynchronously option should by default true","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nwith the new `tickOptions` in `tick()`, if we don't pass this `tickOptions`, by default we will have \r\n`processNewMacroTasksSynchronously` to be true, but if we pass a empty object `{}` as tickOptions, the `processNewMacroTasksSynchronously` will be treated as false.\r\n\r\n## What is the new behavior?\r\n if we pass a empty object `{}` as tickOptions, the `processNewMacroTasksSynchronously` will be treated as true.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\nrelated to https://github.com/angular/angular/pull/35697 PR, thanks @gkalpak find this issue.","Url":"https://github.com/angular/angular/pull/35814","RelatedDescription":"Open PR \"fix(zone.js): tickOptions processNewMacroTasksSynchronously option should by default true\" (#35814)"},{"Id":"574364443","IsPullRequest":true,"CreatedAt":"2020-03-03T01:57:41","Actor":"gregmagolan","Number":"35813","RawContent":null,"Title":"build: update to rules_nodejs 1.4.0","State":"open","Body":"This brings in the 'silent' attribute in rollup_bundle to allow the suppression of verbose output in the zone.js package build.\r\n\r\n^ @josephperrott \r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [x] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35813","RelatedDescription":"Open PR \"build: update to rules_nodejs 1.4.0\" (#35813)"},{"Id":"574343053","IsPullRequest":true,"CreatedAt":"2020-03-03T00:44:45","Actor":"kyliau","Number":"35812","RawContent":null,"Title":"refactor(compiler): simplify parseTemplateBindings() for microsyntax","State":"open","Body":"This commit is purely a refactoring of the logic in\r\n`parseTemplateBindings` method for parsing the microsyntax expression.\r\nThis is done to enable the introduction of `keySpan` and `valueSpan` in\r\nsubsequent PR.\r\n\r\nFor a detailed explanation of this work and the subsequent work items,\r\nplease see https://docs.google.com/document/d/1mEVF2pSSMSnOloqOPQTYNiAJO0XQxA1H0BZyESASOrE/edit?usp=sharing\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35812","RelatedDescription":"Open PR \"refactor(compiler): simplify parseTemplateBindings() for microsyntax\" (#35812)"},{"Id":"574315466","IsPullRequest":false,"CreatedAt":"2020-03-02T23:29:16","Actor":"zero-1","Number":"35811","RawContent":null,"Title":"issue with TypeChecking in template in Angular 9 (with Ivy)","State":"open","Body":"To be honest, I am not sure if this is an issue or I might just be using the thing wrong.... but the following code works in Angular 8 ... and in Angular 9 with Ivy disabled.\r\n\r\n**In the .ts file.. we have something like this ...** \r\n\r\n```\r\nexport interface IA {\r\n  name: string;\r\n  age: number\r\n}\r\n\r\nexport interface IB {\r\n  fullname: string;\r\n  halflife: number\r\n}\r\n\r\nsomeObj: IA | IB;\r\n.\r\n.\r\nthis.someObj = this.anObjectofTypeIA;\r\n```\r\n\r\n**in the template ...** \r\n`\r\n{{ someObj?.name }}\r\n`\r\n\r\nStackblitz..\r\nhttps://stackblitz.com/edit/angular-hw62bd\r\n\r\nThis does not work in Angular 9 with Ivy.\r\nError:: Property 'name' does not exist on type 'IA | IB'.\r\n\r\nThere is some documentation on this at https://angular.io/guide/template-typecheck\r\n\r\nBut such a scenario isn't really covered and I couldn't find any best practices regarding the same.","Url":"https://github.com/angular/angular/issues/35811","RelatedDescription":"Open issue \"issue with TypeChecking in template in Angular 9 (with Ivy)\" (#35811)"},{"Id":"574300037","IsPullRequest":true,"CreatedAt":"2020-03-02T22:50:43","Actor":"matsko","Number":"35810","RawContent":null,"Title":"fix(animations): allow computeStyle to work on elements created in Node","State":"open","Body":"This patch is a follow-up patch to 35c9f0dc2f3665d4f9d9ece328cee4559bbec9c6.\r\nIt changes the `computeStyle` function to handle situations where\r\nnon string based values are returned from `window.getComputedStyle`.\r\nThis situation usually ocurrs in Node-based test environments where\r\nthe element or `window.getComputedStyle` is mocked out.","Url":"https://github.com/angular/angular/pull/35810","RelatedDescription":"Open PR \"fix(animations): allow computeStyle to work on elements created in Node\" (#35810)"},{"Id":"574279850","IsPullRequest":true,"CreatedAt":"2020-03-02T22:06:54","Actor":"gkalpak","Number":"35809","RawContent":null,"Title":"docs: remove `ivy` and mention `ve` label in docs","State":"open","Body":"This is a follow-up to #35799.","Url":"https://github.com/angular/angular/pull/35809","RelatedDescription":"Open PR \"docs: remove `ivy` and mention `ve` label in docs\" (#35809)"},{"Id":"574185100","IsPullRequest":true,"CreatedAt":"2020-03-02T21:30:11","Actor":"gregmagolan","Number":"35804","RawContent":null,"Title":"build: fix flakiness in integration/bazel by disabling symlinked_node…","State":"closed","Body":"…_modules\r\n\r\nThe flakiness in integration/bazel-schematics is going to be a bit tricker as the WORKSPACE file is JIT generated by the architect build layer\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [x] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35804","RelatedDescription":"Closed or merged PR \"build: fix flakiness in integration/bazel by disabling symlinked_node…\" (#35804)"},{"Id":"574097737","IsPullRequest":false,"CreatedAt":"2020-03-02T21:08:47","Actor":"santhony7","Number":"35797","RawContent":null,"Title":"i18n docs include multiple build tutorial link that is deprecated","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 📚 Docs or angular.io bug report\r\n\r\n### Description\r\n\r\n<!-- ✍️edit:--> The content on the bottom of the page is really no longer helpful. The article by Philippe Martin used old APIs that are now deprecated. It would be great if we could get an updated method for deploying multiple languages using new APIs.\r\n\r\n### What's the affected URL?**\r\n<!-- ✍️edit:--> https://angular.io/guide/i18n\r\n\r\n","Url":"https://github.com/angular/angular/issues/35797","RelatedDescription":"Closed issue \"i18n docs include multiple build tutorial link that is deprecated\" (#35797)"},{"Id":"574242830","IsPullRequest":true,"CreatedAt":"2020-03-02T20:56:22","Actor":"gregmagolan","Number":"35808","RawContent":null,"Title":"build: fix flakiness in integration/bazel-schematics by disabling sym…","State":"open","Body":"…linked_node_modules\r\n\r\nBecause the WORKSPACE file is generated JIT by schematics in this integration test, we need to patch the schematics to add the work-around.\r\n\r\nRelated to https://github.com/angular/angular/pull/35804\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [x] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35808","RelatedDescription":"Open PR \"build: fix flakiness in integration/bazel-schematics by disabling sym…\" (#35808)"},{"Id":"574215729","IsPullRequest":false,"CreatedAt":"2020-03-02T20:07:00","Actor":"th0r","Number":"35807","RawContent":null,"Title":"`QueryList` emits changes even when it's items are not changed","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> Not sure\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 8.2.14\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> Given this app template:\r\n```html\r\n<app-tabs>\r\n  <ng-template appTab=\"Foo tab\">\r\n    Foo content\r\n    <ng-template></ng-template>\r\n  </ng-template>\r\n\r\n  <ng-template appTab=\"Bar tab\">\r\n    Bar content\r\n  </ng-template>\r\n</app-tabs>\r\n```\r\nAnd this code in `<app-tabs>` component:\r\n```ts\r\nexport class TabsComponent implements AfterViewInit {\r\n  @ContentChildren(TabDirective) tabs: QueryList<TabDirective>;\r\n\r\n  activeTab: TabDirective;\r\n\r\n  constructor(private changeDetection: ChangeDetectorRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.activeTab = this.tabs.first;\r\n    this.tabs.changes.subscribe(() => {\r\n      console.log(`'tabs.changes' handler called, but nothing has changes and there are still ${this.tabs.length} tabs`);\r\n    });\r\n    this.changeDetection.detectChanges();\r\n  }\r\n}\r\n```\r\nHandler for `this.tabs.changes` observable is called after every click on tab button (see reproduction below) but it shouldn't because content children (child templates with `appTab` directive applied) haven't changed.\r\n\r\nIf you remove `<ng-template></ng-template>` below `Foo content` everything works as expected - `changes` handler is not called.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\n<!-- ✍️--> https://ng-run.com/edit/Mp66ACl3Uz6KbIEbFGwq?open=app%2Fapp.component.html\r\n\r\nReproduction steps:\r\n1. Open a link and open a browser console. Wait for the app to load.\r\n2. Notice that nothing is in the console.\r\n3. Click on \"Bar tab\" - nothing is in the console.\r\n4. Click on \"Foo tab\" - nothing is in the console.\r\n5. Uncomment `<ng-template></ng-template>` below `Foo content` - notice `'tabs.changes' handler called...` log item in the console\r\n6. Click on \"Bar tab\" - notice another `'tabs.changes' handler called...` log item in the console.\r\n7. Click on \"Foo tab\" - notice another `'tabs.changes' handler called...` log item in the console.\r\n8. Comment out `<ng-template></ng-template>` and uncomment `<ng-container *ngIf=\"false\"></ng-container>`. See the same invalid log items in the console.\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\nAngular CLI: 9.0.4\r\nNode: 12.16.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.4\r\n@angular-devkit/build-angular     0.900.4\r\n@angular-devkit/build-optimizer   0.900.4\r\n@angular-devkit/build-webpack     0.900.4\r\n@angular-devkit/core              9.0.4\r\n@angular-devkit/schematics        9.0.4\r\n@ngtools/webpack                  9.0.4\r\n@schematics/angular               9.0.4\r\n@schematics/update                0.900.4\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n\r\n</code></pre>","Url":"https://github.com/angular/angular/issues/35807","RelatedDescription":"Open issue \"`QueryList` emits changes even when it's items are not changed\" (#35807)"},{"Id":"574195546","IsPullRequest":false,"CreatedAt":"2020-03-02T19:29:51","Actor":"MattDWhittle","Number":"35806","RawContent":null,"Title":"Test for Undefined on a field defined in Typescript","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n<!-- ✍️edit: --> This feature request is for @angular/compiler\r\n\r\n\r\n### Description\r\n<!-- ✍️--> A clear and concise description of the problem or missing capability...\r\nHi! The current way I have to test for an undefined field for a field defined in a class seems clunky.\r\n\r\nExample:\r\ndeclare class HasAThing {\r\n  thing: string;\r\n}\r\n\r\n    let thisHasAThing: HasAThing;\r\n\r\n    try {\r\n      if (thisHasAThing.thing) {\r\n        b = 1;\r\n      }\r\n    } catch (e) {\r\n      if (e instanceof TypeError) {\r\n        b = 2;\r\n      } else {\r\n        throw e; \r\n      }\r\n    }\r\n\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️--> If you have a solution in mind, please describe it.\r\nIt would be nice if I could test for undefined in the same manner I test other variables, such as\r\n\r\n    if (thisHasAThing.thing) {\r\n      b = 1;\r\n    } else {\r\n      b = 2;\r\n    }\r\n\r\n(This throws a TypeError currently)\r\n\r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️--> Have you considered any alternative solutions or workarounds?\r\n","Url":"https://github.com/angular/angular/issues/35806","RelatedDescription":"Open issue \"Test for Undefined on a field defined in Typescript\" (#35806)"},{"Id":"574195249","IsPullRequest":false,"CreatedAt":"2020-03-02T19:29:23","Actor":"tgrux","Number":"35805","RawContent":null,"Title":"Angular Library Test Error: Unexpected value 'BrowserDynamicTestingModule' imported by the module 'DynamicTestModule'.","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n\r\nThe issue is caused by package @angular/core/testing\r\n\r\n\r\n### Is this a regression?\r\n\r\nYes, the previous version in which this bug was not present was: 8 latest\r\n\r\n\r\n### Description\r\n\r\nRunning unit tests for an angular library throws the following error:\r\n```bash\r\nUnexpected value 'BrowserDynamicTestingModule' imported by the module 'DynamicTestModule'. Please add an @NgModule annotation.\r\n```\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nSimply run the unit tests for an angular library.\r\n\r\n## 🔥 Exception or Error\r\n<pre>Unexpected value 'BrowserDynamicTestingModule' imported by the module 'DynamicTestModule'. Please add an @NgModule annotation.<code>\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n\r\n<pre>\r\nAngular CLI: 9.0.4\r\nNode: 10.15.3\r\nOS: darwin x64\r\n\r\nAngular: 9.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.900.4\r\n@angular-devkit/build-angular      0.900.4\r\n@angular-devkit/build-ng-packagr   0.900.4\r\n@angular-devkit/build-optimizer    0.900.4\r\n@angular-devkit/build-webpack      0.900.4\r\n@angular-devkit/core               9.0.4\r\n@angular-devkit/schematics         9.0.4\r\n@ngtools/webpack                   9.0.4\r\n@schematics/angular                9.0.4\r\n@schematics/update                 0.900.4\r\nng-packagr                         9.0.2\r\nrxjs                               6.5.4\r\ntypescript                         3.7.5\r\nwebpack                            4.41.2\r\n<code>\r\n\r\n**Anything else relevant?**\r\n","Url":"https://github.com/angular/angular/issues/35805","RelatedDescription":"Open issue \"Angular Library Test Error: Unexpected value 'BrowserDynamicTestingModule' imported by the module 'DynamicTestModule'.\" (#35805)"},{"Id":"574116041","IsPullRequest":true,"CreatedAt":"2020-03-02T19:25:43","Actor":"mhevery","Number":"35799","RawContent":null,"Title":"style: Remove `ivy` scope, and add `ve` scope","State":"closed","Body":"Since ivy is now default having `ivy` scope does not make sense. We are creating `ve` scope for cases where we are specifically fixing view-engine.\r\n\r\nNOTE: Also sorted scopes alphabetically.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35799","RelatedDescription":"Closed or merged PR \"style: Remove `ivy` scope, and add `ve` scope\" (#35799)"},{"Id":"574034912","IsPullRequest":true,"CreatedAt":"2020-03-02T19:16:33","Actor":"pkozlowski-opensource","Number":"35796","RawContent":null,"Title":"fix(core): allow null / undefined values in query results","State":"closed","Body":"Before this change ngIvy implementation of queries would throw upon\r\nencountering null / undefined query result collected from an embedded\r\nview. It turns out that we might have a provider that explicitly provides\r\na null / undefined value in a place of a token queried for.\r\n\r\nThis commit removes a check from the ngIvy query implementation that was\r\nasserting on a query result to be defined.\r\n\r\nFixes #35673\r\n","Url":"https://github.com/angular/angular/pull/35796","RelatedDescription":"Closed or merged PR \"fix(core): allow null / undefined values in query results\" (#35796)"},{"Id":"574146308","IsPullRequest":true,"CreatedAt":"2020-03-02T17:58:34","Actor":"josephperrott","Number":"35802","RawContent":null,"Title":"build: use nonstrict python toolchain to support PY2/PY3","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/35802","RelatedDescription":"Open PR \"build: use nonstrict python toolchain to support PY2/PY3\" (#35802)"},{"Id":"574143035","IsPullRequest":true,"CreatedAt":"2020-03-02T17:52:37","Actor":"petebacondarwin","Number":"35801","RawContent":null,"Title":"docs-infra: include CLI options in search","State":"open","Body":"The first commit is just a reformatting - the real changes are in the second commit.\r\n\r\nYou can test it in the preview at https://pr35801-a121ba5.ngbuilds.io/. Try searching for `deleteOutputPath`. Looks like:\r\n\r\n<img width=\"727\" alt=\"Screenshot 2020-03-02 at 18 07 44\" src=\"https://user-images.githubusercontent.com/15655/75704267-f30df880-5cb0-11ea-93ac-2e91b3fce453.png\">\r\n","Url":"https://github.com/angular/angular/pull/35801","RelatedDescription":"Open PR \"docs-infra: include CLI options in search\" (#35801)"},{"Id":"574136643","IsPullRequest":true,"CreatedAt":"2020-03-02T17:41:13","Actor":"devversion","Number":"35800","RawContent":null,"Title":"build: no longer run tslint from within gulp task","State":"open","Body":"Switches our tslint setup to the standard `tslint.json` linter excludes.\r\nThe set of files that need to be linted is specified through a Yarn script.\r\n\r\nFor IDEs, open files are linted with the closest tslint configuration, if the\r\ntslint IDE extension is set up, and the source file is not excluded.\r\n\r\nWe cannot use the language service plugin for tslint as we have multiple nested\r\ntsconfig files, and we don't want to add the plugin to each tsconfig. We\r\ncould reduce that bloat by just extending from a top-level tsconfig that\r\ndefines the language service plugin, but unfortunately the tslint plugin does\r\nnot allow the use of tslint configs which are not part of the tsconfig project.\r\n\r\nThis is problematic since the tslint configuration is at the project root, and we\r\ndon't want to copy tslint configurations next to each tsconfig file.\r\n\r\nAdditionally, linting of `d.ts` files has been re-enabled. This has been\r\ndisabled in the past and a TODO has been left. This commit fixes the\r\nlint issues and re-enables linting.\r\n\r\nResolves DEV-47","Url":"https://github.com/angular/angular/pull/35800","RelatedDescription":"Open PR \"build: no longer run tslint from within gulp task\" (#35800)"},{"Id":"574101966","IsPullRequest":true,"CreatedAt":"2020-03-02T16:43:23","Actor":"crisbeto","Number":"35798","RawContent":null,"Title":"fix(core): log error instead of warning for unknown properties and elements","State":"open","Body":"Changes the Ivy unknown element/property messages from being logged with `console.warn` to `console.error`. This should make them a bit more visible without breaking existing apps. Furthermore, a lot of folks filter out warning messages in the dev tools' console, whereas errors are usually still shown.\r\n","Url":"https://github.com/angular/angular/pull/35798","RelatedDescription":"Open PR \"fix(core): log error instead of warning for unknown properties and elements\" (#35798)"},{"Id":"573877669","IsPullRequest":true,"CreatedAt":"2020-03-02T16:15:19","Actor":"devversion","Number":"35792","RawContent":null,"Title":"fix(bazel): ng_package rule creates incorrect UMD module exports ","State":"closed","Body":"The `ng_package` rule currently creates incorrect UMD module exports\r\nif an entry-point has a module name with numbers included.\r\n\r\nFor example, consider an entry-point called `@angular/cdk/a11y`. The UMD\r\nmodule name should be `ng.cdk.a11y`. Instead, `ng_package` currently generates\r\nan UMD module export called `ng.cdk.a11Y`.\r\n\r\nThis is because the logic for converting dash-case to camel case is\r\ninvalid as it uses Starlark's `title()` method. The title method\r\nconverts text to title case while we actually just want to capitalize\r\nthe first letter of a dash-case segment.\r\n\r\nFixes angular/components#18652.","Url":"https://github.com/angular/angular/pull/35792","RelatedDescription":"Closed or merged PR \"fix(bazel): ng_package rule creates incorrect UMD module exports \" (#35792)"},{"Id":"573976349","IsPullRequest":false,"CreatedAt":"2020-03-02T13:31:39","Actor":"leonelvsc","Number":"35795","RawContent":null,"Title":"Dynamic component for <select> options without template logic *ngIfs","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n<!-- ✍️edit: --> This feature request is for @angular/core\r\n\r\n### Description\r\n<!-- ✍️--> There are cases where one needs to instantiate a component based on a user preference ie: \r\n\r\n```\r\n<select [(ngModel)]=\"type\" name=\"type\">\r\n    <option value=\"a\">Type A</option>\r\n    <option value=\"b\">Type B</option>\r\n</select>\r\n\r\n<div *ngIf=\"type === 'a'\">\r\n    logic...\r\n</div>\r\n\r\n<div *ngIf=\"type === 'b'\">\r\n    logic...\r\n</div>\r\n```\r\n\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️--> It would be great if angular provides a component that instantiates another component based on a component class decorator ie:\r\n\r\n```\r\n<select [(ngModel)]=\"type\" name=\"type\" #someRef>\r\n    <option value=\"a\">Type A</option>\r\n    <option value=\"b\">Type B</option>\r\n</select>\r\n\r\n<components-for #someRef [ngModel]=\"type\"></components-for>\r\n```\r\n\r\nmanager-for-type-a.component.ts\r\n```\r\n@ComponentsFor('a', someRefToTemplateOrComponent)\r\n@Component({\r\n    selector: 'app-manager-for-type-a',\r\n    templateUrl: './manager-for-type-a.component.html',\r\n    styleUrls: ['./manager-for-type-a.component.css'],\r\n    viewProviders: [\r\n        {\r\n            provide: ControlContainer,\r\n            useExisting: NgForm\r\n        }\r\n    ]\r\n})\r\nexport class ManagerForTypeAComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    };\r\n\r\n    someMethod() {\r\n    };\r\n}\r\n```\r\n\r\nmanager-for-type-b.component.ts\r\n```\r\n@ComponentsFor('b', someRefToTemplateOrComponent)\r\n@Component({\r\n    selector: 'app-manager-for-type-b',\r\n    templateUrl: './manager-for-type-b.component.html',\r\n    styleUrls: ['./manager-for-type-b.component.css'],\r\n    viewProviders: [\r\n        {\r\n            provide: ControlContainer,\r\n            useExisting: NgForm\r\n        }\r\n    ]\r\n})\r\nexport class ManagerForTypeBComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    };\r\n\r\n    someMethod() {\r\n    };\r\n}\r\n```\r\n\r\nWith this aproach we avoid template logic and re-evaluating all the time the *ngIfs conditions and have direct access to the component that needs to be instantiated\r\n\r\nmy current solution to this problem is:\r\n\r\nsome-service.ts\r\n\r\n```\r\nexport const TYPE_MAP = {};\r\n\r\nexport class SomeService {\r\n    typeMap = TYPE_MAP;\r\n\r\n    constructor() {\r\n    }\r\n}\r\n```\r\n\r\ntype-manager.interface.ts\r\n\r\n```\r\nexport interface TypeManager {\r\n    someMethod();\r\n}\r\n\r\n```\r\n\r\ntype-manager.decorator.ts\r\n\r\n```\r\nexport function TypeManagerDecorator(aType: string) {\r\n    return function _TypeManagerDecorator<T extends { new(...args: any[]): TypeManager}>(constr: T) {\r\n        TYPE_MAP[aType] = constr;\r\n    };\r\n}\r\n```\r\n\r\nmanager-for-type-a.component.ts\r\n```\r\n@TypeManagerDecorator('a')\r\n@Component({\r\n    selector: 'app-manager-for-type-a',\r\n    templateUrl: './manager-for-type-a.component.html',\r\n    styleUrls: ['./manager-for-type-a.component.css'],\r\n    viewProviders: [\r\n        {\r\n            provide: ControlContainer,\r\n            useExisting: NgForm\r\n        }\r\n    ]\r\n})\r\nexport class ManagerForTypeAComponent implements OnInit, TypeManager {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    };\r\n\r\n    someMethod() {\r\n    };\r\n}\r\n```\r\n\r\nmanager-for-type-b.component.ts\r\n```\r\n@TypeManagerDecorator('b')\r\n@Component({\r\n    selector: 'app-manager-for-type-b',\r\n    templateUrl: './manager-for-type-b.component.html',\r\n    styleUrls: ['./manager-for-type-b.component.css'],\r\n    viewProviders: [\r\n        {\r\n            provide: ControlContainer,\r\n            useExisting: NgForm\r\n        }\r\n    ]\r\n})\r\nexport class ManagerForTypeBComponent implements OnInit, TypeManager {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    };\r\n\r\n    someMethod() {\r\n    };\r\n}\r\n```\r\n\r\nmain.component.html\r\n```\r\n\r\n<form #form=\"ngForm\" (ngSubmit)=\"form.valid\" autocomplete=\"off\">\r\n\r\n    <select [(ngModel)]=\"type\" name=\"type\" (ngModelChange)=\"changeTypeManager($event)\">\r\n        <option value=\"a\">Type A</option>\r\n        <option value=\"b\">Type B</option>\r\n    </select>\r\n\r\n\r\n    <ng-container #container></ng-container>\r\n\r\n</form>\r\n```\r\n\r\nmain.component.ts\r\n\r\n```\r\n@Component({\r\n    selector: 'app-main',\r\n    templateUrl: './main.component.html',\r\n    styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit, OnDestroy {\r\n\r\n    @ViewChild('container', {read: ViewContainerRef, static: true})\r\n    private mainContainer: ViewContainerRef;\r\n    private componentReference: ComponentRef<any>;\r\n\r\n    constructor(\r\n        private aService: SomeService,\r\n        private resolver: ComponentFactoryResolver\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if(this.componentReference) {\r\n            this.componentReference.destroy();\r\n        }\r\n    }\r\n\r\n    private changeTypeManager(aType: string) {\r\n        if(this.componentReference) {\r\n            this.componentReference.destroy();\r\n        }\r\n\r\n        if(!this.aService.typeMap[aType]) {\r\n            throw new Error(`No class exists with the decorator @TypeManagerDecorator('${aType}')`);\r\n        }\r\n\r\n        const componentFactory = this.resolver.resolveComponentFactory(this.aService.typeMap[aType]);\r\n        this.componentReference = this.mainContainer.createComponent(componentFactory);\r\n    }\r\n\r\n}\r\n```\r\n","Url":"https://github.com/angular/angular/issues/35795","RelatedDescription":"Open issue \"Dynamic component for <select> options without template logic *ngIfs\" (#35795)"},{"Id":"573927228","IsPullRequest":false,"CreatedAt":"2020-03-02T12:01:06","Actor":"mujahid-akbar","Number":"35794","RawContent":null,"Title":"Ability to manually trigger reload of a routed component on parameter change","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n<!-- ✍️edit: --> This feature request is for @angular/router\r\n\r\n\r\n### Description\r\n<!-- ✍️--> \r\nOn route parameter change angular by default reuse the routed component, which is nice.\r\nbut sometimes on specific routes we don't what to reuse the component, instead reloading it will be a lot easier option. \r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️-->\r\nSo router navigation methods should provide the option to reload the same component , instead of reusing it.\r\n\r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️-->\r\n`NavigationExtras` should accept a property  like `onSameUrlNavigation : 'reload'` to indicate reload of current route if parameters changes.\r\n\r\nwhich can be used like\r\n`this.router.navigatebyUrl('/customer/1', { onSameUrlNavigation: 'reload' })`","Url":"https://github.com/angular/angular/issues/35794","RelatedDescription":"Open issue \"Ability to manually trigger reload of a routed component on parameter change\" (#35794)"},{"Id":"573901692","IsPullRequest":true,"CreatedAt":"2020-03-02T11:12:42","Actor":"petebacondarwin","Number":"35793","RawContent":null,"Title":"fix(localize): translation file parser selection","State":"open","Body":"These changes should fix #35525, and should be compatible with current CLI integration code (@clydin  to confirm), although the `hint` based approach with accompanied change to remove the need to pass `diagnostics` to constructors should also improve the performance and maintainability.","Url":"https://github.com/angular/angular/pull/35793","RelatedDescription":"Open PR \"fix(localize): translation file parser selection\" (#35793)"},{"Id":"573863859","IsPullRequest":false,"CreatedAt":"2020-03-02T10:14:06","Actor":"Deepak2985","Number":"35791","RawContent":null,"Title":"error typeerror: cannot convert undefined or null to object angular","State":"open","Body":"While giving the production build in angular 9 I am getting the below error.\r\n\r\n![image](https://user-images.githubusercontent.com/36476799/75666848-8e48a300-5c9c-11ea-83bc-371ad864c06b.png)\r\n","Url":"https://github.com/angular/angular/issues/35791","RelatedDescription":"Open issue \"error typeerror: cannot convert undefined or null to object angular\" (#35791)"},{"Id":"573818425","IsPullRequest":true,"CreatedAt":"2020-03-02T09:00:53","Actor":"kyliau","Number":"35790","RawContent":null,"Title":"WIP fix(compiler): add keyspan for microsyntax bindings","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35790","RelatedDescription":"Open PR \"WIP fix(compiler): add keyspan for microsyntax bindings\" (#35790)"},{"Id":"573773684","IsPullRequest":false,"CreatedAt":"2020-03-02T07:33:38","Actor":"indraraj26","Number":"35788","RawContent":null,"Title":"[ng9]  Error: Angular JIT compilation failed: '@angular/compiler' not loaded!","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/....\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was:  ng8\r\n\r\n\r\n### Description\r\nng serve is running properly there is no error but sometime we are getting this in web browser console then we need to restart ng serve in order to work again\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\n<!-- ✍️--> https://stackblitz.com/...\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\ncore.js:3866 ERROR Error: Uncaught (in promise): Error: Angular JIT compilation failed: '@angular/compiler' not loaded!\r\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\r\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\r\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.\r\nError: Angular JIT compilation failed: '@angular/compiler' not loaded!\r\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\r\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\r\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.\r\n    at getCompilerFacade (core.js:548)\r\n    at Function.get (core.js:25892)\r\n    at getNgModuleDef (core.js:1865)\r\n    at new NgModuleFactory (core.js:24245)\r\n    at Compiler_compileModuleSync__POST_R3__ (core.js:27071)\r\n    at Compiler_compileModuleAsync__POST_R3__ [as compileModuleAsync] (core.js:27076)\r\n    at MergeMapSubscriber.project (router.js:3632)\r\n    at MergeMapSubscriber.push../node_modules/rxjs/_esm5/internal/operators/mergeMap.js.MergeMapSubscriber._tryNext (mergeMap.js:61)\r\n    at MergeMapSubscriber.push../node_modules/rxjs/_esm5/internal/operators/mergeMap.js.MergeMapSubscriber._next (mergeMap.js:51)\r\n    at MergeMapSubscriber.push../node_modules/rxjs/_esm5/internal/Subscriber.js.Subscriber.next (Subscriber.js:53)\r\n    at resolvePromise (zone.js:836)\r\n    at resolvePromise (zone.js:795)\r\n    at zone.js:897\r\n    at ZoneDelegate.invokeTask (zone.js:431)\r\n    at Object.onInvokeTask (core.js:27453)\r\n    at ZoneDelegate.invokeTask (zone.js:430)\r\n    at Zone.runTask (zone.js:198)\r\n    at drainMicroTaskQueue (zone.js:611)\r\n    at ZoneTask.invokeTask [as invoke] (zone.js:517)\r\n    at invokeTask (zone.js:1671)\r\n</code></pre>\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n>ng --version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 9.0.3\r\nNode: 10.16.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.3\r\n@angular-devkit/build-angular     0.900.3\r\n@angular-devkit/build-optimizer   0.900.3\r\n@angular-devkit/build-webpack     0.900.3\r\n@angular-devkit/core              9.0.3\r\n@angular-devkit/schematics        9.0.3\r\n@angular/cdk                      8.2.3\r\n@angular/cli                      9.0.3\r\n@angular/material                 8.2.3\r\n@ngtools/webpack                  9.0.3\r\n@schematics/angular               9.0.3\r\n@schematics/update                0.900.3\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular/issues/35788","RelatedDescription":"Open issue \"[ng9]  Error: Angular JIT compilation failed: '@angular/compiler' not loaded!\" (#35788)"},{"Id":"573705433","IsPullRequest":false,"CreatedAt":"2020-03-02T04:18:02","Actor":"Achilles1515","Number":"35787","RawContent":null,"Title":"[Ivy] (Memory Leak) Component references not released inside destroyed template (e.g. ngFor)","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/core, I guess\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> This is a bug in Ivy and is not present in View Engine.\r\nThe title states \"component references\", but it may be more than that. The example below is specifically pertaining to a component instance.\r\n\r\n### Description\r\n\r\nIn the demo below, an `*ngFor` is stamping out two templates containing a `TestComponent`. Click the button, which pops the last `ngForOf` item, destroying the second `TestComponent` instance.\r\n\r\nNow, take a heap snapshot of \"ng-run-preview.firebase.app\".\r\n\r\n\r\n----------------------------\r\n\r\nWith Ivy **enabled**:\r\n![image](https://user-images.githubusercontent.com/23387905/75644962-38c7b400-5c12-11ea-8042-4921520234a4.png)\r\n...**two** instances of `TabComponent` still remain in memory.\r\n\r\n\r\n----------------------------\r\n\r\nWith Ivy **disabled** (so, using View Engine):\r\n![image](https://user-images.githubusercontent.com/23387905/75644943-1e8dd600-5c12-11ea-8aa1-31803a49d611.png)\r\n...**one** instance of `TabComponent` remains, which is expected behavior.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\nhttps://ng-run.com/edit/2Cixj2OgChnV6TMEA3ZJ?open=app%2Fapp.component.ts\r\n","Url":"https://github.com/angular/angular/issues/35787","RelatedDescription":"Open issue \"[Ivy] (Memory Leak) Component references not released inside destroyed template (e.g. ngFor)\" (#35787)"},{"Id":"573694297","IsPullRequest":true,"CreatedAt":"2020-03-02T03:35:57","Actor":"ayazhafiz","Number":"35786","RawContent":null,"Title":"refactor(language-service): normalize completions tests","State":"open","Body":"This commit normalizes completions tests in the language service.\r\nThis is part of a small effort to simplify and normalize the language\r\nservice testing structure, which currently contains specs that are\r\nlargely created and left without relation to other tests.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/35786","RelatedDescription":"Open PR \"refactor(language-service): normalize completions tests\" (#35786)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"574337777","IsPullRequest":true,"CreatedAt":"2020-03-03T00:26:57","Actor":"kopach","Number":"17136","RawContent":null,"Title":"ci(@angular-devkit/build-angular): add ability to include untested files to coverage result","State":"open","Body":"Fix for issue #11227. Add `karma-sabarivka-reporter` as dependency for any new Angular project. This would allow including (if needed) untested files to coverage result. By default, no extra files are included, `include` config is empty.","Url":"https://github.com/angular/angular-cli/pull/17136","RelatedDescription":"Open PR \"ci(@angular-devkit/build-angular): add ability to include untested files to coverage result\" (#17136)"},{"Id":"574173055","IsPullRequest":false,"CreatedAt":"2020-03-03T00:10:56","Actor":"bryanrideshark","Number":"17134","RawContent":null,"Title":"ERROR in The Angular Compiler requires TypeScript >=3.6.4 and <3.8.0 but 3.8.3 was found instead.","State":"closed","Body":"\r\n### Description\r\n\r\nI just upgraded to Angular 9 using `ng update --all --force -C`. No other options worked.\r\n\r\nNow when I run `ng serve`, I get an error, `ERROR in The Angular Compiler requires TypeScript >=3.6.4 and <3.8.0 but 3.8.3 was found instead.`\r\n\r\nWhy did Angular update me to Typescript 3.8.3 if it's not supported?","Url":"https://github.com/angular/angular-cli/issues/17134","RelatedDescription":"Closed issue \"ERROR in The Angular Compiler requires TypeScript >=3.6.4 and <3.8.0 but 3.8.3 was found instead.\" (#17134)"},{"Id":"572275495","IsPullRequest":true,"CreatedAt":"2020-03-02T22:05:33","Actor":"clydin","Number":"17107","RawContent":null,"Title":"Initial TypeScript 3.8 Support","State":"closed","Body":"New projects are not yet created with TypeScript 3.8.  That change requires support from within the AOT compiler and can be done separately once supported.","Url":"https://github.com/angular/angular-cli/pull/17107","RelatedDescription":"Closed or merged PR \"Initial TypeScript 3.8 Support\" (#17107)"},{"Id":"574224286","IsPullRequest":false,"CreatedAt":"2020-03-02T20:22:49","Actor":"realharry","Number":"17135","RawContent":null,"Title":"Need a way to build smaller javascript files / to set maximum size for generated js files","State":"open","Body":"# 🚀 Feature request\r\n\r\nIt'll be nice to be able to control maximum size of the generated javascript files in some way, e.g., via a command line flag.\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\nI'm currently trying to set up an Angular SSR app on AWS Lambda + ALB. Unfortunately, there is a response size limit of 1Mb between ALB and Lambda. (https://docs.aws.amazon.com/elasticloadbalancing/latest/application/lambda-functions.html). Except for a trivial app, all my apps include at least one JS file that are larger than 1Mb. Sometimes it's `main-...js` files or it's `vendor-...js` files depending on the `--vendor-chunk`.\r\n\r\nThis is somewhat related to https://github.com/angular/angular-cli/issues/16866, but this is a request independent of any other problems. (I'm currently using cli v9.0.4, and enableIvy:false setting doesn't make much difference.) I never knew there was 1Mb limit when I started building for ALB+Lambda, and there will be many situations (currently unknown) that would prevent successful deployment of Angular apps in many different production environments.\r\n\r\nAt this point, there seems to be no workaround.\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\nSomething like `--max-js-size = 516k` will be nice to control the maximum size of the generated JS files. Instead of generating 1 main or 1 vendor files, they should be divided into multiple files, each no bigger than 516k, for instance.\r\n\r\n\r\n### Describe alternatives you've considered\r\n\r\nOr, alternatively, if we can control the number of generated JS files, that'll be useful as well. For example, `--main-js-files=3` will divide the main js files into 3 files instead of one.\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/17135","RelatedDescription":"Open issue \"Need a way to build smaller javascript files / to set maximum size for generated js files\" (#17135)"},{"Id":"573201291","IsPullRequest":true,"CreatedAt":"2020-03-02T20:14:11","Actor":"renovate[bot]","Number":"17122","RawContent":null,"Title":"build: update bazel_toolchains to version 2.1.1","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [bazel_toolchains](https://togithub.com/bazelbuild/bazel-toolchains) | http_archive | patch | `2.1.0` -> `2.1.1` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazel-toolchains</summary>\n\n### [`v2.1.1`](https://togithub.com/bazelbuild/bazel-toolchains/releases/2.1.1)\n\n[Compare Source](https://togithub.com/bazelbuild/bazel-toolchains/compare/2.1.0...2.1.1)\n\nSHA256:b5a8039df7119d618402472f3adff8a1bd0ae9d5e253f53fcc4c47122e91a3d2\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17122","RelatedDescription":"Closed or merged PR \"build: update bazel_toolchains to version 2.1.1\" (#17122)"},{"Id":"573201391","IsPullRequest":true,"CreatedAt":"2020-03-02T20:14:00","Actor":"renovate[bot]","Number":"17123","RawContent":null,"Title":"build: update sass to version 1.26.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | patch | [`1.26.1` -> `1.26.2`](https://renovatebot.com/diffs/npm/sass/1.26.1/1.26.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>sass/dart-sass</summary>\n\n### [`v1.26.2`](https://togithub.com/sass/dart-sass/blob/master/CHANGELOG.md#&#8203;1262)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.26.1...1.26.2)\n\n-   More aggressively eliminate redundant selectors in the `selector.extend()` and\n    `selector.replace()` functions.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17123","RelatedDescription":"Closed or merged PR \"build: update sass to version 1.26.2\" (#17123)"},{"Id":"573797712","IsPullRequest":true,"CreatedAt":"2020-03-02T20:13:50","Actor":"renovate[bot]","Number":"17127","RawContent":null,"Title":"build: update to version","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n:wrench: This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"before 5am on monday\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17127","RelatedDescription":"Closed or merged PR \"build: update to version\" (#17127)"},{"Id":"573816197","IsPullRequest":true,"CreatedAt":"2020-03-02T20:13:39","Actor":"renovate[bot]","Number":"17129","RawContent":null,"Title":"build: update webpack to version 4.42.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [webpack](https://togithub.com/webpack/webpack) | dependencies | minor | [`4.41.6` -> `4.42.0`](https://renovatebot.com/diffs/npm/webpack/4.41.6/4.42.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack/webpack</summary>\n\n### [`v4.42.0`](https://togithub.com/webpack/webpack/releases/v4.42.0)\n\n[Compare Source](https://togithub.com/webpack/webpack/compare/v4.41.6...v4.42.0)\n\n### Bugfixes\n\n-   Disable constant replacements in `\"use asm\"` scope\n-   Update schema to disallow functions for `output.hotUpdateChunkFilename` as this doesn't work\n-   Hoist exports in concatenated module to handle circular references with non-concatenated modules correctly\n-   Flag all modules as used in DLLs to fix missing exports\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17129","RelatedDescription":"Closed or merged PR \"build: update webpack to version 4.42.0\" (#17129)"},{"Id":"573827612","IsPullRequest":true,"CreatedAt":"2020-03-02T20:13:21","Actor":"renovate[bot]","Number":"17130","RawContent":null,"Title":"build: update webpack to version 4.42.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [webpack](https://togithub.com/webpack/webpack) | devDependencies | minor | [`4.41.6` -> `4.42.0`](https://renovatebot.com/diffs/npm/webpack/4.41.6/4.42.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack/webpack</summary>\n\n### [`v4.42.0`](https://togithub.com/webpack/webpack/releases/v4.42.0)\n\n[Compare Source](https://togithub.com/webpack/webpack/compare/v4.41.6...v4.42.0)\n\n### Bugfixes\n\n-   Disable constant replacements in `\"use asm\"` scope\n-   Update schema to disallow functions for `output.hotUpdateChunkFilename` as this doesn't work\n-   Hoist exports in concatenated module to handle circular references with non-concatenated modules correctly\n-   Flag all modules as used in DLLs to fix missing exports\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17130","RelatedDescription":"Closed or merged PR \"build: update webpack to version 4.42.0\" (#17130)"},{"Id":"573815165","IsPullRequest":false,"CreatedAt":"2020-03-02T17:32:45","Actor":"dave0688","Number":"17128","RawContent":null,"Title":"Build generates ES5 bundles even though \"es5BrowserSupport\" is set to false","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nNo, because \"es5BrowserSupport\" didn't exist before.\r\n\r\n### Description\r\nI've disabled `es5BrowserSupport` in my `angular.json` file (in `architect.build.options` section of the file), but when I run `ng build --prod` I still see the message in the console while building:\r\n\r\n`Generating ES5 bundles for differential loading...`\r\n\r\nAlso, in my `/dist` folder there's some js-files which indicate that `es5` files are generated (i.e. `polyfilles-es5.sf24fa3d.js`, `main-es5.sdlfjhsfhlecy34.js`.\r\n\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nrun `ng build --prod` with `es5BrowserSupport: false` in `angular.json`.\r\n\r\n## 🔥 Exception or Error\r\nConsole outputs:\r\n\r\n`Generating ES5 bundles for differential loading...`\r\n\r\nIt should **not** generate `es5` related files.\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 9.0.1\r\nNode: 12.7.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@angular/http                     7.2.16\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.8.2\r\nwebpack                           4.41.2\r\n</code>\r\n</pre>\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/17128","RelatedDescription":"Closed issue \"Build generates ES5 bundles even though \"es5BrowserSupport\" is set to false\" (#17128)"},{"Id":"574048373","IsPullRequest":false,"CreatedAt":"2020-03-02T15:22:43","Actor":"ignlg","Number":"17133","RawContent":null,"Title":"Maximum call stack size exceeded when running `ng xi18n` after updating to Angular 9","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [x] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 8.2.14\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️-->\r\nAfter updating to Angular 9.0.4, `ng xi18n` crashes.\r\n\r\nContrary to other potentially related issues, `ng build` and `ng serve` work fine and the application works fine (excluding i18n support).\r\n\r\nI have tried to remove and rebuild `node_modules` and looked for circular imports with Madge. Nothing worked.\r\n\r\nTried with every Angular 9.0.x version up to 9.0.4. Same result.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\nAdding i18n config into `angular.json` does not alter the result.\r\n\r\nEnabling Ivy at `tsconfig.json` does not alter the result.\r\n\r\n```\r\nng xi18n --output-path locale\r\n```\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->ERROR in Maximum call stack size exceeded\r\n</code></pre>\r\n\r\nAs there is not a `--verbose` option for `xi18n`, this is the only output I can get.\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 9.0.4\r\nNode: 12.16.1\r\nOS: darwin x64\r\n\r\nAngular: 9.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.4\r\n@angular-devkit/build-angular     0.900.4\r\n@angular-devkit/build-optimizer   0.900.4\r\n@angular-devkit/build-webpack     0.900.4\r\n@angular-devkit/core              9.0.4\r\n@angular-devkit/schematics        9.0.4\r\n@ngtools/webpack                  9.0.4\r\n@schematics/angular               9.0.4\r\n@schematics/update                0.900.4\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n\r\nCould be related to #17106 ","Url":"https://github.com/angular/angular-cli/issues/17133","RelatedDescription":"Open issue \"Maximum call stack size exceeded when running `ng xi18n` after updating to Angular 9\" (#17133)"},{"Id":"573972671","IsPullRequest":false,"CreatedAt":"2020-03-02T13:25:54","Actor":"bjowes","Number":"17132","RawContent":null,"Title":"ng commands should warn (or fail) on package.json and node_modules mismatch","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [x] build\r\n- [x] serve\r\n- [x] test\r\n- [x] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n(might apply to other commands too)\r\n\r\n### Description\r\nWhen multiple developers are working on the same application, it commonly occurs that one developer adds or updates a npm package used by the application and pushes the change. When another developer pulls that change, package.json is updated but node_modules is not. To fix this, the second developer should run `npm install` but this is often forgotten. This can lead to unexpected behavior when using `ng test` or `ng serve` - sometimes the error is quickly identified but sometimes it 'kind of works' and the second developer loses a lot of time tracking it down. \r\n\r\n### Describe the solution you'd like\r\nWhen executing a ng command (in particular the ones marked above), ng should check if package.json matches node_modules. If not, it should output a clear warning, or fail the command.\r\n\r\n### Describe alternatives you've considered\r\nAn alternative could be setting up an alias for ng that does the above check, but it would be much more user friendly if this was built in.","Url":"https://github.com/angular/angular-cli/issues/17132","RelatedDescription":"Open issue \"ng commands should warn (or fail) on package.json and node_modules mismatch\" (#17132)"},{"Id":"573928163","IsPullRequest":false,"CreatedAt":"2020-03-02T12:02:57","Actor":"richtems","Number":"17131","RawContent":null,"Title":"Empty source map with localization and --watch","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 8.2.2\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> When using @angular/localization and building with --watch, the main.js source map is empty.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--Please include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n```\r\nng new TestApp\r\ncd .\\TestApp\\\r\nng add @angular/localize\r\n```\r\n\r\nAdd i18n to project in angular.json:\r\n\r\n<pre><code>\r\n\"projects\": {\r\n  ...\r\n  \"TestApp\": {\r\n    ...\r\n    <i><b>\"i18n\": {\r\n      \"sourceLocale\": \"en-US\",\r\n      \"locales\": {\r\n        \"fr\": \"src/locale/messages.fr.xlf\"\r\n      }\r\n    }</b></i>\r\n    ...\r\n    \"architect\": {\r\n      \"build\": {\r\n          ...\r\n          \"options\": {\r\n            ...\r\n            <i><b>\"localize\": [\"fr\"],</b></i>\r\n\r\n</code></pre>\r\n\r\n`ng xi18n`\r\ncopy messages.xlf to \"src/locale/messages.fr.xlf\"\r\n`ng build --watch`\r\n\r\nNow the content of dist/TestApp/fr/main.js.map is:\r\n`{}`\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 9.0.4\r\nNode: 10.15.1\r\nOS: win32 x64\r\n\r\nAngular: 9.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.4\r\n@angular-devkit/build-angular     0.900.4\r\n@angular-devkit/build-optimizer   0.900.4\r\n@angular-devkit/build-webpack     0.900.4\r\n@angular-devkit/core              9.0.4\r\n@angular-devkit/schematics        9.0.4\r\n@ngtools/webpack                  9.0.4\r\n@schematics/angular               9.0.4\r\n@schematics/update                0.900.4\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\nMight be related to #16526 ?\r\n","Url":"https://github.com/angular/angular-cli/issues/17131","RelatedDescription":"Open issue \"Empty source map with localization and --watch\" (#17131)"},{"Id":"573503317","IsPullRequest":false,"CreatedAt":"2020-03-01T07:57:48","Actor":"xiaoxiangmoe","Number":"17126","RawContent":null,"Title":"support file replacement in i18n locales","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [x] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n<!-- ✍️--> A clear and concise description of the problem or missing capability...\r\n\r\nplease support file replacement in i18n locales.\r\n\r\nhttps://github.com/angular/angular-cli/blob/2998e5e0602168c2f63cde2a5f123bfb885bbcb7/packages/angular/cli/lib/config/schema.json#L416-L444\r\n### Describe the solution you'd like\r\n<!-- ✍️--> If you have a solution in mind, please describe it.\r\n\r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️--> Have you considered any alternative solutions or workarounds?\r\n","Url":"https://github.com/angular/angular-cli/issues/17126","RelatedDescription":"Open issue \"support file replacement in i18n locales\" (#17126)"},{"Id":"573303365","IsPullRequest":false,"CreatedAt":"2020-02-29T14:20:05","Actor":"denkan","Number":"17125","RawContent":null,"Title":"Allow .ts files in angular.json `scripts` to be transpiled to target ES version","State":"open","Body":"# 🚀 Feature request\r\n\r\n\r\n### Command\r\n- [x] build\r\n- [x] serve\r\n\r\n### Description\r\nThere are scenarios where we need to include a specific file to the bundle. Today, we can do this by using the `scripts` option in angular.json. But this only works for .js files. \r\n\r\nIt would be great to be able to specify .ts files too, which then get transpiled into target ES version.  \r\nThis would e.g. allow us to include separate files which reads from environments.ts vars correctly.\r\n\r\n**My specific scenario:**\r\nI'm implementing [Firebase Messaging](https://firebase.google.com/docs/cloud-messaging/js/receive), which require `firebase-messaging-sw.js` in the root and contains config vars for `messagingSenderId` (which I have stored in environment.ts). \r\n\r\n\r\n### Describe the solution you'd like\r\nWhen specifying an input with .ts extension, the builder transpiles it into .js.\r\n```json\r\n\"scripts\": [\r\n  { \"input\": \"src/firebase-messaging-sw.ts\", \"inject\": false, \"bundleName\": \"firebase-messaging-sw\" }\r\n]\r\n```\r\n\r\n\r\n### Describe alternatives you've considered\r\n[This solution ](https://stackoverflow.com/questions/55609495/how-to-compile-a-ts-file-to-js-in-angular-and-make-it-accessible-in-root-when-se) suggests to transpile the .ts file before the Angular build (`tsc my-file.ts && ng build`). \r\nBut then we won't access the correct environment.ts, as it gets determent in the Angular build...\r\n","Url":"https://github.com/angular/angular-cli/issues/17125","RelatedDescription":"Open issue \"Allow .ts files in angular.json `scripts` to be transpiled to target ES version\" (#17125)"},{"Id":"573228780","IsPullRequest":true,"CreatedAt":"2020-02-29T07:16:34","Actor":"renovate[bot]","Number":"17124","RawContent":null,"Title":"build: update inquirer to version 7.0.5","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [inquirer](https://togithub.com/SBoudrias/Inquirer.js) | dependencies | patch | [`7.0.4` -> `7.0.5`](https://renovatebot.com/diffs/npm/inquirer/7.0.4/7.0.5) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js</summary>\n\n### [`v7.0.5`](https://togithub.com/SBoudrias/Inquirer.js/compare/inquirer@7.0.4...inquirer@7.0.5)\n\n[Compare Source](https://togithub.com/SBoudrias/Inquirer.js/compare/inquirer@7.0.4...inquirer@7.0.5)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17124","RelatedDescription":"Open PR \"build: update inquirer to version 7.0.5\" (#17124)"},{"Id":"573201220","IsPullRequest":true,"CreatedAt":"2020-02-29T06:06:30","Actor":"renovate[bot]","Number":"17121","RawContent":null,"Title":"build: update angular packages","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | [`50bdd31` -> `7836a9f`](https://renovatebot.com/diffs/npm/angular%2fanimations-builds//) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | [`9481c2e` -> `9e91539`](https://renovatebot.com/diffs/npm/angular%2fcommon-builds//) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | [`d32f58e` -> `48336f7`](https://renovatebot.com/diffs/npm/angular%2fcompiler-builds//) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | [`23bdf67` -> `26b264e`](https://renovatebot.com/diffs/npm/angular%2fcompiler-cli-builds//) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | [`3160001` -> `5d3d489`](https://renovatebot.com/diffs/npm/angular%2fcore-builds//) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | [`11290c3` -> `fed2308`](https://renovatebot.com/diffs/npm/angular%2fforms-builds//) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | [`5287ffb` -> `39ba244`](https://renovatebot.com/diffs/npm/angular%2flanguage-service-builds//) |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | [`a378a8c` -> `4c79ce6`](https://renovatebot.com/diffs/npm/angular%2flocalize-builds//) |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | [`38d9aee` -> `c1e19bb`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-builds//) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | [`dd6e06b` -> `2f8bad6`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-dynamic-builds//) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | [`1a38462` -> `d730def`](https://renovatebot.com/diffs/npm/angular%2fplatform-server-builds//) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | [`252f9c5` -> `bb84fd7`](https://renovatebot.com/diffs/npm/angular%2frouter-builds//) |\n\n:abcd: If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17121","RelatedDescription":"Open PR \"build: update angular packages\" (#17121)"},{"Id":"572544738","IsPullRequest":true,"CreatedAt":"2020-02-28T20:28:06","Actor":"renovate[bot]","Number":"17112","RawContent":null,"Title":"build: update babel packages","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babeljs.io/) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.8.4` -> `7.8.6`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.8.4/7.8.6) |\n| [@babel/preset-env](https://babeljs.io/) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.8.4` -> `7.8.6`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.8.4/7.8.6) |\n| [@babel/template](https://babeljs.io/) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.8.3` -> `7.8.6`](https://renovatebot.com/diffs/npm/@babel%2ftemplate/7.8.3/7.8.6) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel</summary>\n\n### [`v7.8.6`](https://togithub.com/babel/babel/blob/master/CHANGELOG.md#v786-2020-02-27)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.8.4...v7.8.6)\n\n##### :eyeglasses: Spec Compliance\n\n-   `babel-helper-module-transforms`, `babel-helper-replace-supers`, `babel-plugin-transform-modules-commonjs`\n    -   [#&#8203;11109](https://togithub.com/babel/babel/pull/11109) Fix rewriteThis in helper-module-transforms for computed class elements ([@&#8203;sidntrivedi012](https://togithub.com/sidntrivedi012))\n-   `babel-parser`\n    -   [#&#8203;10956](https://togithub.com/babel/babel/pull/10956) Refactor await/yield production parameter tracking ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :boom: Breaking Change\n\n-   [#&#8203;11137](https://togithub.com/babel/babel/pull/11137) Breaking: align babel-eslint-parser & espree ([@&#8203;kaicataldo](https://togithub.com/kaicataldo))\n\n##### :rocket: New Feature\n\n-   `babel-helper-create-regexp-features-plugin`, `babel-plugin-transform-classes`, `babel-plugin-transform-named-capturing-groups-regex`, `babel-preset-env`\n    -   [#&#8203;11134](https://togithub.com/babel/babel/pull/11134) Mark `wrapNativeSuper` and `wrapRegExp` as pure ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :bug: Bug Fix\n\n-   `babel-helper-compilation-targets`\n    -   [#&#8203;11124](https://togithub.com/babel/babel/pull/11124) fix: search for browserslist if esmodules is falsy ([@&#8203;fengzilong](https://togithub.com/fengzilong))\n-   `babel-register`\n    -   [#&#8203;11160](https://togithub.com/babel/babel/pull/11160) fix: workaround misleading node.js ENOENT error ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-parser`\n    -   [#&#8203;11146](https://togithub.com/babel/babel/pull/11146) Parse declare modifier around accessibility modifiers ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;11092](https://togithub.com/babel/babel/pull/11092) Fix Async Generic After Await Parsing Error ([@&#8203;liamfd](https://togithub.com/liamfd))\n-   Other\n    -   [#&#8203;11137](https://togithub.com/babel/babel/pull/11137) Breaking: align babel-eslint-parser & espree ([@&#8203;kaicataldo](https://togithub.com/kaicataldo))\n-   `babel-compat-data`, `babel-preset-env`\n    -   [#&#8203;10929](https://togithub.com/babel/babel/pull/10929) Update preset-env builtin-definitions ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-traverse`\n    -   [#&#8203;11136](https://togithub.com/babel/babel/pull/11136) fix [@&#8203;babel/traverse](https://togithub.com/babel/traverse) can't use path.remove() with noScope ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-helper-create-class-features-plugin`, `babel-helper-replace-supers`\n    -   [#&#8203;11068](https://togithub.com/babel/babel/pull/11068) Fix classNameTDZError in computed prototype methods with class fields  ([@&#8203;sidntrivedi012](https://togithub.com/sidntrivedi012))\n-   `babel-template`\n    -   [#&#8203;11112](https://togithub.com/babel/babel/pull/11112) Respect preserveComments option in tempate.ast() ([@&#8203;dentrado](https://togithub.com/dentrado))\n-   `babel-plugin-transform-for-of`\n    -   [#&#8203;11088](https://togithub.com/babel/babel/pull/11088) Allow redeclaration of loop variable in body ([@&#8203;openorclose](https://togithub.com/openorclose))\n-   `babel-helper-module-transforms`, `babel-plugin-transform-modules-commonjs`\n    -   [#&#8203;11074](https://togithub.com/babel/babel/pull/11074) Fix export bindings not updated by 'for ... in' and 'for ... of' ([@&#8203;vedantroy](https://togithub.com/vedantroy))\n-   `babel-standalone`\n    -   [#&#8203;10797](https://togithub.com/babel/babel/pull/10797) fix: specify sourceFileName when generating inline sourcemaps ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-types`\n    -   [#&#8203;11089](https://togithub.com/babel/babel/pull/11089) Make `isReferenced` return false for method parameter name ([@&#8203;brokensandals](https://togithub.com/brokensandals))\n\n##### :nail_care: Polish\n\n-   `babel-core`, `babel-generator`, `babel-plugin-external-helpers`, `babel-plugin-proposal-async-generator-functions`, `babel-plugin-proposal-class-properties`, `babel-plugin-proposal-decorators`, `babel-plugin-proposal-function-bind`, `babel-plugin-transform-async-to-generator`, `babel-plugin-transform-classes`, `babel-plugin-transform-flow-comments`, `babel-plugin-transform-flow-strip-types`, `babel-plugin-transform-function-name`, `babel-plugin-transform-parameters`, `babel-plugin-transform-react-constant-elements`, `babel-plugin-transform-react-jsx`, `babel-plugin-transform-regenerator`, `babel-plugin-transform-runtime`, `babel-plugin-transform-typescript`, `babel-preset-env`\n    -   [#&#8203;11133](https://togithub.com/babel/babel/pull/11133) Skip newlines around inline `#__PURE__` annotations ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   Other\n    -   [#&#8203;11175](https://togithub.com/babel/babel/pull/11175) replace `gulp-watch` by `gulp.watch` ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;11163](https://togithub.com/babel/babel/pull/11163) chore: migrate lock threads to github actions ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;11164](https://togithub.com/babel/babel/pull/11164) chore: specify dependency rule of check-compat-data-ci ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;11106](https://togithub.com/babel/babel/pull/11106) Centralize [@&#8203;babel/eslint-](https://togithub.com/babel/eslint-)\\* tests ([@&#8203;kaicataldo](https://togithub.com/kaicataldo))\n    -   [#&#8203;11072](https://togithub.com/babel/babel/pull/11072) Update [@&#8203;babel](https://togithub.com/babel) deps ([@&#8203;existentialism](https://togithub.com/existentialism))\n    -   [#&#8203;11070](https://togithub.com/babel/babel/pull/11070) Clean babel-eslint-\\*/\\*\\*/lib ([@&#8203;kaicataldo](https://togithub.com/kaicataldo))\n-   `babel-generator`, `babel-helper-fixtures`, `babel-parser`, `babel-traverse`\n    -   [#&#8203;11168](https://togithub.com/babel/babel/pull/11168) Enable more eslint recommended rules ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-helper-replace-supers`\n    -   [#&#8203;11121](https://togithub.com/babel/babel/pull/11121) Fix typing of ReplaceSupers options ([@&#8203;existentialism](https://togithub.com/existentialism))\n-   `babel-core`, `babel-plugin-syntax-decorators`, `babel-template`, `babel-traverse`\n    -   [#&#8203;11119](https://togithub.com/babel/babel/pull/11119) Add eslint-plugin-jest ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-parser`\n    -   [#&#8203;11096](https://togithub.com/babel/babel/pull/11096) Wrap type-only class fields in flow comments ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-core`, `babel-parser`, `babel-types`\n    -   [#&#8203;11093](https://togithub.com/babel/babel/pull/11093) Turn on no-fallthrough rule ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-preset-stage-0`, `babel-preset-stage-1`, `babel-preset-stage-2`, `babel-preset-stage-3`\n    -   [#&#8203;11101](https://togithub.com/babel/babel/pull/11101) Remove stage presets from the monorepo ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-preset-env-standalone`\n    -   [#&#8203;10993](https://togithub.com/babel/babel/pull/10993) Archive [@&#8203;babel/preset-env-standalone](https://togithub.com/babel/preset-env-standalone) ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17112","RelatedDescription":"Closed or merged PR \"build: update babel packages\" (#17112)"},{"Id":"572544844","IsPullRequest":true,"CreatedAt":"2020-02-28T20:27:57","Actor":"renovate[bot]","Number":"17113","RawContent":null,"Title":"build: update rollup to version 1.32.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [rollup](https://togithub.com/rollup/rollup) | dependencies | minor | [`1.31.1` -> `1.32.0`](https://renovatebot.com/diffs/npm/rollup/1.31.1/1.32.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>rollup/rollup</summary>\n\n### [`v1.32.0`](https://togithub.com/rollup/rollup/blob/master/CHANGELOG.md#&#8203;1320)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v1.31.1...v1.32.0)\n\n_2020-02-28_\n\n##### Features\n\n-   Allow adding plugins on the command line via `--plugin <plugin>` ([#&#8203;3379](https://togithub.com/rollup/rollup/issues/3379))\n\n##### Pull Requests\n\n-   [#&#8203;3379](https://togithub.com/rollup/rollup/pull/3379): introduce CLI --plugin support ([@&#8203;kzc](https://togithub.com/kzc))\n-   [#&#8203;3390](https://togithub.com/rollup/rollup/pull/3390): fix typo: this.addWatchfile ([@&#8203;mistlog](https://togithub.com/mistlog))\n-   [#&#8203;3392](https://togithub.com/rollup/rollup/pull/3392): Bump codecov from 3.6.1 to 3.6.5\n-   [#&#8203;3404](https://togithub.com/rollup/rollup/pull/3404): Update resolveFileUrl docs ([@&#8203;jakearchibald](https://togithub.com/jakearchibald))\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17113","RelatedDescription":"Closed or merged PR \"build: update rollup to version 1.32.0\" (#17113)"},{"Id":"572572585","IsPullRequest":true,"CreatedAt":"2020-02-28T20:27:37","Actor":"renovate[bot]","Number":"17114","RawContent":null,"Title":"build: update tslib to version 1.11.1","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [tslib](https://www.typescriptlang.org/) ([source](https://togithub.com/Microsoft/tslib)) | dependencies | patch | [`1.11.0` -> `1.11.1`](https://renovatebot.com/diffs/npm/tslib/1.11.0/1.11.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>Microsoft/tslib</summary>\n\n### [`v1.11.1`](https://togithub.com/Microsoft/tslib/releases/1.11.1)\n\n[Compare Source](https://togithub.com/Microsoft/tslib/compare/1.11.0...1.11.1)\n\nThis release updates tslib's declaration files so that users don't have to include declarations for `WeakMap` in their compilation.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17114","RelatedDescription":"Closed or merged PR \"build: update tslib to version 1.11.1\" (#17114)"},{"Id":"572926262","IsPullRequest":false,"CreatedAt":"2020-02-28T18:24:27","Actor":"MDzyga","Number":"17120","RawContent":null,"Title":"Broken app: Cannot convert undefined or null to object","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\nCommand `ng` doesn't work!!!\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [x] run\r\n- [ ] config\r\n- [x] version\r\n\r\n\r\n### Is this a regression?\r\nYes, in version 8.3.25 & 9.0.0 it worked & application was stable.\r\n\r\n### Description\r\nMy application doesn't work on Azure after upgrading to the latest version of Angular.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\nTry to see a login page on my website https://traceabilit-webapp-stage.azurewebsites.net/login.\r\n\r\nI build my application on Jenkins executing this script:\r\n`npm run test:ci && sudo node --max_old_space_size=8000 ./node_modules/@angular/cli/bin/ng build --configuration dev --deploy-url /manage/ --base-href /manage/`\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\nTypeError: Cannot convert undefined or null to object\r\n    at getPrototypeOf (<anonymous>)\r\n    at t.value (Subject.js:81)\r\n    at t.value (Observable.js:28)\r\n    at t.value (core.js:36931)\r\n    at new e (core.js:42527)\r\n    at Object.a [as factory] (core.js:17023)\r\n    at e.value (core.js:16837)\r\n    at e.value (core.js:16598)\r\n    at ue (core.js:905)\r\n    at he (core.js:915)\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\nAzure Web App - Node 12.3.0\r\n\"@angular/animations\": \"^9.0.4\",\r\n\"@angular/cdk\": \"^9.1.0\",\r\n\"@angular/cli\": \"^9.0.4\",\r\n\"@angular/compiler-cli\": \"^9.0.4\",\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/17120","RelatedDescription":"Open issue \"Broken app: Cannot convert undefined or null to object\" (#17120)"},{"Id":"572871494","IsPullRequest":false,"CreatedAt":"2020-02-28T16:49:42","Actor":"c-jasonk","Number":"17118","RawContent":null,"Title":"ng update on yarn workspace with migrations","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n<!-- ✍️--> Migrations work great for libraries hosted in an npm repository. In a monorepo that uses yarn workspaces, there doesn't seem to be a great way to leverage them. If a shared library provides migrations but that library is consumed via yarn workspaces, that library never shows up in `ng update`. However, migrations can still be run `ng update my-shared-lib --from=1.0.0 --to=2.0.0 --migrate-only`. This is helpful for running shared migrations, but currently requires each migration run in this manner to be manually documented somewhere. If I were to run that in a given workspace, and then someone else later wanted to verify that the migration had been run, there wouldn't be any direct evidence of it. Additionally, when the next version of the shared library is \"released\" (in this case, version bumped as a result of new migrations being added), there isn't a good way to know what the next --from value should be unless someone else had previously documented the last --to value they used.\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️--> For libraries consumed via yarn workspaces, or possibly for any library whose migrations are run via `--from=x.x.x --to=y.y.y --migrate-only`, it would be great if the most recent --to value was persisted in some manner and then compared against the latest version available. In the scenario above, after running `ng update my-shared-lib --from=1.0.0 --to=2.0.0 --migrate-only` and then updating my-shared-lib to 3.0.0, the result of a subsequent `ng update` might look like:\r\n```\r\nWe analyzed your package.json, there are some packages to update:\r\n\r\n  Name                               Version                  Command to update\r\n --------------------------------------------------------------------------------\r\n  my-shared-lib                      2.0.0 -> 3.0.0           ng update my-shared-lib --from=2.0.0 --to=3.0.0 --migrate-only\r\n```\r\n","Url":"https://github.com/angular/angular-cli/issues/17118","RelatedDescription":"Open issue \"ng update on yarn workspace with migrations\" (#17118)"},{"Id":"572856567","IsPullRequest":false,"CreatedAt":"2020-02-28T16:21:58","Actor":"johnpapa","Number":"17117","RawContent":null,"Title":"ng update should have removed     tslint setting no-use-before-declare","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Description\r\n\r\nI ran `ng update`  to v9. Then I ran `npm run lint`. I received this error\r\n\r\n```\r\n▶npm run lint\r\n\r\n> heroes-angular@0.0.0 lint /Users/papa/_git/heroes-angular\r\n> ng lint\r\n\r\nLinting \"heroes-angular\"...\r\nno-use-before-declare is deprecated. Since TypeScript 2.9. Please use the built-in compiler checks instead.\r\nAll files pass linting.\r\n```\r\n\r\n\r\n\r\nIt seems I had a legacy setting in `tslint.json` for     `\"no-use-before-declare\": true,`\r\n\r\nIt would be great if the `ng update` removed any deprecated tslint settings.\r\n","Url":"https://github.com/angular/angular-cli/issues/17117","RelatedDescription":"Open issue \"ng update should have removed     tslint setting no-use-before-declare\" (#17117)"},{"Id":"572723566","IsPullRequest":false,"CreatedAt":"2020-02-28T12:22:49","Actor":"Drevoed","Number":"17116","RawContent":null,"Title":"Undefined ng variable and augury problems when using specific configuration file flag","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nPrevious versions of angular did not have a global `ng` variable available for debugging.\r\n\r\n\r\n### Description\r\n\r\nWhen serving via `ng serve` the default config file is used and everything is okay, augury detects that angular is running in dev mode and `ng` global variable is available. On the other hand, if I serve the project with specifying configuration file `ng serve --prod=false --configuration=xxxconf --aot=true` augury can't detect that project is in dev mode and `ng` variable is undefined, even though ```isDevMode()``` returns ```true```.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\nRun `ng serve` with specifiying a configuration and try to access global `ng` variable.\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 9.0.4\r\nNode: 10.15.2\r\nOS: linux x64\r\n\r\nAngular: 9.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\nIvy Workspace: Yes\r\n\r\nPackage                                    Version\r\n--------------------------------------------------------------------\r\n@angular-devkit/architect                  0.900.4\r\n@angular-devkit/build-angular              0.900.4\r\n@angular-devkit/build-optimizer            0.900.4\r\n@angular-devkit/build-webpack              0.900.4\r\n@angular-devkit/core                       7.3.9\r\n@angular-devkit/schematics                 7.3.9\r\n@angular/cdk                               9.0.1\r\n@ngtools/webpack                           9.0.4\r\n@nguniversal/builders                      9.0.1\r\n@nguniversal/common                        9.0.1\r\n@nguniversal/express-engine                9.0.1\r\n@nguniversal/module-map-ngfactory-loader   9.0.0-next.9\r\n@schematics/angular                        7.3.9\r\n@schematics/update                         0.900.4\r\nrxjs                                       6.5.4\r\ntypescript                                 3.7.5\r\nwebpack                                    4.41.6\r\n</code></pre>\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17116","RelatedDescription":"Open issue \"Undefined ng variable and augury problems when using specific configuration file flag\" (#17116)"},{"Id":"572443637","IsPullRequest":false,"CreatedAt":"2020-02-28T06:46:48","Actor":"pburkindine","Number":"17110","RawContent":null,"Title":"entryComponents required in tests","State":"closed","Body":"We are having to declare entryComponents in tests after upgrading to A9; the documentation indicates this should not be necessary\r\n```\r\n\r\n@NgModule({\r\n  entryComponents: [\r\n    xyz,\r\n  ]\r\n})\r\nexport class ImportModule {}\r\n```\r\n\r\n```\r\n beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [RouterTestingModule, ImportModule],\r\n...\r\n```","Url":"https://github.com/angular/angular-cli/issues/17110","RelatedDescription":"Closed issue \"entryComponents required in tests\" (#17110)"},{"Id":"572588371","IsPullRequest":false,"CreatedAt":"2020-02-28T06:29:34","Actor":"AcidSlide","Number":"17115","RawContent":null,"Title":"Angular 9.0.4 still gives me build error (Regression??)","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nStill related I think with angular/angular#35709 \r\nwhen running `ng build`\r\n![image](https://user-images.githubusercontent.com/6833047/75516077-84be0180-5a36-11ea-9b97-f5be26b44557.png)\r\n\r\n\r\n### Is this a regression?\r\nWas working in 9.0.2\r\n\r\n\r\n### Description\r\nSimilar to yesterdays issue with 9.0.3, after updating to 9.0.4, angular won't build the project anymore.\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/17115","RelatedDescription":"Open issue \"Angular 9.0.4 still gives me build error (Regression??)\" (#17115)"},{"Id":"572361230","IsPullRequest":false,"CreatedAt":"2020-02-27T21:17:03","Actor":"adamdport","Number":"17109","RawContent":null,"Title":"ERROR in Cannot read property 'push' of undefined","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [X] build\r\n- [X] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\nYes, I didn't see this issue before trying to upgrade to Angular 9\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\nWhen I run `ng serve`, I get a red error, `ERROR in Cannot read property 'push' of undefined`. There is no stack trace.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n$ ng serve\r\n0% compiling\r\nCompiling @ngx-translate/http-loader : es2015 as esm2015\r\n\r\nchunk {main} main.js, main.js.map (main) 2 kB [initial] [rendered]\r\nchunk {polyfills} polyfills.js, polyfills.js.map (polyfills) 679 bytes [initial] [rendered]\r\nchunk {runtime} runtime.js, runtime.js.map (runtime) 6.15 kB [entry] [rendered]\r\nchunk {styles} styles.js, styles.js.map (styles) 526 kB [initial] [rendered]\r\nchunk {vendor} vendor.js, vendor.js.map (vendor) 340 kB [initial] [rendered]\r\nDate: 2020-02-27T20:58:39.458Z - Hash: a28c43a5df921416a87c - Time: 8915ms\r\n\r\nERROR in Cannot read property 'push' of undefined\r\n** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ **</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\nAngular CLI: 9.0.3\r\nNode: 10.15.1\r\nOS: win32 x64\r\n\r\nAngular: 9.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.900.3\r\n@angular-devkit/build-angular      0.900.3\r\n@angular-devkit/build-optimizer    0.900.3\r\n@angular-devkit/build-webpack      0.900.3\r\n@angular-devkit/core               9.0.3\r\n@angular-devkit/schematics         9.0.3\r\n@angular/cdk                       9.1.0\r\n@angular/flex-layout               9.0.0-beta.29\r\n@angular/material                  9.1.0\r\n@angular/material-moment-adapter   9.1.0\r\n@ngtools/webpack                   9.0.3\r\n@schematics/angular                9.0.3\r\n@schematics/update                 0.900.3\r\nrxjs                               6.5.4\r\ntypescript                         3.7.5\r\nwebpack                            4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nI have 2 projects and a library. Both projects depend on the library. The first project and the library work fine and I have successfully upgraded to Angular 9. The second project gives me this error. I am not sure how to go about debugging this. `--verbose=true` did not give me any helpful output. \r\n\r\nOne note is that sometimes it starts spitting out errors about tests after giving me that error? `Cannot find name 'beforeEach'`, `Cannot find name 'it'`, `Cannot find name 'describe'`, `Cannot find name 'expect'`, etc. I didn't run tests, and the printing of these errors is not consistent.\r\n\r\nIf there is another flag I can pass in to increase the log level I'd be happy to try it to provide more info. ","Url":"https://github.com/angular/angular-cli/issues/17109","RelatedDescription":"Closed issue \"ERROR in Cannot read property 'push' of undefined\" (#17109)"},{"Id":"572124911","IsPullRequest":false,"CreatedAt":"2020-02-27T14:28:04","Actor":"michalSolarz","Number":"17106","RawContent":null,"Title":"Maximum call stack size exceeded after updating `@angular/compiler-cli`","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 9.0.2\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> After updating `@angular/compiler-cli 9.0.3` during ng serve I receive following error: `ERROR in Maximum call stack size exceeded`\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre>ERROR in Maximum call stack size exceeded</pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre>\r\nng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 9.0.3\r\nNode: 12.13.1\r\nOS: linux x64\r\n\r\nAngular: 9.0.3\r\n... animations, cli, common, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.3\r\n@angular-devkit/build-angular     0.900.3\r\n@angular-devkit/build-optimizer   0.900.3\r\n@angular-devkit/build-webpack     0.900.3\r\n@angular-devkit/core              9.0.3\r\n@angular-devkit/schematics        9.0.3\r\n@angular/cdk                      9.1.0\r\n@angular/compiler                 9.0.2\r\n@angular/material                 9.1.0\r\n@ngtools/webpack                  9.0.3\r\n@schematics/angular               9.0.3\r\n@schematics/update                0.900.3\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17106","RelatedDescription":"Open issue \"Maximum call stack size exceeded after updating `@angular/compiler-cli`\" (#17106)"},{"Id":"572082016","IsPullRequest":true,"CreatedAt":"2020-02-27T13:24:52","Actor":"alan-agius4","Number":"17105","RawContent":null,"Title":"feat(@ngtools/webpack): integration ngcc async","State":"open","Body":"See: https://github.com/angular/angular/issues/35717","Url":"https://github.com/angular/angular-cli/pull/17105","RelatedDescription":"Open PR \"feat(@ngtools/webpack): integration ngcc async\" (#17105)"},{"Id":"572282321","IsPullRequest":false,"CreatedAt":"2020-02-17T19:33:30","Actor":"jonstelly","Number":"17108","RawContent":null,"Title":"ng update - Doesn't honor 'preserveSymlinks' flag, causes re-build for migrations to fail","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [x] update\r\n\r\n### Is this a regression?\r\n\r\nunsure\r\n\r\n### Description\r\n\r\nI have an angular cli project with npm symlinks to a different framework project.  When running an update `ng update @angular/cli @angular/core rxjs`, it seems that the package update/installation phase doesn't honor the `\"preserveSymlinks\": true` setting.  The result is that my framework symlink is removed, which causes the project to fail compilation so the migrations don't all run correctly.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n```bash\r\nnpm i -g @angular/cli@8.3.25\r\nmkdir ng-up\r\ncd ng-up\r\nng new framework\r\ncd framework\r\nng g lib @myfw/model\r\nng build @myfw/model\r\ncd ./dist/myfw/model\r\nnpm link\r\ncd ../../../..\r\nng new app\r\ncd app\r\nnpm link @myfw/model\r\n#edit ./app/src/app/app.module.ts to the below (importing ModelModule from @myfw/model\r\n#edit ./app/angular.json, add `preserveSymlinks: true`\r\nng serve #The app runs as expected\r\n```\r\n\r\napp/src/app/app.module.ts\r\n```typescript\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ModelModule } from '@myfw/model' //<- Add this from @myfw/model\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ModelModule //<- Add this from @myfw/model\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n```\r\n\r\nupgrade process\r\n```bash\r\nnpm i -g @angular/cli #Update angular cli to 9.0.2\r\ncd ../framework\r\nng update @angular/cli @angular/core rxjs --force #--force is needed for tsickle\r\nng build @myfw/model\r\ncd ../app\r\nng update @angular/cli @angular/core rxjs\r\n```\r\nget error as seen below.  `ls ./node_modules/@myfw` shows no directories, the symlinks have been deleted.\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n> Undecorated classes with DI migration.\r\n  As of Angular 9, it is no longer supported to use Angular DI on a class that does not have an Angular decorator.\r\n  Read more about this here: https://v9.angular.io/guide/migration-undecorated-classes\r\n\r\n    This migration uses the Angular compiler internally and therefore projects that no longer build successfully after the update cannot run the migration. Please ensure there are no AOT compilation errors and rerun the migration. The following project failed: tsconfig.app.json\r\n\r\n    Error: error TS100: src\\app\\app.module.ts(13,5): Error during template compile of 'AppModule'\r\n      Could not resolve @myfw/model relative to [object Object]..\r\n    error TS100: src\\app\\app.module.ts(13,5): Error during template compile of 'AppModule'\r\n      Could not resolve @myfw/model relative to [object Object]..\r\n\r\n\r\n    Could not migrate all undecorated classes that use dependency\r\n    injection. Some project targets could not be analyzed due to\r\n    TypeScript program failures.\r\n\r\n    Migration can be rerun with: \"ng update @angular/core --migrate-only migration-v9-undecorated-classes-with-di\"\r\n\r\n  Migration completed.\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n@angular/cli 8.3.25 to start (to generate the original projects)\r\n<pre><code>\r\nAngular CLI: 9.0.2\r\nNode: 12.11.1\r\nOS: win32 x64\r\n\r\nAngular: 9.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.2\r\n@angular-devkit/build-angular     0.900.2\r\n@angular-devkit/build-optimizer   0.900.2\r\n@angular-devkit/build-webpack     0.900.2\r\n@angular-devkit/core              9.0.2\r\n@angular-devkit/schematics        9.0.2\r\n@angular/cli                      9.0.2\r\n@ngtools/webpack                  9.0.2\r\n@schematics/angular               9.0.2\r\n@schematics/update                0.900.2\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17108","RelatedDescription":"Open issue \"ng update - Doesn't honor 'preserveSymlinks' flag, causes re-build for migrations to fail\" (#17108)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"574420557","IsPullRequest":true,"CreatedAt":"2020-03-03T05:11:35","Actor":"soumya92","Number":"18685","RawContent":null,"Title":"fix(cdk/testing): don't send unnecessary `Key.chord`s to protractor","State":"open","Body":"Because of a bug in geckodriver, Key.Chord does not work as expected when testing under Firefox. While there is no complete solution to that problem, this change at least reduces the frequency with which users will encounter the bug.\r\n\r\nBefore: bug encountered on any invocation of sendKeys.\r\nAfter: bug only encountered when using modifier keys. Plain text can still be entered.","Url":"https://github.com/angular/components/pull/18685","RelatedDescription":"Open PR \"fix(cdk/testing): don't send unnecessary `Key.chord`s to protractor\" (#18685)"},{"Id":"574399871","IsPullRequest":true,"CreatedAt":"2020-03-03T03:59:07","Actor":"nickwalther","Number":"18684","RawContent":null,"Title":"perf(focus-monitor): Add detection window option","State":"open","Body":"Add a detection window option to FocusMonitor to allow users to increase the timeout for attributing previous user event types as focus event origins.","Url":"https://github.com/angular/components/pull/18684","RelatedDescription":"Open PR \"perf(focus-monitor): Add detection window option\" (#18684)"},{"Id":"574389838","IsPullRequest":false,"CreatedAt":"2020-03-03T03:23:54","Actor":"realharry","Number":"18683","RawContent":null,"Title":"@angular/material-moment-adapter brings in all locales of moment.js - Resulting in dramatic increase in bundle size","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Add a dependency on `MatMomentDateModule` on your angular app. \r\n2. Build the app with `ng build --prod`.\r\n3. Notice the increase in the output bundle size. \r\n\r\nScreenshot of webpack-bundle-analyzer of the main bundle (built with `--stats-json`):\r\n\r\n![Stats - Screenshot from 2020-03-02 19-10-41](https://user-images.githubusercontent.com/28793852/75739666-5cded000-5cba-11ea-9d69-a7f8c75ad442.png)\r\n\r\n\r\n#### Expected Behavior\r\n\r\nAddition of a \"simple\" widget should not increase the output bundle size dramatically.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nHuge increase in the bundle size, on the order of a few hundred kilobytes. (Over 338kb added by moment.js alone, in my example.)\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0.4\r\n- CDK/Material: 9.1.0\r\n- Browser(s): N/A\r\n- Operating System (e.g. Windows, macOS, Ubuntu): N/A\r\n","Url":"https://github.com/angular/components/issues/18683","RelatedDescription":"Open issue \"@angular/material-moment-adapter brings in all locales of moment.js - Resulting in dramatic increase in bundle size\" (#18683)"},{"Id":"574382016","IsPullRequest":false,"CreatedAt":"2020-03-03T02:57:11","Actor":"kctang","Number":"18682","RawContent":null,"Title":"Dynamic nested tree - children data loaded twice","State":"open","Body":"I hit this issue when trying to implement a nested tree using Angular Material where nodes can dynamically load children nodes (when user expands the tree control).\r\n\r\n#### Reproduction\r\n\r\nSee a demo of the issue [here](https://stackblitz.com/edit/angular-material-dynamic-nested-tree).\r\n\r\nI asked as a question on SO [here](https://stackoverflow.com/questions/60489721/unexpected-behavior-with-angular-materials-nested-tree-with-dynamic-nodes).\r\n \r\n#### Expected Behavior\r\n\r\nIn the demo, nodes with nested children returns an observable of nodes[]. I expect this to be called once (i.e. when user expands the node).\r\n\r\n#### Actual Behavior\r\n\r\nWhen user expands the node, the observable is called twice (i.e. loading data twice). However, end result 'seems to work' - just not ideal as it loads data twice.\r\n\r\n#### Additional Comments\r\n\r\nI expect `getChildren` function passed to `NestedTreeControl` to be called once per node but i think it can be called twice.\r\n\r\n\r\nBased on my local testing, if I remove `<mat-nested-tree-node>` (in green), then `getChildren` is called once per node. I think it has something to do with this but I do not understand the internals of this tree component enough to say more.\r\n\r\nHope someone can help or point me to the right direction. Cheers!\r\n\r\n![image](https://user-images.githubusercontent.com/1495212/75738134-732d7000-5d3c-11ea-86a7-d96269bb5dc4.png)\r\n","Url":"https://github.com/angular/components/issues/18682","RelatedDescription":"Open issue \"Dynamic nested tree - children data loaded twice\" (#18682)"},{"Id":"574280282","IsPullRequest":false,"CreatedAt":"2020-03-02T22:07:49","Actor":"pburkindine","Number":"18681","RawContent":null,"Title":"MAT_LABEL_GLOBAL_OPTIONS deprecated but float doesn't work w/o","State":"open","Body":"#### Reproduction\r\n\r\nhttps://stackblitz.com/edit/float-always\r\n\r\nSteps to reproduce:\r\n1. label should be floated but isn't\r\n\r\n\r\nAfter bumping to material 9.1.0 from 9.0.1, MAT_LABEL_GLOBAL_OPTIONS is listed in lint as deprecated in favor of MAT_FORM_FIELD_DEFAULT_OPTIONS; however this does not work as expected at least for the `float` default previously set up for label.\r\n\r\nReplacing:\r\n```\r\n{\r\n      provide: MAT_LABEL_GLOBAL_OPTIONS,\r\n      useValue: { float: 'always' }\r\n}\r\n```\r\nby adding float to MAT_FORM_FIELD_DEFAULT_OPTIONS...\r\n```\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: { appearance: 'outline', float: 'always' }\r\n    },\r\n```\r\n\r\n... does not result in a floating placeholder.","Url":"https://github.com/angular/components/issues/18681","RelatedDescription":"Open issue \"MAT_LABEL_GLOBAL_OPTIONS deprecated but float doesn't work w/o\" (#18681)"},{"Id":"574271112","IsPullRequest":false,"CreatedAt":"2020-03-02T21:49:28","Actor":"realharry","Number":"18680","RawContent":null,"Title":"Layout issues with CDK BreakpointObserver when used with Angular SSR ","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create an angular app. Use BreakpointObserver to dynamically adjust layouts based on the window size.\r\n2. Enable Angular SSR.\r\n3. Load an app and observe that the initial server-loaded layout is different from the client-based layout.\r\n \r\n \r\n#### Expected Behavior\r\n\r\nIt'll be great if the server-side rendering and client-side rendering use the same layout.\r\n\r\n#### Actual Behavior\r\n\r\nServer-side rendered page layout is completely different from the client-side layout. I'm not sure if there will be any solution for this. But, unfortunately, the current implementation essentially makes server side rendering incompatible with BreakpointObserver. That is, if you wanna use SSR, you cannot use BreakpointObserver. Or, if you use BreakpointObserver, you cannot really use SSR (because of the abrupt layout change during the page load).\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0.4\r\n- CDK/Material: 9.1.0\r\n- Browser(s): N/A\r\n- Operating System (e.g. Windows, macOS, Ubuntu): N/A\r\n","Url":"https://github.com/angular/components/issues/18680","RelatedDescription":"Open issue \"Layout issues with CDK BreakpointObserver when used with Angular SSR \" (#18680)"},{"Id":"574250489","IsPullRequest":true,"CreatedAt":"2020-03-02T21:11:31","Actor":"devversion","Number":"18679","RawContent":null,"Title":"build: fix dev-server running in snippet mode","State":"open","Body":"Browsersync has 3 possible modes. `snippet`, `proxy` and `server`. We\r\ncurrently run with `snippet` even though we actually want to serve with\r\nthe live-reloading script being injected automatically.\r\n\r\nIn order to ensure that Browsersync runs in the `server` mode and\r\nproperly prints the URL to the http server, we re-enable the\r\n`server` option that has been disabled in the past for security reasons.\r\nThe logic to prevent directory traversal still remains, and we also\r\nexplicitly disable directory listing (even though we have manual request\r\ninterception).\r\n\r\n@jelbourn I verified that your directory traversal logic still works:\r\n\r\n```ts\r\ncurl --path-as-is http://localhost:4200/../../../../../../../../../../Desktop/test.ts\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    73  100    73    0     0  73000      0 --:--:-- --:--:-- --:--:-- 73000\r\nTEST FILE CONTENT\r\n```\r\n\r\n```ts\r\ncurl --path-as-is http://localhost:4200/../../../../../../../../../../Desktop/test.ts\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100    35  100    35    0     0   2187      0 --:--:-- --:--:-- --:--:--  2187\r\nError: Detected directory traversal\r\n```","Url":"https://github.com/angular/components/pull/18679","RelatedDescription":"Open PR \"build: fix dev-server running in snippet mode\" (#18679)"},{"Id":"574248195","IsPullRequest":false,"CreatedAt":"2020-03-02T21:07:02","Actor":"pburkindine","Number":"18678","RawContent":null,"Title":"MAT_LABEL_GLOBAL_OPTIONS deprecated but docs still show it","State":"open","Body":"#### Documentation Feedback\r\n\r\nhttps://material.angular.io/components/form-field/overview\r\n\r\n...still points to MAT_LABEL_GLOBAL_OPTIONS for setting `float`, but the compiler indicates this token is deprecated in favor of MAT_FORM_FIELD_DEFAULT_OPTIONS","Url":"https://github.com/angular/components/issues/18678","RelatedDescription":"Open issue \"MAT_LABEL_GLOBAL_OPTIONS deprecated but docs still show it\" (#18678)"},{"Id":"574241313","IsPullRequest":false,"CreatedAt":"2020-03-02T20:53:25","Actor":"saunandrea","Number":"18677","RawContent":null,"Title":"Drag and Drop: Distinguish a click event from a drag event","State":"open","Body":"#### Feature Description\r\n\r\nI came to the Angular drag and drop from Dragula which supports distinguishing click from drag. \r\n\r\nDragula: \"Click or Drag! Fires a click when the mouse button is released before a mousemove event, otherwise a drag event is fired. No extra configuration is necessary.\"\r\nhttps://bevacqua.github.io/angularjs-dragula/\r\n\r\nMaybe this already exists but I couldn't find any documentation indicating as much.\r\n\r\n#### Use Case\r\n\r\nWhile dragging allows you to add the item in a specific location, clicking would just add the item to the end of the list. \r\n\r\n\r\n\r\n","Url":"https://github.com/angular/components/issues/18677","RelatedDescription":"Open issue \"Drag and Drop: Distinguish a click event from a drag event\" (#18677)"},{"Id":"574207145","IsPullRequest":false,"CreatedAt":"2020-03-02T19:50:46","Actor":"frct1","Number":"18676","RawContent":null,"Title":"Change progress bar value from component instance","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  Create progress bar dynamically through ComponentFactoryResolver\r\n2. Try to change value of progress bar instance\r\n \r\n \r\n#### Expected Behavior\r\nChanging value and progress bar mode through component instance\r\n\r\n#### Actual Behavior\r\nValue not changing (without any errors). When changing mode of progress bar through component instance also not working. Looks like it is just takes only first defined property values.\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0.0\r\n- CDK/Material: 9.0.0-rc.10\r\n- Browser(s): Chrome 80\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/18676","RelatedDescription":"Open issue \"Change progress bar value from component instance\" (#18676)"},{"Id":"574134365","IsPullRequest":false,"CreatedAt":"2020-03-02T17:37:05","Actor":"ahmetnas-loxodon","Number":"18675","RawContent":null,"Title":"Angular Material shadow missing while closing mat-sidenav ","State":"open","Body":"#### Bug, feature request, or proposal:\r\n![sidenav](https://user-images.githubusercontent.com/61705241/75700903-1a65c500-5cb3-11ea-8279-53e0ac989d46.gif)\r\n\r\nI created a mat-sidenav with an opportunity to close and open with a button. The closed version is not collapsing totally but changes to a thin version. Also, I put a box-shadow for both versions. But there is something going wrong about the box-shadow while closing (see the gif above). The shadow is blinking while closing.\r\nThe class I created:\r\n`.mat-shadow {\r\n  box-shadow: -5px 15px 5px 10px rgba(60, 60, 60, 0.2), -5px 0 5px -5px rgba(60, 60, 60, 0.3),\r\n    -5px 0 5px -5px rgba(139, 139, 139, 0.4) !important;\r\n}`\r\n\r\n#### What is the expected behavior?\r\nShadow remains the same while the animation is happening \r\n\r\n\r\n#### What is the current behavior?\r\n\r\n\r\n#### What are the steps to reproduce?\r\nProviding a StackBlitz reproduction is the *best* way to share your issue. <br/>\r\nStackBlitz starter: https://goo.gl/wwnhMV<br/>\r\n\r\n\r\n#### What is the use-case or motivation for changing an existing behavior?\r\n\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\nAngular CLI: 8.3.25\r\nNode: 10.16.3\r\nOS: win32 x64\r\nAngular: 8.2.14\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.803.25\r\n@angular-devkit/build-angular     0.803.25\r\n@angular-devkit/build-optimizer   0.803.25\r\n@angular-devkit/build-webpack     0.803.25\r\n@angular-devkit/core              8.3.25\r\n@angular-devkit/schematics        8.3.25\r\n@angular/cdk                      8.2.3\r\n@angular/cli                      8.3.25\r\n@angular/flex-layout              8.0.0-beta.27\r\n@angular/material                 8.2.3\r\n@ngtools/webpack                  8.3.25\r\n@schematics/angular               8.3.25\r\n@schematics/update                0.803.25\r\nrxjs                              6.4.0\r\ntypescript                        3.5.3\r\nwebpack                           4.39.2\r\n\r\n#### Is there anything else we should know?\r\nMaybe this is somehow related to the [#8386](https://github.com/angular/components/issues/8386)\r\n","Url":"https://github.com/angular/components/issues/18675","RelatedDescription":"Open issue \"Angular Material shadow missing while closing mat-sidenav \" (#18675)"},{"Id":"573289846","IsPullRequest":false,"CreatedAt":"2020-03-02T17:33:32","Actor":"Gnorro","Number":"18658","RawContent":null,"Title":"How to create mat-table dynamically","State":"closed","Body":"Hi\r\n\r\nI read lots about adding mat-table columns dinamically but I couldn't do what I need.\r\n\r\nI need to create a mat-table dynamically. This table can't have a fixed number of columns because that number depends on the results of an API call.\r\n\r\nThis is en example of what I get from API call:\r\n```javascript\r\n[\r\n\t{\r\n\t\t\"productCode\": \"24.250.01\",\r\n\t\t\"Valvola\": \"22.398.14 \",\r\n\t\t\"Kg\": \"40/60 \",\r\n\t\t\"Taglia\": \"S \",\r\n\t\t\"Variante\": \"Codice giacca \",\r\n\t\t\"Colore\": \" COLORE_rosso_pieno Rosso \"\r\n\t},\r\n\t{\r\n\t\t\"productCode\": \"24.250.02\",\r\n\t\t\"Valvola\": \"22.398.14 \",\r\n\t\t\"Kg\": \"50/70 \",\r\n\t\t\"Taglia\": \"M \",\r\n\t\t\"Variante\": \"Codice giacca \",\r\n\t\t\"Colore\": \" COLORE_rosso_pieno Rosso \"\r\n\t},\r\n\t{\r\n\t\t\"productCode\": \"24.250.03\",\r\n\t\t\"Valvola\": \"22.398.14 \",\r\n\t\t\"Kg\": \"Oltre 60 \",\r\n\t\t\"Taglia\": \"L \",\r\n\t\t\"Variante\": \"Codice giacca \",\r\n\t\t\"Colore\": \" COLORE_rosso_pieno Rosso \"\r\n\t}\r\n]\r\n```\r\n\r\nThe number of fields returned by API call is dynamic: In this example are 6 fields, but it can be also something like:\r\n```json\r\n{\r\n\t\t\"productCode\": \"24.250.03\",\r\n\t\t\"Misura\": \"1\",\r\n\t\t\"Peso\": \"12\",\r\n\t\t\"Spessore\": \"3\"\r\n\t}\r\n```\r\n\r\nWhat I need is to create a mat-table with 6 columns (for the 1st example) or 4 (for the 2nd example)\r\nAnd then display data consequently\r\n\r\nCan you help me please?\r\n\r\nthanks","Url":"https://github.com/angular/components/issues/18658","RelatedDescription":"Closed issue \"How to create mat-table dynamically\" (#18658)"},{"Id":"573944599","IsPullRequest":true,"CreatedAt":"2020-03-02T16:44:21","Actor":"maksymmakartsov","Number":"18670","RawContent":null,"Title":"Fixed drag&drop inside dialog","State":"closed","Body":"fix(cdk/drag-drop): drag&drop not working inside dialog if the page was scrolled\r\n\r\nFixes a bug in Angular Material 'drag-drop' component where\r\ncalculations in method '_getPointerPositionOnPage' was\r\nincorrect in a situation when 'drag-drop' container has a fixed parent.\r\n\r\nFixes #15880","Url":"https://github.com/angular/components/pull/18670","RelatedDescription":"Closed or merged PR \"Fixed drag&drop inside dialog\" (#18670)"},{"Id":"574042371","IsPullRequest":true,"CreatedAt":"2020-03-02T15:13:44","Actor":"fileto1","Number":"18674","RawContent":null,"Title":"Update table-row-context-example.html","State":"open","Body":"Fixed comments for each column.","Url":"https://github.com/angular/components/pull/18674","RelatedDescription":"Open PR \"Update table-row-context-example.html\" (#18674)"},{"Id":"574011233","IsPullRequest":false,"CreatedAt":"2020-03-02T14:27:07","Actor":"ataraciuk","Number":"18673","RawContent":null,"Title":"[cdk drag drop] restrict possible insert positions for a drag into a dropList","State":"open","Body":"#### Feature Description\r\n\r\nI would like to be able to somehow limit at what positions a drag element can be dropped into a dropList. I couldn't find any way of doing that with the current API.\r\n\r\nIdeally, if let's say a drag can only be dropped into position 3 or bigger, and it's begin dragged over position 1, the drop would still allowed, but the placeholder would show position 3, and drop event would occur over position 3, and not 1.\r\n\r\nI'm considering using a combination of CdkDragEnter and CdkDragMove to style the placehoder for invalid positions and then the drop event to cancel an invalid move, but maybe there's a better way of doing that? Any advice will be appreciated.\r\n\r\nI also considered using multiple droplists, but I need the whole area to be droppable, and with the long term goal of showing the placeholder on the previous valid index (as opposed to not showing a placeholder and not allowing the drop), a single dropList sounds a better approach.\r\n\r\nThank you.\r\n\r\n#### Use Case\r\n\r\nFor a dropList with 10 elements, a drag element can only be dropped between positions 3 and 7. Dragging over positions 1 and 2 shows the placeholder element on position 3, and drop event has position parameter set as 3. As a less desirable but still happy outcome, when dragging over positions 1 or 2 a placeholder is not shown, and the dropList does not fire the drop event when dropping there, as if the move were invalid.\r\n","Url":"https://github.com/angular/components/issues/18673","RelatedDescription":"Open issue \"[cdk drag drop] restrict possible insert positions for a drag into a dropList\" (#18673)"},{"Id":"573271288","IsPullRequest":true,"CreatedAt":"2020-03-02T13:51:37","Actor":"flash-me","Number":"18656","RawContent":null,"Title":"Import TypeScript helpers to make UMD bundles work","State":"closed","Body":"Closes #18655","Url":"https://github.com/angular/components/pull/18656","RelatedDescription":"Closed or merged PR \"Import TypeScript helpers to make UMD bundles work\" (#18656)"},{"Id":"573986206","IsPullRequest":true,"CreatedAt":"2020-03-02T13:47:34","Actor":"devversion","Number":"18672","RawContent":null,"Title":"build: include tslib helpers in umd bundles","State":"open","Body":"Similarily to https://github.com/angular/angular/commit/2e270bb96a162af797bfc80f06cff3dd1c523877, we should include tslib in the UMD bundles.\r\n\r\nFixes #18655.","Url":"https://github.com/angular/components/pull/18672","RelatedDescription":"Open PR \"build: include tslib helpers in umd bundles\" (#18672)"},{"Id":"573960580","IsPullRequest":false,"CreatedAt":"2020-03-02T13:04:44","Actor":"GitHubish","Number":"18671","RawContent":null,"Title":"Parent does not scroll when dragging and dropping ","State":"open","Body":"I have an app with boards like Trello. So I have a concept of board, column and card. \r\nIf I reorder the columns by trying to move it out of the \"screen\" the board scrolls sideways.\r\nIf I try to move a card in a column out of the \"screen\", the board doesn't scroll. \r\nI thought adding withScrollableParents would solve my problem but it still doesn't work.\r\n\r\nHow does it work withScrollableParents? Thanks\r\n\r\nProject structure:\r\nBoard component --> column component --> card component","Url":"https://github.com/angular/components/issues/18671","RelatedDescription":"Open issue \"Parent does not scroll when dragging and dropping \" (#18671)"},{"Id":"573820713","IsPullRequest":false,"CreatedAt":"2020-03-02T09:04:36","Actor":"dudipsh","Number":"18669","RawContent":null,"Title":"Virtual scroll that populates from the bottom","State":"open","Body":"Whats the best way, if possible to implement a virtual scroll that populates from the bottom, and when scrolling up brings another item in (like pagination)\r\n\r\n\r\n![Image description](https://a.slack-edge.com/4bc9d/img/api/articles/blueprints/approval_workflows_animated.gif)\r\n\r\n","Url":"https://github.com/angular/components/issues/18669","RelatedDescription":"Open issue \"Virtual scroll that populates from the bottom\" (#18669)"},{"Id":"573736344","IsPullRequest":true,"CreatedAt":"2020-03-02T05:53:10","Actor":"mleibman","Number":"18668","RawContent":null,"Title":"perf(focus-monitor): avoid triggering unnecessary change detections","State":"open","Body":"This is similar to #15077, but IMHO does it in much simpler way. \r\nI also fixed up the documentation, examples, and some call sites that incorrectly stated that`FocusMonitor` emits the observable outside of `NgZone`. \r\n\r\n**Caretaker note**: #15077 had to be reverted before (#15076) because there was an app that depended on the extra change detections. We may have to investigate further before we can merge this in again.","Url":"https://github.com/angular/components/pull/18668","RelatedDescription":"Open PR \"perf(focus-monitor): avoid triggering unnecessary change detections\" (#18668)"},{"Id":"573727704","IsPullRequest":true,"CreatedAt":"2020-03-02T05:28:19","Actor":"mleibman","Number":"18667","RawContent":null,"Title":"perf(focus-monitor): optimize event registration","State":"open","Body":"Improve `FocusMonitor` scalability by implementing event delegation instead of adding individual `focus` and `blur` event listeners to each monitored element.\r\n\r\nThe global listeners do have to walk up the ancestor chain of event target in order to support `checkChildren`, but this is extremely fast even for very deeply nested DOM trees since all it has to do is call `Map.has(element)` for each one.\r\n\r\nAnother potential improvement may be to store the tracked elements in a `WeakMap` and remove the need to call `stopMonitoring()`, making the API easier, but this would require always keeping the 6 global event listeners active. Right now, they are removed if there are no tracked elements.","Url":"https://github.com/angular/components/pull/18667","RelatedDescription":"Open PR \"perf(focus-monitor): optimize event registration\" (#18667)"},{"Id":"573312477","IsPullRequest":true,"CreatedAt":"2020-03-01T08:01:02","Actor":"crisbeto","Number":"18660","RawContent":null,"Title":"fix(datepicker): add gap between range rows and handle rtl","State":"closed","Body":"* Makes the range background shorter so that there's a gap when a range spans across multiple rows. This makes it easier to see what's going on.\r\n* Fixes the range styles not accounting for RTL layouts.\r\n\r\nBefore/After for reference:\r\n![before](https://user-images.githubusercontent.com/4450522/75610054-3f6d0300-5b0e-11ea-903c-69bb04fc987b.png)\r\n![after](https://user-images.githubusercontent.com/4450522/75610058-41cf5d00-5b0e-11ea-8abb-3ca629306bf0.png)\r\n","Url":"https://github.com/angular/components/pull/18660","RelatedDescription":"Closed or merged PR \"fix(datepicker): add gap between range rows and handle rtl\" (#18660)"},{"Id":"573503470","IsPullRequest":true,"CreatedAt":"2020-03-01T07:59:33","Actor":"crisbeto","Number":"18666","RawContent":null,"Title":"fix(form-field): error when trying to lock label into position too early","State":"open","Body":"Fixes an error that is thrown by the form field's `_animateAndLockLabel` if it's called before `ngAfterViewInit`. This can happen if an autocomplete receives focus too early.\r\n\r\nFixes #18663.","Url":"https://github.com/angular/components/pull/18666","RelatedDescription":"Open PR \"fix(form-field): error when trying to lock label into position too early\" (#18666)"},{"Id":"573447647","IsPullRequest":false,"CreatedAt":"2020-03-01T07:22:46","Actor":"WDODW","Number":"18665","RawContent":null,"Title":"hkcnoeico@gmail.com","State":"closed","Body":"#### Bug, feature request, or proposal:\r\n\r\n\r\n#### What is the expected behavior?\r\n\r\n\r\n#### What is the current behavior?\r\n\r\n\r\n#### What are the steps to reproduce?\r\nProviding a StackBlitz reproduction is the *best* way to share your issue. <br/>\r\nStackBlitz starter: https://goo.gl/wwnhMV<br/>\r\n\r\n\r\n#### What is the use-case or motivation for changing an existing behavior?\r\n\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\n\r\n\r\n#### Is there anything else we should know?\r\n","Url":"https://github.com/angular/components/issues/18665","RelatedDescription":"Closed issue \"hkcnoeico@gmail.com\" (#18665)"},{"Id":"573426678","IsPullRequest":true,"CreatedAt":"2020-02-29T22:59:54","Actor":"hmil","Number":"18664","RawContent":null,"Title":"fix: event emitter type","State":"open","Body":"This incorrect type was revealed by (and is blocking) https://github.com/angular/angular/pull/35300\r\n","Url":"https://github.com/angular/components/pull/18664","RelatedDescription":"Open PR \"fix: event emitter type\" (#18664)"},{"Id":"573359605","IsPullRequest":false,"CreatedAt":"2020-02-29T17:53:11","Actor":"gentunian","Number":"18663","RawContent":null,"Title":"check for undefined label in _animateAndLockLabel()","State":"open","Body":"`this._label` should be checked for `undefined` in [form-field.ts _animateAndLockLabel()](https://github.com/angular/components/blob/master/src/material/form-field/form-field.ts#L428)\r\n\r\n#### Reproduction\r\n\r\nGo to: https://components-issue-gyskyq.stackblitz.io/\r\n\r\nSteps to reproduce:\r\n1.  Toggle the slider\r\n2.  Check for console error: **Error: Cannot read property 'nativeElement' of undefined**\r\n \r\n#### Expected Behavior\r\n\r\nNo errors in console.\r\n\r\n#### Actual Behavior\r\n\r\nErrors are throw in console: **Error: Cannot read property 'nativeElement' of undefined**\r\n\r\n#### Environment\r\n\r\nstackblitz example attached.","Url":"https://github.com/angular/components/issues/18663","RelatedDescription":"Open issue \"check for undefined label in _animateAndLockLabel()\" (#18663)"},{"Id":"573328747","IsPullRequest":true,"CreatedAt":"2020-02-29T16:33:25","Actor":"gioragutt","Number":"18662","RawContent":null,"Title":"feat(material/chips): add focusLastChipOnBackspace to MatChipList","State":"open","Body":"* By default, when pressing backspace when the input is focused and empty, the last chip (if exists) would be focused.\r\n* This makes is so that when people delete the content they wrote, they will eventually start deleting chips.\r\n* This PR puts this behavior behind a flag (which is turned on by default, to preserve current default behaviour)\r\n* When the flag is turned off, the last chip will not get focused when backspace is pressed.\r\n\r\nFixes: #18659","Url":"https://github.com/angular/components/pull/18662","RelatedDescription":"Open PR \"feat(material/chips): add focusLastChipOnBackspace to MatChipList\" (#18662)"},{"Id":"573322433","IsPullRequest":true,"CreatedAt":"2020-02-29T16:02:55","Actor":"crisbeto","Number":"18661","RawContent":null,"Title":"docs(tooltip): scrollable example not working","State":"open","Body":"Fixes the example that shows how a tooltip works with a `CdkScrollable` not working, because we hadn't imported the module.\r\n\r\nAlso fixes a few places that were using the old way of writing the selector.","Url":"https://github.com/angular/components/pull/18661","RelatedDescription":"Open PR \"docs(tooltip): scrollable example not working\" (#18661)"},{"Id":"573309393","IsPullRequest":false,"CreatedAt":"2020-02-29T14:55:53","Actor":"gioragutt","Number":"18659","RawContent":null,"Title":"[MatChipList] Disable last chip focus when pressing BACKSPACE with empty input","State":"open","Body":"#### Feature Description\r\n\r\nBy default, when you have `chips`, and your input is empty and focused,\r\nWhen your press `BACKSPACE`, the last chip will be selected.\r\n\r\nThe feature I'm looking for is that this behaviour will be behind a flag, which would obviously be `enabled`/`disabled` by default (whatever keeps the current behaviour the default), and when the flag is toggled - pressing `BACKSPACE` when the input is empty would not select the last chip.\r\n\r\n#### Use Case\r\n\r\nThe use case for this behaviour is when you have chips, and the user deletes whatever input he put in so far, eventually when the input is cleared, the chips will get focused and will be deleted.\r\n\r\nThis something that may be problematic for some users in some cases, and as far as I can see, it's not something that should be too hard to implement.\r\n\r\n#### Side Note\r\n\r\nI've been looking at docs and code to try to disable this behaviour myself, but I couldn't find a way (without changing code).\r\n\r\nI tried calling `preventDefault` and `stopPropagation` on the events from `keyup`, `keydown` and `input` events on the `input[matChipInputFor]` input, but I guess that the `MatChipList` subscription to those events takes precedence over the user subscription (probably due to subscription order), and calling `preventDefault`/`stopPropagation` on the event is just too late.\r\n\r\nIf you can help find a way to achieve this behaviour without changing the component, this would help me a lot.\r\n\r\nThanks!","Url":"https://github.com/angular/components/issues/18659","RelatedDescription":"Open issue \"[MatChipList] Disable last chip focus when pressing BACKSPACE with empty input\" (#18659)"},{"Id":"573289614","IsPullRequest":true,"CreatedAt":"2020-02-29T12:56:04","Actor":"crisbeto","Number":"18657","RawContent":null,"Title":"fix(datepicker): prevent default dialog options from affecting touch ui calendar","State":"open","Body":"When the datepicker is opened in touch mode, we use a `MatDialog` which means that the `MAT_DIALOG_DEFAULT_OPTIONS` injection has an effect on them. We don't want the default to affect the datepicker's dialog, because they can make it look and behave inconsistently. These changes set values to all of the options which will override the defaults.\r\n\r\nFixes #18648.","Url":"https://github.com/angular/components/pull/18657","RelatedDescription":"Open PR \"fix(datepicker): prevent default dialog options from affecting touch ui calendar\" (#18657)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-03T05:30:07.0621943Z","RunDurationInMilliseconds":3801}