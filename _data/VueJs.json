{"Data":{"Vue-Issues":{"Issues":[{"Id":"467361214","IsPullRequest":false,"CreatedAt":"2019-07-12T11:19:35","Actor":"Repugraf","Number":"10262","RawContent":null,"Title":"Please let us change default behavior of v-bind!","State":"closed","Body":"<p>I'm using vee-validate package (to validate forms) and I'm binding the value like this <i><strong>:value=\"someValue\"</strong></i>. The problem is that vee-validate checks only changes of <i><strong>value</strong></i> attribute. The main issue is when <i><strong>someValue</strong></i> is empty then the attribute will not appear at all! That means that the first time user changes input the value sets and only after second change it will be checked by vee-validate.</p>\r\n<p>To fix the issue I had to set the value without v-bind like this: </p>\r\n<p><i><strong>&lt;input type=&quot;text&quot; :name=&quot;someName&quot; value=&quot;&quot; /&gt;</strong></i></p>\r\n<p>And then change the value with pure js</p>\r\n\r\n<hr/>\r\n<h2>The behavior I'd like to see:</h2>\r\n\r\n<p>\r\nThe code: <br>\r\n<i><strong>&lt;input type=&quot;text&quot; :name=&quot;someName&quot; :value=&quot;someValue&quot; /&gt;</strong></i> - the <i><strong>someValue</strong></i> is empty</p>\r\n<p>\r\nThe rendered code: <br>\r\n<i><strong>&lt;input type=&quot;text&quot; name=&quot;name&quot; value=&quot;&quot; /&gt;</strong></i>\r\n</p>\r\n<hr/>\r\n<h2>Ideas how to implement it:</h2>\r\n<ul>\r\n<li>Change the behavior of v-bind</li>\r\n<li>Return removed syntax: <i>value=\"{{someVlaue}}\"</i></li>\r\n<li>Add options: <i>v-bind.force:value=\"someValue\"</i></li>\r\n</ul>","Url":"https://github.com/vuejs/vue/issues/10262","RelatedDescription":"Closed issue \"Please let us change default behavior of v-bind!\" (#10262)"},{"Id":"465752719","IsPullRequest":false,"CreatedAt":"2019-07-12T08:20:52","Actor":"yhor1e","Number":"10249","RawContent":null,"Title":"Elements increase when adding data and changing views","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n* [https://codepen.io/yhor1e/pen/agPbrL](https://codepen.io/yhor1e/pen/agPbrL)\r\n* [https://github.com/yhor1e/vue-10249-reproduction](https://github.com/yhor1e/vue-10249-reproduction)\r\n\r\n### Steps to reproduce\r\n1. Input data to the text field and push the enter button.\r\n2. Take a heap snapshot in Chrome Developer Tools.\r\n3. Click \"Go to Second\" button.\r\n4. Click \"Go to First\" button.\r\n5. Take a heap snapshot in Chrome Developer Tools.\r\n6. Compare step5 heap snapshot with step2 heap snapshot. Then elements increased. \r\n\r\n#### examples\r\n**ex1. Done the above steps with 1 input data.**\r\n![1](https://user-images.githubusercontent.com/10266230/60887518-9d9f5a00-a28f-11e9-87e0-6c74e2290318.png)\r\n\r\n**ex2. Done the above steps with 10 input data after ex1.**\r\n![2](https://user-images.githubusercontent.com/10266230/60887890-61b8c480-a290-11e9-98ce-833783c61c78.png)\r\n\r\n### What is expected?\r\nElements don't increase. (#Delta is 0)\r\n\r\n### What is actually happening?\r\nElements increase. (#Delta is not 0)\r\n\r\n---\r\nThis maybe shows memory leaks.\r\nIs this a bug?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10249","RelatedDescription":"Closed issue \"Elements increase when adding data and changing views\" (#10249)"},{"Id":"467254908","IsPullRequest":false,"CreatedAt":"2019-07-12T07:45:53","Actor":"lanzhou2333","Number":"10261","RawContent":null,"Title":"Entering consecutive decimal points or multiple decimal points in the input tag that using the v-model binding results in null values for the bound variable","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/qzwdLg](https://codepen.io/anon/pen/qzwdLg)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.input number 1234 , the next line dispaly the value of rechargeValue = 1234\r\n2.input number 1234. ,the next line dispaly the value of rechargeValue = 1234\r\n3.intpu number 1234.4, the next line dispaly the value of rechargeValue = 1234.4\r\n4.input 1234.. the next line dispaly the value of rechargeValue =\r\n  no display here \r\n5 input 1234.123.321  no display,the value of recharegeValue is \"\"\r\nall input above can ben input to the input tag like <input type=\"number\" > correctly.\r\n\r\n### What is expected?\r\nthe correct result or a exception\r\n\r\n### What is actually happening?\r\nwhen the value of the input tag can't be convert from string(may be) to the number. the variable will be a null value.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10261","RelatedDescription":"Closed issue \"Entering consecutive decimal points or multiple decimal points in the input tag that using the v-model binding results in null values for the bound variable\" (#10261)"},{"Id":"467223439","IsPullRequest":false,"CreatedAt":"2019-07-12T05:07:52","Actor":"maunier","Number":"10260","RawContent":null,"Title":"v-bind not update dom in client side when data in client side is different from the server side","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/maunier/nuxt-learning](https://github.com/maunier/nuxt-learning)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm install\r\nnpm run dev\r\nhttp://127.0.0.1:8080/\r\n\r\n### What is expected?\r\ni expect the div is like this:\r\n```\r\n<div text=\"isClient\">isClient</div>\r\n```\r\n\r\n### What is actually happening?\r\nbut now it is:\r\n```\r\n<div text=\"isServer\">isClient</div>\r\n```\r\n\r\n---\r\nit is not Nuxt's issue, I have tested in my own vue-ssr server without Nuxt, the problem is exsist still.  but the that project is not on the github, so i paste the nuxt project's link here\r\n\r\nthe core code is like this:\r\n```\r\n<div :text=\"text\">{{ text }}</div>\r\n```\r\n```\r\ndata () {\r\n      return {\r\n        text: ''\r\n      }\r\n    },\r\n\r\n    created () {\r\n      this.text = Vue.prototype.$isServer ? 'isServer' : 'isClient'\r\n    },\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10260","RelatedDescription":"Open issue \"v-bind not update dom in client side when data in client side is different from the server side\" (#10260)"},{"Id":"467186163","IsPullRequest":false,"CreatedAt":"2019-07-12T02:14:02","Actor":"Kidwind","Number":"10259","RawContent":null,"Title":"服务器端渲染使用Store Code Splitting动态注册Stored导致 The client-side rendered virtual DOM tree is not matching server-rendered content. 的问题","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/Kidwind/vue-ssr-template.git](https://github.com/Kidwind/vue-ssr-template.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n根据官方文档创建一个服务器端渲染的应用，将页面的存储直接写在根目录的store.js文件中，没有问题，但随着项目的复杂度增加，全都写在根目录的store.js中会导致代码臃肿，因而考虑使用官方文档的Store Code Splitting模式 （https://ssr.vuejs.org/guide/data.html#store-code-splitting），但改成该模式后，服务器端渲染完成后会在控制台提示：\r\n\r\n“[Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render.”\r\n\r\n且页面后续操作无法正常运行。\r\n\r\n### What is expected?\r\n消除控制台错误提示且页面正常运行。\r\n\r\n### What is actually happening?\r\n控制台提示：\r\n\r\n“[Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render.”\r\n\r\n初步估计按官方文档的模式修改，会导致store模块的注册晚于客户端的vdom与服务器端渲染的 DOM 结构的匹配验证，因而导致了错误提示及页面无法正常运行。\r\n\r\n---\r\n建议官方提供可行的解决方案。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10259","RelatedDescription":"Open issue \"服务器端渲染使用Store Code Splitting动态注册Stored导致 The client-side rendered virtual DOM tree is not matching server-rendered content. 的问题\" (#10259)"},{"Id":"467061471","IsPullRequest":false,"CreatedAt":"2019-07-11T19:23:29","Actor":"pyskell","Number":"10258","RawContent":null,"Title":"Warn when Vue.set is used on a nested property such as propA.propB or probC[0]","State":"closed","Body":"### What problem does this feature solve?\r\nI attempted to do `Vue.set(object, 'attribute.nestedAttribute', value) and rather than setting `object.attribute.nestedAttribute = value` I got an object that looked like: `{attribute.nestedAttribute = value}`.\r\n\r\nI had no idea this was even possible within JavaScript and when debugging it in Vue devtools it first took a while to notice what had happened (I initially assumed Vue popped it to the root of my object just to highlight that it changed).\r\n\r\nIt would be very helpful if a warning could be added for certain reserved characters and keywords that have no business being used/set like this.\r\n\r\n### What does the proposed API look like?\r\nNo changes to API, just a warning.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10258","RelatedDescription":"Closed issue \"Warn when Vue.set is used on a nested property such as propA.propB or probC[0]\" (#10258)"},{"Id":"467026912","IsPullRequest":true,"CreatedAt":"2019-07-11T17:51:38","Actor":"nothingismagick","Number":"10257","RawContent":null,"Title":"fix(security) upgrade lodash.template","State":"open","Body":"This is for vue-server-renderer\r\n\r\nhttps://github.com/lodash/lodash/pull/4336\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10257","RelatedDescription":"Open PR \"fix(security) upgrade lodash.template\" (#10257)"},{"Id":"466685354","IsPullRequest":false,"CreatedAt":"2019-07-11T06:39:54","Actor":"milyyy","Number":"10256","RawContent":null,"Title":"this.debouncedGetAnswer is not a function","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://cn.vuejs.org/v2/guide/computed.html#%E4%BE%A6%E5%90%AC%E5%99%A8](https://cn.vuejs.org/v2/guide/computed.html#%E4%BE%A6%E5%90%AC%E5%99%A8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nno step.please check the data \r\n\r\n### What is expected?\r\nthe repro defined two data, maybe the word 'debouncedGetAnswer ' should be replaced by  'getAnswer'.\r\n\r\n### What is actually happening?\r\nthis.debouncedGetAnswer is not a function\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10256","RelatedDescription":"Closed issue \"this.debouncedGetAnswer is not a function\" (#10256)"},{"Id":"466360597","IsPullRequest":false,"CreatedAt":"2019-07-10T14:59:57","Actor":"lmartorella","Number":"10255","RawContent":null,"Title":"Cannot bind external web-component's 'value' property as an object","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://embed.plnkr.co/2KKE9ixZJLrRB6FUNIou/](https://embed.plnkr.co/2KKE9ixZJLrRB6FUNIou/)\r\n\r\n### Steps to reproduce\r\nSteps to reproduce (see the attached plunkr):\r\n\r\n1. Create a web-component (not using Vue).\r\n2. Expose a 'value' property in this web component that accepts/returns non-string objects (e.g. a Date object).\r\n3. Instantiate the web component in Vue and bind the property using :value.prop syntax\r\n\r\n### What is expected?\r\nThe object is passed as is.\r\n\r\n### What is actually happening?\r\nThe object is converted to string before being set to the web-component 's property.\r\n\r\n---\r\nIt is more and more common to include third party components written in other frameworks and directly use it in Vue.\r\nHowever, it seems that the Vue code always expect the 'value' property to be of type string. Let's suppose to import a date selector as ES5 web custom component, that defines the 'value' property to be a Date object.\r\nVue will always pass this value as string instead. Using a different property name works as expected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10255","RelatedDescription":"Open issue \"Cannot bind external web-component's 'value' property as an object\" (#10255)"},{"Id":"466261561","IsPullRequest":false,"CreatedAt":"2019-07-10T11:46:05","Actor":"rleite","Number":"10254","RawContent":null,"Title":"Functional components don't add class attribute from parent","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/functional-components-issue-ubtr8](https://codesandbox.io/s/functional-components-issue-ubtr8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a functional component.\r\nAdd that component to another with a class attribute\r\n\r\n### What is expected?\r\nThe class attribute should be added to the root element of the component \r\n\r\n### What is actually happening?\r\nThe class attribute is ignored\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10254","RelatedDescription":"Closed issue \"Functional components don't add class attribute from parent\" (#10254)"},{"Id":"466161393","IsPullRequest":true,"CreatedAt":"2019-07-10T08:03:54","Actor":"NataliaTepluhina","Number":"10253","RawContent":null,"Title":"fix: changed a type for AsyncComponentFactory component(fix #10252)","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nClose #10252 ","Url":"https://github.com/vuejs/vue/pull/10253","RelatedDescription":"Open PR \"fix: changed a type for AsyncComponentFactory component(fix #10252)\" (#10253)"},{"Id":"466057344","IsPullRequest":false,"CreatedAt":"2019-07-10T01:55:05","Actor":"Maorey","Number":"10252","RawContent":null,"Title":"Wrong definition of the type AsyncComponentFactory","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue](https://github.com/vuejs/vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. compare the [AsyncComponentFactory](https://github.com/vuejs/vue/blob/dev/types/options.d.ts) definition with the [document](https://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State)\r\n\r\n### What is expected?\r\nattribute 'component'  should be a promise\r\n\r\n### What is actually happening?\r\nAsyncComponentPromise\r\n\r\n---\r\nI'm looking forward to your solution to this [issue](https://github.com/vuejs/vue/issues/9788)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10252","RelatedDescription":"Open issue \"Wrong definition of the type AsyncComponentFactory\" (#10252)"},{"Id":"465923037","IsPullRequest":false,"CreatedAt":"2019-07-09T18:26:03","Actor":"abramov231","Number":"10251","RawContent":null,"Title":"[Feature] Accept native DOM element as result of render function","State":"closed","Body":"For now functional and render components are able to handle as result of return object, string or VNode. It would be awesome to have support of native HTMLElement instances as well. \r\n\r\n**What is the current behavior?**\r\n```javascript\r\nVue.component('super-fast-custom-element', {\r\n  render (createElement) {\r\n    const el = document.createElement('div');\r\n    ...\r\n    return el;\r\n  },\r\n  props: {},\r\n});\r\n// Render nothing\r\n```\r\n\r\n**What is the expected behavior?**\r\nProvided element inserted in DOM.\r\n\r\n**Motivation**\r\nFor some applications it needs to make UI as fast as possible. Especially it is critical on huge application with thousands elements which updates several times per second.  Virtual DOM helps in some performance issues, but sometimes you need to go further and operate on level of vanilla js with incremental changes and custom virtual DOM model relevant to your application. For now the only way to do it is to use refs, but it is looks kind of ugly. Allowing to return HTML elements will helps to solve this issue in elegant and intuitive way.","Url":"https://github.com/vuejs/vue/issues/10251","RelatedDescription":"Closed issue \"[Feature] Accept native DOM element as result of render function\" (#10251)"},{"Id":"465797128","IsPullRequest":true,"CreatedAt":"2019-07-09T13:57:52","Actor":"tengmaoqing","Number":"10250","RawContent":null,"Title":"fix(vnode): support for browsers that do not support svg (fix #10248)","State":"open","Body":"fix #10248\r\n\r\nIn some Android browsers that don't support SVG. The style attribute of the Element generated by createElementNS is null.\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** \r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** \r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n","Url":"https://github.com/vuejs/vue/pull/10250","RelatedDescription":"Open PR \"fix(vnode): support for browsers that do not support svg (fix #10248)\" (#10250)"},{"Id":"465557208","IsPullRequest":false,"CreatedAt":"2019-07-09T04:01:53","Actor":"tengmaoqing","Number":"10248","RawContent":null,"Title":"Vue does not work properly when setting the SVG style property in a lower version of the android browser","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/XLyPJe](https://codepen.io/anon/pen/XLyPJe)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nenvironment:\r\n- qqBrowser 4.4\r\n- android 4.2.2\r\n- userAgent Mozilla/5.0 (Linux; U; Android 4.2.2; zh-cn; Coolpad 8297 Build/JDQ39) AppleWebKit/533.1 (KHTML, like Gecko)Version/4.0 MQQBrowser/4.4 Mobile Safari/533.1\r\n\r\n### What is expected?\r\nrender normally\r\n\r\n### What is actually happening?\r\nalert\r\nTypeError Cannot set property 'undefined' of null\r\n\r\n---\r\nif i remove `style=\"stroke: #FFDA05;\"` on SVG, it will be ok\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10248","RelatedDescription":"Open issue \"Vue does not work properly when setting the SVG style property in a lower version of the android browser\" (#10248)"},{"Id":"465543337","IsPullRequest":true,"CreatedAt":"2019-07-09T03:39:21","Actor":"fengyy51","Number":"10247","RawContent":null,"Title":"Test","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10247","RelatedDescription":"Closed or merged PR \"Test\" (#10247)"},{"Id":"464982996","IsPullRequest":true,"CreatedAt":"2019-07-08T13:30:34","Actor":"vue-bot","Number":"10242","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10242","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#10242)"},{"Id":"464461870","IsPullRequest":true,"CreatedAt":"2019-07-08T13:29:52","Actor":"vue-bot","Number":"10233","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10233","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#10233)"},{"Id":"465187523","IsPullRequest":false,"CreatedAt":"2019-07-08T10:56:57","Actor":"CarterLi","Number":"10246","RawContent":null,"Title":"inconsistence about data initialization and error checks","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\nN/A\r\n\r\n### Steps to reproduce\r\nN/A\r\n\r\n### What is actually happening?\r\nWe use [Object.keys](https://github.com/vuejs/vue/blob/3b8925bc7973bb71b33374281db10a945ca9854e/src/core/instance/state.js#L126) to enumerate data properties but use [operator `in`](https://github.com/vuejs/vue/blob/3b8925bc7973bb71b33374281db10a945ca9854e/src/core/instance/state.js#L202) to check their existence. Since operator `in` also checks for properties on objects' prototype chain, it results in inconsistence when handling special situations especially when the data object is created using [new class](https://github.com/CarterLi/vue-component-base/blob/master/index.ts#L154).\r\n\r\n### What is expected?\r\nTo be consistent with `initData`, use `hasOwn(vm.$data, key)` [here](https://github.com/vuejs/vue/blob/3b8925bc7973bb71b33374281db10a945ca9854e/src/core/instance/state.js#L201)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10246","RelatedDescription":"Closed issue \"inconsistence about data initialization and error checks\" (#10246)"},{"Id":"465135909","IsPullRequest":true,"CreatedAt":"2019-07-08T08:56:37","Actor":"RobbinBaauw","Number":"10245","RawContent":null,"Title":"feat(keep-alive): includes/excludes keep-alive based on key and name (fix #8028)","State":"open","Body":"The keep-alive component will now also use the key of the component when checking the includes or excludes properties.\r\n\r\nOn this way you can cache specific instances of a component instead of caching all instances of that component.\r\n\r\nfix #8028\r\n\r\n**What kind of change does this PR introduce?**\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [X] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [X] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [X] New/updated tests are included","Url":"https://github.com/vuejs/vue/pull/10245","RelatedDescription":"Open PR \"feat(keep-alive): includes/excludes keep-alive based on key and name (fix #8028)\" (#10245)"},{"Id":"465110936","IsPullRequest":false,"CreatedAt":"2019-07-08T08:01:30","Actor":"rishivarma12345","Number":"10244","RawContent":null,"Title":"how to reduce 5 secs Lagging for viewing and updating document.","State":"closed","Body":"view a document and update the document when i view the  updated document then it takes 5 secs lag to update that document mainly to view the document.","Url":"https://github.com/vuejs/vue/issues/10244","RelatedDescription":"Closed issue \"how to reduce 5 secs Lagging for viewing and updating document.\" (#10244)"},{"Id":"465031534","IsPullRequest":false,"CreatedAt":"2019-07-08T06:58:45","Actor":"FutureElement","Number":"10243","RawContent":null,"Title":"Dynamic Arguments not support to use uppercase","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hataketed/m0t2ng8b/4/](https://jsfiddle.net/hataketed/m0t2ng8b/4/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\njust run and see the console errors\r\n\r\n### What is expected?\r\nclick alert\r\n\r\n### What is actually happening?\r\nvue.js:634 [Vue warn]: Property or method \"eventname\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property. See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n\r\n(found in <Root>)\r\nwarn @ vue.js:634\r\nvue.js:634 [Vue warn]: Invalid value for dynamic directive argument (expected string or null): undefined\r\n\r\n(found in <Anonymous>)\r\nwarn @ vue.js:634\r\nvue.js:634 [Vue warn]: Property or method \"attributename\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property. See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n\r\n(found in <Root>)\r\nwarn @ vue.js:634\r\nvue.js:634 [Vue warn]: Invalid value for dynamic directive argument (expected string or null): undefined\r\n\r\n(found in <Anonymous>)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10243","RelatedDescription":"Closed issue \"Dynamic Arguments not support to use uppercase\" (#10243)"},{"Id":"464920173","IsPullRequest":false,"CreatedAt":"2019-07-07T06:30:17","Actor":"WanFengZ","Number":"10241","RawContent":null,"Title":"关于生命周期和dom渲染的问题","State":"closed","Body":"在vue的生命周期中，mounted 里 使用 $nextTick() 仍然会有获取到dom却无法获取dom数据的情况（v-for 渲染出的dom,我无法取得dom集合的length来遍历），当我使用 watch() 监听 v-for遍历的变量，然后在函数中使用  $nextTick() 却可以获得数据，没有任何问题。为什么。。。","Url":"https://github.com/vuejs/vue/issues/10241","RelatedDescription":"Closed issue \"关于生命周期和dom渲染的问题\" (#10241)"},{"Id":"464919688","IsPullRequest":false,"CreatedAt":"2019-07-07T06:22:22","Actor":"WanFengZ","Number":"10240","RawContent":null,"Title":"in mounted()  use $nextTick() can get dom but can't get the data in dom(e: length)","State":"closed","Body":"In the life cycle of vue, using $nextTick () in mounted will still get DOM but not DOM data (i can't get DOM from V-for rendering, I can't get length of DOM collection to traverse). When I use watch () to listen for variables traversed by v-for, then use $nextTick () in function to get data. No problem. Can we improve this problem?\r\n","Url":"https://github.com/vuejs/vue/issues/10240","RelatedDescription":"Closed issue \"in mounted()  use $nextTick() can get dom but can't get the data in dom(e: length)\" (#10240)"},{"Id":"464902195","IsPullRequest":false,"CreatedAt":"2019-07-07T01:48:33","Actor":"neutron92","Number":"10239","RawContent":null,"Title":"how the vuejs compiler works","State":"closed","Body":"### What problem does this feature \r\nHello i want to know how the vuejs compiler works\r\n\r\nStep by step\r\nThanks\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10239","RelatedDescription":"Closed issue \"how the vuejs compiler works\" (#10239)"},{"Id":"464899437","IsPullRequest":false,"CreatedAt":"2019-07-06T23:44:39","Actor":"neutron92","Number":"10238","RawContent":null,"Title":"how the vuejs compiler works","State":"closed","Body":"Hello i want to know how the vuejs compiler works\r\n\r\n\r\nStep by step \r\nThanks","Url":"https://github.com/vuejs/vue/issues/10238","RelatedDescription":"Closed issue \"how the vuejs compiler works\" (#10238)"},{"Id":"464824169","IsPullRequest":false,"CreatedAt":"2019-07-06T09:46:48","Actor":"zhuangyan-stone","Number":"10237","RawContent":null,"Title":"iPhone 手机上调用vue方法，使用 大数字 入参无法正确渲染 ","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/d2school/pen/EBeREg](https://codepen.io/d2school/pen/EBeREg)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. 服务端写如下代码 （或见链接）\r\n```HTML\r\n<!DOCTYPE html>\r\n<html lang=\"zh\">\r\n<head>\r\n<script type=\"text/javascript\" src=\"https://cdn.bootcss.com/vue/2.6.10/vue.js\"></script>\r\n</head>\r\n<body>\r\n  <div id = \"app\">\r\n    {{test(1390000167)}}\r\n  </div>\r\n  <script type=\"text/javascript\">\r\n  var vm = new Vue({\r\n    el: '#app',\r\n    data: {},\r\n    methods: {    test: function (t) { return t; }  },\r\n  });\r\n </script>\r\n</body>\r\n</html>\r\n```\r\n2. 用除iPhone之外的手机，或桌面PC常用浏览器访问，输出 正确的 1390000167\r\n3. 在 iPhone 6, 7, XR 手机自带浏览器上，输出 {{test(1390000167)}}\r\n4. 将HTML中vue 相关代码改成： {{test( \"1390000167\")}}。 问题依旧。即：哪怕参数改为字符串，但只要字符串可以解析来一个大整数，问题依旧。\r\n5.  将HTML中vue 相关代码改成： {{test(\"A1390000167\")}}。 问题消失。即：如果字符串不是一个合法的数字，问题不存在。\r\n6. 剥离 vue 调用，直接在 iPhone中定义 test(d) 函数，再原生调用。一切正常。（因此认为应是vue的问题可能性较大）\r\n\r\n### What is expected?\r\n1390000167\r\n\r\n### What is actually happening?\r\n{{test(1390000167)}}\r\n\r\n---\r\n环境：\r\nvue ver: 2.5.12 ~ 2.6.10\r\niphone : 6, 7, xr\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10237","RelatedDescription":"Closed issue \"iPhone 手机上调用vue方法，使用 大数字 入参无法正确渲染 \" (#10237)"},{"Id":"464639458","IsPullRequest":false,"CreatedAt":"2019-07-05T13:23:35","Actor":"filmendless","Number":"10236","RawContent":null,"Title":"start","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/10236","RelatedDescription":"Closed issue \"start\" (#10236)"},{"Id":"464593524","IsPullRequest":false,"CreatedAt":"2019-07-05T11:18:38","Actor":"githubkl","Number":"10235","RawContent":null,"Title":"v-if下的自定义指令执行不稳定","State":"closed","Body":"    <div v-if=\"foo\" v-has-access=\"...\">\r\n        ...\r\n    </div>\r\n    \r\n上面的代码中，foo初始值为false，当变更为true时，v-has-access指令很不稳定，多次刷新页面，大概一半机率指令执行了，一半机率未执行。什么原因？","Url":"https://github.com/vuejs/vue/issues/10235","RelatedDescription":"Closed issue \"v-if下的自定义指令执行不稳定\" (#10235)"},{"Id":"464523311","IsPullRequest":false,"CreatedAt":"2019-07-05T08:28:48","Actor":"ganbowengo","Number":"10234","RawContent":null,"Title":"When the data A in data is object type, the getter method of A repeatedly collects unnecessary dependencies, and the subs in watcher saves unnecessary Deps.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/GbBbwJ](https://codepen.io/anon/pen/GbBbwJ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\njump link  https://codepen.io/anon/pen/GbBbwJ, Open the console to view _watcher in the Vue instance\r\n\r\n### What is expected?\r\n\r\nRemove Dep's unnecessary collection of Watchers\r\n\r\n### What is actually happening?\r\n...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10234","RelatedDescription":"Closed issue \"When the data A in data is object type, the getter method of A repeatedly collects unnecessary dependencies, and the subs in watcher saves unnecessary Deps.\" (#10234)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"467233641","IsPullRequest":false,"CreatedAt":"2019-07-12T08:40:45","Actor":"Rolanddoda","Number":"2847","RawContent":null,"Title":"Visiting another page immediately creates the respective component, before disposing the component of the previous page. ","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz](https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. When the page loads you are in the home component (/ route)\r\n2. Click the Contact button to navigate to the contact component (/contact route)\r\n3. Observe the error in the console.\r\n\r\nIn the Home and Contact components (or pages) I use store.registerModule and store.unregisterModule to dynamically register/unregister the same module.\r\n\r\n### What is expected?\r\nNo error should be shown. If you go to the Home later About and later Contact page (and vise versa) everything works as expected.\r\n\r\n### What is actually happening?\r\nVue router runs the new component before destroying the old one.\r\n\r\n---\r\nInitially I thought was a vuex issue and I opened one [here](https://github.com/vuejs/vuex/issues/1580). But then I saw that is a vue router issue. I tried to find if that issue already exists and couldn't find something.\r\n\r\nAs a workaround I can use transition mode out-in. And everything works\r\n```js\r\n    <transition mode=\"out-in\">\r\n      <router-view></router-view>\r\n    </transition>\r\n```\r\n\r\nbut to me, it doesn't makes sense to mount a component, before destroying the other one. What I am missing?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2847","RelatedDescription":"Closed issue \"Visiting another page immediately creates the respective component, before disposing the component of the previous page. \" (#2847)"},{"Id":"466813370","IsPullRequest":false,"CreatedAt":"2019-07-11T10:42:06","Actor":"up-chen","Number":"2846","RawContent":null,"Title":"路由返回错误","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\na页面使用router.push跳到b页面，b页面在beforeEnter钩子里面重定向到了c页面（replace），从c页面返回时直接到了空页面，没有返回到a页面\r\n![image](https://user-images.githubusercontent.com/20765130/61044509-65bd2180-a40b-11e9-9a5d-2bf93aae8e51.png)\r\n![image](https://user-images.githubusercontent.com/20765130/61044538-7372a700-a40b-11e9-99ad-58088c658851.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2846","RelatedDescription":"Closed issue \"路由返回错误\" (#2846)"},{"Id":"466782855","IsPullRequest":false,"CreatedAt":"2019-07-11T09:42:58","Actor":"ZhiGang-Fang","Number":"2845","RawContent":null,"Title":"There's no routing rules in history mode that don't match","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nIn history mode, no routing rules can be matched, only: path: '/register' can be matched, while path:' /member/register' cannot be matched, nor can dynamic routing attempts be matched\r\n\r\n\r\n`\r\n{\r\n        path: '/member/register',\r\n        name: 'register',\r\n        component: () => import(/* webpackChunkName: \"register\" */ './../../views/member/register.vue'),\r\n        meta: {\r\n          title: '会员注册'\r\n        }\r\n    }\r\n\r\n\r\n{\r\n    path: '/:member',\r\n    component: { render: h => h('router-view') },\r\n    children: [ \r\n      {\r\n        path: 'register',\r\n        name: 'register',\r\n        component: () => import(/* webpackChunkName: \"register\" */ './../../views/member/register.vue'),\r\n        meta: {\r\n          title: '会员注册'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n`\r\n\r\nIn the hash mode, the error is reported as follows: ‘Uncaught SyntaxError: Unexpected token <’\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2845","RelatedDescription":"Closed issue \"There's no routing rules in history mode that don't match\" (#2845)"},{"Id":"465619547","IsPullRequest":false,"CreatedAt":"2019-07-09T07:34:18","Actor":"lk8888","Number":"2844","RawContent":null,"Title":"typescript error Property 'matcher' does not exist on type 'VueRouter'.","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nthis is my code:\r\nconst router = createRouter();\r\n\r\nexport function resetRouter() {\r\n  const newRouter = createRouter();\r\n  router.matcher = newRouter.matcher; // reset router\r\n}\r\nthe error:\r\nTS2339: Property 'matcher' does not exist on type 'VueRouter'.","Url":"https://github.com/vuejs/vue-router/issues/2844","RelatedDescription":"Closed issue \"typescript error Property 'matcher' does not exist on type 'VueRouter'.\" (#2844)"},{"Id":"465472063","IsPullRequest":false,"CreatedAt":"2019-07-09T07:03:50","Actor":"iFgR","Number":"2843","RawContent":null,"Title":"How to extract only components RouterView and RouterLink?","State":"closed","Body":"### What problem does this feature solve?\r\nLoad only the *router-view* and *router-link* will give me the ability to use external VueRouter instance.\r\n\r\nI'm working with web-components and I have an AppShell with VueRouter and I'm using a web-component inside them with another VueRouter.\r\nEverything inside the web-component are working fine but my AppShell can't load the router components.\r\n\r\n### What does the proposed API look like?\r\nI think something like **const { RouterView, RouterLink } = VueRouter** can help\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2843","RelatedDescription":"Closed issue \"How to extract only components RouterView and RouterLink?\" (#2843)"},{"Id":"465416375","IsPullRequest":false,"CreatedAt":"2019-07-08T19:13:27","Actor":"koszar93","Number":"2842","RawContent":null,"Title":"Best way to create vue-router - Online Shop","State":"closed","Body":"i have a little problem with prepare vue-router to my Online Shop. I have two level product category tree view with parent and child item.\r\nMy category view, is built dynamic of data get from the database:\r\n\r\n>     PARENT\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 2\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 3\r\n>     - CHILD 1\r\n>     PARENT 4\r\n>     - CHILD 1\r\n>     - CHILD 2\r\n> \r\n\r\netc.\r\nI don’t know how to prepare dynamic router. Now, i do something like that:\r\n\r\n```\r\n    {\r\n            name: 'Produkty',\r\n            display: true,\r\n            meta: { requiresAuth: false, menuType: 'topNav' },\r\n            path: '/product/:categoryId?/:subCategoryId?',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product')\r\n          },\r\n          {\r\n            name: 'productDetail',\r\n            display: false,\r\n            meta: { requiresAuth: false },\r\n            path: '/product/:categoryId/:subCategoryId/:productId',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product/Details')\r\n          }\r\n```\r\n\r\nI don't know is this a good way? Maybe anyone have better idea for this?\r\nI also want to implement dynamic breadcrumbs base on router path.\r\n\r\nAnd other question:\r\nHow to redirect from: http://localhost/produkt/1234/523/123(productId) to http://localhost/product_name.html for example ? Or.. id from url chage to http://localhost/parent_1/child_1/product_1 ??","Url":"https://github.com/vuejs/vue-router/issues/2842","RelatedDescription":"Closed issue \"Best way to create vue-router - Online Shop\" (#2842)"},{"Id":"464976350","IsPullRequest":true,"CreatedAt":"2019-07-07T17:50:43","Actor":"debs-obrien","Number":"2841","RawContent":null,"Title":"docs: update active class explanation","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2841","RelatedDescription":"Open PR \"docs: update active class explanation\" (#2841)"},{"Id":"464165688","IsPullRequest":false,"CreatedAt":"2019-07-04T09:33:08","Actor":"ykushev","Number":"2840","RawContent":null,"Title":"Add afterRouteEnter guard","State":"open","Body":"### What problem does this feature solve?\r\nI want execute one function in component after each routing (enter route, reused in the new route)\r\n\r\n### What does the proposed API look like?\r\nvariant 1:\r\n```\r\nbeforeRouteUpdate (to, from, next) {\r\n        console.log('page category beforeRouteUpdate');\r\n        next(() => {\r\n            // this don't calling\r\n            console.log('page category beforeRouteUpdate next');\r\n            this.$store.dispatch('catalog/exec');\r\n        });\r\n    },\r\n```\r\n\r\nvariant 2: add hook named \"afterRouteUpdate\" that will calling after we enter in route and after each time we navigating in this route (foo/2 -> foo/3)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2840","RelatedDescription":"Open issue \"Add afterRouteEnter guard\" (#2840)"},{"Id":"463845211","IsPullRequest":false,"CreatedAt":"2019-07-03T16:57:38","Actor":"juanescarraga","Number":"2839","RawContent":null,"Title":"Color active state on link does not return to color","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-lgn63](https://codesandbox.io/embed/vue-template-lgn63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the project in the browser.\r\nThe link with the name Say Hello appears in the browser.\r\nThe default color is green of the Say Hello link is green, when hovering or clicking on the link the color changes from green to gray.\r\nThe gray color remains in the Say Hello link, the expected behavior is that once you click and refresh the page the color returns to the original which is green.\r\nIn tests carried out in development environments, low resolutions are being presented with smart phone views.\r\n\r\n### What is expected?\r\nFix the original color state bug, if the mouse cursor is positioned or the link is touched change color and return to its original state.\r\n\r\n### What is actually happening?\r\nThe color of the link in desktop resolutions works correctly when you hover over the link or click. In low resolutions and smart phones when touching the link changes the active state color and does not return to the original color of the normal state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2839","RelatedDescription":"Closed issue \"Color active state on link does not return to color\" (#2839)"},{"Id":"462388128","IsPullRequest":true,"CreatedAt":"2019-07-02T20:09:24","Actor":"Alexeykhr","Number":"2838","RawContent":null,"Title":"Handle Promise rejection in guards (fix #2833)","State":"closed","Body":"#2833","Url":"https://github.com/vuejs/vue-router/pull/2838","RelatedDescription":"Closed or merged PR \"Handle Promise rejection in guards (fix #2833)\" (#2838)"},{"Id":"461054597","IsPullRequest":false,"CreatedAt":"2019-06-30T09:44:07","Actor":"kahirokunn","Number":"2827","RawContent":null,"Title":"maybe getMatchedComponents type is missed","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31](https://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMaybe this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n\r\n\r\n### What is expected?\r\nI expected correct `getMatchedComponents` type\r\n\r\n### What is actually happening?\r\nI try to read vue-router code.\r\nBut code is too long.\r\nSo I don't have a much confidence.\r\nI'm sorry if the point is wrong.\r\n\r\nI read this source code.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/util/resolve-components.js#L13\r\n\r\nthere has this sentence.\r\n\r\n> we want to halt the navigation until the incoming component has been resolved.\r\n\r\nAnd I read some code.\r\nI guess `getMatchedComponents` function never return asyncComponent.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/index.js#L173\r\n\r\nSo I think this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2827","RelatedDescription":"Closed issue \"maybe getMatchedComponents type is missed\" (#2827)"},{"Id":"461058663","IsPullRequest":true,"CreatedAt":"2019-06-30T09:43:54","Actor":"kahirokunn","Number":"2828","RawContent":null,"Title":"maybe getMatchedComponents type is missed #2827","State":"closed","Body":"This pull request for solved this issue.\r\nhttps://github.com/vuejs/vue-router/issues/2827","Url":"https://github.com/vuejs/vue-router/pull/2828","RelatedDescription":"Closed or merged PR \"maybe getMatchedComponents type is missed #2827\" (#2828)"},{"Id":"461944569","IsPullRequest":false,"CreatedAt":"2019-06-28T09:32:51","Actor":"liho00","Number":"2837","RawContent":null,"Title":"External JavaScript working when changing route","State":"closed","Body":"### What problem does this feature solve?\r\nI am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nthis feature should allow the javascript works when changing routes. \r\n\r\n### What does the proposed API look like?\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works in different paths.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2837","RelatedDescription":"Closed issue \"External JavaScript working when changing route\" (#2837)"},{"Id":"461942087","IsPullRequest":false,"CreatedAt":"2019-06-28T09:23:21","Actor":"liho00","Number":"2836","RawContent":null,"Title":"External JavaScript stop working when changing route","State":"closed","Body":"I am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works with different paths.\r\n","Url":"https://github.com/vuejs/vue-router/issues/2836","RelatedDescription":"Closed issue \"External JavaScript stop working when changing route\" (#2836)"},{"Id":"461913917","IsPullRequest":false,"CreatedAt":"2019-06-28T08:20:25","Actor":"liubin595338764","Number":"2835","RawContent":null,"Title":"base是否能当成params参数来配置？","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://www](https://www)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n### What is expected?\r\n希望在history模式的时候可以把`base`当成`params`来处理，\r\n\r\n对于多公司访问通一个应用的时候，这样的链接比较好看，\r\n\r\n比如：\r\n```js\r\nexport default new Router({\r\n    mode: 'history',\r\n    base: '/:company',\r\n    routes: routes\r\n})\r\n```\r\n\r\n### What is actually happening?\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n---\r\n希望能尽快支持哦\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2835","RelatedDescription":"Closed issue \"base是否能当成params参数来配置？\" (#2835)"},{"Id":"461897204","IsPullRequest":false,"CreatedAt":"2019-06-28T07:41:09","Actor":"Mighty683","Number":"2834","RawContent":null,"Title":"Add beforeUpdate to route config","State":"closed","Body":"### What problem does this feature solve?\r\nSince for now we can't handle lazy loading components without losing access to navigation hooks build in components we should give equal API on router config level.\r\nFor now we can only add `beforeEnter` route guard. It would be usefull if we had `beforeUpdate` guard too.\r\n\r\nProblem with lazy loading components described here: \r\nhttps://github.com/vuejs/vue-router/issues/2830\r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/foo',\r\n      component: Foo,\r\n      beforeUpdate: (to, from, next) => {\r\n        // ...\r\n      }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2834","RelatedDescription":"Closed issue \"Add beforeUpdate to route config\" (#2834)"},{"Id":"461529830","IsPullRequest":false,"CreatedAt":"2019-06-27T13:28:28","Actor":"posva","Number":"2833","RawContent":null,"Title":"Handle Promise rejection in guards","State":"open","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/orzwg537/](https://jsfiddle.net/orzwg537/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle and look in console\r\n\r\n### What is expected?\r\na message saying error caught\r\n\r\n### What is actually happening?\r\nThere is an Unhandled Promise rejection instead\r\n\r\n---\r\nCurrently, errors thrown in guards are caught by router.onError but Promises rejections (or error thrown in an `async` function) are not caught. This should be handled in all the other guards as well\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2833","RelatedDescription":"Open issue \"Handle Promise rejection in guards\" (#2833)"},{"Id":"461488156","IsPullRequest":false,"CreatedAt":"2019-06-27T12:06:14","Actor":"stavid","Number":"2832","RawContent":null,"Title":" use history mode,history.length is wrong","State":"closed","Body":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/2831](https://github.com/vuejs/vue-router/issues/2831)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nexport default new Router({\r\nmode: 'history',\r\nroutes: [\r\n\r\n\t{\r\n\t\tpath: '/A',\r\n\t\tname: 'A',\r\n                   component: resolve => require(['../components/files/\r\n\r\nA.vue'], resolve),\r\nmeta: {\r\ntitle: 'A'\r\n}\r\n},\r\nopen A page ,print history.length in beforeEach method , the message is：\r\n\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n### What is expected?\r\nhistory.length add 1\r\n\r\n### What is actually happening?\r\nhistory.length add 2\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2832","RelatedDescription":"Closed issue \" use history mode,history.length is wrong\" (#2832)"},{"Id":"461486225","IsPullRequest":false,"CreatedAt":"2019-06-27T11:56:25","Actor":"stavid","Number":"2831","RawContent":null,"Title":"use history mode,history.length is wrong","State":"closed","Body":"export default new Router({\r\n\tmode: 'history',\r\n\troutes: [\r\n\r\n\t\t{\r\n\t\t\tpath: '/A',\r\n\t\t\tname: 'A',\r\n                       component: resolve => require(['../components/files/\r\nA.vue'], resolve),\r\n\t\t\tmeta: {\r\n\t\t\t\ttitle: 'A'\r\n\t\t\t}\r\n\t\t},\r\n-------------------------------\r\nopen A page ,print history.length  in beforeEach method , the message is：\r\n---------------------------------\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2831","RelatedDescription":"Closed issue \"use history mode,history.length is wrong\" (#2831)"},{"Id":"460770103","IsPullRequest":false,"CreatedAt":"2019-06-27T11:50:51","Actor":"maroon1","Number":"2825","RawContent":null,"Title":"errorHandler can't catch the error thrown in navigation guards","State":"closed","Body":"### What problem does this feature solve?\r\n目前 Navigation Guards 中的异常直接被 vue-router 内部处理掉，无法被 errorHandler 处理，导致需要在 Navigation Guards 单独处理，或者转换为 Promise 异常再通过 unhandledrejection 事件处理\r\n\r\n### What does the proposed API look like?\r\n希望可以提供与 Vue 统一的异常传播行为\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2825","RelatedDescription":"Closed issue \"errorHandler can't catch the error thrown in navigation guards\" (#2825)"},{"Id":"461397478","IsPullRequest":false,"CreatedAt":"2019-06-27T11:48:13","Actor":"Mighty683","Number":"2830","RawContent":null,"Title":"Enable component async loading","State":"closed","Body":"### What problem does this feature solve?\r\nFor now there is no full support for `vue` `async components` described here:\r\n\r\nhttps://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\nSolution presented in: \r\nhttps://github.com/vuejs/vue-router/pull/2140\r\nhttps://github.com/chrisvfritz/vue-enterprise-boilerplate/blob/master/src/router/routes.js\r\nis solving problem only partially because of such construction `beforeRouteEnter` etc guards are not launched due to fact that component is resolved inside another component after route update\r\n\r\nThis problem is also mentioned here:\r\nhttps://forum.vuejs.org/t/vue-router-async-component-loading-error-components-never-shown/40618/2\r\n\r\n### What does the proposed API look like?\r\nUpdate doc with information that this syntax is not working with `vue-router`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2830","RelatedDescription":"Closed issue \"Enable component async loading\" (#2830)"},{"Id":"461074294","IsPullRequest":false,"CreatedAt":"2019-06-26T17:13:08","Actor":"Etheryte","Number":"2829","RawContent":null,"Title":"Make route name map part of public API","State":"closed","Body":"### What problem does this feature solve?\r\nWorking with large-scale applications, a fairly common problem when using vue-router is trying to avoid inline string constants for link definitions and programmatic navigation. For example:\r\n\r\n```html\r\n<router-link to=\"/documents\">Documents</router-link>\r\n```\r\nand\r\n```ts\r\nthis.$router.push(\"/documents\");\r\n```\r\n\r\nInline constants like these are subject to rot over time, human error when refactoring multiple documents and other similar errors. As an application grows in size, these issues become more prominent.\r\n\r\n### What does the proposed API look like?\r\nAs a solution, our shop often uses a mapping from route name to a route definition. Sample implementation:\r\n\r\n```ts\r\ninterface IRouteMap {\r\n  [key: string]: ReturnType<Router['resolve']> & { name: string };\r\n}\r\n\r\nfunction mapRoutes(routeMap: IRouteMap, routes: RouteConfig[] = []) {\r\n  return routes.reduce((map, route) => {\r\n    const name = route.name;\r\n    if (name) {\r\n      map[name] = Object.assign({\r\n        name,\r\n      }, router.resolve(name));\r\n    }\r\n    if (route.children) {\r\n      mapRoutes(map, route.children);\r\n    }\r\n    return map;\r\n  }, routeMap);\r\n}\r\n\r\nexport const routeMap = mapRoutes({}, routes);\r\n```\r\n\r\nLinks and navigation can then simply use the resulting mapping:\r\n\r\n```html\r\n<router-link v-bind:to=\"routeMap.documents.location\">Documents</router-link>\r\n```\r\nand\r\n```ts\r\nthis.$router.push(routeMap.documents.location);\r\n```\r\nor\r\n```ts\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.name !== routeMap.login.name && !store.state.user) ...\r\n});\r\n```\r\n\r\nThis means that changing a route's path requires a single change in the route definition itself and no further refactoring is necessary. Route names are internal and aren't subject to change over time as route paths often can be.\r\n\r\nAdding a similar mapping (or exposing existing internals) to vue-router's public API would provide a standardized solution to the given problem and allow all vue-router consumers to reap the benefits.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2829","RelatedDescription":"Closed issue \"Make route name map part of public API\" (#2829)"},{"Id":"461052290","IsPullRequest":false,"CreatedAt":"2019-06-26T15:51:32","Actor":"kahirokunn","Number":"2826","RawContent":null,"Title":"maybe getMatchedComponents type is missed","State":"closed","Body":"I try to read vue-router code.\r\nBut code is too long.\r\nSo I don't have a much confidence.\r\nI'm sorry if the point is wrong.\r\n\r\nI read this source code.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/util/resolve-components.js#L13\r\n\r\nthere has this sentence.\r\n\r\n> we want to halt the navigation until the incoming component has been resolved.\r\n\r\nAnd I read some code.\r\nI guess `getMatchedComponents` function never return asyncComponent.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/index.js#L173\r\n\r\nSo I think this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n","Url":"https://github.com/vuejs/vue-router/issues/2826","RelatedDescription":"Closed issue \"maybe getMatchedComponents type is missed\" (#2826)"},{"Id":"460284206","IsPullRequest":false,"CreatedAt":"2019-06-25T11:52:42","Actor":"ahochel","Number":"2824","RawContent":null,"Title":"Vue-router points to wrong component when using browser navigation and two routes have same path","State":"closed","Body":"### Version\r\n3.0.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-6fm9z](https://codesandbox.io/s/vue-template-6fm9z)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. You start at the homepage.\r\n2. Click \"B\" link. It shows that B component is mounted and slug is \"test-b\".\r\n2. Click \"A\" link. It shows that A component is mounted and slug is \"test-a\".\r\n3. Click back button in an iframe. It shows that A component is mounted and slug is \"test-b\".\r\n\r\n### What is expected?\r\nOn last step, it should mount component \"B\", because when you have been on that route before it pointed to route \"b\".\r\n\r\n### What is actually happening?\r\nURL changes correctly, slug (which is route param) also changes correctly, but the wrong component is mounted.\r\n\r\n---\r\nThis happens when you have two (or more) routes with different names and different components, but with the same path and when you navigate through \"go back\" / \"go forward\" buttons in your browser.\r\n\r\n```\r\n{ name: \"a\", path: \"/:slug.html\", component: A },\r\n{ name: \"b\", path: \"/:slug.html\", component: B }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2824","RelatedDescription":"Closed issue \"Vue-router points to wrong component when using browser navigation and two routes have same path\" (#2824)"},{"Id":"460182336","IsPullRequest":false,"CreatedAt":"2019-06-25T11:49:44","Actor":"0415wangyibo","Number":"2823","RawContent":null,"Title":"Can't route to the path \"/element53\" , and so on","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/0415wangyibo/webLearning/tree/master/vueweb](https://github.com/0415wangyibo/webLearning/tree/master/vueweb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm install\r\nnpm run dev\r\nOpen a browser and enter the URL \"http://localhost:8080/#/element53\"\r\n\r\n### What is expected?\r\nIt can route to the component which named \"element53\"\r\n\r\n### What is actually happening?\r\n\"vue-router\" can't route to the path \"/element53\", and it routes to the default path.\r\n\r\n---\r\nIt can't route to the path \"/element53\",\"/element54\",\"/element55\",and so on. But it can route to the path \"/element52\",\"element51\",\"element50\",and so on.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2823","RelatedDescription":"Closed issue \"Can't route to the path \"/element53\" , and so on\" (#2823)"},{"Id":"460177005","IsPullRequest":false,"CreatedAt":"2019-06-25T02:28:09","Actor":"0415wangyibo","Number":"2822","RawContent":null,"Title":"Can't route to the component which named element53","State":"closed","Body":"\"vue-router\" can't route to the path \"/element53\" and \"/element54\", and so on, but the others are routed well, when I am learning the element-ui,there is my project: https://github.com/0415wangyibo/webLearning/tree/master/vueweb\r\n","Url":"https://github.com/vuejs/vue-router/issues/2822","RelatedDescription":"Closed issue \"Can't route to the component which named element53\" (#2822)"},{"Id":"458903046","IsPullRequest":false,"CreatedAt":"2019-06-24T20:59:35","Actor":"juanescarraga","Number":"2819","RawContent":null,"Title":"Color active state on link does not return to original color","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-lgn63](https://codesandbox.io/embed/vue-template-lgn63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the project in the browser.\r\n2. The link with the name Say Hello appears in the browser.\r\n3. The default color is green of the Say Hello link is green, when hovering or clicking on the link the color changes from green to gray.\r\n4. The gray color remains in the Say Hello link, the expected behavior is that once you click and refresh the page the color returns to the original which is green.\r\n5. In tests carried out in development environments, low resolutions are being presented with smart phone views.\r\n\r\n### What is expected?\r\nFix the original color state bug, if the mouse cursor is positioned or the link is touched change color and return to its original state.\r\n\r\n### What is actually happening?\r\nThe color of the link in desktop resolutions works correctly when you hover over the link or click. In low resolutions and smart phones when touching the link changes the active state color and does not return to the original color of the normal state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2819","RelatedDescription":"Closed issue \"Color active state on link does not return to original color\" (#2819)"},{"Id":"460082755","IsPullRequest":false,"CreatedAt":"2019-06-24T20:40:24","Actor":"kfedorov91","Number":"2821","RawContent":null,"Title":"calling next(false); unexpectedly clears forward history","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7l33b](https://codesandbox.io/s/7l33b)\r\n\r\n### Steps to reproduce\r\n- Click through the router-links on the page to get some history (a prompt will pop up on every navigation, click \"OK\")\r\n- Go back a few times (using either the browser back button or the HTML \"go back\" button)\r\n- After you are somewhere in the middle of your history/navigation stack, go forward or back (again using either the browser or HTML buttons) but this time when the prompt pops up asking you if you want to proceed, click \"Cancel\"\r\n- All of your forward history is gone\r\n\r\n### What is expected?\r\nI don't expect all of the forward history to disappear just because a component cancelled navigation, i.e. next(false);\r\n\r\n### What is actually happening?\r\nAll of the forward history is disappearing after a component cancels navigation, i.e. next(false);\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2821","RelatedDescription":"Closed issue \"calling next(false); unexpectedly clears forward history\" (#2821)"},{"Id":"459579755","IsPullRequest":false,"CreatedAt":"2019-06-23T15:05:26","Actor":"matej-svejda","Number":"2820","RawContent":null,"Title":"Autofilled params for named route cause warning with keep-alive","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fp3et456/5/](https://jsfiddle.net/fp3et456/5/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGoing to \"withProps1\" and then back to \"withoutProps\"\r\n\r\n### What is expected?\r\nThat no warning should appear.\r\n\r\n### What is actually happening?\r\nCauses a vue warning to appear for missing params, even though the params for all routes on the current route are set.\r\n\r\n---\r\nIm using auto filled params in named routes that the current route also has. An example would be that all project-related routes have the project id in them, but i dont want to set it every time when construct a route while being in a project-related route. Vue router does this automatically. I didnt find the functionallity documented, but you can see it being implemented in the function match(...) in create-matcher.js.\r\nThis works well in all cases, it only causes warning when Im navigating away from a route that has such a \"shared param\" to a route that doesnt have it. It seems like while leaving the route, something triggers a re-render of the links and the path is reconstructed. However, in this case the parameter can't be autofilled anymore because it isn't present in the current route.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2820","RelatedDescription":"Closed issue \"Autofilled params for named route cause warning with keep-alive\" (#2820)"},{"Id":"458533741","IsPullRequest":false,"CreatedAt":"2019-06-20T09:20:36","Actor":"Bigdragon13th","Number":"2818","RawContent":null,"Title":"Allow props for every attribute in to on router-link (like name, params, query)","State":"open","Body":"### What problem does this feature solve?\r\nIn my projects, I always link to the routes using route name (and also set it as a standard of my team). e.g.\r\n\r\n```vue\r\n<router-link :to=\"{ name: 'productList' }\">Product List</router-link>\r\n<router-link :to=\"{ name: 'productItem', params: { id: 1 }}\">Product Detail</router-link>\r\n```\r\n\r\nI found this pattern is unnecessary too long and not convenient to use compare to a much shorter syntax of using route link\r\n\r\n```vue\r\n<router-link to=\"/products-list\">Product List</router-link>\r\n<router-link to=\"/products/1\">Product Detail</router-link>\r\n```\r\n\r\nAnyway, I still want to use named route everywhere (for the sake of maintainability & scalability) and feel like link to named route can be improved.\r\n\r\n### What does the proposed API look like?\r\nI want the `:to` to be able to link to named route as-is (so when we created a route object somewhere else, we can bind it easily). But maybe you can make another prop for named route, such as:\r\n```vue\r\n<router-link toName=\"productList\">Product List</router-link>\r\n<router-link toName=\"productItem\" :params\"{ id: 1 }\">Product Detail</router-link>\r\n```\r\n\r\nOr (I don't know if it possible) custom modifiers?:\r\n```vue\r\n<router-link to.name=\"productList\">Product List</router-link>\r\n<router-link to.name=\"productItem\" :params\"{ id: 1 }\">Product Detail</router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2818","RelatedDescription":"Open issue \"Allow props for every attribute in to on router-link (like name, params, query)\" (#2818)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"466821711","IsPullRequest":false,"CreatedAt":"2019-07-12T05:53:05","Actor":"Rolanddoda","Number":"1580","RawContent":null,"Title":"Duplicate getter key: 'something/something' : When register/unregister Vuex module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz](https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. When the page loads you are in the home component (`/` route)\r\n2. Click the `Contact` button to navigate to the contact component (`/contact` route)\r\n3. Observe the error in the console.\r\n\r\nIn the Home and Contact  components (or pages) I use `store.registerModule` and `store.unregisterModule` to dynamically register/unregister the same module.\r\n\r\n### What is expected?\r\nNo error should be shown. If you go to the Home later About and later Contact page (and vise versa) everything works as expected.\r\n\r\n### What is actually happening?\r\nAn error is showing in the console that I have duplicate getter keys.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1580","RelatedDescription":"Closed issue \"Duplicate getter key: 'something/something' : When register/unregister Vuex module\" (#1580)"},{"Id":"466177457","IsPullRequest":false,"CreatedAt":"2019-07-10T08:38:57","Actor":"yoyoys","Number":"1579","RawContent":null,"Title":"[Feature Request] mapModule","State":"open","Body":"### What problem does this feature solve?\r\nThis made namespaced module can be use like simple vuex store.\r\n\r\n### What does the proposed API look like?\r\n`store/modules/myModule.ts`\r\n\r\n```ts\r\n\r\nexport const myModule = {\r\n  state: {\r\n    count: 0\r\n  },\r\n  mutations: {\r\n    add(state, payload) {\r\n      state.count = state.count   payload\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n`lib/someLib.ts`\r\n\r\n```ts\r\nimport store from '@/store'\r\n\r\n// the `myModule` is module path\r\nconst myModule = mapModule<IMyModule>(store, 'myModule')\r\n\r\nconsole.log(myModule.state.count) // 0\r\nmyModule.commit('add', 2)\r\nconsole.log(myModule.state.count) // 2\r\n\r\n// for reuse or singleton?\r\nexport myModule\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1579","RelatedDescription":"Open issue \"[Feature Request] mapModule\" (#1579)"},{"Id":"465584333","IsPullRequest":false,"CreatedAt":"2019-07-09T05:57:06","Actor":"tinyCucumber","Number":"1578","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/cucumbers/pen/bPQQeO](https://codepen.io/cucumbers/pen/bPQQeO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.\r\n\r\n### What is expected?\r\nIf the param cb  is useless, remove it.\r\n\r\n### What is actually happening?\r\nThe param cb for wrappedActionHandler is never used;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1578","RelatedDescription":"Open issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1578)"},{"Id":"465576393","IsPullRequest":false,"CreatedAt":"2019-07-09T05:28:32","Actor":"tinyCucumber","Number":"1577","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"closed","Body":"in the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.Can someone answer my doubts?\r\n\r\n**wrappedActionHandler**\r\n\r\n```javascript\r\nfunction registerAction (store, type, handler, local) {\r\n  const entry = store._actions[type] || (store._actions[type] = [])\r\n  entry.push(function wrappedActionHandler (payload, cb) {\r\n    let res = handler.call(store, {\r\n      dispatch: local.dispatch,\r\n      commit: local.commit,\r\n      getters: local.getters,\r\n      state: local.state,\r\n      rootGetters: store.getters,\r\n      rootState: store.state\r\n    }, payload, cb)\r\n    if (!isPromise(res)) {\r\n      res = Promise.resolve(res)\r\n    }\r\n    if (store._devtoolHook) {\r\n      return res.catch(err => {\r\n        store._devtoolHook.emit('vuex:error', err)\r\n        throw err\r\n      })\r\n    } else {\r\n      return res\r\n    }\r\n  })\r\n}\r\n```\r\n\r\n**dispatch**\r\n```javascript\r\n    const {\r\n      type,\r\n      payload\r\n    } = unifyObjectStyle(_type, _payload)\r\n\r\n    const action = { type, payload }\r\n    const entry = this._actions[type]\r\n    if (!entry) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error(`[vuex] unknown action type: ${type}`)\r\n      }\r\n      return\r\n    }\r\n\r\n    try {\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    } catch (e) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(`[vuex] error in before action subscribers: `)\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    const result = entry.length > 1\r\n      ? Promise.all(entry.map(handler => handler(payload)))\r\n      : entry[0](payload)\r\n\r\n    return result.then(res => {\r\n      try {\r\n        this._actionSubscribers\r\n          .filter(sub => sub.after)\r\n          .forEach(sub => sub.after(action, this.state))\r\n      } catch (e) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.warn(`[vuex] error in after action subscribers: `)\r\n          console.error(e)\r\n        }\r\n      }\r\n      return res\r\n    })\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1577","RelatedDescription":"Closed issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1577)"},{"Id":"465294713","IsPullRequest":true,"CreatedAt":"2019-07-08T15:53:27","Actor":"hejialianghe","Number":"1576","RawContent":null,"Title":"vuex-cart","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1576","RelatedDescription":"Closed or merged PR \"vuex-cart\" (#1576)"},{"Id":"465291851","IsPullRequest":true,"CreatedAt":"2019-07-08T14:32:06","Actor":"hejialianghe","Number":"1575","RawContent":null,"Title":"Create vuex-cart","State":"closed","Body":"1","Url":"https://github.com/vuejs/vuex/pull/1575","RelatedDescription":"Closed or merged PR \"Create vuex-cart\" (#1575)"},{"Id":"465227767","IsPullRequest":true,"CreatedAt":"2019-07-08T12:56:43","Actor":"boomler","Number":"1574","RawContent":null,"Title":"Refactor: extract a method for duplicate environment judgement","State":"closed","Body":"There are 17 times of environment judgement in `store.js`.  Extract it to  `util.js`","Url":"https://github.com/vuejs/vuex/pull/1574","RelatedDescription":"Closed or merged PR \"Refactor: extract a method for duplicate environment judgement\" (#1574)"},{"Id":"463514720","IsPullRequest":true,"CreatedAt":"2019-07-03T02:34:27","Actor":"hugoazevedosoares","Number":"1573","RawContent":null,"Title":"fix(#1571): remove undefined payload from store.dispatch","State":"open","Body":"Fixed the issue #1571\r\n\r\nRunned all tests and they were ok, except for tsc/types that didn't work on my computer, by that was before the change was made. Also, the change has no reason to break this kind of test.\r\n\r\nThe solution was proposed by @gitlab-winnie .","Url":"https://github.com/vuejs/vuex/pull/1573","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from store.dispatch\" (#1573)"},{"Id":"461385089","IsPullRequest":false,"CreatedAt":"2019-06-27T08:18:24","Actor":"StijnVandermeulen1","Number":"1572","RawContent":null,"Title":"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.","State":"open","Body":"### What problem does this feature solve?\r\nIf you subscribe to an action an return a promise or use an await statement, the code does not wait for the request to be complete. This is a problem when you implement a component as a plugin. Communication between components can be handled by the subscribeAction. But retrieving data and pushing it into the state using the afore mentioned methods will not result in any data since the service does not wait for it to be completed.\r\n\r\nThis feature would be very usefull for components as plugins that can be fully compartmentalized and plugged into different applications. Configuration retrieval can then be defined in the subscribeAction allowing different implementations over multiple applications.\r\n\r\n### What does the proposed API look like?\r\nExample for before action:\r\n\r\nCurrent code in src/store.js line 132:\r\n\r\n   try {\r\n\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    }\r\n\r\nShould be:\r\n\r\n  try {\r\n\r\n          async function asyncForEach(array, callback) {\r\n             for (let index = 0; index < array.length; index  ) {\r\n                await callback(array[index], index, array);\r\n           }\r\n         }\r\n\r\n         await asyncForEach(this._actionSubscribers\r\n           .filter(function (sub) { return sub.before; }), async function (sub) {\r\n                return await sub.before(action, this$1.state); \r\n           });\r\n        }\r\n\r\ndispatch function should be async as wel.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1572","RelatedDescription":"Open issue \"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.\" (#1572)"},{"Id":"460917840","IsPullRequest":false,"CreatedAt":"2019-06-26T11:34:51","Actor":"markrian","Number":"1571","RawContent":null,"Title":"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/markrian/pen/vqeGZZ?editors=0010](https://codepen.io/markrian/pen/vqeGZZ?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codepen.io/markrian/pen/vqeGZZ?editors=0010\r\n1. Open the browser's console\r\n1. Observe the differing logged arguments passed to `store.dispatch` depending on whether it's a root-mapped action or a namespace-mapped action (`[ \"foo\" ]` and `[ \"childModule/foo\", undefined ]` respectively - note the extra `undefined` argument in the second case; the different action name is of course expected)\r\n\r\nNote that this only really applies in a testing scenario, where the test spies on `store.dispatch` to ensure the component dispatches the expected actions.\r\n\r\n### What is expected?\r\n`store.dispatch` receives exactly the same arguments regardless of whether the actions are namespace-mapped or not.\r\n\r\n### What is actually happening?\r\n`store.dispatch` receives a payload argument of `undefined` for namespace-mapped actions.\r\n\r\n---\r\nI encountered this when refactoring a store into a namespaced module, and found that my expectations needed to change: that `store.dispatch` received an extra `undefined` argument.\r\n\r\nI'm not sure if this should be considered a bug in Vuex, or in my testing approach of spying on `store.dispatch` :man_shrugging: \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1571","RelatedDescription":"Open issue \"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`\" (#1571)"},{"Id":"456973589","IsPullRequest":false,"CreatedAt":"2019-06-17T14:39:06","Actor":"mojodev","Number":"1570","RawContent":null,"Title":"Creating a new module via registerModule firing unrelated module watchers","State":"closed","Body":" i have loaded a module dynamically using registerModule on a page. one of my parent component is watching other module state variable. so while registering module watcher on other module state is firing. same thing happening for unRegisterModule. \r\ni found same issue which is closed only difference is that i am getting this issue in new version of Vuex3.1.1\r\n\r\nAny help will be appreciated :)\r\n","Url":"https://github.com/vuejs/vuex/issues/1570","RelatedDescription":"Closed issue \"Creating a new module via registerModule firing unrelated module watchers\" (#1570)"},{"Id":"456838883","IsPullRequest":false,"CreatedAt":"2019-06-17T09:41:41","Actor":"lemongranule","Number":"1569","RawContent":null,"Title":"This file maybe has a mistake. ","State":"closed","Body":"examples/server.js\r\nOne more \"de\" in the first line","Url":"https://github.com/vuejs/vuex/issues/1569","RelatedDescription":"Closed issue \"This file maybe has a mistake. \" (#1569)"},{"Id":"456589519","IsPullRequest":false,"CreatedAt":"2019-06-17T08:54:29","Actor":"orblazer","Number":"1568","RawContent":null,"Title":"Use interface for Store type definition","State":"closed","Body":"### What problem does this feature solve?\r\nThis could allow extends Store like in Nuxt.JS.\r\nWithout that we don't have clean way for use `this.app` of `this.$router` in vuex actions and mutations.\r\n\r\nWith that we can extends like :\r\n```ts\r\ndeclare module 'vuex/types/index' {\r\n  interface Store<S> {\r\n    app: Vue;\r\n    $route: Route;\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nhttps://github.com/vuejs/vuex/blob/91f3e69ed9e290cf91f8885c6d5ae2c97fa7ab81/types/index.d.ts#L10 Change type of that from `class` to `interface`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1568","RelatedDescription":"Closed issue \"Use interface for Store type definition\" (#1568)"},{"Id":"454069279","IsPullRequest":false,"CreatedAt":"2019-06-10T09:04:41","Actor":"guanweiwang","Number":"1567","RawContent":null,"Title":"使用registerModule注册嵌套，出现错误","State":"closed","Body":"```js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {},\r\n  mutations: {},\r\n  actions: {}\r\n})\r\nstore.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n})\r\nexport default store\r\n```\r\n在浏览器上会给出警告\r\n```\r\nvuex.esm.js?2f62:199 Uncaught TypeError: Cannot read property 'addChild' of undefined\r\n    at ModuleCollection.register (vuex.esm.js?2f62:199)\r\n    at Store.registerModule (vuex.esm.js?2f62:464)\r\n    at Store.t.registerModule.t.registerModule (<anonymous>:1:1182)\r\n    at eval (store.js?c0d6:11)\r\n    at Module../src/store.js (app.js:2393)\r\n    at __webpack_require__ (app.js:767)\r\n    at fn (app.js:130)\r\n    at eval (main.js:13)\r\n    at Module../src/main.js (app.js:2369)\r\n    at __webpack_require__ (app.js:767)\r\n```","Url":"https://github.com/vuejs/vuex/issues/1567","RelatedDescription":"Closed issue \"使用registerModule注册嵌套，出现错误\" (#1567)"},{"Id":"453666442","IsPullRequest":false,"CreatedAt":"2019-06-07T19:43:58","Actor":"winniehell","Number":"1566","RawContent":null,"Title":"registerModule does not warn if existing state is overwritten","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n\r\n[https://jsfiddle.net/winniehell/enjkob2w/](https://jsfiddle.net/winniehell/enjkob2w/)\r\n\r\n### Steps to reproduce\r\n- create store module with some state\r\n- dynamically register module with same name but different state\r\n\r\n### What is expected?\r\na warning or error is shown\r\n\r\n### What is actually happening?\r\nstate is silently overwritten\r\n\r\n---\r\nThis issue is similar to https://github.com/vuejs/vuex/issues/1363.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1566","RelatedDescription":"Open issue \"registerModule does not warn if existing state is overwritten\" (#1566)"},{"Id":"453610451","IsPullRequest":true,"CreatedAt":"2019-06-07T17:05:35","Actor":"Douten","Number":"1565","RawContent":null,"Title":"minor typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1565","RelatedDescription":"Open PR \"minor typo\" (#1565)"},{"Id":"451134309","IsPullRequest":true,"CreatedAt":"2019-06-01T23:19:18","Actor":"YongzeYao","Number":"1564","RawContent":null,"Title":"修改病句","State":"open","Body":"加入一个“的”。","Url":"https://github.com/vuejs/vuex/pull/1564","RelatedDescription":"Open PR \"修改病句\" (#1564)"},{"Id":"451113147","IsPullRequest":true,"CreatedAt":"2019-06-01T18:38:55","Actor":"WIStudent","Number":"1563","RawContent":null,"Title":"Typescript: Use generics for payload/result in commit/dispatch","State":"open","Body":"I am using Typescript to write my store, like this for example:\r\n```typescript\r\ninterface State {\r\n    counter: number;\r\n}\r\n\r\ninterface AddToCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ninterface SubstractFromCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ntype SubstractFromCounterResult = number\r\n\r\nconst store = new Store<State>({\r\n    mutations: {\r\n        addToCounter: (state, payload: AddToCounterPayload): void => {\r\n            state.counter += payload.amount;\r\n        }\r\n    },\r\n    actions: {\r\n        substractFromCounter: async (context, payload: SubstractFromCounterPayload): Promise<SubstractFromCounterResult> => {\r\n            const addToCounterPayload: AddToCounterPayload =  {amount: -1 * payload.amount};\r\n            context.commit('addToCounter', addToCounterPayload)\r\n            return context.state.counter;\r\n        }\r\n    },\r\n    state: {\r\n        counter: 0\r\n    }\r\n})\r\n```\r\n\r\nTriggering a mutation like this will currently not check if the payload has the correct type\r\n```typescript\r\n// correct payload type\r\nstore.commit('addToCounter', {amount: 1});\r\n// incorrect payload type\r\nstore.commit('addToCounter', {amount: '1'});\r\n// Current solution to ensure correct type\r\nconst payload: AddToCounterPayload = {\r\n  amount: 1\r\n}\r\nstore.commit('addToCounter', payload);\r\n```\r\nBut there are cases where I would prefer to build the payload inline, that's why I would like to propose using generics to set the payload type:\r\n```typescript\r\nstore.commit<AddToCounterPayload>('addToCounter', {amount: 1});\r\n```\r\n\r\nTriggering actions would work similary but additionaly the type of the returned value can be set using the second generic parameter\r\n```typescript\r\nconst result = store.dispatch<SubstractFromCounterPayload, SubstractFromCounterResult>('substractFromCounter', {amount: 1}); \r\n// type of result will be Promise<SubstractFromCounterResult>\r\n```\r\nBy setting the default values of the generics to `any` the behavior of `commit` and `dispatch` won't change if called without generics.","Url":"https://github.com/vuejs/vuex/pull/1563","RelatedDescription":"Open PR \"Typescript: Use generics for payload/result in commit/dispatch\" (#1563)"},{"Id":"451011749","IsPullRequest":false,"CreatedAt":"2019-05-31T23:13:08","Actor":"winniehell","Number":"1562","RawContent":null,"Title":"Deprecate testAction helper in favor of vuex-mock-store","State":"open","Body":"### What problem does this feature solve?\r\nThe officially documented way to [test actions](https://vuex.vuejs.org/guide/testing.html#testing-actions)\r\n\r\n- has a complex interface (5 positional, required arguments)\r\n- is always asynchronous—even if the action under test is not\r\n- requires copying a helper function from the documentation into a project's code base\r\n- involves manually patching that helper because of some shortcomings (see for example https://github.com/vuejs/vuex/issues/939)\r\n- offers no way to automatically update the copied helper once it changes in the documentation\r\n\r\n### What does the proposed API look like?\r\nRecommend to use https://github.com/posva/vuex-mock-store instead.\r\n\r\n```javascript\r\n// actions.js\r\n\r\nimport shop from '../api/shop'\r\n\r\nexport const getAllProducts = ({ commit }) => {\r\n  commit('REQUEST_PRODUCTS')\r\n  return shop.getProducts().then(products => {\r\n    commit('RECEIVE_PRODUCTS', products)\r\n  })\r\n}\r\n```\r\n\r\n```javascript\r\n// actions.spec.js\r\n\r\nimport { Store } from 'vuex-mock-store'\r\n\r\nconst store = new Store()\r\n\r\nafterEach(() => store.reset())\r\n\r\ndescribe('actions', () => {\r\n  it('getAllProducts', done => {\r\n    actions.getAllProducts(store)\r\n      .then(() => {\r\n        expect(store.commit).toHaveBeenCalledTimes(2)\r\n        expect(store.commit).toHaveBeenCalledWith('REQUEST_PRODUCTS')\r\n        expect(store.commit).toHaveBeenCalledWith('RECEIVE_PRODUCTS',  /* mocked response */)\r\n      })\r\n      .then(done)\r\n      .catch(done.fail)\r\n})\r\n```\r\n\r\nsee also https://github.com/vuejs/vue-test-utils/issues/1060\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1562","RelatedDescription":"Open issue \"Deprecate testAction helper in favor of vuex-mock-store\" (#1562)"},{"Id":"450569242","IsPullRequest":false,"CreatedAt":"2019-05-31T01:03:40","Actor":"mspiderv","Number":"1561","RawContent":null,"Title":"Retrieve module context from store instance","State":"open","Body":"### What problem does this feature solve?\r\nThis feature adds the ability to retrieve the store module context directly from root store instance.\r\n\r\n### What does the proposed API look like?\r\nLet's suppose, that `store` variable is my Vuex (root) store instance.\r\n\r\nI solve this problem with the following code:\r\n\r\n```\r\nlet subModuleContext = store._modulesNamespaceMap['subModuleName/'].context\r\n```\r\n\r\nIt would be nice to write\r\n\r\n```\r\nlet subModuleContext = store.getContext('subModuleName')\r\n```\r\n\r\nThen, I can write `subModuleContext.dispatch('someAction')` instead of `store.dispatch('subModuleName/someAction')`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1561","RelatedDescription":"Open issue \"Retrieve module context from store instance\" (#1561)"},{"Id":"448157757","IsPullRequest":false,"CreatedAt":"2019-05-30T07:01:45","Actor":"xianshenglu","Number":"1556","RawContent":null,"Title":"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode","State":"closed","Body":"### What problem does this feature solve?\r\nAs [doc](https://vuex.vuejs.org/guide/strict.html) said, \r\n\r\n> In strict mode, whenever Vuex state is mutated outside of mutation handlers, an error will be thrown. \r\n\r\nHowever, **state will still be mutated** though an error would be thrown. \r\n\r\nIn my opinion, this behavior is weird and misleading. Normally,  operation would fail if an error showed. But in this case, it didn't. \r\n\r\nAlso, if a developer doesn't see this error and only see the result which is actually worked, he might do this behavior all the time until one day he find the error.\r\n\r\n So, my propose is\r\n\r\n>  Why Not Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode?\r\n\r\nThere should be a way to absolutely disable direct state mutation outside of mutation handlers. \r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst store = new Vuex.Store({\r\n  // ...\r\n  strict: true\r\n})\r\n```\r\nDirect state mutation outside of mutation handlers would be disabled when `strict` is true.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1556","RelatedDescription":"Closed issue \"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode\" (#1556)"},{"Id":"450157740","IsPullRequest":false,"CreatedAt":"2019-05-30T06:56:44","Actor":"savoygu","Number":"1560","RawContent":null,"Title":"the parent state's key is covered by the same key of the child module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust look at the content displayed on the page.\r\n\r\n### What is expected?\r\nNot covered\r\n\r\n### What is actually happening?\r\nCovered\r\n\r\n---\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1560","RelatedDescription":"Closed issue \"the parent state's key is covered by the same key of the child module\" (#1560)"},{"Id":"450155081","IsPullRequest":false,"CreatedAt":"2019-05-30T06:38:52","Actor":"savoygu","Number":"1559","RawContent":null,"Title":"[BUG] the parent state's key is covered by the same key of the child module","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n  }\r\n```","Url":"https://github.com/vuejs/vuex/issues/1559","RelatedDescription":"Closed issue \"[BUG] the parent state's key is covered by the same key of the child module\" (#1559)"},{"Id":"449676032","IsPullRequest":false,"CreatedAt":"2019-05-29T08:46:50","Actor":"de-don","Number":"1558","RawContent":null,"Title":"Add handler \"subscribeAction.onError\"","State":"open","Body":"### What problem does this feature solve?\r\nThe \"subscribeAction.after\" is not run if an action throws an error.\r\n\r\n### What does the proposed API look like?\r\nI propose to add one more property for catching errors in actions:\r\n```\r\nconst waitPlugin = (store) => {\r\n  store.subscribeAction({\r\n    before: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    after: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    onError: (action, error) => {\r\n      console.log(action.type);\r\n    }\r\n  });\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1558","RelatedDescription":"Open issue \"Add handler \"subscribeAction.onError\"\" (#1558)"},{"Id":"448881052","IsPullRequest":false,"CreatedAt":"2019-05-28T06:31:34","Actor":"chulman444","Number":"1557","RawContent":null,"Title":"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2tb9frcj/1/](https://jsfiddle.net/2tb9frcj/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the reproduction, open the developer console panel, click on the \"click\", Look at the result and please click on the `Object > val`.\r\n\r\n### What is expected?\r\n0 is printed out when clicking on the output of:\r\n\r\n```\r\nconsole.log(\"Printed as undefined\", store.state.tests[0])\r\n```\r\n\r\n### What is actually happening?\r\nPrinted as undefined but behaves like zero\r\n\r\n---\r\nI know that `mutations` are not asynchronous, so the `setTimeout` or `$nextTick` won't fix it; try clicking the button multiple times to add more entries but the old values still 'display' as undefined but behaves like zero.\r\n\r\nBehaves like zero, so I'm fine with it. Printing out the value directly prints zero, so I'm fine with it. But this was HUGELY misleading in my case when it printed out `undefined`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1557","RelatedDescription":"Closed issue \"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly\" (#1557)"},{"Id":"445811290","IsPullRequest":true,"CreatedAt":"2019-05-22T02:28:11","Actor":"liyangworld","Number":"1554","RawContent":null,"Title":"add warnings when the different namespaced modules has the same names…","State":"closed","Body":"Add warnings when the different namespaced modules has the same namespace.\r\nThere is a situation that different namespaced modules could have the same namespace, so when in the method of installModule, generate store._modulesNamespaceMap, the follow module will override the before module.\r\nFor example:\r\n```\r\nnew Store({\r\n  modules: {\r\n    m1: {\r\n      namespaced: true,\r\n      state: {\r\n        a: \"a1\"\r\n      }\r\n    },\r\n    m2: {\r\n      modules: {\r\n        m1: {\r\n          namespaced: true,\r\n          state: {\r\n            a: \"a2\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\nthe module m1 has the namespace 'm1',\r\nthe module m2/m1 has the same namespace 'm1'\r\nso in the store._modulesNamespaceMap the module m2/m1 will override the module m1","Url":"https://github.com/vuejs/vuex/pull/1554","RelatedDescription":"Closed or merged PR \"add warnings when the different namespaced modules has the same names…\" (#1554)"},{"Id":"445160547","IsPullRequest":false,"CreatedAt":"2019-05-21T10:59:33","Actor":"Xambey","Number":"1553","RawContent":null,"Title":"MapGetters not working for modules with namespaced=true in vuex ","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://gitlab.com/Xambey/large](https://gitlab.com/Xambey/large)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Run the application.\r\n2) Open console in web browser (or vue extensions)\r\n3) Catch the error in the log (ChildA.vue: 14 )\r\n\r\n\"Property or method \"score\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property\"\r\n\r\nfound in\r\n\r\n---> <ChildA> at src/components/ChildA.vue\r\n       <Parent> at src/components/Parent.vue\r\n         <App> at src/App.vue\r\n           <Root>\r\n\r\n\r\n### What is expected?\r\nThe getter 'score'  is created in my component. (this.$store.getters['scoreBoard/score'] -> this.score)\r\n\r\n\r\n\r\n### What is actually happening?\r\nGetter no mapped, vue google chrome extension show what state existed https://i.imgur.com/QKB7Wqm.png\r\n\r\n---\r\n```\r\ncomputed: {\r\n    ...mapGetters([\r\n      'scoreBoard/score' // Not found when /scoreBoard/score is existed. \r\n    ])\r\n  }\r\n```\r\nif you do this, then everything works (or namespaced = false): \r\n```\r\ncomputed: {\r\n    ...mapGetters({\r\n      score: 'scoreBoard/score'\r\n    })\r\n  }\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1553","RelatedDescription":"Closed issue \"MapGetters not working for modules with namespaced=true in vuex \" (#1553)"},{"Id":"446184900","IsPullRequest":true,"CreatedAt":"2019-05-21T10:49:47","Actor":"57u","Number":"1555","RawContent":null,"Title":"Typo correction in docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1555","RelatedDescription":"Closed or merged PR \"Typo correction in docs\" (#1555)"},{"Id":"444327664","IsPullRequest":true,"CreatedAt":"2019-05-15T09:21:08","Actor":"wolfgangwalther","Number":"1552","RawContent":null,"Title":"fix memory leak #1507","State":"open","Body":"The fix in PR #1508 was not complete, the anonymous function for the getter `() => store._vm[key]` was preserving the previous context and therefore `oldVm` as well.","Url":"https://github.com/vuejs/vuex/pull/1552","RelatedDescription":"Open PR \"fix memory leak #1507\" (#1552)"},{"Id":"444213353","IsPullRequest":true,"CreatedAt":"2019-05-15T03:00:41","Actor":"dajiaoyisheng","Number":"1551","RawContent":null,"Title":"对象展开运算符","State":"open","Body":"It is a Stage 4 proposal for ECMAScript.","Url":"https://github.com/vuejs/vuex/pull/1551","RelatedDescription":"Open PR \"对象展开运算符\" (#1551)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-13T05:30:51.9165159Z","RunDurationInMilliseconds":2159}