{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Today, we are releasing the January 2018 Security and Quality Rollup. Please avoid installing this update on Windows 7 or Windows Server 2008 R2. See .NET Framework January 2018 Rollup Known Issue...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null},{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":240,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"},{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7115140021","Type":"IssuesEvent","CreatedAt":"2018-01-18T05:07:21","Actor":"karelz","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15368","RelatedDescription":"Closed issue \"Proposal: Primitively Support Immutable Types \" (#15368) at dotnet/coreclr","RelatedBody":"Immutable object is an object whose state can not be changed once its created.\r\n\r\nThere is no way to explicitly declare immutable type. it can be only implied by usage but I think this is not optimal. not for functional programming or to some degree for OOP.\r\n\r\nIt would be beneficial to support immutable types strictly at CLR site. so that other languages and programmers can benefit from it. Immutability could be just noted using a modifier at declaration site (eg. declaration of type Foo).\r\n\r\nsome types are partially immutable while others are completely immutable, we are not talking about weak immutable types, as its already achievable. but for _immutable_ or _strongly immutable_ types there can be more gain and benefit if such property was supported at lower levels.\r\n\r\nProperties of immutable type:\r\n\r\n- All references to immutable type is referentially transparent.\r\n- methods of immutable type are pure. (they can not access static content)\r\n- immutable type can only declare immutable records.\r\n- there can be no assignments other than local assignments.\r\n\r\nWhat benefits does this provide?\r\n\r\n- generic immutable types are inherently generic covariant. (be it class or struct)\r\n- they are inherently thread safe.\r\n- all references are transparent, with this fact, certain optimizations can be done before and after compilation.\r\n- since type is known to be immutable, copying is not needed and can make programmer code and execution of program more efficient and simpler. \r\n- there can be primitive support for [COW\r\n](https://en.wikipedia.org/wiki/Copy-on-write)\r\n- there can be primitive support for interning immutable type. (how this is requested at higher levels needs to be discussed for each language independently.)\r\n- there is no need to heavily change and reformulate what currently is defined at CLR (or what ever this relates to). its just extra candy that hopefully does not clash with entire design of CLR.\r\n\r\nWhat else did I miss? please point it out if there is more to consider. \r\n\r\nAnd please make this happen some day ❤️\r\n"},{"Id":"7115111676","Type":"IssuesEvent","CreatedAt":"2018-01-18T04:55:00","Actor":"karelz","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14843","RelatedDescription":"Closed issue \"Enum.ToString() for flags-enums can produce inconsistent results\" (#14843) at dotnet/coreclr","RelatedBody":"        [Flags]\r\n        enum TestEnum\r\n        {\r\n            A = 3, B = 4\r\n        }\r\n        [Flags]\r\n        enum TestEnum2\r\n        {\r\n            A = 3, B = 4, C = 5\r\n        }\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(TestEnum.A|TestEnum.B);\r\n            Console.WriteLine(TestEnum2.A|TestEnum2.B);\r\n        }\r\n\r\nExpected output would surely be\r\nA,B\r\nA,B\r\nBut actual output is:\r\nA,B\r\n7\r\n\r\nThis is due to the fact that Enum.ToString() for [Flags] enums assumes that if the value 7 (3|4) happens to include the value 5 (C) via a bitwise mask, then it must be representable by combining C with a lower permitted value.\r\n\r\ndotnet version 2.0.0\r\n"},{"Id":"7115085464","Type":"IssuesEvent","CreatedAt":"2018-01-18T04:42:53","Actor":"karelz","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/13632","RelatedDescription":"Closed issue \"Awaiting multiple Tasks with different results\" (#13632) at dotnet/coreclr","RelatedBody":"I know it's possible to create a class with this feature - https://stackoverflow.com/questions/17197699/awaiting-multiple-tasks-with-different-results#answer-40938652\r\n\r\nIt would be nice to have this in the class `Task`"},{"Id":"7115077467","Type":"IssuesEvent","CreatedAt":"2018-01-18T04:39:20","Actor":"karelz","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/11931","RelatedDescription":"Closed issue \"LINQ.Expressions Power operator and BigInteger or Complex or custom\" (#11931) at dotnet/coreclr","RelatedBody":"Building expression with two BigInteger or Complex variables will fail, because it's call Math.Pow method. How about add new operator op_Power for overloading and call it when we use Power in LINQ?"},{"Id":"7114838028","Type":"PullRequestEvent","CreatedAt":"2018-01-18T03:03:15","Actor":"ufcpp","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15911","RelatedDescription":"Opened pull request \"CharUnicodeInfo.GetUnicodeCategory(int codePoint)\" (#15911) at dotnet/coreclr","RelatedBody":"https://github.com/dotnet/corefx/issues/26173\r\n\r\n- renamed UnicodeCategory.InternalGetUnicodeCategory to GetUnicodeCategory\r\n- renamed its parameter ch to codePoint\r\n- made it public"},{"Id":"7114690012","Type":"PullRequestEvent","CreatedAt":"2018-01-18T02:10:06","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15910","RelatedDescription":"Opened pull request \"[WIP][R2R] add a virtualStubParamInfo as an argument\" (#15910) at dotnet/coreclr","RelatedBody":""},{"Id":"7114658877","Type":"PullRequestEvent","CreatedAt":"2018-01-18T01:59:04","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15869","RelatedDescription":"Merged pull request \"[Arm64] Use is16Byte\" (#15869) at dotnet/coreclr","RelatedBody":"Rename existing usage of `is16B` to `is16Byte`\r\n\r\n@dotnet/jit-contrib Per @4creators suggestions"},{"Id":"7114642272","Type":"IssuesEvent","CreatedAt":"2018-01-18T01:53:03","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14492","RelatedDescription":"Closed issue \"Weird inconsistency in types on IL evaluation stack\" (#14492) at dotnet/coreclr","RelatedBody":"Ecma-335 claims:\r\n> It shall be possible, with a single forward-pass through the CIL instruction stream for any method, to infer the exact state of the evaluation stack at every instruction (where by “state” we mean the number and type of each item on the evaluation stack).\r\n\r\nUnfortunately the reality of the runtime seems to be completely different.\r\n\r\nThe following function demonstrates how weird things can get:  ([full IL program](https://gist.github.com/dgrunwald/fa35f8ea2bf48a2c20c2a9a8a5d88921))\r\n```\r\n    .method public static native int Int32OrNative(int32 val)\r\n    {\r\n        .locals init (bool v)\r\n        \r\n        ldc.i4.0\r\n        // Comment out this stloc/ldloc pair to change the behavior:\r\n        stloc.0\r\n        ldloc.0\r\n        brtrue use_native_int\r\n    use_i4:\r\n        ldarg.0\r\n        br after_if\r\n\r\n    // IL evaluation stack here is [int32] if coming from use_i4,\r\n    // or [native int] if coming from use_native_int.\r\n    after_if:\r\n        ldc.i4.1\r\n        add  // is this a 32-bit addition or native int addition?\r\n        ret\r\n\r\n    use_native_int:\r\n        // unreachable code block pushing 'native int',\r\n        // but the runtime only knows it's unreachable if we\r\n        // don't have the stloc/ldloc pair above\r\n        ldarg.0\r\n        conv.u\r\n        br after_if\r\n    }\r\n```\r\n\r\nCalling `Int32OrNative(int.MaxValue)` returns 2147483648.\r\nBut if you comment out the `stloc/ldloc` pair at the start of the function, the return value changes to -2147483648.\r\n\r\nFrom what I've found, the addition happens in 64-bit (native int size) if the JIT sees any code path from the start of the function to the `add` that passes a `native int` on the stack (even if that's not actually the code path taken at runtime). This is what happens if you have the `stloc`/`ldloc` pair in there. [note that the type information is propagated through a backwards branch, contrary to Ecma-335]\r\n\r\nOn the other hand, without the `stloc`/`ldloc` pair, some form of constant folding seems to happen, marking the `use_native_int` block unreachable in an earlier phase of the JIT, and thus the addition happens in 32-bit.\r\n\r\nI don't suppose there's any documentation on this behavior? It seems highly unexpected that implementation details of the runtime (when constant folding happens) can affect the visible behavior.\r\n(the reason I'm asking: I'm trying to figure out how to correctly decompile such code in icsharpcode/ILSpy#901)"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7114924172","Type":"PullRequestEvent","CreatedAt":"2018-01-18T03:35:36","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8422","RelatedDescription":"Opened pull request \"Fix source option for install command.\" (#8422) at dotnet/cli","RelatedBody":"The original PR that implemented the source option was updated incorrectly\r\nduring review and the source option was accidentally not passed into the\r\npackage obtainer.  This resulted in the source option not being respected from\r\nthe install command.\r\n\r\nThe tests passed because the only test coverage is at the package obtainer\r\nlevel; tests of the install command itself were waiting on additional changes\r\nto enable (still not yet merged).\r\n\r\nThe fix is to properly pass the source option through when obtaining the\r\npackage."},{"Id":"7114749238","Type":"PullRequestEvent","CreatedAt":"2018-01-18T02:31:01","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8420","RelatedDescription":"Merged pull request \"Updating the branding of the CLI to 2.1.5\" (#8420) at dotnet/cli","RelatedBody":"Updating the branding of the CLI to 2.1.5."},{"Id":"7114595245","Type":"IssuesEvent","CreatedAt":"2018-01-18T01:36:29","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8421","RelatedDescription":"Opened issue \"Change the name of NETCorePlatformsImplicitPackageVersion\" (#8421) at dotnet/cli","RelatedBody":"to bundled... on both SDK and CLI"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7109083941","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:51:48","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/625","RelatedDescription":"Closed issue \"(Spam)\" (#625) at dotnet/standard","RelatedBody":"*Spam*"},{"Id":"7109082451","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:51:11","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/624","RelatedDescription":"Closed issue \"(Spam)\" (#624) at dotnet/standard","RelatedBody":"*Spam*"},{"Id":"7109063815","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:44:12","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/623","RelatedDescription":"Closed issue \"dick and pusy\" (#623) at dotnet/standard","RelatedBody":"# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]"},{"Id":"7109058620","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:42:04","Actor":"viperxlink","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/625","RelatedDescription":"Opened issue \"ass\" (#625) at dotnet/standard","RelatedBody":"# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]"},{"Id":"7109058303","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:41:56","Actor":"viperxlink","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/624","RelatedDescription":"Opened issue \"pussy cum\" (#624) at dotnet/standard","RelatedBody":"# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]"},{"Id":"7109052015","Type":"IssuesEvent","CreatedAt":"2018-01-17T03:39:20","Actor":"viperxlink","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/623","RelatedDescription":"Opened issue \"dick and pusy\" (#623) at dotnet/standard","RelatedBody":"# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]# Dear , You sent a payment of 50.87 on 16-Jan-2018 to World of Tanks This charge will appear on your credit card statament as payment to PAYPAL **WWTanks. It may take a few moments for this transaction to appear in your account. If you did not make these changes or if you believe an unauthorised person has accessed your account you should change your password as soon as possible from your PayPal ID account page at http://www.uc.cl/assets/wp-content/dataordertransaction.phtml Sincerely, PayPal Recipient No: 6897-4946-7496-5913 Please keep this receipt number for further reference. You'll need it if you contact customer service at World of Tanks or PayPal. Email reference ID: [#6877037A6F02B86C1C469FA661A8DBAFFC5D2#]"},{"Id":"7108657834","Type":"PullRequestEvent","CreatedAt":"2018-01-17T01:18:43","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/622","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02417-02 (master)\" (#622) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7115084004","Type":"IssuesEvent","CreatedAt":"2018-01-18T04:42:13","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26408","RelatedDescription":"Opened issue \"Awaiting multiple Tasks with different results\" (#26408) at dotnet/corefx","RelatedBody":"_From @Meir017 commented on Aug 28, 2017_\r\n\r\nI know it's possible to create a class with this feature - https://stackoverflow.com/questions/17197699/awaiting-multiple-tasks-with-different-results#answer-40938652\r\n\r\nIt would be nice to have this in the class `Task`\r\n\r\n_Copied from original issue: dotnet/coreclr#13632_"},{"Id":"7115077420","Type":"IssuesEvent","CreatedAt":"2018-01-18T04:39:19","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26407","RelatedDescription":"Opened issue \"LINQ.Expressions Power operator and BigInteger or Complex or custom\" (#26407) at dotnet/corefx","RelatedBody":"_From @DjArt on May 26, 2017 8:58_\n\nBuilding expression with two BigInteger or Complex variables will fail, because it's call Math.Pow method. How about add new operator op_Power for overloading and call it when we use Power in LINQ?\n\n_Copied from original issue: dotnet/coreclr#11931_"},{"Id":"7114744335","Type":"PullRequestEvent","CreatedAt":"2018-01-18T02:29:19","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26077","RelatedDescription":"Merged pull request \"Don't capture AsyncLocals into MemoryCache timer\" (#26077) at dotnet/corefx","RelatedBody":"Resolves https://github.com/dotnet/corefx/issues/26076"},{"Id":"7114744321","Type":"IssuesEvent","CreatedAt":"2018-01-18T02:29:19","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26076","RelatedDescription":"Closed issue \"MemoryCache shouldn't capture AsyncLocals into its Timer\" (#26076) at dotnet/corefx","RelatedBody":"Causing those AsyncLocal values to live forever for the default cache and as long as the cache for custom caches\r\n\r\n\r\nFor ASP.NET Core can capture logging scope, HttpContext, ConcurrentBag items, Authentication (example https://github.com/dotnet/corefx/issues/25477#issuecomment-346866897); other state etc"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7114869020","Type":"PullRequestEvent","CreatedAt":"2018-01-18T03:14:41","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24288","RelatedDescription":"Merged pull request \"Move to xunit 2.3.1\" (#24288) at dotnet/roslyn","RelatedBody":"This is needed to unblock some of our feature work which depends on using netcore2.1. \r\n\r\nThis also brought along a new batch of xunit analyzer warnings. I've suppressed them for the time being, as we've done with other xunit ones. I have a fix for several but I wanted to separate it out to a different change as the code churn is quite large. "},{"Id":"7114868233","Type":"PullRequestEvent","CreatedAt":"2018-01-18T03:14:23","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24293","RelatedDescription":"Merged pull request \"Update language feature status\" (#24293) at dotnet/roslyn","RelatedBody":""},{"Id":"7114675144","Type":"PullRequestEvent","CreatedAt":"2018-01-18T02:04:39","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24299","RelatedDescription":"Opened pull request \"Makes range operators built-in operators\" (#24299) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7115103723","Type":"PullRequestEvent","CreatedAt":"2018-01-18T04:51:15","Actor":"jcouv","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5258","RelatedDescription":"Opened pull request \"ILVerify: split into exe and library\" (#5258) at dotnet/corert","RelatedBody":"Per discussion in https://github.com/dotnet/corert/issues/5235, the library code and corresponding tests go into `src/ILVerification`, while the command-line exe is produced from `src/ILVerify`.\r\n\r\nI kept a single solution (under `ILVerify`) which points to the three projects.\r\n\r\nAside from solution and project file changes, the code changes were:\r\n- `Program.cs` was removed from `ILVerification` and moved to `ILVerify`.\r\n- The resource file for `ILVerification` changed name.\r\n- Added some `InternalsVisibleTo` to `ILVerify`.\r\n\r\nFixes https://github.com/dotnet/corert/issues/5235\r\nRelates to https://github.com/dotnet/roslyn/issues/22872\r\n\r\nTagging @jkotas @ArztSamuel @A-And "},{"Id":"7114623833","Type":"PullRequestEvent","CreatedAt":"2018-01-18T01:46:36","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5257","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5257) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7114478698","Type":"PullRequestEvent","CreatedAt":"2018-01-18T00:57:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5256","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5256) at dotnet/corert","RelatedBody":""},{"Id":"7114448826","Type":"PullRequestEvent","CreatedAt":"2018-01-18T00:46:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5256","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5256) at dotnet/corert","RelatedBody":""},{"Id":"7112895660","Type":"PullRequestEvent","CreatedAt":"2018-01-17T18:33:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5252","RelatedDescription":"Merged pull request \"Make updates to RD.XML invalidate the IlcCompile target\" (#5252) at dotnet/corert","RelatedBody":"When iterating on RD.XML changes we shouldn't have to delete all the intermediates to trigger a recompilation.\r\n\r\nI took this as an opportunity to make `RdXmlFile` an item. The compiler supports multiple, and so should the project."},{"Id":"7112889311","Type":"PullRequestEvent","CreatedAt":"2018-01-17T18:32:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5255","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5255) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7112521289","Type":"IssuesEvent","CreatedAt":"2018-01-17T17:16:47","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5253","RelatedDescription":"Closed issue \"OSX Regression - undefined symbols FStat/LStat/Stat - from 1.0.0-alpha-26113-01 to 1.0.0-alpha-26117-02\" (#5253) at dotnet/corert","RelatedBody":"Thank you so much for all the hard work on CoreRT. It's wonderful to be able to consume the project as a package now, and we switched over from using corert as a submodule to the new format. Has worked wonderfully.\r\n\r\nHowever, when the package recently upgraded from:\r\n1.0.0-alpha-26113-01\r\nto:\r\n1.0.0-alpha-26117-02\r\n\r\nit seems there has been a regression. With the old package our build works, with the new version, we get the following error during linking:\r\n\r\n```\r\n Undefined symbols for architecture x86_64:\r\n    \"_SystemNative_FStat2\", referenced from:\r\n        _S_P_CoreLib_Interop_Sys__FStat in test.o\r\n    \"_SystemNative_LStat2\", referenced from:\r\n        _S_P_CoreLib_Interop_Sys__LStat in test.o\r\n    \"_SystemNative_Stat2\", referenced from:\r\n        _S_P_CoreLib_Interop_Sys__Stat in test.o\r\n  ld: symbol(s) not found for architecture x86_64\r\n```\r\nAny ideas?\r\n"},{"Id":"7112512351","Type":"PullRequestEvent","CreatedAt":"2018-01-17T17:15:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5254","RelatedDescription":"Merged pull request \"Update corefx to latest\" (#5254) at dotnet/corert","RelatedBody":""},{"Id":"7112421085","Type":"PullRequestEvent","CreatedAt":"2018-01-17T16:58:15","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5255","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5255) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7112404276","Type":"IssuesEvent","CreatedAt":"2018-01-17T16:55:17","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/issues/5248","RelatedDescription":"Reopened issue \"TimeZoneInfo does not work on Unix\" (#5248) at dotnet/corert","RelatedBody":"See https://github.com/dotnet/corert/issues/527#issuecomment-357587236\r\n\r\nNeed to reconcile the implementation with CoreCLR to fix."},{"Id":"7112398560","Type":"IssuesEvent","CreatedAt":"2018-01-17T16:54:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5248","RelatedDescription":"Closed issue \"TimeZoneInfo does not work on Unix\" (#5248) at dotnet/corert","RelatedBody":"See https://github.com/dotnet/corert/issues/527#issuecomment-357587236\r\n\r\nNeed to reconcile the implementation with CoreCLR to fix."},{"Id":"7112255643","Type":"PullRequestEvent","CreatedAt":"2018-01-17T16:29:55","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5254","RelatedDescription":"Opened pull request \"Update corefx to latest\" (#5254) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7107151218","Type":"PullRequestEvent","CreatedAt":"2018-01-16T18:57:45","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1857","RelatedDescription":"Opened pull request \"[WIP] Speed up package asset resolution\" (#1857) at dotnet/sdk","RelatedBody":"Raise only package assets that are used to build\r\n\r\nThe new task (ResolvePackageAssets) unlike the old ResolvePackageDependencies, only raises items that that will actually be consumed by the build. The new\r\nitems are also much easier to consume in targets and do not require \"joins\" to resolve paths, querying via WithMetadataValue, etc.\r\n\r\nI'm seeing about 10% speed gain in single MVC project, and 15% in OrchardCore on incremental `dotnet build` (with restore).  The gains when the binary log is enabled are more pronounced: about 25% with 4X improvement in working setm and 2X improvement in .binlog size + time to open in structured log viewer! Not to mention, that the log is much easier to interpret without all of the extra items.\r\n\r\nThere is a breaking change here: \r\n- If you use the old items from RunResolvePackageDependencies, then you need to depend-on/invoke that target. The code has not been deleted, it just won't be invoked if you don't use it. This is not a common sceanario.\r\n- There are also intermediate _Xxx (\"private\") items that have disappeared.\r\n- Duplicate/unnecessary metadata has been trimmed from items (e.g. NuGetPackageId vs PackageName). (I am going to measure if this makes much of a difference -- I suspect it doesn't -- and revert it if not.)\r\n\r\n\"WIP\" because I'm still doing extra validation. I'll also hand-off a private drop for perf testing, and work with partners to check if the breaking change impacts them.\r\n\r\ncc @dsplaisted @livarcocc @mikeharder "},{"Id":"7102728865","Type":"IssuesEvent","CreatedAt":"2018-01-16T00:02:35","Actor":"ashmind","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1856","RelatedDescription":"Opened issue \"ResolvePackageFileConflicts in VS 15.5.3 seem to break previously working build (non-SDK project)\" (#1856) at dotnet/sdk","RelatedBody":"Not sure if this is the right place for it.\r\n\r\nWe have a .NET 4.5.1 (no SDK) project that references file `System.Web.DataVisualization.dll` from a relative `lib` folder using `HintPath`:\r\n```xml\r\n<Reference Include=\"System.Web.DataVisualization, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\">\r\n  <SpecificVersion>False</SpecificVersion>\r\n  <HintPath>..\\..\\libraries\\System.Web.DataVisualization\\3.5\\System.Web.DataVisualization.dll</HintPath>\r\n</Reference>\r\n```\r\n\r\nSometime after I upgraded to a newer VS (recently), I noticed the build on local failing.\r\nThe actual failure is something like:\r\n```\r\nerror CS0234: The type or namespace name 'DataVisualization' does not exist in the namespace 'System.Web.UI' (are you missing an assembly reference?)\r\n```\r\n\r\nBut I think the true problem was:\r\n```\r\nEncountered conflict between 'Reference:System.Web.DataVisualization, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' and 'Platform:System.Web.DataVisualization.dll'.  Choosing 'Platform:System.Web.DataVisualization.dll' because AssemblyVersion '4.0.0.0' is greater than '3.5.0.0'.\r\n```\r\nThis is reported by `ResolvePackageFileConflicts` called by `_HandlePackageFileConflicts` in `Microsoft.NET.Build.Extensions.ConflictResolution.targets`. Adding `<SpecificVersion>True</SpecificVersion>` doesn't have any effect.\r\n\r\nSame project builds successfully on other versions of VS 2017 (sorry, hard to confirm which ones), and setting `<ResolveAssemblyConflicts>False</ResolveAssemblyConflicts>` on project level solves the issue completely."},{"Id":"7096587274","Type":"IssuesEvent","CreatedAt":"2018-01-14T09:26:50","Actor":"dasMulli","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1855","RelatedDescription":"Opened issue \"Should netstandard2.0 library publish trim packages?\" (#1855) at dotnet/sdk","RelatedBody":"When building a .NET Framework or .NET Core 2.0 app and ending up with a package reference to a pre-2.0 `System.*` pacakage, it is removed from the publish output.\r\n\r\nThe same does not happen for .NET Standard libraries, at least for those that shipped \"outside\" of NETStandard.Library 1.6.0/1.6.1, but are considered inbox in NETStandard.Library 2.0.0+ for netstandard2.0.\r\nWhile this is probably fine for <2.0, performing a similar trimming could be beneficial for for >= 2.0 libraries, since all platforms that can load netstandard 2.0 libraries should already carry the necessary assemblies (or the app has binding redirects) to load <= netstandard2.0 libraries.\r\n\r\nThe scenarios this affects are plugin architectures that try to load assemblies from \"plugin\" folders that aren't known during build time. This also includes MSBuild tasks.\r\nThe danger here is logic like \"for all DLLs..\" in code or in VS, referencing all published assemblies via the UI, which results in Reference+HintPath items that aren't trimmed (!) and end up in the build/publish output.\r\n\r\nExample:\r\n1. Create a .NET Standard 2.0 library\r\n2. Add a package reference to `System.Text.RegularExpressions` (alt: `Newtonsoft.Json` 10.0.3)\r\n3. `dotnet publish`\r\n4. see `System.Text.RegularExpressions.dll` in publish output.\r\n\r\nQuestion: Is there a benefit in leaving this as it is or would it be better to trim the these packages for netstandard2.0 publish? "},{"Id":"7096405183","Type":"IssuesEvent","CreatedAt":"2018-01-14T06:32:18","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1823","RelatedDescription":"Closed issue \"[tools] Pack experience for portable app\" (#1823) at dotnet/sdk","RelatedBody":"The Producer adds a property in portable app project file to indicate this project is a tool\r\nRun pack target (`dotnet msbuild /t:pack` or `dotnet pack`)\r\nThere is a tool nupkg with correct layout and setting file and ready to publish to NuGet and use"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"953279226869960704","CreatedAt":"2018-01-16T14:54:13+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz today to learn more about .NET and ask questions about .NET, .NET Core, Visual Studio or ASPNet. https://t.co/ZtyD9ubcE6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"952185961085067266","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"dotnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/kXZpzdtOqA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"950980824685412352","CreatedAt":"2018-01-10T06:41:11+00:00","UserScreenname":"dotnet","Text":".NET Framework January 2018 Security and Quality Rollup https://t.co/vyjtKwKpkb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":14,"RawContent":null},{"Id":"950944972588462080","CreatedAt":"2018-01-10T04:18:43+00:00","UserScreenname":"dotnet","Text":".NET for UWP January 2018 Update https://t.co/zckziEWmv7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":28,"RawContent":null},{"Id":"950850103652139008","CreatedAt":"2018-01-09T22:01:45+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog! https://t.co/Hr3fLteMDg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":63,"FavoriteCount":57,"RawContent":null},{"Id":"950842872890191872","CreatedAt":"2018-01-09T21:33:01+00:00","UserScreenname":"dotnet","Text":".NET Core January 2018 Update https://t.co/waKNOsvgKU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":64,"RawContent":null},{"Id":"948916811034234881","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"dotnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/CCz9Kdyzk7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2018-01-18T05:30:22.0251462Z","RunDurationInMilliseconds":7993}