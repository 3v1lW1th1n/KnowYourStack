{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR for ASP.NET Core 2.0","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core is... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":44,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":104,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6614807631","Type":"PullRequestEvent","CreatedAt":"2017-09-20T14:26:44","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/pull/2208","RelatedDescription":"Closed pull request \"Pull Request\" (#2208) at aspnet/Home","RelatedBody":""},{"Id":"6614708040","Type":"PullRequestEvent","CreatedAt":"2017-09-20T14:08:24","Actor":"baldaramesh","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/pull/2208","RelatedDescription":"Opened pull request \"Pull Request\" (#2208) at aspnet/Home","RelatedBody":""},{"Id":"6614105482","Type":"IssuesEvent","CreatedAt":"2017-09-20T11:59:22","Actor":"destromas1","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2207","RelatedDescription":"Opened issue \"Why react and all dependencies are added inside devDependencies section ?\" (#2207) at aspnet/Home","RelatedBody":"How npm works , `react` or `redux` these kinda stuffs should go to `dependencies` section inside `package.json` file . But I see those inside `devDependencies` section.\r\nCan anyone share the reason ?\r\nhttps://github.com/aspnet/templating/blob/95f2b8d375256ca7057cbe88dcbfff644697f183/src/Microsoft.DotNet.Web.Spa.ProjectTemplates/content/ReactRedux-CSharp/package.json#L29\r\n\r\nPackages like `webpack` or `webpack-hot-middleware` should be available inside `devDependencies` section.\r\n\r\nThanks!"},{"Id":"6612408135","Type":"IssuesEvent","CreatedAt":"2017-09-20T03:36:54","Actor":"ahdung","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2206","RelatedDescription":"Opened issue \"why web.config in the publish folder?\" (#2206) at aspnet/Home","RelatedBody":"- VS2017\r\n- asp.net core 2.0 project\r\n- publish to folder\r\nin bin\\xx\\netcoreapp2.0 no web.config, but bin\\xx\\PublishOutput has web.config, the content:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <system.webServer>\r\n    <handlers>\r\n      <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />\r\n    </handlers>\r\n    <aspNetCore processPath=\"dotnet\" arguments=\".\\xxx.dll\" stdoutLogEnabled=\"false\" stdoutLogFile=\".\\logs\\stdout\" />\r\n  </system.webServer>\r\n</configuration>\r\n<!--ProjectGuid: 9e4e704c-869f-41da-9668-d4ea1d44002d-->\r\n```\r\nI try remove web.config, all thing are work fine, is this a issue?"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6617383053","Type":"PullRequestEvent","CreatedAt":"2017-09-21T01:14:22","Actor":"Drawaes","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/922","RelatedDescription":"Opened pull request \"Remove extra slice\" (#922) at aspnet/SignalR","RelatedBody":"Removed extra slice\r\nAlso removed the loop for the size test instead of just an if?"},{"Id":"6617290904","Type":"PullRequestEvent","CreatedAt":"2017-09-21T00:33:21","Actor":"Drawaes","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/921","RelatedDescription":"Opened pull request \"Fix the double buffer rent/free\" (#921) at aspnet/SignalR","RelatedBody":""},{"Id":"6617267138","Type":"IssuesEvent","CreatedAt":"2017-09-21T00:22:47","Actor":"Drawaes","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/920","RelatedDescription":"Opened issue \"Why does this do a double rent?\" (#920) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/blob/dev/src/Microsoft.AspNetCore.SignalR.Common/Internal/Formatters/BinaryMessageFormatter.cs#L18\r\n\r\nWhy don't you just rent a buffer that is payload.Length + sizeof(long) write the long to it and then write the whole buffer out in one go? What is the purpose of the two writes here?"},{"Id":"6617209880","Type":"IssuesEvent","CreatedAt":"2017-09-20T23:58:40","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/919","RelatedDescription":"Closed issue \"In AspNetCore.SignalR what replaced GlobalHost?\" (#919) at aspnet/SignalR","RelatedBody":"In my current project Im using GlobalHost.ConnectionManager.GetHubContext<ChatHub>(). This no longer works. what should I replace it with?\r\n\r\nThanks in advance,\r\n\r\nMHoward"},{"Id":"6617204618","Type":"IssuesEvent","CreatedAt":"2017-09-20T23:56:25","Actor":"ideplo","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/919","RelatedDescription":"Opened issue \"In AspNetCore.SignalR what replaced GlobalHost?\" (#919) at aspnet/SignalR","RelatedBody":"In my current project Im using GlobalHost.ConnectionManager.GetHubContext<ChatHub>(). This no longer works. what should I replace it with?\r\n\r\nThanks in advance,\r\n\r\nMHoward"},{"Id":"6616981099","Type":"IssuesEvent","CreatedAt":"2017-09-20T22:33:36","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/722","RelatedDescription":"Closed issue \"Typed HubContext Clients property\" (#722) at aspnet/SignalR","RelatedBody":"I have application which want to translate existing SignalR 2.2 hubs using new .NET Core version. I order to retranslate notifications, I have to use `HubContext` if I understand current version properly. But current version of `HubContext<T>` provide untyped version of `IHubClients` which is require me to manually write all notifications. This is easy way to introduce stupid errors. I would like to have some way to have access to `IHubClients<T>` outside of `Hub` implementations. Do you have any suggestions how I could do that?"},{"Id":"6616975056","Type":"PullRequestEvent","CreatedAt":"2017-09-20T22:31:34","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/890","RelatedDescription":"Merged pull request \"Ft winston typed hub context\" (#890) at aspnet/SignalR","RelatedBody":"This is https://github.com/aspnet/SignalR/pull/783 rebased on the latest dev"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6617335712","Type":"PullRequestEvent","CreatedAt":"2017-09-21T00:53:35","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6860","RelatedDescription":"Opened pull request \"Fixed FileExtensionsAttributeAdapter to trim(whitespaces, dot charact…\" (#6860) at aspnet/Mvc","RelatedBody":"…er) and lowercase the extensions\r\n\r\nFollow-up PR for this: https://github.com/aspnet/jquery-validation-unobtrusive/pull/70#discussion_r139861551"},{"Id":"6616829278","Type":"IssuesEvent","CreatedAt":"2017-09-20T21:48:04","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6833","RelatedDescription":"Closed issue \"Publish fails in visual studio 2017.\" (#6833) at aspnet/Mvc","RelatedBody":"Hi,\r\nI want to publish an \"ASP.Net MVC Core 2.0\" project, which contains some library as references (They are not NuGets or projects). The project is working fine in the visual studio but it throws the following exception.\r\n\r\n```\r\n\tCannot find compilation library location for package 'Olive'\r\n     at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n     at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n     at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n     at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n     at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n     at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n     at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n     at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n     at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n     at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n     at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n     at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n     at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n     at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n     at Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(RazorCodeDocument codeDocument)\r\n     at Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(RazorProjectItem projectItem)\r\n     at Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(String path)\r\n     at Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.Internal.PrecompileRunCommand.<>c__DisplayClass23_0.<GenerateCode>b__0(Int32 i)\r\n     at System.Threading.Tasks.Parallel.<>c__DisplayClass19_0`1.<ForWorker>b__1(RangeWorker& currentWorker, Int32 timeout, Boolean& replicationDelegateYieldedBeforeCompletion)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Threading.Tasks.Parallel.<>c__DisplayClass19_0`1.<ForWorker>b__1(RangeWorker& currentWorker, Int32 timeout, Boolean& replicationDelegateYieldedBeforeCompletion)\r\n     at System.Threading.Tasks.TaskReplicator.Replica`1.ExecuteAction(Boolean& yieldedBeforeCompletion)\r\n     at System.Threading.Tasks.TaskReplicator.Replica.Execute()\r\n```"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6616480418","Type":"IssuesEvent","CreatedAt":"2017-09-20T20:23:21","Actor":"NinoFloris","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1439","RelatedDescription":"Opened issue \"Why are all the Get...Store functions private or don't check Supports...Store\" (#1439) at aspnet/Identity","RelatedBody":"Flabbergasted by this, as to disable a piece of functionality on a manager now requires much more overrides compared to overriding just the one method and throwing unconditionally.\r\n\r\nI see more of these flaws in places where we'd like to take away or slightly remold functionality. Take for instance the idea of the feature interfaces for stores. The stores are great as we don't want to fully create the stores functionality ourselves and we like the idea of using interfaces to detect which features are supported. Problem with it though is the combination of those two are very hard on library users as we can't take away an interface once implemented. Which as they're all already implemented on all the supplied stores (base and inherits) is a problem... Now we have to choose, do we want reusability or a nice fit for our project's supported set.\r\n\r\nExample below to disable user claims as we ignore that entity in the dbcontext modelbuilder (we have our own solution for it):\r\n![screen shot 2017-09-20 at 22 15 05](https://user-images.githubusercontent.com/4218809/30665458-5a751448-9e51-11e7-88bc-1d7f3121b31f.png)\r\n"},{"Id":"6616176089","Type":"PullRequestEvent","CreatedAt":"2017-09-20T19:10:48","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1137","RelatedDescription":"Closed pull request \"Fixed see reference\" (#1137) at aspnet/Identity","RelatedBody":"<see name=\"SignInResult\"/> -> <see cref=\"SignInResult\"/>"},{"Id":"6615908051","Type":"PullRequestEvent","CreatedAt":"2017-09-20T18:10:24","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1438","RelatedDescription":"Opened pull request \"Update bootstrappers\" (#1438) at aspnet/Identity","RelatedBody":null},{"Id":"6611626827","Type":"PullRequestEvent","CreatedAt":"2017-09-19T22:27:32","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1437","RelatedDescription":"Merged pull request \"Update bootstrappers\" (#1437) at aspnet/Identity","RelatedBody":null}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6617448573","Type":"PullRequestEvent","CreatedAt":"2017-09-21T01:42:48","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2074","RelatedDescription":"Opened pull request \"HTTP/2: close connection on PING frame with non-zero stream ID\" (#2074) at aspnet/KestrelHttpServer","RelatedBody":"http://httpwg.org/specs/rfc7540.html#rfc.section.6.7\r\n\r\n> PING frames are not associated with any individual stream. If a PING frame is received with a stream identifier field value other than 0x0, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR."},{"Id":"6617446554","Type":"PullRequestEvent","CreatedAt":"2017-09-21T01:41:55","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2073","RelatedDescription":"Opened pull request \"HTTP/2: do not ACK PING frames received with ACK set\" (#2073) at aspnet/KestrelHttpServer","RelatedBody":"http://httpwg.org/specs/rfc7540.html#rfc.section.6.7\r\n\r\n> The PING frame defines the following flags:\r\n> \r\n> ACK (0x1): When set, bit 0 indicates that this PING frame is a PING response. An endpoint MUST set this flag in PING responses. **An endpoint MUST NOT respond to PING frames containing this flag.**"},{"Id":"6617385635","Type":"PullRequestEvent","CreatedAt":"2017-09-21T01:15:27","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2072","RelatedDescription":"Opened pull request \"HTTP/2: close connection with CONNECTION_ERROR on DATA frame to idle stream\" (#2072) at aspnet/KestrelHttpServer","RelatedBody":"http://httpwg.org/specs/rfc7540.html#rfc.section.5.1\r\n\r\n```\r\nidle:\r\n...\r\nReceiving any frame other than HEADERS or PRIORITY on a stream in this state MUST be treated as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.\r\n```"},{"Id":"6617329005","Type":"PullRequestEvent","CreatedAt":"2017-09-21T00:50:39","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2071","RelatedDescription":"Opened pull request \"Send a GOAWAY frame with COMPRESSION_ERROR on incomplete header block\" (#2071) at aspnet/KestrelHttpServer","RelatedBody":"http://httpwg.org/specs/rfc7540.html#rfc.section.4.3\r\n\r\n```\r\nA receiver MUST terminate the connection with a connection error (Section 5.4.1) of type COMPRESSION_ERROR if it does not decompress a header block.\r\n```"},{"Id":"6617063893","Type":"IssuesEvent","CreatedAt":"2017-09-20T23:02:21","Actor":"pathcore-tasos","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2070","RelatedDescription":"Opened issue \"InvalidOperationException: Response Content-Length mismatch when streaming a bitmap\" (#2070) at aspnet/KestrelHttpServer","RelatedBody":"Hi there,\r\n\r\nIf one tries to return an image in a FileStreamResult, the application will throw an exception along the lines of:\r\n`InvalidOperationException: Response Content-Length mismatch: too few bytes written (0 of 1234567)`\r\n\r\nMy code was as follows:\r\n```c#    \r\nprivate static IActionResult ImageResult(Bitmap image, ImageFormat format, string mimeType)\r\n{\r\n    var stream = new MemoryStream();\r\n    image.Save(stream, format);\r\n    return new FileStreamResult(stream, mimeType);\r\n}\r\n```\r\n\r\nHowever, if I changed it to the following,  the image is returned without complaint:\r\n```c#\r\nprivate static IActionResult ImageResult(Bitmap image, ImageFormat format, string mimeType)\r\n{\r\n    var stream = new MemoryStream();\r\n    image.Save(stream, format);\r\n    return new FileContentResult(stream.ToArray(), mimeType);\r\n}\r\n```\r\n\r\nIt appears that doing the reading manually fixes the issue.\r\n\r\nThanks!"},{"Id":"6616095889","Type":"IssuesEvent","CreatedAt":"2017-09-20T18:52:23","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1684","RelatedDescription":"Closed issue \"Flaky Test: TestKeepAliveTimeout\" (#1684) at aspnet/KestrelHttpServer","RelatedBody":"# Latest failure message\r\n\r\n```\r\n[TestKeepAliveTimeout] System.IO.IOException : Unable to transfer data on the transport connection: An established connection was aborted by the software in your host machine.\r\n---- System.Net.Sockets.SocketException : An established connection was aborted by the software in your host machine\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.IO.StreamWriter.<FlushAsyncInternal>d__65.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Testing.TestConnection.<Send>d__11.MoveNext() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\.r\\KestrelHttpServer\\test\\shared\\TestConnection.cs:line 68\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.KeepAliveTimeoutTests.<ConnectionKeptAliveBetweenRequests>d__5.MoveNext() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\.r\\KestrelHttpServer\\test\\Microsoft.AspNetCore.Server.Kestrel.FunctionalTests\\KeepAliveTimeoutTests.cs:line 73\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.KeepAliveTimeoutTests.<<TestKeepAliveTimeout>b__3_0>d.MoveNext() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\.r\\KestrelHttpServer\\test\\Microsoft.AspNetCore.Server.Kestrel.FunctionalTests\\KeepAliveTimeoutTests.cs:line 48\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n----- Inner Stack Trace -----\r\n```\r\n\r\n5/11/17: http://aspnetci/viewLog.html?buildId=218866&buildTypeId=XPlat_Windows_Win7_Universe&tab=buildLog&filter=err#_focus=288981\r\n\r\n# Original failure message\r\n\r\nI ran the functional tests in a loop and it failed with the following:\r\n\r\n```\r\n[xUnit.net 00:01:03.2382155]     TestKeepAliveTimeout [FAIL]\r\n[xUnit.net 00:01:03.2398021]       System.IO.IOException : Unable to transfer data on the transport connection: Broken pipe.\r\n[xUnit.net 00:01:03.2399534]       ---- System.Net.Sockets.SocketException : Broken pipe\r\n[xUnit.net 00:01:03.2413298]       Stack Trace:\r\n[xUnit.net 00:01:03.2428599]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n[xUnit.net 00:01:03.2430077]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:01:03.2430613]            at System.IO.StreamWriter.<FlushAsyncInternal>d__65.MoveNext()\r\n[xUnit.net 00:01:03.2431238]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:01:03.2432002]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n[xUnit.net 00:01:03.2433100]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:01:03.2433561]            at Microsoft.AspNetCore.Testing.TestConnection.<Send>d__11.MoveNext()\r\n[xUnit.net 00:01:03.2433751]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:01:03.2433994]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n[xUnit.net 00:01:03.2434906]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:01:03.2435713]            at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.KeepAliveTimeoutTests.<ConnectionKeptAliveBetweenRequests>d__5.MoveNext()\r\n[xUnit.net 00:01:03.2436558]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:01:03.2437408]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n[xUnit.net 00:01:03.2438098]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:01:03.2438414]            at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.KeepAliveTimeoutTests.<TestKeepAliveTimeout>d__3.MoveNext()\r\n[xUnit.net 00:01:03.2439671]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:01:03.2440045]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n[xUnit.net 00:01:03.2441334]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:01:03.2441633]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:01:03.2442079]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n[xUnit.net 00:01:03.2442491]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:01:03.2443089]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:01:03.2443845]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n[xUnit.net 00:01:03.2444837]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:01:03.2445164]         ----- Inner Stack Trace -----\r\n[xUnit.net 00:01:03.2445361]\r\nFailed   TestKeepAliveTimeout\r\nError Message:\r\n System.IO.IOException : Unable to transfer data on the transport connection: Broken pipe.\r\n---- System.Net.Sockets.SocketException : Broken pipe\r\nStack Trace:\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.IO.StreamWriter.<FlushAsyncInternal>d__65.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Testing.TestConnection.<Send>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.KeepAliveTimeoutTests.<ConnectionKeptAliveBetweenRequests>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.KeepAliveTimeoutTests.<TestKeepAliveTimeout>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6617305915","Type":"PullRequestEvent","CreatedAt":"2017-09-21T00:40:01","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1694","RelatedDescription":"Opened pull request \"[Design] Split LanguageServices.Razor.\" (#1694) at aspnet/Razor","RelatedBody":"- Created a new `Microsoft.VisualStudio.Editor.Razor` assembly to contain Visual Studio platform agnostic info.\r\n\r\n#1690"},{"Id":"6615919035","Type":"PullRequestEvent","CreatedAt":"2017-09-20T18:12:52","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1693","RelatedDescription":"Opened pull request \"Update bootstrappers\" (#1693) at aspnet/Razor","RelatedBody":null},{"Id":"6611895611","Type":"IssuesEvent","CreatedAt":"2017-09-20T00:04:06","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1692","RelatedDescription":"Closed issue \"Add support for minimized boolean tag helper attributes\" (#1692) at aspnet/Razor","RelatedBody":"After https://github.com/aspnet/Razor/issues/1678, we now have the ability to quirk our parser without breaking older versions."},{"Id":"6611892830","Type":"IssuesEvent","CreatedAt":"2017-09-20T00:02:54","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1692","RelatedDescription":"Opened issue \"Add support for minimized boolean tag helper attributes\" (#1692) at aspnet/Razor","RelatedBody":"After https://github.com/aspnet/Razor/issues/1678, we now have the ability to quirk our parser without breaking older versions."},{"Id":"6611739205","Type":"PullRequestEvent","CreatedAt":"2017-09-19T23:05:01","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1691","RelatedDescription":"Merged pull request \"Create new template engine when version changes\" (#1691) at aspnet/Razor","RelatedBody":""},{"Id":"6611583949","Type":"PullRequestEvent","CreatedAt":"2017-09-19T22:14:21","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1691","RelatedDescription":"Opened pull request \"Create new template engine when version changes\" (#1691) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6504000070","Type":"IssuesEvent","CreatedAt":"2017-08-23T19:03:38","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/269","RelatedDescription":"Opened issue \"ExpandoObjectAdapter does not assume case insensitivity\" (#269) at aspnet/Announcements","RelatedBody":"When applying a json patch to `ExpandoObject`s, case insensitive search will not be used to match the path segment to the object's dictionary keys. Instead, the path segment will be resolved using the `NamingStrategy` defined in the `IContractResolver`.\r\n\r\nAddresses https://github.com/aspnet/JsonPatch/issues/102\r\n\r\nSee https://github.com/aspnet/JsonPatch/issues/103 for discussion\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":25,"RawContent":null},{"Id":"897126323298209792","CreatedAt":"2017-08-14T16:02:37+00:00","UserScreenname":"aspnet","Text":"Announcing ASPNet Core 2.0 - https://t.co/5RTzwS9Ym2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":193,"FavoriteCount":158,"RawContent":null}]}},"RunOn":"2017-09-21T05:30:07.4240738Z","RunDurationInMilliseconds":6125}