{"Data":{"Blog":{"FeedItems":[{"Title":"Webinar Recording | Exploring UrhoSharp 3D with Xamarin Workbooks Webinar","PublishedOn":"2017-09-27T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Folllow along with Charles Petzold as he builds a 3D app from the ground up with UrhoSharp and Xamarin Workbooks in this webinar recording. UrhoSharp is a powerful, high performance 3D graphics engine suitable for games, animation, and data visualization. Used together, UrhoSharp and Xamarin Workbooks give developers a streamlined way to get started with [&#8230;]","Href":"https://blog.xamarin.com/webinar-recording-exploring-urhosharp-3d-with-xamarin-workbooks-webinar/","RawContent":null},{"Title":"3 Reasons to Try Xamarin Previews in Visual Studio 2017","PublishedOn":"2017-09-26T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Previews are a great way to try the latest-and-greatest in mobile development, from the new Xamarin Live Player that allows you to instantly visualize your XAML-based user interface as you type, to support for new SDKs like Android Oreo or iOS 11. Then arises the great dilemma: how do I try all the awesome stuff [&#8230;]","Href":"https://blog.xamarin.com/3-reasons-to-try-visual-studio-2017-version-15-4-previews/","RawContent":null},{"Title":"ActivityTask: A Helper for Async/Await on Android","PublishedOn":"2017-09-25T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Google I/O, several members of the Xamarin team attended the Architecture Component talk on Android lifecycle (which I recommend you watch). While the solutions presented there are interesting and, in some cases, map to patterns we already have in .NET, it resonated with those of us present because of how those Android lifecycle details [&#8230;]","Href":"https://blog.xamarin.com/activitytask-helper-asyncawait-android/","RawContent":null},{"Title":"Podcast: Android Oreo, iOS 11, and Xamarin.Forms Tips & Tricks","PublishedOn":"2017-09-22T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover Xamarin support for Android Oreo and iOS 11, share tips for beating the learning curve with Xamarin.Forms, talk upcoming releases in the pipeline, and more! Be sure to download today&#8217;s episode from your favorite podcasting app. Subscribe or Download Today Keeping up with [&#8230;]","Href":"https://blog.xamarin.com/podcast-android-oreo-ios-11-xamarin-forms-tips-tricks/","RawContent":null},{"Title":"Protecting Your Xamarin Apps with Dotfuscator","PublishedOn":"2017-09-20T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Joe Sewell, a developer on the Dotfuscator team at PreEmptive Solutions. Let&#8217;s be honest, releasing a library, desktop app, or mobile app can be a bit scary. Once your software is freely available to the world, you lose a certain degree of control over how it will be [&#8230;]","Href":"https://blog.xamarin.com/protecting-xamarin-apps-dotfuscator/","RawContent":null},{"Title":"Augment Reality with Xamarin and iOS 11","PublishedOn":"2017-09-19T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the showcase features of iOS 11 is ARKit, an augmented-reality mode available on devices powered by A9 and newer chips (basically, 6S and better iPhones, 2017 iPads, and iPad Pros). With ARKit, users hold up the device and view a composite of the video feed and computer-generated imagery (either 2D SpriteKit or 3D [&#8230;]","Href":"https://blog.xamarin.com/augment-reality-xamarin-ios-11/","RawContent":null},{"Title":"Learn How The Lean Cook Uses Mobile to Drive Revenue and Promote Healthy Living","PublishedOn":"2017-09-18T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Lean Cook, a popular UK diet and fitness blog started as a hobby by a husband and wife team, is a prime example of how to design apps for the user. Instead of simply replicating web content on a smaller screen, the team crafted an interactive shopping and cooking experience. They’ve grown a loyal following, and their latest project (available [&#8230;]","Href":"https://blog.xamarin.com/learn-lean-cook-uses-mobile-drive-revenue-promote-healthy-living/","RawContent":null},{"Title":"Xamarin.Forms: Tips for Beating the Learning Curve","PublishedOn":"2017-09-15T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a first time user learning any new technology or pattern, there’s always a curve, and over the years I&#8217;ve stood at the threshold of a product and gazed up that curve to determine how painfully steep it appeared and how long it would take until I was productive. Now, as the Program Manager for Xamarin.Forms, [&#8230;]","Href":"https://blog.xamarin.com/xamarin-forms-tips-beating-learning-curve/","RawContent":null},{"Title":"Xamarin All-Stars at .NET Conf 2017!","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join Xamarin Product Managers and Engineers at .NET Conf 2017, a free virtual event for any developer. This year&#8217;s speaker line-up consists of all-star Xamarin speakers, including Miguel de Icaza, James Montemagno, and Mikayla Hutchinson, who will present on Xamarin tooling and the latest on what’s happening with Xamarin and related technologies. What&#8217;s .NET Conf? [&#8230;]","Href":"https://blog.xamarin.com/xamarin-stars-net-conf-2017/","RawContent":null},{"Title":"Get Your Apps Ready for iOS 11!","PublishedOn":"2017-09-13T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’ve just updated our iOS 11 support to go along with the Xcode 9 GM Seed release. You can use this build along with the Xcode 9 GM to submit applications that take advantage of the new features in iOS 11, tvOS 11 and watchOS 4 to the Apple AppStore. We also have awesome new sample [&#8230;]","Href":"https://blog.xamarin.com/get-apps-ready-ios-11/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6645885422","Type":"PullRequestEvent","CreatedAt":"2017-09-27T19:40:51","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/904","RelatedDescription":"Opened pull request \"[tests] Android tooling needs file extensions on Windows\" (#904) at xamarin/xamarin-android","RelatedBody":"Various Android tooling used by emulator tests need their extensions:\r\n- adb.exe\r\n- avdmanager.bat\r\n- android.bat\r\n- emulator.exe"},{"Id":"6645500404","Type":"PullRequestEvent","CreatedAt":"2017-09-27T18:14:20","Actor":"cobey","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/903","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] libpng warnings are errors? (#900)\" (#903) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59764\r\n\r\nOur regex to pick up error messages from the android tooling is\r\npicking up *warnings*:\r\n\r\n\tobj/Debug/res/drawable-nodpi/background_started.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited\r\n\r\nThis is because the format matches our error regex.\r\n\r\nSo we need to ignore things that have \"warning\" in them and log\r\nthose as actual warnings, instead of percolating them as errors."},{"Id":"6645488742","Type":"PullRequestEvent","CreatedAt":"2017-09-27T18:11:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/903","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] libpng warnings are errors? (#900)\" (#903) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59764\r\n\r\nOur regex to pick up error messages from the android tooling is\r\npicking up *warnings*:\r\n\r\n\tobj/Debug/res/drawable-nodpi/background_started.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited\r\n\r\nThis is because the format matches our error regex.\r\n\r\nSo we need to ignore things that have \"warning\" in them and log\r\nthose as actual warnings, instead of percolating them as errors."},{"Id":"6645482318","Type":"PullRequestEvent","CreatedAt":"2017-09-27T18:10:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/900","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Build Error with Android SDK Build Tools 23.0.2\" (#900) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=59764\r\n\r\nOur regex to pick up error messages from the android tooling is\r\npicking up wwarnings.\r\n\r\n\t`obj/Debug/res/drawable-nodpi/background_started.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited`\r\n\r\nThis is because the format matches our regex.\r\n\r\nSo we need to ignore things that have \"warning\" in them and log\r\nthose as actual warnings."},{"Id":"6645451611","Type":"PullRequestEvent","CreatedAt":"2017-09-27T18:03:45","Actor":"cobey","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/902","RelatedDescription":"Merged pull request \"[Mono.Android] Fix ViewStructure enumification (take 2!) (#901)\" (#902) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59655\r\n\r\nBumps to xamarin-android-api-compatibility/d15-4/f25a3d55.\r\n\r\nCommit f6f521e6 inadvertently reverted commit 3fc03b33.\r\n\r\nDoh!\r\n\r\nRe-fix Bug #59655 and enumify `ViewStructure.SetAutofillType()`."},{"Id":"6645447750","Type":"PullRequestEvent","CreatedAt":"2017-09-27T18:02:58","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/902","RelatedDescription":"Opened pull request \"[Mono.Android] Fix ViewStructure enumification (take 2!) (#901)\" (#902) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59655\r\n\r\nBumps to xamarin-android-api-compatibility/d15-4/f25a3d55.\r\n\r\nCommit f6f521e6 inadvertently reverted commit 3fc03b33.\r\n\r\nDoh!\r\n\r\nRe-fix Bug #59655 and enumify `ViewStructure.SetAutofillType()`."},{"Id":"6645430384","Type":"PullRequestEvent","CreatedAt":"2017-09-27T17:59:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/901","RelatedDescription":"Merged pull request \"[Mono.Android] Fix ViewStructure enumification (take 2!)\" (#901) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59655\r\n\r\nBumps to xamarin-android-api-compatibility/master/021f4ca3.\r\n\r\nCommit 9608ea7f inadvertently reverted commit 699f5b5b.\r\n\r\nDoh!\r\n\r\nRe-fix Bug #59655 and enumify `ViewStructure.SetAutofillType()`.\r\n"},{"Id":"6645383185","Type":"PullRequestEvent","CreatedAt":"2017-09-27T17:49:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/901","RelatedDescription":"Opened pull request \"[Mono.Android] Fix ViewStructure enumification (take 2!)\" (#901) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59655\r\n\r\nBumps to xamarin-android-api-compatibility/master/021f4ca3.\r\n\r\nEnumify `Android.Views.ViewStructure.SetAutofillType()`."},{"Id":"6643817697","Type":"PullRequestEvent","CreatedAt":"2017-09-27T12:50:55","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/900","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Build Error with Android SDK Build Tools 23.0.2\" (#900) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=59764\r\n\r\nOur regex to pick up error messages from the android tooling is\r\npicking up wwarnings.\r\n\r\n\t`obj/Debug/res/drawable-nodpi/background_started.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited`\r\n\r\nThis is because the format matches our regex.\r\n\r\nSo we need to ignore things that have \"warning\" in them and log\r\nthose as actual warnings."},{"Id":"6643636606","Type":"PullRequestEvent","CreatedAt":"2017-09-27T12:09:38","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/899","RelatedDescription":"Opened pull request \"Test just upgrading nunit\" (#899) at xamarin/xamarin-android","RelatedBody":""}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6647021534","Type":"PullRequestEvent","CreatedAt":"2017-09-28T01:13:05","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/482","RelatedDescription":"Closed pull request \"[iOS] ListView on steroids Platform Specific IsUsingAutoSizedViewCell\" (#482) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change\r\n\r\n`ListView` scrolling on iOS is not good at all. It seems this behavior was carried over since March (That's as far back as I could see history.) The problem is when uneven rows are used, we're trying to determine if row heights should be calculated by us or iOS. The logic for doing that isn't very efficient.\r\n\r\n`GetHeightForRow` (through `GetCellForPath`) is getting the current cell at `indexPath` every time it's called. Unfortunately, this could be quite time-consuming. I have a **simple** setup where looking up cells takes anywhere between 25 and 85 ms. The end result is the listview creates a jarring scroll animation as if it's struggling to scroll.\r\n\r\nThe solution is to return `AutomaticDimension` as fast as possible if we need it. I created a platform specific option to tell the renderer we're only using view cells (that's because the original code is checking for that and I'm not sure if it's necessary.) Other checks are also in place.\r\n\r\nPerhaps, the platform specific is unnecessary. It was mentioned in the code that only `ViewCell` resizes - not other cells. Maybe we can create an internal flag to monitor `TemplatedItemsView` to see if it contains only `ViewCell` instances.\r\n\r\nThat said, I'd assume most people use `ViewCell` in templates instead of a mix of cells. If this is not the case, `IsUsingAutoSizedViewCellsOnly` can be set to false, which of course would default to the existing behavior.\r\n\r\nFinally, I'm not sure what the significance of `cell.Height == -1` is. \r\n\r\nThis could wait until #454 is merged.\r\n\r\nBefore: https://1drv.ms/v/s!AjlbPgOcTyP2bt9knobeoD4YcBQ\r\nAfter: https://1drv.ms/v/s!AjlbPgOcTyP2b7u8gU4p-6y43cQ\r\n\r\nI think it's easier to see the difference if you put the videos side by side. It's even more apparent on the phone.\r\n### Bugs Fixed\r\n- N/A\r\n- **Update:** https://bugzilla.xamarin.com/show_bug.cgi?id=52487\r\n### API Changes\r\n\r\nAdded:\r\n- public static readonly BindableProperty IsUsingAutoSizedViewCellsOnlyProperty\r\n- public static bool GetIsUsingAutoSizedViewCellsOnly(BindableObject element)\r\n- public static void SetIsUsingAutoSizedViewCellsOnly(BindableObject element, bool value)\r\n- public static bool IsUsingAutoSizedViewCellsOnly(this IPlatformElementConfiguration<iOS, FormsElement> config)\r\n- public static IPlatformElementConfiguration<iOS, FormsElement> SetIsUsingAutoSizedViewCellsOnly(this IPlatformElementConfiguration<iOS, FormsElement> config, bool value)\r\n### PR Checklist\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6646658307","Type":"PullRequestEvent","CreatedAt":"2017-09-27T22:56:21","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1164","RelatedDescription":"Merged pull request \"Add ProjectCapability to targets file\" (#1164) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdds a ProjectCapability to the targets file so that tooling can pick up X.F. compatible projects in net standard projects.\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6646575703","Type":"PullRequestEvent","CreatedAt":"2017-09-27T22:29:11","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1164","RelatedDescription":"Opened pull request \"Add ProjectCapability to targets file\" (#1164) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdds a ProjectCapability to the targets file so that tooling can pick up X.F. compatible projects in net standard projects.\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6646440738","Type":"PullRequestEvent","CreatedAt":"2017-09-27T21:50:50","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/920","RelatedDescription":"Closed pull request \"[Android] Avoid using GetGesturesFor when checking pinch gesture presence\" (#920) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen processing touch events, `VisualElementRenderer` is checking if the current view has a pinch gesture. Instead of using `GetGesturesFor`, we can use LINQ's built-in `OfType` method. This seems to reduce processing time by as much as 8 ms (in my case).\r\n\r\nNote that `GetGesturesFor` seems to be used in many different places. If there is room for improvement in those, one should take a look at. \r\n\r\nAlso removed a redundant cast.\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6645789514","Type":"PullRequestEvent","CreatedAt":"2017-09-27T19:18:23","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1154","RelatedDescription":"Merged pull request \"[Android] Fix context action/tap gesture conflict when tap gesture is on nested view\" (#1154) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe original fix for 46363 handled the case where a TapGesture was added to the top-level control inside of a DataTemplate; unfortunately, it missed the case where a TapGesture was added to a control nested deeper in the DataTemplate's hierarchy. This fix addresses the more general case. \r\n\r\n### Bugs Fixed ###\r\n\r\n- [46363 – TapGestureRecognizer blocks List View Context Actions](https://bugzilla.xamarin.com/show_bug.cgi?id=46363#c14)\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6645662427","Type":"PullRequestEvent","CreatedAt":"2017-09-27T18:49:46","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/919","RelatedDescription":"Merged pull request \"[Android] Do not call DisallowAddToBackStack()\" (#919) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nCalling `DisallowAddToBackStack()` is costing me more than 100 ms. I'm not sure why we need this. As per the [documentation](https://developer.android.com/reference/android/app/FragmentTransaction.html#disallowAddToBackStack()), this method throws an exception if we have already called `AddToBackStack()`. Since it doesn't throw an exception in our case, it means we haven't. I also searched the codebase for any references and did not find any. Another purpose of this method is to make sure any subsequent calls to `AddToBackStack()` will throw an exception so it acts as a safety check.\r\n\r\nI think we could let go of this safety check because, if we call `AddToBackStack()`, I'd assume that it was on purpose.\r\n\r\nI have tested `NavigationPage`. Please test MDP to make sure all is okay.\r\n\r\nAlso referencing #451 so if it gets added, we should remove `DisallowAddToBackStack()` from there as well.\r\n\r\nMaybe I'm not fully understanding the use case of this method, so feel free to leave feedback.\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6645152707","Type":"PullRequestEvent","CreatedAt":"2017-09-27T16:57:47","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1163","RelatedDescription":"Merged pull request \"Fix nuspec file to install DefaultItems.targets in PCL projects\" (#1163) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdd missing file to pcl target\r\n\r\n### Bugs Fixed ###\r\n\r\n- Build error in PCL\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6647241719","Type":"PullRequestEvent","CreatedAt":"2017-09-28T02:38:06","Actor":"akoeplinger","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2799","RelatedDescription":"Opened pull request \"[d15-5] Bump min Mono version to 5.4.0.201\" (#2799) at xamarin/xamarin-macios","RelatedBody":"Backport of #2797"},{"Id":"6647231667","Type":"PullRequestEvent","CreatedAt":"2017-09-28T02:34:14","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2476","RelatedDescription":"Closed pull request \"[gameplaykit] Added API bindings\" (#2476) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6647221517","Type":"PullRequestEvent","CreatedAt":"2017-09-28T02:30:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2798","RelatedDescription":"Opened pull request \"[apidiff] Update XML files to 15.4 definitions\" (#2798) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6647193976","Type":"PullRequestEvent","CreatedAt":"2017-09-28T02:20:28","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2797","RelatedDescription":"Merged pull request \"Bump min Mono version to 5.4.0.201\" (#2797) at xamarin/xamarin-macios","RelatedBody":"The previous one was a pretty old 5.4 build by now."},{"Id":"6647127095","Type":"PullRequestEvent","CreatedAt":"2017-09-28T01:53:50","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2774","RelatedDescription":"Closed pull request \"[AVFoundation] AVFoundation API Enhancements\" (#2774) at xamarin/xamarin-macios","RelatedBody":"Changes in AVFoundation\r\n===================\r\n\r\nAVCaptureSynchronizedDataCollection:\r\n\r\n* Obsoletes `From` method because the name does not makes sense in the current context.\r\n* Obsoletes `ObjectForKeyedSubscript` in favor of a C# indexer.\r\n* Adds `GetSynchronizedData` to replace obsoleted `From` method`.\r\n\r\nAVCaptureSynchronizedData:\r\n\r\n* Adds `[Abstract]` in XAMCORE_4_0 because it is an abstract superclass.\r\n\r\nAVCaptureDevice:\r\n\r\n* Adds strong typed API to `GetAuthorizationStatus` and `RequestAccessForMediaType`\r\n  using `AVAuthorizationMediaType` enum holding the only possible values.\r\n\r\nAVCaptureDepthDataOutput:\r\n\r\n* AVCaptureDepthDataOutput needs its default .ctor, there is no other way\r\n  to instantiate this class.\r\n\r\nTest\r\n====\r\n\r\nA test exercising the new API lives here:\r\n\r\nhttps://github.com/dalexsoto/XamarinTests/blob/4715069b2bd777009c94c32fd9eed56b81103264/AVCaptureDataOutputSynchronizerTest/AVCaptureDataOutputSynchronizerTest/ViewController.cs\r\n\r\nThe API needs an iPhone 7+, 8+ or X in order to run."},{"Id":"6646976478","Type":"PullRequestEvent","CreatedAt":"2017-09-28T00:56:36","Actor":"akoeplinger","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2797","RelatedDescription":"Opened pull request \"Bump min Mono version to 5.4.0.201\" (#2797) at xamarin/xamarin-macios","RelatedBody":"The previous one was a pretty old 5.4 build by now."},{"Id":"6646836400","Type":"PullRequestEvent","CreatedAt":"2017-09-28T00:00:06","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2796","RelatedDescription":"Opened pull request \"[apidiff] Update XML files to 15.4 definitions\" (#2796) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6646789208","Type":"PullRequestEvent","CreatedAt":"2017-09-27T23:42:24","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2795","RelatedDescription":"Merged pull request \"Bump Xcode and versions for 9.1 beta 1\" (#2795) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6646349674","Type":"PullRequestEvent","CreatedAt":"2017-09-27T21:27:38","Actor":"Aguilex","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2785","RelatedDescription":"Merged pull request \"[registrar] Add support for the BindAs attribute.\" (#2785) at xamarin/xamarin-macios","RelatedBody":"This is a backport of PR #2288.\r\n\r\nWrench lane: https://wrench.internalx.com/Wrench/ViewTable.aspx?lane_id=5513&host_id=379"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"913112376391733248","CreatedAt":"2017-09-27T18:45:29+00:00","UserScreenname":"xamarinhq","Text":"Add 3D to your app with our webinar recording from Charles Petzold on using UrhoSharp 3D with #Xamarin Workbooks: https://t.co/AG37mw39QS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":14,"RawContent":null},{"Id":"913071735381118977","CreatedAt":"2017-09-27T16:04:00+00:00","UserScreenname":"xamarinhq","Text":"Update #VisualStudio and #VS4Mac for full support to develop #iOS11 apps with #Xamarin: https://t.co/dRGFj7RaZO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":29,"RawContent":null},{"Id":"912752497046978560","CreatedAt":"2017-09-26T18:55:28+00:00","UserScreenname":"xamarinhq","Text":"Try out the latest new features for #Xamarin in #VS2017 without affecting your production environment: https://t.co/6QFngIYygP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":16,"RawContent":null},{"Id":"912704314086428674","CreatedAt":"2017-09-26T15:44:00+00:00","UserScreenname":"xamarinhq","Text":"Add local notifications to your Xamarin.Mac applications: https://t.co/fmHnM8m18Z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":9,"RawContent":null},{"Id":"912414874571038732","CreatedAt":"2017-09-25T20:33:52+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":27,"RawContent":null},{"Id":"912343187083100165","CreatedAt":"2017-09-25T15:49:00+00:00","UserScreenname":"xamarinhq","Text":"Make your #XamarinForms apps accessible with Xamarin.Forms 2.3.4 + an example from the #XamarinEvolve 2016 app: https://t.co/auqnwBvyE2","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":40,"FavoriteCount":18,"RawContent":null},{"Id":"912103614059094017","CreatedAt":"2017-09-24T23:57:02+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the #Xamarin.Firebase.Messaging package to add FCM-based push notification features in your app:… https://t.co/IlUWyDYRGV","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":100,"FavoriteCount":41,"RawContent":null},{"Id":"911804140266778625","CreatedAt":"2017-09-24T04:07:02+00:00","UserScreenname":"xamarinhq","Text":"Deep Dive into #SkiaSharp for #XamarinForms with #Xamarin's Charles Petzold: https://t.co/mlySNkqQ63 https://t.co/WNuYhD19n9","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":71,"FavoriteCount":35,"RawContent":null},{"Id":"911313517848006657","CreatedAt":"2017-09-22T19:37:28+00:00","UserScreenname":"xamarinhq","Text":"This week on the @XamarinPodcast learn about #Xamarin support for #AndroidOreo and #iOS11, #XamarinForms, plus more: https://t.co/CDAYHoRh5t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":22,"RawContent":null},{"Id":"910894395024699392","CreatedAt":"2017-09-21T15:52:02+00:00","UserScreenname":"xamarinhq","Text":"Our @XamarinU webinar with Charles Petzold on UrhoSharp 3D with #Xamarin Workbooks is about to start—join us:… https://t.co/CjCM7pVcd3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":8,"RawContent":null},{"Id":"910587508056051713","CreatedAt":"2017-09-20T19:32:34+00:00","UserScreenname":"xamarinhq","Text":"See how the #Dotfuscator from @PreEmptive can protect your #Xamarin apps and libraries from reverse engineering: https://t.co/hyhUzG4o9r","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":81,"FavoriteCount":27,"RawContent":null},{"Id":"910536790372683777","CreatedAt":"2017-09-20T16:11:02+00:00","UserScreenname":"xamarinhq","Text":"Last chance—don't forget to sign up for Charles Petzold's webinar tomorrow on UrhoSharp 3D with Xamarin Workbooks:… https://t.co/KilnMMfPtU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":10,"FavoriteCount":9,"RawContent":null},{"Id":"910535530965737486","CreatedAt":"2017-09-20T16:06:02+00:00","UserScreenname":"xamarinhq","Text":"Our friends at #VSMobileCenter have made it even easier to add mobile DevOps to your development process with great… https://t.co/YalQb8Jt8k","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":27,"FavoriteCount":16,"RawContent":null},{"Id":"910216295668383747","CreatedAt":"2017-09-19T18:57:30+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @lobrien  shows you how to  add augmented reality to your #Xamarin apps with #ARKit in #iOS11: https://t.co/FPBpyiRPEK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":44,"RawContent":null},{"Id":"910192040188751872","CreatedAt":"2017-09-19T17:21:07+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin apps ready for #iOS11, #tvOS11, and #watchOS4 with updated #VisualStudio tools, docs, and samples: https://t.co/7eYTFe0O73","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":39,"FavoriteCount":26,"RawContent":null},{"Id":"910173151891468295","CreatedAt":"2017-09-19T16:06:04+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin Partners are helping companies accelerate their mobile projects every day. Find a #XamarinPartner near you… https://t.co/IfYCiVzmVz","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":14,"FavoriteCount":10,"RawContent":null},{"Id":"909881970783551489","CreatedAt":"2017-09-18T20:49:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how The Lean Cook is using mobile to promote healthy living AND drive revenue in a crowded market:… https://t.co/UF1i6PVrtR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"909810012469514243","CreatedAt":"2017-09-18T16:03:05+00:00","UserScreenname":"xamarinhq","Text":"Request App Store ratings and reviews from your users with an in-app dialog using the SKStoreReviewController:… https://t.co/bSbfehKqcq","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":41,"FavoriteCount":18,"RawContent":null},{"Id":"908780317200179200","CreatedAt":"2017-09-15T19:51:26+00:00","UserScreenname":"xamarinhq","Text":"#XamarinForms Program Manager @davidortinau shares his tips for beating the learning curve: https://t.co/amiCZmJtYS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":38,"RawContent":null}]}},"RunOn":"2017-09-28T05:30:36.5900824Z","RunDurationInMilliseconds":3716}