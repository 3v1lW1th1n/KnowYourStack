{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework June 27, 2019 Cumulative Update for Windows 10 version 1903","PublishedOn":"2019-06-27T18:01:46+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we released the June 2019 Cumulative Update for .NET Framework 3.5 and 4.8 on Windows 10 version 1903.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-27-2019-cumulative-update-for-windows-10-version-1903/","RawContent":null},{"Title":"Help us shape the future of .NET for Apache Spark","PublishedOn":"2019-06-20T17:58:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Apache Spark™ is a general-purpose distributed processing engine for analytics over large data set typically terabytes or petabytes of data. Apache Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-net-for-apache-spark/","RawContent":null},{"Title":"Create interactive documentation with the new Try .NET template","PublishedOn":"2019-06-20T16:05:37+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In our previous post, we announced dotnet try a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning...","Href":"https://devblogs.microsoft.com/dotnet/create-interactive-documentation-with-the-new-try-net-template/","RawContent":null},{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"The Evolving Infrastructure of .NET Core","PublishedOn":"2019-06-18T18:11:59+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"With .NET Core 3.0 Preview 6 out the door, we thought it would be useful to take a brief look at the history of our infrastructure systems and the significant improvements that have been made in the...","Href":"https://devblogs.microsoft.com/dotnet/the-evolving-infrastructure-of-net-core/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 6 and Entity Framework 6.3 Preview 6","PublishedOn":"2019-06-13T20:35:52+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"New previews of the next versions of EF Core and EF 6 are now available on NuGet.Org.\nWhat is new in EF Core 3.0 Preview 6\nIn recent months, a lot of our efforts have been focused on a new LINQ...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-6-and-entity-framework-6-3-preview-6/","RawContent":null},{"Title":"Try the new System.Text.Json APIs","PublishedOn":"2019-06-13T17:39:05+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"For .NET Core 3.0, we&#8217;re shipping a brand new namespace called System.Text.Json with support for a reader/writer, a document object model (DOM), and a serializer. In this blog post, I&#8217;m...","Href":"https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 6","PublishedOn":"2019-06-12T17:00:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 6. It includes updates for compiling assemblies for improved startup, optimizing applications for size with linker and EventPipe improvements....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/","RawContent":null},{"Title":"Announcing ML.NET 1.1 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-06-11T17:16:17+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers.\nML.NET offers Model Builder Model Builder (a simple UI tool for Visual Studio) and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-1-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 2)","PublishedOn":"2019-06-10T15:23:35+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"In part 1 of this blog series, I began the process of porting a sample WPF app to .NET Core. In that post, I described the .NET Core migration process as having four steps:\nWe previously went through...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9963969636","Type":"IssuesEvent","CreatedAt":"2019-07-08T03:13:39","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Opened issue \"Updates to releases.json (.NET Core release metadata)\" (#116) at dotnet/announcements","RelatedBody":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, msbuild, nuget, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is a partial example of the new array based on the upcoming July update. \r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n  \"sdks\": [\r\n    {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": [\r\n            {\r\n            \"name\": \"\",\r\n            \"rid\": \"\",\r\n            \"url\": \"\",\r\n            \"hash\": \"\"\r\n            }\r\n        ]\r\n    }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the communitiy which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility comprimises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n"},{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9963706507","Type":"IssuesEvent","CreatedAt":"2019-07-08T01:48:09","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25588","RelatedDescription":"Opened issue \"Test failed: Interop_COM._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_cmd\" (#25588) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190707.1/workItem/Interop/analysis/xunit/Interop_COM._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_~2F_NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_cmd\r\n\r\n**Failed tests:**\r\nInterop_COM._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_cmd\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\c5b8c1d5-cf58-411c-8a90-0c0b458e15c6\\\\Work\\\\6299d9a7-4f5b-4278-8a59-3562fbfc5d8c\\\\Exec\\\\Interop\\\\COM\\\\Reports\\\\Interop.COM\\\\NETClients\\\\Primitives\\\\NETClientPrimitives\\\\NETClientPrimitives.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\c5b8c1d5-cf58-411c-8a90-0c0b458e15c6\\\\Payload\\\\corerun.exe\\\" NETClientPrimitives.exe \r\nNumeric RNG seed: 37\r\nByte test invariant: 101 + 70 = 171\r\nInt16 test invariant: 22885 + -29882 = -6997\r\nUInt16 test invariant: 22885 + 35654 = 58539\r\nInt32 test invariant: 120215909 + 1447004998 = 1567220907\r\nUInt32 test invariant: 120215909 + 1447004998 = 1567220907\r\nInt64 test invariant: 120215909 + 1447004998 = 1567220907\r\nUInt64 test invariant: 120215909 + 1447004998 = 1567220907\r\nSingle test invariant: 1202159.1 + 14470051 = 15672210\r\nDouble test invariant: 1202159.09 + 14470049.98 = 15672209.07\r\nInt32 11 test invariant: 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 = 66\r\nInt32 12 test invariant: 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 = 78\r\nByte[] marshalling\r\nInt16[] marshalling\r\nUInt16[] marshalling\r\nInt32[] marshalling\r\nUInt32[] marshalling\r\nInt64[] marshalling\r\nUInt64[] marshalling\r\nSingle[] marshalling\r\nDouble[] marshalling\r\nMarshal strings as LPStr\r\nMarshal strings as LPWStr\r\nMarshal strings as BStr\r\nMarshal LCID\r\nVerify expected exception from HRESULT\r\nVerify preserved function signature\r\nTesting COM object lifetime control methods.\r\nNumeric RNG seed: 37\r\nByte test invariant: 101 + 70 = 171\r\nInt16 test invariant: 22885 + -29882 = -6997\r\nUInt16 test invariant: 22885 + 35654 = 58539\r\nInt32 test invariant: 120215909 + 1447004998 = 1567220907\r\nUInt32 test invariant: 120215909 + 1447004998 = 1567220907\r\nInt64 test invariant: 120215909 + 1447004998 = 1567220907\r\nUInt64 test invariant: 120215909 + 1447004998 = 1567220907\r\nSingle test invariant: 1202159.1 + 14470051 = 15672210\r\nDouble test invariant: 1202159.09 + 14470049.98 = 15672209.07\r\nInt32 11 test invariant: 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 = 66\r\nInt32 12 test invariant: 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 = 78\r\nByte[] marshalling\r\nInt16[] marshalling\r\nUInt16[] marshalling\r\nInt32[] marshalling\r\nUInt32[] marshalling\r\nInt64[] marshalling\r\nUInt64[] marshalling\r\nSingle[] marshalling\r\nDouble[] marshalling\r\nMarshal strings as LPStr\r\nMarshal strings as LPWStr\r\nMarshal strings as BStr\r\nMarshal LCID\r\nVerify expected exception from HRESULT\r\nVerify preserved function signature\r\nTest Failure: TestLibrary.AssertTestException: Assert.IsFalse: \r\n   at TestLibrary.Assert.HandleFail(String assertionName, String message) in F:\\\\workspace.3\\\\_work\\\\1\\\\s\\\\tests\\\\src\\\\Common\\\\CoreCLRTestLibrary\\\\Assertion.cs:line 735\r\n   at TestLibrary.Assert.IsFalse(Boolean condition, String message) in F:\\\\workspace.3\\\\_work\\\\1\\\\s\\\\tests\\\\src\\\\Common\\\\CoreCLRTestLibrary\\\\Assertion.cs:line 322\r\n   at NetClient.Program.Main(String[] doNotUse) in F:\\\\workspace.3\\\\_work\\\\1\\\\s\\\\tests\\\\src\\\\Interop\\\\COM\\\\NETClients\\\\Primitives\\\\Program.cs:line 29\r\nExpected: 100\r\nActual: 101\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\c5b8c1d5-cf58-411c-8a90-0c0b458e15c6\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\c5b8c1d5-cf58-411c-8a90-0c0b458e15c6\\\\Work\\\\6299d9a7-4f5b-4278-8a59-3562fbfc5d8c\\\\Exec\\\\Interop\\\\COM\\\\NETClients\\\\Primitives\\\\NETClientPrimitives\\\\NETClientPrimitives.cmd\r\nExpected: True\r\nActual:   False\r\n```"},{"Id":"9963667745","Type":"IssuesEvent","CreatedAt":"2019-07-08T01:33:20","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25587","RelatedDescription":"Opened issue \"Test failed: Loader_classloader._DefaultInterfaceMethods_aredgenerics_aredgenerics_d_aredgenerics_d_._DefaultInterfaceMethods_sharedgenerics_sharedgenerics_d_sharedgenerics_d_sh\" (#25587) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190706.1/workItem/Loader.classloader/analysis/xunit/Loader_classloader._DefaultInterfaceMethods_aredgenerics_aredgenerics_d_aredgenerics_d_~2F_DefaultInterfaceMethods_sharedgenerics_sharedgenerics_d_sharedgenerics_d_sh\r\n\r\n**Failed tests:**\r\nLoader_classloader._DefaultInterfaceMethods_aredgenerics_aredgenerics_d_aredgenerics_d_._DefaultInterfaceMethods_sharedgenerics_sharedgenerics_d_sharedgenerics_d_sh\r\n\r\n**Log:**\r\n```\r\n/root/helix/work/workitem/Loader/classloader/DefaultInterfaceMethods/sharedgenerics/sharedgenerics_d/sharedgenerics_d.sh: line 252:  1547 Segmentation fault      $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/Loader/classloader/Reports/Loader.classloader/DefaultInterfaceMethods/sharedgenerics/sharedgenerics_d/sharedgenerics_d.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun sharedgenerics_d.exe ''\r\nCalling IFoo<string>.Foo on FooBar<string, object> - expecting default method IFoo<string>.Foo\r\nExpected: 100\r\nActual: 139\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/Loader/classloader/DefaultInterfaceMethods/sharedgenerics/sharedgenerics_d/sharedgenerics_d.sh\r\nExpected: True\r\nActual:   False\r\n```"},{"Id":"9963661743","Type":"IssuesEvent","CreatedAt":"2019-07-08T01:30:57","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25586","RelatedDescription":"Opened issue \"Assert failure: Consistency check failed: AV in clr at this callstack\" (#25586) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190706.1/workItem/PayloadGroup0/analysis/xunit/Regressions_coreclr._15241_genericcontext_genericcontext_~2F_15241_genericcontext_genericcontext_cmd\r\n\r\n**Failed tests:**\r\nRegressions_coreclr._15241_genericcontext_genericcontext_._15241_genericcontext_genericcontext_cmd\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 1152 [0x00000480], Thread: 3092 [0x0c14]): Consistency check failed: AV in clr at this callstack:\r\n------\r\nCORECLR! GetCLRRuntimeHost + 0x59D4FB (0x00007ffd`f80cd6bb)\r\nCORECLR! GetCLRRuntimeHost + 0x59C661 (0x00007ffd`f80cc821)\r\nCORECLR! GetCLRRuntimeHost + 0x141BC1 (0x00007ffd`f7c71d81)\r\nCORECLR! GetCLRRuntimeHost + 0x1306BD (0x00007ffd`f7c6087d)\r\nNTDLL! RtlInitializeCriticalSection + 0x190 (0x00007ffe`25155e90)\r\nNTDLL! RtlImageNtHeaderEx + 0x17B (0x00007ffe`2512fa1b)\r\nNTDLL! KiUserExceptionDispatcher + 0x3A (0x00007ffe`251996fa)\r\n<no module>! <no symbol> + 0x0 (0x00007ffd`98953b20)\r\n-----\r\n.AV on tid=0xc14 (3092), cxr=00000029C73FBA40, exr=00000029C73FBF30\r\nFAILED: false\r\n\r\nCORECLR! coreclr_shutdown_2 + 0xEB44 (0x00007ffd`f7acdaf4)\r\nCORECLR! GetCLRRuntimeHost + 0x13053A (0x00007ffd`f7c606fa)\r\nCORECLR! GetCLRRuntimeHost + 0x12FF92 (0x00007ffd`f7c60152)\r\nCORECLR! GetCLRRuntimeHost + 0x12FF06 (0x00007ffd`f7c600c6)\r\nCORECLR! GetCLRRuntimeHost + 0x130793 (0x00007ffd`f7c60953)\r\nNTDLL! RtlInitializeCriticalSection + 0x190 (0x00007ffe`25155e90)\r\nNTDLL! RtlImageNtHeaderEx + 0x17B (0x00007ffe`2512fa1b)\r\nNTDLL! KiUserExceptionDispatcher + 0x3A (0x00007ffe`251996fa)\r\nCORECLR! GetCLRRuntimeHost + 0x59D4FB (0x00007ffd`f80cd6bb)\r\nCORECLR! GetCLRRuntimeHost + 0x59C661 (0x00007ffd`f80cc821)\r\n    File: f:\\\\workspace.4\\\\_work\\\\1\\\\s\\\\src\\\\vm\\\\excep.cpp Line: 7606\r\n    Image: C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Payload\\\\CoreRun.exe\r\n\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Work\\\\3d185f81-8a34-4379-baef-7e3478ebb923\\\\Exec\\\\Regressions\\\\coreclr\\\\Reports\\\\Regressions.coreclr\\\\15241\\\\genericcontext\\\\genericcontext.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Payload\\\\corerun.exe\\\" genericcontext.exe \r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Work\\\\3d185f81-8a34-4379-baef-7e3478ebb923\\\\Exec\\\\Regressions\\\\coreclr\\\\15241\\\\genericcontext\\\\genericcontext.cmd\r\nExpected: True\r\nActual:   False\r\n```"},{"Id":"9963640751","Type":"IssuesEvent","CreatedAt":"2019-07-08T01:22:58","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25585","RelatedDescription":"Opened issue \"Test failed: System.Resources.Extensions.Tests.PreserializedResourceWriterTests\" (#25585) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190707.1/workItem/System.Resources.Extensions.Tests/analysis/xunit/System.Resources.Extensions.Tests.PreserializedResourceWriterTests~2FStreamResources\r\n\r\n**Failed tests:**\r\nSystem.Resources.Extensions.Tests.PreserializedResourceWriterTests\r\n\r\n**Log:**\r\n```\r\nSystem.ArgumentException : Parameter is not valid.\r\n   at System.Drawing.Graphics.DrawImage(Image image, Int32 x, Int32 y, Int32 width, Int32 height)\r\n   at System.Drawing.Bitmap..ctor(Image original, Int32 width, Int32 height)\r\n   at System.Drawing.Icon.ToBitmap()\r\n   at System.Resources.Extensions.Tests.PreserializedResourceWriterTests.ResourceValueEquals(Object expected, Object actual) in /_/src/System.Resources.Extensions/tests/BinaryResourceWriterUnitTest.cs:line 525\r\n   at System.Resources.Extensions.Tests.PreserializedResourceWriterTests.StreamResources() in /_/src/System.Resources.Extensions/tests/BinaryResourceWriterUnitTest.cs:line 460\r\n```"},{"Id":"9962511137","Type":"PullRequestEvent","CreatedAt":"2019-07-07T15:09:03","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24874","RelatedDescription":"Merged pull request \"Test VSTS CI triggers\" (#24874) at dotnet/coreclr","RelatedBody":"Fixes spelling of a commonly misspelled word, 20+ times in the same file."},{"Id":"9962510647","Type":"PullRequestEvent","CreatedAt":"2019-07-07T15:08:47","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24874","RelatedDescription":null,"RelatedBody":"Fixes spelling of a commonly misspelled word, 20+ times in the same file."},{"Id":"9962507114","Type":"PullRequestEvent","CreatedAt":"2019-07-07T15:07:04","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25582","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#25582) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n"},{"Id":"9962506765","Type":"PullRequestEvent","CreatedAt":"2019-07-07T15:06:53","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25583","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#25583) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190706.5\r\n- **Date Produced**: 7/7/2019 1:21 AM\r\n- **Commit**: 15abdfc3816352c64098735b79a98dd97524ee36\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19356.5\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19356.5\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n"},{"Id":"9962506491","Type":"PullRequestEvent","CreatedAt":"2019-07-07T15:06:45","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25584","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#25584) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190706.07\r\n- **Date Produced**: 7/7/2019 4:31 AM\r\n- **Commit**: deba7410a351243eef2d00e7f3b87d095be7a847\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27906-07\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9963869626","Type":"PullRequestEvent","CreatedAt":"2019-07-08T02:41:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11780","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#11780) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.07\r\n- **Date Produced**: 7/8/2019 2:41 AM\r\n- **Commit**: be7227b45d69a0177eb0ef0bdcec1cfd2b276843\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-07\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"9963575032","Type":"PullRequestEvent","CreatedAt":"2019-07-08T00:54:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11779","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#11779) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.06\r\n- **Date Produced**: 7/8/2019 12:23 AM\r\n- **Commit**: ba9cde291fc9cf935d56e52e87e65b976bf354de\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"9963516591","Type":"PullRequestEvent","CreatedAt":"2019-07-08T00:24:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11779","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#11779) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.06\r\n- **Date Produced**: 7/8/2019 12:23 AM\r\n- **Commit**: ba9cde291fc9cf935d56e52e87e65b976bf354de\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"9962983986","Type":"PullRequestEvent","CreatedAt":"2019-07-07T19:15:55","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11778","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#11778) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.05\r\n- **Date Produced**: 7/7/2019 6:44 PM\r\n- **Commit**: fda880b3ce4153391028fec1ab41dd3d7bc4f94c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-05\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9962251329","Type":"PullRequestEvent","CreatedAt":"2019-07-07T13:01:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1318","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1318) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190706.5\r\n- **Date Produced**: 7/7/2019 1:21 AM\r\n- **Commit**: 15abdfc3816352c64098735b79a98dd97524ee36\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19356.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19356.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19356.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9962231952","Type":"PullRequestEvent","CreatedAt":"2019-07-07T12:51:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1318","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1318) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190706.5\r\n- **Date Produced**: 7/7/2019 1:21 AM\r\n- **Commit**: 15abdfc3816352c64098735b79a98dd97524ee36\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19356.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19356.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19356.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9962159993","Type":"PullRequestEvent","CreatedAt":"2019-07-07T12:14:11","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1317","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1317) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9962141128","Type":"PullRequestEvent","CreatedAt":"2019-07-07T12:04:06","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1317","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1317) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9960067698","Type":"PullRequestEvent","CreatedAt":"2019-07-06T13:13:55","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1316","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1316) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190705.7\r\n- **Date Produced**: 7/6/2019 4:27 AM\r\n- **Commit**: 6c6d68558aaccbd16de6e84cf7e59c0fb32b8273\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19355.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19355.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19355.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9960041682","Type":"PullRequestEvent","CreatedAt":"2019-07-06T12:58:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1316","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1316) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190705.7\r\n- **Date Produced**: 7/6/2019 4:27 AM\r\n- **Commit**: 6c6d68558aaccbd16de6e84cf7e59c0fb32b8273\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19355.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19355.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19355.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9959968240","Type":"PullRequestEvent","CreatedAt":"2019-07-06T12:14:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1315","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1315) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190705.2\r\n- **Date Produced**: 7/5/2019 11:56 PM\r\n- **Commit**: 3e0cbbc6fd6c6d45d7083ee0deb71cec7ea2d91f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19355.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9964335593","Type":"PullRequestEvent","CreatedAt":"2019-07-08T05:14:35","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/39275","RelatedDescription":"Opened pull request \"Improve allocations in WinForms startup\" (#39275) at dotnet/corefx","RelatedBody":"In a blank WinForms app a large percentage of the allocations on startup are coming from System.Drawing and Microsoft.Win32.SystemEvents (25%+).\r\n\r\nOne of the biggest culprits is the delegate system in System.Drawing that was put in place to handle multiple names for libgdiplus. As Windows doesn't have an issue with multiple dll names I've moved this exclusively to the Unix code. One other option for Unix (that would allow sharing the definitions again) would be to include the same DllImports twice under different namespaces with a different definition for the library name. (Well over 10% of the allocations are in this space.)\r\n\r\nAnother problem is the HandleCollector class. This was put in place to force GC collections to attempt to get forgotten GDI handles to avoid running out of them. This *was* a big problem in Windows 98, and much less so in NT4 and Windows 2000. GDI handles now come from one pool of 65 thousand handles per process (as of Windows XP). The 9x limits are long gone- this has become nothing more than overhead.\r\n\r\nWindowClass creation was also creating unnecessary overhead (in SystemEvents). It was doing some unnecessary contortions to allow for multiple appdomains, which are no longer an issue. Native signatures were also suboptimal.\r\n\r\nLastly there was a fair amount of overhead on startup through Icon (getting the default icon from the app resource stream) and some through non-blittable fonts. Exposure of LOGFONT through object was also subject to a number of holes (size and null were never checked).\r\n\r\nThere are similar changes I've made in WinForms (notably with WindowClass creation). Together with those startup allocations drop from about 5,000 to around 1,500. Total bytes allocated drop by about 20%. Speed is really tough to measure as there is quite a bit of variance due to the fact so much is happening through Windows message pumping.\r\n\r\nI still need to finish the Unix changes, just a little bit of busy work. Getting this up for discussion/review of the approach and impact. I'll link the WinForms PR once I have it up."},{"Id":"9964234492","Type":"IssuesEvent","CreatedAt":"2019-07-08T04:42:05","Actor":"Thealexbarney","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39274","RelatedDescription":"Opened issue \"Support FAT file attributes on non-Windows platforms\" (#39274) at dotnet/corefx","RelatedBody":".NET Core currently does not support getting or setting [many file attributes](https://docs.microsoft.com/en-us/dotnet/api/system.io.fileattributes?view=netcore-2.2#remarks) in FAT filesystems on non-Windows platforms..\r\n\r\nThere is [a syscall](http://man7.org/linux/man-pages/man2/ioctl_fat.2.html) in Linux that allow reading and writing FAT attributes.  As these attributes are filesystem-specific, they could be ignored for filesystems that don't support them.\r\n\r\nHaving this feature would be useful for ensuring consistent behavior between platforms."},{"Id":"9963928713","Type":"PullRequestEvent","CreatedAt":"2019-07-08T03:00:25","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39270","RelatedDescription":"Merged pull request \"Ensure BitArray unsafe accesses are within bounds\" (#39270) at dotnet/corefx","RelatedBody":"To avoid any potential issues that could arise from concurrent mutation of a BitArray while its doing unsafe processing (e.g. one thread calling And/Or/Xor while another thread resizes the BitArray via set_Length), this changes the implementations that use unsafe code to operate on a local snapshot that's fully validated locally.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/39204\r\ncc: @GrabYourPitchforks, @jkotas"},{"Id":"9963928687","Type":"IssuesEvent","CreatedAt":"2019-07-08T03:00:25","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/39204","RelatedDescription":"Closed issue \"BitArray race conditions may lead to memory corruption\" (#39204) at dotnet/corefx","RelatedBody":"As of https://github.com/dotnet/corefx/pull/33781, the `BitArray` class contains unsafe code as a performance optimization. Since `BitArray` instances are not thread-safe, this opens the possibility that improper cross-thread access to a `BitArray` instance may result in global memory corruption.\r\n\r\nWe should modify the `BitArray` internal logic to be resilient against this possibility. We don't need to make the type thread-safe, but improper cross-thread access shouldn't be able to cause damage beyond corruption of the individual `BitArray` instances involved."},{"Id":"9963311570","Type":"PullRequestEvent","CreatedAt":"2019-07-07T22:21:10","Actor":"Marusyk","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/39273","RelatedDescription":"Opened pull request \"Rename JsonCamelCaseNamePolicy -> JsonCamelCaseNamingPolicy\" (#39273) at dotnet/corefx","RelatedBody":"Fixes #39208\r\n\r\nPlease review.\r\nThank you in advance"},{"Id":"9963305637","Type":"PullRequestEvent","CreatedAt":"2019-07-07T22:17:20","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39272","RelatedDescription":"Merged pull request \"Disable ConnectAsync_AddHostHeader_Success test\" (#39272) at dotnet/corefx","RelatedBody":"#39271"},{"Id":"9963300166","Type":"IssuesEvent","CreatedAt":"2019-07-07T22:13:47","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37701","RelatedDescription":"Closed issue \"StreamPipeReader/Writer should allow to leave underlying stream opened\" (#37701) at dotnet/corefx","RelatedBody":"Currently StreamPipeReader/Writer always closes underlying stream on complete, which effectively prohibits writing tests for roundtrip scenarios. I have added option to leave underlying stream opened via corresponding options classes. The change is fully backward compatible. \r\n\r\nPlease look at https://github.com/dotnet/corefx/pull/37667/files#diff-3e3d4d1815dfb473d42636ce0603aaa6R93 for details.\r\n\r\nPS As far as I understand StreamPipeReader/Writer wasn't yet shipped, it was only part of preview releases in nuget.\r\nPPS Original API review: https://github.com/dotnet/corefx/issues/27246"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9963571609","Type":"IssuesEvent","CreatedAt":"2019-07-08T00:52:47","Actor":"drewnoakes","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37040","RelatedDescription":"Opened issue \"Passing extension method as method group causes invalid CS8622\" (#37040) at dotnet/roslyn","RelatedBody":"**Version Used**: 3.3.0-beta1-19327-04\r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nclass C\r\n{\r\n    IEnumerable<string> M(IEnumerable<C> source)\r\n    {\r\n        var d = new D();\r\n\r\n        return source.Select(d.Ext);\r\n        //                   ^^^^^\r\n        // CS8622 Nullability of reference types in type of parameter 'd' of\r\n        // 'string Extensions.Ext(D d, C item)' doesn't match the target\r\n        // delegate 'Func<C, string>'.\r\n    }\r\n}\r\n\r\nclass D { }\r\n\r\nstatic class Extensions\r\n{\r\n    public static string Ext(this D d, C item) => \"\";\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo diagnostic.\r\n\r\n**Actual Behavior**:\r\n\r\nCS8622."},{"Id":"9963545287","Type":"IssuesEvent","CreatedAt":"2019-07-08T00:39:40","Actor":"drewnoakes","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37039","RelatedDescription":"Opened issue \"Invalid CS8629 after nullable reference type comparison\" (#37039) at dotnet/roslyn","RelatedBody":"**Version Used**: 3.3.0-beta1-19327-04\r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nint FindLargest(IEnumerable<int?> ints)\r\n{\r\n    int largest = int.MinValue;\r\n\r\n    foreach (int? i in ints)\r\n    {\r\n        if (i > largest)\r\n        {\r\n            largest = i.Value; // CS8629 Nullable value type may be null\r\n        }\r\n    }\r\n\r\n    return largest;\r\n}\r\n```\r\n\r\nThis requires the loop to trigger. This simple form doesn't have a diagnostic:\r\n\r\n```c#\r\nint M(int? i) => i > 0 ? i.Value : 0;\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nCompiler learns that `i` is not null when integer comparison succeed and does not produce a diagnostic.\r\n\r\n**Actual Behavior**:\r\n\r\nCS8629 diagnostic."},{"Id":"9963518579","Type":"IssuesEvent","CreatedAt":"2019-07-08T00:25:17","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37038","RelatedDescription":"Opened issue \"Completion for \"Show items from unimported namespaces\" within a using alias results in unbuildable code\" (#37038) at dotnet/roslyn","RelatedBody":"Using aliases need to full specify types used as generic arguments. \"Show items from unimported namespaces\" is unaware of that and attempts to add a using directive, which still results in a build error.\r\n\r\n**Steps to Reproduce**:\r\n\r\n``` C#\r\nusing System;\r\n\r\nusing CollectionOfStringBuilders = System.Collections.Generic.List<StringBui>\r\n```\r\n\r\n**Expected Behavior**:\r\n``` C#\r\nusing System;\r\n\r\nusing CollectionOfStringBuilders = System.Collections.Generic.List<System.Text.StringBuilder>\r\n```\r\n\r\n**Actual Behavior**:\r\n``` C#\r\nusing System;\r\nusing System.Text;\r\nusing CollectionOfStringBuilders = System.Collections.Generic.List<StringBuilder>\r\n```\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0246\tThe type or namespace name 'StringBuilder' could not be found (are you missing a using directive or an assembly reference?)\tConsoleApp5\tC:\\Users\\davkean\\source\\repos\\ConsoleApp5\\ConsoleApp5\\Program.cs\t3\tActive\r\n```\r\n\r\ntag @genlu "}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9964122068","Type":"PullRequestEvent","CreatedAt":"2019-07-08T04:03:24","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7596","RelatedDescription":"Merged pull request \"Use the GC provided environments instead of the PAL ones\" (#7596) at dotnet/corert","RelatedBody":"This fixes 3/6 from #7339"},{"Id":"9963196787","Type":"PullRequestEvent","CreatedAt":"2019-07-07T21:12:25","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7593","RelatedDescription":"Merged pull request \"Change how we root all application libraries\" (#7593) at dotnet/corert","RelatedBody":"When `rootallapplicationassemblies` is specified, we currently go over all assemblies passed to ILC as input or reference, find out which ones are not framework assemblies, and root all types in them so that they're available for arbitrary reflection at runtime.\r\n\r\nThe problem is that NuGet packages or SDKs can have many assemblies in them, but only some of them are actually used by user code. Good example is the Microsoft.WindowsDesktop.App SDK that has both WinForms and WPF in it.\r\n\r\nWith this change, we'll only root assemblies where we actually saw the app using something in them. This way a WinForms app will not include all of WPF.\r\n\r\nWith this, we could possibly regress apps that do `Assembly.Load` on an assembly that is otherwise unused. Those apps will have to use RD.XML. We could also add a simple data flow analysis for the simplest cases to avoid RD.XML if really needed.\r\n\r\nASP.NET still works without RD.XML for this.\r\n\r\nMost of this commit is just mechanically moving stuff around."},{"Id":"9962933202","Type":"PullRequestEvent","CreatedAt":"2019-07-07T18:48:35","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7597","RelatedDescription":"Opened pull request \"Drop size of Hello World to 1.16 MB\" (#7597) at dotnet/corert","RelatedBody":"Set of commits that allow us to drop the size of a fully self-contained native C# Hello World to 1.16 MB (with all the [documented](http://aka.ms/OptimizeCoreRT) size optimization switches enabled, that is).\r\n\r\nSee individual commits for descriptions."},{"Id":"9962418167","Type":"PullRequestEvent","CreatedAt":"2019-07-07T14:24:35","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7595","RelatedDescription":"Merged pull request \"Add bodies for a couple more missing methods\" (#7595) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9962356392","Type":"PullRequestEvent","CreatedAt":"2019-07-07T13:55:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3403","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#3403) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"465020116","IsPullRequest":false,"CreatedAt":"2019-07-08T01:48:09","Actor":"VincentBu","Number":"25588","RawContent":null,"Title":"Test failed: Interop_COM._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_cmd","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190707.1/workItem/Interop/analysis/xunit/Interop_COM._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_~2F_NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_cmd\r\n\r\n**Failed tests:**\r\nInterop_COM._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_cmd\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\c5b8c1d5-cf58-411c-8a90-0c0b458e15c6\\\\Work\\\\6299d9a7-4f5b-4278-8a59-3562fbfc5d8c\\\\Exec\\\\Interop\\\\COM\\\\Reports\\\\Interop.COM\\\\NETClients\\\\Primitives\\\\NETClientPrimitives\\\\NETClientPrimitives.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\c5b8c1d5-cf58-411c-8a90-0c0b458e15c6\\\\Payload\\\\corerun.exe\\\" NETClientPrimitives.exe \r\nNumeric RNG seed: 37\r\nByte test invariant: 101 + 70 = 171\r\nInt16 test invariant: 22885 + -29882 = -6997\r\nUInt16 test invariant: 22885 + 35654 = 58539\r\nInt32 test invariant: 120215909 + 1447004998 = 1567220907\r\nUInt32 test invariant: 120215909 + 1447004998 = 1567220907\r\nInt64 test invariant: 120215909 + 1447004998 = 1567220907\r\nUInt64 test invariant: 120215909 + 1447004998 = 1567220907\r\nSingle test invariant: 1202159.1 + 14470051 = 15672210\r\nDouble test invariant: 1202159.09 + 14470049.98 = 15672209.07\r\nInt32 11 test invariant: 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 = 66\r\nInt32 12 test invariant: 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 = 78\r\nByte[] marshalling\r\nInt16[] marshalling\r\nUInt16[] marshalling\r\nInt32[] marshalling\r\nUInt32[] marshalling\r\nInt64[] marshalling\r\nUInt64[] marshalling\r\nSingle[] marshalling\r\nDouble[] marshalling\r\nMarshal strings as LPStr\r\nMarshal strings as LPWStr\r\nMarshal strings as BStr\r\nMarshal LCID\r\nVerify expected exception from HRESULT\r\nVerify preserved function signature\r\nTesting COM object lifetime control methods.\r\nNumeric RNG seed: 37\r\nByte test invariant: 101 + 70 = 171\r\nInt16 test invariant: 22885 + -29882 = -6997\r\nUInt16 test invariant: 22885 + 35654 = 58539\r\nInt32 test invariant: 120215909 + 1447004998 = 1567220907\r\nUInt32 test invariant: 120215909 + 1447004998 = 1567220907\r\nInt64 test invariant: 120215909 + 1447004998 = 1567220907\r\nUInt64 test invariant: 120215909 + 1447004998 = 1567220907\r\nSingle test invariant: 1202159.1 + 14470051 = 15672210\r\nDouble test invariant: 1202159.09 + 14470049.98 = 15672209.07\r\nInt32 11 test invariant: 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 = 66\r\nInt32 12 test invariant: 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 = 78\r\nByte[] marshalling\r\nInt16[] marshalling\r\nUInt16[] marshalling\r\nInt32[] marshalling\r\nUInt32[] marshalling\r\nInt64[] marshalling\r\nUInt64[] marshalling\r\nSingle[] marshalling\r\nDouble[] marshalling\r\nMarshal strings as LPStr\r\nMarshal strings as LPWStr\r\nMarshal strings as BStr\r\nMarshal LCID\r\nVerify expected exception from HRESULT\r\nVerify preserved function signature\r\nTest Failure: TestLibrary.AssertTestException: Assert.IsFalse: \r\n   at TestLibrary.Assert.HandleFail(String assertionName, String message) in F:\\\\workspace.3\\\\_work\\\\1\\\\s\\\\tests\\\\src\\\\Common\\\\CoreCLRTestLibrary\\\\Assertion.cs:line 735\r\n   at TestLibrary.Assert.IsFalse(Boolean condition, String message) in F:\\\\workspace.3\\\\_work\\\\1\\\\s\\\\tests\\\\src\\\\Common\\\\CoreCLRTestLibrary\\\\Assertion.cs:line 322\r\n   at NetClient.Program.Main(String[] doNotUse) in F:\\\\workspace.3\\\\_work\\\\1\\\\s\\\\tests\\\\src\\\\Interop\\\\COM\\\\NETClients\\\\Primitives\\\\Program.cs:line 29\r\nExpected: 100\r\nActual: 101\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\c5b8c1d5-cf58-411c-8a90-0c0b458e15c6\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\c5b8c1d5-cf58-411c-8a90-0c0b458e15c6\\\\Work\\\\6299d9a7-4f5b-4278-8a59-3562fbfc5d8c\\\\Exec\\\\Interop\\\\COM\\\\NETClients\\\\Primitives\\\\NETClientPrimitives\\\\NETClientPrimitives.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25588","RelatedDescription":"Open issue \"Test failed: Interop_COM._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_._NETClients_Primitives_NETClientPrimitives_NETClientPrimitives_cmd\" (#25588)"},{"Id":"465018065","IsPullRequest":false,"CreatedAt":"2019-07-08T01:33:20","Actor":"VincentBu","Number":"25587","RawContent":null,"Title":"Test failed: Loader_classloader._DefaultInterfaceMethods_aredgenerics_aredgenerics_d_aredgenerics_d_._DefaultInterfaceMethods_sharedgenerics_sharedgenerics_d_sharedgenerics_d_sh","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190706.1/workItem/Loader.classloader/analysis/xunit/Loader_classloader._DefaultInterfaceMethods_aredgenerics_aredgenerics_d_aredgenerics_d_~2F_DefaultInterfaceMethods_sharedgenerics_sharedgenerics_d_sharedgenerics_d_sh\r\n\r\n**Failed tests:**\r\nLoader_classloader._DefaultInterfaceMethods_aredgenerics_aredgenerics_d_aredgenerics_d_._DefaultInterfaceMethods_sharedgenerics_sharedgenerics_d_sharedgenerics_d_sh\r\n\r\n**Log:**\r\n```\r\n/root/helix/work/workitem/Loader/classloader/DefaultInterfaceMethods/sharedgenerics/sharedgenerics_d/sharedgenerics_d.sh: line 252:  1547 Segmentation fault      $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/Loader/classloader/Reports/Loader.classloader/DefaultInterfaceMethods/sharedgenerics/sharedgenerics_d/sharedgenerics_d.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun sharedgenerics_d.exe ''\r\nCalling IFoo<string>.Foo on FooBar<string, object> - expecting default method IFoo<string>.Foo\r\nExpected: 100\r\nActual: 139\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/Loader/classloader/DefaultInterfaceMethods/sharedgenerics/sharedgenerics_d/sharedgenerics_d.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25587","RelatedDescription":"Open issue \"Test failed: Loader_classloader._DefaultInterfaceMethods_aredgenerics_aredgenerics_d_aredgenerics_d_._DefaultInterfaceMethods_sharedgenerics_sharedgenerics_d_sharedgenerics_d_sh\" (#25587)"},{"Id":"465017723","IsPullRequest":false,"CreatedAt":"2019-07-08T01:30:56","Actor":"VincentBu","Number":"25586","RawContent":null,"Title":"Assert failure: Consistency check failed: AV in clr at this callstack","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190706.1/workItem/PayloadGroup0/analysis/xunit/Regressions_coreclr._15241_genericcontext_genericcontext_~2F_15241_genericcontext_genericcontext_cmd\r\n\r\n**Failed tests:**\r\nRegressions_coreclr._15241_genericcontext_genericcontext_._15241_genericcontext_genericcontext_cmd\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 1152 [0x00000480], Thread: 3092 [0x0c14]): Consistency check failed: AV in clr at this callstack:\r\n------\r\nCORECLR! GetCLRRuntimeHost + 0x59D4FB (0x00007ffd`f80cd6bb)\r\nCORECLR! GetCLRRuntimeHost + 0x59C661 (0x00007ffd`f80cc821)\r\nCORECLR! GetCLRRuntimeHost + 0x141BC1 (0x00007ffd`f7c71d81)\r\nCORECLR! GetCLRRuntimeHost + 0x1306BD (0x00007ffd`f7c6087d)\r\nNTDLL! RtlInitializeCriticalSection + 0x190 (0x00007ffe`25155e90)\r\nNTDLL! RtlImageNtHeaderEx + 0x17B (0x00007ffe`2512fa1b)\r\nNTDLL! KiUserExceptionDispatcher + 0x3A (0x00007ffe`251996fa)\r\n<no module>! <no symbol> + 0x0 (0x00007ffd`98953b20)\r\n-----\r\n.AV on tid=0xc14 (3092), cxr=00000029C73FBA40, exr=00000029C73FBF30\r\nFAILED: false\r\n\r\nCORECLR! coreclr_shutdown_2 + 0xEB44 (0x00007ffd`f7acdaf4)\r\nCORECLR! GetCLRRuntimeHost + 0x13053A (0x00007ffd`f7c606fa)\r\nCORECLR! GetCLRRuntimeHost + 0x12FF92 (0x00007ffd`f7c60152)\r\nCORECLR! GetCLRRuntimeHost + 0x12FF06 (0x00007ffd`f7c600c6)\r\nCORECLR! GetCLRRuntimeHost + 0x130793 (0x00007ffd`f7c60953)\r\nNTDLL! RtlInitializeCriticalSection + 0x190 (0x00007ffe`25155e90)\r\nNTDLL! RtlImageNtHeaderEx + 0x17B (0x00007ffe`2512fa1b)\r\nNTDLL! KiUserExceptionDispatcher + 0x3A (0x00007ffe`251996fa)\r\nCORECLR! GetCLRRuntimeHost + 0x59D4FB (0x00007ffd`f80cd6bb)\r\nCORECLR! GetCLRRuntimeHost + 0x59C661 (0x00007ffd`f80cc821)\r\n    File: f:\\\\workspace.4\\\\_work\\\\1\\\\s\\\\src\\\\vm\\\\excep.cpp Line: 7606\r\n    Image: C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Payload\\\\CoreRun.exe\r\n\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Work\\\\3d185f81-8a34-4379-baef-7e3478ebb923\\\\Exec\\\\Regressions\\\\coreclr\\\\Reports\\\\Regressions.coreclr\\\\15241\\\\genericcontext\\\\genericcontext.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Payload\\\\corerun.exe\\\" genericcontext.exe \r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\5aa870df-e987-48ac-a15d-01c33f0463f5\\\\Work\\\\3d185f81-8a34-4379-baef-7e3478ebb923\\\\Exec\\\\Regressions\\\\coreclr\\\\15241\\\\genericcontext\\\\genericcontext.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25586","RelatedDescription":"Open issue \"Assert failure: Consistency check failed: AV in clr at this callstack\" (#25586)"},{"Id":"465016643","IsPullRequest":false,"CreatedAt":"2019-07-08T01:22:58","Actor":"VincentBu","Number":"25585","RawContent":null,"Title":"Test failed: System.Resources.Extensions.Tests.PreserializedResourceWriterTests","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190707.1/workItem/System.Resources.Extensions.Tests/analysis/xunit/System.Resources.Extensions.Tests.PreserializedResourceWriterTests~2FStreamResources\r\n\r\n**Failed tests:**\r\nSystem.Resources.Extensions.Tests.PreserializedResourceWriterTests\r\n\r\n**Log:**\r\n```\r\nSystem.ArgumentException : Parameter is not valid.\r\n   at System.Drawing.Graphics.DrawImage(Image image, Int32 x, Int32 y, Int32 width, Int32 height)\r\n   at System.Drawing.Bitmap..ctor(Image original, Int32 width, Int32 height)\r\n   at System.Drawing.Icon.ToBitmap()\r\n   at System.Resources.Extensions.Tests.PreserializedResourceWriterTests.ResourceValueEquals(Object expected, Object actual) in /_/src/System.Resources.Extensions/tests/BinaryResourceWriterUnitTest.cs:line 525\r\n   at System.Resources.Extensions.Tests.PreserializedResourceWriterTests.StreamResources() in /_/src/System.Resources.Extensions/tests/BinaryResourceWriterUnitTest.cs:line 460\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25585","RelatedDescription":"Open issue \"Test failed: System.Resources.Extensions.Tests.PreserializedResourceWriterTests\" (#25585)"},{"Id":"464946971","IsPullRequest":true,"CreatedAt":"2019-07-07T15:07:04","Actor":"dotnet-maestro[bot]","Number":"25582","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25582","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25582)"},{"Id":"464948275","IsPullRequest":true,"CreatedAt":"2019-07-07T15:06:53","Actor":"dotnet-maestro[bot]","Number":"25583","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190706.5\r\n- **Date Produced**: 7/7/2019 1:21 AM\r\n- **Commit**: 15abdfc3816352c64098735b79a98dd97524ee36\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19356.5\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19356.5\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25583","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25583)"},{"Id":"464948726","IsPullRequest":true,"CreatedAt":"2019-07-07T15:06:44","Actor":"dotnet-maestro[bot]","Number":"25584","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190706.07\r\n- **Date Produced**: 7/7/2019 4:31 AM\r\n- **Commit**: deba7410a351243eef2d00e7f3b87d095be7a847\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27906-07\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25584","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#25584)"},{"Id":"464945502","IsPullRequest":false,"CreatedAt":"2019-07-07T12:03:59","Actor":"maximburyak","Number":"25581","RawContent":null,"Title":"AVE on CreateLambda","State":"open","Body":"Hi, \r\nWe had a crash during a test run that we happened to catch using windbg as postmortem debugger.\r\nSome more info:\r\n* It happened inside the `System.Linq.Expressions.Expression.CreateLambda` code\r\n* It does not reproduce\r\n* Running `!verifyheap` does not indicate any heap corruption\r\n\r\nwhat !analyze -v shows:\r\n\r\nException: \r\n\r\n```\r\nEXCEPTION_RECORD:  (.exr -1)\r\nExceptionAddress: 00007ffdb7875455 (coreclr!NgenHashTable<EETypeHashTable,EETypeHashEntry,2>::FindVolatileEntryByHash+0x0000000000000022)\r\n   ExceptionCode: c0000005 (Access violation)\r\n  ExceptionFlags: 00000001\r\nNumberParameters: 2\r\n   Parameter[0]: 0000000000000000\r\n   Parameter[1]: 000000000000001b\r\nAttempt to read from address 000000000000001b\r\n```\r\n\r\n\r\n\r\nStack trace:\r\n```\r\n00000003`d43fc1c0 00007ffd`b7874e7a : 00007ffd`57ffb220 00007ffd`f8f47137 00000000`00000000 00000000`020000f9 : coreclr!EETypeHashTable::FindItem+0xc5\r\n00000003`d43fc2f0 00007ffd`b7873556 : 00000003`d43fc538 00000003`d43fc770 00000000`00000000 00007ffd`00000006 : coreclr!ClassLoader::LoadConstructedTypeThrowing+0x2ba\r\n00000003`d43fc480 00007ffd`b78a6a78 : 00000000`00000000 00000000`00000001 00000000`00000002 00000003`d43fc770 : coreclr!SigPointer::GetTypeHandleThrowing+0x5b6\r\n00000003`d43fc840 00007ffd`b78a6599 : 00000000`00000000 00000000`00000001 00000000`00000000 00000000`00000008 : coreclr!Dictionary::PopulateEntry+0x30c\r\n00000003`d43fcb00 00007ffd`b7928558 : 000001e7`a576cbc8 00007ffd`583076f0 00000000`00000000 00000000`00000001 : coreclr!JIT_GenericHandle_Framed+0x211\r\n00000003`d43fcd60 00007ffd`b889531b : 000001e7`b54c3260 000001e7`a5565cb0 000001e7`a576c9d8 00007ffd`b8897343 : coreclr!JIT_GenericHandleMethodWithSlotAndModule+0x68\r\n00000003`d43fcda0 00007ffd`57e84dc8 : 000001e7`a576cb88 000001e7`a54fecf8 000001e7`a576c6a0 000001e7`a576c300 : System_Linq_Expressions!System.Linq.Expressions.Expression.CreateLambda(System.Type, System.Linq.Expressions.Expression, System.String, Boolean, System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.ParameterExpression>)$##6000294+0x3ab\r\n```\r\n\r\n\r\nhere's a link to the full dump:\r\nhttps://drive.google.com/drive/u/0/folders/1fQpYyl1wrkPtjSam8m-o7aVI9aY4uBUz","Url":"https://github.com/dotnet/coreclr/issues/25581","RelatedDescription":"Open issue \"AVE on CreateLambda\" (#25581)"},{"Id":"464850686","IsPullRequest":true,"CreatedAt":"2019-07-06T16:48:07","Actor":"dotnet-maestro[bot]","Number":"25578","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.12\r\n- **Date Produced**: 7/6/2019 6:32 AM\r\n- **Commit**: aa4edf155229620edc2962671fbff5dd6e68f6b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-12\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25578","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#25578)"},{"Id":"464855388","IsPullRequest":false,"CreatedAt":"2019-07-06T15:55:53","Actor":"weltkante","Number":"25580","RawContent":null,"Title":"Static constructor broken (not always executed)","State":"closed","Body":"After porting a server which has been running on Desktop Framework and Mono for years I noticed crashes due to static fields staying NULL meaning the static constructor did not execute.\r\n\r\nAccording to the [documentation](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/static-constructors) I expect static constructors to run before an instance of the class is constructed, i.e. when the instance constructor runs all static fields have been initialized. This is not the case with .NET Core, in the following scenario the static `helper1` field is not initialized before the constructor.\r\n\r\nWhile the static field itself is not accessed the static constructor has visible side effects. In my particular usage the constructor call done when initializing static fields will register the static instance globally. These registrations do not happen in .NET Core causing my server to crash because important logic is skipped.\r\n\r\n<details><summary>Example code</summary>\r\n\r\n```C#\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\n\r\nnamespace NetCoreStaticConstructorBug\r\n{\r\n    public static class Program\r\n    {\r\n        public static bool StaticConstructor1Executed = false;\r\n        public static bool StaticConstructor2Executed = false;\r\n\r\n        public static void Main(string[] args)\r\n        {\r\n            // outputs \"False, False\"\r\n            Console.WriteLine($\"{StaticConstructor1Executed}, {StaticConstructor2Executed}\");\r\n\r\n            var runner1 = new Runner1();\r\n            var runner2 = new Runner2();\r\n\r\n            // outputs \"False, True\" on Core, \"True, True\" on Desktop/Mono\r\n            Console.WriteLine($\"{StaticConstructor1Executed}, {StaticConstructor2Executed}\");\r\n\r\n            RuntimeHelpers.RunClassConstructor(typeof(Runner1).TypeHandle);\r\n            RuntimeHelpers.RunClassConstructor(typeof(Runner2).TypeHandle);\r\n\r\n            // outputs \"True, True\"\r\n            Console.WriteLine($\"{StaticConstructor1Executed}, {StaticConstructor2Executed}\");\r\n        }\r\n    }\r\n\r\n    public sealed class Runner1\r\n    {\r\n        private static Helper helper1 = new Helper();\r\n\r\n        private sealed class Helper\r\n        {\r\n            public Helper()\r\n            {\r\n                // in my actual program the Helper instances are network protocol\r\n                // handlers registering themselves globally with another singleton instance\r\n                Program.StaticConstructor1Executed = true;\r\n            }\r\n        }\r\n\r\n        public Runner1() { }\r\n    }\r\n\r\n    public sealed class Runner2\r\n    {\r\n        static Runner2()\r\n        {\r\n            Program.StaticConstructor2Executed = true;\r\n        }\r\n\r\n        public Runner2() { }\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\nNote that `Runner2` executes the static constructor but `Runner1` does *not execute* on Core Framework. Observed on .NET Core 2.1.507 and 2.2.300, works fine on Desktop and Mono.","Url":"https://github.com/dotnet/coreclr/issues/25580","RelatedDescription":"Closed issue \"Static constructor broken (not always executed)\" (#25580)"},{"Id":"464850322","IsPullRequest":true,"CreatedAt":"2019-07-06T15:35:07","Actor":"dotnet-maestro[bot]","Number":"25577","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190705.7\r\n- **Date Produced**: 7/6/2019 4:27 AM\r\n- **Commit**: 6c6d68558aaccbd16de6e84cf7e59c0fb32b8273\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19355.7\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19355.7\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25577","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25577)"},{"Id":"464849109","IsPullRequest":true,"CreatedAt":"2019-07-06T15:24:46","Actor":"dotnet-maestro[bot]","Number":"25576","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190705.2\r\n- **Date Produced**: 7/5/2019 11:56 PM\r\n- **Commit**: 3e0cbbc6fd6c6d45d7083ee0deb71cec7ea2d91f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19355.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19355.2\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25576","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25576)"},{"Id":"464851505","IsPullRequest":true,"CreatedAt":"2019-07-06T15:24:35","Actor":"dotnet-maestro[bot]","Number":"25579","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 11:05 AM\r\n- **Commit**: d39ddd0e9998600cf34f654177db53a97ef2fec7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190706.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190706.1\r\n\r\n[marker]: <> (End:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25579","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25579)"},{"Id":"464792352","IsPullRequest":true,"CreatedAt":"2019-07-06T07:09:33","Actor":"Maoni0","Number":"25573","RawContent":null,"Title":"fix merge error","State":"closed","Body":"it appears I somehow didn't get this part for my last change; while this still returns the correct result it's a small nuisance.","Url":"https://github.com/dotnet/coreclr/pull/25573","RelatedDescription":"Closed or merged PR \"fix merge error\" (#25573)"},{"Id":"464801513","IsPullRequest":false,"CreatedAt":"2019-07-06T00:36:19","Actor":"WardenGnaw","Number":"25575","RawContent":null,"Title":"[Linux ARM64] Step controls causes debugger to crash","State":"open","Body":"Step controls (in, over, out) cause the debugger to crash due to `symbol lookup error: ...libmscoredbi.so: undefined symbol: FPFillR8`\r\n\r\nPossible reason is this line is missing ARM64 https://github.com/dotnet/coreclr/blob/e985b20260631c98a09f08cb67e93d690a6ffd0b/src/debug/di/CMakeLists.txt#L94\r\n\r\nand there is no `coreclr/src/debug/di/arm64/floatconversion.S`\r\n\r\n@tommcdon @hoyosjs ","Url":"https://github.com/dotnet/coreclr/issues/25575","RelatedDescription":"Open issue \"[Linux ARM64] Step controls causes debugger to crash\" (#25575)"},{"Id":"464796677","IsPullRequest":true,"CreatedAt":"2019-07-05T23:42:00","Actor":"andy-ms","Number":"25574","RawContent":null,"Title":"System.GC.HeapHardLimit and .HeapHardLimitPercent in runtimeconfig.json","State":"open","Body":"This adds two new configuration options, \"System.GC.HeapHardLimit\" and\r\n\"System.GC.HeapHardLimitPercent\" to runtimeconfig.json. These behave the\r\nsame as COMPlus_GCHeapHardLimit and COMPlus_GCHeapHardLimitPercent.\r\n\r\nI tested this change by manually debugging into `EEConfig::sync`, `GCToEEInterface::GetIntConfigValue`, and `GCHeap::Initialize`.","Url":"https://github.com/dotnet/coreclr/pull/25574","RelatedDescription":"Open PR \"System.GC.HeapHardLimit and .HeapHardLimitPercent in runtimeconfig.json\" (#25574)"},{"Id":"464243374","IsPullRequest":true,"CreatedAt":"2019-07-05T23:12:43","Actor":"dotnet-maestro[bot]","Number":"25564","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190704.4\r\n- **Date Produced**: 7/4/2019 7:32 PM\r\n- **Commit**: 477abf147d8860fae35f975fddafb2711ee42bd4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19354.4\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19354.4\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25564","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25564)"},{"Id":"464731600","IsPullRequest":true,"CreatedAt":"2019-07-05T20:03:35","Actor":"sergiy-k","Number":"25572","RawContent":null,"Title":"Re-enable Microsoft.VisualBasic tests","State":"closed","Body":"After many attempts, we still cannot reproduce issue https://github.com/dotnet/coreclr/issues/25070 locally. I’m re-enabling the test so we can see if it will reproduce in the lab.\r\n","Url":"https://github.com/dotnet/coreclr/pull/25572","RelatedDescription":"Closed or merged PR \"Re-enable Microsoft.VisualBasic tests\" (#25572)"},{"Id":"464250527","IsPullRequest":true,"CreatedAt":"2019-07-05T16:17:43","Actor":"dotnet-maestro[bot]","Number":"25566","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190705.1\r\n- **Date Produced**: 7/5/2019 11:05 AM\r\n- **Commit**: ac14c2abe6ef3b8b9996cd142c3075a83764171a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190705.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190705.1\r\n\r\n[marker]: <> (End:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25566","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25566)"},{"Id":"464614459","IsPullRequest":true,"CreatedAt":"2019-07-05T16:15:37","Actor":"dotnet-maestro[bot]","Number":"25569","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190704.2\r\n- **Date Produced**: 7/4/2019 10:42 PM\r\n- **Commit**: 30553c0de34454fb8da5229962501af65eb1233f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19354.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19354.2\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25569","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25569)"},{"Id":"464621593","IsPullRequest":true,"CreatedAt":"2019-07-05T16:15:27","Actor":"dotnet-maestro[bot]","Number":"25570","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190704.08\r\n- **Date Produced**: 7/5/2019 4:11 AM\r\n- **Commit**: 7f3dffe602907ca336c61e6c2efa95383a9d6896\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27904-08\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25570","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#25570)"},{"Id":"464649759","IsPullRequest":false,"CreatedAt":"2019-07-05T13:49:05","Actor":"k15tfu","Number":"25571","RawContent":null,"Title":"Rename WIN64EXCEPTIONS to FEATURE_EH_FUNCLETS","State":"open","Body":"Found surprising the fact it's defined when building Linux x64. Just want to confirm that it's not an error =)","Url":"https://github.com/dotnet/coreclr/issues/25571","RelatedDescription":"Open issue \"Rename WIN64EXCEPTIONS to FEATURE_EH_FUNCLETS\" (#25571)"},{"Id":"464607294","IsPullRequest":false,"CreatedAt":"2019-07-05T11:58:13","Actor":"ww898","Number":"25568","RawContent":null,"Title":"What is the detaching profiler procedure on Unix?","State":"open","Body":"Could you please tell me what should I use in my profiler on Unix platforms instead of `FreeLibraryAndExitThread`?\r\n\r\nComment in .NET Core code:\r\nhttps://github.com/dotnet/coreclr/blob/be5445e56ea2bdb6de907e3f892ca732fc802f0f/src/vm/profdetach.cpp#L133-L134\r\n\r\nThe David Broman's manuscript:\r\nhttps://github.com/dotnet/coreclr/blob/6f1bdfffb77ba1c95f46e16a7eeff3cfaf2f2f1f/Documentation/Profiling/davbr-blog-archive/Profiler%20Detach.md#how-detaching-works\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/25568","RelatedDescription":"Open issue \"What is the detaching profiler procedure on Unix?\" (#25568)"},{"Id":"464597410","IsPullRequest":false,"CreatedAt":"2019-07-05T11:29:39","Actor":"ww898","Number":"25567","RawContent":null,"Title":"Profiler memory leaks under .NET Core v3.0.0-preview6","State":"open","Body":"Sometimes one or two times from about 100 runs I got profiler memory leaks because CoreCLR doesn't call `Release()` for profiler. Looks that this block of code in CoreCLR wasn't called: https://github.com/dotnet/coreclr/blob/67a66156d0307b49522a13618522d289268bc1f9/src/vm/eetoprofinterfaceimpl.cpp#L912-L983 The managed application should be short to reproduce the bug:  mine one contains only one `Console.WriteLine(\"QQQ\");`.Only .NET Core v3.0.0-preview6 tests are flaky.  .NET Core v1.x/2.x are stable.\r\n\r\nPart of logs with leaks:\r\n```\r\n000011BC 1 0000000000000000 BProf::Shutdown res=ok\r\n000011BC 0 0000000000000000 ProcessDetach\r\n000011BC 0 0000000000000000 SEU::Term\r\n000011BC 0 0000000000000000 SEU::Term res=ok\r\n000011BC 0 0000000000000000 Finished\r\nDetected memory leaks!\r\nDumping objects ->\r\n{3787} normal block at 0x000001D9720B2CF0, 96 bytes long.\r\n Data: < 7>/            > E0 37 3E 2F FE 7F 00 00 01 00 00 00 01 00 00 00 \r\n{3253} normal block at 0x000001D97214A940, 32 bytes long.\r\n Data: <                > 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \r\n{3231} normal block at 0x000001D9720900C0, 8 bytes long.\r\n Data: <        > 00 00 00 00 00 00 00 00 \r\n```\r\n\r\nPart of logs without leaks:\r\n```\r\n0000180C 1 0000000000000000 BProf::Shutdown res=ok\r\n0000180C 0 0000000000000000 BProf::Release totalRef=6 ref=6\r\n0000180C 0 0000000000000000 BProf::Release totalRef=5 ref=5\r\n0000180C 0 0000000000000000 BProf::Release totalRef=4 ref=4\r\n0000180C 0 0000000000000000 BProf::Release totalRef=3 ref=3\r\n0000180C 0 0000000000000000 BProf::Release totalRef=2 ref=2\r\n0000180C 0 0000000000000000 BProf::Release totalRef=1 ref=1\r\n0000180C 0 0000000000000000 BProf::Release totalRef=0 ref=0\r\n0000180C 1 0000000000000000 BProf::DeleteProfiler hasDetachDoneEvent=false\r\n0000180C 0 0000000000000000 BProf::DeleteProfiler res=ok\r\n0000180C 0 0000000000000000 SEU::Disable ref=0\r\n0000180C 0 0000000000000000 ProcessDetach\r\n0000180C 0 0000000000000000 SEU::Term\r\n0000180C 0 0000000000000000 SEU::Term res=ok\r\n0000180C 0 0000000000000000 Finished\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25567","RelatedDescription":"Open issue \"Profiler memory leaks under .NET Core v3.0.0-preview6\" (#25567)"},{"Id":"464245351","IsPullRequest":true,"CreatedAt":"2019-07-04T22:06:24","Actor":"dotnet-maestro[bot]","Number":"25565","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190703.14\r\n- **Date Produced**: 7/4/2019 6:39 AM\r\n- **Commit**: 4e18401b3b8cf2080201b1d0683f0892deba63f0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27903-14\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25565","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#25565)"},{"Id":"464237044","IsPullRequest":true,"CreatedAt":"2019-07-04T14:29:21","Actor":"dotnet-maestro[bot]","Number":"25563","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190703.19\r\n- **Date Produced**: 7/3/2019 10:58 PM\r\n- **Commit**: 733f8297b68dd824044a77d955e62305b9dc43d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19353.19\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19353.19\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25563","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25563)"},{"Id":"464056977","IsPullRequest":true,"CreatedAt":"2019-07-04T14:07:52","Actor":"mikem8361","Number":"25562","RawContent":null,"Title":"Fix dotnet-dump/createdump launch failure","State":"closed","Body":"On CentOS or OpenSUSE dotnet-dump collect fails but a\r\nvalid coredump is generated. The \"prctl()\" call is failing\r\nthat gives the child createdump process permission to ptrace\r\nto the runtime process. On CentOS/OpenSUSE the PR_SET_PTRACER\r\noption isn't supported and not needed.\r\n\r\nIssue: https://github.com/dotnet/diagnostics/issues/334","Url":"https://github.com/dotnet/coreclr/pull/25562","RelatedDescription":"Closed or merged PR \"Fix dotnet-dump/createdump launch failure\" (#25562)"},{"Id":"464021637","IsPullRequest":true,"CreatedAt":"2019-07-04T04:38:05","Actor":"AaronRobinsonMSFT","Number":"25560","RawContent":null,"Title":"Remove legacy resource value (PrivateBuild) in binaries.","State":"closed","Body":"Fixes #25557\r\n\r\ncc @RussKeldorph @leculver @elinor-fung ","Url":"https://github.com/dotnet/coreclr/pull/25560","RelatedDescription":"Closed or merged PR \"Remove legacy resource value (PrivateBuild) in binaries.\" (#25560)"},{"Id":"464023014","IsPullRequest":false,"CreatedAt":"2019-07-04T01:56:42","Actor":"AaronRobinsonMSFT","Number":"25561","RawContent":null,"Title":"Native projects should have a way to detect official builds","State":"open","Body":"There are instances where inserting additional resource data into a binary would be useful. See https://github.com/dotnet/coreclr/issues/25557 for an example.\r\n\r\nThere is at least one place that performs this check:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/ae3430d8ce50c9e954192e89871aff783da375e2/src/pal/prebuilt/inc/fxver.h#L99-L103","Url":"https://github.com/dotnet/coreclr/issues/25561","RelatedDescription":"Open issue \"Native projects should have a way to detect official builds\" (#25561)"},{"Id":"464014298","IsPullRequest":false,"CreatedAt":"2019-07-04T01:14:33","Actor":"VincentBu","Number":"25559","RawContent":null,"Title":"Test failed: tracing_eventcounter._incrementingeventcounter_incrementingeventcounter_._incrementingeventcounter_incrementingeventcounter_cmd","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190702.1/workItem/PayloadGroup0/analysis/xunit/tracing_eventcounter._incrementingeventcounter_incrementingeventcounter_~2F_incrementingeventcounter_incrementingeventcounter_cmd\r\n\r\n**Failed tests:**\r\ntracing_eventcounter._incrementingeventcounter_incrementingeventcounter_._incrementingeventcounter_incrementingeventcounter_cmd\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\c39279a9-20fe-412c-a2db-e1db080bffa6\\\\Work\\\\0abddf7b-d933-45fb-8055-1ad9001fa579\\\\Exec\\\\tracing\\\\eventcounter\\\\Reports\\\\tracing.eventcounter\\\\incrementingeventcounter\\\\incrementingeventcounter.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\c39279a9-20fe-412c-a2db-e1db080bffa6\\\\Payload\\\\corerun.exe\\\" incrementingeventcounter.exe \r\nTest Failed\r\nExpected to see 100 events - saw 0\r\nExpected: 100\r\nActual: 1\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\c39279a9-20fe-412c-a2db-e1db080bffa6\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\c39279a9-20fe-412c-a2db-e1db080bffa6\\\\Work\\\\0abddf7b-d933-45fb-8055-1ad9001fa579\\\\Exec\\\\tracing\\\\eventcounter\\\\incrementingeventcounter\\\\incrementingeventcounter.cmd\r\nExpected: True\r\nActual:   False\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/25559","RelatedDescription":"Open issue \"Test failed: tracing_eventcounter._incrementingeventcounter_incrementingeventcounter_._incrementingeventcounter_incrementingeventcounter_cmd\" (#25559)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"465029307","IsPullRequest":true,"CreatedAt":"2019-07-08T02:41:53","Actor":"dotnet-maestro[bot]","Number":"11780","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.08\r\n- **Date Produced**: 7/8/2019 4:27 AM\r\n- **Commit**: be7227b45d69a0177eb0ef0bdcec1cfd2b276843\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-08\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11780","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#11780)"},{"Id":"465009447","IsPullRequest":true,"CreatedAt":"2019-07-08T00:54:27","Actor":"dotnet-maestro[bot]","Number":"11779","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.06\r\n- **Date Produced**: 7/8/2019 12:23 AM\r\n- **Commit**: ba9cde291fc9cf935d56e52e87e65b976bf354de\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11779","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11779)"},{"Id":"464973422","IsPullRequest":true,"CreatedAt":"2019-07-07T19:15:55","Actor":"dotnet-maestro[bot]","Number":"11778","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.05\r\n- **Date Produced**: 7/7/2019 6:44 PM\r\n- **Commit**: fda880b3ce4153391028fec1ab41dd3d7bc4f94c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-05\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11778","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11778)"},{"Id":"464968999","IsPullRequest":true,"CreatedAt":"2019-07-07T16:52:17","Actor":"dotnet-maestro[bot]","Number":"11777","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.03\r\n- **Date Produced**: 7/7/2019 4:16 PM\r\n- **Commit**: 7f71c641671e83c7eb832c06e8dbbbe162c52f84\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-03\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11777","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11777)"},{"Id":"464966088","IsPullRequest":true,"CreatedAt":"2019-07-07T16:19:41","Actor":"dotnet-maestro[bot]","Number":"11776","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.02\r\n- **Date Produced**: 7/7/2019 3:49 PM\r\n- **Commit**: 278e554080f362e787627ed36f5e0a6661d9736f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-02\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11776","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11776)"},{"Id":"464958053","IsPullRequest":true,"CreatedAt":"2019-07-07T14:53:11","Actor":"dotnet-maestro[bot]","Number":"11775","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190707.01\r\n- **Date Produced**: 7/7/2019 2:22 PM\r\n- **Commit**: 0debea3f34d51820aa4565f948634b137f93a00c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27907-01\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11775","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11775)"},{"Id":"464946079","IsPullRequest":true,"CreatedAt":"2019-07-07T12:41:20","Actor":"dotnet-maestro[bot]","Number":"11774","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:46 PM\r\n- **Commit**: c4431b0579139f9fa64a660815e0f5de6f638483\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview8.19356.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11774","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11774)"},{"Id":"464847991","IsPullRequest":true,"CreatedAt":"2019-07-07T12:39:17","Actor":"dotnet-maestro[bot]","Number":"11766","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11766","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11766)"},{"Id":"464945635","IsPullRequest":true,"CreatedAt":"2019-07-07T12:35:46","Actor":"dotnet-maestro[bot]","Number":"11773","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190706.2\r\n- **Date Produced**: 7/6/2019 3:51 PM\r\n- **Commit**: 66be94b6a1a4e2d8ab8f42e66c73bb22002d86ed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview8.19356.2\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11773","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11773)"},{"Id":"464913811","IsPullRequest":true,"CreatedAt":"2019-07-07T05:07:08","Actor":"dotnet-maestro[bot]","Number":"11772","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190706.07\r\n- **Date Produced**: 7/7/2019 4:31 AM\r\n- **Commit**: deba7410a351243eef2d00e7f3b87d095be7a847\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27906-07\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11772","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11772)"},{"Id":"464908687","IsPullRequest":true,"CreatedAt":"2019-07-07T03:14:14","Actor":"dotnet-maestro[bot]","Number":"11771","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190706.06\r\n- **Date Produced**: 7/7/2019 2:43 AM\r\n- **Commit**: deba7410a351243eef2d00e7f3b87d095be7a847\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27906-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11771","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11771)"},{"Id":"464873842","IsPullRequest":true,"CreatedAt":"2019-07-07T01:04:30","Actor":"dotnet-maestro[bot]","Number":"11770","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190706.05\r\n- **Date Produced**: 7/7/2019 12:30 AM\r\n- **Commit**: 6d2b162a55aea5f27f382a025d12bce5cf6e74fd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27906-05\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11770","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11770)"},{"Id":"464867417","IsPullRequest":true,"CreatedAt":"2019-07-06T17:04:52","Actor":"dotnet-maestro[bot]","Number":"11769","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190706.03\r\n- **Date Produced**: 7/6/2019 4:21 PM\r\n- **Commit**: 38aea81f87ffdb981a9cf8326709e316771b8f9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27906-03\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11769","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11769)"},{"Id":"464860358","IsPullRequest":true,"CreatedAt":"2019-07-06T15:10:14","Actor":"dotnet-maestro[bot]","Number":"11768","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190706.01\r\n- **Date Produced**: 7/6/2019 2:39 PM\r\n- **Commit**: 3e45564330cb875cee0b3fc222c4e9efd80c341c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27906-01\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11768","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11768)"},{"Id":"464848360","IsPullRequest":true,"CreatedAt":"2019-07-06T12:40:43","Actor":"dotnet-maestro[bot]","Number":"11767","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190705.1\r\n- **Date Produced**: 7/5/2019 12:44 PM\r\n- **Commit**: edb569939065c2e311c3fd849a93aec91cc1c646\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview8.19355.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11767","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11767)"},{"Id":"464828417","IsPullRequest":true,"CreatedAt":"2019-07-06T08:09:42","Actor":"dotnet-maestro[bot]","Number":"11765","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190705.7\r\n- **Date Produced**: 7/6/2019 7:39 AM\r\n- **Commit**: 0049c5899ca78e8fef7d77b355b555b793bf6616\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19355.7\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11765","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11765)"},{"Id":"464823932","IsPullRequest":true,"CreatedAt":"2019-07-06T07:03:07","Actor":"dotnet-maestro[bot]","Number":"11764","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.12\r\n- **Date Produced**: 7/6/2019 6:32 AM\r\n- **Commit**: aa4edf155229620edc2962671fbff5dd6e68f6b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-12\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11764","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11764)"},{"Id":"464820599","IsPullRequest":true,"CreatedAt":"2019-07-06T06:11:53","Actor":"dotnet-maestro[bot]","Number":"11763","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190705.6\r\n- **Date Produced**: 7/6/2019 5:41 AM\r\n- **Commit**: 69a703748026b4890db2e6ce683c05f5f3fffe1c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19355.6\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11763","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11763)"},{"Id":"464810554","IsPullRequest":true,"CreatedAt":"2019-07-06T03:20:46","Actor":"dotnet-maestro[bot]","Number":"11762","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.09\r\n- **Date Produced**: 7/6/2019 2:50 AM\r\n- **Commit**: 163ab3e487a43bcf68cfc5b9665a4f04679f3ab7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-09\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11762","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11762)"},{"Id":"464796187","IsPullRequest":true,"CreatedAt":"2019-07-06T02:02:53","Actor":"dotnet-maestro[bot]","Number":"11760","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.08\r\n- **Date Produced**: 7/6/2019 1:29 AM\r\n- **Commit**: c8e69e970bf76a0fd17eec122e9c4f8e525c5467\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-08\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11760","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11760)"},{"Id":"464798058","IsPullRequest":true,"CreatedAt":"2019-07-06T00:32:13","Actor":"dotnet-maestro[bot]","Number":"11761","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190705.5\r\n- **Date Produced**: 7/5/2019 11:56 PM\r\n- **Commit**: 38e18ff183432c73aa2ea350715df855ebf280cf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19355.5\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11761","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11761)"},{"Id":"464785340","IsPullRequest":true,"CreatedAt":"2019-07-05T22:45:33","Actor":"dotnet-maestro[bot]","Number":"11759","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.06\r\n- **Date Produced**: 7/5/2019 10:09 PM\r\n- **Commit**: 52d1e41135e72a5feffd79688771185fd56850dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11759","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11759)"},{"Id":"464779133","IsPullRequest":true,"CreatedAt":"2019-07-05T22:03:37","Actor":"dotnet-maestro[bot]","Number":"11758","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190705.4\r\n- **Date Produced**: 7/5/2019 9:32 PM\r\n- **Commit**: 025476f31ee229b8e65e400d29c5606d992f023c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19355.4\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11758","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11758)"},{"Id":"464757584","IsPullRequest":true,"CreatedAt":"2019-07-05T20:22:12","Actor":"dotnet-maestro[bot]","Number":"11757","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.05\r\n- **Date Produced**: 7/5/2019 7:51 PM\r\n- **Commit**: 28e30cbf07f13f5042624d9a3d8484d5022d2c84\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-05\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11757","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11757)"},{"Id":"464718479","IsPullRequest":true,"CreatedAt":"2019-07-05T19:45:11","Actor":"dotnet-maestro[bot]","Number":"11754","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190705.3\r\n- **Date Produced**: 7/5/2019 7:09 PM\r\n- **Commit**: 99ee868090cac89c6e19d9cc1c64e90db930c19f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19355.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11754","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11754)"},{"Id":"464746072","IsPullRequest":false,"CreatedAt":"2019-07-05T19:01:27","Actor":"anurse","Number":"11756","RawContent":null,"Title":"launchSettings.json no longer allows comments after System.Text.Json migration","State":"open","Body":"As part of the migration to System.Text.Json, it looks like Comment handling in launchSettings.json was lost. This issue **does not repro** on SDK 2.2.203.\r\n\r\nSystem.Text.Json supports comment handling, but it has to be enabled in the options. It looks like the current code does not pass in any options: https://github.com/dotnet/cli/blob/0cb36481ad4e628079374447c8ae313006e3f602/src/dotnet/commands/dotnet-run/LaunchSettings/LaunchSettingsManager.cs#L28\r\n\r\n## Steps to reproduce\r\n1. `dotnet new web`\r\n2. Edit `.\\Properties\\launchSettings.json` to include a comment: `// Spicy Comments`\r\n3. `dotnet run`\r\n\r\n## Expected  behavior\r\nIt runs, spicy comments and all. Any launch settings (environment variables, etc.) are applied.\r\n\r\n## Actual behavior\r\n\r\n```\r\nThe launch profile \"(Default)\" could not be applied.\r\nAn error was encountered when reading launchSettings.json.\r\n'/' is invalid after a value. Expected either ',', '}', or ']'. LineNumber: 1 | BytePositionInLine: 2\r\n```\r\n\r\nThe application **does** launch, but launch settings are ignored.\r\n\r\n😢 \t\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.203\r\n Commit:    e5bab63eca\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18865\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.203\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.603 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009618 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.203 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11756","RelatedDescription":"Open issue \"launchSettings.json no longer allows comments after System.Text.Json migration\" (#11756)"},{"Id":"464730133","IsPullRequest":true,"CreatedAt":"2019-07-05T18:25:34","Actor":"dotnet-maestro[bot]","Number":"11755","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.04\r\n- **Date Produced**: 7/5/2019 5:54 PM\r\n- **Commit**: 5cd71b94f5f1a4f12daa77892ceb177d9853b348\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-04\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11755","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11755)"},{"Id":"464711569","IsPullRequest":true,"CreatedAt":"2019-07-05T17:15:40","Actor":"dotnet-maestro[bot]","Number":"11753","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.03\r\n- **Date Produced**: 7/5/2019 4:19 PM\r\n- **Commit**: d19d1eb472abe1b88dd79bd07653274516f281d1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-03\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11753","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11753)"},{"Id":"464703090","IsPullRequest":true,"CreatedAt":"2019-07-05T16:39:55","Actor":"dotnet-maestro[bot]","Number":"11752","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.02\r\n- **Date Produced**: 7/5/2019 4:09 PM\r\n- **Commit**: d19d1eb472abe1b88dd79bd07653274516f281d1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-02\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11752)"},{"Id":"464674432","IsPullRequest":true,"CreatedAt":"2019-07-05T15:20:56","Actor":"dotnet-maestro[bot]","Number":"11751","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.01\r\n- **Date Produced**: 7/5/2019 2:50 PM\r\n- **Commit**: e9cd70bff9a9f6e44699bcd43b4f9a5a924ff533\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-01\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11751)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"464949613","IsPullRequest":true,"CreatedAt":"2019-07-07T13:01:58","Actor":"dotnet-maestro[bot]","Number":"1318","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190706.5\r\n- **Date Produced**: 7/7/2019 1:21 AM\r\n- **Commit**: 15abdfc3816352c64098735b79a98dd97524ee36\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19356.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19356.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19356.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1318","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1318)"},{"Id":"464945513","IsPullRequest":true,"CreatedAt":"2019-07-07T12:14:11","Actor":"dotnet-maestro[bot]","Number":"1317","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1317","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1317)"},{"Id":"464852128","IsPullRequest":true,"CreatedAt":"2019-07-06T13:13:54","Actor":"dotnet-maestro[bot]","Number":"1316","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190705.7\r\n- **Date Produced**: 7/6/2019 4:27 AM\r\n- **Commit**: 6c6d68558aaccbd16de6e84cf7e59c0fb32b8273\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19355.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19355.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19355.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1316","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1316)"},{"Id":"464847928","IsPullRequest":true,"CreatedAt":"2019-07-06T12:14:14","Actor":"dotnet-maestro[bot]","Number":"1315","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190705.2\r\n- **Date Produced**: 7/5/2019 11:56 PM\r\n- **Commit**: 3e0cbbc6fd6c6d45d7083ee0deb71cec7ea2d91f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19355.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1315","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1315)"},{"Id":"464628179","IsPullRequest":true,"CreatedAt":"2019-07-05T13:04:38","Actor":"dotnet-maestro[bot]","Number":"1314","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190704.4\r\n- **Date Produced**: 7/4/2019 7:32 PM\r\n- **Commit**: 477abf147d8860fae35f975fddafb2711ee42bd4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19354.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19354.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19354.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1314","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1314)"},{"Id":"464608260","IsPullRequest":true,"CreatedAt":"2019-07-05T12:10:56","Actor":"dotnet-maestro[bot]","Number":"1313","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190704.2\r\n- **Date Produced**: 7/4/2019 10:42 PM\r\n- **Commit**: 30553c0de34454fb8da5229962501af65eb1233f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19354.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1313","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1313)"},{"Id":"464366313","IsPullRequest":false,"CreatedAt":"2019-07-04T18:29:29","Actor":"PKYADAV","Number":"1311","RawContent":null,"Title":"DataAnnotation Validation in Xamarin.Forms","State":"open","Body":"Hi Team, \r\n\r\nI have class library in .net Standard 2.0 with EntityFrameworkCore. I have created class with Custom DataAnnotation as below:\r\n\r\n**Model Definition**\r\n\r\npublic class UserLogin : NotificationObject\r\n    {\r\n        [DbRequired]\r\n        [Display(Name = \"USER NAME\", Prompt = \"ENTER USER NAME\")]\r\n        public string User_Name\r\n        {\r\n            get { return GetValue(() => User_Name); }\r\n            set { SetValue(() => User_Name, value); }\r\n        }\r\n\r\n        [Display(Name = \"PASSWORD\", Prompt = \"ENTER PASSWORD\")]\r\n        [DataType(DataType.Password)]\r\n        [DbRequired]\r\n        public string User_Password\r\n        {\r\n            get { return GetValue(() => User_Password); }\r\n            set { SetValue(() => User_Password, value); }\r\n        }\r\n    }\r\n\r\n**But this data annotation validation is working in Asp.Net Core and WPF. But we want to use the same in Xamarin.Forms for Android & iOS and UWP. Is it possible or any workaround? As I heard that in .net Standard you need write once and can be reuse in all other environment **","Url":"https://github.com/dotnet/standard/issues/1311","RelatedDescription":"Open issue \"DataAnnotation Validation in Xamarin.Forms\" (#1311)"},{"Id":"464253942","IsPullRequest":true,"CreatedAt":"2019-07-04T13:09:50","Actor":"dotnet-maestro[bot]","Number":"1310","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190703.8\r\n- **Date Produced**: 7/4/2019 2:48 AM\r\n- **Commit**: b21ca5fddd281f835de98dbe950405bcf9397ac4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19353.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19353.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19353.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1310","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1310)"},{"Id":"464230062","IsPullRequest":true,"CreatedAt":"2019-07-04T12:14:16","Actor":"dotnet-maestro[bot]","Number":"1309","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190703.19\r\n- **Date Produced**: 7/3/2019 10:58 PM\r\n- **Commit**: 733f8297b68dd824044a77d955e62305b9dc43d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19353.19\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19353.19\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1309","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1309)"},{"Id":"462015053","IsPullRequest":false,"CreatedAt":"2019-07-04T11:07:49","Actor":"brad302","Number":"1291","RawContent":null,"Title":"Error NETSDK1022: Duplicate 'EmbeddedResource' items were included.","State":"closed","Body":"Apologies if this isn't the correct place but it seems like the most logical place to start.\r\n\r\nI used this link ... [https://montemagno.com/how-to-convert-a-pcl-library-to-net-standard-and-keep-git-history/](https://montemagno.com/how-to-convert-a-pcl-library-to-net-standard-and-keep-git-history/) (which worked for other projects) ... to convert my PCL project in Xamarin Forms to .NET Standard 2.0 and ever since, I've had the issue where XAML files appear twice and no matter what I try, they simply will not fall back into line as one with the .cs file as its dependency ...\r\n\r\n<img width=\"301\" alt=\"Screen Shot 2019-06-28 at 10 25 57 pm\" src=\"https://user-images.githubusercontent.com/14899088/60342052-c43dd500-99f3-11e9-814e-c1441bde4484.png\">\r\n\r\n... even new XAML ContentPage files display the same behaviour, however, not initially.  If I close the project and reopen, they appear as 2.  I've tried removing and adding the files back in different ways but still no luck.\r\n\r\nMy .csproj file is very light on ...\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>netstandard2.0</TargetFramework>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <!--<PackageReference Include=\"\" Version=\"\"/>-->\r\n        <PackageReference Include=\"CarouselView.FormsPlugin\" Version=\"5.0.0\" />\r\n        <PackageReference Include=\"Com.Airbnb.Xamarin.Forms.Lottie\" Version=\"2.5.4\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Analytics\" Version=\"2.1.1\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Crashes\" Version=\"2.1.1\" />\r\n        <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.2\" />\r\n        <PackageReference Include=\"Refit\" Version=\"4.5.6\" />\r\n        <PackageReference Include=\"SkiaSharp.Views.Forms\" Version=\"1.68.0\" />\r\n        <PackageReference Include=\"sqlite-net-pcl\" Version=\"1.5.231\" />\r\n        <PackageReference Include=\"System.Net.Http\" Version=\"4.3.4\" />\r\n        <PackageReference Include=\"Xam.Plugin.Media\" Version=\"4.0.1.5\" />\r\n        <PackageReference Include=\"Xam.Plugins.Forms.ImageCircle\" Version=\"3.0.0.5\" />\r\n        <PackageReference Include=\"Xam.Plugins.Messaging\" Version=\"5.2.0\" />\r\n        <PackageReference Include=\"Xamarin.Essentials\" Version=\"1.1.0\" />\r\n        <PackageReference Include=\"Xamarin.Forms\" Version=\"4.0.0.540366\" />\r\n        <PackageReference Include=\"Xamarin.Forms.Maps\" Version=\"4.0.0.540366\" />\r\n        <PackageReference Include=\"ZXing.Net.Mobile\" Version=\"2.4.1\" />\r\n        <PackageReference Include=\"ZXing.Net.Mobile.Forms\" Version=\"2.4.1\" />\r\n        <PackageReference Include=\"Microsoft.CSharp\" Version=\"4.5.0\" />\r\n        <PackageReference Include=\"UltimateXF\" Version=\"2.3.2\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Auth\" Version=\"2.1.1\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n... and nothing on other community sites (e.g. StackOverflow) have helped me overcome this.\r\n\r\nThis is the entire error minus ALL of the XAML files within the project listed ...\r\n\r\n`/usr/local/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.DefaultItems.targets(5,5): Error NETSDK1022: Duplicate 'EmbeddedResource' items were included. The .NET SDK includes 'EmbeddedResource' items from your project directory by default. You can either remove these items from your project file, or set the 'EnableDefaultEmbeddedResourceItems' property to 'false' if you want to explicitly include them in your project file. For more information, see https://aka.ms/sdkimplicititems. The duplicate items were: 'App.xaml'; etc … (NETSDK1022) (cPanel)`\r\n\r\nI've looked at the resource in the error message, tried a number of things as listed but none had the desired outcome.\r\n\r\nEverything was behaving until I upgraded to Xamarin Forms 4.0 and want to move forward with the latest SDK.\r\n\r\nHopefully someone can help me through this.","Url":"https://github.com/dotnet/standard/issues/1291","RelatedDescription":"Closed issue \"Error NETSDK1022: Duplicate 'EmbeddedResource' items were included.\" (#1291)"},{"Id":"463893429","IsPullRequest":true,"CreatedAt":"2019-07-03T18:23:31","Actor":"terrajobst","Number":"1308","RawContent":null,"Title":"Expose new event counters","State":"open","Body":"As requested offline:\r\n\r\n> While the EventCounter API is a part of .NET Standard 2.1 (and was present in .NET Standard 2.0), the new variants of the EventCounter class (PollingCounter, IncrementingEventCounter, and IncrementingPollingCounter) that were introduced in https://github.com/dotnet/corefx/issues/36129 are all not a part of .NET Standard 2.1.\r\n\r\nThis PR closes that gap.\r\n\r\n/cc @JamesNK @tommcdon @noahfalk @sywhang @shirhatti @JunTaoLuo","Url":"https://github.com/dotnet/standard/pull/1308","RelatedDescription":"Open PR \"Expose new event counters\" (#1308)"},{"Id":"463741391","IsPullRequest":true,"CreatedAt":"2019-07-03T13:14:16","Actor":"dotnet-maestro[bot]","Number":"1307","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190702.11\r\n- **Date Produced**: 7/3/2019 7:27 AM\r\n- **Commit**: 1162dfc1b5da79dc29f3d28935b4c96c9d38a743\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19352.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19352.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19352.11\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1307","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1307)"},{"Id":"463713258","IsPullRequest":true,"CreatedAt":"2019-07-03T12:14:13","Actor":"dotnet-maestro[bot]","Number":"1306","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190702.7\r\n- **Date Produced**: 7/2/2019 6:25 PM\r\n- **Commit**: b8c190d95371e658d95a5731f4778bd3da2fa42d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19352.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19352.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19352.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19352.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19352.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19352.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1306","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1306)"},{"Id":"463393350","IsPullRequest":true,"CreatedAt":"2019-07-02T19:23:52","Actor":"wtgodbe","Number":"1305","RawContent":null,"Title":"Remove cancellation token from System.Data CloseAsync() methods","State":"closed","Body":"Cherry-pick of https://github.com/dotnet/standard/pull/1304 for preview7\r\n\r\nCC @roji @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1305","RelatedDescription":"Closed or merged PR \"Remove cancellation token from System.Data CloseAsync() methods\" (#1305)"},{"Id":"463388556","IsPullRequest":true,"CreatedAt":"2019-07-02T19:14:09","Actor":"roji","Number":"1304","RawContent":null,"Title":"Remove cancellation token from System.Data CloseAsync() methods","State":"closed","Body":"Leftover from #1283, mirrors https://github.com/dotnet/corefx/pull/39070","Url":"https://github.com/dotnet/standard/pull/1304","RelatedDescription":"Closed or merged PR \"Remove cancellation token from System.Data CloseAsync() methods\" (#1304)"},{"Id":"463385096","IsPullRequest":true,"CreatedAt":"2019-07-02T19:04:44","Actor":"wtgodbe","Number":"1303","RawContent":null,"Title":"Cherry pick changes to Standard for preview7","State":"closed","Body":"Cherry picks https://github.com/dotnet/standard/pull/1283, https://github.com/dotnet/standard/pull/1300, and https://github.com/dotnet/standard/pull/1290 for preview7. CC @terrajobst @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1303","RelatedDescription":"Closed or merged PR \"Cherry pick changes to Standard for preview7\" (#1303)"},{"Id":"462004700","IsPullRequest":true,"CreatedAt":"2019-07-02T18:49:33","Actor":"roji","Number":"1290","RawContent":null,"Title":"Add string overloads to DbDataReader.Get*()","State":"closed","Body":"See https://github.com/dotnet/corefx/issues/31595\r\n\r\nThis is the 3rd and last in this batch of System.Data changes.\r\n\r\nNote that for the naming and namespace for the new DataReaderExtensions class, see https://github.com/dotnet/corefx/pull/36123#issuecomment-475762481 and https://github.com/dotnet/corefx/pull/36123#discussion_r267625142.","Url":"https://github.com/dotnet/standard/pull/1290","RelatedDescription":"Closed or merged PR \"Add string overloads to DbDataReader.Get*()\" (#1290)"},{"Id":"462968084","IsPullRequest":true,"CreatedAt":"2019-07-02T18:34:57","Actor":"terrajobst","Number":"1300","RawContent":null,"Title":"Reduces System.Reflection.Emit to match CoreFX","State":"closed","Body":"For .NET Standard 2.1 we planned to extend Reflection Emit match the .NET Framework API surface but we never got around adding those APIs in .NET Core 3.0. Given that these APIs are rarely used, the proposal is to remove them from the .NET Standard 2.1. Please note that this isn't a breaking change from .NET Standard 2.0 but it is a breaking change from earlier preview versions of .NET Standard 2.1.\r\n\r\nSee issue dotnet/corefx#36716 for details.","Url":"https://github.com/dotnet/standard/pull/1300","RelatedDescription":"Closed or merged PR \"Reduces System.Reflection.Emit to match CoreFX\" (#1300)"},{"Id":"463216905","IsPullRequest":true,"CreatedAt":"2019-07-02T13:07:43","Actor":"dotnet-maestro[bot]","Number":"1302","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190702.1\r\n- **Date Produced**: 7/2/2019 10:08 AM\r\n- **Commit**: ec138afba514ce9b53d931d66129e02e8be147a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19352.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19352.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19352.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1302","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1302)"},{"Id":"463189880","IsPullRequest":true,"CreatedAt":"2019-07-02T12:29:13","Actor":"dotnet-maestro[bot]","Number":"1301","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190701.4\r\n- **Date Produced**: 7/1/2019 9:33 PM\r\n- **Commit**: 1fb1e240c889cd7f6e10cb1eacd129efa3ddb4b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19351.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1301","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1301)"},{"Id":"462698498","IsPullRequest":true,"CreatedAt":"2019-07-01T13:04:51","Actor":"dotnet-maestro[bot]","Number":"1299","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190630.3\r\n- **Date Produced**: 6/30/2019 6:47 PM\r\n- **Commit**: da3ba7ebe34771dde769b65dfb7f78fa55a5abb6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19330.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1299","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1299)"},{"Id":"462676118","IsPullRequest":true,"CreatedAt":"2019-07-01T12:14:12","Actor":"dotnet-maestro[bot]","Number":"1298","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1298","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1298)"},{"Id":"462402162","IsPullRequest":true,"CreatedAt":"2019-06-30T13:03:36","Actor":"dotnet-maestro[bot]","Number":"1297","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.6\r\n- **Date Produced**: 6/30/2019 12:46 AM\r\n- **Commit**: 68763d3ce7d9db960aadecc0773e7c7b906cc3e5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.6\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1297","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1297)"},{"Id":"462397733","IsPullRequest":true,"CreatedAt":"2019-06-30T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1296","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 1:09 PM\r\n- **Commit**: 3ebba82f29f338a3cb14f4b3e1b6da0fd69be694\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19329.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1296","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1296)"},{"Id":"462312057","IsPullRequest":false,"CreatedAt":"2019-06-29T15:21:55","Actor":"alecgn","Number":"1295","RawContent":null,"Title":"Consider adding AesGcm to .NET Standard 2.1","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1295","RelatedDescription":"Open issue \"Consider adding AesGcm to .NET Standard 2.1\" (#1295)"},{"Id":"462299907","IsPullRequest":true,"CreatedAt":"2019-06-29T13:03:28","Actor":"dotnet-maestro[bot]","Number":"1294","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.1\r\n- **Date Produced**: 6/29/2019 9:23 AM\r\n- **Commit**: 901a1d554a7bcb489eb363fb724c9d294ec35940\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1294","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1294)"},{"Id":"462296158","IsPullRequest":true,"CreatedAt":"2019-06-29T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1293","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1293","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1293)"},{"Id":"462019019","IsPullRequest":true,"CreatedAt":"2019-06-28T12:59:17","Actor":"dotnet-maestro[bot]","Number":"1292","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190627.9\r\n- **Date Produced**: 6/28/2019 4:10 AM\r\n- **Commit**: b8761d4848d42040c81ec25c8b51fd386b97f5f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19327.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19327.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19327.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1292","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1292)"},{"Id":"462001956","IsPullRequest":true,"CreatedAt":"2019-06-28T12:14:01","Actor":"dotnet-maestro[bot]","Number":"1289","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190627.39\r\n- **Date Produced**: 6/28/2019 2:55 AM\r\n- **Commit**: 247c0290c554a68dd3e560dd88fb0da26353d9d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19327.39\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1289","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1289)"},{"Id":"461514630","IsPullRequest":true,"CreatedAt":"2019-06-27T13:08:53","Actor":"dotnet-maestro[bot]","Number":"1288","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.15\r\n- **Date Produced**: 6/27/2019 8:28 AM\r\n- **Commit**: 6d723b8e5ae3129c0a94252292322fc19673478f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19326.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1288","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1288)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"465057769","IsPullRequest":true,"CreatedAt":"2019-07-08T05:14:35","Actor":"JeremyKuhne","Number":"39275","RawContent":null,"Title":"Improve allocations in WinForms startup","State":"open","Body":"In a blank WinForms app a large percentage of the allocations on startup are coming from System.Drawing and Microsoft.Win32.SystemEvents (25%+).\r\n\r\nOne of the biggest culprits is the delegate system in System.Drawing that was put in place to handle multiple names for libgdiplus. As Windows doesn't have an issue with multiple dll names I've moved this exclusively to the Unix code. One other option for Unix (that would allow sharing the definitions again) would be to include the same DllImports twice under different namespaces with a different definition for the library name. (Well over 10% of the allocations are in this space.)\r\n\r\nAnother problem is the HandleCollector class. This was put in place to force GC collections to attempt to get forgotten GDI handles to avoid running out of them. This *was* a big problem in Windows 98, and much less so in NT4 and Windows 2000. GDI handles now come from one pool of 65 thousand handles per process (as of Windows XP). The 9x limits are long gone- this has become nothing more than overhead.\r\n\r\nWindowClass creation was also creating unnecessary overhead (in SystemEvents). It was doing some unnecessary contortions to allow for multiple appdomains, which are no longer an issue. Native signatures were also suboptimal.\r\n\r\nLastly there was a fair amount of overhead on startup through Icon (getting the default icon from the app resource stream) and some through non-blittable fonts. Exposure of LOGFONT through object was also subject to a number of holes (size and null were never checked).\r\n\r\nThere are similar changes I've made in WinForms (notably with WindowClass creation). Together with those startup allocations drop from about 5,000 to around 1,500. Total bytes allocated drop by about 20%. Speed is really tough to measure as there is quite a bit of variance due to the fact so much is happening through Windows message pumping.\r\n\r\nI still need to finish the Unix changes, just a little bit of busy work. Getting this up for discussion/review of the approach and impact. I'll link the WinForms PR once I have it up.","Url":"https://github.com/dotnet/corefx/pull/39275","RelatedDescription":"Open PR \"Improve allocations in WinForms startup\" (#39275)"},{"Id":"465051194","IsPullRequest":false,"CreatedAt":"2019-07-08T04:42:05","Actor":"Thealexbarney","Number":"39274","RawContent":null,"Title":"Support FAT file attributes on non-Windows platforms","State":"open","Body":".NET Core currently does not support getting or setting [many file attributes](https://docs.microsoft.com/en-us/dotnet/api/system.io.fileattributes?view=netcore-2.2#remarks) in FAT filesystems on non-Windows platforms..\r\n\r\nThere is [a syscall](http://man7.org/linux/man-pages/man2/ioctl_fat.2.html) in Linux that allow reading and writing FAT attributes.  As these attributes are filesystem-specific, they could be ignored for filesystems that don't support them.\r\n\r\nHaving this feature would be useful for ensuring consistent behavior between platforms.","Url":"https://github.com/dotnet/corefx/issues/39274","RelatedDescription":"Open issue \"Support FAT file attributes on non-Windows platforms\" (#39274)"},{"Id":"464993788","IsPullRequest":true,"CreatedAt":"2019-07-08T03:00:24","Actor":"stephentoub","Number":"39270","RawContent":null,"Title":"Ensure BitArray unsafe accesses are within bounds","State":"closed","Body":"To avoid any potential issues that could arise from concurrent mutation of a BitArray while its doing unsafe processing (e.g. one thread calling And/Or/Xor while another thread resizes the BitArray via set_Length), this changes the implementations that use unsafe code to operate on a local snapshot that's fully validated locally.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/39204\r\ncc: @GrabYourPitchforks, @jkotas","Url":"https://github.com/dotnet/corefx/pull/39270","RelatedDescription":"Closed or merged PR \"Ensure BitArray unsafe accesses are within bounds\" (#39270)"},{"Id":"464999334","IsPullRequest":true,"CreatedAt":"2019-07-07T22:21:10","Actor":"Marusyk","Number":"39273","RawContent":null,"Title":"Rename JsonCamelCaseNamePolicy -> JsonCamelCaseNamingPolicy","State":"open","Body":"Fixes #39208\r\n\r\nPlease review.\r\nThank you in advance","Url":"https://github.com/dotnet/corefx/pull/39273","RelatedDescription":"Open PR \"Rename JsonCamelCaseNamePolicy -> JsonCamelCaseNamingPolicy\" (#39273)"},{"Id":"464997430","IsPullRequest":true,"CreatedAt":"2019-07-07T22:17:19","Actor":"stephentoub","Number":"39272","RawContent":null,"Title":"Disable ConnectAsync_AddHostHeader_Success test","State":"closed","Body":"#39271","Url":"https://github.com/dotnet/corefx/pull/39272","RelatedDescription":"Closed or merged PR \"Disable ConnectAsync_AddHostHeader_Success test\" (#39272)"},{"Id":"464995140","IsPullRequest":false,"CreatedAt":"2019-07-07T21:26:34","Actor":"stephentoub","Number":"39271","RawContent":null,"Title":"ConnectTest.ConnectAsync_AddHostHeader_Success test failing on all platforms","State":"open","Body":"```\r\n      System.Net.WebSockets.Client.Tests.ConnectTest.ConnectAsync_AddHostHeader_Success [FAIL]\r\n        System.Net.WebSockets.WebSocketException : The server returned status code '404' when status code '101' was expected.\r\n        Stack Trace:\r\n          D:\\repos\\corefx\\src\\System.Net.WebSockets.Client\\src\\System\\Net\\WebSockets\\WebSocketHandle.Managed.cs(181,0): at System.Net.WebSockets.WebSocketHandle.ConnectAsyncCore(Uri uri, CancellationToken cancellationToken, ClientWebSocketOptions options)\r\n          D:\\repos\\corefx\\src\\System.Net.WebSockets.Client\\src\\System\\Net\\WebSockets\\ClientWebSocket.cs(152,0): at System.Net.WebSockets.ClientWebSocket.ConnectAsyncCore(Uri uri, CancellationToken cancellationToken)\r\n          d:\\repos\\corefx\\src\\System.Net.WebSockets.Client\\tests\\ConnectTest.cs(118,0): at System.Net.WebSockets.Client.Tests.ConnectTest.ConnectAsync_AddHostHeader_Success()\r\n          --- End of stack trace from previous location where exception was thrown ---\r\n```\r\nIt's talking to the remote echo server, and it's getting back a 404.\r\nhttps://github.com/dotnet/corefx/blob/b8a7f34e1b64e5c594f591aa8683f34506eb9736/src/System.Net.WebSockets.Client/tests/ConnectTest.cs#L96\r\n\r\ncc: @davidsh","Url":"https://github.com/dotnet/corefx/issues/39271","RelatedDescription":"Open issue \"ConnectTest.ConnectAsync_AddHostHeader_Success test failing on all platforms\" (#39271)"},{"Id":"464991256","IsPullRequest":false,"CreatedAt":"2019-07-07T21:13:32","Actor":"stephentoub","Number":"39269","RawContent":null,"Title":"ApplicationException while trying to build corefx in WSL","State":"closed","Body":"I keep hitting `ApplicationException` with the message `Object synchronization method was called from an unsynchronized block of code.` while trying to build corefx:\r\n```\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error MSB3883: Unexpected exception:  [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : System.AggregateException: One or more errors occurred. (Object synchronization method was called from an unsynchronized block of code.) [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : ---> System.ApplicationException: Object synchronization method was called from an unsynchronized block of code. [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : at System.Threading.Mutex.ReleaseMutex() [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : at Microsoft.CodeAnalysis.CommandLine.ServerNamedMutex.Dispose() [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : at Microsoft.CodeAnalysis.CommandLine.BuildServerConnection.RunServerCompilationCore(RequestLanguage language, List`1 arguments, BuildPathsAlt buildPaths, String pipeName, String keepAlive, String libEnvVariable, Nullable`1 timeoutOverride, Func`3 tryCreateServerFunc, CancellationToken cancellationToken) [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : --- End of inner exception stack trace --- [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken) [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken) [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n/home/stoub/.nuget/packages/microsoft.net.compilers.toolset/3.3.0-beta1-19327-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : at Microsoft.CodeAnalysis.BuildTasks.ManagedCompiler.ExecuteTool(String pathToTool, String responseFileCommands, String commandLineCommands) [/mnt/d/repos/corefxwsl/src/System.Net.NameResolution/ref/System.Net.NameResolution.csproj]\r\n    0 Warning(s)\r\n    10 Error(s)\r\n```\r\nI'm not sure if the issue is with coreclr and Mutex (@kouvel), with Roslyn (@agocke), or somehow with my environment.","Url":"https://github.com/dotnet/corefx/issues/39269","RelatedDescription":"Closed issue \"ApplicationException while trying to build corefx in WSL\" (#39269)"},{"Id":"464947361","IsPullRequest":true,"CreatedAt":"2019-07-07T20:34:41","Actor":"dotnet-maestro[bot]","Number":"39262","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190706.07\r\n- **Date Produced**: 7/7/2019 4:31 AM\r\n- **Commit**: deba7410a351243eef2d00e7f3b87d095be7a847\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27906-07\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview8-27906-07\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview8-27906-07\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39262","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#39262)"},{"Id":"464984350","IsPullRequest":false,"CreatedAt":"2019-07-07T19:25:09","Actor":"johnkellyoxford","Number":"39268","RawContent":null,"Title":"Consider providing a `string.Create` method which accepts a ROS<T> or ROS<char> as state","State":"open","Body":"Currently, `string.Create` only accepts a generic `TState` as the state, which means `ReadOnlySpan<T>` and `Span<T>` can't be used as state. In situations where, for example, the state is a stackalloc'd buffer which can't be converted to a ROM<T>. It can be unpleasantly worked around with pinning and passing pointer and length manually, but it is ugly and clunky. It seems simple enough to add\r\n\r\n```cs\r\npublic delegate void SpanReadOnlySpanAction<TSpan, TReadOnlySpan>(Span<TSpan> span, ReadOnlySpan<TReadOnlySpan>)\r\n```\r\n\r\n( with potentially nicer naming )\r\n\r\nand provide a `string.Create<TState>(int length, ReadOnlySpan<TState> state, SpanReadOnlySpanAction action` that is basically the same as the current impl. ","Url":"https://github.com/dotnet/corefx/issues/39268","RelatedDescription":"Open issue \"Consider providing a `string.Create` method which accepts a ROS<T> or ROS<char> as state\" (#39268)"},{"Id":"464972636","IsPullRequest":true,"CreatedAt":"2019-07-07T17:05:15","Actor":"ViktorHofer","Number":"39267","RawContent":null,"Title":"Remove launchsettings copying","State":"open","Body":"Requires https://github.com/dotnet/arcade/pull/3240","Url":"https://github.com/dotnet/corefx/pull/39267","RelatedDescription":"Open PR \"Remove launchsettings copying\" (#39267)"},{"Id":"464917739","IsPullRequest":false,"CreatedAt":"2019-07-07T16:34:48","Actor":"davidfowl","Number":"39259","RawContent":null,"Title":"Remove PipeReaderStream.ReadAsync state machine allocation","State":"closed","Body":"We can implement `IValueTaskSource<int>` on the `PipeReaderStream` and remove the per ReadAsync allocations and state machine (by using the PipeReaderStream as the state machine)","Url":"https://github.com/dotnet/corefx/issues/39259","RelatedDescription":"Closed issue \"Remove PipeReaderStream.ReadAsync state machine allocation\" (#39259)"},{"Id":"464961996","IsPullRequest":false,"CreatedAt":"2019-07-07T15:05:50","Actor":"ViktorHofer","Number":"39266","RawContent":null,"Title":"SetPrincipalPolicy doesn't work on Windows arm32","State":"open","Body":"We should check if that API is stubbed out on Windows IOT arm32.\r\n\r\n```\r\nMicrosoft.DotNet.RemoteExecutor.RemoteExecutionException : Remote process failed with an unhandled exception.\r\n\r\nChild exception:\r\n  Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n          ↓ (pos 0)\r\nExpected: WORKGROUP\\ddvsohumw014$\r\nActual:   NT AUTHORITY\\SYSTEM\r\n          ↑ (pos 0)\r\n   at System.Threading.Threads.Tests.ThreadTests.<>c.<WindowsPrincipalPolicyTest_Windows>b__38_0() in /_/src/System.Threading.Thread/tests/ThreadTests.cs:line 1120\r\n\r\nChild process:\r\n  System.Threading.Thread.Tests, Version=4.1.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 System.Threading.Threads.Tests.ThreadTests+<>c Void <WindowsPrincipalPolicyTest_Windows>b__38_0()\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=254185&view=ms.vss-test-web.build-test-results-tab&runId=6627138&resultId=102067&paneView=debug\r\n\r\ncc @joperezr ","Url":"https://github.com/dotnet/corefx/issues/39266","RelatedDescription":"Open issue \"SetPrincipalPolicy doesn't work on Windows arm32\" (#39266)"},{"Id":"464961807","IsPullRequest":false,"CreatedAt":"2019-07-07T15:03:53","Actor":"realdevhl","Number":"39265","RawContent":null,"Title":"System.Text.Json Deserialization Internal setters dont get set","State":"open","Body":"Internal setters are not getting set.  The below works fine when removing the internal keyword. \r\n\r\n`public class Foo\r\n{\r\n    private string _value;\r\n    public string Value\r\n    {\r\n        get => _value;\r\n        internal set => _value = value.ToUpper();\r\n    }\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n\r\n        Foo foo = System.Text.Json.Serialization.JsonSerializer.Parse<Foo>(\"{\\\"Value\\\": \\\"asd\\\"}\");\r\n\r\n        Console.WriteLine(\"Hello World!\");\r\n    }\r\n}`","Url":"https://github.com/dotnet/corefx/issues/39265","RelatedDescription":"Open issue \"System.Text.Json Deserialization Internal setters dont get set\" (#39265)"},{"Id":"464949132","IsPullRequest":true,"CreatedAt":"2019-07-07T14:17:10","Actor":"dotnet-maestro[bot]","Number":"39264","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190706.2\r\n- **Date Produced**: 7/7/2019 12:39 AM\r\n- **Commit**: 87ee8ca1df30937ba6c3a4a75beb9a5231fc9b59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19356.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19356.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview8.19356.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39264","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#39264)"},{"Id":"464947766","IsPullRequest":true,"CreatedAt":"2019-07-07T14:01:21","Actor":"dotnet-maestro[bot]","Number":"39263","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190706.5\r\n- **Date Produced**: 7/7/2019 1:21 AM\r\n- **Commit**: 15abdfc3816352c64098735b79a98dd97524ee36\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview8.19356.5\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19356.5\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39263","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#39263)"},{"Id":"464945474","IsPullRequest":true,"CreatedAt":"2019-07-07T13:29:14","Actor":"dotnet-maestro[bot]","Number":"39261","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19356.1\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19356.1\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19356.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39261","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#39261)"},{"Id":"464944593","IsPullRequest":false,"CreatedAt":"2019-07-07T11:53:27","Actor":"parxal","Number":"39260","RawContent":null,"Title":" HttpClient still forcing spaces into Accept headers ","State":"open","Body":"HttpClient forcing spaces into Accept headers with parameters breaking non-conforming REST.\r\nWhen setting httpClient accept header.  Strings are forced with a space between the ;\r\nThis as been reported here :\r\nhttps://github.com/dotnet/corefx/issues/18449\r\nhttps://github.com/dotnet/corefx/issues/22472\r\n\r\nBut still happens in version 2.2\r\n```\r\n\r\n static void Main(string[] args)\r\n        {\r\n            var httpClient = new HttpClient();\r\n            var request = new HttpRequestMessage(HttpMethod.Get, \"http://google.com\");\r\n            request.Headers.Add(\"Accept\", \"application/json;version=1\");\r\n            var result = httpClient.SendAsync(request).Result;\r\n            Console.ReadLine();\r\n        }\r\n```\r\n\r\nIf you check Fiddler, accept is : \"application/json; version=1\" and not \"application/json;version=1\" , there's a space after ; \r\n\r\nUnfortunately some API's don't work well with this space.  Is there any workaround?\r\n\r\nWebRequest have the same behaviour as well. witch didn't happen in net  framework 4.5 \r\n```\r\n\r\nvar webRequest = (HttpWebRequest)System.Net.WebRequest.Create($\"http://google.com\");\r\nwebRequest.Method = \"POST\";\r\nwebRequest.Accept = \"application/json;version=1\";\r\nwebRequest.GetResponse().GetResponseStream();\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/39260","RelatedDescription":"Open issue \" HttpClient still forcing spaces into Accept headers \" (#39260)"},{"Id":"464917565","IsPullRequest":false,"CreatedAt":"2019-07-07T05:45:40","Actor":"benaadams","Number":"39258","RawContent":null,"Title":"PipeReaderStream does not amortize ValueTask ReadAsync calls","State":"open","Body":"In usage a PipeReaderStream type normally has very many ReadAsync calls made on it.  (Use case WebSockets/SignalR over TLS)\r\n\r\nUsing the ValueTask overloads for PipeReaderStream read allocates a AsyncStateMachineBox per read (when data is not immediately available)\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/60764465-56904980-a082-11e9-9be2-3f217b4a1cb2.png)\r\n\r\nHowever it could use `TryRead` for the sync-path and allocating a IValueTaskSource object the first time that fails to back the async read, and then reuse it each time the read needs to go async again.\r\n\r\nRelated: https://github.com/aspnet/AspNetCore/issues/11940","Url":"https://github.com/dotnet/corefx/issues/39258","RelatedDescription":"Open issue \"PipeReaderStream does not amortize ValueTask ReadAsync calls\" (#39258)"},{"Id":"464917232","IsPullRequest":false,"CreatedAt":"2019-07-07T05:40:06","Actor":"benaadams","Number":"39257","RawContent":null,"Title":"SslStream doesn't amortize its ValueTask ReadAsync calls","State":"open","Body":"In usage a SslStream normally has very many ReadAsync calls made on it.  (Use case WebSockets/SignalR over TLS)\r\n\r\nUsing the ValueTask overloads for SslStream read allocates 2x AsyncStateMachineBox per read (when data is not immediately available)\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/60764450-ff8a7480-a081-11e9-83f3-696b2f187ef6.png)\r\n\r\nHowever it could allocate once; backing with an IValueTaskSource objects that get allocated for the first async and reused when the read goes async again.","Url":"https://github.com/dotnet/corefx/issues/39257","RelatedDescription":"Open issue \"SslStream doesn't amortize its ValueTask ReadAsync calls\" (#39257)"},{"Id":"464917102","IsPullRequest":false,"CreatedAt":"2019-07-07T05:37:34","Actor":"benaadams","Number":"39256","RawContent":null,"Title":"WebSocket doesn't amortize its ValueTask ReadAsync calls","State":"open","Body":"In usage a WebSocket normally has very many ReadAsync calls made on it.  (Use case WebSockets/SignalR over TLS)\r\n\r\nUsing the ValueTask overloads for WebSocket read allocates 2x AsyncStateMachineBox per read (when data is not immediately available)\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/60764376-7de61700-a080-11e9-85ac-6cbb37053893.png)\r\n\r\nHowever it could allocate once; backing with an IValueTaskSource objects that get allocated for the first async and reused when the read goes async again.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/39256","RelatedDescription":"Open issue \"WebSocket doesn't amortize its ValueTask ReadAsync calls\" (#39256)"},{"Id":"464915281","IsPullRequest":true,"CreatedAt":"2019-07-07T05:03:53","Actor":"davidfowl","Number":"39255","RawContent":null,"Title":"Added CompleteAsync to PipeReader and PipeWriter","State":"open","Body":"- Since the introduction of PipeReader and PipeWriter wrappers over a Stream, we need the ability to asynchronously flush buffered data to the stream on complete. This can happen if GetMemory/Advance is called without calling FlushAsync and today that results in data truncation. This change introuduces a way to asynchronously complete a PipeReader or PipeWriter so that we can flush buffered data asynchronously and also dispose the underlying Stream asynchronously.\r\n- Changed StreamPipeWriter to synchronously write and flush buffered data in Complete and asynchronously write and flush buffered data in CompleteAsync.\r\n- Added some tests.\r\n- The DefaultPipeReader and DefaultPipeWriter don't have this problem so they are using the default implementation (which delegates to the syncrhonous Complete).\r\n\r\nWaiting for #39241 ","Url":"https://github.com/dotnet/corefx/pull/39255","RelatedDescription":"Open PR \"Added CompleteAsync to PipeReader and PipeWriter\" (#39255)"},{"Id":"464851105","IsPullRequest":true,"CreatedAt":"2019-07-06T20:47:30","Actor":"dotnet-maestro[bot]","Number":"39252","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190705.2\r\n- **Date Produced**: 7/6/2019 12:42 AM\r\n- **Commit**: 09d454011f5b302ef526036266993f8b0e92f1fd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19355.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19355.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview8.19355.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39252","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#39252)"},{"Id":"464881576","IsPullRequest":true,"CreatedAt":"2019-07-06T18:58:19","Actor":"YohDeadfall","Number":"39254","RawContent":null,"Title":"Added field serialization support to JSON serializer","State":"open","Body":"Unable to run tests locally due to strange failures during building tests, so will see results here, in pipelines.\r\n\r\n/cc @steveharter @ahsonkhan @buyaa-n","Url":"https://github.com/dotnet/corefx/pull/39254","RelatedDescription":"Open PR \"Added field serialization support to JSON serializer\" (#39254)"},{"Id":"464836916","IsPullRequest":false,"CreatedAt":"2019-07-06T16:07:11","Actor":"jchristn","Number":"39246","RawContent":null,"Title":"Reading Console.CursorLeft is blocked by Console.ReadLine in another thread","State":"closed","Body":"I noticed this issue here was closed: https://github.com/dotnet/corefx/issues/24654\r\n\r\nI'm using .NET Core 2.2 and the issue still exists.\r\n\r\nSample code here, run ```dotnet consoletest.dll false``` to see without the ```Console.ReadLine()``` and ```dotnet consoletest.dll``` to see with the ```Console.ReadLine()```.\r\n\r\nWhen running with the ```Console.ReadLine()``` on Ubuntu 18.04, the worker threads are blocked because they are waiting for the value from ```Console.CursorLeft```.\r\n\r\n```\r\nusing System;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n \r\nnamespace ConsoleTest\r\n{\r\n    class Program\r\n    {\r\n        static bool runConsoleWorker = true; \r\n\r\n        static void Main(string[] args)\r\n        { \r\n            if (args != null && args.Length > 0)\r\n            {\r\n                if (args[0].Equals(\"false\")) runConsoleWorker = false;\r\n            }\r\n\r\n            Task.Run(() => BackgroundWorker(\"Worker 1 says hello\"));\r\n            Task.Run(() => BackgroundWorker(\"Worker 2 says hello\"));\r\n\r\n            if (runConsoleWorker)\r\n            {\r\n                Console.WriteLine(\"Starting console worker...\");\r\n                ConsoleWorker();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Awaiting wait handle...\");\r\n                EventWaitHandle waitHandle = new EventWaitHandle(false, EventResetMode.AutoReset, null);\r\n                bool waitHandleSignal = false;\r\n                do\r\n                {\r\n                    waitHandleSignal = waitHandle.WaitOne(1000);\r\n                }\r\n                while (!waitHandleSignal);\r\n            }\r\n        }\r\n\r\n        static void ConsoleWorker()\r\n        {\r\n            while (true)\r\n            {\r\n                Console.Write(\"Enter some text: \");\r\n                Console.ReadLine();\r\n            }\r\n        }\r\n\r\n        static void BackgroundWorker(string text)\r\n        {\r\n            while (true)\r\n            {\r\n                Task.Delay(1000).Wait(); \r\n                if (Console.CursorLeft != 0) Console.WriteLine(\"\");\r\n                Console.WriteLine(text);\r\n            }\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/39246","RelatedDescription":"Closed issue \"Reading Console.CursorLeft is blocked by Console.ReadLine in another thread\" (#39246)"},{"Id":"464851749","IsPullRequest":true,"CreatedAt":"2019-07-06T14:49:36","Actor":"dotnet-maestro[bot]","Number":"39253","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 11:05 AM\r\n- **Commit**: d39ddd0e9998600cf34f654177db53a97ef2fec7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190706.1\r\n\r\n[marker]: <> (End:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39253","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#39253)"},{"Id":"464849818","IsPullRequest":true,"CreatedAt":"2019-07-06T14:20:04","Actor":"dotnet-maestro[bot]","Number":"39251","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190705.7\r\n- **Date Produced**: 7/6/2019 4:27 AM\r\n- **Commit**: 6c6d68558aaccbd16de6e84cf7e59c0fb32b8273\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview8.19355.7\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19355.7\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39251","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#39251)"},{"Id":"464849426","IsPullRequest":true,"CreatedAt":"2019-07-06T14:00:14","Actor":"dotnet-maestro[bot]","Number":"39250","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190705.12\r\n- **Date Produced**: 7/6/2019 6:32 AM\r\n- **Commit**: aa4edf155229620edc2962671fbff5dd6e68f6b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27905-12\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview8-27905-12\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview8-27905-12\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39250","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#39250)"},{"Id":"464847900","IsPullRequest":true,"CreatedAt":"2019-07-06T13:34:21","Actor":"dotnet-maestro[bot]","Number":"39249","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190705.2\r\n- **Date Produced**: 7/5/2019 11:56 PM\r\n- **Commit**: 3e0cbbc6fd6c6d45d7083ee0deb71cec7ea2d91f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19355.2\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19355.2\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19355.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19355.2\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39249","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#39249)"},{"Id":"464845616","IsPullRequest":false,"CreatedAt":"2019-07-06T11:35:23","Actor":"karthickthangasamy","Number":"39248","RawContent":null,"Title":"[System.Text.Json] Flag attribute enum serialization and deserialization","State":"open","Body":"**Description:**\r\n\r\nOption to ignore `enum` from `StringEnumConverter` those have `System.Flags` attribute.\r\n\r\n**Issue:** The `System.Flags` enumerations serialized to comma separated keys. This is also the same behavior of `JSON.NET`, where as we can ignore the serialization and deserialization of number enum with `System.Flags` using the below code snippet in `JSON.NET`.\r\n\r\n**System.Text.Json version : `4.6.0-preview8.19355.7`**\r\n\r\n```c#\r\n[System.Flags]\r\npublic enum ValueConstraints\r\n    {   \r\n        Bridging = 1 << 1,\r\n        Default = 1 << 2 | 1 << 4 | 1 << 5 | 1 << 6 | 1 << 7 | 1 << 8,\r\n        None = 1 << 0\r\n    }\r\n```\r\n**Custom converter:**\r\n\r\n```c#\r\ninternal class NonFlagStringEnumConverter : StringEnumConverter\r\n    {\r\n        public override bool CanConvert(Type objectType)\r\n        {\r\n            if (!base.CanConvert(objectType))\r\n                return false;\r\n            Type underlyingType = (Nullable.GetUnderlyingType(objectType) ?? objectType);            \r\n            var attributes = underlyingType.GetCustomAttributes(typeof(FlagsAttribute), false);\r\n            return attributes.Length == 0;\r\n        }\r\n    }\r\n```\r\n\r\n**Reference link** : [https://stackoverflow.com/a/29592249/1954766](https://stackoverflow.com/a/29592249/1954766)\r\n\r\n**Expected:** How to achieve the same behavior to exclude the number or bitwise enumerations from serialization.\r\n\r\n**Code example of `System.Text.Json`**\r\n\r\n[`Program.cs`]\r\n```\r\n class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var jsonResponse = new SerializationClass()\r\n            {\r\n               \r\n                Constraints = ValueConstraints.Bridging | ValueConstraints.Default,\r\n                IconPosition = IconPosition.Right\r\n            };\r\n\r\n            JsonSerializerOptions serializerOptions = new JsonSerializerOptions\r\n            {\r\n                IgnoreNullValues = true,\r\n                WriteIndented = true\r\n            };\r\n\r\n            serializerOptions.Converters.Add(new JsonStringEnumConverter { });\r\n            string items = JsonSerializer.Serialize(jsonResponse, jsonResponse.GetType(), serializerOptions);\r\n            Console.WriteLine(items);\r\n        }\r\n    }\r\n\r\n    public class SerializationClass\r\n    {       \r\n        [DefaultValue(ValueConstraints.Default)]\r\n        [JsonPropertyName(\"constraints\")]\r\n       \r\n        public ValueConstraints Constraints\r\n        {\r\n            get\r\n            {\r\n                return this._constraints;\r\n            }\r\n            set\r\n            {\r\n                if (_constraints != value)\r\n                {\r\n                    this._constraints = value;\r\n                }\r\n            }\r\n        }\r\n        protected ValueConstraints _constraints { get; set; } = ValueConstraints.Default;\r\n\r\n        [DefaultValue(IconPosition.Left)]\r\n        [JsonPropertyName(\"iconPosition\")]\r\n        public IconPosition IconPosition\r\n        {\r\n            get\r\n            {\r\n                return this._iconPosition;\r\n            }\r\n            set\r\n            {\r\n                if (_iconPosition != value)\r\n                {\r\n                    this._iconPosition = value;\r\n                }\r\n            }\r\n        }\r\n        protected IconPosition _iconPosition { get; set; } = IconPosition.Left;\r\n\r\n    }\r\n```\r\n\r\n[`EnumValues.cs`]\r\n```c#\r\n[System.Flags]\r\n    public enum ValueConstraints\r\n    {        \r\n        Bridging = 1 << 1,\r\n        Default = 1 << 2 | 1 << 4 | 1 << 5 | 1 << 6 | 1 << 7 | 1 << 8,\r\n        None = 1 << 0,\r\n        ZoomTextEdit = 1 << 9\r\n    }\r\n    public enum IconPosition\r\n    {\r\n        [EnumMember(Value = \"Left\")]\r\n        Left,\r\n        [EnumMember(Value = \"Right\")]\r\n        Right,\r\n        [EnumMember(Value = \"Top\")]\r\n        Top,\r\n        [EnumMember(Value = \"Bottom\")]\r\n        Bottom,\r\n    }\r\n\r\n```\r\n\r\n**Actual output:**\r\n```bash\r\n{\r\n  \"constraints\": \"Bridging , Default\",\r\n  \"iconPosition\": \"Right\"\r\n}\r\n```\r\n**Expected output:**\r\n\r\n```bash\r\n{\r\n  \"constraints\": 502,\r\n  \"iconPosition\": \"Right\"\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/39248","RelatedDescription":"Open issue \"[System.Text.Json] Flag attribute enum serialization and deserialization\" (#39248)"},{"Id":"464845426","IsPullRequest":false,"CreatedAt":"2019-07-06T11:33:06","Actor":"shutdown256","Number":"39247","RawContent":null,"Title":"Proposal: MemoryPool.RentExact() returns IMemoryOwner with pre-sliced Memory","State":"open","Body":"I found it really disappointing that MemoryPool.Rent behaves as ArrayPool and can return Memory that is larger then what I want - it makes sense for arrays but Memory could be easily pre-sliced to required size - this will most importantly allow passing this IMemoryOwner to outside code without the need to pass along another variable indicating the actual length of the data and slicing the underling memory every time you want to access it. This could even allow to have more efficient MemoryPool implementation which could rent several IMemoryOwners from the same block of memory. It would also be a lot simpler to implement then #33372 (but it is not mutually exclusive).","Url":"https://github.com/dotnet/corefx/issues/39247","RelatedDescription":"Open issue \"Proposal: MemoryPool.RentExact() returns IMemoryOwner with pre-sliced Memory\" (#39247)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"465012864","IsPullRequest":false,"CreatedAt":"2019-07-08T00:52:47","Actor":"drewnoakes","Number":"37040","RawContent":null,"Title":"Passing extension method as method group causes invalid CS8622","State":"open","Body":"**Version Used**: 3.3.0-beta1-19327-04\r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nclass C\r\n{\r\n    IEnumerable<string> M(IEnumerable<C> source)\r\n    {\r\n        var d = new D();\r\n\r\n        return source.Select(d.Ext);\r\n        //                   ^^^^^\r\n        // CS8622 Nullability of reference types in type of parameter 'd' of\r\n        // 'string Extensions.Ext(D d, C item)' doesn't match the target\r\n        // delegate 'Func<C, string>'.\r\n    }\r\n}\r\n\r\nclass D { }\r\n\r\nstatic class Extensions\r\n{\r\n    public static string Ext(this D d, C item) => \"\";\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo diagnostic.\r\n\r\n**Actual Behavior**:\r\n\r\nCS8622.","Url":"https://github.com/dotnet/roslyn/issues/37040","RelatedDescription":"Open issue \"Passing extension method as method group causes invalid CS8622\" (#37040)"},{"Id":"465011262","IsPullRequest":false,"CreatedAt":"2019-07-08T00:39:40","Actor":"drewnoakes","Number":"37039","RawContent":null,"Title":"Invalid CS8629 after nullable reference type comparison","State":"open","Body":"**Version Used**: 3.3.0-beta1-19327-04\r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nint FindLargest(IEnumerable<int?> ints)\r\n{\r\n    int largest = int.MinValue;\r\n\r\n    foreach (int? i in ints)\r\n    {\r\n        if (i > largest)\r\n        {\r\n            largest = i.Value; // CS8629 Nullable value type may be null\r\n        }\r\n    }\r\n\r\n    return largest;\r\n}\r\n```\r\n\r\nThis requires the loop to trigger. This simple form doesn't have a diagnostic:\r\n\r\n```c#\r\nint M(int? i) => i > 0 ? i.Value : 0;\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nCompiler learns that `i` is not null when integer comparison succeed and does not produce a diagnostic.\r\n\r\n**Actual Behavior**:\r\n\r\nCS8629 diagnostic.","Url":"https://github.com/dotnet/roslyn/issues/37039","RelatedDescription":"Open issue \"Invalid CS8629 after nullable reference type comparison\" (#37039)"},{"Id":"465009565","IsPullRequest":false,"CreatedAt":"2019-07-08T00:25:16","Actor":"davkean","Number":"37038","RawContent":null,"Title":"Completion for \"Show items from unimported namespaces\" within a using alias results in unbuildable code","State":"open","Body":"Using aliases need to full specify types used as generic arguments. \"Show items from unimported namespaces\" is unaware of that and attempts to add a using directive, which still results in a build error.\r\n\r\n**Steps to Reproduce**:\r\n\r\n``` C#\r\nusing System;\r\n\r\nusing CollectionOfStringBuilders = System.Collections.Generic.List<StringBui>\r\n```\r\n\r\n**Expected Behavior**:\r\n``` C#\r\nusing System;\r\n\r\nusing CollectionOfStringBuilders = System.Collections.Generic.List<System.Text.StringBuilder>\r\n```\r\n\r\n**Actual Behavior**:\r\n``` C#\r\nusing System;\r\nusing System.Text;\r\nusing CollectionOfStringBuilders = System.Collections.Generic.List<StringBuilder>\r\n```\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0246\tThe type or namespace name 'StringBuilder' could not be found (are you missing a using directive or an assembly reference?)\tConsoleApp5\tC:\\Users\\davkean\\source\\repos\\ConsoleApp5\\ConsoleApp5\\Program.cs\t3\tActive\r\n```\r\n\r\ntag @genlu ","Url":"https://github.com/dotnet/roslyn/issues/37038","RelatedDescription":"Open issue \"Completion for \"Show items from unimported namespaces\" within a using alias results in unbuildable code\" (#37038)"},{"Id":"464997182","IsPullRequest":false,"CreatedAt":"2019-07-07T21:52:35","Actor":"McKabue","Number":"37037","RawContent":null,"Title":"Add a new C# operator \"in\" to check if an item is in the data structure.","State":"open","Body":"I would like to help create the **in** operator in C#, where do i start?\r\n\r\n`\"hi\" in new string[] { \"hello\", \"hi\" } => true`\r\n","Url":"https://github.com/dotnet/roslyn/issues/37037","RelatedDescription":"Open issue \"Add a new C# operator \"in\" to check if an item is in the data structure.\" (#37037)"},{"Id":"464955798","IsPullRequest":true,"CreatedAt":"2019-07-07T14:00:50","Actor":"huoyaoyuan","Number":"37036","RawContent":null,"Title":"Fix significant wrong translation in CodeStyle.Resources.zh-Hans.xlf","State":"open","Body":"This could be agreed by anyone who understands Chinese. I just used the correct translation from Traditional Chinese version.","Url":"https://github.com/dotnet/roslyn/pull/37036","RelatedDescription":"Open PR \"Fix significant wrong translation in CodeStyle.Resources.zh-Hans.xlf\" (#37036)"},{"Id":"464943554","IsPullRequest":false,"CreatedAt":"2019-07-07T11:40:57","Actor":"JohanLarsson","Number":"37035","RawContent":null,"Title":"Convert to switch replaces with broken code.","State":"open","Body":"![Animation](https://user-images.githubusercontent.com/1640096/60767776-996f1300-a0bc-11e9-984d-9ca4089602bc.gif)\r\n\r\n\r\n```cs\r\n        private static bool TryGetCached(ExpressionSyntax expression, SemanticModel semanticModel, CancellationToken cancellationToken, out ArgumentSyntax nameArg)\r\n        {\r\n            var cached = semanticModel.GetSymbolSafe(expression, cancellationToken);\r\n            if (cached is IFieldSymbol field &&\r\n                field.TrySingleDeclaration(cancellationToken, out var fieldDeclaration) &&\r\n                fieldDeclaration.Declaration.Variables.TryLast(out var variable) &&\r\n                variable.Initializer is EqualsValueClauseSyntax fieldInitializer)\r\n            {\r\n                return TryGetCreation(fieldInitializer.Value, out nameArg);\r\n            }\r\n\r\n            if (cached is IPropertySymbol property &&\r\n                property.TrySingleDeclaration(cancellationToken, out PropertyDeclarationSyntax propertyDeclaration))\r\n            {\r\n                return TryGetCreation(propertyDeclaration.Initializer?.Value, out nameArg);\r\n            }\r\n\r\n            if (cached is ILocalSymbol local &&\r\n                local.TrySingleDeclaration(cancellationToken, out VariableDeclarationSyntax variableDeclaration) &&\r\n                variableDeclaration.Variables.TryLast(out variable) &&\r\n                variable.Initializer is EqualsValueClauseSyntax initializer)\r\n            {\r\n                return TryGetCreation(initializer.Value, out nameArg);\r\n            }\r\n\r\n            nameArg = null;\r\n            return false;\r\n        }\r\n```\r\n\r\nRepro here: https://github.com/DotNetAnalyzers/PropertyChangedAnalyzers/commit/952474177456a890639373a267840aca368ea428","Url":"https://github.com/dotnet/roslyn/issues/37035","RelatedDescription":"Open issue \"Convert to switch replaces with broken code.\" (#37035)"},{"Id":"464915180","IsPullRequest":true,"CreatedAt":"2019-07-07T05:02:29","Actor":"mavasani","Number":"37034","RawContent":null,"Title":"Show infobar for recommending installation of FxCopAnalyzers NuGet/VSIX","State":"open","Body":"Addresses part of https://github.com/dotnet/roslyn-analyzers/issues/2023. This is the first item in our 16.3 user story to **improve discoverability and ease of installation of Microsoft recommended FxCop analyzers inside Visual Studio**.\r\n\r\nThis PR converts our current experimental feature that recommends installation of [FxCopAnalyzers VSIX](https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MicrosoftCodeAnalysis2019) into a non-experimental feature that recommends installation of [FxCopAnalyzers NuGet or VSIX](https://docs.microsoft.com/en-us/visualstudio/code-quality/install-fxcop-analyzers?view=vs-2019).\r\nAll the experimental checks have been removed, but I have retained all the existing logic about when the info bar shows up (light bulb invoked on 3 separate days for separate VS sessions).\r\n\r\n![image](https://user-images.githubusercontent.com/10605811/60764141-9af6f780-a038-11e9-8fb9-fc59f8dca204.png)\r\n\r\n1. `Build + Live Analysis (NuGet package)`: Opens NuGet package manager with `Microsoft.CodeAnalysis.FxCopAnalyzers` as the search string to enable single click installation of analyzer package for current project/solution\r\n2. `Live Analysis (VSIX Extension)`: Opens Microsoft Code Analysis 2019 VSIX (https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MicrosoftCodeAnalysis2019)\r\n3. `Learn more`: Opens Microsoft [documentation](https://docs.microsoft.com/visualstudio/code-quality/install-fxcop-analyzers) on FxCop analyzers installation\r\n4. `Never show this again`: Disables this feature for the user","Url":"https://github.com/dotnet/roslyn/pull/37034","RelatedDescription":"Open PR \"Show infobar for recommending installation of FxCopAnalyzers NuGet/VSIX\" (#37034)"},{"Id":"464798649","IsPullRequest":true,"CreatedAt":"2019-07-06T22:42:51","Actor":"dotnet-bot","Number":"37028","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37028","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#37028)"},{"Id":"464843827","IsPullRequest":false,"CreatedAt":"2019-07-06T11:10:05","Actor":"roji","Number":"37033","RawContent":null,"Title":"MaybeNullAttribute being erased when trying to reflect with compiler 3.3.0-beta1-19351-01","State":"open","Body":"When trying to parse nullability metadata via reflection (in the absence of https://github.com/dotnet/corefx/issues/38087), MaybeNullAttribute doesn't seem to be visible with the latest compiler nuget:\r\n\r\n```c#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var propertyInfo = typeof(Program).GetProperty(nameof(TestString));\r\n        var attributes = propertyInfo.GetCustomAttributes();\r\n\r\n        // With Microsoft.Net.Compilers.Toolset version 3.3.0-beta1-19351-01, prints only DisplayNameAttribute\r\n        // With Microsoft.Net.Compilers.Toolset version 3.2.0-beta3-final, prints also MaybeNull\r\n        Console.WriteLine(string.Join(\", \", attributes));\r\n    }\r\n\r\n    [MaybeNull, DisplayName]\r\n    public string TestString { get; set; } = default!;\r\n}\r\n```\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <LangVersion>8.0</LangVersion>\r\n    <Nullable>enable</Nullable>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Net.Compilers.Toolset\" Version=\"3.3.0-beta1-19351-01\" PrivateAssets=\"all\" IsImplicitlyDefined=\"true\" />\r\n<!--\r\n    <PackageReference Include=\"Microsoft.Net.Compilers.Toolset\" Version=\"3.2.0-beta3-final\" PrivateAssets=\"all\" IsImplicitlyDefined=\"true\" />\r\n-->\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37033","RelatedDescription":"Open issue \"MaybeNullAttribute being erased when trying to reflect with compiler 3.3.0-beta1-19351-01\" (#37033)"},{"Id":"464821502","IsPullRequest":false,"CreatedAt":"2019-07-06T05:56:33","Actor":"ABCRic","Number":"37032","RawContent":null,"Title":"Result of null-conditional access not clearing nullability of receiver inside if statement body, when assigned to a variable","State":"open","Body":"**Version Used**: http://sharplab.io, commit 898bed74a765fedf3071c6f25c3804995d39c7fa (master 21 Jun 2019)\r\n\r\n**Steps to Reproduce**:\r\nhttps://sharplab.io/#v2:EYLgtghgzgLgpgJwD4AEBMBGAsAKAMQB2ArgDYkTAlwAEcBFVuKAzNetQMLUDeu1/bVigAs1AIIAKAJQ8+AgJAA3CAmqxVAXmoAhaQG45AgctVUC1LeoD8AOgAydAOYwAFgZxGjASwBmEs9QAhFrEZFKGnvIoGACcEuo2ACoIXmDSUu5GAL4RESxsGAAMVjrSsh4KKADs1ABEtZkCOThZQA=\r\n```csharp\r\nusing System;\r\n#nullable enable\r\npublic class C {\r\n    public void A() {\r\n    \tvar str = B();\r\n        var len = str?.Length;\r\n        if(len != null)\r\n            Console.WriteLine(str.Trim());\r\n    }\r\n    \r\n    public string? B() {\r\n    \treturn \"\";\r\n    }\r\n}\r\n```\r\n**Expected Behavior**:\r\nNo warnings. If `str` is null, then `str?.Length` is null, then `len` is null, then the `if` body is not executed. Therefore the `if` body is only executed if `str` is not null.\r\nNote that manually inlining `len` like so:\r\n```csharp\r\nif(str?.Length != null)\r\n```\r\nmakes the warning go away as expected.\r\n\r\n**Actual Behavior**:\r\n`warning CS8602: Dereference of a possibly null reference` for `str` in the call to `str.Trim()`","Url":"https://github.com/dotnet/roslyn/issues/37032","RelatedDescription":"Open issue \"Result of null-conditional access not clearing nullability of receiver inside if statement body, when assigned to a variable\" (#37032)"},{"Id":"464806948","IsPullRequest":false,"CreatedAt":"2019-07-06T01:53:14","Actor":"sharwell","Number":"37031","RawContent":null,"Title":"Fixed statement should follow csharp_space_after_keywords_in_control_flow_statements","State":"open","Body":"The formatter does not account for `csharp_space_after_keywords_in_control_flow_statements` when formatting a `fixed` statement, but should.\r\n\r\nSet `csharp_space_after_keywords_in_control_flow_statements` to `false` and then format the following:\r\n\r\n```csharp\r\nclass SomeType {\r\n  unsafe void Method() {\r\n    fixed (byte* x = new byte[3]) {\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Expected result\r\n\r\nThe space is removed:\r\n\r\n```csharp\r\nclass SomeType {\r\n  unsafe void Method() {\r\n    fixed(byte* x = new byte[3]) {\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Actual result\r\n\r\nThe spacing is not changed.","Url":"https://github.com/dotnet/roslyn/issues/37031","RelatedDescription":"Open issue \"Fixed statement should follow csharp_space_after_keywords_in_control_flow_statements\" (#37031)"},{"Id":"464806730","IsPullRequest":false,"CreatedAt":"2019-07-06T01:49:56","Actor":"sharwell","Number":"37030","RawContent":null,"Title":"Enum member formatting should follow csharp_space_around_declaration_statements","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Set `csharp_space_around_declaration_statements` to `ignore`\r\n2. Create an enum with aligned values\r\n\r\n    ```csharp\r\n    enum SomeEnum\r\n    {\r\n      First =  1,\r\n      Second = 2,\r\n    }\r\n    ```\r\n\r\n3. Format document\r\n\r\n**Expected Behavior**:\r\n\r\nThe spacing in the enum is not changed.\r\n\r\n**Actual Behavior**:\r\n\r\nThe spacing in the enum is changed.\r\n\r\n```csharp\r\nenum SomeEnum\r\n{\r\n  First = 1,\r\n  Second = 2,\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37030","RelatedDescription":"Open issue \"Enum member formatting should follow csharp_space_around_declaration_statements\" (#37030)"},{"Id":"464785575","IsPullRequest":false,"CreatedAt":"2019-07-06T01:39:49","Actor":"moh-hassan","Number":"37023","RawContent":null,"Title":"Feature Request: Enable using static string properties like  a constan expression  for  Attributes.","State":"closed","Body":"When trying to localize Attributes using a resource file `EmployeeResx.resx , EmployeeResx.fr.res....`, static class EmployeeResx.Designer.cs is generated with static string properties like:\r\n\r\n\r\n        public static string LastName {\r\n            get {\r\n                return ResourceManager.GetString(\"LastName\", resourceCulture);\r\n            }\r\n        } \r\n \r\n Trying to use the static string fo localize the Attributes (Option in this example), like:\r\n \r\n         [Option('l', \"lastname\",  HelpText = EmployeeResx.LastName)]\r\n         public string  LastName { get; set; }\r\n \r\n c# compiler raise error:\r\n>Error\tCS0182\tAn attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type\t\r\n\r\nWe have to write long, complex code (for every class Attribute) to localize the Property as:\r\n\r\n          [Option('l', \"lastname\",  HelpText = \"LastName\" ,  ResourceType = typeof(EmployeeResx))]\r\n          public string  LastName { get; set; }\r\n\r\nIt's nice if  Roslyn can help to support the static string  for localizing attributes as explained above.\r\nThis a common task for localizing Attributes.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/37023","RelatedDescription":"Closed issue \"Feature Request: Enable using static string properties like  a constan expression  for  Attributes.\" (#37023)"},{"Id":"464800410","IsPullRequest":false,"CreatedAt":"2019-07-06T00:22:14","Actor":"sharwell","Number":"37029","RawContent":null,"Title":"Update compiler diagnostics before running analyzers","State":"open","Body":"After making an edit to a document in Visual Studio, diagnostics (squiggles and error list entries) for compiler-reported errors should be updated before running analyzers.\r\n\r\nFor example, consider the following code:\r\n\r\n```csharp\r\nclass SomeType {\r\n  void SomeMethod() {\r\n    return\r\n  }\r\n}\r\n```\r\n\r\nThe syntax error for the missing semicolon is quickly corrected by the compiler once the user adds `;`. Slower analyzers should not prevent the IDE from updating squiggles and error list to immediately show the correction.","Url":"https://github.com/dotnet/roslyn/issues/37029","RelatedDescription":"Open issue \"Update compiler diagnostics before running analyzers\" (#37029)"},{"Id":"464798628","IsPullRequest":true,"CreatedAt":"2019-07-06T00:02:02","Actor":"dotnet-bot","Number":"37027","RawContent":null,"Title":"Merge master to features/lspSupport","State":"open","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37027","RelatedDescription":"Open PR \"Merge master to features/lspSupport\" (#37027)"},{"Id":"464798524","IsPullRequest":true,"CreatedAt":"2019-07-06T00:01:13","Actor":"dotnet-bot","Number":"37026","RawContent":null,"Title":"Merge release/dev16.3-preview1-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.3-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37026","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1-vs-deps to master-vs-deps\" (#37026)"},{"Id":"464796678","IsPullRequest":true,"CreatedAt":"2019-07-05T23:42:00","Actor":"ivanbasov","Number":"37025","RawContent":null,"Title":"EnC emit tests for C# 8.0 patterns","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/37025","RelatedDescription":"Open PR \"EnC emit tests for C# 8.0 patterns\" (#37025)"},{"Id":"464781599","IsPullRequest":true,"CreatedAt":"2019-07-05T23:32:50","Actor":"genlu","Number":"37020","RawContent":null,"Title":"Optimize flow analysis","State":"closed","Body":"This is porting #36964 to master. \r\n\r\nI have verified the optprof config files in this build:\r\nhttps://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=2827883\r\n\r\nNow I need to test if the optprof run actually generate the data for flow analysis assembly and if consuming it would fix some RPS regressions related to this assembly, before sending #36964 for 16.2 approval.\r\n\r\nFYI @tmat @mavasani @vatsalyaagrawal @jinujoseph \r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/37020","RelatedDescription":"Closed or merged PR \"Optimize flow analysis\" (#37020)"},{"Id":"464786587","IsPullRequest":false,"CreatedAt":"2019-07-05T22:18:25","Actor":"JamesNK","Number":"37024","RawContent":null,"Title":"AllowNullAttribute not working","State":"open","Body":"Similar to https://github.com/dotnet/roslyn/issues/36986\r\n\r\n---\r\n\r\nI'm converting Newtonsoft.Json to use nullable types and I can't get `AllowNullAttribute` to work. My remaining warnings are related to generic types.\r\n\r\nNote that I have many old targets so I'm using internal nullable attributes (located in NullableAttributes.cs). `NotNullAttribute` and `NotNullWhenAttribute` work fine, but I can't get `AllowNullAttribute` to work. I've tried it in `System.Runtime.CompilerServices` and `System.Diagnostics.CodeAnalysis` namespaces with no result.\r\n\r\nVersion Used: VS2019 + Microsoft.Net.Compilers.Toolset=3.2.0-beta3-final\r\n\r\nSteps to Reproduce:\r\n\r\n1. git clone https://github.com/JamesNK/Newtonsoft.Json.git\r\n2. git checkout jamesnk/nullable-types\r\n3. Go to `JsonConverter<T>.WriteJson` method (JsonConverter.cs, line 97)\r\n\r\n**Expected Behavior**:\r\n\r\nThere should not be a nullable warning because [AllowNull] is on the parameter type.\r\n\r\n**Actual Behavior**:\r\n\r\nThere is a warning casting `object?` to `T`.\r\n\r\n![image](https://user-images.githubusercontent.com/303201/60747147-538c4f00-9fd7-11e9-9836-61920ccc5ec3.png)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/37024","RelatedDescription":"Open issue \"AllowNullAttribute not working\" (#37024)"},{"Id":"464783925","IsPullRequest":true,"CreatedAt":"2019-07-05T22:01:11","Actor":"agocke","Number":"37022","RawContent":null,"Title":"Fix crash in semantic model when using unmanaged constraint","State":"open","Body":"The semantic model sometimes calls public APIs without using a current\r\nCompilation, and we do constraint checking anyway. To check feature flags\r\nwe need a current compilation, but we can skip checking feature flags for\r\nconstraints in the semantic model since it will only result in slightly\r\nworse diagnostic behavior, if anything.\r\n\r\nFixes #37021","Url":"https://github.com/dotnet/roslyn/pull/37022","RelatedDescription":"Open PR \"Fix crash in semantic model when using unmanaged constraint\" (#37022)"},{"Id":"464783405","IsPullRequest":false,"CreatedAt":"2019-07-05T21:57:59","Actor":"vsfeedback","Number":"37021","RawContent":null,"Title":"Generic unmanaged type used with extension method causes 100% repro crash in VS2019","State":"open","Body":"VSF_TYPE_MARKDOWNThe attached file causes VS2019 to crash when it's loaded.\n\nIf I remove the `where T : unmanaged` constraints, it stops crashing.\n\nIt also doesn't crash until I add the `foo. GenericExtension();` line, where it will crash as soon as I type the `n` in `foo. GenericExtension`.\n\n```\nusing System;\n\nnamespace UnmanagedGenericCrash\n{\n    public static class FooExtensions\n    {\n        public static T GenericExtension&lt;T&gt;(ref this T self) where T : unmanaged\n        {\n            return self;\n        }\n    }\n\nclass Program\n    {\n        public struct Foo&lt;T&gt; where T : unmanaged\n        {\n            T t;\n        }\n\nstatic void UseFoo&lt;T&gt;(Foo&lt;T&gt; foo) where T : unmanaged\n        {\n            foo. GenericExtension();\n        }\n\nstatic void Main(string[] args)\n        {\n            Console.WriteLine(&quot;Hello World!&quot;);\n        }\n    }\n}\n```\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/598828/generic-unmanaged-type-used-with-extension-method.html\nVSTS ticketId: 911278_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 6/10/2019, 01:06 AM (25 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/37021","RelatedDescription":"Open issue \"Generic unmanaged type used with extension method causes 100% repro crash in VS2019\" (#37021)"},{"Id":"464777259","IsPullRequest":true,"CreatedAt":"2019-07-05T21:23:58","Actor":"cston","Number":"37019","RawContent":null,"Title":"Avoid generating or emitting NullablePublicOnlyAttribute when no other nullable attributes are emitted","State":"open","Body":"Fixes #36977","Url":"https://github.com/dotnet/roslyn/pull/37019","RelatedDescription":"Open PR \"Avoid generating or emitting NullablePublicOnlyAttribute when no other nullable attributes are emitted\" (#37019)"},{"Id":"464776337","IsPullRequest":true,"CreatedAt":"2019-07-05T21:19:23","Actor":"tmeschter","Number":"37018","RawContent":null,"Title":"Determine the maximum supported language version","State":"open","Body":".NETCore (version 3.0) supports C# 8.0.\r\n\r\n.NETFramework (all versions), .NETStandard (all versions up through 2.1,\r\nthe latest at this time), and .NETCore (all versions before 3.0) support\r\nversion 7.3 of the C# language. Use of a later version with any of those\r\nframeworks is not supported, though it will not be blocked.\r\n\r\nCertain IDE features need to know this maximum supported\r\nlang version in addition to the existing 'LangVersion' property. Here we\r\ncapture that as the 'MaxSupportedLangVersion' property. The project\r\nsystems will query for this property and pass it along to the language\r\nservice.\r\n\r\nNote that other frameworks (e.g. Xamarin, Unity, etc.) are expected to\r\nset this property themselves if they wish to use something other than\r\n7.3.","Url":"https://github.com/dotnet/roslyn/pull/37018","RelatedDescription":"Open PR \"Determine the maximum supported language version\" (#37018)"},{"Id":"464774043","IsPullRequest":true,"CreatedAt":"2019-07-05T21:07:11","Actor":"333fred","Number":"37017","RawContent":null,"Title":"Add initial nullable context api definitions","State":"open","Body":"This is a draft PR with initial definitions with documentation.\r\n\r\nThis will not compile, I've created it so that we have an easier-to-review look at the API.\r\n\r\n@jcouv @gafter @agocke @jasonmalinowski @ryzngard @CyrusNajmabadi","Url":"https://github.com/dotnet/roslyn/pull/37017","RelatedDescription":"Open PR \"Add initial nullable context api definitions\" (#37017)"},{"Id":"464771577","IsPullRequest":true,"CreatedAt":"2019-07-05T20:55:07","Actor":"meziantou","Number":"37016","RawContent":null,"Title":"IDE0066 code fix adds parentheses when needed","State":"open","Body":"fix #36995 ","Url":"https://github.com/dotnet/roslyn/pull/37016","RelatedDescription":"Open PR \"IDE0066 code fix adds parentheses when needed\" (#37016)"},{"Id":"464770352","IsPullRequest":true,"CreatedAt":"2019-07-05T20:49:57","Actor":"ivanbasov","Number":"37015","RawContent":null,"Title":"ENC editing tests for C# 8.0 pattern matching","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/37015","RelatedDescription":"Open PR \"ENC editing tests for C# 8.0 pattern matching\" (#37015)"},{"Id":"464760109","IsPullRequest":true,"CreatedAt":"2019-07-05T20:03:41","Actor":"RikkiGibson","Number":"37014","RawContent":null,"Title":" Make NullableWalker aware of calls to Interlocked.CompareExchange","State":"open","Body":"Resolves #36911 ","Url":"https://github.com/dotnet/roslyn/pull/37014","RelatedDescription":"Open PR \" Make NullableWalker aware of calls to Interlocked.CompareExchange\" (#37014)"},{"Id":"464757038","IsPullRequest":false,"CreatedAt":"2019-07-05T19:49:23","Actor":"vsfeedback","Number":"37013","RawContent":null,"Title":"Auto-complete on event-handler generates nullableattribute event handler","State":"open","Body":"VSF_TYPE_MARKDOWN\nCreate a new .NET Core WPF App. Add the following lines of code:\n\nMediaPlayer player = new MediaPlayer();\n    player. MediaOpened +=\n\nAfter this point, use the Tab key to auto-generate a new event handler. The event handler generated looks like this:\n\nprivate void Player_MediaOpened([NullableAttribute(2)] object sender, [NullableAttribute(1)] EventArgs e)\n        {\n            throw new NotImplementedException();\n        }\n\nThe attributes added to the parameters on the event handler won't compile.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/616546/auto-complete-on-event-handler-generates-nullablea.html\nVSTS ticketId: 935335_\n_These are the original issue comments:_\n\nMorten Nielsen on 6/20/2019, 10:26 PM (14 days ago): <p>I forgot to mention: I have the latest Preview7 nightly of .NET Core installed.</p>\n\nVisual Studio Feedback System on 6/21/2019, 02:39 AM (14 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/37013","RelatedDescription":"Open issue \"Auto-complete on event-handler generates nullableattribute event handler\" (#37013)"},{"Id":"464755885","IsPullRequest":false,"CreatedAt":"2019-07-05T19:44:02","Actor":"vsfeedback","Number":"37012","RawContent":null,"Title":"Go To Definition shows [from metadata] view if target project has <Package> node","State":"open","Body":"VSF_TYPE_MARKDOWNThis happens in VS2019 but doesn't happen in VS2017 with the same solution loaded.\n\nIf I remove and re-add the reference to the target project (containing the definition), the issue goes away. The only difference is the presence of the &lt;Package&gt; node, which is not present when the project is re-added (see attached project file diff).\n\nI don't know the purpose of the &lt;Package&gt; node or how it gets added. Should I remove it?\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/489592/go-to-definition-shows-from-metadata-view-if-targe.html\nVSTS ticketId: 820346_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 3/15/2019, 00:12 AM (112 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 3/15/2019, 01:12 PM (111 days ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\nMatthias Fritsche on 3/22/2019, 02:54 AM (105 days ago): I can observe go to definition showing a metadata page instead of the source, when calling go to definition on a class or interface, that is defined in another project in the same solution.\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/37012","RelatedDescription":"Open issue \"Go To Definition shows [from metadata] view if target project has <Package> node\" (#37012)"},{"Id":"464755867","IsPullRequest":false,"CreatedAt":"2019-07-05T19:43:58","Actor":"vsfeedback","Number":"37011","RawContent":null,"Title":"Goto Definition goes to [from metadata] view when target project is SDK and has AssemblyName set","State":"open","Body":"VSF_TYPE_MARKDOWNCreate a new Solution with a .NET Framework Console Application.\nAdd a new .netstandard class library to the solution and reference it from the Console Application.\nChange the class library csproj to the following:\n```\n&lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;netstandard2.0&lt;/TargetFramework&gt;\n    &lt;AssemblyName&gt;Shared&lt;/AssemblyName&gt;\n  &lt;/PropertyGroup&gt;\n\n&lt;/Project&gt;\n```\nUse this code in the Console Application\n```\nusing ClassLibrary1;\n\nnamespace ConsoleApp12\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            new Class1();\n        }\n    }\n}\n```\nBuild and then press F12 on `new Class1()`, Visual Studio will navigate to the `[from metadata]` view.\nRemove the `&lt;AssemblyName&gt;Shared&lt;/AssemblyName&gt;` from the class library, build and try F12 again, this time it will navigate to the source directly\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/481936/goto-definition-goes-to-from-metadata-view-when-ta.html\nVSTS ticketId: 814002_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 3/7/2019, 05:58 PM (119 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 3/8/2019, 05:51 PM (118 days ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/37011","RelatedDescription":"Open issue \"Goto Definition goes to [from metadata] view when target project is SDK and has AssemblyName set\" (#37011)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"464946822","IsPullRequest":true,"CreatedAt":"2019-07-08T04:03:23","Actor":"Suchiman","Number":"7596","RawContent":null,"Title":"Use the GC provided environments instead of the PAL ones","State":"closed","Body":"This fixes 3/6 from #7339","Url":"https://github.com/dotnet/corert/pull/7596","RelatedDescription":"Closed or merged PR \"Use the GC provided environments instead of the PAL ones\" (#7596)"},{"Id":"464870626","IsPullRequest":true,"CreatedAt":"2019-07-07T21:12:25","Actor":"MichalStrehovsky","Number":"7593","RawContent":null,"Title":"Change how we root all application libraries","State":"closed","Body":"When `rootallapplicationassemblies` is specified, we currently go over all assemblies passed to ILC as input or reference, find out which ones are not framework assemblies, and root all types in them so that they're available for arbitrary reflection at runtime.\r\n\r\nThe problem is that NuGet packages or SDKs can have many assemblies in them, but only some of them are actually used by user code. Good example is the Microsoft.WindowsDesktop.App SDK that has both WinForms and WPF in it.\r\n\r\nWith this change, we'll only root assemblies where we actually saw the app using something in them. This way a WinForms app will not include all of WPF.\r\n\r\nWith this, we could possibly regress apps that do `Assembly.Load` on an assembly that is otherwise unused. Those apps will have to use RD.XML. We could also add a simple data flow analysis for the simplest cases to avoid RD.XML if really needed.\r\n\r\nASP.NET still works without RD.XML for this.\r\n\r\nMost of this commit is just mechanically moving stuff around.","Url":"https://github.com/dotnet/corert/pull/7593","RelatedDescription":"Closed or merged PR \"Change how we root all application libraries\" (#7593)"},{"Id":"464981240","IsPullRequest":true,"CreatedAt":"2019-07-07T18:48:35","Actor":"MichalStrehovsky","Number":"7597","RawContent":null,"Title":"Drop size of Hello World to 1.16 MB","State":"open","Body":"Set of commits that allow us to drop the size of a fully self-contained native C# Hello World to 1.16 MB (with all the [documented](http://aka.ms/OptimizeCoreRT) size optimization switches enabled, that is).\r\n\r\nSee individual commits for descriptions.","Url":"https://github.com/dotnet/corert/pull/7597","RelatedDescription":"Open PR \"Drop size of Hello World to 1.16 MB\" (#7597)"},{"Id":"464932259","IsPullRequest":true,"CreatedAt":"2019-07-07T14:24:35","Actor":"MichalStrehovsky","Number":"7595","RawContent":null,"Title":"Add bodies for a couple more missing methods","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7595","RelatedDescription":"Closed or merged PR \"Add bodies for a couple more missing methods\" (#7595)"},{"Id":"464870932","IsPullRequest":true,"CreatedAt":"2019-07-06T22:35:40","Actor":"MichalStrehovsky","Number":"7594","RawContent":null,"Title":"Change error message for unsupported marshallers","State":"closed","Body":"We now support many marshallers that I would consider non-trivial. The error should just say the marshaller is not implemented...","Url":"https://github.com/dotnet/corert/pull/7594","RelatedDescription":"Closed or merged PR \"Change error message for unsupported marshallers\" (#7594)"},{"Id":"464587884","IsPullRequest":true,"CreatedAt":"2019-07-05T18:30:19","Actor":"mjsabby","Number":"7591","RawContent":null,"Title":"Harmonize ContainsPointers flags between CoreRT & CoreCLR","State":"closed","Body":"If there's no reason for these flags to be different between coreclr and corert, I'd like to have the same value across them.\r\n\r\nThis allows the frozen segment deserializer code to not have to be forked across the runtimes.","Url":"https://github.com/dotnet/corert/pull/7591","RelatedDescription":"Closed or merged PR \"Harmonize ContainsPointers flags between CoreRT & CoreCLR\" (#7591)"},{"Id":"464646387","IsPullRequest":true,"CreatedAt":"2019-07-05T15:40:24","Actor":"yowl","Number":"7592","RawContent":null,"Title":"WASM: Enable GCStaticsNode instead of llvm globals","State":"closed","Body":"In order to progress #7248 , this change enables GCStatics by uncommenting some code that was already present but commented due to the earlier problem of `InitializeModules` not being called at startup.  `InitializeModules` is now called for wasm at startup (I added a printf to be sure) and the commented GCStatics code worked as it was.  I added a test for static field access and it produces this snippet of llvm:\r\n\r\n```\r\n%LoadAddressOfSymbolNode4 = load i32*, i32** @__Str_first_string_31DAE213E988224C1F7CFBECD99A0DA573F5FDAB1922570E42F281A9DCFFC1E9___SYMBOL, !dbg !7923\r\n  %LoadAddressOfSymbolNode5 = load i32*, i32** @__GCStaticBase_HelloWasm_FieldStatics___SYMBOL, !dbg !7923\r\n  %castBasePtrPtr = bitcast i32* %LoadAddressOfSymbolNode5 to i8***, !dbg !7923\r\n  %basePtr = load i8**, i8*** %castBasePtrPtr, !dbg !7923\r\n  %base = load i8*, i8** %basePtr, !dbg !7923\r\n  %S1_addr = getelementptr i8, i8* %base, i32 4, !dbg !7923\r\n  %CastPtrstring = bitcast i8* %S1_addr to i8**, !dbg !7923\r\n  %CastPtr = bitcast i32* %LoadAddressOfSymbolNode4 to i8*, !dbg !7923\r\n  store i8* %CastPtr, i8** %CastPtrstring, !dbg !7923\r\n  %LoadAddressOfSymbolNode6 = load i32*, i32** @__Str_a_different_string_1B09B108E59054EEE2BADD80C449F869A0EEBD1B5472EF5FC727ED498E6D54C8___SYMBOL, !dbg !7924\r\n  %LoadAddressOfSymbolNode7 = load i32*, i32** @__GCStaticBase_HelloWasm_FieldStatics___SYMBOL, !dbg !7924\r\n  %castBasePtrPtr8 = bitcast i32* %LoadAddressOfSymbolNode7 to i8***, !dbg !7924\r\n  %basePtr9 = load i8**, i8*** %castBasePtrPtr8, !dbg !7924\r\n  %base10 = load i8*, i8** %basePtr9, !dbg !7924\r\n  %S2_addr = getelementptr i8, i8* %base10, i32 8, !dbg !7924\r\n```\r\n\r\nWhere we can see that it is going to the GCStaticBase for the class and has 2 different offsets in the `getelementptr` statements, 4 and 8, so looks fine to me.\r\n\r\n","Url":"https://github.com/dotnet/corert/pull/7592","RelatedDescription":"Closed or merged PR \"WASM: Enable GCStaticsNode instead of llvm globals\" (#7592)"},{"Id":"464568921","IsPullRequest":true,"CreatedAt":"2019-07-05T10:12:15","Actor":"trylek","Number":"7590","RawContent":null,"Title":"Miscellaneous CPAOT fixes for several Pri# bug buckets","State":"open","Body":"1) We were missing support for structs with explicit layout. I have\r\nadded the appropriate logic.\r\n\r\n2) Nullable is not blittable (however it is managed sequential if\r\nits instantiation type is managed sequential).\r\n\r\n3) Structs with explicit layout aren't managed sequential.\r\n\r\n4) We were putting the cctor trigger helper into the wrong import\r\ntable - DispatchImports emits GC ref map and cctor trigger doesn't\r\nneed one because it's not a method call helper. This was crashing\r\nR2RDump when trying to disassemble some R2R executables.\r\n\r\n5) I have added two unit tests to the R2R unit test suite by\r\nadapting two CoreCLR tests that were crashing in interesting ways\r\nwhen manipulating explicit layouts and nullables.\r\n\r\n6) Instantiated type signature encoding was incorrect in large\r\nversion bubble case. As JanV described earlier, the context for\r\nencoding of the instantiation type parameters is the outer context,\r\nnot the generic type context.\r\n\r\n7) Always emit all import tables even when they are empty, otherwise\r\nthe fixup encoding gets out of sync as it refers to import table\r\nindices.\r\n\r\n8) When SuperIlc calls R2RDump in the large version bubble mode, it\r\nneeds to pass CORE_ROOT as the \"reference path\" parameter so that\r\nR2RDump can resolve framework assembly references.\r\n\r\n9) Field encoding was doing an unnecessarily strong check - replaced\r\nContainsType with VersionsWithType.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7590","RelatedDescription":"Open PR \"Miscellaneous CPAOT fixes for several Pri# bug buckets\" (#7590)"},{"Id":"464418814","IsPullRequest":true,"CreatedAt":"2019-07-05T06:18:31","Actor":"mjsabby","Number":"7589","RawContent":null,"Title":"Implement _RegisterFrozenSegment & _UnregisterFrozenSegment","State":"closed","Body":"Brings https://github.com/dotnet/coreclr/pull/22776 into CoreRT.","Url":"https://github.com/dotnet/corert/pull/7589","RelatedDescription":"Closed or merged PR \"Implement _RegisterFrozenSegment & _UnregisterFrozenSegment\" (#7589)"},{"Id":"464379081","IsPullRequest":true,"CreatedAt":"2019-07-04T19:57:45","Actor":"Suchiman","Number":"7588","RawContent":null,"Title":"Make CLRServices::GarbageCollect behave like CoreCLR's","State":"closed","Body":"fixes #7475","Url":"https://github.com/dotnet/corert/pull/7588","RelatedDescription":"Closed or merged PR \"Make CLRServices::GarbageCollect behave like CoreCLR's\" (#7588)"},{"Id":"463949789","IsPullRequest":true,"CreatedAt":"2019-07-04T19:50:37","Actor":"Suchiman","Number":"7587","RawContent":null,"Title":"Make fields readonly properties to avoid confusion, fixes #4811","State":"closed","Body":"fixes #4811","Url":"https://github.com/dotnet/corert/pull/7587","RelatedDescription":"Closed or merged PR \"Make fields readonly properties to avoid confusion, fixes #4811\" (#7587)"},{"Id":"462848807","IsPullRequest":true,"CreatedAt":"2019-07-04T06:14:46","Actor":"Suchiman","Number":"7573","RawContent":null,"Title":"Implement GC.AllocateUninitializedArray","State":"closed","Body":"fixes #5680\r\n\r\nInspired by https://github.com/dotnet/coreclr/blob/c81d3caee2cfd7a401429dea9709acc18064acdd/src/vm/gchelpers.cpp#L424-L591\r\nand https://github.com/dotnet/corert/blob/fcaa7ed872ea0befcb2a5c8bb5ba504f674f0df1/src/Native/Runtime/gcrhenv.cpp#L228-L294","Url":"https://github.com/dotnet/corert/pull/7573","RelatedDescription":"Closed or merged PR \"Implement GC.AllocateUninitializedArray\" (#7573)"},{"Id":"463452177","IsPullRequest":true,"CreatedAt":"2019-07-04T01:11:15","Actor":"nattress","Number":"7581","RawContent":null,"Title":"SuperIlc support for compiling from Crossgen .rsps","State":"closed","Body":"Adds `compile-crossgen-rsp` command to SuperIlc which takes a response file (or a folder full of them) from a Crossgen command and transposes the arguments so that SuperIlc can re-run Crossgen / CPAOT. If the response file came from another machine (build lab, partner), the --rewrite-old-path and --rewrite-new-path parameters allow switching out the beginnings of directory names.\r\n\r\nThe intent of this command is to allow compiling more complex workloads where dependencies are not conveniently in a single folder, and each response file may have different arguments it passes to crossgen. The set of crossgen parameters we parse is not complete and was enough for the scenario I needed this tool for.\r\n\r\nRefactored the `Command` classes into a folder. Also I was seeing frequent unhandled exceptions since TaskCanceledExceptions from tasks are wrapped in AggregateException objects. Fortunately filters make it easy to tell the difference and just eat the `TaskCanceledException`.","Url":"https://github.com/dotnet/corert/pull/7581","RelatedDescription":"Closed or merged PR \"SuperIlc support for compiling from Crossgen .rsps\" (#7581)"},{"Id":"463835483","IsPullRequest":true,"CreatedAt":"2019-07-03T20:22:39","Actor":"MichalStrehovsky","Number":"7585","RawContent":null,"Title":"Run CoreCLR tests in multimodule mode","State":"closed","Body":"This leg is currently taking 80 minutes to complete and that's quite a long time.","Url":"https://github.com/dotnet/corert/pull/7585","RelatedDescription":"Closed or merged PR \"Run CoreCLR tests in multimodule mode\" (#7585)"},{"Id":"463835743","IsPullRequest":true,"CreatedAt":"2019-07-03T18:15:57","Actor":"Dotnet-GitSync-Bot","Number":"7586","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7586","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7586)"},{"Id":"463792357","IsPullRequest":true,"CreatedAt":"2019-07-03T17:37:35","Actor":"MichalStrehovsky","Number":"7584","RawContent":null,"Title":"Prevent loading byref-like types with invalid layout","State":"closed","Body":"Port of dotnet/coreclr#25200.","Url":"https://github.com/dotnet/corert/pull/7584","RelatedDescription":"Closed or merged PR \"Prevent loading byref-like types with invalid layout\" (#7584)"},{"Id":"463792056","IsPullRequest":true,"CreatedAt":"2019-07-03T16:03:38","Actor":"MichalStrehovsky","Number":"7583","RawContent":null,"Title":"Allow CORINFO_BOX_THIS for primitives and enums","State":"closed","Body":"Port dotnet/coreclr#24644.","Url":"https://github.com/dotnet/corert/pull/7583","RelatedDescription":"Closed or merged PR \"Allow CORINFO_BOX_THIS for primitives and enums\" (#7583)"},{"Id":"463593271","IsPullRequest":true,"CreatedAt":"2019-07-03T13:39:58","Actor":"Dotnet-GitSync-Bot","Number":"7582","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7582","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7582)"},{"Id":"463227946","IsPullRequest":true,"CreatedAt":"2019-07-02T19:46:55","Actor":"jkotas","Number":"7578","RawContent":null,"Title":"Port https://github.com/dotnet/coreclr/pull/25531","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7578","RelatedDescription":"Closed or merged PR \"Port https://github.com/dotnet/coreclr/pull/25531\" (#7578)"},{"Id":"463249832","IsPullRequest":true,"CreatedAt":"2019-07-02T16:14:11","Actor":"jkotas","Number":"7580","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7580","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7580)"},{"Id":"463234533","IsPullRequest":true,"CreatedAt":"2019-07-02T14:57:56","Actor":"Dotnet-GitSync-Bot","Number":"7579","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky","Url":"https://github.com/dotnet/corert/pull/7579","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7579)"},{"Id":"463136077","IsPullRequest":false,"CreatedAt":"2019-07-02T09:59:29","Actor":"MichalStrehovsky","Number":"7577","RawContent":null,"Title":"VectorArrayInit test fails intermittently","State":"open","Body":"```\r\n       F:\\workspace\\_work\\1\\s\\tests_downloaded\\CoreCLR\\JIT\\SIMD\\VectorArrayInit_r\\\\*.dll \r\n                0 file(s) copied.\r\n        Expected: 100\r\n        Actual: -1073741819\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n```\r\n\r\nSeen in #7574 and in one of the iterations of #7549 (I think).\r\n\r\nI tried to get a local repro, but wasn't successful so far.","Url":"https://github.com/dotnet/corert/issues/7577","RelatedDescription":"Open issue \"VectorArrayInit test fails intermittently\" (#7577)"},{"Id":"462832822","IsPullRequest":true,"CreatedAt":"2019-07-02T09:55:07","Actor":"Dotnet-GitSync-Bot","Number":"7571","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @kouvel","Url":"https://github.com/dotnet/corert/pull/7571","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7571)"},{"Id":"463039704","IsPullRequest":true,"CreatedAt":"2019-07-02T08:04:12","Actor":"jkotas","Number":"7576","RawContent":null,"Title":"Account for target renames in .NET Core 3.0 SDK","State":"closed","Body":"Fixes #7575","Url":"https://github.com/dotnet/corert/pull/7576","RelatedDescription":"Closed or merged PR \"Account for target renames in .NET Core 3.0 SDK\" (#7576)"},{"Id":"462912400","IsPullRequest":false,"CreatedAt":"2019-07-02T08:04:12","Actor":"SomeAnon42","Number":"7575","RawContent":null,"Title":"dotnet publish seems broken when using Core 3.0 Preview 6 SDK","State":"closed","Body":"The behavior of ``dotnet publish -r %RID%`` (assuming the CoreRT package is referenced) has changed after upgrading to preview 6 of the SDK.\r\nHere's what the output looks like when using previous versions of the SDK (including the latest stable 2.2 SDK):\r\n```\r\n├── netcoreappX.X/\r\n    └── %RID%/\r\n        ├── <managed output>\r\n        └── publish/\r\n            ├── native/ \r\n            ├── App.exe (native)\r\n            ├── App.pdb (native)\r\n            ├── <app content>\r\n            └── <native dependencies>\r\n```\r\n↑ The ``publish`` directory contains the native executable, along with the app's content. No managed assemblies.\r\n\r\nAnd this is what the output looks like after installing preview 6:\r\n```\r\n├── netcoreappX.X/\r\n    ├── %RID%/\r\n    │   ├── publish/\r\n    │   |   ├── <managed publish> (incl. all of .NET runtime)\r\n    │   |   └── App.pdb (native, while App.exe is a CoreCLR runtime host)\r\n    │   └── <managed publish>\r\n    └── native/\r\n        ├── App.exe\r\n        └── App.pdb\r\n```\r\n↑ The managed *publish* output ends up in both ``%RID%`` and ``%RID%/publish`` (which seems like an SDK issue to me). The native binary is only found in the ``native`` directory, and the directory itself is in the wrong location. The native pdb ends up in both ``%framework%/%RID%/publish`` and ``%framework%/native``.","Url":"https://github.com/dotnet/corert/issues/7575","RelatedDescription":"Closed issue \"dotnet publish seems broken when using Core 3.0 Preview 6 SDK\" (#7575)"},{"Id":"462851015","IsPullRequest":true,"CreatedAt":"2019-07-01T22:34:37","Actor":"MichalStrehovsky","Number":"7574","RawContent":null,"Title":"Initialize YieldProcessor critical section before finalizer thread","State":"closed","Body":"Finalizer thread was racing with the initialization.\r\n\r\nFixes #7572.","Url":"https://github.com/dotnet/corert/pull/7574","RelatedDescription":"Closed or merged PR \"Initialize YieldProcessor critical section before finalizer thread\" (#7574)"},{"Id":"462838415","IsPullRequest":false,"CreatedAt":"2019-07-01T22:34:37","Actor":"Suchiman","Number":"7572","RawContent":null,"Title":"AccessViolation in InitializeYieldProcessorNormalized","State":"closed","Body":"@MichalStrehovsky \r\n![2019-07-01_19-54-48](https://user-images.githubusercontent.com/7110884/60456731-5f27f080-9c3a-11e9-951d-c42d5d5b44a3.png)\r\n![devenv_2019-07-01_19-53-47](https://user-images.githubusercontent.com/7110884/60456734-60f1b400-9c3a-11e9-94a0-0e7d4c31d174.png)\r\n","Url":"https://github.com/dotnet/corert/issues/7572","RelatedDescription":"Closed issue \"AccessViolation in InitializeYieldProcessorNormalized\" (#7572)"},{"Id":"462343022","IsPullRequest":true,"CreatedAt":"2019-07-01T05:16:17","Actor":"MichalStrehovsky","Number":"7569","RawContent":null,"Title":"Port normalized SpinWait from CoreCLR","State":"closed","Body":"This ports yieldprocessornormalized.cpp from CoreCLR to tune spin wait loops in the post-Skylake CPU world.\r\n\r\nThe first commit is literal copy of yieldprocessornormalized.cpp from CoreCLR that was then tweaked to build for Redhawk.\r\n\r\nI then replaced uses of YieldProcessor with the Skylake-aware compat shim.","Url":"https://github.com/dotnet/corert/pull/7569","RelatedDescription":"Closed or merged PR \"Port normalized SpinWait from CoreCLR\" (#7569)"},{"Id":"462399742","IsPullRequest":true,"CreatedAt":"2019-07-01T05:15:29","Actor":"MichalStrehovsky","Number":"7570","RawContent":null,"Title":"Use AssemblyLoadContext from shared partition","State":"closed","Body":"We were missing methods that got added for 3.0. The only LoadContext that works is the default one though.","Url":"https://github.com/dotnet/corert/pull/7570","RelatedDescription":"Closed or merged PR \"Use AssemblyLoadContext from shared partition\" (#7570)"},{"Id":"462318480","IsPullRequest":true,"CreatedAt":"2019-06-29T20:24:33","Actor":"MichalStrehovsky","Number":"7568","RawContent":null,"Title":"Fix GetTypeCode of metadata-only enums","State":"closed","Body":"Found this by accident. `underlyingType.TypeHandle.EETypePtr` would box the RuntimeTypeHandle and return EEType of the RuntimeTypeHandle type.\r\n\r\nWhat this code actually wanted to do is to get the EEType of the underlying type.","Url":"https://github.com/dotnet/corert/pull/7568","RelatedDescription":"Closed or merged PR \"Fix GetTypeCode of metadata-only enums\" (#7568)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"464945545","IsPullRequest":true,"CreatedAt":"2019-07-07T13:55:07","Actor":"dotnet-maestro[bot]","Number":"3403","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190706.1\r\n- **Date Produced**: 7/6/2019 12:53 PM\r\n- **Commit**: a65d0966dc28861394ce78cfdcb9d5dff370957c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19356.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19356.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3403","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3403)"},{"Id":"464847952","IsPullRequest":true,"CreatedAt":"2019-07-06T14:20:21","Actor":"dotnet-maestro[bot]","Number":"3402","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190705.2\r\n- **Date Produced**: 7/5/2019 11:56 PM\r\n- **Commit**: 3e0cbbc6fd6c6d45d7083ee0deb71cec7ea2d91f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19355.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19355.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3402","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3402)"},{"Id":"464230214","IsPullRequest":true,"CreatedAt":"2019-07-06T12:04:13","Actor":"dotnet-maestro[bot]","Number":"3396","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190704.2\r\n- **Date Produced**: 7/4/2019 10:42 PM\r\n- **Commit**: 30553c0de34454fb8da5229962501af65eb1233f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19354.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19354.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3396","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3396)"},{"Id":"464827099","IsPullRequest":false,"CreatedAt":"2019-07-06T07:19:22","Actor":"vitek-karas","Number":"3401","RawContent":null,"Title":"Publishing for win fails with unhelpful error message","State":"open","Body":"Trying to publish an app for `win` RID like this:\r\n```\r\ndotnet publish -r win\r\n```\r\n\r\nFails with error like this:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(99,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'win'. [E:\\AppModel\\repro\\ca5\\ca5.csproj]\r\n```\r\n\r\nWhile technically correct, the error doesn't help the user to figure out the solution. Ideally we would check that the specified RID exists and that it's not a leaf in the RID graph. In which case we could report an error with guidance that a more specific RID is required. Or even better list all the available apphost RIDs which are a more specific version of the specified RID. That way we could state that there's win-x86 and win-x64 and the user should pick one.","Url":"https://github.com/dotnet/sdk/issues/3401","RelatedDescription":"Open issue \"Publishing for win fails with unhelpful error message\" (#3401)"},{"Id":"464619133","IsPullRequest":false,"CreatedAt":"2019-07-05T12:30:18","Actor":"appel1","Number":"3400","RawContent":null,"Title":"MSBuild task restore target sometimes fails if multiple projects share a project reference","State":"open","Body":"As part of our build script for CI we do something like this to prepare our projects, about 1500 csproj projects using the 2017 format. They all share a project reference to a common project. \r\n\r\n```xml\r\n<ItemGroup>\r\n  <TargetProjects Include=\"src\\**\\*.csproj\"/>\r\n</ItemGroup>\r\n<MSBuild Projects=\"@(TargetProjects)\" Targets=\"Restore\" BuildInParallel=\"True\"/>\r\n```\r\n\r\nWhen we do this we sometimes, like every other build or so, one or more of the following errors. \r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(121,5): error : The process cannot access the file 'CommonProject\\obj\\CommonProject.csproj.nuget.dgspec.json' because it is being used by another process. [src\\proj1\\proj1.csproj]\r\n\r\nA workaround is to set BuildInParallel to False but that reduces performance quite a bit. \r\n\r\nIs BuildInParallel not supported or is this some other kind of configuration error?","Url":"https://github.com/dotnet/sdk/issues/3400","RelatedDescription":"Open issue \"MSBuild task restore target sometimes fails if multiple projects share a project reference\" (#3400)"},{"Id":"464463291","IsPullRequest":true,"CreatedAt":"2019-07-05T05:08:31","Actor":"drewnoakes","Number":"3399","RawContent":null,"Title":"Continue design time builds if resolving package assets fails","State":"open","Body":"(This is an alternative implementation of #3398.)\r\n\r\nDesign time builds are stopping if `ResolvePackageAssets` hits an error (dotnet/project-system#4992).\r\n\r\nThis PR uses the fact that design-time builds set the `ContinueOnError` property to `ErrorAndContinue`.\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3399","RelatedDescription":"Open PR \"Continue design time builds if resolving package assets fails\" (#3399)"},{"Id":"464416897","IsPullRequest":true,"CreatedAt":"2019-07-05T02:31:06","Actor":"dotnet-bot","Number":"3397","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3397","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3397)"},{"Id":"464419999","IsPullRequest":true,"CreatedAt":"2019-07-05T00:32:36","Actor":"drewnoakes","Number":"3398","RawContent":null,"Title":"Continue design time builds if resolving package assets fails","State":"open","Body":"Design time builds are stopping if `ResolvePackageAssets` hits an error (https://github.com/dotnet/project-system/issues/4992). This PR sets `ContinueOnError` on `ResolvePackageAssets` to `ErrorAndContinue` for design time builds only.\r\n\r\nWould the property be better defined in `Microsoft.NET.Sdk.props` with a more general name for broader use?\r\n\r\nAlternatively, should this logic piggyback off the `DesignTimeBuild` property of the task itself?\r\n\r\nhttps://github.com/dotnet/sdk/blob/adf76a594158a742e2c22b49b0fb4942cb53317d/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs#L153","Url":"https://github.com/dotnet/sdk/pull/3398","RelatedDescription":"Open PR \"Continue design time builds if resolving package assets fails\" (#3398)"},{"Id":"464066841","IsPullRequest":true,"CreatedAt":"2019-07-05T00:08:59","Actor":"drewnoakes","Number":"3395","RawContent":null,"Title":"Remove double computation of settings hash","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3395","RelatedDescription":"Closed or merged PR \"Remove double computation of settings hash\" (#3395)"},{"Id":"463915913","IsPullRequest":true,"CreatedAt":"2019-07-04T15:16:20","Actor":"dsplaisted","Number":"3392","RawContent":null,"Title":"Don't write the same framework multiple times to RuntimeConfig.json","State":"closed","Body":"Fix dotnet/cli#11709","Url":"https://github.com/dotnet/sdk/pull/3392","RelatedDescription":"Closed or merged PR \"Don't write the same framework multiple times to RuntimeConfig.json\" (#3392)"},{"Id":"464024281","IsPullRequest":true,"CreatedAt":"2019-07-04T02:02:22","Actor":"MSLukeWest","Number":"3394","RawContent":null,"Title":"Updating PublishItemsOutputGroup to resolve runtime assets during design time builds","State":"open","Body":"Since this output group is meant to be used by installer projects which deal exclusively with design time builds we need ResolveRuntimePackAssets to always run when building it.\r\n\r\nAlso updating tests for this output group to set DesignTimeBuild=true to more accurately simulate this scenario.","Url":"https://github.com/dotnet/sdk/pull/3394","RelatedDescription":"Open PR \"Updating PublishItemsOutputGroup to resolve runtime assets during design time builds\" (#3394)"},{"Id":"464018687","IsPullRequest":true,"CreatedAt":"2019-07-04T01:35:13","Actor":"peterhuene","Number":"3393","RawContent":null,"Title":"Fix unhandled exception when RuntimeList.xml contains duplicates.","State":"open","Body":"This PR fixes an unhandled exception that results when RuntimeList.xml\r\ncontains entries that have the same destination subpath when resolving the\r\nruntime pack assets.  An error is now emitted instead of the unhandled\r\nexception.\r\n\r\nAdditionally, this fixes an unhandled exception that occurs when the\r\nRuntimeList.xml file is not present in the runtime pack that is caused by\r\nthe exception message not having a NETSDK prefix.\r\n\r\nAlso removed an unnecessary override of the `Execute` method for\r\n`GenerateDepsFile` task.  This override should have been removed with a\r\nprevious cleanup PR, but was overlooked.\r\n\r\nFixes dotnet/cli#11705.","Url":"https://github.com/dotnet/sdk/pull/3393","RelatedDescription":"Open PR \"Fix unhandled exception when RuntimeList.xml contains duplicates.\" (#3393)"},{"Id":"463190002","IsPullRequest":true,"CreatedAt":"2019-07-03T22:23:54","Actor":"dotnet-maestro[bot]","Number":"3385","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190702.7\r\n- **Date Produced**: 7/2/2019 6:25 PM\r\n- **Commit**: b8c190d95371e658d95a5731f4778bd3da2fa42d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19352.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19352.7\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3385","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3385)"},{"Id":"462854507","IsPullRequest":false,"CreatedAt":"2019-07-03T20:55:59","Actor":"AlexanderTaeschner","Number":"3380","RawContent":null,"Title":"Duplicated frameworks in runtimeconfig.json","State":"closed","Body":"Using .NET core version 3.0.100-preview7-012741 some generated ProjectName.runtimeconfig.json files contain duplicated entries for the frameworks, which lead to a direct crash at application start:\r\n```\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp3.0\",\r\n    \"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"3.0.0-preview7-27826-20\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"3.0.0-preview7-27826-20\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"3.0.0-preview7-27826-20\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\nwhich seems to be linked to the following entry in the build log:\r\n```\r\n5>      Task \"GenerateRuntimeConfigurationFiles\"\r\n5>        Task Parameter:AssetsFilePath=[...]\\obj\\project.assets.json\r\n5>        Task Parameter:TargetFrameworkMoniker=.NETCoreApp,Version=v3.0\r\n5>        Task Parameter:TargetFramework=netcoreapp3.0\r\n5>        Task Parameter:RuntimeConfigPath=[...].runtimeconfig.json\r\n5>        Task Parameter:RuntimeConfigDevPath=[...].runtimeconfig.dev.json\r\n5>        Task Parameter:\r\n5>            RuntimeFrameworks=\r\n5>                Microsoft.NETCore.App\r\n5>                        FrameworkName=Microsoft.NETCore.App\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>                Microsoft.WindowsDesktop.App\r\n5>                        FrameworkName=Microsoft.WindowsDesktop.App\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>                Microsoft.WindowsDesktop.App\r\n5>                        FrameworkName=Microsoft.WindowsDesktop.App.WPF\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>                Microsoft.WindowsDesktop.App\r\n5>                        FrameworkName=Microsoft.WindowsDesktop.App.WindowsForms\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>        Task Parameter:UserRuntimeConfig=[...]/runtimeconfig.template.json\r\n5>        Task Parameter:AdditionalProbingPaths=[...]\\.dotnet\\store\\|arch|\\|tfm|\r\n5>        Task Parameter:IsSelfContained=False\r\n5>      Done executing task \"GenerateRuntimeConfigurationFiles\".\r\n```\r\nwhere three RuntimeFrameworks with the same name, but different FrameworkName are listed.\r\nWith preview 5 this problem did not appear.","Url":"https://github.com/dotnet/sdk/issues/3380","RelatedDescription":"Closed issue \"Duplicated frameworks in runtimeconfig.json\" (#3380)"},{"Id":"463386800","IsPullRequest":false,"CreatedAt":"2019-07-03T20:55:29","Actor":"crmann1","Number":"3388","RawContent":null,"Title":"ResolvePackageFileConflicts task throw null reference exception when duplicate references are passed in (and conflicts exist)","State":"closed","Body":"During a build of a project that has duplicate references where the duplicate reference is also a conflict the ResolvePackageFileConflicts task crashes with a null reference exception . \r\n\r\n\r\nC:\\Program   Files\\dotnet\\sdk\\3.0.100-preview7-012601\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets\r\n\r\nThe \"ResolvePackageFileConflicts\" task failed unexpectedly.System.NullReferenceException: Object reference not set to an instance of an object.   at Microsoft.NET.Build.Tasks.ConflictResolution.ResolvePackageFileConflicts.<>c.<ExecuteCore>b__44_0(ITaskItem r) in /_/src/Tasks/Common/ConflictResolution/ResolvePackageFileConflicts.cs:line 160   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()   at System.Collections.Generic.HashSet`1.UnionWith(IEnumerable`1 other)   at System.Collections.Generic.HashSet`1..ctor(IEnumerable`1 collection, IEqualityComparer`1 comparer)   at Microsoft.NET.Build.Tasks.ConflictResolution.ResolvePackageFileConflicts.ExecuteCore() in /_/src/Tasks/Common/ConflictResolution/ResolvePackageFileConflicts.cs:line 160   at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 47   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\nThe reason is that in ResolvePackageFileConflicts.cs\r\n      var result = new ITaskItem[original.Length - conflicts.Count]; \r\n\r\nThe assumption is that the length of the result array is just the original list minus the conflict list. But if the original list has duplicates then the result array will be too large and will have null entries in it. \r\n\r\nFurther down that array is processed and fails \r\n\r\nvar referenceItemSpecs = new HashSet<string>(ReferencesWithoutConflicts?.Select(r => r.ItemSpec) ?? Enumerable.Empty<string>(),\r\n                                                                     StringComparer.OrdinalIgnoreCase);\r\n\r\nr=> r.ItemSpec fails because r is null due to the ReferenceWithoutConflicts enumeration containing a null item  due to the problem above.\r\n\r\nRepro for example is to have a file with the following reference items in it\r\n\r\n```\r\n <ItemGroup>\r\n    <Reference Include=\"System.Runtime\" />\r\n    <Reference Include=\"System.Runtime\" />\r\n  </ItemGroup>\r\n```","Url":"https://github.com/dotnet/sdk/issues/3388","RelatedDescription":"Closed issue \"ResolvePackageFileConflicts task throw null reference exception when duplicate references are passed in (and conflicts exist)\" (#3388)"},{"Id":"463798216","IsPullRequest":true,"CreatedAt":"2019-07-03T14:50:59","Actor":"rynowak","Number":"3391","RawContent":null,"Title":"Add build perf test for server-side Blazor template","State":"open","Body":"Adds performance coverage for Blazor, which interacts with the compiler\r\nand SDK differently from other ASP.NET Core templates.\r\n\r\nThis is currently a draft waiting for https://github.com/aspnet/AspNetCore/pull/11550/files to be merged and inserted - that PR renames the template. ","Url":"https://github.com/dotnet/sdk/pull/3391","RelatedDescription":"Open PR \"Add build perf test for server-side Blazor template\" (#3391)"},{"Id":"463496606","IsPullRequest":true,"CreatedAt":"2019-07-03T01:03:09","Actor":"dsplaisted","Number":"3390","RawContent":null,"Title":"Support automatic Link metadata for Page and Resource items","State":"open","Body":"Fix #2697 \r\n","Url":"https://github.com/dotnet/sdk/pull/3390","RelatedDescription":"Open PR \"Support automatic Link metadata for Page and Resource items\" (#3390)"},{"Id":"463478792","IsPullRequest":true,"CreatedAt":"2019-07-02T23:32:09","Actor":"dsplaisted","Number":"3389","RawContent":null,"Title":"Fix NullReferenceException in ResolvePackageFileConflicts","State":"open","Body":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/941481","Url":"https://github.com/dotnet/sdk/pull/3389","RelatedDescription":"Open PR \"Fix NullReferenceException in ResolvePackageFileConflicts\" (#3389)"},{"Id":"463190351","IsPullRequest":true,"CreatedAt":"2019-07-02T14:31:35","Actor":"dotnet-bot","Number":"3386","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3386","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3386)"},{"Id":"462963954","IsPullRequest":true,"CreatedAt":"2019-07-02T03:30:51","Actor":"johnbeisner","Number":"3384","RawContent":null,"Title":"Branding update to \"preview8\"; SDK","State":"closed","Body":"Branding update to \"preview8\"; SDK","Url":"https://github.com/dotnet/sdk/pull/3384","RelatedDescription":"Closed or merged PR \"Branding update to \"preview8\"; SDK\" (#3384)"},{"Id":"462957863","IsPullRequest":true,"CreatedAt":"2019-07-02T03:30:22","Actor":"johnbeisner","Number":"3382","RawContent":null,"Title":"Merge master into release 3.0.1xx for preview7 - SDK","State":"closed","Body":"Merge master to release/3.0.1xx for preview7\r\nCommonly referred to as the 'snap'","Url":"https://github.com/dotnet/sdk/pull/3382","RelatedDescription":"Closed or merged PR \"Merge master into release 3.0.1xx for preview7 - SDK\" (#3382)"},{"Id":"462962755","IsPullRequest":false,"CreatedAt":"2019-07-02T00:12:33","Actor":"bergbria","Number":"3383","RawContent":null,"Title":"'dotnet publish --no-restore --runtime X' fails when multiple RuntimeIdentifers are listed in the project file","State":"open","Body":"## Repro\r\n1. Create a .csproj with multiple ````<RuntimeIdentifiers>```` (e.g.  ````<RuntimeIdentifiers>osx-x64;win-x64</RuntimeIdentifiers>````)\r\n2. `dotnet restore`\r\n3. `dotnet publish --no-restore  --runtime win-x64`\r\n\r\nThis will fail with \r\n>error NU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Please disable RestoreLockedMode MSBuild property or pass explicit --force-evaluate flag to run restore to update the lock file. \r\n\r\n## Automated repro\r\nDownload/unzip \r\n[publish_multi_rid.zip](https://github.com/dotnet/sdk/files/3347730/publish_multi_rid.zip) and run repro.bat\r\n\r\n## Additional context\r\n* Omitting  `--no-restore` will cause different package versions to be used than would be produced the by original `dotnet restore`. While being icky in general, this also causes breaks when NuGet lock files are used (e.g. https://github.com/NuGet/Home/issues/8287)\r\n* This seems vaguely related to #2682 ","Url":"https://github.com/dotnet/sdk/issues/3383","RelatedDescription":"Open issue \"'dotnet publish --no-restore --runtime X' fails when multiple RuntimeIdentifers are listed in the project file\" (#3383)"},{"Id":"462905459","IsPullRequest":true,"CreatedAt":"2019-07-01T23:23:02","Actor":"swaroop-sridhar","Number":"3381","RawContent":null,"Title":"SingleFile: Update a test with ni-pdbs","State":"closed","Body":"The test GivenThatWeWantToPublishASingleFileApp.It_excludes_ni_pdbs_from_single_file\r\nchecks for the fact that ni.pdb files are not bundled into the single-file by default.\r\n\r\nThis test was expecting only the `<app>.ni.pdb` file to exist in the publish directory.\r\nHowever, in recent versions of the build, mscorlib.ni.pdb is also found.\r\n\r\nThis commit changes the test to accomodate additional files in the publish directory.","Url":"https://github.com/dotnet/sdk/pull/3381","RelatedDescription":"Closed or merged PR \"SingleFile: Update a test with ni-pdbs\" (#3381)"},{"Id":"462676233","IsPullRequest":true,"CreatedAt":"2019-07-01T13:50:12","Actor":"dotnet-maestro[bot]","Number":"3378","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3378","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3378)"},{"Id":"462397761","IsPullRequest":true,"CreatedAt":"2019-07-01T01:24:56","Actor":"dotnet-maestro[bot]","Number":"3377","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 1:09 PM\r\n- **Commit**: 3ebba82f29f338a3cb14f4b3e1b6da0fd69be694\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19329.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3377","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3377)"},{"Id":"462296170","IsPullRequest":true,"CreatedAt":"2019-06-30T12:03:58","Actor":"dotnet-maestro[bot]","Number":"3374","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3374","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3374)"},{"Id":"462350708","IsPullRequest":false,"CreatedAt":"2019-06-29T23:25:42","Actor":"mattleibow","Number":"3376","RawContent":null,"Title":"MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages'.","State":"open","Body":"I am trying to use Ubuntu 18.04 to test some things, and I can use any of the newer .NET Core SDKs.\r\n\r\nI just installed a fresh VM with 18.04, and [installed my usual tools](https://gist.github.com/mattleibow/7e02a32193fb9bb14069bedb7384205e). I then try and build SkiaSharp, and then the .NET Standard projects and Tizen fail to build with the same error.\r\n\r\nI can roll back to dotnet-sdk-2.1.105, and that seems to work fine. As soon as I go later, then it fails. I tried installing a different version of dotnet 2.2, but I only have one for some reason. Sure, I could install it manually and all that. But, who wants to do that - and I am not even sure it is going to work.\r\n\r\nHere is my apt-search output: https://gist.github.com/mattleibow/935de7d22b24cfcf3ae9ab0c16b1908f\r\n\r\nWhat is the reason for these failures? My code was working - as it is building just fine with 2.1.105, and then I bump up just a fraction and boom?\r\n\r\nBuild Errors:\r\n\r\n```\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n\r\n...\r\n\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3376","RelatedDescription":"Open issue \"MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages'.\" (#3376)"},{"Id":"462344960","IsPullRequest":true,"CreatedAt":"2019-06-29T21:48:07","Actor":"fadimounir","Number":"3375","RawContent":null,"Title":"Disable R2R compilations for non-exe projects","State":"open","Body":"Fixes #3364","Url":"https://github.com/dotnet/sdk/pull/3375","RelatedDescription":"Open PR \"Disable R2R compilations for non-exe projects\" (#3375)"},{"Id":"462787366","IsPullRequest":false,"CreatedAt":"2019-06-09T03:00:01","Actor":"DualBrain","Number":"3379","RawContent":null,"Title":"VB.NET 'End' not available and odd error message.","State":"open","Body":"Start with a .NET Core 3.0 Console app and simply modify Sub Main.\r\n\r\nModule Program\r\n  Sub Main(args As String())\r\n     End '<--- I added this.\r\n  End Sub\r\nEnd Module\r\n\r\nBy all appearance, Visual Studio thinks things are just fine (no squiggles).  When I build, the build fails with the following error:\r\n\r\n\"BC37234: Unstructured exception handling is not supported in current project type.\"\r\n\r\nHuh?  How is 'End' part of unstructured exception handling?  Also, why wouldn't 'End' be supported for a console application on .NET Core?\r\n\r\nThanks.\r\n\r\nCC: @KathleenDollard, @cston ","Url":"https://github.com/dotnet/sdk/issues/3379","RelatedDescription":"Open issue \"VB.NET 'End' not available and odd error message.\" (#3379)"},{"Id":"463343691","IsPullRequest":false,"CreatedAt":"2019-05-30T19:40:42","Actor":"DualBrain","Number":"3387","RawContent":null,"Title":"VB.NET \"My\" not working as expected?","State":"open","Body":"@cston and @KathleenDollard,\r\n\r\nHere is an isolated example running on the most recent bits as far as I can tell (at least with regards to the Microsoft.VisualBasic side of things).\r\n\r\nModule Program\r\n  Sub Main(args As String())\r\n    Console.WriteLine(My.Computer.Name)\r\n    Console.WriteLine((New Microsoft.VisualBasic.Devices.ServerComputer).Name)\r\n    Console.WriteLine(System.Environment.MachineName)\r\n  End Sub\r\nEnd Module\r\n\r\nThe first line doesn’t work in .NET Core 3.0; however, the second and third lines do.  Playing with the same code in the full .NET Framework, all three lines work and when you jump to the reference for My.Computer.Name, it goes to Microsoft.VisualBasic.Devices.ServerComputer.Name.  I then jumped back over to the .NET Core source tree and that property simply returns System.Environment.MachineName.  One thing I find interesting about this is it’s not a 1:1 map… how does My.Computer.Name map to a property inside of an instantiated instance of Microsoft.VisualBasic.Devices.ServerComputer?  Some “magic” black-box stuff there?\r\n\r\nSo am I just missing something as far as how to \"light up\" the My side of things when working with a .NET Core 3.0 console project?  Or is there some additional work that still has to be done beyond the work that has taken place within the Microsoft.VisualBasic namespace?\r\n\r\n(BTW, @cston great work thus far!)\r\n\r\nThanks.\r\n\r\nCory Smith","Url":"https://github.com/dotnet/sdk/issues/3387","RelatedDescription":"Open issue \"VB.NET \"My\" not working as expected?\" (#3387)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, msbuild, nuget, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is a partial example of the new array based on the upcoming July update. \r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n  \"sdks\": [\r\n    {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": [\r\n            {\r\n            \"name\": \"\",\r\n            \"rid\": \"\",\r\n            \"url\": \"\",\r\n            \"hash\": \"\"\r\n            }\r\n        ]\r\n    }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the communitiy which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility comprimises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1146463009100853249","CreatedAt":"2019-07-03T16:57:36+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":4,"RawContent":null},{"Id":"1146188625828147200","CreatedAt":"2019-07-02T22:47:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":2,"RawContent":null},{"Id":"1144288349022085120","CreatedAt":"2019-06-27T16:56:16+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":1,"RawContent":null},{"Id":"1143896700047646727","CreatedAt":"2019-06-26T15:00:00+00:00","UserScreenname":"dotnet","Text":"Run samples and tutorials using Try .NET global tool \nhttps://t.co/xxmNIK7SVd https://t.co/yhtPGPTKds","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":31,"RawContent":null},{"Id":"1143254803008458753","CreatedAt":"2019-06-24T20:29:20+00:00","UserScreenname":"dotnet","Text":"Care about AI &amp; Machine Learning? Check out this interview with @zeeshantweets, who is a developer on #MLNET. https://t.co/NuaAjE4Kod","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":45,"FavoriteCount":22,"RawContent":null},{"Id":"1143242317358178304","CreatedAt":"2019-06-24T19:39:43+00:00","UserScreenname":"dotnet","Text":"#dotnetconf Call for papers is open! Are you interested in speaking about .NET at our annual, free, virtual event?… https://t.co/q9IU7uUg4d","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":171,"FavoriteCount":108,"RawContent":null},{"Id":"1142109925474107392","CreatedAt":"2019-06-21T16:40:00+00:00","UserScreenname":"dotnet","Text":"We get an update on the Blazor programming model in .NET Core 3 and beyond from @danroth27\nin this episode of On .N… https://t.co/VqA8j8IEcC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":61,"FavoriteCount":19,"RawContent":null},{"Id":"1142092310009638912","CreatedAt":"2019-06-21T15:30:00+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core\n\nhttps://t.co/Gbt97muw4j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":70,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2019-07-08T05:30:38.3463745Z","RunDurationInMilliseconds":15867}