{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":36,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":170,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null},{"Title":"Modernize existing .NET apps with Windows Containers and Azure","PublishedOn":"2017-11-01T23:14:48+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"As part of the series of posts announced at this initial blog post (.NET Application Architecture Guidance) that explores each of the architecture areas currently covered by our team, this current...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/01/modernize-existing-net-apps-with-windows-containers-and-azure/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6767783059","Type":"IssuesEvent","CreatedAt":"2017-10-26T05:52:31","Actor":"HarelM","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Opened issue \"File system watcher crach\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"},{"Id":"6854176970","Type":"IssuesEvent","CreatedAt":"2017-11-14T18:00:49","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Reopened issue \"Microsoft Security Advisory CVE-2017-11770 : Malformed Certificate can cause Denial of Service\" (#44) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2017-11770 \r\n## Malformed Certificate can cause Denial of Service\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public version of .NET Core where a malformed certificate or other ASN.1 formatted data could lead to a denial of service via an infinite loop on Linux and macOS.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.8, 1.1.5 and 2.0.1. Developers are advised to update their .NET Core SDK to version 2.0.3 or 1.1.5.\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\n.NET Core applications running on Windows are not affected by this vulnerability. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed blow and is running on Linux.\r\n\r\nPlatform  | Runtime Version | Fixed runtime version\r\n----------------|----------------| -------------------------\r\nLinux | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4<br />2.0.0 |  1.0.8<br />1.1.5<br />2.0.1\r\nmacOS | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4 |  1.0.8<br />1.1.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nAny application running against .NET Core 1.0.7 or lower, or 1.1.2 or lower, or 2.0.0 is affected. The default version of the .NET core runtime can be listed by running `dotnet --info`, which should produce output in the form of \r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n```\r\n\r\nAs this only displays the latest version of the runtime installed it may hide the fact that you have a vulnerable runtime. A complete list of runtimes can be discovered by performing a directory listing in the install root directories. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.8, 1.1.5 or 2.0.1 then any applications targeting .NET Core will be vulnerable.\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Version 1.1.5 will also install version 1.0.8 of the runtime.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### Acknowledgments\r\n\r\nThanks to Bachraty Gergely for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2017-11770](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8585)\r\n\r\n### Revisions\r\n\r\nV1.0 (Nov 14, 2017): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2017-11-14_"},{"Id":"6853282986","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:23:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/48","RelatedDescription":"Closed issue \"Reserved\" (#48) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853280485","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:35","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Closed issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853280272","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:33","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Opened issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853278942","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:20","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/46","RelatedDescription":"Closed issue \"Reserved\" (#46) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853278548","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:15","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/46","RelatedDescription":"Opened issue \"Reserved\" (#46) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853276874","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:21:58","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/45","RelatedDescription":"Closed issue \"Reserved\" (#45) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853274106","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:21:28","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Closed issue \"Reserved\" (#44) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853272527","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:21:12","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Opened issue \"Reserved\" (#44) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6904610976","Type":"PullRequestEvent","CreatedAt":"2017-11-27T00:48:51","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15226","RelatedDescription":"Merged pull request \"Rebase dutw\" (#15226) at dotnet/coreclr","RelatedBody":""},{"Id":"6904489659","Type":"PullRequestEvent","CreatedAt":"2017-11-26T23:28:27","Actor":"ViktorHofer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15225","RelatedDescription":"Closed pull request \"Add more pre-computed prime numbers to avoid expensive computation\" (#15225) at dotnet/coreclr","RelatedBody":"cc @jkotas"},{"Id":"6904446747","Type":"PullRequestEvent","CreatedAt":"2017-11-26T22:59:50","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15226","RelatedDescription":"Opened pull request \"Rebase dutw\" (#15226) at dotnet/coreclr","RelatedBody":""},{"Id":"6904308667","Type":"PullRequestEvent","CreatedAt":"2017-11-26T21:34:22","Actor":"danmosemsft","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15212","RelatedDescription":"Merged pull request \"Fix resx typo\" (#15212) at dotnet/coreclr","RelatedBody":""},{"Id":"6904122858","Type":"PullRequestEvent","CreatedAt":"2017-11-26T19:36:05","Actor":"ViktorHofer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15225","RelatedDescription":"Opened pull request \"Add more pre-computed prime numbers to avoid expensive computation\" (#15225) at dotnet/coreclr","RelatedBody":"cc @jkotas"},{"Id":"6904118689","Type":"IssuesEvent","CreatedAt":"2017-11-26T19:33:23","Actor":"pgodeq","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15224","RelatedDescription":"Opened issue \"[ARM64/Win] CoreCLR raises System.InvalidOperationException with asp.net benchmark\" (#15224) at dotnet/coreclr","RelatedBody":"While I was executing asp.net bechmark plaintext on Windows-ARM64 with the latest coreclr, an exception is raised.  Following is the failure log. \r\n\r\n```\r\nc:\\DATA\\aspnet_benchmark\\publish_24nov_rel_newasp>CoreRun.exe Benchmarks.dll --scenarios=\"Plaintext\" --threadCount=12\r\n\r\nASP.NET Core Benchmarks\r\n-----------------------\r\nCurrent directory: c:\\DATA\\aspnet_benchmark\\publish_24nov_rel_newasp\r\nWebHostBuilder loading from: c:\\DATA\\aspnet_benchmark\\publish_24nov_rel_newasp\\microsoft.aspnetcore.hosting.dll\r\nScenario configuration found in scenarios.json and/or command line args\r\n\r\nThe following scenarios were enabled:\r\n  Plaintext -> /plaintext\r\n\r\nDatabase: None\r\nUsing server Kestrel\r\nServer GC is currently DISABLED\r\nPress 'C' to force GC or any other key to display GC stats\r\n\r\nHosting environment: Production\r\nContent root path: c:\\DATA\\aspnet_benchmark\\publish_24nov_rel_newasp\r\nNow listening on: http://10.131.5.101:5000\r\nApplication started. Press Ctrl+C to shut down.\r\n\r\nUnhandled Exception: System.InvalidOperationException: An attempt was made to transition a task to a final state when it had already completed.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection.<ProcessRequestsAsync>d__47`1.MoveNext()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state) in c:\\DATA\\ci\\2017-23-11\\coreclr\\src\\mscorlib\\shared\\System\\Threading\\ExecutionContext.cs:line 151\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext() in c:\\DATA\\ci\\2017-23-11\\coreclr\\src\\mscorlib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs:line 556\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch() in c:\\DATA\\ci\\2017-23-11\\coreclr\\src\\mscorlib\\src\\System\\Threading\\ThreadPool.cs:line 586\r\n\r\n\r\n```\r\nLoad generator 'wrk' (set up on a different machine) is used to generate workload, with below arguments: \r\n`./wrk -c 16  -t 16 -d 60 http://10.131.5.101:5000/plaintext -s ./scripts/pipeline.lua -- 16`\r\n\r\nI created a setup to host this asp.net benchmark on Windows-ARM64 by \r\n1. copying all Core_Root (coreclr\\bin\\tests\\Windows_NT.arm64.Release\\Tests\\Core_Root) contents \r\n2. copying System.Memory from CoreFx build (bin\\Windows_NT.AnyCPU.Release\\System.Memory\\netcoreapp), along with asp.net benchmark compiled Benchmarks.dll ( [](https://github.com/aspnet/benchmarks))\r\n3. copying asp.net benchmark dll from (benchmarks\\src\\Benchmarks\\bin\\Release\\netcoreapp2.0\\publish)\r\n4. setting gcServer\r\n`set COMPlus_gcServer=1 `\r\n\r\n5. Executing below command\r\n`c:\\DATA\\aspnet_benchmark\\publish_24nov_rel_newasp>CoreRun.exe Benchmarks.dll --scenarios=\"Plaintext\" --threadCount=6`\r\n\r\nI do not observe this exception when I do the same run on Windows-x64, Linux-x64 or Linux-ARM64.\r\nIs there any setting I have missed or is it a genuine failure ? \r\n\r\nI tried debugging with Windbg.exe for ARM64 and I could collect following information when exception occurs:\r\n```\r\n0:043> sxe clr\r\n0:043> sxd av\r\n0:043> .loadby sos coreclr\r\n0:043> !pe\r\n*** WARNING: Unable to verify checksum for C:\\DATA\\aspnet_benchmark\\publish_24nov_rel_newasp\\CoreCLR.dll\r\nException object: 0000025ac7d52508\r\nException type:   System.InvalidOperationException\r\nMessage:          An attempt was made to transition a task to a final state when it had already completed.\r\nInnerException:   <none>\r\nStackTrace (generated):\r\n    SP               IP               Function\r\n    00000083E3ABF1A0 00007FFB35CDE298 System_Private_CoreLib!System.ThrowHelper.ThrowInvalidOperationException(System.ExceptionResource)+0x38\r\n    00000083E3ABF250 00007FFAD706AE84 microsoft_aspnetcore_server_kestrel_core!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection+<ProcessRequestsAsync>d__47`1[[Microsoft.AspNetCore.Hosting.Internal.HostingApplication+Context, Microsoft.AspNetCore.Hosting]].MoveNext()+0x7ec\r\n    00000083E3ABF2A0 00007FFB35D37438 System_Private_CoreLib!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)+0x128\r\n    00000083E3ABF2C0 00007FFAD707F534 System_Private_CoreLib!System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection+<ProcessRequestsAsync>d__47`1[[Microsoft.AspNetCo+0x54\r\n    00000083E3ABF330 00007FFB35E4072C System_Private_CoreLib!System.Threading.ThreadPoolWorkQueue.Dispatch()+0x19c\r\n\r\nStackTraceString: <none>\r\nHResult: 80131509\r\nThere are nested exceptions on this thread. Run with -nested for details\r\n\r\n0:043> !dso\r\nOS Thread Id: 0x884 (43)\r\nSP/REG           Object           Name\r\nx13              0000025ac7c1b448 System.Threading.ExecutionContext\r\nx14              0000025ac7ce7ac8 System.Threading.ContextCallback\r\nx16              0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABD438 0000025ac7ce7ac8 System.Threading.ContextCallback\r\n00000083E3ABD448 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABD4C8 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABD4D0 0000025ac7ce7ac8 System.Threading.ContextCallback\r\n00000083E3ABD4E0 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABD5A0 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABD5C8 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABD5D0 0000025ac7ce7ac8 System.Threading.ContextCallback\r\n00000083E3ABD898 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABD988 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABD998 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABDAC0 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABDAC8 0000025ac7ce7ac8 System.Threading.ContextCallback\r\n00000083E3ABDAD8 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABDD18 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABDD28 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABDDB0 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABDDB8 0000025ac7ce7ac8 System.Threading.ContextCallback\r\n00000083E3ABDDC8 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABDF68 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABDF78 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABE388 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABE5B8 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABE5C8 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABE8A0 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABE8A8 0000025ac7ce7ac8 System.Threading.ContextCallback\r\n00000083E3ABE8B8 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABEE78 0000025ac7cea498 System.Char[]\r\n00000083E3ABEEE8 0000025ac7cea298 System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib],[System.Resources.ResourceLocator, System.Private.CoreLib]]\r\n00000083E3ABEF58 0000025ac7cea2e8 System.Resources.ResourceReader\r\n00000083E3ABEF78 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABF000 0000025ac7c04110 System.Globalization.CultureInfo\r\n00000083E3ABF0A0 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABF1B0 0000025ac816f820 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvOutputConsumer+<WriteOutputAsync>d__6, Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv]]\r\n00000083E3ABF200 0000025ac7c28960 System.Threading.Tasks.Task\r\n00000083E3ABF230 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABF238 0000025ac7ce7ac8 System.Threading.ContextCallback\r\n00000083E3ABF248 0000025ac7cea638 System.Threading.ThreadPoolWorkQueueThreadLocals\r\n00000083E3ABF268 0000025ac7cea7b0 System.Threading.Thread\r\n00000083E3ABF288 0000025ac7d44d50 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection+<ProcessRequestsAsync>d__47`1[[Microsoft.AspNetCore.Hosting.Internal.HostingApplication+Context, Microsoft.AspNetCore.Hosting]], Microsoft.AspNetCore.Server.Kestrel.Core]]\r\n00000083E3ABF290 0000025ac7c1b448 System.Threading.ExecutionContext\r\n00000083E3ABF2D8 0000025ac7ceebd8 System.Threading.Tasks.CompletionActionInvoker\r\n00000083E3ABF2E0 0000025ac7c28ee0 System.Threading.ThreadPoolWorkQueue\r\n\r\n\r\n!dumpheap -type Exception\r\n\r\nStatistics:\r\n              MT    Count    TotalSize Class Name\r\n00007ffb361ccc30        1           24 System.Text.EncoderExceptionFallback\r\n00007ffb361cc900        1           24 System.Text.DecoderExceptionFallback\r\n00007ffad70a69f0        1           64 System.Action`5[[Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.Abstractions],[System.String, System.Private.CoreLib],[System.String, System.Private.CoreLib],[System.Double, System.Private.CoreLib],[System.Exception, System.Private.CoreLib]]\r\n00007ffad70a6780        1           64 System.Action`4[[Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.Abstractions],[System.TimeSpan, System.Private.CoreLib],[System.DateTimeOffset, System.Private.CoreLib],[System.Exception, System.Private.CoreLib]]\r\n00007ffad70a65b8        1           64 System.Action`4[[Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.Abstractions],[System.String, System.Private.CoreLib],[System.Int64, System.Private.CoreLib],[System.Exception, System.Private.CoreLib]]\r\n00007ffad7048040        1           64 System.Action`4[[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvConnectRequest, Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv],[System.Int32, System.Private.CoreLib],[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException, Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv],[System.Object, System.Private.CoreLib]]\r\n00007ffad6c9da78        1           64 System.Func`3[[System.Object, System.Private.CoreLib],[System.Exception, System.Private.CoreLib],[System.String, System.Private.CoreLib]]\r\n00007ffad70a6c58        2          128 System.Action`4[[Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.Abstractions],[System.String, System.Private.CoreLib],[System.Int32, System.Private.CoreLib],[System.Exception, System.Private.CoreLib]]\r\n00007ffad70a6388        2          128 System.Action`2[[Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.Abstractions],[System.Exception, System.Private.CoreLib]]\r\n00007ffad70495a8        2          128 System.Action`4[[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvWriteReq, Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv],[System.Int32, System.Private.CoreLib],[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException, Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv],[System.Object, System.Private.CoreLib]]\r\n00007ffad7044210        2          128 System.Action`4[[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvStreamHandle, Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv],[System.Int32, System.Private.CoreLib],[Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException, Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv],[System.Object, System.Private.CoreLib]]\r\n00007ffb361c39a0        1          144 System.StackOverflowException\r\n00007ffb361c2e38        1          144 System.ExecutionEngineException\r\n00007ffb361ade28        1          144 System.OutOfMemoryException\r\n00007ffb361adae8        1          144 System.InvalidOperationException\r\n00007ffb361c7d10        2          288 System.Threading.ThreadAbortException\r\n00007ffb361ad7a8        2          288 System.Exception\r\n00007ffad70a6240        5          320 System.Action`4[[Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.Abstractions],[System.String, System.Private.CoreLib],[System.String, System.Private.CoreLib],[System.Exception, System.Private.CoreLib]]\r\n00007ffad70a5cf0       17         1088 System.Action`3[[Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.Abstractions],[System.String, System.Private.CoreLib],[System.Exception, System.Private.CoreLib]]\r\n00007ffb35786ab8       77         2464 System.Collections.ObjectModel.ReadOnlyCollection`1[[System.Exception, System.Private.CoreLib]]\r\n00007ffb3618eb50       78         2488 System.Exception[]\r\n00007ffb3619ee68       99         3168 System.Runtime.ExceptionServices.ExceptionDispatchInfo[]\r\n00007ffb35778b98       99         3960 System.Collections.Generic.List`1[[System.Runtime.ExceptionServices.ExceptionDispatchInfo, System.Private.CoreLib]]\r\n00007ffb361b6f30       99         4752 System.Threading.Tasks.TaskExceptionHolder\r\n00007ffb361b99c0       99         6336 System.Runtime.ExceptionServices.ExceptionDispatchInfo\r\n00007ffad6c9dbb8      116         7424 System.Action`2[[System.Exception, System.Private.CoreLib],[System.Object, System.Private.CoreLib]]\r\n00007ffb361addb8       77        11704 System.AggregateException\r\n00007ffb361b4048       79        13272 System.TypeLoadException\r\n00007ffad70a2248      102        15504 Microsoft.AspNetCore.Protocols.ConnectionAbortedException\r\nTotal 970 objects\r\n\r\n\r\n0:043> !clrstack\r\nOS Thread Id: 0x884 (43)\r\n        Child SP               IP Call Site\r\n00000083e3abd498 00007ffb50bc76a0 [HelperMethodFrame: 00000083e3abd498] \r\n00000083e3abd5b0 00007ffb35d3743c SOS Error: Unable to CoCreateInstance class=CLSID_CorSymBinder_SxS, interface=IID_ISymUnmanagedBinder3, hr=0x80040154\r\nThis usually means the installation of .Net Framework on your machine is missing or needs repair\r\nSystem.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object) [c:\\DATA\\clr\\ci\\2017-23-11\\coreclr\\src\\mscorlib\\shared\\System\\Threading\\ExecutionContext.cs @ 133]\r\n00000083e3abf058 00007ffb363a18a8 [HelperMethodFrame: 00000083e3abf058] \r\n00000083e3abf180 00007ffb35cde29c SOS Error: Unable to CoCreateInstance class=CLSID_CorSymBinder_SxS, interface=IID_ISymUnmanagedBinder3, hr=0x80040154\r\nThis usually means the installation of .Net Framework on your machine is missing or needs repair\r\nSystem.ThrowHelper.ThrowInvalidOperationException(System.ExceptionResource) [c:\\DATA\\clr\\ci\\2017-23-11\\coreclr\\src\\mscorlib\\src\\System\\ThrowHelper.cs @ 175]\r\n00000083e3abf1a0 00007ffad706ae88 SOS Error: Unable to CoCreateInstance class=CLSID_CorSymBinder_SxS, interface=IID_ISymUnmanagedBinder3, hr=0x80040154\r\nThis usually means the installation of .Net Framework on your machine is missing or needs repair\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection+d__47`1[[Microsoft.AspNetCore.Hosting.Internal.HostingApplication+Context, Microsoft.AspNetCore.Hosting]].MoveNext()\r\n00000083e3abf250 00007ffb35d3738c SOS Error: Unable to CoCreateInstance class=CLSID_CorSymBinder_SxS, interface=IID_ISymUnmanagedBinder3, hr=0x80040154\r\nThis usually means the installation of .Net Framework on your machine is missing or needs repair\r\nSystem.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object) [c:\\DATA\\clr\\ci\\2017-23-11\\coreclr\\src\\mscorlib\\shared\\System\\Threading\\ExecutionContext.cs @ 153]\r\n00000083e3abf2a0 00007ffad707f538 SOS Error: Unable to CoCreateInstance class=CLSID_CorSymBinder_SxS, interface=IID_ISymUnmanagedBinder3, hr=0x80040154\r\nThis usually means the installation of .Net Framework on your machine is missing or needs repair\r\nSystem.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection+d__47`1[[Microsoft.AspNetCore.Hosting.Internal.HostingApplication+Context, Microsoft.AspNetCore.Hosting]], Microsoft.AspNetCore.Server.Kestrel.Core]].MoveNext() [c:\\DATA\\clr\\ci\\2017-23-11\\coreclr\\src\\mscorlib\\src\\System\\Runtime\\CompilerServices\\AsyncMethodBuilder.cs @ 566]\r\n00000083e3abf2c0 00007ffb35e40730 SOS Error: Unable to CoCreateInstance class=CLSID_CorSymBinder_SxS, interface=IID_ISymUnmanagedBinder3, hr=0x80040154\r\nThis usually means the installation of .Net Framework on your machine is missing or needs repair\r\nSystem.Threading.ThreadPoolWorkQueue.Dispatch() [c:\\DATA\\clr\\ci\\2017-23-11\\coreclr\\src\\mscorlib\\src\\System\\Threading\\ThreadPool.cs @ 588]\r\n00000083e3abf7d0 00007ffb363a2100 [DebuggerU2MCatchHandlerFrame: 00000083e3abf7d0] \r\n\r\n\r\n0:043> !threads\r\nThreadCount:      43\r\nUnstartedThread:  0\r\nBackgroundThread: 42\r\nPendingThread:    0\r\nDeadThread:       0\r\nHosted Runtime:   no\r\n                                                                                                        Lock  \r\n       ID OSID ThreadOBJ           State GC Mode     GC Alloc Context                  Domain           Count Apt Exception\r\n   0    1  7b0 0000025ac623d660  202a020 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA \r\n  12    2 16cc 0000025ac6243f00    2b220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Finalizer) \r\n  16    3  6ac 0000025ae144f150  1029220 Preemptive  0000025AC80DE8F8:0000025AC80DEA30 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  18    4 12ac 0000025ae1453710  1029220 Preemptive  0000025AC7F3BC38:0000025AC7F3BCB0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  19    5 1aac 0000025ae1455d90  8029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Completion Port) \r\n  21    7  d24 0000025ae1460180    2b220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 1     MTA \r\n  22    8 1b94 0000025ae146f8a0  102a220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  23    9  d20 0000025ae14b3630    2b220 Preemptive  0000025AC839C500:0000025AC839E230 0000025ac6223540 0     MTA \r\n  24   10 1ac0 0000025ae14b42c0    2b220 Preemptive  0000025AC837F090:0000025AC8380130 0000025ac6223540 0     MTA \r\n  25   11  d1c 0000025ae14b4f50    2b220 Preemptive  0000025AC838DB90:0000025AC838E1B0 0000025ac6223540 0     MTA \r\n  26   12 11d8 0000025ae14b59b0    2b220 Preemptive  0000025AC839B190:0000025AC839C230 0000025ac6223540 0     MTA \r\n  27   13 1574 0000025ae14b6050    2b220 Preemptive  0000025AC83AB2A0:0000025AC83AC2B0 0000025ac6223540 0     MTA \r\n  28   14  4d4 0000025ae14b66f0    2b220 Preemptive  0000025AC83629B8:0000025AC8364030 0000025ac6223540 0     MTA \r\n  29   15  d08 0000025ae14e62a0  1029220 Preemptive  0000025AC81C9908:0000025AC81CB230 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  30   16  ca0 0000025ae14e6940  1029220 Preemptive  0000025AC82DC000:0000025AC82DDBB0 0000025ac6223540 0     MTA (Threadpool Worker) System.TypeLoadException 0000025ac82dbda8\r\n  31   17  6ec 0000025ae14fe200  1029220 Preemptive  0000025AC7FC3F28:0000025AC7FC40B0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  32   18 1588 0000025ae14ff640  1029220 Preemptive  0000025AC83551F0:0000025AC8355FB0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  33   19  4d0 0000025ae14fc040  1029220 Preemptive  0000025AC8294118:0000025AC8295930 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  36   20 1a38 0000025ae14fef80  1029220 Preemptive  0000025AC7F4DB58:0000025AC7F4DD30 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  34   21  990 0000025ae14fe8c0  1029220 Preemptive  0000025AC7F6F5D8:0000025AC7F6FE30 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  49   22 1668 0000025ae14fdb40  1029220 Preemptive  0000025AC81BA4D8:0000025AC81BB1B0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  47   23  c48 0000025ae14fc700  1029220 Preemptive  0000025AC82FE0E8:0000025AC82FFCB0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  45   24 1164 0000025ae14fcdc0  1029220 Preemptive  0000025AC7F333A8:0000025AC7F33CB0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  46   25  9c8 0000025ae14fd480  1029220 Preemptive  0000025AC7FD4088:0000025AC7FD4130 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  41   26  458 0000025ae232e050  1029220 Preemptive  0000025AC8006288:0000025AC80062B0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  43   27  884 0000025ae232f490  1029220 Preemptive  0000025AC83ADFA0:0000025AC83AE2B0 0000025ac6223540 0     MTA (Threadpool Worker) System.InvalidOperationException 0000025ac7d52508 (nested exceptions)\r\n  38   28  540 0000025ae232fb50  1029220 Preemptive  0000025AC824C488:0000025AC824D6B0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  40   29 1ad0 0000025ae2331d10  1029220 Preemptive  0000025AC7F5F448:0000025AC7F5FDB0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  39   30 11b8 0000025ae2330210  1029220 Preemptive  0000025AC7F39AE8:0000025AC7F39CB0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  37   31 1b70 0000025ae23308d0  1029220 Preemptive  0000025AC803EF18:0000025AC80404B0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  35   32  224 0000025ae232edd0  1029220 Preemptive  0000025AC7F934A8:0000025AC7F93F30 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  42   33  b10 0000025ae2330f90  1029220 Preemptive  0000025AC810B7A8:0000025AC810CBB0 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  44   34  764 0000025ae2331650  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  48   35  744 0000025ae232e710  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  50   36 154c 0000025ae23323d0  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  51   37  7a0 0000025ae2334c50  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  52   38  264 0000025ae2332a90  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  53   39  250 0000025ae2333150  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  54   40  254 0000025ae2335310  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  55   41  260 0000025ae2333810  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  65   46  4b4 0000025ae234bb50  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  60   47  54c 0000025ae234cf90  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n  64   49 1614 0000025ae234c8d0  1029220 Preemptive  0000000000000000:0000000000000000 0000025ac6223540 0     MTA (Threadpool Worker) \r\n```"},{"Id":"6904010954","Type":"IssuesEvent","CreatedAt":"2017-11-26T18:21:23","Actor":"Rattenkrieg","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15216","RelatedDescription":"Closed issue \"Rationale behind EEHashTableBase implementation\" (#15216) at dotnet/coreclr","RelatedBody":"I've used eehash as basis for some internals in #15135 and here are listed some questionable parts of it. Do not consider it as criticism, I'm just curious of trade-offs which .net team was challenged.\r\nAlso there is [comment](https://github.com/dotnet/coreclr/blob/master/src/vm/eehash.h#L10) in `eehash.h` that might be treaten as evidence of \"not so thorough implementation\":\r\n> // Provides hash table functionality needed in the EE - intended to be replaced later with better\r\n// algorithms, but which have the same interface.\r\n\r\nI'm evaluating implementation from the way it is used in string interning routines - [src/vm/stringliteralmap.h](https://github.com/dotnet/coreclr/blob/master/src/vm/stringliteralmap.h) and friends.\r\n\r\n - Why the load factor is as big as 2? \r\nhttps://github.com/dotnet/coreclr/blob/master/src/vm/eehash.inl#L249\r\n - Why length is increased by multiplying by 4 and hence business of keeping `hash mod size` coprime with length is left to hash function implementation? \r\nhttps://github.com/dotnet/coreclr/blob/master/src/vm/eehash.inl#L673\r\n - Specific to strings, i.e `stringliteralmap` - were alternative data structs considered? For example HAT-trie.\r\n"},{"Id":"6903722824","Type":"PullRequestEvent","CreatedAt":"2017-11-26T15:13:06","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15217","RelatedDescription":"Merged pull request \"Fix Powershell error\" (#15217) at dotnet/coreclr","RelatedBody":"Don't put `-NoProfile` in quotes.\r\n\r\nWhen in quotes, I see this error (from `tests\\runtest.cmd`):\r\n```\r\n-NoProfile : The term '-NoProfile' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify\r\nthat the path is correct and try again.\r\nAt line:1 char:1\r\n+ -NoProfile Get-ChildItem -path c:\\gh\\coreclr\\tests\\..\\bin\\tests\\Windo ...\r\n+ ~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (-NoProfile:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n"},{"Id":"6903680190","Type":"PullRequestEvent","CreatedAt":"2017-11-26T14:45:42","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15221","RelatedDescription":"Merged pull request \"Remove some dead Unix code\" (#15221) at dotnet/coreclr","RelatedBody":"`Environment.ExpandEnvironmentVariables` is only used by `RegistryKey` inside corelib, which is only present on Windows. There's no need for a Unix implementation.\r\n\r\nhttps://github.com/dotnet/coreclr/blob/8c74b3bcd691d842a891bc55909a18a8b1e53200/src/mscorlib/src/Microsoft/Win32/RegistryKey.cs#L649"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6905136458","Type":"IssuesEvent","CreatedAt":"2017-11-27T05:02:34","Actor":"Murtain","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8099","RelatedDescription":"Closed issue \"Docker CI build fails due to Service failed to build: COPY failed\" (#8099) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nThis is happening on Gitlab CI Runners (using their Docker shared runners - I'm using Gitlab for private projects and Docker  support):\r\n\r\n```\r\ndocker ps\r\nCONTAINER ID        IMAGE                     COMMAND             CREATED             STATUS                  PORTS                                                               NAMES\r\n38db8a517610        gitlab/gitlab-ce:latest   \"/assets/wrapper\"   35 hours ago        Up 23 hours (healthy)   0.0.0.0:2222->22/tcp, 0.0.0.0:8080->80/tcp, 0.0.0.0:8443->443/tcp   gitlab\r\n\r\n```\r\n\r\n## Expected  behavior\r\nI expected the project to build /publish normally.\r\n## Actual behavior\r\n\r\n```\r\nService 'murtain.oauth2' failed to build: COPY failed: stat /var/lib/docker/tmp/docker-builder211242972/obj/Docker/publish: no such file or directory\r\nERROR: Job failed: exit code 1\r\n```\r\n\r\n## Environment data\r\n\r\n`docker-compose.ci.build.yml`\r\n```\r\nversion: '3'\r\n\r\nservices:\r\n  ci-build:\r\n    image: microsoft/aspnetcore-build:2.0\r\n    volumes:\r\n      - .:/src\r\n    working_dir: /src\r\n    command: /bin/bash -c \"dotnet restore ./Murtain.OAuth2.sln && dotnet publish ./Murtain.OAuth2.sln -c Release -o ./obj/Docker/publish\"\r\n```\r\n`Dockerfile `\r\n\r\n```\r\nFROM microsoft/aspnetcore:2.0\r\nARG source\r\nWORKDIR /app\r\nEXPOSE 80\r\nCOPY ${source:-obj/Docker/publish} .\r\nENTRYPOINT [\"dotnet\", \"Murtain.OAuth2.dll\"]\r\n\r\n```\r\n\r\n`gitlab.ci.yml`\r\n\r\n```\r\nimage: tmaier/docker-compose\r\n\r\nstages:\r\n- build\r\n- deploy\r\n\r\nbefore_script:\r\n- docker --version\r\n- docker-compose --version\r\n\r\nbuild:\r\n  stage: build\r\n  script:\r\n    - ls\r\n    - cd Murtain.OAuth2\r\n    - ls\r\n    - docker-compose -f docker-compose.ci.build.yml up\r\n    \r\n  \r\ndeploy:\r\n  stage: deploy\r\n  script:\r\n    - ls\r\n    - cd Murtain.OAuth2\r\n    - ls\r\n    - dotnet info\r\n    - docker-compose -f docker-compose.yml up\r\n  only:\r\n    - master\r\n\r\n```\r\n\r\njob-build :\r\n\r\n```\r\nRunning with gitlab-runner 10.2.0 (0a75cdd1)\r\n  on gitlab runner (812d076a)\r\nUsing Docker executor with image tmaier/docker-compose ...\r\nUsing docker image sha256:ead09bd5e3f0fcb60614d4eb5e6dcd75da8274e5c86e6b63954956315b2f8a15 for predefined container...\r\nPulling docker image tmaier/docker-compose ...\r\nUsing docker image tmaier/docker-compose ID=sha256:c58b8bbe54fb1e8c0181e9669474a3598788e61ccf12f12c66aca44cfc6d95f0 for build container...\r\nRunning on runner-812d076a-project-3-concurrent-0 via izl88djldhqpnez...\r\nFetching changes...\r\nHEAD is now at 5976156 Update .gitlab-ci.yml\r\nFrom http://git.x-dva.com/dev/Murtain.OAuth2\r\n   5976156..2003196  master     -> origin/master\r\nChecking out 20031962 as master...\r\nSkipping Git submodules setup\r\n$ docker --version\r\nDocker version 17.11.0-ce, build 1caf76c\r\n$ docker-compose --version\r\ndocker-compose version 1.17.1, build 6d101fb\r\n$ ls\r\nMurtain.OAuth2\r\n$ cd Murtain.OAuth2\r\n$ ls\r\nMurtain.OAuth2\r\nMurtain.OAuth2.sln\r\ndocker-compose.ci.build.yml\r\ndocker-compose.dcproj\r\ndocker-compose.override.yml\r\ndocker-compose.yml\r\n$ docker-compose -f docker-compose.ci.build.yml up\r\nStarting murtainoauth2_ci-build_1 ... \r\nStarting murtainoauth2_ci-build_1\r\n\r\nStarting murtainoauth2_ci-build_1 ... done\r\nAttaching to murtainoauth2_ci-build_1\r\nci-build_1  | MSBUILD : error MSB1009: Project file does not exist.\r\nci-build_1  | Switch: ./Murtain.OAuth2.sln\r\nmurtainoauth2_ci-build_1 exited with code 1\r\nJob succeeded\r\n```\r\njob-deploy:\r\n```\r\nRunning with gitlab-runner 10.2.0 (0a75cdd1)\r\n  on gitlab runner (812d076a)\r\nUsing Docker executor with image tmaier/docker-compose ...\r\nUsing docker image sha256:ead09bd5e3f0fcb60614d4eb5e6dcd75da8274e5c86e6b63954956315b2f8a15 for predefined container...\r\nPulling docker image tmaier/docker-compose ...\r\nUsing docker image tmaier/docker-compose ID=sha256:c58b8bbe54fb1e8c0181e9669474a3598788e61ccf12f12c66aca44cfc6d95f0 for build container...\r\nRunning on runner-812d076a-project-3-concurrent-0 via izl88djldhqpnez...\r\nFetching changes...\r\nHEAD is now at 2003196 Update .gitlab-ci.yml\r\nChecking out 20031962 as master...\r\nSkipping Git submodules setup\r\n$ docker --version\r\nDocker version 17.11.0-ce, build 1caf76c\r\n$ docker-compose --version\r\ndocker-compose version 1.17.1, build 6d101fb\r\n$ ls\r\nMurtain.OAuth2\r\n$ cd Murtain.OAuth2\r\n$ ls\r\nMurtain.OAuth2\r\nMurtain.OAuth2.sln\r\ndocker-compose.ci.build.yml\r\ndocker-compose.dcproj\r\ndocker-compose.override.yml\r\ndocker-compose.yml\r\n$ docker-compose -f docker-compose.yml up\r\nBuilding murtain.oauth2\r\nStep 1/6 : FROM microsoft/aspnetcore:2.0\r\n ---> 01d033b55240\r\nStep 2/6 : ARG source\r\n ---> Using cache\r\n ---> 3ef5453f13f6\r\nStep 3/6 : WORKDIR /app\r\n ---> Using cache\r\n ---> 985696166e6f\r\nStep 4/6 : EXPOSE 80\r\n ---> Using cache\r\n ---> 5c63d0729cc7\r\nStep 5/6 : COPY ${source:-obj/Docker/publish} .\r\nService 'murtain.oauth2' failed to build: COPY failed: stat /var/lib/docker/tmp/docker-builder211242972/obj/Docker/publish: no such file or directory\r\nERROR: Job failed: exit code 1\r\n```\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6904585264","Type":"IssuesEvent","CreatedAt":"2017-11-27T00:32:12","Actor":"Petermarcu","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/592","RelatedDescription":"Closed issue \"The certificate authority is invalid or incorrect exception while using .NET standard 2.0\" (#592) at dotnet/standard","RelatedBody":"My problem here is specifically in .Net standard 2.0 and .Net core 2.0, since the same code, seems to work fine with .net framework 4.6.1.\r\n\r\nIn .NET framework, we are using following code to trust all certificates:\r\n\r\n`ServicePointManager.ServiceCertificateValidationCallback += (o, c, ch, er) => true;`\r\n\r\nBut the same code is not working with .NET core 2.0 and .NET standard 2.0.\r\n\r\nI have also tried the below code:\r\n\r\n`var httpClientHandler = new HttpClientHandler();\r\nhttpClientHandler.ServiceCertificateCustomValidationCallback = HttpClientHandler.DangerousAcceptAnyServerCertificateValidator;`\r\n\r\nBut this is not working for me.\r\n'An error occurred while sending the request, The certificate authority is invalid or incorrect' exception has been thrown.\r\n\r\n![image](https://user-images.githubusercontent.com/25975246/33242042-855d6ba6-d2f4-11e7-841c-483f82159d49.png)\r\n\r\n\r\nPlease suggest me any alternative solution for the self-signed certificate in .NET standard 2.0."},{"Id":"6903840711","Type":"IssuesEvent","CreatedAt":"2017-11-26T16:27:32","Actor":"jainankit2474","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/592","RelatedDescription":"Opened issue \"The certificate authority is invalid or incorrect exception while using .NET standard 2.0\" (#592) at dotnet/standard","RelatedBody":"My problem here is specifically in .Net standard 2.0 and .Net core 2.0, since the same code, seems to work fine with .net framework 4.6.1.\r\n\r\nIn .NET framework, we are using following code to trust all certificates:\r\n\r\n`ServicePointManager.ServiceCertificateValidationCallback += (o, c, ch, er) => true;`\r\n\r\nBut the same code is not working with .NET core 2.0 and .NET standard 2.0.\r\n\r\nI have also tried the below code:\r\n\r\n`var httpClientHandler = new HttpClientHandler();\r\nhttpClientHandler.ServiceCertificateCustomValidationCallback = HttpClientHandler.DangerousAcceptAnyServerCertificateValidator;`\r\n\r\nBut this is not working for me.\r\n'An error occurred while sending the request, The certificate authority is invalid or incorrect' exception has been thrown.\r\n\r\n![image](https://user-images.githubusercontent.com/25975246/33242042-855d6ba6-d2f4-11e7-841c-483f82159d49.png)\r\n\r\n\r\nPlease suggest me any alternative solution for the self-signed certificate in .NET standard 2.0."},{"Id":"6893875796","Type":"IssuesEvent","CreatedAt":"2017-11-23T07:25:10","Actor":"WalterEbbers","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/575","RelatedDescription":"Closed issue \".NET Standard 2.0 / .NET Framework 4.6.1 Could not load file or assembly 'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. The system cannot find the file specified.\" (#575) at dotnet/standard","RelatedBody":"Hi,\r\nI have a .NET Standard 2.0 library which references a few NET 4.6.1 libraries. \r\nThe .NET Standard library will be used in a .NET Core web application. \r\nThe .NET 4.6.1 Framework uses library 'System.ServiceModel.dll' for WCF calls.\r\n\r\nI try to do the following. \r\nMy .NET Core webapp goes to the .NET Standard library which calls something from my .NET Framework 4.6.1 project. But at that moment i get the following error: \r\n'Could not load file or assembly 'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. The system cannot find the file specified.'\r\n\r\nThe 'System.ServiceModel.dll' is referenced as a assemblyreference in the .NET Standard project and the .NET Core webapp. \r\n\r\nI really thought that this would work but sadly it doesn't. Is this a issue with the .NET libraries?\r\nDo i need to change things in my .NET Standard / Core project?\r\n\r\nThnx in advance :) \r\n\r\nWalter\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6905153746","Type":"IssuesEvent","CreatedAt":"2017-11-27T05:10:39","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25516","RelatedDescription":"Opened issue \"System.Net.Http.dll 4.6.25220.1和 System.Net.Http.dll 4.6.25514.4不兼容\" (#25516) at dotnet/corefx","RelatedBody":"@ghd258 commented on [Thu Nov 16 2017](https://github.com/dotnet/core/issues/1098)\n\nSystem.Net.Http.dll 4.6.25220.1和\r\nSystem.Net.Http.dll 4.6.25514.4 不兼容 而且NuGet就没有4.6.25514.4 这个版本\n\n---\n\n@Petermarcu commented on [Sun Nov 26 2017](https://github.com/dotnet/core/issues/1098#issuecomment-347080256)\n\nTranslated:\r\nSystem.Net.Http.dll 4.6.25220.1 and System.Net.Http.dll 4.6.25514.4 is not compatible and NuGet is not 4.6.25514.4 this version\r\n\r\n@davidsh is this another instance of the OOB/Binding redirect challenges with System.Net.Http?\n\n"},{"Id":"6904892732","Type":"IssuesEvent","CreatedAt":"2017-11-27T03:07:01","Actor":"sam0302","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25515","RelatedDescription":"Opened issue \"corefx build fails with  zero as null pointer constant\" (#25515) at dotnet/corefx","RelatedBody":"I am trying to build corefx for raspberry pi with clang 5.0. I am betting below error at multiple places.\r\n\r\n`/src/Native/Unix/System.Native/pal_random.cpp::9494::2222::\r\n  errorerror: : zero as null pointer constant [-Werror,-Wzero-as-null-pointer-constant]zero as null pointer constant [-Werror,-Wzero-as-null-pointer-constant]\r\n        srand48(time(NULL));        srand48(time(NULL));\r\n                     ^~~~                     ^~~~\r\n                     nullptr                     nullptr\r\n\r\n/corefx/2.0.0-r0/recipe-sysroot-native/usr/lib/clang/5.0.1/include/stddef.h::100100::1818::  notenote: : expanded from macro 'NULL'expanded from macro 'NULL'\r\n#    define NULL __null#    define NULL __null\r\n                 ^                 ^\r\n`\r\nAny suggestion would be of great help."},{"Id":"6904704550","Type":"PullRequestEvent","CreatedAt":"2017-11-27T01:41:24","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25514","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-25926-03, preview1-25926-02, respectively (master)\" (#25514) at dotnet/corefx","RelatedBody":""},{"Id":"6904585268","Type":"IssuesEvent","CreatedAt":"2017-11-27T00:32:12","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25513","RelatedDescription":"Opened issue \"The certificate authority is invalid or incorrect exception while using .NET standard 2.0\" (#25513) at dotnet/corefx","RelatedBody":"@jainankit2474 commented on [Sun Nov 26 2017](https://github.com/dotnet/standard/issues/592)\n\nMy problem here is specifically in .Net standard 2.0 and .Net core 2.0, since the same code, seems to work fine with .net framework 4.6.1.\r\n\r\nIn .NET framework, we are using following code to trust all certificates:\r\n\r\n`ServicePointManager.ServiceCertificateValidationCallback += (o, c, ch, er) => true;`\r\n\r\nBut the same code is not working with .NET core 2.0 and .NET standard 2.0.\r\n\r\nI have also tried the below code:\r\n\r\n`var httpClientHandler = new HttpClientHandler();\r\nhttpClientHandler.ServiceCertificateCustomValidationCallback = HttpClientHandler.DangerousAcceptAnyServerCertificateValidator;`\r\n\r\nBut this is not working for me.\r\n'An error occurred while sending the request, The certificate authority is invalid or incorrect' exception has been thrown.\r\n\r\n![image](https://user-images.githubusercontent.com/25975246/33242042-855d6ba6-d2f4-11e7-841c-483f82159d49.png)\r\n\r\n\r\nPlease suggest me any alternative solution for the self-signed certificate in .NET standard 2.0.\n\n---\n\n@Petermarcu commented on [Sun Nov 26 2017](https://github.com/dotnet/standard/issues/592#issuecomment-347051864)\n\nThis may be an issue with the implementation of those API's in .NET Core 2.0. I'm going to move this issue to .NET Core so that can be determined.\n\n"},{"Id":"6904547823","Type":"IssuesEvent","CreatedAt":"2017-11-27T00:08:01","Actor":"mklement0","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25512","RelatedDescription":"Opened issue \"Remove suffix `.sh` from Unix shell scripts such as `build.sh` - let the shebang line do its job\" (#25512) at dotnet/corefx","RelatedBody":"On Unix platforms, it is solely the executable bit that determines whether files are executable - irrespective of the filename or its suffix (extension, in Windows-speak).\r\n\r\nA file marked as executable that happens to be a _script_ file specifies the executable (interpreter) to use via its _shebang line_,  the very first line which looks something like `#!/usr/bin/env bash`.\r\n\r\nTherefore, **rename `build.sh` to just `build`, ...**  - **suffix `.sh` is technically unnecessary and generally a bad habit.**\r\n\r\nOmitting the `.sh` suffix will make invocation on Unix more like on Windows:\r\n\r\n```cmd\r\n:: cmd.exe\r\nbuild\r\n\r\n# PowerShell\r\n./build\r\n```\r\n\r\n```sh\r\n# bash\r\n./build\r\n```\r\n\r\nNote that, for security reasons, the `./` part is necessary in order to invoke an executable in the current dir. on Unix platforms, just as it is in PowerShell.\r\n"},{"Id":"6904284692","Type":"PullRequestEvent","CreatedAt":"2017-11-26T21:19:17","Actor":"WinCPP","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25511","RelatedDescription":"Opened pull request \"Issue #23141 Fix ManagedHandler cancellation Tests\" (#25511) at dotnet/corefx","RelatedBody":"An attempt to solve #23141. There are two parts to the PR.\r\n1. Improving the cancellation support in ManagedHandler: this employs handling the cancellation via the CancellationToken while allowing the operation to still run in background (as discussed in [this](https://github.com/dotnet/corefx/issues/23141#issuecomment-346678600) comment). The idea is based on the blog article [here](https://blogs.msdn.microsoft.com/pfxteam/2012/10/05/how-do-i-cancel-non-cancelable-async-operations/) :-)\r\n\r\n2. Even with the above 'by-pass' fix, the test 'ReadAsStreamAsync_ReadAsync_Cancel_TaskCanceledQuickly' still hanged while doing `ReadAsync` from the stream. In case of `ManagedHandler` the response stream is of type `ContentLengthReadStream` which needed fix on the lines of cancelable functionality in `WinHttpResponseStream` ([here](https://github.com/dotnet/corefx/blob/035b1e367c18db600c9d7158102fd2ab4e7a7ed2/src/System.Net.Http.WinHttpHandler/src/System/Net/Http/WinHttpResponseStream.cs#L216))\r\n\r\nI am still trying to find out how to close / dispose the HttpConnection or the stream instead of allowing the operations to run in the background, consequences of which I am not very sure of.\r\n\r\n@stephentoub, I have created this PR as we discussed [here](https://github.com/dotnet/corefx/issues/23141#issuecomment-340493361). Appreciate your inputs.\r\n\r\nThanks,\r\nMandar"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6905062165","Type":"PullRequestEvent","CreatedAt":"2017-11-27T04:25:09","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23341","RelatedDescription":"Merged pull request \"Handle an empty span for 'introduce variable' refactoring\" (#23341) at dotnet/roslyn","RelatedBody":"Relates to https://github.com/dotnet/roslyn/issues/23310\r\n\r\n"},{"Id":"6904746575","Type":"IssuesEvent","CreatedAt":"2017-11-27T02:01:54","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23382","RelatedDescription":"Opened issue \"unable to cast object of type to type\" (#23382) at dotnet/roslyn","RelatedBody":"While typing in C# code editor I got a header bar. I clicked &quot;Enable&quot; and it appears many times. Here is the stack trace:\n\nSystem.InvalidCastException : Unable to cast object of type 'Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax' to type 'Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax'.\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.CodeGenerator`3.AddInvocationAtCallSiteAsync[TStatement,TExpression,TNodeUnderContainer](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CSharp.ExtractMethod.CSharpMethodExtractor.CSharpCodeGenerator.CreateStatementsOrInitializerToInsertAtCallSiteAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CSharp.ExtractMethod.CSharpMethodExtractor.CSharpCodeGenerator.GenerateBodyForCallSiteContainerAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.CodeGenerator`3.GenerateAsync[TStatement,TExpression,TNodeUnderContainer](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ExtractMethodAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.ExtractMethod.AbstractExtractMethodService`3.ExtractMethodAsync[TValidator,TExtractor,TResult](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.GetCodeActionAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.ComputeRefactoringsAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/148945/unable-to-cast-object-of-type-to-type.html\nVSTS ticketId: 523810_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"6904528422","Type":"IssuesEvent","CreatedAt":"2017-11-26T23:55:17","Actor":"Pilchie","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23381","RelatedDescription":"Opened issue \"IDE0009: Add 'this' or 'Me' qualification fires on object initializer.\" (#23381) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVS 2017 15.5 P4\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Enable the option to qualify field references with `this`. \r\n2. Paste this code:\r\n```C#\r\nclass C\r\n{\r\n    void M()\r\n    {\r\n        new C { P = 42 };\r\n    }\r\n\r\n    int P;\r\n}\r\n``` \r\n\r\n**Expected Behavior**:\r\nNo diagnostic.\r\n\r\n**Actual Behavior**:\r\nA diagnostic is offered, and applying the fix breaks the code."},{"Id":"6904229074","Type":"IssuesEvent","CreatedAt":"2017-11-26T20:44:39","Actor":"alrz","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23379","RelatedDescription":"Closed issue \"Pattern variable scope doesn't leak out of else if\" (#23379) at dotnet/roslyn","RelatedBody":"Is this by design?\r\n```cs\r\nvoid M(bool o) {\r\n    if (o)\r\n    {\r\n    }\r\n    else if (o is var var)\r\n    {\r\n      return;\r\n    }  \r\n    else var = true; // Remove `else` and this no longer compiles\r\n}\r\n```\r\nIntuitively, `else` here should be insignificant since `if` body's endpoint is unreachable.\r\n\r\nAnother example:\r\n```cs\r\nvoid M(bool o) {\r\n    if (o)\r\n    {\r\n        var var = 0;\r\n        return;\r\n    }\r\n    else if (o is var var)\r\n    {\r\n    } \r\n}\r\n```\r\nIMO the presence of `else` shouldn't affect scope of variables.\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6904309171","Type":"PullRequestEvent","CreatedAt":"2017-11-26T21:34:43","Actor":"danmosemsft","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5026","RelatedDescription":"Merged pull request \"Fix typo\" (#5026) at dotnet/corert","RelatedBody":""},{"Id":"6904218653","Type":"PullRequestEvent","CreatedAt":"2017-11-26T20:38:07","Actor":"danmosemsft","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5026","RelatedDescription":"Opened pull request \"Fix typo\" (#5026) at dotnet/corert","RelatedBody":""},{"Id":"6903800697","Type":"PullRequestEvent","CreatedAt":"2017-11-26T16:02:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5025","RelatedDescription":"Merged pull request \"Fix build error (dotnet/coreclr#15218)\" (#5025) at dotnet/corert","RelatedBody":""},{"Id":"6903732553","Type":"PullRequestEvent","CreatedAt":"2017-11-26T15:19:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5025","RelatedDescription":"Opened pull request \"Fix build error (dotnet/coreclr#15218)\" (#5025) at dotnet/corert","RelatedBody":""},{"Id":"6903682488","Type":"PullRequestEvent","CreatedAt":"2017-11-26T14:47:15","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5024","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5024) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6903598634","Type":"PullRequestEvent","CreatedAt":"2017-11-26T13:52:20","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5024","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5024) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6902888434","Type":"PullRequestEvent","CreatedAt":"2017-11-26T03:27:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5023","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5023) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6902836169","Type":"PullRequestEvent","CreatedAt":"2017-11-26T02:34:52","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5023","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5023) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6902113994","Type":"PullRequestEvent","CreatedAt":"2017-11-25T16:34:43","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5022","RelatedDescription":"Merged pull request \"Update dependencies to latest\" (#5022) at dotnet/corert","RelatedBody":""},{"Id":"6902043742","Type":"PullRequestEvent","CreatedAt":"2017-11-25T15:47:19","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5022","RelatedDescription":"Opened pull request \"Update dependencies to latest\" (#5022) at dotnet/corert","RelatedBody":""},{"Id":"6901248171","Type":"PullRequestEvent","CreatedAt":"2017-11-25T04:05:06","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5021","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5021) at dotnet/corert","RelatedBody":""},{"Id":"6901247857","Type":"PullRequestEvent","CreatedAt":"2017-11-25T04:04:44","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5021","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5021) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"6898118624","Type":"PullRequestEvent","CreatedAt":"2017-11-24T08:00:50","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1767","RelatedDescription":"Opened pull request \"Merge release/15.5 to master\" (#1767) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/15.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/15.5-to-master-20171124-080047\ngit reset --hard upstream/master\ngit merge upstream/release/15.5\n# Fix merge conflicts\ngit commit\ngit push merges/release/15.5-to-master-20171124-080047 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6898118548","Type":"PullRequestEvent","CreatedAt":"2017-11-24T08:00:48","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1766","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/15.5\" (#1766) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/15.5.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/15.5-20171124-080045\ngit reset --hard upstream/release/15.5\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/15.5-20171124-080045 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6893453650","Type":"IssuesEvent","CreatedAt":"2017-11-23T03:54:56","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1623","RelatedDescription":"Closed issue \"SolutionDir is not resolved during dotnet restore\" (#1623) at dotnet/sdk","RelatedBody":"See the following repository that can reproduce the error\r\n\r\nhttps://github.com/bradphelan/msbuildbug\r\n\r\nfirst reported at\r\n\r\nhttps://stackoverflow.com/questions/46526428/msbuild-solutiondir-resolves-incorrectly-to-c-when-running-msbuild-tresto"},{"Id":"6893426284","Type":"IssuesEvent","CreatedAt":"2017-11-23T03:40:34","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1755","RelatedDescription":"Closed issue \".NET Standard 2.0 class library, that references a .NET Framework 4.7.1 class library with PackageReference fails\" (#1755) at dotnet/sdk","RelatedBody":"I have a .NET Standard 2.0 class library, that references a .NET Framework 4.7.1 class library (works fine)\r\n\r\nHowever, if the .NET Framework 4.7.1 adds a PackageReference (new style), I get the following error (possibly due to transitivity):\r\n\r\nError    NU1201           Project ClassLibrary2 is not compatible with netstandard2.0 (.NETStandard,Version=v2.0). Project ClassLibrary2 supports: net471 (.NETFramework,Version=v4.7.1)     \r\n\r\nThe package in question being added can be any package, packages that have support for .NET Standard or otherwise, the same error.\r\n\r\nWhat am I missing?\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"933058673206730752","CreatedAt":"2017-11-21T19:44:57+00:00","UserScreenname":"dotnet","Text":".NET Core Alpine Image Ready for Testing https://t.co/SsQtOGuAFD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":207,"FavoriteCount":153,"RawContent":null},{"Id":"932677600715071488","CreatedAt":"2017-11-20T18:30:42+00:00","UserScreenname":"dotnet","Text":"Looking to migrate your existing .NET apps to the cloud but need our help? Fill out this survey and let us know: https://t.co/g6xbbWkX93","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":15,"RawContent":null},{"Id":"931580871437635584","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"dotnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/nXoIDLCubn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null},{"Id":"931255246872915968","CreatedAt":"2017-11-16T20:18:47+00:00","UserScreenname":"dotnet","Text":"Migrate your .NET apps to the cloud and benefit from easier deployments and scalability, without rearchitecting you… https://t.co/gNfBFe3Sbh","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":61,"RawContent":null},{"Id":"931205222579318784","CreatedAt":"2017-11-16T17:00:00+00:00","UserScreenname":"dotnet","Text":"Having trouble moving to .NET Core because of missing Windows APIs? Introducing the Windows Compatibility Pack for… https://t.co/s3KKSJ467u","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":149,"FavoriteCount":85,"RawContent":null}]}},"RunOn":"2017-11-27T05:30:21.4126872Z","RunDurationInMilliseconds":7836}