{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel.Â Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing compatibility version in MVC","PublishedOn":"2018-02-27T22:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Ryan Nowak In 2.1 we&#8217;re adding a feature to address a long-standing problem for maintaining MVC &#8211; how do we make improvements to framework code without making it...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/introducing-compatibility-version-in-mvc/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Getting started with SignalR","PublishedOn":"2018-02-27T21:57:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Since 2013, ASP.NET developers have been using SignalR to build real-time web applications. Now, with ASP.NET Core 2.1 Preview 1, we&#8217;re bringing SignalR over to ASP.NET Core so you can build...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Using ASP.NET Core Previews on Azure App Service","PublishedOn":"2018-02-27T19:18:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are 3 options to get ASP.NET Core 2.1 Preview applications running on Azure App Service: Installing the Preview1 site extension Deploying your app self-contained Using Web Apps for Containers...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7363130029","Type":"IssuesEvent","CreatedAt":"2018-03-12T01:26:02","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2945","RelatedDescription":"Closed issue \"Exclamation mark in the filepath\" (#2945) at aspnet/Home","RelatedBody":"I'm not internally sure if i'm posting this at the right place.\r\n\r\nI started learning, dotnetcore + angular a few days ago, and i run into a frustrating issue:\r\n\r\n\"Content root path: F:\\VS2012\\!dotNetCore\\vega\" \r\nnotice the Exclamation mark in the filepath: !dotNetCore\r\n\r\n```\r\nF:\\VS2012\\!dotNetCore\\vega>dotnet watch run\r\nwatch : Started\r\nHosting environment: Development\r\nContent root path: F:\\VS2012\\!dotNetCore\\vega\r\nNow listening on: http://localhost:5000\r\nApplication started. Press Ctrl+C to shut down.\r\nfail: Microsoft.AspNetCore.NodeServices[0]\r\n      Hash: 948b4c81daa498cd5248\r\n      Version: webpack 2.5.1\r\n      Time: 10553ms\r\n                   Asset     Size  Chunks                    Chunk Names\r\n          main-client.js  2.91 MB       0  [emitted]  [big]  main-client\r\n      main-client.js.map  3.52 MB       0  [emitted]         main-client\r\n      chunk    {0} main-client.js, main-client.js.map (main-client) 2.78 MB [entry] [rendered]\r\n          [1] ./~/@angular/core/@angular/core.es5.js 489 kB {0} [built]\r\n         [37] ./ClientApp/boot.browser.ts 989 bytes {0} [built]\r\n         [38] ./~/event-source-polyfill/eventsource.js 22.2 kB {0} [built]\r\n         [39] (webpack)-hot-middleware/client.js?path=__webpack_hmr&dynamicPublicPath=true 6.68 kB {0} [built]\r\n         [42] ./~/@angular/platform-browser-dynamic/@angular/platform-browser-dynamic.es5.js 5.88 kB {0} [built]\r\n         [46] ./ClientApp/app/app.browser.module.ts 1.35 kB {0} [built]\r\n         [52] ./~/bootstrap/dist/js/npm.js 484 bytes {0} [built]\r\n         [76] ./~/querystring-es3/index.js 127 bytes {0} [built]\r\n         [77] ./~/reflect-metadata/Reflect.js 48 kB {0} [built]\r\n        [106] ./~/strip-ansi/index.js 161 bytes {0} [built]\r\n        [109] (webpack)-hot-middleware/client-overlay.js 1.82 kB {0} [built]\r\n        [110] (webpack)-hot-middleware/process-update.js 3.88 kB {0} [built]\r\n        [111] (webpack)/buildin/module.js 517 bytes {0} [built]\r\n        [112] ./~/zone.js/dist/zone.js 96 kB {0} [built]\r\n        [113] multi event-source-polyfill webpack-hot-middleware/client?path=__webpack_hmr&dynamicPublicPath=true ./ClientApp/boot.browser.ts 52 bytes {0} [built]\r\n           + 99 hidden modules\r\n\r\n      WARNING in ./~/@angular/core/@angular/core.es5.js\r\n      5704:15-36 Critical dependency: the request of a dependency is an expression\r\n\r\n      WARNING in ./~/@angular/core/@angular/core.es5.js\r\n      5720:15-102 Critical dependency: the request of a dependency is an expression\r\n\r\n      ERROR in ./ClientApp/app/components/app/app.component.css\r\n      Module not found: Error: Can't resolve '../../../../../..' in 'F:\\VS2012\\!dotNetCore\\vega\\ClientApp\\app\\components\\app'\r\n       @ ./ClientApp/app/components/app/app.component.css 2:21-181\r\n       @ ./ClientApp/app/components/app/app.component.ts\r\n       @ ./ClientApp/app/app.browser.module.ts\r\n       @ ./ClientApp/boot.browser.ts\r\n       @ multi event-source-polyfill webpack-hot-middleware/client?path=__webpack_hmr&dynamicPublicPath=true ./ClientApp/boot.browser.ts\r\n\r\n      ERROR in ./ClientApp/app/components/navmenu/navmenu.component.css\r\n      Module not found: Error: Can't resolve '../../../../../..' in 'F:\\VS2012\\!dotNetCore\\vega\\ClientApp\\app\\components\\navmenu'\r\n       @ ./ClientApp/app/components/navmenu/navmenu.component.css 2:21-189\r\n       @ ./ClientApp/app/components/navmenu/navmenu.component.ts\r\n       @ ./ClientApp/app/app.shared.module.ts\r\n       @ ./ClientApp/app/app.browser.module.ts\r\n       @ ./ClientApp/boot.browser.ts\r\n       @ multi event-source-polyfill webpack-hot-middleware/client?path=__webpack_hmr&dynamicPublicPath=true ./ClientApp/boot.browser.ts\r\n```\r\n\r\nIf i remove the (!) from the filepath, everything works just fine. "},{"Id":"7362595575","Type":"IssuesEvent","CreatedAt":"2018-03-11T20:07:05","Actor":"jmudavid","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2946","RelatedDescription":"Opened issue \"Travis-CI builds cannot connect to Test Platform on OS X\" (#2946) at aspnet/Home","RelatedBody":"Hello,\r\nI noticed that the Travis CI builds are failing after the last set of updates made automatically to dependencies.props.  I saw this issue in JsonPatch which I am using, but also saw it within the CORS project.  There may be others impacted as well.  I don't know where the CI process is managed or who has access.  Is there anybody with experience in CI who could help out.  \r\nThanks!"},{"Id":"7362097585","Type":"IssuesEvent","CreatedAt":"2018-03-11T15:15:52","Actor":"S0und","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2945","RelatedDescription":"Opened issue \"Exclamation mark in the filepath\" (#2945) at aspnet/Home","RelatedBody":"I'm not internally sure if i'm posting this at the right place.\r\n\r\nI started learning, dotnetcore + angular a few days ago, and i run into a frustrating issue:\r\n\r\n\"Content root path: F:\\VS2012\\!dotNetCore\\vega\" \r\nnotice the Exclamation mark in the filepath: !dotNetCore\r\n\r\n```\r\nF:\\VS2012\\!dotNetCore\\vega>dotnet watch run\r\nwatch : Started\r\nHosting environment: Development\r\nContent root path: F:\\VS2012\\!dotNetCore\\vega\r\nNow listening on: http://localhost:5000\r\nApplication started. Press Ctrl+C to shut down.\r\nfail: Microsoft.AspNetCore.NodeServices[0]\r\n      Hash: 948b4c81daa498cd5248\r\n      Version: webpack 2.5.1\r\n      Time: 10553ms\r\n                   Asset     Size  Chunks                    Chunk Names\r\n          main-client.js  2.91 MB       0  [emitted]  [big]  main-client\r\n      main-client.js.map  3.52 MB       0  [emitted]         main-client\r\n      chunk    {0} main-client.js, main-client.js.map (main-client) 2.78 MB [entry] [rendered]\r\n          [1] ./~/@angular/core/@angular/core.es5.js 489 kB {0} [built]\r\n         [37] ./ClientApp/boot.browser.ts 989 bytes {0} [built]\r\n         [38] ./~/event-source-polyfill/eventsource.js 22.2 kB {0} [built]\r\n         [39] (webpack)-hot-middleware/client.js?path=__webpack_hmr&dynamicPublicPath=true 6.68 kB {0} [built]\r\n         [42] ./~/@angular/platform-browser-dynamic/@angular/platform-browser-dynamic.es5.js 5.88 kB {0} [built]\r\n         [46] ./ClientApp/app/app.browser.module.ts 1.35 kB {0} [built]\r\n         [52] ./~/bootstrap/dist/js/npm.js 484 bytes {0} [built]\r\n         [76] ./~/querystring-es3/index.js 127 bytes {0} [built]\r\n         [77] ./~/reflect-metadata/Reflect.js 48 kB {0} [built]\r\n        [106] ./~/strip-ansi/index.js 161 bytes {0} [built]\r\n        [109] (webpack)-hot-middleware/client-overlay.js 1.82 kB {0} [built]\r\n        [110] (webpack)-hot-middleware/process-update.js 3.88 kB {0} [built]\r\n        [111] (webpack)/buildin/module.js 517 bytes {0} [built]\r\n        [112] ./~/zone.js/dist/zone.js 96 kB {0} [built]\r\n        [113] multi event-source-polyfill webpack-hot-middleware/client?path=__webpack_hmr&dynamicPublicPath=true ./ClientApp/boot.browser.ts 52 bytes {0} [built]\r\n           + 99 hidden modules\r\n\r\n      WARNING in ./~/@angular/core/@angular/core.es5.js\r\n      5704:15-36 Critical dependency: the request of a dependency is an expression\r\n\r\n      WARNING in ./~/@angular/core/@angular/core.es5.js\r\n      5720:15-102 Critical dependency: the request of a dependency is an expression\r\n\r\n      ERROR in ./ClientApp/app/components/app/app.component.css\r\n      Module not found: Error: Can't resolve '../../../../../..' in 'F:\\VS2012\\!dotNetCore\\vega\\ClientApp\\app\\components\\app'\r\n       @ ./ClientApp/app/components/app/app.component.css 2:21-181\r\n       @ ./ClientApp/app/components/app/app.component.ts\r\n       @ ./ClientApp/app/app.browser.module.ts\r\n       @ ./ClientApp/boot.browser.ts\r\n       @ multi event-source-polyfill webpack-hot-middleware/client?path=__webpack_hmr&dynamicPublicPath=true ./ClientApp/boot.browser.ts\r\n\r\n      ERROR in ./ClientApp/app/components/navmenu/navmenu.component.css\r\n      Module not found: Error: Can't resolve '../../../../../..' in 'F:\\VS2012\\!dotNetCore\\vega\\ClientApp\\app\\components\\navmenu'\r\n       @ ./ClientApp/app/components/navmenu/navmenu.component.css 2:21-189\r\n       @ ./ClientApp/app/components/navmenu/navmenu.component.ts\r\n       @ ./ClientApp/app/app.shared.module.ts\r\n       @ ./ClientApp/app/app.browser.module.ts\r\n       @ ./ClientApp/boot.browser.ts\r\n       @ multi event-source-polyfill webpack-hot-middleware/client?path=__webpack_hmr&dynamicPublicPath=true ./ClientApp/boot.browser.ts\r\n```\r\n\r\nIf i remove the (!) from the filepath, everything works just fine. "},{"Id":"7362025599","Type":"IssuesEvent","CreatedAt":"2018-03-11T14:33:02","Actor":"shaulbehr","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2944","RelatedDescription":"Opened issue \"How to get the Request Uri inside an IAuthorizationHandler?\" (#2944) at aspnet/Home","RelatedBody":"I'm implementing claims-based security referencing [this article](https://docs.microsoft.com/en-us/aspnet/core/security/authorization/policies). My API endpoint is of the form: `api/Things/{thingId}`, and the authorization handler must parse the request URI to get the `thingId` and verify that the current user has rights to the `Thing` in question.\r\n\r\nI don't see any way to get the `Request` object from the `AuthorizationHandlerContext`, though. Am I missing something? Or is there some other way I can get at the request Uri?"},{"Id":"7360907591","Type":"IssuesEvent","CreatedAt":"2018-03-10T23:41:00","Actor":"EricBourland","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2943","RelatedDescription":"Opened issue \"The library 'hostpolicy.dll' required to execute the application was not found\" (#2943) at aspnet/Home","RelatedBody":"I'm getting this error any time I try to run an asp.net core 2.1.0-preview1-final mvc app. \r\n\r\n> A fatal error was encountered. The library 'hostpolicy.dll' required to execute the application was not found in 'C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App\\2.1.0-preview1-final'.\r\n\r\nSteps to reproduce:\r\ndotnet new mvc\r\ndotnet build\r\ndotnet run\r\n\r\nI'm using Windows 7"},{"Id":"7359931651","Type":"IssuesEvent","CreatedAt":"2018-03-10T13:11:05","Actor":"Matthew-Bonner","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2942","RelatedDescription":"Closed issue \"Add ability to inspect IFileProvider root once set\" (#2942) at aspnet/Home","RelatedBody":"You can specify the IFileProvider root but you can't find out what the root is once it is set.\r\n\r\nFrom a security standpoint, if a file provider root is set, we need to be able to get this value back so that we can inspect it if required."},{"Id":"7359928255","Type":"IssuesEvent","CreatedAt":"2018-03-10T13:08:36","Actor":"Matthew-Bonner","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2942","RelatedDescription":"Opened issue \"Add ability to inspect IFileProvider root once set\" (#2942) at aspnet/Home","RelatedBody":"You can specify the IFileProvider root but you can't find out what the root is once it is set.\r\n\r\nFrom a security standpoint, if a file provider root is set, we need to be able to get this value back so that we can inspect it if required."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7362921897","Type":"IssuesEvent","CreatedAt":"2018-03-11T23:19:43","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7459","RelatedDescription":"Closed issue \"asp-append-version attribute not working for static files outside of the wwwroot directory\" (#7459) at aspnet/Mvc","RelatedBody":"I am facing issue described in:\r\nhttps://stackoverflow.com/questions/42775181/asp-net-cores-asp-append-version-attribute-not-working-for-static-files-outside"},{"Id":"7360865322","Type":"IssuesEvent","CreatedAt":"2018-03-10T23:10:15","Actor":"JakenVeina","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7468","RelatedDescription":"Opened issue \"Consuming the ApplicationModel?\" (#7468) at aspnet/Mvc","RelatedBody":"Is it possible for me to consume the current ApplicationModel, rather than just inject conventions into it? I.E. can I get an instance of it outside of an MVC class, and use it to configure other parts of my application?\r\n\r\nI'm trying to setup a join WebApi/SignalR app, where all the main API methods are provided by MVC controllers, and SignalR simply provides a mechanism for clients to subscribe to events that MVC controllers fire off for certain data changes. I want to have clients be able to subscribe to only the events they need, through SignalR, which means I need some way for the events service to maintain a list of valid events. I'd like to have each controller define the events it can generate, rather than having events defined both in the controller code and in the SignalR code. My thought for doing this was...\r\n\r\n```csharp\r\n[Route(\"api/[controller]\")]\r\n[ApiEvent(\"created\")]\r\n[ApiEvent(\"modified\")]\r\n[ApiEvent(\"deleted\")]\r\npublic class NewsPostsController : ControllerBase { }\r\n```\r\n\r\nThis would define events with the names \"api/newsposts/created\", \"api/newsposts/modified\", and \"api/newsposts/deleted\" that are registered on the ControllerModel itself. I've actually got this part working properly, but I can't seem to find any mechanism to have my `ApiEventsService` get an instance of the `ApplicationModel`, so it can lookup whether a given event name is valid, or assemble a master list on startup of all the valid events."},{"Id":"7360406421","Type":"IssuesEvent","CreatedAt":"2018-03-10T18:13:08","Actor":"daveabrock","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7467","RelatedDescription":"Closed issue \"Rationale for using X-Powered-By and Server response headers\" (#7467) at aspnet/Mvc","RelatedBody":"Here's some typical responses I get from a client calling a Web API in ASP.NET Core (screenshot taken from Postman):\r\n\r\n![image](https://user-images.githubusercontent.com/275862/37244185-c6c99784-244a-11e8-883e-a80958558428.png)\r\n\r\nI'm wondering what the rationale is for including the `X-Powered-By` and `Server` header values (I understand this has been occurring long before Core was conceived). In this day and age, I wonder why we are giving the client (and anyone with bad intentions) more than they need to know. Of course, I know that the platform is very secure but it still makes me wonder.\r\n\r\nMaybe there is a good reason - could someone fill me in or provide feedback?\r\n"},{"Id":"7360200037","Type":"IssuesEvent","CreatedAt":"2018-03-10T16:09:15","Actor":"daveabrock","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7467","RelatedDescription":"Opened issue \"Rationale for using X-Powered-By and Server response headers\" (#7467) at aspnet/Mvc","RelatedBody":"Here's some typical responses I get from a client calling a Web API in ASP.NET Core (screenshot taken from Postman):\r\n\r\n![image](https://user-images.githubusercontent.com/275862/37244185-c6c99784-244a-11e8-883e-a80958558428.png)\r\n\r\nI'm wondering what the rationale is for including the `X-Powered-By` and `Server` header values (I understand this has been occurring long before Core was conceived). In this day and age, I wonder why we are giving the client (and anyone with bad intentions) more than they need to know. Of course, I know that the platform is very secure but it still makes me wonder.\r\n\r\nMaybe there is a good reason - could someone fill me in or provide feedback?\r\n"},{"Id":"7359928434","Type":"IssuesEvent","CreatedAt":"2018-03-10T13:08:44","Actor":"Matthew-Bonner","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7466","RelatedDescription":"Closed issue \"Add ability to inspect IFileProvider root once set\" (#7466) at aspnet/Mvc","RelatedBody":"You can specify the IFileProvider root but you can't find out what the root is once it is set.\r\n\r\nFrom a security standpoint, if a file provider root is set, we need to be able to get this value back so that we can inspect it if required."},{"Id":"7359915389","Type":"IssuesEvent","CreatedAt":"2018-03-10T12:59:29","Actor":"Matthew-Bonner","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7466","RelatedDescription":"Opened issue \"Add ability to inspect IFileProvider root once set\" (#7466) at aspnet/Mvc","RelatedBody":"You can specify the IFileProvider root but you can't find out what the root is once it is set.\r\n\r\nFrom a security standpoint, if a file provider root is set, we need to be able to get this value back so that we can inspect it if required."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7361863349","Type":"IssuesEvent","CreatedAt":"2018-03-11T12:51:03","Actor":"Tamaletjie","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1675","RelatedDescription":"Opened issue \"Lockout doesn't work if email address is invalid.\" (#1675) at aspnet/Identity","RelatedBody":"I'm developing an ASP.NET MVC app using ASP.Net Identity 2.2.1 in Visual Studio 2017. The app is for internal use only, does not use 2FA or password recovery and will have accounts managed by the user's manager. \r\n\r\nIn light of this I changed the login page to use the UserName field instead of the Email address field to identify the user. When I create users in dbo.AspNetUsers I populated the Email field with the same value as the UserName field e.g. JoeB. Doing so does not affect the login process but when it comes to triggering Automatic Lockouts for failed login attempts, this feature fails to trigger.\r\n\r\nThe following email addresses won't trigger a Lockout:\r\n\r\n**NULL\r\nJoeB\r\nJoeB@**\r\n\r\nAnything of the form _alphanumberic@alphanumberic_ seems to be OK (e.g. _JoeB@example_).\r\n\r\nTaking a look at the ASP.Net identity source code I think this bug is related to the last method in this call chain:\r\n\r\n-     SignInManager.CheckPasswordSignInAsync()\r\n-       UserManager.AccessFailedAsync(user)\r\n-         UserManager.UpdateUserAsync()\r\n-           UserManager.UpdateNormalizedEmailAsync(user)\r\n\r\nSince the email address doesn't exist or is invalid (according to some internal check?), the UpdateNormalizedEmailAsync(user) fails in some way causing the following record store.IncrementAccessFailedCountAsync(user, CancellationToken) to not be committed to the database.\r\n\r\nRunning SQL Profiler confirms that the SQL to update dbo.AspNetUsers.AccessFailedCount is never sent to the database if the email address is invalid.\r\n\r\nThis behavior may be by design (for reasons not obvious to me) but I've wasted many hours wrestling with this issue so I though I would log it here in case anyone else gets tripped up by it.\r\n\r\nP.S. The ApplicationManager.SupportsUserEmail is read-only so I can't use this to signal that Email address is not relevant."},{"Id":"7361636132","Type":"IssuesEvent","CreatedAt":"2018-03-11T10:11:41","Actor":"MonaLarsen","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1674","RelatedDescription":"Opened issue \"AggregateException occurs after converting User Id to int in ApplicationUser/ApplicationRole\" (#1674) at aspnet/Identity","RelatedBody":"By following this tutorial [Here](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-primary-key-configuration?tabs=aspnetcore2x) I got to succesfully convert the User Id to int so i can use Linq with operations done on users in my application.\r\n\r\nEverything worked fine here, but after creating default users in startup.cs like this:\r\n\r\n`    public async Task CreateUsersAndRoles(IServiceScope serviceScope)\r\n        {\r\n            var userManager = serviceScope.ServiceProvider.GetService<UserManager<ApplicationUser>>();\r\n            var roleManager = serviceScope.ServiceProvider.GetService<RoleManager<IdentityRole>>();\r\n\r\n            //Creating Admin role\r\n            await roleManager.CreateAsync(new IdentityRole(\"TopUser\"));\r\n            var TopUsers = new ApplicationUser { UserName = \"xxxxx@xx.com\", \r\n                                                  Email = \"xxx@xxxx.com\",  \r\n                                                  };\r\n\r\n\r\n            await userManager.CreateAsync(adminUser, \"xxxxxx\");\r\n            await userManager.AddToRoleAsync(TopUsers, \"TopUser\");\r\n\r\n}`\r\n\r\ni am getting an error in ` CreateUsersAndRoles(serviceScope).Wait();` that is not clear and i don't know why the compiling is failing as eveything seems to be logically working.\r\n\r\nHere is the error: `An exception of type 'System.AggregateException' occurred in System.Private.CoreLib.dll but was not handled in user code: 'One or more errors occurred.' Inner exceptions found, see $exception in variables window for more details. Innermost exception System.NullReferenceException : Object reference not set to an instance of an object.`\r\n\r\nWhat am i doing wrong? And how do i find the error that is causing the code to fail?"},{"Id":"7361489918","Type":"IssuesEvent","CreatedAt":"2018-03-11T08:18:39","Actor":"jenyayel","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1673","RelatedDescription":"Opened issue \"Compiled Razor views won't override default UI\" (#1673) at aspnet/Identity","RelatedBody":"I wonder if it is by design. \r\n\r\nIf I override, for instance, by adding a new file in my app `Areas/Identity/Pages/Account/Register.cshtml`, it will work fine when running/debugging locally. \r\n\r\nI noticed that when the app published, the override won't work. I made sure that the `<Something>.PrecompiledViews.dll` is generated and contains those views that I added to override. When I added `<MvcRazorCompileOnPublish>false</MvcRazorCompileOnPublish>` to csproj the overrides work again."},{"Id":"7358666452","Type":"PullRequestEvent","CreatedAt":"2018-03-09T22:58:38","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1672","RelatedDescription":"Merged pull request \"Remove unused used that fail to compile\" (#1672) at aspnet/Identity","RelatedBody":""},{"Id":"7358651923","Type":"PullRequestEvent","CreatedAt":"2018-03-09T22:54:05","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1672","RelatedDescription":"Opened pull request \"Remove unused used that fail to compile\" (#1672) at aspnet/Identity","RelatedBody":""},{"Id":"7357210123","Type":"PullRequestEvent","CreatedAt":"2018-03-09T17:17:37","Actor":"aguacongas","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1671","RelatedDescription":"Opened pull request \"Update README.md\" (#1671) at aspnet/Identity","RelatedBody":"Hi guys,\r\nToday I propose you Aguacongas.Identy.Redis, my implemention of APS.NET Identity Redis Provider"},{"Id":"7354196950","Type":"IssuesEvent","CreatedAt":"2018-03-09T05:22:21","Actor":"slaneyrw","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1670","RelatedDescription":"Opened issue \"Support password migration\" (#1670) at aspnet/Identity","RelatedBody":"I'm investigating a solution to migrating legacy passwords ( SHA256 cyptro provider, not Dbkdf2), MS ID v2, and MS ID v3 passwords to a new algorithm ( specifically Argon2 ) with the requirement to not store the old hash details post migration.\r\n\r\nMy thoughts are that during migration we...\r\n\r\n1. Take existing hash from the old algorithm and rehash the hash using the new algorithm\r\n2. Store the new passwordHash ( with it's metadata ) and the old algorithm's metadata\r\n\r\nDuring password verification we recursively run through the algorithms, taking the hashed output as the input into the next in the chain.  If the password matches then we rehash the password provided using the newest algorithm, akin to increasing the iterations in the MS ID password hasher.\r\n\r\nMy problem is that I cannot get the resultant hash from the IPasswordHasher instance evaluated during VerifyHashedPassword for use into the next algorithm into the chain, and if I call HashPassword it will give me a different hash for the same password because of the random 16 bytes into Pbkdf2.\r\n\r\nI already have a coordinator IPasswordHasher instance that inspects the algorithm byte and forwards the call to the relevant hasher.  It was my intent to have this coordinator loop/recurse through the chain.\r\n\r\nShort of completely rebuilding all the Password hashers ( including ASP.NET Identity ) to separate recalculating and compare functions the existing hashers, can you think of another way I could do this?\r\n"},{"Id":"7352340113","Type":"IssuesEvent","CreatedAt":"2018-03-08T20:14:56","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1341","RelatedDescription":"Closed issue \"GDPR Support\" (#1341) at aspnet/Identity","RelatedBody":"- [x] Extension points to enable encryption of user data\r\n- [x] Extension point to enable downloading of user data\r\n- [x] Extension point to enable deletion of user data"},{"Id":"7352336125","Type":"IssuesEvent","CreatedAt":"2018-03-08T20:14:05","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1621","RelatedDescription":"Closed issue \"Add an optional [PersonalData] attribute for use in the User type.\" (#1621) at aspnet/Identity","RelatedBody":"As part of the extensbility work, we should add some mechanism to easily attribute data which is considered personal data.  \r\n\r\nBy default we would use this for the default pocos, so the default UI can include these for personal download, and also wire them up automatically in the upcoming personal data encryption hooks.\r\n\r\n"},{"Id":"7352333896","Type":"PullRequestEvent","CreatedAt":"2018-03-08T20:13:35","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1562","RelatedDescription":"Merged pull request \"Initial EncryptPersonalData support\" (#1562) at aspnet/Identity","RelatedBody":"- new StoreOptions.EncryptPersonalData setting\r\n- new IPersonalDataEncryptor and IEncryptedUserStore interfaces that live in core\r\n- new `AddPersonalDataEncryptor<MyEncryptor>()` helper method on IdentityBuilder\r\n- The two concrete user stores in EF now implement IEncryptedUserStore\r\n- UserManager ctor throws if EncryptPersonalData is true if store is not IEncryptedUserStore, or if IPersonalDataEncryptor service not found\r\n- base IdentityUserContext hooks up ValueConverter using IPersonalDataEncryptor on UserName, NormalizedUserName, Email, NormalizedEmail, PhoneNumber columns when EncryptPersonalData is true.\r\n\r\nSo all of the normal store tests except one pass when turning this on with a dummy reverse encryptor. \r\n There's a test that that directly uses the DbSet as an IQueryable to look for users like so: `UserManager.Users.Count(u => u.UserName.StartsWith(\"CanFindUsersViaUserQuerable\"))` which fails because this probably bypasses the converters... @ajcvickers ?\r\n\r\ncc @blowdart @javiercn "},{"Id":"7351834492","Type":"IssuesEvent","CreatedAt":"2018-03-08T18:32:47","Actor":"marcwittke","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1669","RelatedDescription":"Opened issue \"Misleading exception message in Identity 2.0.1\" (#1669) at aspnet/Identity","RelatedBody":"```\r\nSystem.NotSupportedException : No IUserTokenProvider named 'Default' is registered.\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(TUser user, String tokenProvider, String purpose)\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(TUser user)\r\n```\r\n\r\nThe framework in reality requires an implementation of `IUserTwoFactorTokenProvider<TUser>` "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7363421041","Type":"IssuesEvent","CreatedAt":"2018-03-12T03:33:59","Actor":"zhongj2","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2375","RelatedDescription":"Opened issue \"dotnet core 2 app returning 502.3 error\" (#2375) at aspnet/KestrelHttpServer","RelatedBody":"### Description\r\nOccasionally, we are observing our dotnet core 2 application returning 502.3 errors.\r\n\r\nThe application is been served via IIS and we verified that the application process is indeed running and listening to a port. That exact port number is also been set in by environment variable ASPNETCORE_PORT for that process.\r\n\r\nWhen attempting to telnet to the process on that port number, we are seeing Connect failed error.\r\n\r\n### Reproduce\r\nIntermittent, unable to consistently reproduce.\r\n\r\n### Environment\r\nWindows Server 2012\r\nIIS 8\r\nDotnet Core 2\r\n"},{"Id":"7361994167","Type":"IssuesEvent","CreatedAt":"2018-03-11T14:14:02","Actor":"Berreek","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2374","RelatedDescription":"Opened issue \"Blocking calls occurs while serializing slightly bigger JSON's in responses\" (#2374) at aspnet/KestrelHttpServer","RelatedBody":"### Description\r\nHello. \r\nWe were performing at company I work some performance tests for our solution built on top of .Net Core. One of test cases is returning big JSON responses. We discovered with help of  [Ben.BlockingDetector](https://github.com/benaadams/Ben.BlockingDetector) that for responses with response body bigger than ~64kb's blocking calls occurs. Stacktrace below:\r\n\r\n> warn: Ben.Diagnostics.BlockingMonitor[6]       Blocking method has been invoked and blocked, this can lead to threadpool starvation.       \r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)       \r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)       \r\n   at Microsoft.AspNetCore.WebUtilities.HttpResponseStreamWriter.Write(String value)       \r\n   at Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(TextWriter writer, String s, Char delimiter, Boolean appendDelimiters, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, IArrayPool1 bufferPool, Char[]& writeBuffer)       \r\n   at Newtonsoft.Json.JsonTextWriter.WriteEscapedString(String value, Boolean quote)       \r\n   at Newtonsoft.Json.JsonWriter.WriteValue(JsonWriter writer, PrimitiveTypeCode typeCode, Object value)       \r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)       \r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)       \r\n   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)       \r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)       \r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.<WriteResponseBodyAsync>d__11.MoveNext()       \r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)       \r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)       \r\n   at Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter.WriteAsync(OutputFormatterWriteContext context)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeResultAsync>d__19.MoveNext()       \r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResultFilterAsync>d__24.MoveNext()       \r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync()       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()       \r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()       \r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()       \r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)       \r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()       \r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()       \r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)       \r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)       \r\n   at Ben.Diagnostics.BlockingDetectionMiddleware.<Invoke>d__6.MoveNext()       \r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)       \r\n   at Ben.Diagnostics.BlockingDetectionMiddleware.Invoke(HttpContext httpContext)       \r\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()       \r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)       \r\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.Invoke(HttpContext httpContext)       \r\n   at Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync(Context context)       \r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame1.<ProcessRequestsAsync>d__2.MoveNext()       \r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)       \r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<>c__DisplayClass4_0.<OutputAsyncCausalityEvents>b__0()       \r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.<RunAction>b__3_0(Object o)       \r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)       \r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n\r\n \r\n\r\nAs you can see [FrameResponseStream](https://github.com/aspnet/KestrelHttpServer/blob/release/2.0/src/Microsoft.AspNetCore.Server.Kestrel.Core/Internal/Http/FrameResponseStream.cs#L69) (and [HttpResponseStream](https://github.com/aspnet/KestrelHttpServer/blob/release/2.1/src/Kestrel.Core/Internal/Http/HttpResponseStream.cs#L69) which is equivalent for that class in 2.1 I believe)  Write/Read sync methods are using GetAwaiter().GetResult() that leads to blocking calls.\r\n\r\nI assume it has to be done in that way but why the blocking calls doesn't occur with smaller responses?\r\n\r\nAlso my current workarround is turning on Gzip on Kestrel level (however docs says it's better to do that on IIS/nginx level). With turned on Gzip blocking calls dissapear for whatever response size I try. Workarround is obviously not ideal if I would want to host it behind IIS/nginx and I also don't really understand how turning on GZIP fix blocking calls issue. Wouldn't mind some explanation here to be honest.\r\n\r\n### Reproduce\r\n[Here](https://github.com/Berreek/JsonSerializationBlockingCalls) is an example with instructions. \r\n\r\n### Environment\r\nTested it on RHEL and Windows 10. Blocking calls occurs on both.\r\n\r\n### Runtime version\r\n2.0.5\r\n\r\n### Additional info\r\nI tried with both versions of Newtonsoft.Json - 10.0.3 and 11.0.1"},{"Id":"7358980646","Type":"IssuesEvent","CreatedAt":"2018-03-10T00:58:49","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2373","RelatedDescription":"Opened issue \"Broken tests:  ResponseFormats_Kestrel_ContentLength etc\" (#2373) at aspnet/KestrelHttpServer","RelatedBody":"A bunch of these tests were broken by the new runtime [on High Sierra](http://aspnetci/viewLog.html?buildId=418684&tab=buildResultsDiv&buildTypeId=XPlat_HighSierraOsxUniverse#testNameId-1295381151259444512).\r\n\r\n```\r\nAssert.Null() Failure\r\nExpected: (null)\r\nActual:   True\r\n   at ServerComparison.FunctionalTests.ResponseTests.CheckContentLengthAsync(HttpClient client, ILogger logger)\r\n   at ServerComparison.FunctionalTests.ResponseTests.ResponseFormats(ServerType serverType, RuntimeFlavor runtimeFlavor, RuntimeArchitecture architecture, Func`3 scenario, ApplicationType applicationType, String testName) in /_/test/ServerComparison.FunctionalTests/ResponseTests.cs:line 196\r\n--- End of stack trace from previous location where exception was thrown ---\r\n------- Stdout: -------\r\n| TestLifetime Information: Starting test ResponseFormats_Kestrel_ContentLength_Kestrel_CoreClr_x64_Portable\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Deploying [Variation] :: ServerType=Kestrel, Runtime=CoreClr, Arch=x64, BaseUrlHint=, Publish=False\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Executing dotnet run --no-restore --framework netcoreapp2.1 -- --server.urls http://localhost:56915/  --server Microsoft.AspNetCore.Server.Kestrel\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: SET ASPNETCORE_ENVIRONMENT=Responses\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: SET ASPNETCORE_DETAILEDERRORS=true\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Started dotnet. Process Id : 82402\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Using launch settings from /Users/aspnetci/Documents/buildAgent/work/33bdfc1cae7b2a38/modules/ServerTests/test/ServerComparison.TestSites/Properties/launchSettings.json...\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Warning: dotnet stderr: The launch profile \"(Default)\" could not be applied.\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Warning: dotnet stderr: A usable launch profile could not be located.\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Hosting environment: Responses\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Content root path: /Users/aspnetci/Documents/buildAgent/work/33bdfc1cae7b2a38/modules/ServerTests/test/ServerComparison.TestSites/bin/Release/netcoreapp2.1/\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Now listening on: http://localhost:56915\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Application started. Press Ctrl+C to shut down.\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Application ready at URL: http://localhost:56915/\r\n| ResponseFormats Warning: Retry count 1..\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: \\x1b[40m\\x1b[32minfo\\x1b[39m\\x1b[22m\\x1b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout:       Request starting HTTP/1.1 GET http://localhost:56915/  \r\n| ResponseFormats Information: Testing ContentLength\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: \\x1b[40m\\x1b[32minfo\\x1b[39m\\x1b[22m\\x1b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout:       Request finished in 114.76ms 200 \r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: \\x1b[40m\\x1b[32minfo\\x1b[39m\\x1b[22m\\x1b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout:       Request starting HTTP/1.1 GET http://localhost:56915/contentlength  \r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: \\x1b[40m\\x1b[32minfo\\x1b[39m\\x1b[22m\\x1b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout:       Request finished in 5.546ms 200 \r\n| ResponseFormats Warning: StatusCode: 200, ReasonPhrase: 'OK', Version: 1.1, Content: System.Net.Http.NoWriteNoSeekStreamContent, Headers:\r\n|                          {\r\n|                            Connection: close\r\n|                            Date: Sat, 10 Mar 2018 00:53:40 GMT\r\n|                            Server: Kestrel\r\n|                            Content-Length: 14\r\n|                          }\r\n| ResponseFormats Warning: Content Length\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Attempting to cancel process 82402\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Application is shutting down...\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Warning: Unable to terminate the host process with process Id '82402\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: [Time]: Total time taken for this test variation '5.350861' seconds\r\n| TestLifetime Information: Finished test ResponseFormats_Kestrel_ContentLength_Kestrel_CoreClr_x64_Portable in 5.351803s\r\n```"},{"Id":"7358794984","Type":"IssuesEvent","CreatedAt":"2018-03-09T23:42:42","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2197","RelatedDescription":"Closed issue \"Flaky test: HttpsConnectionClosedWhenResponseDoesNotSatisfyMinimumDataRate\" (#2197) at aspnet/KestrelHttpServer","RelatedBody":"http://aspnetci/viewLog.html?buildId=360375&tab=buildResultsDiv&buildTypeId=Lite_KestrelStressTest#testNameId4971464264492862489\r\n\r\n```\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.<HttpsConnectionClosedWhenResponseDoesNotSatisfyMinimumDataRate>d__66.MoveNext() in C:\\b\\w\\33bdfc1cae7b2a38\\modules\\KestrelHttpServer\\test\\Kestrel.FunctionalTests\\ResponseTests.cs:line 2611\r\n--- End of stack trace from previous location where exception was thrown ---\r\n--- End of stack trace from previous location where exception was thrown ---\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nIt would be nice if we could add descriptive error messages to Assert.Trues going forward too."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7361944948","Type":"IssuesEvent","CreatedAt":"2018-03-11T13:43:07","Actor":"fschmied","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2145","RelatedDescription":"Closed issue \"Tilde doesn't resolve path in tag helper attributes\" (#2145) at aspnet/Razor","RelatedBody":"When I have a custom tag helper, how can I make Razor expand the tilde character within one of its attributes?\r\n\r\nExample: Consider the following view, where `MyAnchorTagHelper` is a tag helper:\r\n```\r\n<a href=\"~/test\">Test 1</a>\r\n<my-anchor href=\"~/test\">Test 1</my-anchor>\r\n```\r\n\r\nIn this view, Razor will expand the \"\\~\" character within the \\<a> tag, but not within the \\<my-anchor> tag. Is this expected? Can the tag helper be changed to get automatic expansion of \"\\~\"?\r\n\r\n(This question is similar to #1554, but the answer in that issue applies only to  `data-*` attributes.)\r\n\r\nTried with both ASP.NET Core MVC 2.0.1 and 1.1.0."},{"Id":"7358714367","Type":"IssuesEvent","CreatedAt":"2018-03-09T23:14:21","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2146","RelatedDescription":"Closed issue \"PreserveCompilationContext in old style csproj\" (#2146) at aspnet/Razor","RelatedBody":"I'm trying to copy the refs folder of my webapplication into the output folder of my test project.  The webapplication is netcore20 and my test project is an old school csproj targeting full 4.7 (has to be for specflow to work). \r\n\r\nI was able to make it work with a newstyle csproj targeting net47 with this instruction in the csproj.  The refs folder was copied into my output folder.\r\n```\r\n  <PropertyGroup>\r\n    <PreserveCompilationContext>true</PreserveCompilationContext>\r\n  </PropertyGroup>\r\n```\r\n\r\nHowever, in the old style csproj, the refs folder is not copied and I'm left with precompilation errors when I run my tests.  Can I get some guidance ?  I think PreserveCompilationContext is from dotnet core.. Maybe there's an equivalent in 4.7 ?\r\n\r\nI replicated the two scenarios in this repo:\r\nhttps://github.com/CurlyFire/InProcKestrel\r\n\r\nThank you very much!"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7307968614","Type":"IssuesEvent","CreatedAt":"2018-02-28T06:01:18","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file."},{"Id":"7307353364","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:19:15","Actor":"rjamesnw","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Opened issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7352155171","Type":"IssuesEvent","CreatedAt":"2018-03-08T19:37:26","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/199","RelatedDescription":"Closed issue \"ASP.NET/EF Core feeds renamed and moved to dotnet.myget.org\" (#199) at aspnet/Announcements","RelatedBody":"The ASP.NET and EF Core MyGet feeds have moved from www.myget.org to dotnet.myget.org. There are automatic redirects from the old feeds to the new feeds so no _immediate_ change is needed. If you use the nightly feeds for packages, please move to the new feeds ASAP. The redirects will be available for at least a few weeks.\n\n| https://www.myget.org/f/ (Before) | https://dotnet.myget.org/f/ (After) |\n| --- | --- |\n| aspnetvnext | aspnetcore-dev |\n| aspnetrelease | aspnetcore-release |\n| aspnetmaster | aspnetcore-master |\n| aspnetcidev | aspnetcore-ci-dev |\n| aspnetcirelease | aspnetcore-ci-release |\n\nPlease use https://github.com/aspnet/Home/issues/1708 for further discussion.\n"},{"Id":"7340008772","Type":"IssuesEvent","CreatedAt":"2018-03-06T20:07:16","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/292","RelatedDescription":"Opened issue \"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image\" (#292) at aspnet/Announcements","RelatedBody":"We will be deprecating the following Docker images\r\n \r\n- microsoft/aspnetcore-build:1.0-1.1\r\n- microsoft/aspnetcore-build:1.0-2.0\r\n\r\nWe will not delete these images. These images will continue to receive patch update whenever a 1.0.x, 1.1.x, or 2.0.x update ships, however, we will not produce a new version which contains the 2.1 runtime.\r\n\r\n### Why?\r\n \r\nThese images existed to support CI/CD pipelines that run apps on multiple versions for .NET Core in the same container. With each release, these images have grown in size. The 1.0-2.0 image is already about 1GB, and would continue to grow with runtime updates. \r\n \r\nFortunately, recent improvements to .NET Core (such as minor version roll-forward) and Docker (multi-stage builds) have reduced the need to use an image with multiple versions of .NET Core. We have seen usage of these multi-version images declining over time, and today, they are a small percentage of our Docker image usage.\r\n\r\nRather than maintaining a single, large image with all possible .NET Core runtimes, we encourage users to use multi-stage builds. Docker's multi-stage feature allows you to compose a single Dockerfile, but still use multiple .NET Core runtimes. Also, starting in 2.1, .NET Core supports rolling forward the runtime version within the major version, which will further reduce the need to have multiple 2.x runtimes side-by-side.\r\n \r\nFor discussion, use https://github.com/aspnet/aspnet-docker/issues/349"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"972484011556818945","CreatedAt":"2018-03-10T14:47:10+00:00","UserScreenname":"aspnet","Text":"Be sure to check out Jeff's live coding stream this morning to see more about our #ASP.NET Core 2.1 preview release. https://t.co/EtKk0fMOgU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":10,"RawContent":null},{"Id":"971084152693866496","CreatedAt":"2018-03-06T18:04:38+00:00","UserScreenname":"aspnet","Text":"We are live at https://t.co/4Ioo9jNSN2 ! Join us!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"971075755168841728","CreatedAt":"2018-03-06T17:31:16+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup starts at 10 AM  Pacific / 1800 GMT. Ryan Nowak will be showing Web API 2.1 fâ¦ https://t.co/OW0zeYZPyq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null},{"Id":"970812132399890432","CreatedAt":"2018-03-06T00:03:43+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is a feature deep dive on Web API improvements in 2.1 with Ryan Nowak.\n\nTuesdâ¦ https://t.co/eKElaXNIR3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":11,"RawContent":null},{"Id":"969671939106025473","CreatedAt":"2018-03-02T20:33:00+00:00","UserScreenname":"aspnet","Text":"Jon the Azure AD team for their first Office Hours call on March 8. https://t.co/kVYF9JWzeZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":6,"RawContent":null},{"Id":"968561906003791872","CreatedAt":"2018-02-27T19:02:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":6,"RawContent":null},{"Id":"968550190889267201","CreatedAt":"2018-02-27T18:15:34+00:00","UserScreenname":"aspnet","Text":"#ASPNET Core 2.1.0-preview1 now available https://t.co/loVh03KKfz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":54,"RawContent":null},{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Raâ¦ https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"965964952442933249","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"aspnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/HVyIw0Wcgd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":9,"RawContent":null},{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.â¦ https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answeâ¦ https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of tâ¦ https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-03-12T05:30:11.6512703Z","RunDurationInMilliseconds":9041}