{"Data":{"Vue":{"Events":[{"Id":"7272883840","Type":"IssuesEvent","CreatedAt":"2018-02-21T01:26:37","Actor":"rajjanorkar","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7677","RelatedDescription":"Opened issue \"How to pass data/prop to root vue instance\" (#7677) at vuejs/vue","RelatedBody":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://vuejs.org/v2/guide/index.html](https://vuejs.org/v2/guide/index.html)\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n<div id=\"app\">\r\n  {{ message }}\r\n</div>\r\n\r\nvar app = new Vue({\r\n  el: '#app',\r\n  data: {\r\n    message: 'Hello Vue!'\r\n  }\r\n})\r\n```\r\n\r\nThis is one way data passing from vue to dom, how i can transfer from dom to vue e.g.\r\n\r\n```\r\n<div id=\"app\" :data='My Data came from other part'>\r\n  {{ message }}\r\n</div>\r\n```\r\n\r\nplease note this is not about sub component, this is about root node.\r\n\r\n### What is expected?\r\nSometime other part of html doing some thing and that needs to be passed to vue root instance.\r\n\r\n### What is actually happening?\r\nI could not figure out how i can pass the data to root vue instance.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7271631992","Type":"IssuesEvent","CreatedAt":"2018-02-20T20:16:53","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2069","RelatedDescription":"Reopened issue \"pass on extra arguments to `scrollTo` to enable smooth scrolling with behaviour\" (#2069) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nSmooth scrolling to same page anchor tags. \r\n\r\nRight now smooth scrolling can only work by custom implementations, but the new Firefox spec contemplates a scrollBehaviour css property which can be polyfilled in older browsers.\r\n\r\nVue-router should take advantage of this new property\r\n\r\n### What does the proposed API look like?\r\nBasically, the object returned from the scrollBehavior function should have some more parameters and change the current x, y positions into named parameters.\r\n\r\nThis is an example of the future object to be returned.\r\n\r\n{ \r\n    top: 2500, // this is the x value\r\n    left: 0, // this is the y value\r\n    behavior: 'smooth' //\r\n  };\r\n\r\nThis is getting implemented in most current browsers, couldn't find the spec thought. If anybody finds it please sahre the link.\r\n\r\nAnyway, there is this beatyfull polyfill: https://www.npmjs.com/package/smoothscroll-polyfill\r\n\r\nwhich adds this scrollTo({}) behaviour to old browsers.\r\n\r\nI haven't dig much into the vue-router code. But it looks to me as if the only change needed is this file:\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js\r\n\r\nMaybe we could add some conditions on line 126 to return the current implementation or translate the old object:\r\n\r\n{ x, y } to\r\n\r\n{ top: x, left: y, behaviour: x }\r\n\r\nSorry if markup sucks, I'll do some more work if this gets atention\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7271541016","Type":"PullRequestEvent","CreatedAt":"2018-02-20T19:58:09","Actor":"samgre","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2070","RelatedDescription":"Opened pull request \"Implements issue #2040 <router-link .. exact-path />\" (#2070) at vuejs/vue-router","RelatedBody":"I've needed this feature many times too. Since there is an issue open, I decided to give it a try solving it even though it's not yet tagged \"contribution welcome\".\r\n\r\nPlease take a look and see if it fits to vue-router."},{"Id":"7269111083","Type":"IssuesEvent","CreatedAt":"2018-02-20T12:34:01","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2069","RelatedDescription":"Closed issue \"scrollTo new spec implement scrollBehaviour\" (#2069) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nSmooth scrolling to same page anchor tags. \r\n\r\nRight now smooth scrolling can only work by custom implementations, but the new Firefox spec contemplates a scrollBehaviour css property which can be polyfilled in older browsers.\r\n\r\nVue-router should take advantage of this new property\r\n\r\n### What does the proposed API look like?\r\nBasically, the object returned from the scrollBehavior function should have some more parameters and change the current x, y positions into named parameters.\r\n\r\nThis is an example of the future object to be returned.\r\n\r\n{ \r\n    top: 2500, // this is the x value\r\n    left: 0, // this is the y value\r\n    behavior: 'smooth' //\r\n  };\r\n\r\nThis is getting implemented in most current browsers, couldn't find the spec thought. If anybody finds it please sahre the link.\r\n\r\nAnyway, there is this beatyfull polyfill: https://www.npmjs.com/package/smoothscroll-polyfill\r\n\r\nwhich adds this scrollTo({}) behaviour to old browsers.\r\n\r\nI haven't dig much into the vue-router code. But it looks to me as if the only change needed is this file:\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js\r\n\r\nMaybe we could add some conditions on line 126 to return the current implementation or translate the old object:\r\n\r\n{ x, y } to\r\n\r\n{ top: x, left: y, behaviour: x }\r\n\r\nSorry if markup sucks, I'll do some more work if this gets atention\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7268798877","Type":"IssuesEvent","CreatedAt":"2018-02-20T11:23:01","Actor":"BorjaRafols","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2069","RelatedDescription":"Opened issue \"scrollTo new spec implement scrollBehaviour\" (#2069) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nSmooth scrolling to same page anchor tags. \r\n\r\nRight now smooth scrolling can only work by custom implementations, but the new Firefox spec contemplates a scrollBehaviour css property which can be polyfilled in older browsers.\r\n\r\nVue-router should take advantage of this new property\r\n\r\n### What does the proposed API look like?\r\nBasically, the object returned from the scrollBehavior function should have some more parameters and change the current x, y positions into named parameters.\r\n\r\nThis is an example of the future object to be returned.\r\n\r\n{ \r\n    top: 2500, // this is the x value\r\n    left: 0, // this is the y value\r\n    behavior: 'smooth' //\r\n  };\r\n\r\nThis is getting implemented in most current browsers, couldn't find the spec thought. If anybody finds it please sahre the link.\r\n\r\nAnyway, there is this beatyfull polyfill: https://www.npmjs.com/package/smoothscroll-polyfill\r\n\r\nwhich adds this scrollTo({}) behaviour to old browsers.\r\n\r\nI haven't dig much into the vue-router code. But it looks to me as if the only change needed is this file:\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js\r\n\r\nMaybe we could add some conditions on line 126 to return the current implementation or translate the old object:\r\n\r\n{ x, y } to\r\n\r\n{ top: x, left: y, behaviour: x }\r\n\r\nSorry if markup sucks, I'll do some more work if this gets atention\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7268247558","Type":"IssuesEvent","CreatedAt":"2018-02-20T09:26:04","Actor":"mason-meng","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2068","RelatedDescription":"Opened issue \"Uncaught (in promise) Error: [vue-router] TypeError: Cannot read property 'selector' of null\" (#2068) at vuejs/vue-router","RelatedBody":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nUncaught (in promise) Error: [vue-router] TypeError: Cannot read property 'selector' of null\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7269832411","Type":"IssuesEvent","CreatedAt":"2018-02-20T14:52:03","Actor":"LinusBorg","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1161","RelatedDescription":"Closed issue \"Mutation handler don't commit -v\" (#1161) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/l4k5ko85qm](https://codesandbox.io/s/l4k5ko85qm)\r\n\r\n### Steps to reproduce\r\nIf you open Vue devtools and click commit on last mutation it returns null in console\r\n\r\n\r\n\r\n### What is expected?\r\nshould console log 'CoolStuff' just for testing purpose\r\n\r\n\r\n\r\n### What is actually happening?\r\nThe logo and a few text only shows (welcome test)\r\n\r\n---\r\nI'm using mapGetter function to get the name but mutation doesnt commit\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-02-21T05:30:31.9372904Z","RunDurationInMilliseconds":1943}