{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core 2.1 June Update","PublishedOn":"2018-06-22T21:08:25+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We released .NET Core 2.1.1. This update includes .NET Core SDK 2.1.301, ASP.NET Core 2.1.1 and .NET Core 2.1.1. See .NET Core 2.1.1 release notes for complete details on the release. Quality Updates...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/","RawContent":null},{"Title":".NET Core 2.0 will reach End of Life on October 1, 2018","PublishedOn":"2018-06-20T19:12:38+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Last Updated: 6/22/2018 .NET Core 2.0 was released on August 14, 2017. As a non-LTS release, it is supported for 3 months after the next release. .NET Core 2.1 was released on May 30th, 2018. As a...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/","RawContent":null},{"Title":"The RyuJIT transition is complete!","PublishedOn":"2018-06-19T22:53:27+00:00","CommentsCount":26,"FacebookCount":0,"Summary":"RyuJIT is the code name for the .NET just-in-time compiler, one of the foundational components of the .NET runtime. In contrast, the Roslyn C# compiler compiles C# code to IL byte code. The RyuJIT...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/19/the-ryujit-transition-is-complete/","RawContent":null},{"Title":"Staying up-to-date with .NET Container Images","PublishedOn":"2018-06-18T18:59:03+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"This post describes the container images that we produce and update for you, that you can use with Docker, Kubernetes and other systems. When you are using .NET and Docker together, you are probably...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/","RawContent":null},{"Title":"Using .NET and Docker Together – DockerCon 2018 Update","PublishedOn":"2018-06-14T00:15:31+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"I posted about Using .NET and Docker Together last year. With DockerCon 2018 being this week, it seemed like a great time to give you an update.  Since my last post, we&#8217;ve enabled a set of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/13/using-net-and-docker-together-dockercon-2018-update/","RawContent":null},{"Title":".NET Framework June 2018 Security and Quality Rollup","PublishedOn":"2018-06-13T19:29:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the June 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework May 2018 Security and Quality Rollup for the latest security updates. Quality and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3621!","PublishedOn":"2018-06-06T21:19:43+00:00","CommentsCount":38,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.8 Early Access build 3621 for your feedback. This is one of the in-development builds of the next version of the .NET Framework. The changes in this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/","RawContent":null},{"Title":"Announcing ML.NET 0.2","PublishedOn":"2018-06-06T04:36:25+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Last month at //Build 2018, we released ML.NET 0.1, a cross-platform, open source machine learning framework. We would like to thank the community for the engagement so far in helping us shape ML.NET....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/05/announcing-ml-net-0-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1","PublishedOn":"2018-05-30T17:22:16+00:00","CommentsCount":71,"FacebookCount":0,"Summary":"We&#8217;re excited to announce the release of .NET Core 2.1. It includes improvements to performance, to the runtime and tools. It also includes a new way to deploy tools as NuGet packages....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1","PublishedOn":"2018-05-30T17:22:00+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today we are excited to announce the release of Entity Framework (EF) Core 2.1. This is the latest production-ready release of our open-source and cross-platform data access technology. We are...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7896820874","Type":"IssuesEvent","CreatedAt":"2018-06-29T09:52:53","Actor":"tomkerkhove","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Opened issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"},{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7932857656","Type":"PullRequestEvent","CreatedAt":"2018-07-07T20:03:22","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18825","RelatedDescription":"Opened pull request \"Fixing a call to emitIns_SIMD_R_R_AR_R to pass arguments in the correct order\" (#18825) at dotnet/coreclr","RelatedBody":"FYI. @fiigii, @CarolEidt, @eerhardt "},{"Id":"7932812620","Type":"IssuesEvent","CreatedAt":"2018-07-07T19:25:13","Actor":"scls19fr","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18824","RelatedDescription":"Opened issue \"BinaryReader should also accept String as path filename for contructor\" (#18824) at dotnet/coreclr","RelatedBody":"Hello,\r\n\r\nfollowing same comparison of `StreamWriter`/`StreamReader` and `BinaryWriter/BinaryReader` exposed in #18823\r\n\r\nI noticed that `StreamReader` can be construct with a `String` but not `BinaryReader` it will be nice to have a similar API ie also accept `BinaryReader` to be construct using `String`\r\n\r\nKind regards\r\n\r\n\r\n\r\nhttps://github.com/dotnet/coreclr/blob/0fbd855e38bc3ec269479b5f6bf561dcfd67cbb6/src/System.Private.CoreLib/shared/System/IO/StreamReader.cs#L170\r\n\r\nhttps://github.com/dotnet/coreclr/blob/26d4004e90f47036d6393222522cf529aa41c6bb/src/mscorlib/src/System/IO/BinaryReader.cs#L49\r\n\r\nsame for writer\r\n\r\nhttps://github.com/dotnet/coreclr/blob/0fbd855e38bc3ec269479b5f6bf561dcfd67cbb6/src/System.Private.CoreLib/shared/System/IO/StreamWriter.cs#L132\r\n\r\nhttps://github.com/dotnet/coreclr/blob/0fbd855e38bc3ec269479b5f6bf561dcfd67cbb6/src/System.Private.CoreLib/shared/System/IO/BinaryWriter.cs#L50"},{"Id":"7932810342","Type":"IssuesEvent","CreatedAt":"2018-07-07T19:23:11","Actor":"scls19fr","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18823","RelatedDescription":"Opened issue \"Add EndOfStream property to BinaryReader\" (#18823) at dotnet/coreclr","RelatedBody":"Hello,\r\n\r\nI'm comparing saving/reading data using either `StreamWriter`/`StreamReader` and `BinaryWriter/BinaryReader`.\r\n\r\nWith `StreamReader`, to read data we can do:\r\n\r\n```vb\r\nImports System.IO\r\n\r\nioReader = New StreamReader(fname)\r\n\r\nDo While Not ioReader.EndOfStream\r\n\r\n        Dim substrings() As String = chaine.Split(\";\")\r\n        ...\r\nLoop\r\n\r\nioReader.Close()\r\n```\r\n\r\nbut with `BinaryReader` it's a bit more complicated with\r\n\r\n```vb\r\nioReader = New BinaryReader(File.Open(fname, FileMode.Open))\r\n\r\nDo While ioReader.BaseStream.Position <> ioReader.BaseStream.Length\r\n    t = ioReader.ReadSingle()\r\n    y = ioReader.ReadSingle()\r\n    ...\r\nLoop\r\n\r\nioReader.Close()\r\n```\r\n\r\nI wonder if an `EndOfStream` property couldn't be added to `BinaryReader`\r\n\r\nKind regards"},{"Id":"7932780645","Type":"IssuesEvent","CreatedAt":"2018-07-07T18:58:45","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18822","RelatedDescription":"Opened issue \"[RyuJIT] Seeing bad codegen for various AVX HWIntrinsics\" (#18822) at dotnet/coreclr","RelatedBody":"The following code snippet:\r\n```C#\r\npublic void RunBasicScenario_Load()\r\n{\r\n    var result = Avx.BlendVariable(\r\n        Avx.LoadVector256((Single*)(_dataTable.inArray1Ptr)),\r\n        Avx.LoadVector256((Single*)(_dataTable.inArray2Ptr)),\r\n        Avx.LoadVector256((Single*)(_dataTable.inArray3Ptr))\r\n    );\r\n\r\n    Unsafe.Write(_dataTable.outArrayPtr, result);\r\n    ValidateResult(_dataTable.inArray1Ptr, _dataTable.inArray2Ptr, _dataTable.inArray3Ptr, _dataTable.outArrayPtr);\r\n}\r\n```\r\n\r\nIs generating the following assembly:\r\n```asm\r\n\r\nRunning BlendVariable.Single test...\r\n; Assembly listing for method JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__BlendVariableSingle:RunBasicScenario_Load():this\r\n; Emitting BLENDED_CODE for X64 CPU with AVX\r\n; optimized code\r\n; rsp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 this         [V00,T01] (  8,  8   )     ref  ->  rsi         this class-hnd\r\n;  V01 loc0         [V01,T09] (  3,  3   )  simd32  ->  mm6        \r\n;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (48) [rsp+0x00]  \r\n;  V03 tmp1         [V03,T02] (  4,  8   )  simd32  ->  mm6        \r\n;  V04 tmp2         [V04,T03] (  4,  8   )  simd32  ->  mm7        \r\n;  V05 tmp3         [V05,T04] (  4,  8   )    long  ->  rbx        \r\n;  V06 tmp4         [V06,T05] (  4,  8   )    long  ->  rbp        \r\n;  V07 tmp5         [V07,T06] (  4,  8   )    long  ->  r14        \r\n;  V08 tmp6         [V08,T08] (  3,  6   )    long  ->  rax        \r\n;* V09 tmp7         [V09    ] (  0,  0   )  simd32  ->  zero-ref   \r\n;  V10 tmp8         [V10,T07] (  4,  8   )    long  ->  rax        \r\n;  V11 cse0         [V11,T00] ( 18, 18   )   byref  ->  rdi        \r\n;\r\n; Lcl frame size = 112\r\n\r\nG_M14836_IG01:\r\n       4156                 push     r14\r\n       57                   push     rdi\r\n       56                   push     rsi\r\n       55                   push     rbp\r\n       53                   push     rbx\r\n       4883EC70             sub      rsp, 112\r\n       C5F877               vzeroupper \r\n       C4E17829742460       vmovaps  qword ptr [rsp+60H], xmm6\r\n       C4E178297C2450       vmovaps  qword ptr [rsp+50H], xmm7\r\n       C4617829442440       vmovaps  qword ptr [rsp+40H], xmm8\r\n       C46178294C2430       vmovaps  qword ptr [rsp+30H], xmm9\r\n       488BF1               mov      rsi, rcx\r\n\r\nG_M14836_IG02:\r\n       3936                 cmp      dword ptr [rsi], esi\r\n       488D7E70             lea      rdi, bword ptr [rsi+112]\r\n       488BCF               mov      rcx, rdi\r\n       E866F6FFFF           call     JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__DataTable`4[Single,Single,Single,Single][System.Single,System.Single,System.Single,System.Single]:get_inArray1Ptr():long:this\r\n       C4E17C1030           vmovups  ymm6, ymmword ptr[rax]\r\n       488BCF               mov      rcx, rdi\r\n       C4E37D19F701         vextractf128 ymm7, ymm6, 1\r\n       E893F6FFFF           call     JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__DataTable`4[Single,Single,Single,Single][System.Single,System.Single,System.Single,System.Single]:get_inArray2Ptr():long:this\r\n       C4E34D18F701         vinsertf128 ymm6, ymm7, 1\r\n       C4E17C1038           vmovups  ymm7, ymmword ptr[rax]\r\n       488BCF               mov      rcx, rdi\r\n       C4C37D19F001         vextractf128 ymm8, ymm6, 1\r\n       C4C37D19F901         vextractf128 ymm9, ymm7, 1\r\n       E8B4F6FFFF           call     JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__DataTable`4[Single,Single,Single,Single][System.Single,System.Single,System.Single,System.Single]:get_inArray3Ptr():long:this\r\n       C4C34518F901         vinsertf128 ymm7, ymm9, 1\r\n       C4C34D18F001         vinsertf128 ymm6, ymm8, 1\r\n       C4E17C1000           vmovups  ymm0, ymmword ptr[rax]\r\n       C4E34D4AF700         vblendvps ymm6, ymm6, ymm7, ymm0\r\n       488BCF               mov      rcx, rdi\r\n       C4E37D19F701         vextractf128 ymm7, ymm6, 1\r\n       E81FF8FFFF           call     JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__DataTable`4[Single,Single,Single,Single][System.Single,System.Single,System.Single,System.Single]:get_outArrayPtr():long:this\r\n       C4E34D18F701         vinsertf128 ymm6, ymm7, 1\r\n       C4E17D1130           vmovupd  ymmword ptr[rax], ymm6\r\n       488BCF               mov      rcx, rdi\r\n       E8FCF5FFFF           call     JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__DataTable`4[Single,Single,Single,Single][System.Single,System.Single,System.Single,System.Single]:get_inArray1Ptr():long:this\r\n       488BD8               mov      rbx, rax\r\n       488BCF               mov      rcx, rdi\r\n       E831F6FFFF           call     JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__DataTable`4[Single,Single,Single,Single][System.Single,System.Single,System.Single,System.Single]:get_inArray2Ptr():long:this\r\n       488BE8               mov      rbp, rax\r\n       488BCF               mov      rcx, rdi\r\n       E866F6FFFF           call     JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__DataTable`4[Single,Single,Single,Single][System.Single,System.Single,System.Single,System.Single]:get_inArray3Ptr():long:this\r\n       4C8BF0               mov      r14, rax\r\n       488BCF               mov      rcx, rdi\r\n       E8EBF7FFFF           call     JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__DataTable`4[Single,Single,Single,Single][System.Single,System.Single,System.Single,System.Single]:get_outArrayPtr():long:this\r\n       48BA2096C0CDBE010000 mov      rdx, 0x1BECDC09620\r\n       488B12               mov      rdx, gword ptr [rdx]\r\n       4889542428           mov      gword ptr [rsp+28H], rdx\r\n       4889442420           mov      qword ptr [rsp+20H], rax\r\n       488BD3               mov      rdx, rbx\r\n       4C8BC5               mov      r8, rbp\r\n       4D8BCE               mov      r9, r14\r\n       488BCE               mov      rcx, rsi\r\n       E803F8FFFF           call     JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__BlendVariableSingle:ValidateResult(long,long,long,long,ref):this\r\n       90                   nop      \r\n\r\nG_M14836_IG03:\r\n       C4E17828742460       vmovaps  xmm6, qword ptr [rsp+60H]\r\n       C4E178287C2450       vmovaps  xmm7, qword ptr [rsp+50H]\r\n       C4617828442440       vmovaps  xmm8, qword ptr [rsp+40H]\r\n       C46178284C2430       vmovaps  xmm9, qword ptr [rsp+30H]\r\n       C5F877               vzeroupper \r\n       4883C470             add      rsp, 112\r\n       5B                   pop      rbx\r\n       5D                   pop      rbp\r\n       5E                   pop      rsi\r\n       5F                   pop      rdi\r\n       415E                 pop      r14\r\n       C3                   ret      \r\n\r\n; Total bytes of code 280, prolog size 41 for method JIT.HardwareIntrinsics.X86.SimpleTernaryOpTest__BlendVariableSingle:RunBasicScenario_Load():this\r\n; ============================================================\r\n```"},{"Id":"7932741988","Type":"PullRequestEvent","CreatedAt":"2018-07-07T18:26:23","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18821","RelatedDescription":"Opened pull request \"Updating the hwintrinsic test templates to test both class and struct field scenarios.\" (#18821) at dotnet/coreclr","RelatedBody":"FYI. @CarolEidt, @fiigii, @eerhardt \r\n\r\nThis updates the HWIntrinsic tests to cover some additional codegen paths that they weren't testing before."},{"Id":"7932646890","Type":"PullRequestEvent","CreatedAt":"2018-07-07T17:11:15","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18820","RelatedDescription":"Opened pull request \"Fixing encodeXmmRegAsIval to ensure the result meets the \"fits in imm8\" check\" (#18820) at dotnet/coreclr","RelatedBody":"FYI. @CarolEidt, @fiigii, @eerhardt \r\n\r\nThis resolves https://github.com/dotnet/coreclr/issues/18815"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7931123364","Type":"IssuesEvent","CreatedAt":"2018-07-06T21:56:00","Actor":"natemcmaster","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/794","RelatedDescription":"Opened issue \"xmldoc file in NETStandard.Library 2.0.3 is invalid xml\" (#794) at dotnet/standard","RelatedBody":"Trying to parse netstandard.library/2.0.3/build/netstandard2.0/ref/netstandard.xml with System.Xml.Linq.XDocument throws the following error:\r\n```\r\nThe 'p' start tag on line 654 position 2 does not match the end tag of 'th'. Line 654, position 86.\r\n```\r\n\r\nHere's the offending section:\r\n```\r\n    <member name=\"M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)\">\r\n      <summary>Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.</summary>\r\n      <param name=\"a\">The first object to compare.</param>\r\n      <param name=\"b\">The second object to compare.</param>\r\n      <returns><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\"><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">A signed integer that indicates the relative values of <code data-dev-comment-type=\"paramref\">a</code> and <code data-dev-comment-type=\"paramref\">b</code>, as shown in the following table.  </p>\r\n <table><thead><tr><th> Value  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\"> </th><th> Meaning  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"6\" sourceendlinenumber=\"6\"> </th></tr></thead><tbody><tr><td> Less than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"8\" sourceendlinenumber=\"8\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is less than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"10\" sourceendlinenumber=\"10\"> </td></tr><tr><td> Zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"12\" sourceendlinenumber=\"12\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> equals <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"14\" sourceendlinenumber=\"14\"> </td></tr><tr><td> Greater than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"16\" sourceendlinenumber=\"16\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is greater than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"18\"> </td></tr></tbody></table></p>\r\n</returns>\r\n      <exception cref=\"T:System.ArgumentException\">Neither <paramref name=\"a\">a</paramref> nor <paramref name=\"b\">b</paramref> implements the <see cref=\"T:System.IComparable\"></see> interface.   -or-  <paramref name=\"a\">a</paramref> and <paramref name=\"b\">b</paramref> are of different types.</exception>\r\n    </member>\r\n```"},{"Id":"7930952606","Type":"PullRequestEvent","CreatedAt":"2018-07-06T21:07:36","Actor":"ionux","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/793","RelatedDescription":"Opened pull request \"Minor text correction for ObsoleteAttribute message.\" (#793) at dotnet/standard","RelatedBody":""},{"Id":"7916191014","Type":"IssuesEvent","CreatedAt":"2018-07-04T04:36:15","Actor":"ramsubbaraoc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/792","RelatedDescription":"Closed issue \"vs2017 csproj don't have <ItemGroup> <Compile/> tag\" (#792) at dotnet/standard","RelatedBody":"This is not an issue.Just for information\r\nWhen i create a netstandard project in VS2017, the csproj file doesn't contain the list of cs files which are part of the solution/project. \r\nOld csproj(which have been created using older VS version) contain the list of files and using that for command-line wasn't a problem\r\n\r\n If i have to use csproj/sln file(created with VS2017) to compile the code from command-line how do i do it?"},{"Id":"7911966456","Type":"IssuesEvent","CreatedAt":"2018-07-03T11:33:03","Actor":"ramsubbaraoc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/792","RelatedDescription":"Opened issue \"vs2017 csproj don't have <ItemGroup> <Compile/> tag\" (#792) at dotnet/standard","RelatedBody":"This is not an issue.Just for information\r\nWhen i create a netstandard project in VS2017, the csproj file doesn't contain the list of cs files which are part of the solution/project. \r\nOld csproj(which have been created using older VS version) contain the list of files and using that for command-line wasn't a problem\r\n\r\n If i have to use csproj/sln file(created with VS2017) to compile the code from command-line how do i do it?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7933175320","Type":"IssuesEvent","CreatedAt":"2018-07-08T01:17:39","Actor":"nitroxis","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/30891","RelatedDescription":"Opened issue \"HashSet ISerializable implementation sets wrong type for the equality comparer.\" (#30891) at dotnet/corefx","RelatedBody":"The HashSet<T> ISerializable implementation sets the wrong type for its equality comparer in this line:\r\n\r\nhttps://github.com/dotnet/corefx/blob/2e34bf9d93e23c2fdf978e457543b95906226721/src/System.Collections/src/System/Collections/Generic/HashSet.cs#L401\r\n\r\nI believe this should be typeof(IEqualityComparer<T>), not IComparer<T>. I know this is legacy code, but it leads to issues when serializers that respect ISerializable encounter this type (i.e. an InvalidCastException is thrown)."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7932957522","Type":"PullRequestEvent","CreatedAt":"2018-07-07T21:32:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/6068","RelatedDescription":null,"RelatedBody":"This is required to use the correct forwarder for System.Runtime.InteropServices types that still\r\nhave a different home between CoreCLR and CoreRT.\r\n\r\nWorkaround for #3231\r\nFixes #6062"},{"Id":"7932957458","Type":"PullRequestEvent","CreatedAt":"2018-07-07T21:32:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6068","RelatedDescription":"Closed pull request \"Use uapaot mscorlib facade\" (#6068) at dotnet/corert","RelatedBody":"This is required to use the correct forwarder for System.Runtime.InteropServices types that still\r\nhave a different home between CoreCLR and CoreRT.\r\n\r\nWorkaround for #3231\r\nFixes #6062"},{"Id":"7932402760","Type":"PullRequestEvent","CreatedAt":"2018-07-07T14:09:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/6068","RelatedDescription":null,"RelatedBody":"This is required to use the correct forwarder for System.Runtime.InteropServices types that still\r\nhave a different home between CoreCLR and CoreRT.\r\n\r\nWorkaround for #3231\r\nFixes #6062"},{"Id":"7932402667","Type":"PullRequestEvent","CreatedAt":"2018-07-07T14:09:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6068","RelatedDescription":"Closed pull request \"Use uapaot mscorlib facade\" (#6068) at dotnet/corert","RelatedBody":"This is required to use the correct forwarder for System.Runtime.InteropServices types that still\r\nhave a different home between CoreCLR and CoreRT.\r\n\r\nWorkaround for #3231\r\nFixes #6062"},{"Id":"7931794655","Type":"PullRequestEvent","CreatedAt":"2018-07-07T05:23:44","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/6068","RelatedDescription":null,"RelatedBody":"This is required to use the correct forwarder for System.Runtime.InteropServices types that still\r\nhave a different home between CoreCLR and CoreRT.\r\n\r\nWorkaround for #3231\r\nFixes #6062"},{"Id":"7931794621","Type":"PullRequestEvent","CreatedAt":"2018-07-07T05:23:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6068","RelatedDescription":"Closed pull request \"Use uapaot mscorlib facade\" (#6068) at dotnet/corert","RelatedBody":"This is required to use the correct forwarder for System.Runtime.InteropServices types that still\r\nhave a different home between CoreCLR and CoreRT.\r\n\r\nWorkaround for #3231\r\nFixes #6062"},{"Id":"7931794031","Type":"PullRequestEvent","CreatedAt":"2018-07-07T05:23:07","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6070","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6070) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"7931719168","Type":"IssuesEvent","CreatedAt":"2018-07-07T04:06:33","Actor":"tiandian","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6072","RelatedDescription":"Closed issue \"It is possible make writing rd.xml easier by write a log in GetType()?\" (#6072) at dotnet/corert","RelatedBody":"When I publish a asp.net core app to corert, it often runs error,  i reference many third party libraries,\r\nI don't know which code generate the error, and I can't change the code in the third party libraries,\r\nbut I know it is most possible be a reflection error,   and it is most possible Type.GetType() return null,\r\n\r\nso I want ask it is possible let Type.GetType to write to a log file when it return null when publish to corert?\r\nchange Type.GetType's code to below:\r\n\r\n```\r\n        public static Type GetType(String typeName)\r\n        {\r\n            StackCrawlMark stackMark = StackCrawlMark.LookForMyCaller;\r\n            Type t = return RuntimeType.GetType(typeName, false, false, false, ref stackMark);\r\n\r\n#if LOG\r\n            if (t == null)\r\n            {\r\n                Writelog(\"ReflectionError.txt\", string.Format(\"GetType: typeName = {0} return null.\", typeName));\r\n            }\r\n#endif\r\n\r\n            return t;\r\n        }\r\n```\r\n\r\nthen when i run `dotnet publish -r win-x64 -c release --LOG=1`, when i run the published exe, it will write a ReflectionError.txt file, I don't need know which line code in the third library generate the error, I just need add the error type in the ReflectionError.txt to rd.xml to resolve the problem.\r\n\r\nthanks!\r\n"},{"Id":"7931717667","Type":"IssuesEvent","CreatedAt":"2018-07-07T04:05:30","Actor":"tiandian","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6073","RelatedDescription":"Opened issue \"It is possible add all Assemblies in rd.xml  by one line?\" (#6073) at dotnet/corert","RelatedBody":"Is it possible to add one line to rd.xml, to let dotnet publish add all the assemblies's metadata to the published exe?\r\n\r\n```\r\n<Directives>\r\n    <Application>\r\n           <Assembly Name=\"*\" Dynamic=\"Required All\" />\r\n    </Application>\r\n</Directives>\r\n```\r\n\r\nor if there is not rd.xml, then add all referenced assemblies's metadata to to published exe, just let it can work.\r\n\r\nI have used vb6, it can compile to p-code, and it can compilt to native-code too, it has all the  metadata in its exe file, and vb6's exe is small, and vb6's vm is small, it is just only 1.32M.\r\n\r\nSo I don't know the how big is dotnet core's  metadata? if the dotnet has 100M, the metadata has 1%, it will only has 1M,  but since the published corert exe is already so big, add 1M more to it, not much side effects.\r\n\r\nSo it is possible to let the corert's exe include all the referenced assemblies's metadata to the publish exe default, don't let the use to add line to rd.xml, even maybe it will make the exe file 1M bigger  , \r\n\r\nThanks.\r\n"},{"Id":"7931488581","Type":"IssuesEvent","CreatedAt":"2018-07-07T00:44:15","Actor":"tiandian","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6072","RelatedDescription":"Opened issue \"It is possible make writing rd.xml easier by write a log in GetType()?\" (#6072) at dotnet/corert","RelatedBody":"When I publish a asp.net core app to corert, it often runs error,  i reference many third party libraries,\r\nI don't know which code generate the error, and I can't change the code in the third party libraries,\r\nbut I know it is most possible be a reflection error,   and it is most possible Type.GetType() return null,\r\n\r\nso I want ask it is possible let Type.GetType to write to a log file when it return null when publish to corert?\r\nchange Type.GetType's code to below:\r\n\r\n```\r\n        public static Type GetType(String typeName)\r\n        {\r\n            StackCrawlMark stackMark = StackCrawlMark.LookForMyCaller;\r\n            Type t = return RuntimeType.GetType(typeName, false, false, false, ref stackMark);\r\n\r\n#if LOG\r\n            if (t == null)\r\n            {\r\n                Writelog(\"ReflectionError.txt\", string.Format(\"GetType: typeName = {0} return null.\", typeName));\r\n            }\r\n#endif\r\n\r\n            return t;\r\n        }\r\n```\r\n\r\nthen when i run `dotnet publish -r win-x64 -c release --LOG=1`, when i run the published exe, it will write a ReflectionError.txt file, I don't need know which line code in the third library generate the error, I just need add the error type in the ReflectionError.txt to rd.xml to resolve the problem.\r\n\r\nthanks!\r\n"},{"Id":"7931207392","Type":"IssuesEvent","CreatedAt":"2018-07-06T22:25:27","Actor":"ncsurfus","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6071","RelatedDescription":"Opened issue \"Linux non-trivial marshalling support\" (#6071) at dotnet/corert","RelatedBody":"Any idea when this will be fixed or how I can work around it? I can't make HttpClient requests with the CurlHandler as it always fails with the same exception. If I use the SocketsHttpHandler I run into another marshaling issue for authentication (GSSAPI). I have no issues on Windows.\r\n\r\n```\r\nUnhandled Exception: System.Exception: Method '[System.Net.Http]Interop+Http.RegisterSslCtxCallback(SafeCurlHandle,SslCtxCallback,native int,SafeCallbackHandle&)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at Interop.Http.RegisterSslCtxCallback(Interop.Http.SafeCurlHandle, Interop.Http.SslCtxCallback, IntPtr, Interop.Http.SafeCallbackHandle&) + 0x24\r\n   at System.Net.Http.CurlHandler.SslProvider.SetSslOptionsForSupportedBackend(CurlHandler.EasyRequest, CurlHandler.ClientCertificateProvider, IntPtr) + 0x2a\r\n   at System.Net.Http.CurlHandler.SslProvider.SetSslOptions(CurlHandler.EasyRequest, ClientCertificateOption) + 0x157\r\n   at System.Net.Http.CurlHandler.EasyRequest.InitializeCurl() + 0x188\r\n   at System.Net.Http.CurlHandler.MultiAgent.ActivateNewRequest(CurlHandler.EasyRequest) + 0x16c\r\n```\r\n\r\n```\r\nUnhandled Exception: System.ComponentModel.Win32Exception (0x80090020): Method '[System.Net.Http]Interop+NetSecurityNative.InitSecContext(Status&,SafeGssCredHandle,SafeGssContextHandle&,bool,SafeGssNameHandle,uint32,uint8[],int32,GssBuffer&,uint32&,int32&)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Net.NTAuthentication.GetOutgoingBlob(Byte[], Boolean, SecurityStatusPal&) + 0x550\r\n   at System.Net.NTAuthentication.GetOutgoingBlob(String) + 0x64\r\n   at System.Net.Http.AuthenticationHelper.<SendWithNtAuthAsync>d__46.MoveNext() + 0x396\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x1b\r\n   at System.Net.Http.HttpConnectionPool.<SendWithRetryAsync>d__39.MoveNext() + 0x3c1\r\n```"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1013052742326280192","CreatedAt":"2018-06-30T13:32:50+00:00","UserScreenname":"dotnet","Text":"Tune in for Jeff's Saturday show, learn how to use C# and @ASPNET Core.  Always a good time https://t.co/KJoRPYHnHt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2018-07-08T05:30:32.9985613Z","RunDurationInMilliseconds":6798}