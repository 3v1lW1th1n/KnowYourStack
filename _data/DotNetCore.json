{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.7","PublishedOn":"2018-05-08T18:22:06+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We’re excited to share updates about changes to F# and F# tools which shipped with the Visual Studio 2017 version 15.7 release. Let’s dive in! Type Providers now support .NET Standard For those who...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/f-language-and-tools-update-for-visual-studio-2017-version-15-7/","RawContent":null},{"Title":"Introducing ML.NET: Cross-platform, Proven and Open Source Machine Learning Framework","PublishedOn":"2018-05-08T00:41:28+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today at //Build 2018, we are excited to announce the preview of ML.NET, a cross-platform, open source machine learning framework. ML.NET will allow .NET developers to develop their own models and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 RC 1","PublishedOn":"2018-05-07T18:00:05+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today, we are excited to announce that the first release candidate of EF Core 2.1 is available, alongside .NET Core 2.1 RC 1 and ASP.NET Core 2.1 RC 1, for broad testing, and now also for production...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-entity-framework-core-2-1-rc-1/","RawContent":null},{"Title":".NET Core 3 and Support for Windows Desktop Applications","PublishedOn":"2018-05-07T15:40:04+00:00","CommentsCount":211,"FacebookCount":0,"Summary":"At Microsoft Build Live today, we are sharing a first look at our plans for .NET Core 3. The highlight of .NET Core 3 is support for Windows desktop applications, specifically Windows Forms, Windows...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/","RawContent":null},{"Title":"Announcing .NET Core 2.1 RC 1","PublishedOn":"2018-05-07T15:39:20+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 2.1 Release Candidate 1 (RC 1). The .NET Core 2.1 RC 1 is now ready for broad testing and for production use. Our quality, reliability, and performance testing...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/","RawContent":null},{"Title":"Announcing the .NET Framework 4.7.2","PublishedOn":"2018-04-30T20:56:19+00:00","CommentsCount":52,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of the .NET Framework 4.7.2. It’s included in the Windows 10 April 2018 Update. .NET Framework 4.7.2 is also available on Windows 7+ and Windows Server 2008...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/","RawContent":null},{"Title":"Help us plan the future of .NET!","PublishedOn":"2018-04-20T16:55:37+00:00","CommentsCount":75,"FacebookCount":0,"Summary":"We’re currently planning our next major .NET releases and would love to hear your feedback on how you interact with .NET Framework and .NET Core today. Please fill out the survey below and help shape...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/20/help-us-plan-the-future-of-net/","RawContent":null},{"Title":"Performance Improvements in .NET Core 2.1","PublishedOn":"2018-04-18T19:29:45+00:00","CommentsCount":48,"FacebookCount":0,"Summary":"Back before .NET Core 2.0 shipped, I wrote a post highlighting various performance improvements in .NET Core 2.0 when compared with .NET Core 1.1 and the .NET Framework. As .NET Core 2.1 is in its...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7640755266","Type":"PullRequestEvent","CreatedAt":"2018-05-08T00:32:51","Actor":"shauheen","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Opened pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7640750127","Type":"PullRequestEvent","CreatedAt":"2018-05-08T00:31:03","Actor":"shauheen","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Opened pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""},{"Id":"7559882384","Type":"PullRequestEvent","CreatedAt":"2018-04-20T06:42:59","Actor":"Cheesebaron","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Opened pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project"},{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7644965785","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:03:40","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to ASP.NET Core 2.0.8.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to 2.0.8 to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_"},{"Id":"7619224203","Type":"IssuesEvent","CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Opened issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65) at dotnet/announcements","RelatedBody":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n"},{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"},{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7653098401","Type":"IssuesEvent","CreatedAt":"2018-05-10T01:50:51","Actor":"leculver","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17943","RelatedDescription":"Opened issue \"Reliability - Watson crash in AssemblySpec::Bind  \" (#17943) at dotnet/coreclr","RelatedBody":"We have a failure during EEStartup, tracked by this internal Watson bucket:\r\nhttps://watson/Failure?FailureSearchText=4a3aff04-3ef6-bbbe-2ae8-2cffa0b278c3\r\n\r\nThis accounts for 91.6% of reported external failures in coreclr.dll:\r\n\r\n    0 coreclr!AssemblySpec::Bind  0x0000000000000183    coreassemblyspec.cpp \r\n    1 coreclr!AppDomain::BindAssemblySpec  0x0000000000000126    appdomain.cpp \r\n    2 coreclr!PEFile::LoadAssembly  0x000000000000010C    pefile.cpp \r\n    3 coreclr!Module::LoadAssembly  0x00000000000000F6    ceeload.cpp \r\n    4 coreclr!Assembly::FindModuleByTypeRef  0x00000000000001F9    assembly.cpp \r\n    5 coreclr!ClassLoader::LoadTypeDefOrRefThrowing  0x00000000000002AE    clsload.cpp \r\n    6 coreclr!SigPointer::GetTypeHandleThrowing  0x000000000000021F    siginfo.cpp \r\n    7 coreclr!MemberLoader::GetDescFromMemberRef  0x000000000000039B    memberload.cpp \r\n    8 coreclr!CEEInfo::resolveToken  0x00000000000005A6    jitinterface.cpp \r\n    9 clrjit!Compiler::impImportBlockCode  0x0000000000000927    importer.cpp \r\n    10 clrjit!Compiler::impImportBlock  0x0000000000000093    importer.cpp \r\n    11 clrjit!Compiler::impImport  0x00000000000002DB    importer.cpp \r\n    12 clrjit!Compiler::compCompile  0x00000000000000A4    compiler.cpp \r\n    13 clrjit!Compiler::compCompileHelper  0x0000000000000299    compiler.cpp \r\n    14 clrjit!Compiler::compCompile  0x000000000000025D    compiler.cpp \r\n    15 clrjit!jitNativeCode  0x000000000000026E    compiler.cpp \r\n    16 clrjit!CILJit::compileMethod  0x00000000000000A2    ee_il_dll.cpp \r\n    17 coreclr!invokeCompileMethod  0x00000000000000E5    jitinterface.cpp \r\n    18 coreclr!CallCompileMethodWithSEHWrapper  0x0000000000000052    jitinterface.cpp \r\n    19 coreclr!UnsafeJitFunction  0x00000000000004F5    jitinterface.cpp \r\n    20 coreclr!MethodDesc::JitCompileCodeLocked  0x00000000000001FE    prestub.cpp \r\n    21 coreclr!MethodDesc::JitCompileCodeLockedEventWrapper  0x00000000001313C1    prestub.cpp \r\n    22 coreclr!MethodDesc::JitCompileCode  0x0000000000000399    prestub.cpp \r\n    23 coreclr!MethodDesc::DoPrestub  0x000000000000059E    prestub.cpp \r\n    24 coreclr!PreStubWorker  0x000000000000037A    prestub.cpp \r\n    25 coreclr!ThePreStub  0x0000000000000055    ThePreStubAMD64.asm \r\n    26 coreclr!CallDescrWorkerInternal  0x0000000000000083    CallDescrWorkerAMD64.asm \r\n    27 coreclr!MethodDescCallSite::CallTargetWorker  0x00000000000002B5    callhelpers.cpp \r\n    28 coreclr!AppDomain::InitializeDomainContext  0x0000000000000105    appdomain.cpp \r\n    29 coreclr!SystemDomain::InitializeDefaultDomain  0x000000000000004E    appdomain.cpp \r\n    30 coreclr!SystemDomain::SetupDefaultDomain  0x0000000000000199    appdomain.cpp \r\n    31 coreclr!SystemDomain::SetupDefaultDomainNoThrow  0x000000000000004D    appdomain.cpp \r\n    32 coreclr!EEStartup  0x000000000000006E    ceemain.cpp \r\n"},{"Id":"7653060126","Type":"PullRequestEvent","CreatedAt":"2018-05-10T01:36:20","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17916","RelatedDescription":"Merged pull request \"Replace easy Substrings with AsSpan/Slices\" (#17916) at dotnet/coreclr","RelatedBody":"I went through all Substring calls in coreclr and replaced the ones that were straightforward.\r\n\r\ncc: @jkotas, @tarekgh, @danmosemsft "},{"Id":"7652932515","Type":"PullRequestEvent","CreatedAt":"2018-05-10T00:47:52","Actor":"acmyu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17942","RelatedDescription":"Opened pull request \"R2RDump tool for printing ReadyToRun PE file contents\" (#17942) at dotnet/coreclr","RelatedBody":""},{"Id":"7652928227","Type":"PullRequestEvent","CreatedAt":"2018-05-10T00:46:06","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17941","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26510-01 (master)\" (#17941) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7652845408","Type":"PullRequestEvent","CreatedAt":"2018-05-10T00:14:26","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17934","RelatedDescription":"Merged pull request \"[arm/arm64] fix semicolon and priorities for new excluded tests\" (#17934) at dotnet/coreclr","RelatedBody":"Small fix for #17855."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7653462677","Type":"IssuesEvent","CreatedAt":"2018-05-10T04:10:10","Actor":"abk-x","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9250","RelatedDescription":"Opened issue \"Ansi Color On Linux\" (#9250) at dotnet/cli","RelatedBody":"Looking for some guidance on how to debug this issue. How is dotnet cli determining if Ansi support is available?\r\n\r\n## Steps to reproduce\r\n1. `dotnet new console`\r\n2. `dotnet add package Microsoft.DotNet.Cli.Utils --version 2.0.0` (this is what dotnet build/run uses)\r\n3. Following code:\r\n\r\n```\r\nusing System;\r\nusing Microsoft.DotNet.Cli.Utils;\r\n\r\nnamespace test\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var console = AnsiConsole.GetOutput();\r\n            console.WriteLine(\"\\x1b[31mRedText\");\r\n\r\n            Console.ForegroundColor = ConsoleColor.Red;\r\n            Console.WriteLine(\"RedText2\");\r\n        }\r\n    }\r\n}\r\n```\r\n4. `dotnet run`\r\n\r\n## Expected  behavior\r\nBoth RedText and RedText2 should appear red.\r\n\r\n## Actual behavior\r\nBoth text appear white.\r\nAdditionally:\r\n\r\n`$ script -q -c \"dotnet run\" out.txt && cat -A out.txt` produces:\r\n```\r\nScript started on 2018-05-10 13:53:40+1000$\r\n^[[?1h^[=^[[?1h^[=^[[?1h^[=^[[39;49mRedText^M$\r\n^[[39;49mRedText2^M$\r\n$\r\nScript done on 2018-05-10 13:53:42+1000$\r\n```\r\n\r\nWhich doesn't appear to contain the correct ANSI escape chars for the correct colors (red is 31, 39 is default console color) , furthermore, dotnet build does not seem to output colors, unless I specify `/clp:ForceConsoleColor` (which is only possible for dotnet build, not dotnet run). I have also tried setting DOTNET_CLI_CONTEXT_ANSI_PASS_THRU=1 in the environment, but this does not change the result.\r\n\r\n## Environment data\r\n\r\n$TERM is xterm-256color\r\n$SHELL is bash\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-rc1-008673\r\n Commit:    f5e3ddbe73\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  \r\n OS Platform: Linux\r\n RID:         debian-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.300-rc1-008673/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-rc1\r\n  Commit:  eb9bc92051\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300-rc1-008673 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7653341716","Type":"IssuesEvent","CreatedAt":"2018-05-10T03:21:03","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9248","RelatedDescription":"Closed issue \"Publishing build failures in 'prodcon/cli/release/2.1.3xx/' - '20180509.01'\" (#9248) at dotnet/cli","RelatedBody":"There were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1673494\r\n  - **Agent:** DDVSOWINAGE022\r\n  - **Error log:** 2>E:\\A\\_work\\0\\s\\build\\test\\RunTest.proj(0,0): error MSB6006: \"dotnet.exe\" exited with code 1....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1673495\r\n  - **Agent:** DDVSOWINAGE026\r\n  - **Error log:** 2>E:\\A\\_work\\0\\s\\build\\test\\RunTest.proj(0,0): error MSB6006: \"dotnet.exe\" exited with code 1....\r\n\r\n@mmitche, @livarcocc\r\n"},{"Id":"7652984131","Type":"IssuesEvent","CreatedAt":"2018-05-10T01:07:52","Actor":"jholovacs","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9249","RelatedDescription":"Opened issue \"Method 'Rent' in type 'System.Buffers.MemoryPool' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\" (#9249) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nI was troubleshooting my friend's code, I was using **2.1.300-preview2-008375**, he was using 2.1.400-preview-008659.  We both did a fresh clone, built, tried to run, he got the following error (I did not):\r\n\r\n> warn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n>       Unable to bind to http://localhost:5000 on the IPv6 loopback interface: 'Method 'Rent' in type 'System.Buffers.MemoryPool' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.'.\r\n> crit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n>       Unable to start Kestrel.\r\n> System.IO.IOException: Failed to bind to address http://localhost:5000. ---> System.AggregateException: One or more errors occurred. (Method 'Rent' in type 'System.Buffers.MemoryPool' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Rent' in type 'System.Buffers.MemoryPool' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Rent' in type 'System.Buffers.MemoryPool' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread..ctor(LibuvTransport transport)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.BindAsync()\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)\r\n>    --- End of inner exception stack trace ---\r\n>    --- End of inner exception stack trace ---\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n> \r\n> Unhandled Exception: System.IO.IOException: Failed to bind to address http://localhost:5000. ---> System.AggregateException: One or more errors occurred. (Method 'Rent' in type 'System.Buffers.MemoryPool' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Rent' in type 'System.Buffers.MemoryPool' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Rent' in type 'System.Buffers.MemoryPool' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread..ctor(LibuvTransport transport)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.BindAsync()\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)\r\n>    --- End of inner exception stack trace ---\r\n>    --- End of inner exception stack trace ---\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n>    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n>    at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n>    at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token, String shutdownMessage)\r\n>    at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token)\r\n>    at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n>    at Charlesfund.Community.App.Program.Main(String[] args) in D:\\Projects\\Charlesfund.Community\\Charlesfund.Community.App\\Program.cs:line 23\r\n> Application is shutting down...\r\n\r\nI then installed the same version of .net core, and got the same error.\r\n\r\n## Expected  behavior\r\nI can run the software\r\n\r\n## Actual behavior\r\nSoftware builds, but cannot run.\r\n\r\n## Environment data\r\n\r\n> `dotnet --info` output:\r\n> dotnet --info\r\n> .NET Core SDK (reflecting any global.json):\r\n>  Version:   2.1.400-preview-008659\r\n>  Commit:    64fbb3a81b\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     Windows\r\n>  OS Version:  10.0.16299\r\n>  OS Platform: Windows\r\n>  RID:         win10-x64\r\n>  Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.400-preview-008659\\\r\n> \r\n> Host (useful for support):\r\n>   Version: 2.1.0-preview3-26411-06\r\n>   Commit:  8faa8fcfcf\r\n> \r\n> .NET Core SDKs installed:\r\n>   2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n>   2.1.300-preview2-008375 [C:\\Program Files\\dotnet\\sdk]\r\n>   2.1.400-preview-008659 [C:\\Program Files\\dotnet\\sdk]\r\n> \r\n> .NET Core runtimes installed:\r\n>   Microsoft.AspNetCore.All 2.1.0-preview2-30338 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.All 2.1.0-preview2-30475 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.App 2.1.0-preview2-30338 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 2.1.0-preview2-30475 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.0-preview2-26313-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.0-preview3-26411-06 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n> \r\n> To install additional .NET Core runtimes or SDKs:\r\n>   https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7652978612","Type":"IssuesEvent","CreatedAt":"2018-05-10T01:05:56","Actor":"dotnet-mc-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9248","RelatedDescription":"Opened issue \"Publishing build failures in 'prodcon/cli/release/2.1.3xx/' - '20180509.01'\" (#9248) at dotnet/cli","RelatedBody":"There were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1673494\r\n  - **Agent:** DDVSOWINAGE022\r\n  - **Error log:** 2>E:\\A\\_work\\0\\s\\build\\test\\RunTest.proj(0,0): error MSB6006: \"dotnet.exe\" exited with code 1....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1673495\r\n  - **Agent:** DDVSOWINAGE026\r\n  - **Error log:** 2>E:\\A\\_work\\0\\s\\build\\test\\RunTest.proj(0,0): error MSB6006: \"dotnet.exe\" exited with code 1....\r\n\r\n@mmitche, @livarcocc\r\n"},{"Id":"7652657432","Type":"IssuesEvent","CreatedAt":"2018-05-09T23:09:02","Actor":"matkoch","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9245","RelatedDescription":"Closed issue \"Can't install global tool\" (#9245) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n`$ dotnet tool install -g Nuke.GlobalTool --source-feed C:\\code\\nuke\\output --version 1.0.0`\r\n\r\nPackage file exists as `Nuke.GlobalTool.1.0.0.nupkg`.\r\n\r\n## Actual behavior\r\n```\r\nFailed to install tool package 'nuke.globaltool': Access to the path 'C:\\Users\\matthias.koch\\.dotnet\\tools\\.store\\.stage\\fpn34yfr.xj2' is denied.\r\nTool 'nuke.globaltool' failed to install. This failure may have been caused by:\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-rc1-008673\r\n Commit:    f5e3ddbe73\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-rc1-008673\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-rc1\r\n  Commit:  eb9bc92051\r\n\r\n.NET Core SDKs installed:\r\n  1.1.8 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-rc1-008673 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"7652576611","Type":"PullRequestEvent","CreatedAt":"2018-05-09T22:43:28","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9228","RelatedDescription":"Merged pull request \"Merge release/2.1.4xx to master\" (#9228) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.4xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.4xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7652568287","Type":"IssuesEvent","CreatedAt":"2018-05-09T22:40:55","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9247","RelatedDescription":"Closed issue \"dotnet install for preview/rc versions\" (#9247) at dotnet/cli","RelatedBody":"I'm not really sure what values I should pass to install for instance `2.1.300-rc1`... How do I find a valid channel/version combination? My guess was `-channel 2.1 -version 2.1.300-rc1` but this fails."},{"Id":"7652562661","Type":"IssuesEvent","CreatedAt":"2018-05-09T22:39:10","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9189","RelatedDescription":"Closed issue \"Update linux installers to use upgradable Linux packages\" (#9189) at dotnet/cli","RelatedBody":"CLI side of https://github.com/dotnet/core-setup/issues/4097"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7652677945","Type":"PullRequestEvent","CreatedAt":"2018-05-09T23:15:58","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/721","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02808-01 (master)\" (#721) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7653612495","Type":"PullRequestEvent","CreatedAt":"2018-05-10T05:16:42","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29628","RelatedDescription":"Opened pull request \"Update ProjectNTfs to beta-26510-00 (master)\" (#29628) at dotnet/corefx","RelatedBody":""},{"Id":"7653561062","Type":"PullRequestEvent","CreatedAt":"2018-05-10T04:54:36","Actor":"flcdrg","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29627","RelatedDescription":"Opened pull request \"Update XML comments to use correct interface name\" (#29627) at dotnet/corefx","RelatedBody":"Interface is named \"IConfigurationSectionHandler\", not \"IConfigSectionHandler\"\r\n\r\n(maybe there's some history there, or someone didn't want to type \"uration\" :-)"},{"Id":"7653545055","Type":"PullRequestEvent","CreatedAt":"2018-05-10T04:47:15","Actor":"pjanotti","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29626","RelatedDescription":"Opened pull request \"Fix performance regression of XmlDocument.Create\" (#29626) at dotnet/corefx","RelatedBody":"Fixes #29260\r\n\r\n* Cached the Marvin hash in a static so we avoid recalculating it for constants used on every XmlDocument.\r\n* Removed a bunch of internal fields that were actually read only - left 4 that seem that can be removed but were used in more places so I want to validate and remove them in a separate step.\r\n\r\nThere are other locations that could benefit from a similar approach, I will take a look at them.\r\n\r\nPerformance change summary:\r\n\r\nMetric | New (avg) | Old (avg)\r\n:--------- | ---------:| -----------:\r\nDuration (msec) | 30.693| 59.120|\r\nMemory (bytes) | 1.577E+008| 1.663E+008|\r\n\r\nDetailed performance (1st table is with new code, 2nd with the current code):\r\n\r\n   System.Xml.XmlDocument.Performance.Tests.dll                          | Metric                                        | Unit  | Iterations |    Average | STDEV.S |        Min |        Max\r\n  :--------------------------------------------------------------------- |:--------------------------------------------- |:-----:|:----------:| ----------:| -------:| ----------:| ----------:\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.Create             | Duration                                      | msec  |    326     |     30.693 |   1.277 |     28.903 |     39.079\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.Create             | Allocation Size on Benchmark Execution Thread | bytes |    326     | 1.577E+008 |   0.000 | 1.577E+008 | 1.577E+008\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.GetDocumentElement | Duration                                      | msec  |    1000    |      0.569 |   0.039 |      0.529 |      0.886\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.GetDocumentElement | Allocation Size on Benchmark Execution Thread | bytes |    1000    |      0.000 |   0.000 |      0.000 |      0.000\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.LoadXml            | Duration                                      | msec  |    278     |     36.048 |   1.062 |     33.087 |     46.142\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.LoadXml            | Allocation Size on Benchmark Execution Thread | bytes |    278     | 1.134E+008 |   0.000 | 1.134E+008 | 1.134E+008\r\n   XmlDocumentTests.XmlNodeListTests.Perf_XmlNodeList.Enumerator         | Duration                                      | msec  |    1000    |      1.867 |   0.114 |      1.743 |      2.754\r\n   XmlDocumentTests.XmlNodeListTests.Perf_XmlNodeList.Enumerator         | Allocation Size on Benchmark Execution Thread | bytes |    1000    | 400000.000 |   0.000 | 400000.000 | 400000.000\r\n   XmlDocumentTests.XmlNodeListTests.Perf_XmlNodeList.GetCount           | Duration                                      | msec  |    1000    |      1.047 |   0.074 |      0.951 |      1.597\r\n   XmlDocumentTests.XmlNodeListTests.Perf_XmlNodeList.GetCount           | Allocation Size on Benchmark Execution Thread | bytes |    1000    |      0.000 |   0.000 |      0.000 |      0.000\r\n   XmlDocumentTests.XmlNodeTests.Perf_XmlNode.GetAttributes              | Duration                                      | msec  |    1000    |      0.188 |   0.028 |      0.160 |      0.431\r\n   XmlDocumentTests.XmlNodeTests.Perf_XmlNode.GetAttributes              | Allocation Size on Benchmark Execution Thread | bytes |    1000    |      0.000 |   0.000 |      0.000 |      0.000\r\n   XmlDocumentTests.XmlNodeTests.Perf_XmlNode.GetValue                   | Duration                                      | msec  |    1000    |      0.124 |   0.025 |      0.109 |      0.352\r\n   XmlDocumentTests.XmlNodeTests.Perf_XmlNode.GetValue                   | Allocation Size on Benchmark Execution Thread | bytes |    1000    |      0.000 |   0.000 |      0.000 |      0.000\r\n\r\n\r\n   System.Xml.XmlDocument.Performance.Tests.dll                          | Metric                                        | Unit  | Iterations |    Average | STDEV.S |        Min |        Max\r\n  :--------------------------------------------------------------------- |:--------------------------------------------- |:-----:|:----------:| ----------:| -------:| ----------:| ----------:\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.Create             | Duration                                      | msec  |    170     |     59.120 |   1.582 |     54.918 |     69.675\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.Create             | Allocation Size on Benchmark Execution Thread | bytes |    170     | 1.663E+008 |   0.000 | 1.663E+008 | 1.663E+008\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.GetDocumentElement | Duration                                      | msec  |    1000    |      0.589 |   0.043 |      0.547 |      0.983\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.GetDocumentElement | Allocation Size on Benchmark Execution Thread | bytes |    1000    |      0.000 |   0.000 |      0.000 |      0.000\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.LoadXml            | Duration                                      | msec  |    282     |     35.535 |   0.587 |     33.267 |     40.345\r\n   XmlDocumentTests.XmlDocumentTests.Perf_XmlDocument.LoadXml            | Allocation Size on Benchmark Execution Thread | bytes |    282     | 1.134E+008 |   0.000 | 1.134E+008 | 1.134E+008\r\n   XmlDocumentTests.XmlNodeListTests.Perf_XmlNodeList.Enumerator         | Duration                                      | msec  |    1000    |      1.854 |   0.137 |      1.678 |      3.365\r\n   XmlDocumentTests.XmlNodeListTests.Perf_XmlNodeList.Enumerator         | Allocation Size on Benchmark Execution Thread | bytes |    1000    | 400000.000 |   0.000 | 400000.000 | 400000.000\r\n   XmlDocumentTests.XmlNodeListTests.Perf_XmlNodeList.GetCount           | Duration                                      | msec  |    1000    |      1.031 |   0.339 |      0.919 |      5.761\r\n   XmlDocumentTests.XmlNodeListTests.Perf_XmlNodeList.GetCount           | Allocation Size on Benchmark Execution Thread | bytes |    1000    |      0.000 |   0.000 |      0.000 |      0.000\r\n   XmlDocumentTests.XmlNodeTests.Perf_XmlNode.GetAttributes              | Duration                                      | msec  |    1000    |      0.183 |   0.026 |      0.160 |      0.321\r\n   XmlDocumentTests.XmlNodeTests.Perf_XmlNode.GetAttributes              | Allocation Size on Benchmark Execution Thread | bytes |    1000    |      0.000 |   0.000 |      0.000 |      0.000\r\n   XmlDocumentTests.XmlNodeTests.Perf_XmlNode.GetValue                   | Duration                                      | msec  |    1000    |      0.134 |   0.029 |      0.115 |      0.392\r\n   XmlDocumentTests.XmlNodeTests.Perf_XmlNode.GetValue                   | Allocation Size on Benchmark Execution Thread | bytes |    1000    |      0.000 |   0.000 |      0.000 |      0.000\r\n\r\n"},{"Id":"7653519640","Type":"PullRequestEvent","CreatedAt":"2018-05-10T04:35:37","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29561","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup, ProjectNTfs, ProjectNTfsTestILC to preview1-02808-01, preview1-26510-01, preview1-26510-01, preview1-26509-06, beta-26509-00, beta-26509-00, respectively (master)\" (#29561) at dotnet/corefx","RelatedBody":""},{"Id":"7653075783","Type":"IssuesEvent","CreatedAt":"2018-05-10T01:42:27","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29583","RelatedDescription":"Closed issue \"ClientWebSocket does not provide upgrade request error details\" (#29583) at dotnet/corefx","RelatedBody":"ClientWebSocket on .NET Core does not provide the upgrade request errors in the exception details as it does on the .NET Framework.\r\nRepro code\r\nvar client = new ClientWebSocket();\r\nclient.ConnectAsync(new Uri(\"wss://speech.platform.bing.com/speech/recognition/interactive/cognitiveservices/v1\"), CancellationToken.None).GetAwaiter().GetResult();\r\n"},{"Id":"7653075655","Type":"IssuesEvent","CreatedAt":"2018-05-10T01:42:24","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29575","RelatedDescription":"Closed issue \"ClientWebSocket does not provide upgrade request error details\" (#29575) at dotnet/corefx","RelatedBody":"\r\nClientWebSocket on .NET Core does not provide the upgrade request errors in the exception details as it does on the .NET Framework.\r\nRepro code\r\nvar client = new ClientWebSocket();\r\nclient.ConnectAsync(new Uri(\"wss://speech.platform.bing.com/speech/recognition/interactive/cognitiveservices/v1\"), CancellationToken.None).GetAwaiter().GetResult();\r\n\r\n"},{"Id":"7653075402","Type":"IssuesEvent","CreatedAt":"2018-05-10T01:42:19","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29558","RelatedDescription":"Closed issue \"ClientWebSocket does not provide upgrade request error details\" (#29558) at dotnet/corefx","RelatedBody":"ClientWebSocket on .NET Core does not provide the upgrade request errors in the exception details as it does on the .NET Framework.\r\nRepro code\r\nvar client = new ClientWebSocket();\r\nclient.ConnectAsync(new Uri(\"wss://speech.platform.bing.com/speech/recognition/interactive/cognitiveservices/v1\"), CancellationToken.None).GetAwaiter().GetResult()\r\n"},{"Id":"7653070508","Type":"PullRequestEvent","CreatedAt":"2018-05-10T01:40:25","Actor":"dotnet-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29625","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#29625) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7653063019","Type":"IssuesEvent","CreatedAt":"2018-05-10T01:37:31","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29610","RelatedDescription":"Closed issue \"API Question regarding `SslClientAuthenticationOptions` and `SslServerAuthenticationOptions`\" (#29610) at dotnet/corefx","RelatedBody":"I saw that you recently added two new classes [`SslClientAuthenticationOptions`](https://github.com/dotnet/corefx/blob/master/src/System.Net.Security/src/System/Net/Security/SslClientAuthenticationOptions.cs) and [`SslServerAuthenticationOptions`](https://github.com/dotnet/corefx/blob/master/src/System.Net.Security/src/System/Net/Security/SslServerAuthenticationOptions.cs).\r\n\r\nThese actually share quite a few properties.  Is there a reason why you didn't put those shared properties into a shared base class, such as for instance `SslAuthenticationOptions`?\r\n\r\nThere is actually a class called [`SslAuthenticationOptions`](https://github.com/dotnet/corefx/blob/master/src/System.Net.Security/src/System/Net/Security/SslAuthenticationOptions.cs), but it is internal and contains everything from both classes."},{"Id":"7653059109","Type":"PullRequestEvent","CreatedAt":"2018-05-10T01:35:56","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29624","RelatedDescription":"Opened pull request \"Add tests for Type.FilterName{IgnoreCase} and Module.FilterTypeName{IgnoreCase}\" (#29624) at dotnet/corefx","RelatedBody":"I made a change in coreclr that touched these members, and I noticed they didn't have any tests, so I'm adding some."},{"Id":"7653038525","Type":"IssuesEvent","CreatedAt":"2018-05-10T01:27:58","Actor":"kouvel","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29623","RelatedDescription":"Opened issue \"API proposal: Add SpinWait.SpinOnce overload to specify or disable the Sleep(1) threshold\" (#29623) at dotnet/corefx","RelatedBody":"[`SpinWait.SpinOnce`](https://github.com/dotnet/coreclr/blob/923d432840a499b66b3377a34be8eefb4aaf4053/src/System.Private.CoreLib/shared/System/Threading/SpinWait.cs#L128) has always used a fixed threshold before which it would start to call `Thread.Sleep(1)`.\r\n\r\nThe jump in delay from spinning/`Sleep(0)` to a `Sleep(1)` is many orders in magnitude, and no single threshold will be good for every spinning usage scenario. An [internal overload](https://github.com/dotnet/coreclr/blob/923d432840a499b66b3377a34be8eefb4aaf4053/src/System.Private.CoreLib/shared/System/Threading/SpinWait.cs#L133) was added to allow specifying the `Sleep(1)` threshold in some places where we already encountered this issue:\r\n- [`SpinLock`](https://github.com/dotnet/coreclr/blob/923d432840a499b66b3377a34be8eefb4aaf4053/src/System.Private.CoreLib/src/System/Threading/SpinLock.cs#L359)\r\n- [`SemaphoreSlim`](https://github.com/dotnet/coreclr/blob/923d432840a499b66b3377a34be8eefb4aaf4053/src/System.Private.CoreLib/src/System/Threading/SemaphoreSlim.cs#L359)\r\n\r\nIn some cases, the scenario may also prefer to disable `Sleep(1)` altogether, for instance in `Interlocked.CompareExchange()` loops, see https://github.com/dotnet/corefx/issues/29595.\r\n\r\nProposed API\r\n---\r\n\r\n```c#\r\n    public struct SpinWait\r\n    {\r\n        public void SpinOnce(int sleep1Threshold) { }\r\n    }\r\n```\r\n\r\n`sleep1Threshold`:\r\n- `< 0`: `ArgumentOutOfRangeException`\r\n- `== 0`: `Sleep(1)` will not be used\r\n- `> 0`: Specifies a minimum spin count after which `Sleep(1)` may be used based on unspecified heuristics\r\n  - For the implementation, we could probably make the value have a minimum of `SpinWait.YieldThreshold` such that the value returned by `SpinWait.NextSpinWillYield` would still be somewhat meaningful\r\n\r\nAlternatives\r\n---\r\n\r\nAdd a field for the `Sleep(1)` threshold to SpinWait and a constructor overload to set it.\r\n- Effects of increasing its size are unknown and could have undesired side-effects\r\n\r\n@stephentoub"},{"Id":"7652980403","Type":"PullRequestEvent","CreatedAt":"2018-05-10T01:06:36","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29612","RelatedDescription":"Merged pull request \"Remove intermediate char[] allocation from ToHexStringUpper\" (#29612) at dotnet/corefx","RelatedBody":"Use the new String.Create overload to write the hex representation directly into the target string rather than first writing into an allocated char[] and then creating a string from that.\r\n\r\ncc: @bartonjs "},{"Id":"7652979651","Type":"PullRequestEvent","CreatedAt":"2018-05-10T01:06:19","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29617","RelatedDescription":"Merged pull request \"SslApplicationProtocol: don't use local functions to support older compilers.\" (#29617) at dotnet/corefx","RelatedBody":"Local functions are not yet supported by Mono's \"mcs\" compiler."},{"Id":"7652864907","Type":"PullRequestEvent","CreatedAt":"2018-05-10T00:21:24","Actor":"rmkerr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29621","RelatedDescription":"Merged pull request \"Re-enable URI tests that depend on the behavior of .NET 4.7\" (#29621) at dotnet/corefx","RelatedBody":"Several tests in System.Private.Uri.FunctionalTests were disabled because they depended on fixes that were not yet present in .NET Framework. Now that we're running against a newer version that includes the fixes, I've re-enabled these tests.\r\n\r\nFixes: #15145"},{"Id":"7652864891","Type":"IssuesEvent","CreatedAt":"2018-05-10T00:21:24","Actor":"rmkerr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/15145","RelatedDescription":"Closed issue \"[Uri] Fix System.Private.Uri tests for desktop\" (#15145) at dotnet/corefx","RelatedBody":"Looks the behavior of netcore is very different than the desktop so the current existing tests are dramatically failing on the desktop and need to be re-written for the desktoop. \r\n\r\n#10821 is an example of failures"},{"Id":"7652681617","Type":"IssuesEvent","CreatedAt":"2018-05-09T23:17:14","Actor":"dmarlow","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29622","RelatedDescription":"Opened issue \"System.Net.Http NuGet broken for .NET 4.7.2\" (#29622) at dotnet/corefx","RelatedBody":"Hopefully this is the right place. If not, please let me know and I'll create this elsewhere.\r\n\r\nI created a net .NET 4.7.2 class library project and tried to reference the System.Net.Http 4.3.3 NuGet package and the entire `System.Net.Http` namespace is missing. I can't reference `HttpClient`. I'm using PackageReference though I think packages.config is also broken. As soon as I change the library to .NET 4.7.1, it all works as expected."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7653259417","Type":"PullRequestEvent","CreatedAt":"2018-05-10T02:50:22","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26753","RelatedDescription":"Opened pull request \"Permit a parenthesized expression as the first operand of a switch expression\" (#26753) at dotnet/roslyn","RelatedBody":"Fixes #26584\r\n\r\n@cston @agocke @dotnet/roslyn-compiler May I please have a couple of reviews for this tiny bug fix?\r\n"},{"Id":"7653132575","Type":"PullRequestEvent","CreatedAt":"2018-05-10T02:03:22","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26659","RelatedDescription":"Merged pull request \" Fixed exception message in GetSemanticModel\" (#26659) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/26658.\r\n\r\nFor example, for this code:\r\n\r\n```c#\r\nvar tree1 = SyntaxFactory.ParseSyntaxTree(\"\");\r\nvar tree2 = SyntaxFactory.ParseSyntaxTree(@\"class C\r\n{\r\nvoid M() {}\r\n}\", path: \"C.cs\");\r\n\r\nvar compilation = CSharpCompilation.Create(null).AddSyntaxTrees(tree1);\r\n\r\ncompilation.GetSemanticModel(tree2);\r\n```\r\n\r\nthe exception changes from:\r\n\r\n```\r\nSystem.ArgumentException : SyntaxTree 'class C\r\n{\r\n    void M() {}\r\n}' not found to remove\r\nParameter name: syntaxTree\r\n```\r\n\r\nto:\r\n\r\n```\r\nSystem.ArgumentException : SyntaxTree 'C.cs' not found\r\nParameter name: syntaxTree\r\n```\r\n\r\nQuestions:\r\n\r\n1. Is this the best way to display a `SyntaxTree` in an exception message?\r\n2. I have also changed the name of the `SyntaxTreeNotFoundTo` resource and copied translations from the old resource to the new one (which also removed BOM from the translation files). Is that okay?"},{"Id":"7653132569","Type":"IssuesEvent","CreatedAt":"2018-05-10T02:03:22","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26658","RelatedDescription":"Closed issue \"Calling GetSemanticModel with the wrong tree resulting in confusing exception message\" (#26658) at dotnet/roslyn","RelatedBody":"**Version Used**: 2.8.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nExecute the following code:\r\n\r\n```c#\r\nvar tree1 = SyntaxFactory.ParseSyntaxTree(\"\");\r\nvar tree2 = SyntaxFactory.ParseSyntaxTree(@\"class C\r\n{\r\n    void M() {}\r\n}\");\r\n\r\nvar compilation = CSharpCompilation.Create(null).AddSyntaxTrees(tree1);\r\n\r\ncompilation.GetSemanticModel(tree2);\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nUnhandled Exception: System.ArgumentException: SyntaxTree 'class C\r\n{\r\n    void M() {}\r\n}' not found to remove\r\nParameter name: syntaxTree\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetSemanticModel(SyntaxTree syntaxTree, Boolean ignoreAccessibility)\r\n   at Program.Main()\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nSince the code is not removing anything, the exception message should not talk about removing.\r\n\r\nThe code that throws the exception is:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/990fbbbf1e29eca1b7e73aa755c446ce2858446d/src/Compilers/CSharp/Portable/Compilation/CSharpCompilation.cs#L1789-L1792\r\n\r\nIt seems it shares the message `CSharpResources.SyntaxTreeNotFoundTo` with two other methods, which actually do attempt to remove a SyntaxTree.\r\n\r\nAlso, the exception message probably shouldn't include the whole code of the `SyntaxTree`.\r\n\r\nPutting the two issues together, the message could be just:\r\n\r\n> SyntaxTree not found"},{"Id":"7653053510","Type":"PullRequestEvent","CreatedAt":"2018-05-10T01:33:38","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26720","RelatedDescription":"Merged pull request \"Implement IDiscardSymbol.Equals and GetHashCode\" (#26720) at dotnet/roslyn","RelatedBody":"Fixes #25829\r\n\r\n@jcouv @AlekseyTs Please review this tiny bug fix.\r\n/cc @dotnet/roslyn-compiler \r\n"},{"Id":"7653053503","Type":"IssuesEvent","CreatedAt":"2018-05-10T01:33:38","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25829","RelatedDescription":"Closed issue \"It looks like IDiscardSymbols returned by SemanticModel are never going to be equal\" (#25829) at dotnet/roslyn","RelatedBody":"```\r\n        public override Symbol ExpressionSymbol\r\n        {\r\n            get\r\n            {\r\n                Debug.Assert((object)this.Type != null);\r\n                return new DiscardSymbol(this.Type);\r\n            }\r\n        }\r\n```\r\n\r\nExpected:\r\nSymbols for the same syntax and the same type should be equal"},{"Id":"7652924747","Type":"IssuesEvent","CreatedAt":"2018-05-10T00:44:46","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26752","RelatedDescription":"Opened issue \"Unable to consume C# 7.2 stack-only types in VB 15.5\" (#26752) at dotnet/roslyn","RelatedBody":"Porting over from VB language repo. ([issue](https://github.com/dotnet/vblang/issues/297))\r\n\r\n> @Nukepayload2\r\n> If I use stack only type in my VB code, error BC30668 will block compilation. I'm using VS2017 15.6.7.\r\n> \r\n> **Steps to reproduce:**\r\n> Create a .NET Core VB Console project.\r\n> Edit the .vbproj file, add <LangVersion>Latest</LangVersion> in <PropertyGroup>.\r\n> Create a .NET Standard 2.0 C# class library.\r\n> Create a new C# code file, and add public ref struct StackOnlyType {} in that .cs file.\r\n> Upgrade the C# project to 7.2 .\r\n> In the VB console app, add reference to that C# project.\r\n> Add Dim errorType As StackOnlyType to Sub Main.\r\n> Build the whole solution.\r\n> \r\n> **Expected behavior:**\r\n> The code should compile, because I'm not trying to put a stack-only variable on the heap.\r\n> \r\n> **Actual behavior:**\r\n> Error: BC30668 \"Types with embedded references are not supported in this version of your compiler\""},{"Id":"7652919727","Type":"IssuesEvent","CreatedAt":"2018-05-10T00:42:42","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26751","RelatedDescription":"Opened issue \"Unable to call C# 7.3 method with `unmanaged` type parameter\" (#26751) at dotnet/roslyn","RelatedBody":"Porting this issue over from the VB language forum. ([issue](https://github.com/dotnet/vblang/issues/300))\r\n\r\n> @Berrysoft \r\n> I wrote a C# function like this:\r\n> \r\n> ```c#\r\n> int SizeOf<T>() \r\n>     where T : unmanaged\r\n> {\r\n>     return sizeof(T);\r\n> }\r\n> ```\r\n> But when I tried to call this function in a VB project, the compiler threw a BC30649 exception said:\r\n> ` is an unsupported type`\r\n> What should I do to call this function?"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7653154455","Type":"PullRequestEvent","CreatedAt":"2018-05-10T02:11:31","Actor":"tarekgh","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5790","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5790) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7652789171","Type":"PullRequestEvent","CreatedAt":"2018-05-09T23:54:33","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5790","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5790) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7651153170","Type":"PullRequestEvent","CreatedAt":"2018-05-09T17:31:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5789","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5789) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7650898099","Type":"PullRequestEvent","CreatedAt":"2018-05-09T16:40:14","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5789","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5789) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7650700710","Type":"PullRequestEvent","CreatedAt":"2018-05-09T16:02:25","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5788","RelatedDescription":"Closed pull request \"Mirror changes from dotnet/coreclr\" (#5788) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7650681649","Type":"PullRequestEvent","CreatedAt":"2018-05-09T15:59:12","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5788","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5788) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7648058428","Type":"PullRequestEvent","CreatedAt":"2018-05-09T07:30:41","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5787","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5787) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7648054160","Type":"PullRequestEvent","CreatedAt":"2018-05-09T07:29:44","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5787","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5787) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7653156238","Type":"PullRequestEvent","CreatedAt":"2018-05-10T02:12:12","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2230","RelatedDescription":"Opened pull request \"WIP Generate shim in PackAsTool\" (#2230) at dotnet/sdk","RelatedBody":"Is my approach to use task for most of the logic ok?\r\nIs the property name good?\r\n\r\npending loc\r\npending dedup EmbedAppNameInHostUtil, will create a separate PR that will make the task use util\r\npending test coverage for embedded path\r\npending doc on task"},{"Id":"7652999805","Type":"PullRequestEvent","CreatedAt":"2018-05-10T01:12:59","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2229","RelatedDescription":"Opened pull request \"[WIP] Fix regression in clean when no assets file is present\" (#2229) at dotnet/sdk","RelatedBody":"Fix #2226 \r\n\r\n"},{"Id":"7652909271","Type":"IssuesEvent","CreatedAt":"2018-05-10T00:38:27","Actor":"amrmahdi","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2228","RelatedDescription":"Opened issue \"Unable to compile NET Core project with localized stream resources\" (#2228) at dotnet/sdk","RelatedBody":"* Platform: Windows\r\n* TargetFramework: netcore2.0\r\n* dotnet version: 2.1.300-preview2-008533\r\n\r\nI'm not able to get a vanilla NET Core app to with localized stream resources to compile. The app is targeting net core  2.0. I've created a repo with a simple project to repro the error: https://github.com/amrmahdi/dotnetcore-localized-resources\r\n\r\nThe error that I get is\r\n```\r\nE:\\repro\\Resources\\AudioFiles.en-US.resx(123,5): error MSB3103: Invalid Resx file. Could not load file or assembly 'System.Runtime.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencie s. Reference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context. (Exception from HRESULT: 0x80131058) Line 123, position 5. [E:\\repro\\repro.csproj]\r\n  E:\\repro\\Resources\\AudioFiles.es-ES.resx(123,5): error MSB3103: Invalid Resx file. Could not load file or assembly 'file:///C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.0.0\\ref\\netcoreapp2.0\\System.Runtime.Ex tensions.dll' or one of its dependencies. Reference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context. (Exception from HRESULT: 0x80131058) Line 123, position 5. [E:\\repro\\repro .csproj]\r\n```"},{"Id":"7650414677","Type":"PullRequestEvent","CreatedAt":"2018-05-09T15:15:13","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2224","RelatedDescription":"Merged pull request \"Merge release/2.1.4xx to master\" (#2224) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.4xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.4xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"994438149693620225","CreatedAt":"2018-05-10T04:45:05+00:00","UserScreenname":"dotnet","Text":"Bye bye! See you next year for #MSBuild 👋 https://t.co/IwcXQwKarV","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"993982168476012544","CreatedAt":"2018-05-08T22:33:10+00:00","UserScreenname":"dotnet","Text":".NET Core May 2018 Update https://t.co/OZkHLwpebZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":34,"RawContent":null},{"Id":"993982051735879680","CreatedAt":"2018-05-08T22:32:43+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Security and Quality Rollup https://t.co/jmOfJy1TEn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2018-05-10T05:30:27.3174333Z","RunDurationInMilliseconds":10576}