{"Data":{"GitHub":{"Issues":[{"Id":"497764770","IsPullRequest":false,"CreatedAt":"2019-09-26T04:27:19","Actor":"lekhasy","Number":"1948","RawContent":null,"Title":"Can't publish app for osx-x64","State":"closed","Body":"**Steps to produce:**\r\n\r\n1. Create a wpf project from WPF App (.Net core) template in visualstudio\r\n2. Click on build -> publish\r\n3. Change deployment mode to: Self-contained\r\n4. Change target framework to: osx-x64\r\n\r\n**Actual result:** the screen display this error:\r\n![image](https://user-images.githubusercontent.com/14049235/65525913-6c433b80-df1a-11e9-8539-9b939288c505.png)\r\n\r\nAnd the text in output window: \r\n`1>------ Publish started: Project: Demo, Configuration: Release Any CPU ------\r\n\r\n1>Restore completed in 0.51 ms for C:\\Users\\Admin\\source\\repos\\Demo\\Demo\\Demo.csproj.\r\n\r\n1>There was no runtime pack for Microsoft.WindowsDesktop.App.WPF available for the specified RuntimeIdentifier 'osx-x64'.\r\n\r\n========== Build: 0 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========\r\n========== Publish: 0 succeeded, 1 failed, 0 skipped ==========`\r\n\r\n**Expected result:** Publish successfull\r\n\r\n**Environment**:\r\n.Net core version: 3.0\r\nVisual Studio 2019 version: 16.3.0","Url":"https://github.com/dotnet/wpf/issues/1948","RelatedDescription":"Closed issue \"Can't publish app for osx-x64\" (#1948)"},{"Id":"498597475","IsPullRequest":false,"CreatedAt":"2019-09-26T01:17:12","Actor":"mrNo0b","Number":"1961","RawContent":null,"Title":"Control selection reversed in Designer when FlowDirection=\"RightToLeft\"","State":"open","Body":"When I set **FlowDirection=\"RightToLeft\"** in MainWindow in WPF Core 3 app when I add controls to the MainWindow they shows up in their correct locations in Designer but when I want to click on them to select, the selection highlight is in the opposite side of the window\r\n`VS 2019 16.3.1`\r\n\r\n![designerIssue](https://user-images.githubusercontent.com/12209347/65650408-5f564300-e013-11e9-9744-85ecd26f1a60.png)","Url":"https://github.com/dotnet/wpf/issues/1961","RelatedDescription":"Open issue \"Control selection reversed in Designer when FlowDirection=\"RightToLeft\"\" (#1961)"},{"Id":"498372361","IsPullRequest":false,"CreatedAt":"2019-09-25T22:57:45","Actor":"yingfangdu","Number":"1953","RawContent":null,"Title":"[Watson] clr20r3: CLR_EXCEPTION_System.Collections.Generic.KeyNotFoundException_80131577_PresentationCore.dll!MS.Internal.DpiUtil+DpiAwarenessScope..ctor","State":"closed","Body":"This is the same issue [here](https://github.com/dotnet/wpf/issues/1198). As that one is closed, I create this new one for your attentions. \r\n\r\nWe have reproduced this crash too and this becomes the top crash in our product Microsoft Advertising Editor. and we are targeting 4.7.1 .NetFramework.\r\n\r\nCurrently we cannot offer upgrading to 4.8 because it is close to holiday seasons.\r\n\r\nAnd our product must enable this DPI awareness otherwise introducing rendering bugs.\r\n\r\nI would be great to have the fix for 4.7.\r\n\r\nAnd I have another question: this crash is caused by the setting per-monitor (V1) or per-monitor (V2)?\r\n\r\nOur rendering issue can be fixed by only enabling V1.\r\n\r\nThanks,\r\nYvonne\r\n\r\nat System.ThrowHelper.ThrowKeyNotFoundException() + 0x5 (C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorlib.dll + 0x06000337)\r\nat System.Collections.Generic.Dictionary`2.get_Item(TKey key) + 0x1e (C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\mscorlib.dll + 0x06003923)\r\nat MS.Internal.DpiUtil+DpiAwarenessScope..ctor(DpiAwarenessContextValue dpiAwarenessContextValue, Boolean updateIfThreadInMixedHostingMode, Boolean updateIfWindowIsSystemAwareOrUnaware, IntPtr hWnd) + 0x37 (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x06005955)\r\nat System.Windows.SystemResources.CreateResourceChangeListenerWindow(DpiAwarenessContextValue dpiContextValue, Int32 x, Int32 y, String callerName) + 0x0 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.dll + 0x06000b81)\r\nat System.Windows.SystemResources.EnsureResourceChangeListener(HwndDpiInfo hwndDpiInfo) + 0x39 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.dll + 0x06000b80)\r\nat System.Windows.SystemResources.GetDpiAwarenessCompatibleNotificationWindow(HandleRef hwnd) + 0x29 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.dll + 0x06000b92)\r\nat System.Windows.Interop.HwndHost.BuildOrReparentWindow() + 0xd7 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.dll + 0x0600620c)\r\nat System.Windows.Interop.HwndHost.OnSourceChanged(Object sender, SourceChangedEventArgs e) + 0x96 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.dll + 0x06006208)\r\nat System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target) + 0x7 (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x06000baa)\r\nat System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs) + 0x3d (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x06000bb7)\r\nat System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised) + 0xee (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x060005cf)\r\nat System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args) + 0x57 (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x0600083c)\r\nat System.Windows.PresentationSource.UpdateSourceOfElement(DependencyObject doTarget, DependencyObject doAncestor, DependencyObject doOldParent) + 0x45 (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x06000b86)\r\nat System.Windows.PresentationSource.RootChanged(Visual oldRoot, Visual newRoot) + 0xa8 (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x06000b77)\r\nat System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value) + 0xe8 (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x06001a6e)\r\nat System.Windows.Interop.HwndSource.Dispose(Boolean disposing) + 0x4a (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x06001ab4)\r\nat System.Windows.Interop.HwndSource.OnHwndDisposed(Object sender, EventArgs args) + 0x7 (C:\\windows\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll + 0x06001ab1)\r\nat MS.Win32.HwndWrapper.Dispose(Boolean disposing, Boolean isHwndBeingDestroyed) + 0x14 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsBase\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsBase.dll + 0x0600019c)\r\nat MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled) + 0x66 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsBase\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsBase.dll + 0x060001a3)\r\nat MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o) + 0x36 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsBase\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsBase.dll + 0x06000193)\r\nat System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs) + 0x77 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsBase\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsBase.dll + 0x06000f73)\r\nat System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler) + 0x2 (C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsBase\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsBase.dll + 0x06000f72)\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/1953","RelatedDescription":"Closed issue \"[Watson] clr20r3: CLR_EXCEPTION_System.Collections.Generic.KeyNotFoundException_80131577_PresentationCore.dll!MS.Internal.DpiUtil+DpiAwarenessScope..ctor\" (#1953)"},{"Id":"498505755","IsPullRequest":true,"CreatedAt":"2019-09-25T21:47:50","Actor":"vatsan-madhavan","Number":"1960","RawContent":null,"Title":"Mark ProjectTemplates and Microsoft.NET.Sdk.WindowsDesktop as NonShipping","State":"closed","Body":"Fixes #1957 \r\n\r\nMark the following packages with `<IsShipping>false</IsShipping>`\r\n\r\n- Microsoft.NET.Sdk.WindowsDesktop\r\n- Microsoft.DotNet.Wpf.ProjectTemplates\r\n\r\nThese are transport packages and ship exclusively via the SDK. Importantly, these should not be marked for publishing to NuGet.","Url":"https://github.com/dotnet/wpf/pull/1960","RelatedDescription":"Closed or merged PR \"Mark ProjectTemplates and Microsoft.NET.Sdk.WindowsDesktop as NonShipping\" (#1960)"},{"Id":"498439033","IsPullRequest":false,"CreatedAt":"2019-09-25T21:47:50","Actor":"vatsan-madhavan","Number":"1957","RawContent":null,"Title":"Mark Microsoft.NET.Sdk.WindowsDesktop and Microsoft.DotNet.Wpf.ProjectTemplates with IsShippingPackage=False","State":"closed","Body":"Mark the following packages with `<IsShippingPackage>false</IsShippingPackage>`\r\n\r\n- `Microsoft.NET.Sdk.WindowsDesktop` \r\n- `Microsoft.DotNet.Wpf.ProjectTemplates` \r\n\r\nThese are transport packages and ship exclusively via the SDK. Importantly, these should not be marked for publishing to NuGet. \r\n\r\nThis change is needed in `release/3.0`, `release/3.1` and `master`. ","Url":"https://github.com/dotnet/wpf/issues/1957","RelatedDescription":"Closed issue \"Mark Microsoft.NET.Sdk.WindowsDesktop and Microsoft.DotNet.Wpf.ProjectTemplates with IsShippingPackage=False\" (#1957)"},{"Id":"498500102","IsPullRequest":true,"CreatedAt":"2019-09-25T21:05:09","Actor":"vatsan-madhavan","Number":"1959","RawContent":null,"Title":"Mark ProjectTemplates and Microsoft.NET.Sdk.WindowsDesktop as NonShipping","State":"closed","Body":"Fixes #1957 \r\n\r\nMark the following packages with `<IsShipping>false</IsShipping>`\r\n\r\n- Microsoft.NET.Sdk.WindowsDesktop\r\n- Microsoft.DotNet.Wpf.ProjectTemplates\r\n\r\nThese are transport packages and ship exclusively via the SDK. Importantly, these should not be marked for publishing to NuGet.","Url":"https://github.com/dotnet/wpf/pull/1959","RelatedDescription":"Closed or merged PR \"Mark ProjectTemplates and Microsoft.NET.Sdk.WindowsDesktop as NonShipping\" (#1959)"},{"Id":"498496185","IsPullRequest":true,"CreatedAt":"2019-09-25T21:04:48","Actor":"vatsan-madhavan","Number":"1958","RawContent":null,"Title":"Mark ProjectTemplates and Microsoft.NET.Sdk.WindowsDesktop as NonShipping","State":"closed","Body":"Fixes #1957 \r\n\r\nMark the following packages with `<IsShipping>false</IsShipping>`\r\n\r\n- Microsoft.NET.Sdk.WindowsDesktop\r\n- Microsoft.DotNet.Wpf.ProjectTemplates\r\n\r\nThese are transport packages and ship exclusively via the SDK. Importantly, these should not be marked for publishing to NuGet.","Url":"https://github.com/dotnet/wpf/pull/1958","RelatedDescription":"Closed or merged PR \"Mark ProjectTemplates and Microsoft.NET.Sdk.WindowsDesktop as NonShipping\" (#1958)"},{"Id":"497955770","IsPullRequest":false,"CreatedAt":"2019-09-25T18:01:22","Actor":"vatsan-madhavan","Number":"1952","RawContent":null,"Title":"Prepare release/3.0 branch for servicing","State":"closed","Body":"In preparation for 3.0.1,\r\n• Versions go to the next patch release to 3.0.1\r\n• Prerelease label goes to servicing","Url":"https://github.com/dotnet/wpf/issues/1952","RelatedDescription":"Closed issue \"Prepare release/3.0 branch for servicing\" (#1952)"},{"Id":"498408859","IsPullRequest":true,"CreatedAt":"2019-09-25T16:57:47","Actor":"grubioe","Number":"1956","RawContent":null,"Title":"Update README.md","State":"open","Body":"Updating README file to reflect the latest status post 3.0 launch. ","Url":"https://github.com/dotnet/wpf/pull/1956","RelatedDescription":"Open PR \"Update README.md\" (#1956)"},{"Id":"498399053","IsPullRequest":true,"CreatedAt":"2019-09-25T16:37:00","Actor":"dotnet-maestro[bot]","Number":"1955","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e226e5ed-6125-48cb-94d5-08d690bc143a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:e226e5ed-6125-48cb-94d5-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1955","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1955)"},{"Id":"498393263","IsPullRequest":true,"CreatedAt":"2019-09-25T16:25:19","Actor":"dotnet-maestro[bot]","Number":"1954","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f6560d32-4c6b-4ed3-5c71-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:f6560d32-4c6b-4ed3-5c71-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1954","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#1954)"},{"Id":"497556923","IsPullRequest":false,"CreatedAt":"2019-09-25T02:04:28","Actor":"aiqinxuancai","Number":"1944","RawContent":null,"Title":"wpf exe(.net core 3.0) unable to run on win7 sp1","State":"closed","Body":"* .NET Core Version: 3.0 official\r\n* Windows version: win7 sp1,（use win10 1903 + vs2019 16.3 publish） \r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions here: https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nuse vs2019 16.3 to create a wpf .net core3 project and then publish it. \r\ninstalled a new win7sp1 system, copy publish to this system,  nothing happens after double click.\r\n![image](https://user-images.githubusercontent.com/4475018/65497180-5fa7ee80-deec-11e9-9c25-fee57cd3398b.png)\r\n\r\ni tried to add code positioning issues, but it was not executed.\r\n![image](https://user-images.githubusercontent.com/4475018/65497581-10ae8900-deed-11e9-8417-78633229cd40.png)\r\n\r\ni originally thought it was a problem with vc runtime, but it seems that it is no longer needed in the   .net core3.0 official version.\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n nothing happens after double clicking.\r\n\r\n **Expected behavior:**\r\nrun and pop window.\r\n\r\n **Minimal repro:**\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/1944","RelatedDescription":"Closed issue \"wpf exe(.net core 3.0) unable to run on win7 sp1\" (#1944)"},{"Id":"497955252","IsPullRequest":true,"CreatedAt":"2019-09-24T23:01:29","Actor":"vatsan-madhavan","Number":"1951","RawContent":null,"Title":"Update branding for 3.0.1 servicing and turn off stable builds","State":"closed","Body":"In preparation for 3.0.1, \r\n•\tVersions go to the next patch release to 3.0.1\r\n•\tPrerelease label goes to servicing\r\n\r\nFixes https://github.com/dotnet/wpf/issues/1952","Url":"https://github.com/dotnet/wpf/pull/1951","RelatedDescription":"Closed or merged PR \"Update branding for 3.0.1 servicing and turn off stable builds\" (#1951)"},{"Id":"497942928","IsPullRequest":true,"CreatedAt":"2019-09-24T22:23:53","Actor":"SamBent","Number":"1949","RawContent":null,"Title":"WPF TextBox insertion caret does not render when moved to lower DPI monitor in a PMAv2 process","State":"closed","Body":"Description\r\n\r\nTextBox insertion caret fails to render when on a lower DPI monitor than primary when per-monitor awareness is enabled.\r\n\r\nCustomer Impact\r\n\r\nVS features that rely on Text Caret position (search controls, commit messages, Editor, etc) are unable to easily tell where their focus is when using these features if PMA support is enabled and the text box is rendered off the primary display.\r\n\r\nRegression\r\n\r\nNo. (Port of .NET 4.8 servicing fix)\r\n\r\nRisk\r\n\r\nLow\r\n\r\nFixes #1774\r\nWPF TextBox insertion caret does not render when moved to lower DPI monitor in a PMAv2 process.","Url":"https://github.com/dotnet/wpf/pull/1949","RelatedDescription":"Closed or merged PR \"WPF TextBox insertion caret does not render when moved to lower DPI monitor in a PMAv2 process\" (#1949)"},{"Id":"497948940","IsPullRequest":true,"CreatedAt":"2019-09-24T22:21:00","Actor":"dotnet-maestro[bot]","Number":"1950","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190924.4\r\n- **Date Produced**: 9/24/2019 9:52 PM\r\n- **Commit**: 066b5db8f092c09d8e2d46c27d355e29d1d28d69\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-preview1.19474.4\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1950","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#1950)"},{"Id":"496495908","IsPullRequest":true,"CreatedAt":"2019-09-24T22:11:40","Actor":"wjk","Number":"1934","RawContent":null,"Title":"Remove outdated README files","State":"closed","Body":"There is no longer any need to warn users about modifying the code in these directories, as it has long since been open-sourced. I have kept the warning file in the Shared directory for now, as code in the remaining native projects may well reference that code.","Url":"https://github.com/dotnet/wpf/pull/1934","RelatedDescription":"Closed or merged PR \"Remove outdated README files\" (#1934)"},{"Id":"496494883","IsPullRequest":true,"CreatedAt":"2019-09-24T22:10:40","Actor":"wjk","Number":"1933","RawContent":null,"Title":"Move System.Xaml.sln into System.Xaml directory","State":"closed","Body":"This was done to align with the solution files in the `PresentationBuildTasks` and `WindowsBase` directories.","Url":"https://github.com/dotnet/wpf/pull/1933","RelatedDescription":"Closed or merged PR \"Move System.Xaml.sln into System.Xaml directory\" (#1933)"},{"Id":"497348287","IsPullRequest":true,"CreatedAt":"2019-09-24T16:47:26","Actor":"SamBent","Number":"1939","RawContent":null,"Title":"WPF TextBox insertion caret does not render when moved to lower DPI monitor in a PMAv2 process.","State":"closed","Body":"Ask Mode Template:  \r\n\r\nDescription \r\n\r\nTextBox insertion caret fails to render when on a lower DPI monitor than primary when per-monitor awareness is enabled. \r\n\r\nCustomer Impact \r\n\r\nVS features that rely on Text Caret position (search controls, commit messages, Editor, etc) are unable to easily tell where their focus is when using these features if PMA support is enabled and the text box is rendered off the primary display. \r\n\r\nRegression \r\n\r\nNo.   (Port of .NET 4.8 servicing fix)\r\n\r\nRisk \r\n\r\nLow \r\n\r\nFixes #1774 \r\nWPF TextBox insertion caret does not render when moved to lower DPI monitor in a PMAv2 process.  \r\n\r\n ","Url":"https://github.com/dotnet/wpf/pull/1939","RelatedDescription":"Closed or merged PR \"WPF TextBox insertion caret does not render when moved to lower DPI monitor in a PMAv2 process.\" (#1939)"},{"Id":"497735818","IsPullRequest":true,"CreatedAt":"2019-09-24T14:44:23","Actor":"Simon-IT","Number":"1947","RawContent":null,"Title":"Fix for issue 1883","State":"open","Body":"More command-line messages are shown into the prompt window when the WPF file copy procedure is used. It has been modified the source directory of the binary files from 3.0 to 5.0.","Url":"https://github.com/dotnet/wpf/pull/1947","RelatedDescription":"Open PR \"Fix for issue 1883\" (#1947)"},{"Id":"497689910","IsPullRequest":false,"CreatedAt":"2019-09-24T13:29:57","Actor":"miloush","Number":"1946","RawContent":null,"Title":"FrameworkElement.Language does not use culture user overrides","State":"open","Body":"* .NET Core Version: 3.0.100 \r\n* Windows version: 18985.1.amd64fre.vb_release.190913-1426\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n**Problem description:**\r\nApplying `FrameworkElement.Language` and related `Language` properties does not take into account current culture settings. There is no way how to supply a specific instance of CultureInfo to the WPF infrastructure.\r\n\r\n**Minimal repro:**\r\n```xml\r\n<Window x:Class=\"TestWpfBugs.StaticProperties.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:s=\"clr-namespace:System;assembly=mscorlib\"\r\n        Language=\"en-GB\">\r\n    <TextBlock DataContext=\"{x:Static s:DateTime.Now}\" Text=\"{Binding}\" />\r\n</Window>\r\n```\r\n\r\n(this assumes English (United Kingdom) to be used for formatting. Use other cultures accordingly.)\r\n\r\nGo to _Settings > Time and Language > Region > Change data formats_ and change _Short date_ format to a non-default option, e.g. _yyyy-MM-dd_. Run the WPF app.\r\n\r\n **Actual behavior:** Current culture settings not respected, the date is shown as dd/MM/yyyy.\r\n \r\n **Expected behavior:** The date to be in the selected format.\r\n \r\nUltimately, the `XmlLanguage` calls `new CultureInfo(name, useUserOverride)` when converting the string into culture. The actual behavior passes `false` for the `useUserOverride` while the expected behavior would mean passing `true` instead.\r\n\r\nAs a result, there isn't any way I am aware of to make the WPF infrastructure use the current culture that user prefers other than annotating all data bindings and template bindings with converters with explicit cultures, which is a considerable performance hit if possible at all.\r\n\r\nClearly changing the current behavior would not only be a compatibility break but also prevent people from using non-overridden cultures, but there might be other solutions, such as (in decreasing number of scenarios it would allow):\r\n\r\n1. letting developers to override language with an instance `CultureInfo` rather than just a name string, possible with an extra property of type `CultureInfo` that would be used if set (either on `XmlLanguage` or FE, otherwise fallback to `Language`.\r\n2. introducing new property e.g. `UseLanguageOverride` on `XmlLanguage` supporting returning user overridden cultures, possibly but not necessarily with an extra property on FE too.\r\n3. introducing special XML language strings meaning \"current culture\" and \"current UI culture\".\r\n\r\nAny thoughts?\r\n","Url":"https://github.com/dotnet/wpf/issues/1946","RelatedDescription":"Open issue \"FrameworkElement.Language does not use culture user overrides\" (#1946)"},{"Id":"497608056","IsPullRequest":true,"CreatedAt":"2019-09-24T11:30:48","Actor":"dotnet-maestro[bot]","Number":"1945","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190924.2\r\n- **Date Produced**: 9/24/2019 10:26 AM\r\n- **Commit**: 8ecc2b49acfd44f607d4ad9b7add1e80dcb3d88d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19474.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1945","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1945)"},{"Id":"497438647","IsPullRequest":true,"CreatedAt":"2019-09-24T04:30:43","Actor":"dotnet-maestro[bot]","Number":"1943","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190923.6\r\n- **Date Produced**: 9/24/2019 3:30 AM\r\n- **Commit**: c5b5d94afd2fc1b338ce03c7e17bae6329e23d03\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19473.6\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1943","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1943)"},{"Id":"497422158","IsPullRequest":true,"CreatedAt":"2019-09-24T02:50:32","Actor":"dotnet-maestro[bot]","Number":"1942","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 2:20 AM\r\n- **Commit**: 8bfff3db921d42bf46d8b05ded6dabb4492afb68\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19473.5\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1942","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1942)"},{"Id":"497418554","IsPullRequest":true,"CreatedAt":"2019-09-24T02:35:38","Actor":"dotnet-maestro[bot]","Number":"1941","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190923.4\r\n- **Date Produced**: 9/24/2019 2:08 AM\r\n- **Commit**: 79f61cb2a8600461600414c82ea3642f8593af47\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19473.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1941","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1941)"},{"Id":"497392840","IsPullRequest":true,"CreatedAt":"2019-09-24T00:45:29","Actor":"dotnet-maestro[bot]","Number":"1940","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190923.3\r\n- **Date Produced**: 9/24/2019 12:12 AM\r\n- **Commit**: cce5fe698306d4f2efd61ab2da3719cd9b870ae9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19473.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1940","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1940)"},{"Id":"497282448","IsPullRequest":true,"CreatedAt":"2019-09-23T20:20:56","Actor":"dotnet-maestro[bot]","Number":"1938","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190923.2\r\n- **Date Produced**: 9/23/2019 7:01 PM\r\n- **Commit**: b59fd86e5b95ef8bb82bb6b3d8fdc1ce5adb6f65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19473.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1938","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1938)"},{"Id":"497221498","IsPullRequest":true,"CreatedAt":"2019-09-23T17:55:49","Actor":"dotnet-maestro[bot]","Number":"1937","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190923.1\r\n- **Date Produced**: 9/23/2019 4:52 PM\r\n- **Commit**: 18d5956fdc097e5691336f4c96d0364dbefbad6a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19473.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1937","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1937)"},{"Id":"497193479","IsPullRequest":false,"CreatedAt":"2019-09-23T16:10:21","Actor":"grubioe","Number":"1936","RawContent":null,"Title":"Announcing WPF on .NET Core 3.0","State":"open","Body":"# Announcing WPF on .NET Core 3.0\r\n\r\nWe are excited to announce that .NET Core 3.0 is now [Generally Available](https://dotnet.microsoft.com/download/dotnet-core/3.0)!  You can learn more about the full scope of the release from the .NET blog linked [here](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0//).  \r\n\r\nThe WPF team has been working over the last year to port the WPF codebase from .NET Framework to .NET Core with a focus on ensuring that .NET Framework compatibility and ease of porting were maintained.   Working on GitHub was a new experience to many of us but the community has been great and we really want to thank all of you that have been actively engaged in making this a reality.  Whether it's been building and porting WPF apps via the multiple Previews shipped to those that have been submitting issues and actively commenting.  We wanted to give a special recognition to some of our most active contributors: @weltkante, @onovotny, @lindexi, @dotMorten, @AndreyAkinshin, @thomasclaudiushuber, @Youssef1313, @walterv, @AlexChuev, @WilliamAntonRohm-  THANKS for all your help in helping us ship this product!\r\n\r\nWith that said, here is a recap of the work done to date to ship WPF on .NET Core 3:\r\n\r\n* Building for .NET Core required large infrastructure changes to being able to build and ship WPF.  As we shared back in [April](https://github.com/dotnet/wpf/issues/607), we spent the first three months of the year on-boarding to the Arcade based build infrastructure which then allowed us to work across our internal and external repos. \r\n* Porting the WPF code from .NET Framework required us to overcome various environmental and technical differences that are unique to .NET Core 3.  The team had to port and modify key test cases to ensure app compatibility with .NET Framework. Additionally, the team identified various changes to different elements of the broader .NET Code base, like modifying System.IO.Packaging to ensure that WPF ran smoothly and providing feedback & PRs to the CoreFX codebase. \r\n* Open Sourcing all managed binaries, as stated in our [May](https://github.com/dotnet/wpf/issues/738) and [August](https://github.com/dotnet/wpf/issues/1731) updates, the team open sourced most of the WPF code base, we are still not done but we've open sourced the vast majority of the code base for this 3.0 release. \r\n* In addition to porting, we also incorporated a few features, like building and open sourcing the XAML Compiler in PresentationBuildTasks and enabling App.Local functionality.\r\n\r\nNow that .NET Core 3.0 is available our focus shifts to **.NET Core 3.1** with an emphasis on ensuring that 3.1 is as stable as possible given that it is an [LTS](https://dotnet.microsoft.com/platform/support/policy/dotnet-core) release.  We are also working on open sourcing the remaining Native binaries in our roadmap and doing planning for .NET 5.   \r\n\r\nThanks again for your engagement, we look forward to seeing all the great WPF applications that will be built on .NET Core.  \r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1936","RelatedDescription":"Open issue \"Announcing WPF on .NET Core 3.0\" (#1936)"},{"Id":"496795024","IsPullRequest":false,"CreatedAt":"2019-09-22T15:31:59","Actor":"MrLongBz","Number":"1935","RawContent":null,"Title":"help me！！Why is it wrong instead of warning?","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Windows version: (`winver`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes/No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions here: https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**  I don't know where this error is.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->我从git上克隆的项目，作者的环境能够编译，但我的不行，我的是vs 2019 preview 4.0 .net core 3.0.100-rc1-014190\r\n \r\n **Expected behavior:**\r\n \r\n **Minimal repro:**\r\n \r\n![image](https://user-images.githubusercontent.com/38212157/65390363-776a6000-dd90-11e9-801e-f88241fc9c01.png)\r\n![image](https://user-images.githubusercontent.com/38212157/65390418-15f6c100-dd91-11e9-9054-f3d354c046a8.png)\r\n","Url":"https://github.com/dotnet/wpf/issues/1935","RelatedDescription":"Open issue \"help me！！Why is it wrong instead of warning?\" (#1935)"},{"Id":"496463522","IsPullRequest":false,"CreatedAt":"2019-09-20T17:23:17","Actor":"Symbai","Number":"1932","RawContent":null,"Title":"PropertyGroupDescription/SortDescription IsEnabled property","State":"open","Body":"Having an `IsEnabled` property for the `PropertyGroupDescription `or `SortDescription `would allow us to easily bind to it. As of now we have to create a C# code for removing and re-adding groupdefinitions or sortdescriptions which not only involves a lot of additional code but also forces to cache definitions and feels wrong in MVVM scenarios.","Url":"https://github.com/dotnet/wpf/issues/1932","RelatedDescription":"Open issue \"PropertyGroupDescription/SortDescription IsEnabled property\" (#1932)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-09-26T05:30:58.1142809Z","RunDurationInMilliseconds":1051}