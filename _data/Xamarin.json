{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null},{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7986143204","Type":"IssuesEvent","CreatedAt":"2018-07-19T00:16:26","Actor":"vyfster","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1980","RelatedDescription":"Opened issue \"HttpClient throws an exception when server returns 413\" (#1980) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. POST data larger than the HTTP server's configured value.  In the case of nginx, this setting is client_max_body_size and the default value is 1MB.\r\n\r\nRepro project here: https://github.com/vyfster/HttpClient.ExceptionRepro\r\n\r\nNOTE: change the code in MainPage.xaml to reference your server\r\n```c#\r\n    <ContentPage.BindingContext>\r\n        <localvm:MainPageViewModel ServerLocation=\"[CHANGE THIS TO YOUR SERVER LOCATION]\"/>\r\n    </ContentPage.BindingContext>\r\n```\r\n\r\n### Expected Behavior\r\nHttpClient returns without raising an exception and the response.StatusCode is set to `HttpStatusCode.RequestEntityTooLarge`\r\n\r\n### Actual Behavior\r\nHttpClient raises an exception.  The exception is different depending on which HttpClient is selected for the project.  \r\n\r\nError message when using the Default HttpClient\r\n\r\n`System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'System.Net.Sockets.NetworkStream'.`\r\n\r\nError message when using the Android HttpClient\r\n\r\n`Java.Net.SocketException: sendto failed: EPIPE (Broken pipe)`\r\n\r\nError message when using the Managed HttpClient (I thought this would be the same as default, but I get a different error message and once I get this error message I don't seem to get the 'Disposed object' error again.\r\n\r\n`System.Net.Http.HttpRequestException: An error occurred while sending the request ---> System.IO.IOException: Error writing request ---> System.Net.Sockets.SocketException: The socket has been shut down`\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.5\r\nVisualStudio.15.Release/15.7.5+27703.2042\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40625.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40608.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.5\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.5\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.7.18156.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.5\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.5\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.5\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nNuProjPackage   1.0\r\nNuGet Package Project System\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.7.18156.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.7.18156.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.7.18156.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.7.18156.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 173513e369ffb7a1c4d5dccf83696d9aac2ab2d0.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7408.1\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for Unity   3.7.0.1\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2042\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\nHave attached the stack traces for the different raised exceptions.\r\n\r\n[android.httpclient.stack-trace.txt](https://github.com/xamarin/xamarin-android/files/2207724/android.httpclient.stack-trace.txt)\r\n[default.httpclient.stack-trace.txt](https://github.com/xamarin/xamarin-android/files/2207725/default.httpclient.stack-trace.txt)\r\n[managed.httpclient.stack-trace.txt](https://github.com/xamarin/xamarin-android/files/2207726/managed.httpclient.stack-trace.txt)\r\n"},{"Id":"7985506467","Type":"PullRequestEvent","CreatedAt":"2018-07-18T21:12:47","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1979","RelatedDescription":"Opened pull request \"Fix ILRepack target on Linux\" (#1979) at xamarin/xamarin-android","RelatedBody":"Xamarin.Android uses the ILRepack\r\ntask (https://www.nuget.org/packages/ILRepack.Lib.MSBuild.Task/) to repack/merge\r\nthe `Xamarin.Android.Build.Tasks` assembly, a step that is performed after the\r\n`Xamarin.Android.Build.Tasks` project build completes. The step takes the\r\nproject's output assembly and several other dependencies and merges them into\r\none, replacing the original output assembly. For the majority of time it works\r\nflawlessly, however the scenario described below causes a Mono runtime\r\ncrash (similar to this one https://github.com/mono/mono/issues/9613, although\r\nnot identical).\r\n\r\nThe crash causes aren't yet know in every detail, but the high level overview of\r\nthe issue is as follows. Mono runtime uses the `mmap(2)` system call on Unix to\r\nmap the on-disk image of the assembly into memory. The mmapped area is used\r\nwhenever the same assembly is loaded (e.g. via `Assembly.LoadFrom`) into the\r\napplication to save time and memory. The memory is mapped as private which means\r\nthat anything written to the mapped area by the Mono process is effectively\r\ndiscarded, that is not reflected in the file on disk. The protection, however,\r\ndoesn't work in the other direction - when an external process (or even the same\r\nMono process) writes to the file that was mmapped. Unfortunately, the OS kernel\r\nbehavior in such instance is left undefined by the POSIX standard - the kernel\r\ncan choose to reflect the on-disk change in the mapping or ignore it. On macOS\r\nthe write is ignored, on Linux, however, the write leads either to the SIGBUS\r\nsignal being sent to the process or corruption to the mmapped memory\r\narea (details of how this happens are, as of yet, unknown - it's just a theory\r\nat this point). The problem occurs in our case when the `ILRepacker` task\r\noverwrites the `Xamarin.Android.Build.Tasks.dll` assembly with its\r\nmerged/repackaged form and that, somehow, corrupts Mono runtime's memory mapping\r\nof that assembly, eventually leading to a segfault:\r\n\r\n```\r\n  #0  0x00007f974fd1b23a in __waitpid (pid=pid@entry=120561, stat_loc=stat_loc@entry=0x7f9712162b9c, options=options@entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30\r\n  #1  0x000055b471f36c96 in dump_native_stacktrace (ctx=0x7f97121637c0, signal=0x55b472147cd3 \"SIGSEGV\") at mini-posix.c:719\r\n  #2  0x000055b471f36df2 in mono_dump_native_crash_info (signal=signal@entry=0x55b472147cd3 \"SIGSEGV\", ctx=ctx@entry=0x7f97121637c0, info=info@entry=0x7f97121638f0) at mini-posix.c:742\r\n  #3  0x000055b471ecc620 in mono_handle_native_crash (signal=signal@entry=0x55b472147cd3 \"SIGSEGV\", ctx=ctx@entry=0x7f97121637c0, info=info@entry=0x7f97121638f0) at mini-exceptions.c:2938\r\n  #4  0x000055b471e4c82c in mono_sigsegv_signal_handler (_dummy=7, _info=0x7f97121638f0, context=0x7f97121637c0) at mini-runtime.c:3441\r\n  #5  <signal handler called>\r\n  #6  __strcasecmp_l_avx () at ../sysdeps/x86_64/multiarch/strcmp-sse42.S:199\r\n  #7  0x000055b471fb2105 in mono_assembly_names_equal_flags (l=l@entry=0x7f96e0004370, r=r@entry=0x7f97307edb60, flags=flags@entry=MONO_ANAME_EQ_IGNORE_CASE) at assembly.c:663\r\n  #8  0x000055b471fa7baf in mono_domain_assembly_search (aname=0x7f96e0004370, user_data=0x0) at appdomain.c:2242\r\n  #9  0x000055b471fb10f7 in mono_assembly_invoke_search_hook_internal (aname=aname@entry=0x7f96e0004370, requesting=requesting@entry=0x0, refonly=0, postload=postload@entry=0) at assembly.c:1755\r\n  #10 0x000055b471fb4526 in mono_assembly_load_from_predicate (image=image@entry=0x7f96e001aae0, fname=fname@entry=0x7f96e000bc50 \"/home/grendel/vc/xamarin/monodroid/monodroid/external/xamarin-android/src/Xamarin.Android.Build.Tasks/../../packages/ILRepack.Lib.MSBuild.Task.2.0.15.4/build/ILRepack.Lib.MSBuild.Task.dll\", asmctx=asmctx@entry=MONO_ASMCTX_LOADFROM, predicate=predicate@entry=0x0, user_data=user_data@entry=0x0, status=status@entry=0x7f9712163fd4) at assembly.c:2638\r\n  #11 0x000055b471fb635c in mono_assembly_open_predicate (filename=<optimized out>, filename@entry=0x7f96e000ae40 \"/home/grendel/vc/xamarin/monodroid/monodroid/external/xamarin-android/src/Xamarin.Android.Build.Tasks/../../packages/ILRepack.Lib.MSBuild.Task.2.0.15.4/build/ILRepack.Lib.MSBuild.Task.dll\", asmctx=MONO_ASMCTX_LOADFROM, predicate=predicate@entry=0x0, user_data=user_data@entry=0x0, status=status@entry=0x7f9712163fd4) at assembly.c:2206\r\n  #12 0x000055b471fabd42 in ves_icall_System_Reflection_Assembly_LoadFrom (fname=..., refOnly=<optimized out>, error=0x7f9712164050) at appdomain.c:2272\r\n  #13 0x00000000412f4007 in ?? ()\r\n  #14 0x00007f97440e1918 in ?? ()\r\n  #15 0x00007f9749bd1800 in ?? ()\r\n  #16 0x00000000e36e75af in ?? ()\r\n  #17 0x00007f974434fda8 in ?? ()\r\n  #18 0x00007f9749bd18e0 in ?? ()\r\n  #19 0x00007f96e0002820 in ?? ()\r\n  #20 0x00007f9712164160 in ?? ()\r\n  #21 0x00007f9712164010 in ?? ()\r\n  #22 0x0000000000000000 in ?? ()\r\n```\r\n\r\nThe crash occurs in frame 7, because the `r` parameter (an instance of the\r\n`MonoAssembly` structure) contains pointers that used to point to valid places\r\nin the `Xamarin.Android.Build.Tasks` assembbly's mmaped area, but now point to\r\ngarbage data. One of those corrupted pointers is the ASCII assembly name - which\r\nis used by the function in frame 7.\r\n\r\nThe situation can be detected by the runtime by using advisory locks and\r\nreporting the attempt to overwrite the mmapped area, however a fix would require\r\ncreating a copy of all the assembly's in-memory data before the write is allowed\r\nand that might be too expensive. None of those measures are currently\r\nimplemented by Mono (and it isn't sure if any of them will ever be implemented).\r\n\r\nThe crash this commit fixes occurs in a very specific scenario - when building\r\nthe `OpenTK.csproj` project *directly* (that is passing it as parameter to\r\n`msbuild`), which causes a the `Xamarin.Android.Build.Tasks` assembly to be\r\nloaded for use in the `<UsingTask/>` msbuild statement, but at the same time\r\n`OpenTK.csproj` references the `Xamarin.Android.Build.Tasks` *project* which\r\ncauses the ILRepacker task to run unconditionally, attempting to repack the\r\nassemblies again and leading to the crash described above.\r\n\r\nThe fix, courtesy of @jonpryor, is to make the ILRepacker target not run every\r\ntime but only whenver the assembly has to be re-packed because it has just been\r\nrebuilt."},{"Id":"7984245287","Type":"PullRequestEvent","CreatedAt":"2018-07-18T16:58:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1973","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Desugar now works without Proguard/MultiDex\" (#1973) at xamarin/xamarin-android","RelatedBody":"Looking into a customer's binding project, usage of\r\n`$(AndroidEnableDesugar)` was causing a crash at runtime where\r\n`mono.MonoRuntimeProvider` was completely missing from the APK.\r\nLooking into it further, it seemed that our desugar support only\r\nworked when used in combination with Proguard or MultiDex.\r\n\r\nWhat was happening:\r\n- The `<Desugar />` MSBuild task \"desugars\" the Xamarin.Android app\r\n  code into a `__app_classes__.jar` file\r\n- However `__app_classes__.jar` was not added to the `OutputJars`\r\n  output property\r\n- In `Xamarin.Android.Common.targets` a `@(_AlternativeJarForAppDx)`\r\n  item group is used for the input to `javac`, which does not contain\r\n  any of the Xamarin.Android app's Java code!\r\n\r\nIn fact, a workaround for the customer's project, was to add the\r\nfollowing to their Xamarin.Android app project file:\r\n\r\n    <ItemGroup>\r\n      <_AlternativeJarForAppDx Include=\"$(IntermediateOutputPath)android\\bin\\desugared\\__app_classes__.jar\" />\r\n    </ItemGroup>\r\n\r\n-- which was less than ideal.\r\n\r\nSo before I fixed the issue, I improved our tests:\r\n- Added a `DexUtils` class that invokes the `dexdump` command, so we\r\n  can assert that a dex file contains a specific Java class\r\n- Added `AndroidSdkDirectory` and `AndroidNdkDirectory` properties to\r\n  `Xamarin.ProjectTools`, since I needed the Android SDK path to use\r\n  `dexdump`\r\n- Fixed a bug where we need to use\r\n  `Environment.SpecialFolder.UserProfile`, or the\r\n  `android-toolchain\\sdk` directory is not found on Windows\r\n- Added an assertion to the desugar tests, checking that\r\n  `Lmono/MonoRuntimeProvider;` exists in the dex file\r\n- The desugar tests should also `ThrowOnBuildFailure` if desugar is\r\n  enabled\r\n\r\nNext, the fixes for desugar support:\r\n- We no longer need `InputClassesDirectory`, and do not need to\r\n  generate `__app_classes__.jar`, since it was not being used at all\r\n  anyway.\r\n- In `Xamarin.Android.Common.targets` we should include `classes.zip`\r\n  in the `@(_AlternativeJarForAppDx)` item group.\r\n- I updated the `<Desugar />` task to our new pattern of only logging\r\n  the `[Output]` properties\r\n\r\nThe new tests are now green!\r\n\r\nNote:\r\n- I tried *including* `__app_classes__.jar` at first, but proguard\r\n  commands were failing. When the app code was \"desugared\", required\r\n  attributes were removed such as `@Keep`. Since D8/R8 is the way\r\n  forward in the future, I thought it simpler to just omit the\r\n  creation of `__app_classes__.jar`."},{"Id":"7984178876","Type":"IssuesEvent","CreatedAt":"2018-07-18T16:45:12","Actor":"spixy","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1978","RelatedDescription":"Opened issue \"Random crash on app startup\" (#1978) at xamarin/xamarin-android","RelatedBody":"### Problem\r\nSometimes when I start debugging my app, it crashes before opening.\r\n\r\n[solution.zip](https://github.com/xamarin/xamarin-android/files/2206508/XamarinTest.zip)\r\n\r\n### Expected Behavior\r\nStart my Xamarin.Android app with MainActivity\r\n\r\n### Actual Behavior\r\nCrash\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Enterprise 2017  (Enterprise)\r\nVersion 15.7.5\r\nVisualStudio.15.Release/15.7.5+27703.2042\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-90005-83777-AA236\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nASP.NET and Web Tools 2017   15.0.40625.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40608.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nConveyor by Keyoti   1.0\r\nAllows you to access your web applications from other machines, even if hosted on the development web server.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.1.3    Build 112.0.20180626.160528\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 173513e369ffb7a1c4d5dccf83696d9aac2ab2d0.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7408.1\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for Unity   3.7.0.1\r\nVisual Studio Tools for Unity\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log Files\r\n[logcat.txt](https://github.com/xamarin/xamarin-android/files/2206525/logcat.txt)\r\n[xamarin-logs.zip](https://github.com/xamarin/xamarin-android/files/2206480/xamarin-logs.zip)\r\n\r\n### Notes\r\nI think it is because of **Unable to create files subdir /cache** and **/files** errors\r\nI have Xperia Z3 Compact with rooted original android. \r\nWhen I get into **/data/user/0/**, I cannot see even **com.comnamyname** folder.\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7983815531","Type":"IssuesEvent","CreatedAt":"2018-07-18T15:40:53","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1951","RelatedDescription":"Closed issue \"Console.WriteLine can crash with specially crafted strings\" (#1951) at xamarin/xamarin-android","RelatedBody":"It looks like using Console.WriteLine since 8.3.x crashes xamarin with a native crash. The crash occurs in printf, and didn't happen in 8.2.x. It looks like Console.WriteLine now calls a form of printf under the hood. If I try to log a string containing % characters, all hell breaks loose and it starts poking the stack for extra arguments and printing garbage. If I send enough, I get a crash (probably because it ends up dereferencing an invalid pointer somewhere on the stack). The string I provide is actually a reduced version of a string we're actually trying to log in our app. It's an url-encoded list of parameters to a web service (reduced for business purpose, but the reduced string crashes every time on my end as well)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Call the following code anywhere\r\n\r\n`Console.WriteLine(\"%20lo%20lo%20m%20m%20s%20s%20s%20s%20s%20s%20s\");`\r\n\r\n### Expected Behavior\r\n\r\nWrites the exact string to the console\r\n\r\n### Actual Behavior\r\n\r\nApp crashes (this is the crash I obtain in armeabi-v7a), with other strings you can get random garbage.\r\n\r\n07-09 19:05:52.918  2275  2275 F DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x20\r\n07-09 19:05:52.918  2275  2275 F DEBUG   : Cause: null pointer dereference\r\n07-09 19:05:52.918  2275  2275 F DEBUG   :     r0 00000020  r1 00000020  r2 00000001  r3 00000000\r\n07-09 19:05:52.918  2275  2275 F DEBUG   :     r4 f416166a  r5 00000010  r6 00000014  r7 ffffffff\r\n07-09 19:05:52.918  2275  2275 F DEBUG   :     r8 c877abbc  r9 ffffffff  sl c877b034  fp d459a7f4\r\n07-09 19:05:52.918  2275  2275 F DEBUG   :     ip f415f594  sp c877ab18  lr f410c0fd  pc f40e858c  cpsr 600b0030\r\n07-09 19:05:52.919  2275  2275 F DEBUG   : \r\n07-09 19:05:52.919  2275  2275 F DEBUG   : backtrace:\r\n07-09 19:05:52.919  2275  2275 F DEBUG   :     #00 pc 0001a58c  /system/lib/libc.so (strlen+71)\r\n07-09 19:05:52.919  2275  2275 F DEBUG   :     #01 pc 0003e0f9  /system/lib/libc.so (__vfprintf+3700)\r\n07-09 19:05:52.919  2275  2275 F DEBUG   :     #02 pc 000454f5  /system/lib/libc.so (vasprintf+116)\r\n07-09 19:05:52.919  2275  2275 F DEBUG   :     #03 pc 002bad20  /data/app/com.test.app-bNvAnqhOfjZ5uOWEHcDGDA==/lib/arm/libmonosgen-2.0.so (monoeg_g_log+80)\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.7.4\r\nVisualStudio.15.Release/15.7.4+27703.2035\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00370-20007-36350-AA982\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40601.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40608.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.7.18156.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.7.18156.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.7.18156.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.7.18156.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.7.18156.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27625.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.27520.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 173513e369ffb7a1c4d5dccf83696d9aac2ab2d0.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Unity   3.7.0.1\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2035\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support."},{"Id":"7983806610","Type":"IssuesEvent","CreatedAt":"2018-07-18T15:39:28","Actor":"AndieH68","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1977","RelatedDescription":"Opened issue \"xamarin.android.support.transition 27.0.2.1 fails to update through nuget\" (#1977) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. In visual studio , select Manage NugetPackages\r\n2. Select Xamarin.Android.Support.Transation and click Update\r\n3. Package fails to install  with NU3008: The package integrity check failed\r\n\r\nPackage Manager output\r\n========== Start==========\r\nRestoring packages for C:\\Hydrop Mobile\\Release\\COMPASSFlushing\\COMPASSFlushing\\COMPASSFlushing.Android\\COMPASSFlushing.Android.csproj...\r\n  GET https://api.nuget.org/v3-flatcontainer/xamarin.android.support.transition/index.json\r\n  OK https://api.nuget.org/v3-flatcontainer/xamarin.android.support.transition/index.json 1971ms\r\n  GET https://api.nuget.org/v3-flatcontainer/xamarin.android.support.transition/27.0.2.1/xamarin.android.support.transition.27.0.2.1.nupkg\r\n  OK https://api.nuget.org/v3-flatcontainer/xamarin.android.support.transition/27.0.2.1/xamarin.android.support.transition.27.0.2.1.nupkg 394ms\r\nInstalling Xamarin.Android.Support.Transition 27.0.2.1.\r\nSignature Hash Algorithm: SHA256\r\nNU3008: The package integrity check failed.\r\nSignature type: Author\r\nTimestamp: 12/06/2018 01:27:08\r\n\r\nVerifying timestamp with timestamping service certificate: \r\nSubject Name: CN=Symantec SHA256 TimeStamping Signer - G2, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\nSHA1 hash: 625AEC3AE4EDA1D169C4EE909E85B3BBC61076D3\r\nSHA256 hash: CF7AC17AD047ECD5FDC36822031B12D4EF078B6F2B4C5E6BA41F8FF2CF4BAD67\r\nIssued by: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\nValid from: 02/01/2017 00:00:00 to 02/04/2028 00:59:59\r\n\r\nVerifying signature with author certificate: \r\nSubject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\nSHA1 hash: F404000FB11E61F446529981C7059A76C061631E\r\nSHA256 hash: 3F9001EA83C560D712C24CF213C3D312CB3BFF51EE89435D3430BD06B5D0EECE\r\nIssued by: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nValid from: 26/02/2018 00:00:00 to 27/01/2021 12:00:00\r\n\r\nPackage restore failed. Rolling back package changes for 'COMPASSFlushing.Android'.\r\nTime Elapsed: 00:00:11.2129517\r\n========== Finished =========="},{"Id":"7983483051","Type":"PullRequestEvent","CreatedAt":"2018-07-18T14:50:13","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1976","RelatedDescription":"Opened pull request \"[xabuild] reference missing assembly on newer Mono versions\" (#1976) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1975\r\n\r\nIn newer versions of Mono, `xabuild` is failing with:\r\n\r\n    /Library/Frameworks/Mono.framework/Versions/Current/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2126,5): error MSB3248:\r\n        Parameter \"AssemblyFiles\" has invalid value \"xamarin-android/bin/Debug/lib/xamarin.android/xbuild-frameworks/MonoAndroid/v1.0/mscorlib.dll\".\r\n        Could not load file or assembly 'System.Reflection.Metadata, Version=1.3.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\r\n\r\nOr another example:\r\n\r\n    Mono: The following assembly referenced from monodroid/external/xamarin-android/bin/Debug/bin/Microsoft.Build.Tasks.Core.dll could not be loaded:\r\n        Assembly:   System.Reflection.Metadata    (assemblyref_index=7)\r\n        Version:    1.3.0.0\r\n        Public Key: b03f5f7f11d50a3a\r\n\r\nLooking at copies of `System.Reflection.Metadata` in my Mono\r\ninstallation:\r\n\r\n    $ find /Library/Frameworks/Mono.framework/ | grep System.Reflection.Metadata.dll$\r\n    /Library/Frameworks/Mono.framework//Versions/5.12.0/lib/mono/msbuild/15.0/bin/System.Reflection.Metadata.dll\r\n    /Library/Frameworks/Mono.framework//Versions/5.12.0/lib/mono/msbuild/15.0/bin/Roslyn/System.Reflection.Metadata.dll\r\n    /Library/Frameworks/Mono.framework//Versions/5.12.0/lib/mono/fsharp/System.Reflection.Metadata.dll\r\n    /Library/Frameworks/Mono.framework//Versions/5.12.0/lib/mono/4.5/System.Reflection.Metadata.dll\r\n    /Library/Frameworks/Mono.framework//Versions/5.12.0/lib/mono/4.5/dim/System.Reflection.Metadata.dll\r\n\r\nIt appears that the Mono version of MSBuild has its own copy of\r\n`System.Reflection.Metadata.dll`. Referencing this MSBuild-specific\r\nassembly from `xabuild.csproj` on non-Windows platforms appears to\r\nsolve the problem."},{"Id":"7983119567","Type":"PullRequestEvent","CreatedAt":"2018-07-18T13:54:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1974","RelatedDescription":"Merged pull request \"Update xUnit packages to the latest versions\" (#1974) at xamarin/xamarin-android","RelatedBody":"Update the xUnit (upstream) runner. The tests completed properly, hopefully it means it now handles all the unhandled exceptions properly (or we were lucky this time not to hit the network issue which caused the unhandled exception previously)."},{"Id":"7979577767","Type":"PullRequestEvent","CreatedAt":"2018-07-17T22:21:55","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1975","RelatedDescription":"Opened pull request \"[xabuild] MSBuild assemblies should not \"Copy Local\"\" (#1975) at xamarin/xamarin-android","RelatedBody":"Mono 2018-04 (or 5.14.x) has some changes to MSBuild assemblies that\r\ncause the following failure when using `xabuild.exe`:\r\n\r\n    Mono: The following assembly referenced from monodroid/external/xamarin-android/bin/Debug/bin/Microsoft.Build.Tasks.Core.dll could not be loaded:\r\n        Assembly:   System.Reflection.Metadata    (assemblyref_index=7)\r\n        Version:    1.3.0.0\r\n        Public Key: b03f5f7f11d50a3a\r\n\r\nCurrently `xabuild.exe` is referencing various MSBuild assemblies that\r\nget copied into `bin/$(Configuration)/bin` and shipped in the OSS zip.\r\n\r\nThis isn't exactly desirable, since we don't really want to ship these\r\nassemblies... These assemblies are OS-specific (as far as I can tell),\r\nI noticed that these assemblies coming from a zip built on macOS do\r\nnot work on Windows.\r\n\r\nSo instead, we can use `Private=False` item metadata on all MSBuild\r\nreferences and use custom assembly loading. By using the\r\n`AppDomain.AssemblyResolve` event, we can add some code to probe the\r\nMSBuild bin directory for assemblies. If not found, we can return\r\n`null` and let the runtime do its default behavior."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7986886360","Type":"IssuesEvent","CreatedAt":"2018-07-19T05:06:33","Actor":"jessejiang0214","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3338","RelatedDescription":"Opened issue \"DynamicResource didn't load correct in Merging Resource Dictionary\" (#3338) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nDynamicResource didn't load when we use merging resource dictionary in some case. \r\n### Steps to Reproduce\r\n\r\n1. Create a separate resource dictionary with some color. Reference this color in some style.\r\n2. Change this color in runtime.\r\n3. Push a page after color changed.\r\n\r\n### Expected Behavior\r\nThe new page should apply the new color\r\n### Actual Behavior\r\nThe new page still keep the old color\r\n### Basic Information\r\nIf we put this color into App.xaml, it will work fine, but if we put it into a separate style file. It doesn't work, and it only happens in a new pushed page\r\n\r\n- Version with issue: 3.1.0.637273\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.12.04\r\n  - Android: 8.3.3.2\r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[Demo](https://www.dropbox.com/s/04bwwbnsqy6h1g3/TestDynamicResource.zip?dl=0)"},{"Id":"7985769378","Type":"PullRequestEvent","CreatedAt":"2018-07-18T22:15:10","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3253","RelatedDescription":"Merged pull request \"Add missing API check in ScrollViewContainer\" (#3253) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`ScrollViewContainer` was missing an API level check for `IsInLayout`. \r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #3186 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7986719004","Type":"IssuesEvent","CreatedAt":"2018-07-19T03:56:02","Actor":"brad302","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4465","RelatedDescription":"Opened issue \"\"Code object is not signed at all\" ... \"In architecture: arm64\"\" (#4465) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\nI'm unable to build my project and debug it on my device.  I'm sure this was working only about 2 to 3 weeks ago and this is consistent across 2 development environments.\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\nI perform a build (cleaned or not) and receive the following error ..\r\n\r\nTarget \"_CodesignVerify\" in file \"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets\":\r\n  Task \"CodesignVerify\" skipped, due to false condition; ('$(IsMacEnabled)' == 'true' And '@(_ResolvedAppExtensionReferences)' != '') was evaluated as ('true' == 'true' And '' != '').\r\n  Using \"CodesignVerify\" task from assembly \"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Tasks.dll\".\r\n  Task \"CodesignVerify\"\r\n    Environment Variables passed to tool:\r\n      CODESIGN_ALLOCATE=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/codesign_allocate\r\n    /usr/bin/codesign --verify -vvvv -R='anchor apple generic and certificate 1[field.1.2.840.113635.100.6.2.1] exists and (certificate leaf[field.1.2.840.113635.100.6.1.2] exists or certificate leaf[field.1.2.840.113635.100.6.1.4] exists)' bin/iPhone/Debug/device-builds/iphone8.1-11.4.1/ReceiptCapture.iOS.app \r\n    bin/iPhone/Debug/device-builds/iphone8.1-11.4.1/**ReceiptCapture.iOS.app: code object is not signed at all\r\n    In architecture: arm64**\r\n    /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(1977,3): error MSB6006: \"codesign\" exited with code 1.\r\n  Done executing task \"CodesignVerify\" -- FAILED.\r\nDone building target \"_CodesignVerify\" in project \"ReceiptCapture.iOS.csproj\" -- FAILED.\r\n\r\nDone building project \"ReceiptCapture.iOS.csproj\" -- FAILED.\r\n\r\n### Expected Behavior\r\n\r\nI've had this from 2 different machines across 2 different projects and both environments are identical as far as I can work out.\r\n\r\n### Actual Behavior\r\n\r\nAs shown above.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: 83f71f98-472d-4714-800a-16fa1baef816\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Versions:\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/braddixon/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nFileNesting 0.1.1\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\nI'm a little unsure as to how I can attach the detailed log from the build into this but if requested, I am able to provide it.\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7986265586","Type":"PullRequestEvent","CreatedAt":"2018-07-19T01:03:29","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4463","RelatedDescription":"Closed pull request \"[msbuild] Don't quote command-line arguments that will be dumped into…\" (#4463) at xamarin/xamarin-macios","RelatedBody":"… the response file\r\n\r\nmtouch and mmp already assume 1 line = 1 argument, so not only is\r\nthere no need to quote, but it also breaks the command-line parsers\r\nin those tools if they *are* quoted.\r\n\r\nFixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/650253"},{"Id":"7985838019","Type":"PullRequestEvent","CreatedAt":"2018-07-18T22:34:04","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4464","RelatedDescription":"Opened pull request \"Disable response files hack\" (#4464) at xamarin/xamarin-macios","RelatedBody":"- This is a potential hacky fix to the 15.8 quoting mess\r\n- Since response files are causing the problem, we could just disable them!?!? "},{"Id":"7984532444","Type":"PullRequestEvent","CreatedAt":"2018-07-18T17:55:25","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4453","RelatedDescription":"Merged pull request \"[CoreMidi] Xcode 10 beta 3 update.\" (#4453) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":143,"FavoriteCount":91,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":41,"FavoriteCount":23,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":90,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":31,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":62,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":21,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":39,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":116,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2018-07-19T05:30:57.5610939Z","RunDurationInMilliseconds":3976}