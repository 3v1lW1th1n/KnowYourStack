{"Data":{"GitHub":{"Issues":[{"Id":"577382791","IsPullRequest":false,"CreatedAt":"2020-03-07T18:42:48","Actor":"artemiusgreat","Number":"4923","RawContent":null,"Title":"How Transformer converts structured or custom data view type into a feature value?","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro x64\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0\r\n- **ML.NET Version**: 1.5.0-preview\r\n\r\n### Question\r\n\r\nWhen implementing a custom data view type, how does transformer know what to use as a \"value\" of this type? Does it use `GetHashCode()` method for this?\r\n\r\n### Source code \r\n\r\nConsidering, we have this custom image type with properties Width and Height. \r\nhttps://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.ImageAnalytics/ImageType.cs \r\n\r\nThen, we have this transformer code that merges several columns into one called `Features`. \r\nOne of these columns has type `ImageType`. \r\n\r\n```C#\r\n  var pipeline = Context\r\n    .Transforms\r\n    .Conversion\r\n    .Append(Context.Transforms.Concatenate(\"Features\", new[] { \"ImageColumn\", \"Points\" }));\r\n```\r\n\r\nAs far as I understand, for ML engine to learn something from the provided data, `Features` should be an array of float values. So, the question is, how `ImageColumn` and `Points` will be converted to floats? \r\n\r\nAnother example that I found is this test for custom type registration. \r\nIt's also using GetHashCode method. \r\nhttps://github.com/dotnet/machinelearning/blob/release/1.5-preview/test/Microsoft.ML.Core.Tests/UnitTests/TestCustomTypeRegister.cs\r\n\r\n**I'd like somebody to confirm that whatever is returned from GetHashCode method will be used in training the model.**\r\n\r\n```C#\r\npublic override int GetHashCode() // unique value for ImageType\r\n{\r\n    return Hashing.CombineHash(Height.GetHashCode(), Width.GetHashCode());\r\n}\r\n```\r\n\r\nI'm asking because, e.g. OnnxMapType or OnnxSequenceType are completely different animals, whose GetHashCode method returns value based on a data type, not its value.\r\nhttps://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.OnnxTransformer/OnnxMapType.cs\r\n\r\n```C#\r\npublic override int GetHashCode() // uniquer value for OnnxMapType\r\n{\r\n    return RawType.GetHashCode();\r\n}\r\n```\r\n\r\n**Does it mean that ONNX types cannot be used for training because their hash code is based on a System.Type instead of actual observation?**","Url":"https://github.com/dotnet/machinelearning/issues/4923","RelatedDescription":"Open issue \"How Transformer converts structured or custom data view type into a feature value?\" (#4923)"},{"Id":"577092182","IsPullRequest":true,"CreatedAt":"2020-03-06T18:46:08","Actor":"LittleLittleCloud","Number":"4922","RawContent":null,"Title":"Add hasHeader flag in ColumnInference function","State":"closed","Body":"### This change will only affect the internal API.\r\n\r\nwhen hasHeader is true, AutoML will use the column name from dataset's header to indicate label/userId/itemId. else, it will use the default column name `col{i}` to indicate those information","Url":"https://github.com/dotnet/machinelearning/pull/4922","RelatedDescription":"Closed or merged PR \"Add hasHeader flag in ColumnInference function\" (#4922)"},{"Id":"575481194","IsPullRequest":false,"CreatedAt":"2020-03-06T13:43:41","Actor":"tomasfalt","Number":"4917","RawContent":null,"Title":"Error loading LightGBM model","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**:  .Net Standard 2.0\r\n- **ML.Net version**: 1.4\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nBuild and trained a model with FastTree, saved it and finally load it and all worked. Changed to LightGBM and got an error when I try to load it.\r\n\r\nThe error is following:\r\nInvalidOperationException: Can't load type Microsoft.ML.IPredictorProducing`1[System.Single], because it has both create and constructor methods with the same visibility. Please indicate which one should be used by changing either the signature or the visibility of one of them.\r\n\r\n### Source code / logs\r\n\r\nInvalidOperationException: Can't load type Microsoft.ML.IPredictorProducing`1[System.Single], because it has both create and constructor methods with the same visibility. Please indicate which one should be used by changing either the signature or the visibility of one of them.\r\n\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=Error during class instantiation\r\n  Source=Microsoft.ML.Core\r\n  StackTrace:\r\n   at Microsoft.ML.Runtime.ComponentCatalog.LoadableClassInfo.CreateInstanceCore(Object[] ctorArgs)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance[TRes](IHostEnvironment env, Type signatureType, TRes& result, String name, String options, Object[] extra)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance[TRes,TSig](IHostEnvironment env, TRes& result, String name, String options, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.TryLoadModelCore[TRes,TSig](IHostEnvironment env, TRes& result, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.TryLoadModel[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, Entry ent, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModel[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, Entry ent, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModelOrNull[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelLoadContext.LoadModel[TRes,TSig](IHostEnvironment env, TRes& result, RepositoryReader rep, String dir, Object[] extra)\r\n   at Microsoft.ML.ModelOperationsCatalog.Load(Stream stream, DataViewSchema& inputSchema)\r\n   at Microsoft.ML.ModelOperationsCatalog.Load(String filePath, DataViewSchema& inputSchema)\r\n  \r\n\r\n  This exception was originally thrown at this call stack:\r\n\tMicrosoft.ML.Runtime.ComponentCatalog.TryGetIniters(System.Type, System.Type, System.Type[], out System.Reflection.MethodInfo, out System.Reflection.ConstructorInfo, out System.Reflection.MethodInfo, out bool)\r\n\tMicrosoft.ML.Runtime.ComponentCatalog.RegisterAssembly(System.Reflection.Assembly, bool)\r\n\tMicrosoft.ML.ModelLoadContext.EnsureLoaderAssemblyIsRegistered(Microsoft.ML.Runtime.ComponentCatalog)\r\n\tMicrosoft.ML.ModelLoadContext.TryLoadModelCore<TRes, TSig>(Microsoft.ML.Runtime.IHostEnvironment, out TRes, object[])\r\n\tMicrosoft.ML.ModelLoadContext.TryLoadModel<TRes, TSig>(Microsoft.ML.Runtime.IHostEnvironment, out TRes, Microsoft.ML.RepositoryReader, Microsoft.ML.Repository.Entry, string, object[])\r\n\tMicrosoft.ML.ModelLoadContext.LoadModel<TRes, TSig>(Microsoft.ML.Runtime.IHostEnvironment, out TRes, Microsoft.ML.RepositoryReader, Microsoft.ML.Repository.Entry, string, object[])\r\n\tMicrosoft.ML.ModelLoadContext.LoadModelOrNull<TRes, TSig>(Microsoft.ML.Runtime.IHostEnvironment, out TRes, Microsoft.ML.RepositoryReader, string, object[])\r\n\r\nInner Exception 1:\r\nTargetInvocationException: Exception has been thrown by the target of an invocation.\r\n\r\nInner Exception 2:\r\nInvalidOperationException: Error during class instantiation\r\n\r\nInner Exception 3:\r\nTargetInvocationException: Exception has been thrown by the target of an invocation.\r\n\r\nInner Exception 4:\r\nInvalidOperationException: Error during class instantiation\r\n\r\nInner Exception 5:\r\nTargetInvocationException: Exception has been thrown by the target of an invocation.\r\n\r\nInner Exception 6:\r\nInvalidOperationException: Can't load type Microsoft.ML.IPredictorProducing`1[System.Single], because it has both create and constructor methods with the same visibility. Please indicate which one should be used by changing either the signature or the visibility of one of them.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4917","RelatedDescription":"Closed issue \"Error loading LightGBM model\" (#4917)"},{"Id":"576588062","IsPullRequest":true,"CreatedAt":"2020-03-05T23:14:37","Actor":"frank-dong-ms","Number":"4921","RawContent":null,"Title":"test LdaWorkoutEstimatorCore","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4921","RelatedDescription":"Open PR \"test LdaWorkoutEstimatorCore\" (#4921)"},{"Id":"575808706","IsPullRequest":true,"CreatedAt":"2020-03-05T20:46:00","Actor":"frank-dong-ms","Number":"4918","RawContent":null,"Title":"LightGBM Crash issue","State":"closed","Body":"https://github.com/microsoft/LightGBM/issues/2820\r\n\r\nLightGBM has dependency on OpenMP multi-threading library. In our tests we are setting number of threads to be 1 for LightGBM and LightGBM also sets OpenMP to use only 1 thread. While OpenMP is also used by other native libraries and they also tend to set number of threads for OpenMP to use (by default this is number of cores, in our case it is 2 as we are using https://docs.microsoft.com/en-us/azure/virtual-machines/dv2-dsv2-series#dsv2-series). This setting(number of threads) is global in process and cause LightGBM referencing OpenMP from single threads to multi-threads. LightGBM is using number of threads for indexing and thus cause index out of range in native code and crash the process.\r\n\r\nBy this fix, we are not force single threading when run LightGBM related tests thus default behavior is applied and all the libraries use same number of threads for OpenMP.\r\n\r\nIdealy LightGBM better not to rely number of threads to do indexing as this setting is global and likely be override by other library.","Url":"https://github.com/dotnet/machinelearning/pull/4918","RelatedDescription":"Closed or merged PR \"LightGBM Crash issue\" (#4918)"},{"Id":"576429602","IsPullRequest":false,"CreatedAt":"2020-03-05T17:52:12","Actor":"artemiusgreat","Number":"4920","RawContent":null,"Title":"Create DataView from IEnumerable<HashTable> or IEnumerable<IDictionary<string,dynamic>>","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro x64\r\n- **.NET Version**: .NET Core 3.0\r\n- **ML.NET Version**: 1.5.0-preview\r\n\r\n### Issue\r\n\r\n**What did you do?**\r\n\r\nTrying to create a data view from a list of IDictionary objects. \r\n\r\n- `IEnumerable<Expando>` or ...\r\n- `IEnumerable<HashTable>` or ...\r\n- `IEnumerable<Dictionary<string, object>>`\r\n- `IEnumerable<Dictionary<string, dynamic>>`\r\n\r\nIn this case, Keys would be used as column names, and Values as a data. \r\n\r\n**What happened?**\r\n\r\nWhen I add column names or implement ValueGetter, I need to specify a type of the column. \r\nThis code from ValueGetter gives an exception - could not cast type String to ReadOnlyMemory<char>\r\n\r\n```C#\r\n  return (ValueGetter<TValue>)_enumerator.Current[column.Name]\r\n```\r\n\r\nIn this code from data view constructor I don't know how to set column type as \"dynamic\". \r\n\r\n```C#\r\n  public DictionaryView(IEnumerable<HashTable> items)\r\n  {\r\n    Items = items;\r\n\r\n    var builder = new DataViewSchema.Builder();\r\n\r\n    foreach (var k in items.First().Keys)\r\n    {\r\n      builder.AddColumn(k, TextDataViewType.Instance); // not sure what data type to use here, because HashTable doesn't have type for its Values\r\n    }\r\n    \r\n    Schema = builder.ToSchema();\r\n  }\r\n```\r\n\r\n**What did you expect?**\r\n\r\n- how to define all columns as `object` or `dynamic` or ... \r\n- is it possible to implement custom column type for a data view, something like DataKind.MixedEnumerableFloatString or ... \r\n- define Switch-Case mapping between System.Type and DataView.Kind like in the pseudo-code below?\r\n\r\n```C#\r\npublic override ValueGetter<TValue> GetGetter<TValue>(DataViewSchema.Column column)\r\n{\r\n  // Ideally, would be good to have some generic delegate that could return some \"dynamic\" type instead of hardcoded type-casting \r\n  // If we iterate over data view collection using cursor, we don't need to know the type of the column \r\n\r\n  switch (column.GetType().Name)\r\n  {\r\n    case \"Float\": return (ValueGetter<float>)_enumerator.Current[column.Name];\r\n    case \"Boolean\": return (ValueGetter<bool>)_enumerator.Current[column.Name];\r\n    case \"String\": return (ValueGetter<ReadOnlyMemory<char>>)_enumerator.Current[column.Name];\r\n  }\r\n\r\n  if (column is IEnumerable) \r\n  {\r\n    return (ValueGetter<IEnumerable<float>>)_enumerator.Current[column.Name];\r\n  }\r\n\r\n  return (ValueGetter<TValue>)_enumerator.Current[column.Name];\r\n}\r\n```\r\n\r\n### Source code / logs\r\n\r\nUsing this guide as an example. \r\nhttps://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.idataview?view=ml-dotnet \r\n\r\n```C#\r\npublic class DictionaryView : IDataView\r\n{\r\n  public bool CanShuffle => false;\r\n  public long? GetRowCount() => 0;\r\n  public DataViewSchema Schema { get; }\r\n  public IEnumerable<HashTable> Items = null;\r\n\r\n  public DictionaryView(IEnumerable<HashTable> items)\r\n  {\r\n    Items = items;\r\n\r\n    var builder = new DataViewSchema.Builder();\r\n    builder.AddColumn(\"Label\", TextDataViewType.Instance); // add multiple properties dynamically from IDictionary or HashTable item \r\n    \r\n    //foreach (var k in items.First().Keys)\r\n    //{\r\n    //  builder.AddColumn(k, TextDataViewType.Instance); // not sure what data type to use here, because HashTable doesn't have type for its Values\r\n    //}\r\n    \r\n    //builder.AddColumn(\"Value\", TextDataViewType.Instance);\r\n    Schema = builder.ToSchema();\r\n  }\r\n\r\n  public DataViewRowCursor GetRowCursor(IEnumerable<DataViewSchema.Column> columns, Random seed = null) => new Cursor(this);\r\n  public DataViewRowCursor[] GetRowCursorSet(IEnumerable<DataViewSchema.Column> columns, int n, Random seed = null) => new[] { GetRowCursor(columns, seed) };\r\n\r\n  private sealed class Cursor : DataViewRowCursor\r\n  {\r\n    private long _position = -1;\r\n    private bool _inactive = false;\r\n    private readonly IEnumerator<HashTable> _enumerator = null;\r\n\r\n    public override long Batch => 0;\r\n    public override long Position => _position;\r\n    public override DataViewSchema Schema { get; } = null;\r\n    public override bool IsColumnActive(DataViewSchema.Column column) => true;\r\n    public override ValueGetter<DataViewRowId> GetIdGetter() => (ref DataViewRowId id) => id = new DataViewRowId();\r\n\r\n    public Cursor(DataViewManager view)\r\n    {\r\n      _position = -1;\r\n      _enumerator = view.Items.GetEnumerator();\r\n\r\n      //_getters = new Delegate[]\r\n      //{\r\n      //  (ValueGetter<ReadOnlyMemory<char>>)LabelGetterImplementation\r\n      //};\r\n\r\n      Schema = view.Schema;\r\n    }\r\n\r\n    //private readonly Delegate[] _getters;\r\n    //private void LabelGetterImplementation(ref ReadOnlyMemory<char> value) => value = $\"{ _enumerator.Current[\"Label\"] }\".AsMemory();\r\n\r\n    public override ValueGetter<TValue> GetGetter<TValue>(DataViewSchema.Column column)\r\n    {\r\n      if (_enumerator.Current == null)\r\n      {\r\n        MoveNext();\r\n      }\r\n\r\n      return (ValueGetter<TValue>)_enumerator.Current[column.Name]; // extract property by name from the current row of HashTable or IDictionary type\r\n\r\n      //return (ValueGetter<TValue>)_getters[column.Index];\r\n    }\r\n\r\n    protected override void Dispose(bool disposing)\r\n    {\r\n      if (_inactive)\r\n      {\r\n        return;\r\n      }\r\n\r\n      if (disposing)\r\n      {\r\n        _enumerator.Dispose();\r\n        _position = -1;\r\n      }\r\n\r\n      _inactive = true;\r\n\r\n      base.Dispose(disposing);\r\n    }\r\n\r\n    public override bool MoveNext()\r\n    {\r\n      if (_inactive)\r\n      {\r\n        return false;\r\n      }\r\n\r\n      if (_enumerator.MoveNext())\r\n      {\r\n        _position++;\r\n        return true;\r\n      }\r\n\r\n      Dispose();\r\n\r\n      return false;\r\n    }\r\n  }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4920","RelatedDescription":"Open issue \"Create DataView from IEnumerable<HashTable> or IEnumerable<IDictionary<string,dynamic>>\" (#4920)"},{"Id":"575301003","IsPullRequest":false,"CreatedAt":"2020-03-05T07:14:55","Actor":"nighotatul","Number":"4916","RawContent":null,"Title":"how we show score,probability associated with Permutation Feature Importance (PFI) so end user can easily identify?","State":"closed","Body":"@yaeldekel,@eerhardt,@najeeb-kazmi,@justinormont,@CESARDELATORRE\r\nreferences link:\r\n[how we show permutation slot associated with feature so end user easily identify? #4739](url)\r\n\r\nhow we can get score,probability of PFI?\r\nwe have get globally score and probability but we cannot get at PFI. how we can achieve this?","Url":"https://github.com/dotnet/machinelearning/issues/4916","RelatedDescription":"Closed issue \"how we show score,probability associated with Permutation Feature Importance (PFI) so end user can easily identify?\" (#4916)"},{"Id":"575840698","IsPullRequest":true,"CreatedAt":"2020-03-04T22:35:29","Actor":"antoniovs1029","Number":"4919","RawContent":null,"Title":"[Draft] Update to Onnxruntime 1.2 and reenable its support for GPU","State":"open","Body":"Update dependencies in ML.NET for Onnxruntime.Managed 1.2 and reenable GPU support.","Url":"https://github.com/dotnet/machinelearning/pull/4919","RelatedDescription":"Open PR \"[Draft] Update to Onnxruntime 1.2 and reenable its support for GPU\" (#4919)"},{"Id":"575066433","IsPullRequest":true,"CreatedAt":"2020-03-04T21:00:54","Actor":"LittleLittleCloud","Number":"4913","RawContent":null,"Title":"Update ConsumeModel.cs to enhance it's performance when being called for multiple times","State":"closed","Body":"#### Sample Code\r\n\r\n``` c#\r\n// This file was auto-generated by ML.NET Model Builder. \r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing Microsoft.ML;\r\nusing Test.Model;\r\n\r\nnamespace Test.Model\r\n{\r\n    public class ConsumeModel\r\n    {\r\n        private static Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictionEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(CreatePredictionEngine);\r\n\r\n        // For more info on consuming ML.NET models, visit https://aka.ms/model-builder-consume\r\n        // Method for consuming model in your app\r\n        public static ModelOutput Predict(ModelInput input)\r\n        {\r\n            ModelOutput result = PredictionEngine.Value.Predict(input);\r\n            return result;\r\n        }\r\n\r\n        public static PredictionEngine<ModelInput, ModelOutput> CreatePredictionEngine()\r\n        {\r\n            // Create new MLContext\r\n            MLContext mlContext = new MLContext();\r\n\r\n            // Register LabelMapping\r\n            mlContext.ComponentCatalog.RegisterAssembly(typeof(LabelMapping).Assembly);\r\n\r\n            // Load model & create prediction engine\r\n            string modelPath = @\"\\path\\to\\model\";\r\n            ITransformer mlModel = mlContext.Model.Load(modelPath, out var modelInputSchema);\r\n            var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);\r\n\r\n            return predEngine;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n#### Related Issue\r\n- [Simplify CodeGen](https://app.zenhub.com/workspaces/mlnet-tools-5cde1c97e3106e39e8ae08fc/issues/dotnet/machinelearning-modelbuilder/558)","Url":"https://github.com/dotnet/machinelearning/pull/4913","RelatedDescription":"Closed or merged PR \"Update ConsumeModel.cs to enhance it's performance when being called for multiple times\" (#4913)"},{"Id":"575279610","IsPullRequest":false,"CreatedAt":"2020-03-04T10:08:58","Actor":"nighotatul","Number":"4915","RawContent":null,"Title":"how we can show confusion matrix of Permutation Feature Importance so end user easily identify?","State":"open","Body":"@yaeldekel,@eerhardt,@najeeb-kazmi,@justinormont,@CESARDELATORRE\r\n\r\nhow we can show score,probability,confusion matrix of Permutation Feature Importance?","Url":"https://github.com/dotnet/machinelearning/issues/4915","RelatedDescription":"Open issue \"how we can show confusion matrix of Permutation Feature Importance so end user easily identify?\" (#4915)"},{"Id":"575074859","IsPullRequest":false,"CreatedAt":"2020-03-04T01:32:46","Actor":"crvkumar","Number":"4914","RawContent":null,"Title":"WeakReference<IHost> memory leak?","State":"open","Body":"### System information\r\n\r\n- **ML.NET Version**: 1.4.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\n1. Created a pipeline of ImageLoadingEstimator + ImageResizingEstimator + ImagePixelExtractingEstimator + OnnxScoringEstimator.\r\n2. Create a ITransformer object by fitting the pipeline.\r\n3. Performed ITransformer.Transform multiple times.\r\n\r\nPS: Creating a PredictionEngine and performing PredictionEngine.Predict seems to lock the image as mentioned in issue [4585](https://github.com/dotnet/machinelearning/issues/4585 )\r\n\r\n- **What happened?** \r\n\r\nWeakReference<IHost> objects seems to accumulate.\r\n\r\nThe number of objects does not change even after performing GC.Collect()\r\n\r\nIs this possibly a memory leak?\r\nThe application is built is Release configuration.\r\n\r\n![image](https://user-images.githubusercontent.com/2994809/75835713-f44f3a80-5e02-11ea-8454-abea45097ecc.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4914","RelatedDescription":"Open issue \"WeakReference<IHost> memory leak?\" (#4914)"},{"Id":"574342206","IsPullRequest":true,"CreatedAt":"2020-03-03T23:07:22","Actor":"LittleLittleCloud","Number":"4907","RawContent":null,"Title":"Use inline training data in generated Console Project file.","State":"closed","Body":"### Code Sample\r\n\r\n``` c#\r\n// This file was auto-generated by ML.NET Model Builder. \r\n\r\nusing System;\r\nusing SampleRecommendation.Model;\r\n\r\nnamespace SampleRecommendation.ConsoleApp\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            // Create single instance of sample data from first line of dataset for model input\r\n            ModelInput sampleData = new ModelInput()\r\n            {\r\n                UserId = 1,\r\n                MovieId = 1,\r\n                Timestamp = 9.649827E+08F,\r\n            };\r\n\r\n            // Make a single prediction on the sample data and print results\r\n            var predictionResult = ConsumeModel.Predict(sampleData);\r\n\r\n            Console.WriteLine(\"Using model to make single prediction -- Comparing actual Rating with predicted Rating from sample data...\\n\\n\");\r\n            Console.WriteLine($\"userId: {sampleData.UserId}\");\r\n            Console.WriteLine($\"movieId: {sampleData.MovieId}\");\r\n            Console.WriteLine($\"timestamp: {sampleData.Timestamp}\");\r\n            Console.WriteLine($\"\\n\\nActual Rating: {sampleData.Rating} \\nPredicted Rating: {predictionResult.Score}\\n\\n\");\r\n            Console.WriteLine(\"=============== End of process, hit any key to finish ===============\");\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n#### Fix issue\r\n- [Simply CodeGen](https://app.zenhub.com/workspaces/mlnet-tools-5cde1c97e3106e39e8ae08fc/issues/dotnet/machinelearning-modelbuilder/558) ( Item 1 )\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4907","RelatedDescription":"Closed or merged PR \"Use inline training data in generated Console Project file.\" (#4907)"},{"Id":"574872193","IsPullRequest":false,"CreatedAt":"2020-03-03T18:56:08","Actor":"nighotatul","Number":"4912","RawContent":null,"Title":"how we show bins associated with numeric feature so end user can easily identify?","State":"open","Body":"@yaeldekel,@eerhardt,@najeeb-kazmi,@justinormont,@CESARDELATORRE\r\n\r\nthanks for giving example for each feature weights.\r\n\r\nwith the references below link with subject lines:-\r\nhow we show permutation slot associated with feature so end user easily identify?\r\n[https://github.com/dotnet/machinelearning/issues/4739](url)\r\n\r\n![Picture1](https://user-images.githubusercontent.com/37444019/75969231-a286dd00-5ef4-11ea-955f-60900fc8fdbe.png)\r\n\r\nsuppose if this is yearatcomapny feature is having numeric data how we can get bins with model weights if this data is continuous then how we can get scatter points? \r\n\r\n2) how we can get  score,probability,confusion matrix of PFI also?","Url":"https://github.com/dotnet/machinelearning/issues/4912","RelatedDescription":"Open issue \"how we show bins associated with numeric feature so end user can easily identify?\" (#4912)"},{"Id":"574851779","IsPullRequest":false,"CreatedAt":"2020-03-03T18:16:46","Actor":"leblancdavid","Number":"4911","RawContent":null,"Title":"Implementing a custom `IEstimator` and `ITransformer`","State":"open","Body":"I am currently working on a custom algorithm to transform my data for my application. I would like to include this transform into my pipeline so I can save and load it along with the model. \r\n\r\nI started out by implementing the `IEstimator<ITransformer>` and `ITransformer` interfaces. The `Fit(...)` and `Transform(...)` methods were fairly easy to implement but I'm struggling with how these models can be saved. The `ModelSaveContext` in the `Save(...)` method contains only `internal` properties which I cannot access.\r\n\r\nI realize I could technically implement a `CustomMappingEstimator` but it doesn't really appear to do anything during the `Fit` part of the training. My algorithm generates data (just a list of indexes to determine with features to use), which is then passed to the `ITransformer`.\r\n\r\nAre there examples of how to do this?","Url":"https://github.com/dotnet/machinelearning/issues/4911","RelatedDescription":"Open issue \"Implementing a custom `IEstimator` and `ITransformer`\" (#4911)"},{"Id":"574621779","IsPullRequest":false,"CreatedAt":"2020-03-03T12:05:27","Actor":"ddobric","Number":"4910","RawContent":null,"Title":"Poor accuracy with non-US regional settings","State":"open","Body":"### System information\r\n\r\n- **OS Windows 10**:\r\n- **.NET Core 2.2**: \r\n\r\n### Issue\r\nGetting poor accuracy running the training code on a system with non-US regional settings. The issue is number format. After replacing ',' as decimal symbol to '.' all works fine.\r\n\r\nAccuracy with ',' decimal symbol:\r\n\r\n![image](https://user-images.githubusercontent.com/1756871/75774084-754cfa00-5d4f-11ea-929e-891b85175b34.png)\r\n\r\nAccuracy with '.' decimal symbol:\r\n\r\n![image](https://user-images.githubusercontent.com/1756871/75774069-6bc39200-5d4f-11ea-9274-bafc5bb4789d.png)\r\n\r\nIs there some way to take a control of localization in .NET ML?\r\n\r\nThanks\r\nDamir","Url":"https://github.com/dotnet/machinelearning/issues/4910","RelatedDescription":"Open issue \"Poor accuracy with non-US regional settings\" (#4910)"},{"Id":"574566993","IsPullRequest":false,"CreatedAt":"2020-03-03T10:30:01","Actor":"yaeldekel","Number":"4909","RawContent":null,"Title":"AppendCacheCheckpoint is ignored at the beginning of the pipeline","State":"open","Body":"When an empty `EstimatorChain` is created, and `AppendCacheCheckpoint` is called before adding any estimators, then no caching occurs. \r\nThe expected behavior should be to either cache the data before fitting the first estimator in the chain, or disallow calling `AppendCacheCheckpoint` on empty chains, so that the user knows to cache the data explicitly before fitting. (I think the first solution is preferable, but open to other opinions).","Url":"https://github.com/dotnet/machinelearning/issues/4909","RelatedDescription":"Open issue \"AppendCacheCheckpoint is ignored at the beginning of the pipeline\" (#4909)"},{"Id":"574478910","IsPullRequest":true,"CreatedAt":"2020-03-03T07:48:35","Actor":"mstfbl","Number":"4908","RawContent":null,"Title":"Debugging for VSTest Implementation","State":"open","Body":"Debugging CI builds for VSTest implementation to diagnose hanging/long-running tests","Url":"https://github.com/dotnet/machinelearning/pull/4908","RelatedDescription":"Open PR \"Debugging for VSTest Implementation\" (#4908)"},{"Id":"573077419","IsPullRequest":true,"CreatedAt":"2020-03-02T18:44:44","Actor":"antoniovs1029","Number":"4904","RawContent":null,"Title":"Calculate ReduceSum row by row in ONNX model from OneVsAllTrainer","State":"closed","Body":"There's a bug with the ONNX models exported from `OneVsAllTrainers` that have `OutputFormula = OutputFormula.Softmax`. (Notice that to the best of my knowledge, only a LightGBM multiclass trainer that had `useSoftmax = true` would have such an `OutputFormula`).\r\n\r\nProblem was that the SoftMax (particularly the `ReduceSum` part of it) would be applied by summing the whole input batch, instead of doing separate sums for each row. This PR fixes that.\r\n\r\nNotice that this error wasn't presented in our tests, since the `OnnxTransformer` which applies the ONNX model, actually process one row at a time, so the batch would always consist of one row. When trying to use this model directly with OnnxRuntime API (without the `OnnxTransformer`), then this problem appeared.","Url":"https://github.com/dotnet/machinelearning/pull/4904","RelatedDescription":"Closed or merged PR \"Calculate ReduceSum row by row in ONNX model from OneVsAllTrainer\" (#4904)"},{"Id":"574137098","IsPullRequest":false,"CreatedAt":"2020-03-02T17:42:05","Actor":"francescomazzurco","Number":"4906","RawContent":null,"Title":"AutoML Regression Experiment fails after 67iterations","State":"open","Body":"Hi,\r\n\r\nWhen running a Regression Experiment, AutoML sistematically fails after 67 iterations, raising the Exception \"All instances skipped due to missing features\". By looking at other issues, I got the idea that the SmacSweeper could be the cause. This is also suggested by the stack strace:\r\n\r\n```\r\nin Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl.MakeBoundariesAndCheckLabels(Int64& missingInstances, Int64& totalInstances)\r\n   in Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl..ctor(RoleMappedData data, IHost host, Double[][] binUpperBounds, Single maxLabel, Boolean dummy, Boolean noFlocks, PredictionKind kind, Int32[] categoricalFeatureIndices, Boolean categoricalSplit)\r\n   in Microsoft.ML.Trainers.FastTree.DataConverter.Create(RoleMappedData data, IHost host, Int32 maxBins, Single maxLabel, Boolean diskTranspose, Boolean noFlocks, Int32 minDocsPerLeaf, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeatureIndices, Boolean categoricalSplit)\r\n   in Microsoft.ML.Trainers.FastTree.ExamplesToFastTreeBins.FindBinsAndReturnDataset(RoleMappedData data, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeaturIndices, Boolean categoricalSplit)\r\n   in Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.ConvertData(RoleMappedData trainData)\r\n   in Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.TrainModelCore(TrainContext context)\r\n   in Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   in Microsoft.ML.AutoML.SmacSweeper.FitModel(IEnumerable`1 previousRuns)\r\n   in Microsoft.ML.AutoML.SmacSweeper.ProposeSweeps(Int32 maxSweeps, IEnumerable`1 previousRuns)\r\n   in Microsoft.ML.AutoML.PipelineSuggester.SampleHyperparameters(MLContext context, SuggestedTrainer trainer, IEnumerable`1 history, Boolean isMaximizingMetric)\r\n   in Microsoft.ML.AutoML.PipelineSuggester.GetNextInferredPipeline(MLContext context, IEnumerable`1 history, DatasetColumnInfo[] columns, TaskKind task, Boolean isMaximizingMetric, CacheBeforeTrainer cacheBeforeTrainer, IEnumerable`1 trainerWhitelist)\r\n   in Microsoft.ML.AutoML.Experiment`2.Execute()\r\n   in Microsoft.ML.AutoML.ExperimentBase`2.Execute(ColumnInformation columnInfo, DatasetColumnInfo[] columns, IEstimator`1 preFeaturizer, IProgress`1 progressHandler, IRunner`1 runner)\r\n   in Microsoft.ML.AutoML.ExperimentBase`2.Execute(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n```\r\nHowever, compared to the other issues, I'm running a console application, I'm loading data from database with no missing values. and I hopefully have the right NuGet dependencies:\r\n\r\n- Microsoft.ML.AutoML and Microsoft.ML.Recommender: 0.16.0\r\n- Microsoft.ML and all the other ML packages: 1.4.0\r\n\r\nI understand that the problem might be caused by some of the third-party libraries ML depends on, but isn't at least possible to ignore the exception thrown by a single trainer without compromising the whole regression experiment? I would like to be able to access the `BestRun` object and choose the best out of the first 67 experiments without having to look back at the `CacheDirectory`.\r\n\r\nIf necessary, I can generate a csv with all the data used for training.\r\n\r\nThanks\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4906","RelatedDescription":"Open issue \"AutoML Regression Experiment fails after 67iterations\" (#4906)"},{"Id":"573516095","IsPullRequest":false,"CreatedAt":"2020-03-01T09:43:50","Actor":"moreginger","Number":"4905","RawContent":null,"Title":"LightGbm trainer fails in linux container","State":"open","Body":"### System information\r\n\r\n- mcr.microsoft.com/dotnet/core/aspnet:3.1\r\n- Version: 3.1.1 \r\n\r\n### Issue\r\n\r\n- Created application using AutoML. LightGbm trainer was selected.\r\n- Dockerized a webapp using mcr.microsoft.com/dotnet/core/aspnet:3.1 as base.\r\n- Expected: It trains.\r\n- Actual: Unable to load shared library 'lib_lightgbm' (see below).\r\n\r\nAs per https://github.com/dotnet/machinelearning/issues/4600 it appears that the trainer can be used if clang is present, for example:\r\n\r\n```\r\nRUN apt-get update && apt-get install -y \\\r\n    clang-3.9 \\\r\n && rm -rf /var/lib/apt/lists/*\r\n```\r\n\r\nHowever this doesn't seem like a satisfactory solution as it adds about a gigabyte to the image size. Surely there is a better answer?\r\n\r\n### Source code / logs\r\n\r\n```\r\nSystem.AggregateException: One or more errors occurred. (Unable to load shared library 'lib_lightgbm' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: liblib_lightgbm: cannot open shared object file: No such file or directory)\r\n ---> System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: liblib_lightgbm: cannot open shared object file: No such file or directory\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4905","RelatedDescription":"Open issue \"LightGbm trainer fails in linux container\" (#4905)"},{"Id":"572912369","IsPullRequest":false,"CreatedAt":"2020-02-28T17:54:56","Actor":"artemiusgreat","Number":"4903","RawContent":null,"Title":"Dynamic number of features for the trainer / schema","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro x64\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0\r\n- **ML.NET Version**: 1.5.0-preview\r\n\r\n### Issue \r\nTrying to use variable number of properties (dynamic schema) for the trainer using dataView.SelectColumns. This creates correct trainer with only 2 features, but prediction engine still requires to specify original input model and uses all 10+ features, even though all features except selected 2 were set to 0.  \r\n\r\n### What did you do?\r\n- use input model with 10 features / properties\r\n- create data view and select only 2 of these features \r\n- use LGBM as a trainer \r\n- create 3 input items with labels - Strategy1, Strategy2, Strategy3 and train estimator \r\n- try to make prediction providing test item identical to Strategy3\r\n\r\n### What happened?\r\n- output schema in CreatePredictionEngine shows that there are 10+ columns, even though, when I created a data view for training, I selected only 2 features\r\n- result of prediction is always the same - Strategy1, most probably because trainer always compares 10+ features instead of 2, even though all features except selected 2 were set to 0 \r\n\r\n### What did you expect?\r\n- if estimator was trained to use only 2 features / input properties, then prediction engine should use provided data view schema and should also work only with 2 selected properties\r\n- in the code below I'd like to make sure that properties Contrast, Param1 ... Param5 are ignored by prediction engine\r\n\r\n### Source code / logs\r\n\r\n```C#\r\npublic class MyInputModel\r\n{\r\n  [ColumnName(nameof(PredictorLabelsEnum.Strategy)), LoadColumn(0)]\r\n  public string Strategy { get; set; }\r\n\r\n  [ColumnName(nameof(InputNamesEnum.Pitch)), LoadColumn(1)]\r\n  public float Pitch { get; set; }\r\n\r\n  [ColumnName(nameof(InputNamesEnum.Energy)), LoadColumn(2)]\r\n  public float Energy { get; set; }\r\n\r\n  [ColumnName(nameof(InputNamesEnum.Contrast)), LoadColumn(3, 8), VectorType(6)]\r\n  public float[] Contrast { get; set; }\r\n  \r\n  [ColumnName(nameof(InputNamesEnum.Param1)), LoadColumn(9)]\r\n  public float Param1 { get; set; }\r\n\r\n  [ColumnName(nameof(InputNamesEnum.Param2)), LoadColumn(10)]\r\n  public float Param2 { get; set; }\r\n\r\n  [ColumnName(nameof(InputNamesEnum.Param3)), LoadColumn(11)]\r\n  public float Param3 { get; set; }\r\n\r\n  [ColumnName(nameof(InputNamesEnum.Param4)), LoadColumn(12)]\r\n  public float Param4 { get; set; }\r\n\r\n  [ColumnName(nameof(InputNamesEnum.Param5)), LoadColumn(13)]\r\n  public float Param5 { get; set; }\r\n}\r\n\r\npublic IEstimator<ITransformer> GetPipeline(IEnumerable<string> columns)\r\n{\r\n  var pipeline = Context\r\n    .Transforms\r\n    .Conversion\r\n    .MapValueToKey(new[] { new InputOutputColumnPair(\"Label\", \"Strategy\") })  // use property \"strategy\" as categorizable label\r\n    .Append(Context.Transforms.Concatenate(\"Combination\", columns.ToArray()))  // merge properties selected for analysis into \"Combination\"\r\n    .Append(Context.Transforms.NormalizeMinMax(new[] { new InputOutputColumnPair(\"Features\", \"Combination\") }));  // normalize selected properties as \"Features\"\r\n\r\n  return pipeline;\r\n}\r\n\r\npublic IEstimator<ITransformer> GetEstimator()\r\n{\r\n  var estimator = Context\r\n    .MulticlassClassification\r\n    .Trainers\r\n    .LightGbm()\r\n    .Append(Context.Transforms.Conversion.MapKeyToValue(new[] { new InputOutputColumnPair(\"Prediction\", \"PredictedLabel\") }));\r\n\r\n  return estimator;\r\n}\r\n\r\npublic byte[] SaveModel(IEnumerable<MyInputModel> items)\r\n{\r\n  var columns = new [] { \"Pitch\", \"Energy\" };\r\n  var estimator = GetEstimator();\r\n  var pipeline = GetPipeline(columns);\r\n  var sourceInputs = Context.Data.LoadFromEnumerable(items);\r\n  var inputs = Context\r\n    .Transforms\r\n    .SelectColumns(columns.Concat(new List<string> { \"Strategy\" }).ToArray()) // model has ~10 properties, we select only 2 of them \r\n    .Fit(sourceInputs)\r\n    .Transform(sourceInputs);\r\n\r\n  var pipelineModel = pipeline.Fit(inputs);\r\n  var pipelineView = pipelineModel.Transform(inputs);\r\n  var estimatorModel = pipeline.Append(estimator).Fit(inputs);\r\n  var model = new byte[0];\r\n\r\n  using (var memoryStream = new MemoryStream())\r\n  {\r\n    Context.Model.Save(estimatorModel, pipelineView.Schema, memoryStream);\r\n    model = memoryStream.ToArray();\r\n  }\r\n\r\n  return model;\r\n}\r\n\r\npublic string LoadModelAndEstimate(byte[] predictor)\r\n{\r\n  var prediction = string.Empty;\r\n\r\n  // let's make input identical to Strategy3, but somehow predicted result is still Strategy1\r\n\r\n  var input = new MyInputModel \r\n  {\r\n    Pitch = 50,\r\n    Energy = 10,\r\n    Contrast = new [] { 0, 0, 0, 0, 0, 0 },\r\n    Param1 = 0,\r\n    Param2 = 0,\r\n    Param3 = 0,\r\n    Param4 = 0,\r\n    Param5 = 0\r\n  };\r\n\r\n  using (var stream = new MemoryStream(predictor))\r\n  {\r\n    var model = Context.Model.Load(stream, out var schema) as TransformerChain<ITransformer>;\r\n    var chain = (model.LastTransformer as IEnumerable<ITransformer>).First() as MulticlassPredictionTransformer<OneVersusAllModelParameters>;\r\n    var chainModel = chain.Model as OneVersusAllModelParameters; // here I see only 3 properties with weights - Pitch, Energy, Label\r\n    var engine = Context.Model.CreatePredictionEngine<MyInputModel, MyOutputModel>(model); // here output schema shows 10+ columns, even though I expect 3\r\n    \r\n    // also tried to specify data view schema from the model explicitly for prediction engine\r\n    // var engine = Context.Model.CreatePredictionEngine<MyInputModel, MyOutputModel>(model, schema); \r\n    \r\n    prediction = engine.Predict(input);\r\n  }\r\n\r\n  return prediction;\r\n}\r\n```\r\n\r\n###  Example \r\n```\r\nvar testData = \r\n[\r\n  { \r\n    Strategy = \"Strategy1\",\r\n    Pitch = 115,\r\n    Energy = 50,\r\n    Contrast = new [] { 0, 0, 0, 0, 0, 0 },\r\n    Param1 = 0, Param2 = 0, Param3 = 0, Param4 = 0, Param5 = 0\r\n  },\r\n  {\r\n    Strategy = \"Strategy2\",\r\n    Pitch = 90,\r\n    Energy = 30,\r\n    Contrast = new [] { 0, 0, 0, 0, 0, 0 },\r\n    Param1 = 0, Param2 = 0, Param3 = 0, Param4 = 0, Param5 = 0\r\n  },\r\n  {\r\n    Strategy = \"Strategy3\",\r\n    Pitch = 50,\r\n    Energy = 10,\r\n    Contrast = new [] { 0, 0, 0, 0, 0, 0 },\r\n    Param1 = 0, Param2 = 0, Param3 = 0, Param4 = 0, Param5 = 0\r\n  }\r\n]\r\n```\r\n\r\n```\r\nvar trainData = \r\n[\r\n  {\r\n    Strategy = \"Strategy3\",\r\n    Pitch = 50,\r\n    Energy = 10,\r\n    Contrast = new [] { 0, 0, 0, 0, 0, 0 },\r\n    Param1 = 0, Param2 = 0, Param3 = 0, Param4 = 0, Param5 = 0\r\n  }\r\n]\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4903","RelatedDescription":"Open issue \"Dynamic number of features for the trainer / schema\" (#4903)"},{"Id":"572537582","IsPullRequest":true,"CreatedAt":"2020-02-28T05:55:01","Actor":"frank-dong-ms","Number":"4902","RawContent":null,"Title":"test benchmark test hanging","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4902","RelatedDescription":"Open PR \"test benchmark test hanging\" (#4902)"},{"Id":"571713642","IsPullRequest":true,"CreatedAt":"2020-02-27T22:29:45","Actor":"frank-dong-ms","Number":"4896","RawContent":null,"Title":"disable test parallelization for ML.Test assembly to avoid crash","State":"closed","Body":"In ML.Tests assembly, when some tests run in parallel, there are chance the host process will crash due to below exception: \r\nThe thread tried to read from or write to a virtual address for which it does not have the appropriate access.\r\nUnhandled exception at 0x00007FFA70E7B049 (ntdll.dll) in dotnet.exe.12884.dmp: 0xC0000374: A heap has been corrupted (parameters: 0x00007FFA70EE27F0).\r\n\r\nLooked into this error in detail, they come from LightGBM/OnnxRuntime dll we are referencing, seems like null pointer error during object finalization. \r\n![image](https://user-images.githubusercontent.com/55860649/75403422-8f548b80-58bc-11ea-8444-eb48027567fa.png)\r\n\r\nThese crash issue can be mitigated if we disable test parallelization. At the meantime, I'm contacting LightGBM and OnnxRuntime team to take a deeper look, maybe they should do null pointer check at their end.\r\n\r\nBelow are combination of tests run in parallel likely to cause crash, there maybe more:\r\nLightGBMBinaryEstimatorUnbalanced and BinaryClassificationTrainersOnnxConversionTest\r\nLightGBMRegressorEstimator and BinaryClassificationTrainersOnnxConversionTest\r\nLightGBMBinaryEstimatorUnbalanced and TestSGDBinary\r\nLightGBMBinaryEstimatorUnbalanced and CommandLineOnnxConversionTest\r\nLightGBMBinaryEstimatorCorrectSigmoid and MulticlassConfusionMatrixSlotNames\r\nIrisVectorLightGbmWithLoadColumnName and PlattCalibratorOnnxConversionTest\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4896","RelatedDescription":"Closed or merged PR \"disable test parallelization for ML.Test assembly to avoid crash\" (#4896)"},{"Id":"572389413","IsPullRequest":false,"CreatedAt":"2020-02-27T22:04:48","Actor":"jdahan91","Number":"4901","RawContent":null,"Title":"\"Metadata KeyValues does not exist\" in ImageClassification","State":"open","Body":"Choosing image classification, i'm trying to train a folder with three subfolders each subfolder has one image.\r\n\r\nBut I don't understand what's the problem that gives me this error. I tried including a .tsv files but still doesn't help.","Url":"https://github.com/dotnet/machinelearning/issues/4901","RelatedDescription":"Open issue \"\"Metadata KeyValues does not exist\" in ImageClassification\" (#4901)"},{"Id":"572317106","IsPullRequest":true,"CreatedAt":"2020-02-27T21:13:35","Actor":"Lynx1820","Number":"4900","RawContent":null,"Title":"Added boolean support for KeyToValue and ValueToKey","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4900","RelatedDescription":"Closed or merged PR \"Added boolean support for KeyToValue and ValueToKey\" (#4900)"},{"Id":"571739800","IsPullRequest":true,"CreatedAt":"2020-02-27T18:02:10","Actor":"frank-dong-ms","Number":"4897","RawContent":null,"Title":"upgrade hosted mac agent pool to use new version of mac os","State":"closed","Body":"current version of mac os will be out of support at March 23, 2020, move to new version:\r\n\r\nhttps://devblogs.microsoft.com/devops/removing-older-images-in-azure-pipelines-hosted-pools/","Url":"https://github.com/dotnet/machinelearning/pull/4897","RelatedDescription":"Closed or merged PR \"upgrade hosted mac agent pool to use new version of mac os\" (#4897)"},{"Id":"571782145","IsPullRequest":true,"CreatedAt":"2020-02-27T02:38:13","Actor":"najeeb-kazmi","Number":"4899","RawContent":null,"Title":"Misc doc/sample fixes, improvements, and typos","State":"open","Body":"Misc doc/sample improvements, fixes, and typos.\r\n\r\nFixes #2655 \r\nFixes #3627 \r\nFixes #3927 \r\nFixes #3841 \r\nFixes #4898 \r\nFixes #3407 \r\n\r\nPartially addresses #3891\r\n\r\nRelated #4119 \r\nAnd a few minor fixes.\r\n\r\nMore to come.","Url":"https://github.com/dotnet/machinelearning/pull/4899","RelatedDescription":"Open PR \"Misc doc/sample fixes, improvements, and typos\" (#4899)"},{"Id":"571749579","IsPullRequest":false,"CreatedAt":"2020-02-27T00:49:50","Actor":"najeeb-kazmi","Number":"4898","RawContent":null,"Title":"What is the exact behavior of CreateTextLoader<TInput> when dataSample is given?","State":"open","Body":"We have this overload for `CreateTextLoader<TInput>`, where the schema is defined in `TInput`. \r\nhttps://github.com/dotnet/machinelearning/blob/c3d15927522ef9645dd335d9375fda15a2aaab34/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoaderSaverCatalog.cs#L90-L98\r\n\r\nThe `dataSample` argument is meant to be used to infer schema. Since `TInput` must contain at least one field, there is always at least one column in the schema. Then, this condition is never hit, and consequently, `dataSample` is never used to infer the schema with the `CreateTextLoader<TInput>` overload.\r\nhttps://github.com/dotnet/machinelearning/blob/c3d15927522ef9645dd335d9375fda15a2aaab34/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoader.cs#L1118\r\n\r\n~Presence of the `dataSample` argument is confusing here as it implies that a sample can be provided. In other places, this sample is used to infer schema, so the user would expect this to be the case here as well, but `dataSample` is ignored here.~\r\n\r\n~I will update the documentation to reflect this, but this should be removed. Since this will be an API breaking change, this should be revisited for 2.0.~","Url":"https://github.com/dotnet/machinelearning/issues/4898","RelatedDescription":"Open issue \"What is the exact behavior of CreateTextLoader<TInput> when dataSample is given?\" (#4898)"},{"Id":"571653515","IsPullRequest":false,"CreatedAt":"2020-02-26T22:49:24","Actor":"malterman","Number":"4894","RawContent":null,"Title":"how to add this option to LightGBM?","State":"closed","Body":"Is there a reference for how to add options (like below) to: mlContext.BinaryClassification.Trainers.LightGBM(...  ?\n\n            var options = new LightGbmBinaryTrainer.Options\n            {\n                NumberOfThreads = 4,\n                UnbalancedSets = true,\n                EvaluationMetric = LightGbmBinaryTrainer.Options.EvaluateMetricType.AreaUnderCurve\n            };\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 6c83c9a9-84be-c526-4e54-62930bc16974\n* Version Independent ID: 63652672-e3bb-90c6-9f7d-470ed8dd32f5\n* Content: [LightGbmMulticlassTrainer.Options.UnbalancedSets Field (Microsoft.ML.Trainers.LightGbm)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmmulticlasstrainer.options.unbalancedsets?view=ml-dotnet#feedback)\n* Content Source: [dotnet/xml/Microsoft.ML.Trainers.LightGbm/LightGbmMulticlassTrainer+Options.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Trainers.LightGbm/LightGbmMulticlassTrainer+Options.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @natke\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/4894","RelatedDescription":"Closed issue \"how to add this option to LightGBM?\" (#4894)"},{"Id":"571704768","IsPullRequest":false,"CreatedAt":"2020-02-26T22:39:17","Actor":"GKrivosheev-rms","Number":"4895","RawContent":null,"Title":"Please Expose ParquetDataLoader add implement ParquetWriter","State":"open","Body":"Apache Parquet is a popular data format in the industry.  It is used in ScikitLearn, Spark and a many other ML and big-data related software.   Currently ParquetReader is an internal class that is not exposed to end users.\r\nFeature Request:\r\n- Please provide ParquetReader to ML.NET users\r\n- Please implement ParquetWriter to ML.NET users.\r\n- Update Parquet.NET used by the framework to the latest as it offers bug fixes and perf improvements.\r\n\r\nThis would significantly simplify integration with various other ML and ETL  processes.\r\nThis would also provide a good industry-standard data interop between ML.NET and other ML and data tools, as an alternative to CSVs.","Url":"https://github.com/dotnet/machinelearning/issues/4895","RelatedDescription":"Open issue \"Please Expose ParquetDataLoader add implement ParquetWriter\" (#4895)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-09T05:30:41.0724932Z","RunDurationInMilliseconds":746}