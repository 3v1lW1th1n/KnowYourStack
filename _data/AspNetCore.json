{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7668132422","Type":"IssuesEvent","CreatedAt":"2018-05-14T03:26:48","Actor":"TheMagnificent11","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3140","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.SpaServices.Extensions 2.1.0-rc1-final - UseSpaStaticFiles Issue\" (#3140) at aspnet/Home","RelatedBody":"I recently upgrade a ASP.Net Core 2.0 project to 2.1 RC.\r\n\r\nThe project used teh SPA Services and worked as expected in 2.0.\r\n\r\nI'm getting the following error after upgrading to 2.1.\r\n\r\n```\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=To use UseSpaStaticFiles, you must first register an ISpaStaticFileProvider in the service provider, typically by calling services.AddSpaStaticFiles.\r\n  Source=Microsoft.AspNetCore.SpaServices.Extensions\r\n  StackTrace:\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.ShouldServeStaticFiles(IApplicationBuilder app, Boolean allowFallbackOnServingWebRootFiles, IFileProvider& fileProviderOrDefault)\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFilesInternal(IApplicationBuilder app, StaticFileOptions staticFileOptions, Boolean allowFallbackOnServingWebRootFiles)\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFiles(IApplicationBuilder applicationBuilder, StaticFileOptions options)\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFiles(IApplicationBuilder applicationBuilder)\r\n   at Web.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env) in C:\\src\\demo-me\\Web\\Startup.cs:line 64\r\n```\r\n\r\nMy code, for adding/configuring SPA services, appears to be the same as the code generated from the Angular template for ASP.Net Core 2.1.\r\n\r\nHere's my code.\r\n\r\n**Project File**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <AssemblyName>Web</AssemblyName>\r\n    <RootNamespace>Web</RootNamespace>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>\r\n    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>\r\n    <IsPackable>false</IsPackable>\r\n    <SpaRoot>ClientApp\\</SpaRoot>\r\n    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\\**</DefaultItemExcludes>\r\n    <BuildServerSideRenderer>false</BuildServerSideRenderer>\r\n    <UserSecretsId>98409fa3-6e14-4655-93f1-941183396787</UserSecretsId>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <DocumentationFile>bin\\Debug\\netcoreapp2.0\\Web.xml</DocumentationFile>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n    <WarningsAsErrors />\r\n    <CodeAnalysisRuleSet>..\\CodeAnalysis.ruleset</CodeAnalysisRuleSet>\r\n    <Features>IOperation</Features>\r\n    <NoWarn>1701;1702;1705;CA2007;CA1305</NoWarn>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <DocumentationFile>bin\\Release\\netcoreapp2.0\\Web.xml</DocumentationFile>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n    <WarningsAsErrors />\r\n    <CodeAnalysisRuleSet>..\\CodeAnalysis.ruleset</CodeAnalysisRuleSet>\r\n    <Features>IOperation</Features>\r\n    <NoWarn>1701;1702;1705;CA2007;CA1305</NoWarn>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Autofac\" Version=\"4.8.1\" />\r\n    <PackageReference Include=\"Autofac.Extensions.DependencyInjection\" Version=\"4.2.2\" />\r\n    <PackageReference Include=\"AutoMapper\" Version=\"6.2.2\" />\r\n    <PackageReference Include=\"AutoMapper.Extensions.Microsoft.DependencyInjection\" Version=\"3.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.1.0-rc1-final\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"2.1.0-rc1-final\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SpaServices.Extensions\" Version=\"2.1.0-rc1-final\" />\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.FxCopAnalyzers\" Version=\"2.6.0\" />\r\n    <PackageReference Include=\"StyleCop.Analyzers\" Version=\"1.0.2\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"2.4.0\" />\r\n    <PackageReference Include=\"System.IdentityModel.Tokens.Jwt\" Version=\"5.2.2\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.1\" />\r\n    <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->\r\n    <Content Remove=\"ClientApp\\**\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Data.Interfaces\\Data.Interfaces.csproj\" />\r\n    <ProjectReference Include=\"..\\Data.Models\\Data.Models.csproj\" />\r\n    <ProjectReference Include=\"..\\Data\\Data.csproj\" />\r\n    <ProjectReference Include=\"..\\Logic.Interfaces\\Logic.Interfaces.csproj\" />\r\n    <ProjectReference Include=\"..\\Logic.Models\\Logic.Models.csproj\" />\r\n    <ProjectReference Include=\"..\\Logic\\Logic.csproj\" />\r\n    <ProjectReference Include=\"..\\Web.Models.Mappings\\Web.Models.Mappings.csproj\" />\r\n    <ProjectReference Include=\"..\\Web.Models\\Web.Models.csproj\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"Properties\\PublishProfiles\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <!-- Don't publish the SPA source files, but do show them in the project files list -->\r\n    <Content Remove=\"$(SpaRoot)**\" />\r\n    <None Include=\"$(SpaRoot)**\" Exclude=\"$(SpaRoot)node_modules\\**\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Content Remove=\"swagger.json\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <None Include=\"swagger.json\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"DebugEnsureNodeEnv\" BeforeTargets=\"Build\" Condition=\" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') \">\r\n    <!-- Ensure Node.js is installed -->\r\n    <Exec Command=\"node --version\" ContinueOnError=\"true\">\r\n      <Output TaskParameter=\"ExitCode\" PropertyName=\"ErrorCode\" />\r\n    </Exec>\r\n    <Error Condition=\"'$(ErrorCode)' != '0'\" Text=\"Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE.\" />\r\n    <Message Importance=\"high\" Text=\"Restoring dependencies using 'npm'. This may take several minutes...\" />\r\n    <Exec WorkingDirectory=\"$(SpaRoot)\" Command=\"npm install\" />\r\n  </Target>\r\n\r\n  <Target Name=\"PublishRunWebpack\" AfterTargets=\"ComputeFilesToPublish\">\r\n    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->\r\n    <Exec WorkingDirectory=\"$(SpaRoot)\" Command=\"npm install\" />\r\n    <Exec WorkingDirectory=\"$(SpaRoot)\" Command=\"npm run build -- --prod\" />\r\n    <Exec WorkingDirectory=\"$(SpaRoot)\" Command=\"npm run build:ssr -- --prod\" Condition=\" '$(BuildServerSideRenderer)' == 'true' \" />\r\n\r\n    <!-- Include the newly-built files in the publish output -->\r\n    <ItemGroup>\r\n      <DistFiles Include=\"$(SpaRoot)dist\\**; $(SpaRoot)dist-server\\**\" />\r\n      <DistFiles Include=\"$(SpaRoot)node_modules\\**\" Condition=\"'$(BuildServerSideRenderer)' == 'true'\" />\r\n      <ResolvedFileToPublish Include=\"@(DistFiles->'%(FullPath)')\" Exclude=\"@(ResolvedFileToPublish)\">\r\n        <RelativePath>%(DistFiles.Identity)</RelativePath>\r\n        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n      </ResolvedFileToPublish>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n\r\n**Startup**\r\n```\r\nusing System;\r\nusing System.Text;\r\nusing Autofac;\r\nusing Autofac.Extensions.DependencyInjection;\r\nusing AutoMapper;\r\nusing Common.Constants.Auth;\r\nusing Data;\r\nusing Data.Models.Auth;\r\nusing Data.Models.Auth.Enums;\r\nusing Logic;\r\nusing Logic.Auth;\r\nusing Logic.Models;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.SpaServices.AngularCli;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing Swashbuckle.AspNetCore.Swagger;\r\n\r\nnamespace Web\r\n{\r\n    /// <summary>\r\n    /// Startup\r\n    /// </summary>\r\n    public sealed class Startup\r\n    {\r\n        /// <summary>\r\n        /// Initializes a new instance of the <see cref=\"Startup\"/> class\r\n        /// </summary>\r\n        /// <param name=\"configuration\">Application configuration</param>\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        private IConfiguration Configuration { get; set; }\r\n\r\n        /// <summary>\r\n        /// Configures the HTTP request pipeline\r\n        /// </summary>\r\n        /// <param name=\"app\">Application builder</param>\r\n        /// <param name=\"env\">Hosting environment</param>\r\n        public static void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (app == null) throw new ArgumentNullException(nameof(app));\r\n            if (env == null) throw new ArgumentNullException(nameof(env));\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseHsts();\r\n            }\r\n\r\n            app.UseHttpsRedirection();\r\n            app.UseStaticFiles();\r\n            app.UseSpaStaticFiles();\r\n            app.UseAuthentication();\r\n\r\n            app.UseSwagger();\r\n            app.UseSwaggerUI(c =>\r\n            {\r\n                c.SwaggerEndpoint(\"/swagger/v1/swagger.json\", \"demo-me API\");\r\n            });\r\n\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n            });\r\n\r\n            app.UseSpa(spa =>\r\n            {\r\n                spa.Options.SourcePath = \"ClientApp\";\r\n\r\n                if (env.IsDevelopment())\r\n                {\r\n                    spa.UseAngularCliServer(npmScript: \"start\");\r\n                }\r\n            });\r\n        }\r\n\r\n        /// <summary>\r\n        /// Configures application services\r\n        /// </summary>\r\n        /// <param name=\"services\">Services collection</param>\r\n        /// <returns>Service provider</returns>\r\n        public IServiceProvider ConfigureServices(IServiceCollection services)\r\n        {\r\n            if (services == null) throw new ArgumentNullException(nameof(services));\r\n\r\n            services.Configure<AuthenticationSettings>(Configuration.GetSection(\"Authentication\"));\r\n\r\n            services.AddSingleton(Configuration);\r\n\r\n            services.AddDbContextPool<DatabaseContext>(options =>\r\n                options.UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n\r\n            services.AddIdentity<User, IdentityRole>()\r\n                .AddEntityFrameworkStores<DatabaseContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            var tokenSigningKey = Configuration[\"Authentication:TokenSigningKey\"];\r\n\r\n            services.AddAuthentication(options =>\r\n            {\r\n                options.DefaultAuthenticateScheme = \"JwtBearer\";\r\n                options.DefaultChallengeScheme = \"JwtBearer\";\r\n            })\r\n            .AddJwtBearer(\"JwtBearer\", jwtBearerOptions =>\r\n            {\r\n                jwtBearerOptions.TokenValidationParameters = new TokenValidationParameters()\r\n                {\r\n                    ValidateIssuerSigningKey = true,\r\n                    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(tokenSigningKey)),\r\n\r\n                    ValidateIssuer = true,\r\n                    ValidIssuer = Configuration[\"Authentication:Issuer\"],\r\n\r\n                    ValidateAudience = true,\r\n                    ValidAudience = Configuration[\"Authentication:Audience\"],\r\n\r\n                    ValidateLifetime = true,\r\n\r\n                    ClockSkew = TimeSpan.FromMinutes(60)\r\n                };\r\n            })\r\n            .AddFacebook(facebookOptions =>\r\n            {\r\n                facebookOptions.AppId = Configuration[\"Authentication:Facebook:AppId\"];\r\n                facebookOptions.AppSecret = Configuration[\"Authentication:Facebook:AppSecret\"];\r\n            });\r\n\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n\r\n            ConfigureAuthorizationPolicies(services);\r\n\r\n            var apiKeyScheme = new ApiKeyScheme()\r\n            {\r\n                Description = \"JWT Authorization Scheme\",\r\n                Name = \"Authorization\",\r\n                In = \"header\",\r\n                Type = \"apiKey\"\r\n            };\r\n\r\n            services.AddSwaggerGen(c =>\r\n            {\r\n                c.SwaggerDoc(\"v1\", new Info { Title = \"demo-me API\", Version = \"v1\" });\r\n                c.AddSecurityDefinition(\"Bearer\", apiKeyScheme);\r\n            });\r\n\r\n            services.AddAutoMapper();\r\n\r\n            var builder = new ContainerBuilder();\r\n            builder.Populate(services);\r\n\r\n            builder.RegisterModule(new LogicModule());\r\n\r\n            services.AddSpaStaticFiles(configuration =>\r\n            {\r\n                configuration.RootPath = \"ClientApp/dist\";\r\n            });\r\n\r\n            return new AutofacServiceProvider(builder.Build());\r\n        }\r\n\r\n        private static void ConfigureAuthorizationPolicies(IServiceCollection services)\r\n        {\r\n            services.AddAuthorization(options =>\r\n            {\r\n                options.AddPolicy(ClaimPolicies.OwnUser, policy =>\r\n                {\r\n                    policy.Requirements.Add(new OwnUserRequirement());\r\n                });\r\n\r\n                options.AddPolicy(ClaimPolicies.ContentConsumer, policy =>\r\n                {\r\n                    policy.Requirements.Add(new TenantRoleRequirement(TenantRoleType.ContentConsumer));\r\n                });\r\n\r\n                options.AddPolicy(ClaimPolicies.ContentDistributor, policy =>\r\n                {\r\n                    policy.Requirements.Add(new TenantRoleRequirement(TenantRoleType.ContentDistributor));\r\n                });\r\n\r\n                options.AddPolicy(ClaimPolicies.ContentCreator, policy =>\r\n                {\r\n                    policy.Requirements.Add(new TenantRoleRequirement(TenantRoleType.ContentCreator));\r\n                });\r\n\r\n                options.AddPolicy(ClaimPolicies.TenantAdministrator, policy =>\r\n                {\r\n                    policy.Requirements.Add(new TenantRoleRequirement(TenantRoleType.Administrator));\r\n                });\r\n            });\r\n\r\n            services.AddSingleton<IAuthorizationHandler, OwnUserHandler>();\r\n            services.AddSingleton<IAuthorizationHandler, TenantRoleHandler>();\r\n        }\r\n    }\r\n}\r\n```"},{"Id":"7668123572","Type":"IssuesEvent","CreatedAt":"2018-05-14T03:22:45","Actor":"under3415","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3139","RelatedDescription":"Opened issue \"ASP.net core 2.1 rc1: System error in view when exporting to a file\" (#3139) at aspnet/Home","RelatedBody":"When exporting a view to a file an error message appears:\r\nSystem.Collections.Generic.List`1[MyApp.Models.MyModel] IEnumerable<MyModel>\r\n\r\nSee this SO article for more details: \r\nhttps://stackoverflow.com/questions/50320946/how-to-let-user-download-data-to-a-file\r\n\r\nYou can use this project to replicate the issue: \r\nhttps://github.com/under3415/ExportError/\r\n\r\nRun the project, click download link, examine the file for above error message."},{"Id":"7666200921","Type":"IssuesEvent","CreatedAt":"2018-05-13T06:38:05","Actor":"SimonOrdo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3138","RelatedDescription":"Opened issue \"CORS api not sending Access-Control-Allow-Origin header\" (#3138) at aspnet/Home","RelatedBody":"I'm running ASP.NET Core 2.0 (.NET Standard) on an Azure Web App.\r\n\r\nI am not using CORS middleware (i.e. no call to `app.UseCors()`), but I am setting up an access policy like so:\r\n\r\nThe web app runs on `www.mydomain.com` and CORS is set up like...\r\n\r\n```\r\nservices.AddCors(options =>\r\n                {\r\n                    options.AddPolicy(\"ScormStorageCors\",\r\n                        builder => builder.AllowAnyOrigin()\r\n                        .AllowAnyHeader()\r\n                        .AllowAnyMethod()\r\n                        .AllowCredentials());\r\n                });\r\n```\r\n\r\nThe controller is decorated as such:\r\n\r\n```\r\n        [EnableCors(\"ScormStorageCors\")]      \r\n        public async Task<IActionResult> LMSCommands(ScormCommand cmd)\r\n        {\r\n        }\r\n```\r\n\r\nThe Ajax request is dispatched from `storage.mydomain.com` and looks like so:\r\n\r\n```\r\n $.ajax({\r\n            url: serviceURL,\r\n            cache: false,\r\n            type: \"POST\",\r\n            crossDomain: true,\r\n            xhrFields: { withCredentials: true },\r\n            data: cmd,\r\n            async: false, // cross domain requests don't support async\r\n            error: function (xhr, textStatus, settings)\r\n            {\r\n                alert(\"Error: \" + xhr.status + \" \" + xhr.statusText + \" \" + xhr.responseText);\r\n            }\r\n        });\r\n```\r\n\r\nThis works as expected and I can also see an `Access-Control-Allow-Origin` header in the HTTP response to the Ajax request.  Notice I'm allowing \"Any Origin\" in the policy definition.\r\n\r\nIf, however, I set up CORS like so:\r\n\r\n```\r\n      services.AddCors(options =>\r\n                {\r\n                    options.AddPolicy(\"ScormStorageCors\",\r\n                        builder => builder.WithOrigins(new string[] {\"storage.mydomain.com\"})\r\n                        .AllowAnyHeader()\r\n                        .AllowAnyMethod()\r\n                        .AllowCredentials());\r\n                });\r\n```\r\n... and I make the same Ajax call, i get a HTTP 200 AND the action executes, succeeds AND sends back a valid and complete response over the wire (verified with Fiddler), BUT it's missing the `Access-Control-Allow-Origin` header in the HTTP response so the browser won't accept it and the Ajax call ultimately fails.\r\n\r\nAm I doing something wrong or is this a bug in the API?  Any known workarounds?  I really don't want to allow access to my endpoint from outside of my app domains.\r\n\r\nThanks in advance!\r\n"},{"Id":"7665439068","Type":"IssuesEvent","CreatedAt":"2018-05-12T19:05:49","Actor":"chrarnoldus","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3137","RelatedDescription":"Opened issue \"Posting empty file input behaves differently in 2.0 and 2.1\" (#3137) at aspnet/Home","RelatedBody":"When a form is posted that has an empty file input in it, ASP.NET Core 2.0 represents the value as an `IFormFile` of 0 bytes, while 2.1 represents it as a single empty string value.\r\n\r\nWhen the file input has an actual empty file, behaviour is the same (0-byte `IFormFile`).\r\n\r\nI noticed this when trying to update an existing app. Is this an intentional change in behaviour?\r\n\r\n# Steps to reproduce\r\n\r\nCode: https://github.com/chrarnoldus/FileInput\r\n\r\n* Run `dotnet run`\r\n* Go to [localhost:5000](http://localhost:5000) in a browser (I tried Firefox 60.0 and Chrome 66.0)\r\n* Click submit (do NOT select a file)\r\n\r\nWhen the package version in the project file is set to `2.0.8`, the output is:\r\n\r\n```\r\nfile: 0 bytes\r\n```\r\n\r\nwhich means that there are no entries in `Form`, while there is a single 0-byte entry in `Form.Files`. When the version is `2.1.0-rc1-final`, the output is:\r\n\r\n```\r\nfile (1): ''\r\n```\r\n\r\nwhich means that there is a single entry in `Form`, with a single (empty) value."},{"Id":"7663844020","Type":"IssuesEvent","CreatedAt":"2018-05-11T23:41:18","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3136","RelatedDescription":"Opened issue \"ProcessExtensions.KillTree doesn't actually kill the process tree on macOS\" (#3136) at aspnet/Home","RelatedBody":"Root cause of https://github.com/aspnet/DotNetTools/issues/410.\r\n\r\nProcessExtensions.KillTree times out while trying to run `pgrep -P $PID`. There appears to produce some kind of threadpool deadlock when calling `Process.WaitForExit` from within a Dispose call. We should look into other ways of discovering and killing the process tree. On Linux, we can use `/proc`. On macOS, I'm not sure."},{"Id":"7663483127","Type":"IssuesEvent","CreatedAt":"2018-05-11T21:31:49","Actor":"mkArtakMSFT","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3135","RelatedDescription":"Opened issue \"Allow for eventual-consistency for `IFileProvider.Watch`\" (#3135) at aspnet/Home","RelatedBody":"See further discussion here https://github.com/aspnet/Mvc/issues/7028\r\n\r\n\r\n> More generally, only relying on FileSystemWatcher to work out changes is kinda problematic since it is limited by things like buffer sizes - https://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher(v=vs.110).aspx#Anchor_6. We should consider baking in polling alongside events from FSW. It's the only way to guarantee eventual consistency\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7668076031","Type":"IssuesEvent","CreatedAt":"2018-05-14T03:01:53","Actor":"prom3theu5","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2265","RelatedDescription":"Closed issue \"Question: How to invoke hub method, from outside hub i.e. Service?\" (#2265) at aspnet/SignalR","RelatedBody":"Using current prerelease.\r\n\r\nI've a Background Service which subscribes to a Redis Channel, and performs actions based on an enum returned as part of a Class object.\r\nA few of these actions I'd like to invoke server-side.\r\n\r\nCurrently the only way I have figured out how to do this is by passing IHubContext<MyHubType> through the constructor for the Redis Service. This allows me to call hub.Clients.All.SendAsync(method, args);\r\n\r\nHowever, this seems to only invoke a Client-Side method, so I'd need an extra \"Hop\" in my execution, i.e. Send Event to Client -> Client Invokes Server Method -> Server Sends Result to Client.\r\n\r\nIs it not possible to directly Invoke the Server method from my HubContext, cutting out the extra client processing, so the client simply Gets the Result from my Redis Service Invocation?\r\n\r\nWould I have to create a client in my Redis Service?\r\nI'm going to end up with quite a few of these services in the application."},{"Id":"7668053683","Type":"PullRequestEvent","CreatedAt":"2018-05-14T02:52:21","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2261","RelatedDescription":"Merged pull request \"Use correct TaskCompletionSource ctor\" (#2261) at aspnet/SignalR","RelatedBody":"https://github.com/dotnet/corefx/issues/29664\r\n\r\nFixes #2262"},{"Id":"7668053676","Type":"IssuesEvent","CreatedAt":"2018-05-14T02:52:21","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2262","RelatedDescription":"Closed issue \"AckHandler uses the wrong TCS constructor\" (#2262) at aspnet/SignalR","RelatedBody":"It's passing in TaskContinuationOptions when it should be TaskCreationOptions. Otherwise it goes into the state field and has no effect. https://github.com/aspnet/SignalR/blob/5ff5c38325db23392accd17892a064252f34d44e/src/Microsoft.AspNetCore.SignalR.Redis/Internal/AckHandler.cs#L94\r\n\r\nhttps://msdn.microsoft.com/en-us/library/dd449174(v=vs.110).aspx\r\n\r\nCompare to: https://github.com/aspnet/KestrelHttpServer/pull/2567\r\n"},{"Id":"7667949158","Type":"IssuesEvent","CreatedAt":"2018-05-14T02:05:49","Actor":"prom3theu5","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2265","RelatedDescription":"Opened issue \"Question: How to invoke hub method, from outside hub i.e. Service?\" (#2265) at aspnet/SignalR","RelatedBody":"Using current prerelease.\r\n\r\nI've a Background Service which subscribes to a Redis Channel, and performs actions based on an enum returned as part of a Class object.\r\nA few of these actions I'd like to invoke server-side.\r\n\r\nCurrently the only way I have figured out how to do this is by passing IHubContext<MyHubType> through the constructor for the Redis Service. This allows me to call hub.Clients.All.SendAsync(method, args);\r\n\r\nHowever, this seems to only invoke a Client-Side method, so I'd need an extra \"Hop\" in my execution, i.e. Send Event to Client -> Client Invokes Server Method -> Server Sends Result to Client.\r\n\r\nIs it not possible to directly Invoke the Server method from my HubContext, cutting out the extra client processing, so the client simply Gets the Result from my Redis Service Invocation?\r\n\r\nWould I have to create a client in my Redis Service?\r\nI'm going to end up with quite a few of these services in the application."},{"Id":"7666198434","Type":"PullRequestEvent","CreatedAt":"2018-05-13T06:35:39","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2264","RelatedDescription":"Opened pull request \"NTP for benchmarking\" (#2264) at aspnet/SignalR","RelatedBody":"See https://github.com/aspnet/benchmarks/pull/464"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7667726561","Type":"IssuesEvent","CreatedAt":"2018-05-13T23:57:14","Actor":"AswarthaA","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7777","RelatedDescription":"Opened issue \"exceptions when starting project for the first time in IIS Express\" (#7777) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce or link to a repro project:\r\n\r\n\r\n#### Description of the problem:\r\nGetting exceptions when starting the project from locally. \r\n\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker: Information: Executed action SIS.Web.Controllers.HomeController.Index (SIS.Web) in 7183.5607ms\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 8219.2518ms 200 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/app.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/vendor.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/app.bundle.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/amcharts/gantt.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/amcharts/pie.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/amcharts/serial.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/datatables/media/css/jquery.dataTables.min.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/font.min.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/perfect-scrollbar.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/fullcalendar.min.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/jquery.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/perfect-scrollbar.jquery.min.js  \r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n'SIS.Web.exe' (CLR v4.0.30319: SIS.Web.exe): Loaded 'C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\System.IO.MemoryMappedFiles\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.IO.MemoryMappedFiles.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\n'SIS.Web.exe' (CLR v4.0.30319: SIS.Web.exe): Loaded 'C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Runtime.Handles\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Runtime.Handles.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100267.3715ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100225.1655ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100288.5788ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100243.5967ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100221.8418ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100241.4037ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100046.4715ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100046.7863ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/alasql.min.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/datatables/media/js/jquery.dataTables.min.js  \r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: 1.1.2\r\n\r\nMicrosoft.AspNetCore.Mvc: 1.1.3\r\n\r\n"},{"Id":"7667507269","Type":"IssuesEvent","CreatedAt":"2018-05-13T21:21:35","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/3938","RelatedDescription":"Closed issue \"CacheTagHelper should be able to vary by culture\" (#3938) at aspnet/Mvc","RelatedBody":"If a fragment is cached and contains localized content it won't vary. IMO there should be a `vary-by-culture` attribute that would resolve `IRequestCultureProvider`.\n"},{"Id":"7667486049","Type":"IssuesEvent","CreatedAt":"2018-05-13T21:08:34","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7773","RelatedDescription":"Closed issue \"ViewBag can not pass anonymous object\" (#7773) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce or link to a repro project:\r\nIn Controller:\r\n```c#\r\npublic IActionResult Test() {\r\n    ViewBag.Test = new { A = 1, B = 2};\r\n    return View();\r\n}\r\n```\r\nIn View:\r\n```html\r\n<p>A = @ViewBag.Test.A</p>\r\n<p>B = @ViewBag.Test.B</p>\r\n```\r\n#### Description of the problem:\r\nthe result should be:\r\nA = 1\r\nB = 2\r\nbut actually it threw an exception: RuntimeBinderException: 'object' does not contain a definition for 'A'\r\n\r\nthe same, if I use ViewData to pass the anonymous object, and in View I cast the object to dynamic type, it will also throw the exception when I try to access its members.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: 2.1.0-rc1-final\r\n"},{"Id":"7667000308","Type":"IssuesEvent","CreatedAt":"2018-05-13T16:00:09","Actor":"kishan3034","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7776","RelatedDescription":"Opened issue \"question: will you please explain lables using in this repository \" (#7776) at aspnet/Mvc","RelatedBody":""},{"Id":"7666268432","Type":"IssuesEvent","CreatedAt":"2018-05-13T07:38:24","Actor":"marcuslindblom","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7775","RelatedDescription":"Opened issue \"Configure Razor Pages in Area without the Pages folder\" (#7775) at aspnet/Mvc","RelatedBody":"Is it possible to configure Razor pages to find the `Index.cshtml` directly under the folder for the area **name**?\r\n\r\nThis is how my project structure look like without the `Pages` folder.\r\n\r\n- Areas\r\n  - App\r\n      - _Layout.cshtml\r\n      - _ViewImports.cshtml\r\n      - _ViewStart.cshtml\r\n      - Index.cshtml\r\n      - Index.cshtml.cs\r\n- Controllers\r\n- Models\r\n- Views\r\n- wwwroot\r\n- Program.cs\r\n- Startup.cs"},{"Id":"7665935943","Type":"IssuesEvent","CreatedAt":"2018-05-13T02:09:31","Actor":"whizkidwwe1217","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7772","RelatedDescription":"Closed issue \"Services.CreateScope() in IWebhost not working anymore\" (#7772) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce or link to a repro project:\r\n\r\n\r\n#### Description of the problem:\r\nBefore I upgraded to 2.1 preview2, creating a database in startup (Program.cs) works perfectly by instantiating a new service by calling host.Services.CreateScope()\r\n\r\n```csharp\r\npublic static void Main(string[] args)\r\n{\r\n      var host = BuildWebHost(args);\r\n \r\n      using (var scope = host.Services.CreateScope())\r\n      {\r\n             var services = scope.ServiceProvider;\r\n             var ds = services.GetService<CatalogDataSource>();\r\n             /// do some stuff here like migrations etc.\r\n      }\r\n\r\n      host.Run()\r\n}\r\n\r\n public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder()\r\n   ///...... truncated for brevity\r\n```\r\nIn 2.1 preview 2, the return type has been changed from IWebHost to IWebHostBuilder. I tried\r\n\r\n```csharp\r\npublic static void Main(string[] args)\r\n{\r\n      var host = CreateWebHostBuilder(args).Build();\r\n \r\n      using (var scope = host.Services.CreateScope())\r\n      {\r\n             var services = scope.ServiceProvider;\r\n             var ds = services.GetService<CatalogDataSource>();\r\n             /// do some stuff here like migrations etc.\r\n      }\r\n\r\n      host.Run()\r\n}\r\n\r\n public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n   ///...... truncated for brevity\r\n```\r\nThe latter don't work. How can I migrate the database during startup like in the previous version?\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->"},{"Id":"7665649886","Type":"IssuesEvent","CreatedAt":"2018-05-12T21:33:12","Actor":"bitcoinbrisbane","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7774","RelatedDescription":"Opened issue \"System.IO.FileNotFoundException Could not load file or assembly 'Newtonsoft.Json' or one of its dependencies\" (#7774) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce or link to a repro project:\r\nCreate a new MVC project with Visual Studio Community 7.5 build1254 on MacOS\r\nUpdate NuGet packages\r\nRun the web app\r\n\r\n#### Description of the problem:\r\nError is thrown\r\n```\r\nat System.AppDomain.Load (System.String assemblyString, System.Security.Policy.Evidence assemblySecurity, System.Boolean refonly) [0x00033] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/corlib/System/AppDomain.cs:801 \r\n  at System.AppDomain.Load (System.String assemblyString) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/corlib/System/AppDomain.cs:782 \r\n  at (wrapper remoting-invoke-with-check) System.AppDomain.Load(string)\r\n  at System.Reflection.Assembly.Load (System.String assemblyString) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.Reflection/Assembly.cs:589 \r\n  at System.Web.Compilation.BuildManager.LoadAssembly (System.Web.Configuration.AssemblyInfo info, System.Collections.Generic.List`1[T] al) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/System.Web/System.Web.Compilation/BuildManager.cs:1254 \r\n  at System.Web.Compilation.BuildManager.GetReferencedAssemblies () [0x00093] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/System.Web/System.Web.Compilation/BuildManager.cs:1085 \r\n  at System.Web.Compilation.BuildManager.CallPreStartMethods () [0x00010] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/System.Web/System.Web.Compilation/BuildManager.cs:536\r\n```\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc`\r\n5.6.2\r\n\r\n"},{"Id":"7665265326","Type":"IssuesEvent","CreatedAt":"2018-05-12T17:13:14","Actor":"hez2010","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7773","RelatedDescription":"Opened issue \"ViewBag can not pass anonymous object\" (#7773) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce or link to a repro project:\r\nIn Controller:\r\npublic IActionResult Test() {\r\n    ViewBag.Test = new { A = 1, B = 2};\r\n    return View();\r\n}\r\n\r\nIn View:\r\n<p>A = @ViewBag.Test.A</p>\r\n<p>B = @ViewBag.Test.B</p>\r\n\r\n#### Description of the problem:\r\nthe result should be:\r\nA = 1\r\nB = 2\r\nbut actually it threw an exception: RuntimeBinderException: 'object' does not contain a definition for 'A'\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: 2.1.0-rc1-final\r\n"},{"Id":"7665176426","Type":"IssuesEvent","CreatedAt":"2018-05-12T16:18:37","Actor":"whizkidwwe1217","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7772","RelatedDescription":"Opened issue \"Services.CreateScope() in IWebhost not working anymore\" (#7772) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce or link to a repro project:\r\n\r\n\r\n#### Description of the problem:\r\nBefore I upgraded to 2.1 preview2, creating a database in startup (Program.cs) works perfectly by instantiating a new service by calling host.Services.CreateScope()\r\n\r\n```csharp\r\npublic static void Main(string[] args)\r\n{\r\n      var host = BuildWebHost(args);\r\n \r\n      using (var scope = host.Services.CreateScope())\r\n      {\r\n             var services = scope.ServiceProvider;\r\n             var ds = services.GetService<CatalogDataSource>();\r\n             /// do some stuff here like migrations etc.\r\n      }\r\n\r\n      host.Run()\r\n}\r\n\r\n public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder()\r\n   ///...... truncated for brevity\r\n```\r\nIn 2.1 preview 2, the return type has been changed from IWebHost to IWebHostBuilder. I tried\r\n\r\n```csharp\r\npublic static void Main(string[] args)\r\n{\r\n      var host = CreateWebHostBuilder(args).Build();\r\n \r\n      using (var scope = host.Services.CreateScope())\r\n      {\r\n             var services = scope.ServiceProvider;\r\n             var ds = services.GetService<CatalogDataSource>();\r\n             /// do some stuff here like migrations etc.\r\n      }\r\n\r\n      host.Run()\r\n}\r\n\r\n public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n   ///...... truncated for brevity\r\n```\r\nThe latter don't work. How can I migrate the database during startup like in the previous version?\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7667247575","Type":"IssuesEvent","CreatedAt":"2018-05-13T18:34:13","Actor":"eriksendc","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1790","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware An unhandled exception has occurred: Failed to retrieve Facebook user information (BadRequest) Please check if the authentication information is correct and the corresponding Facebook Graph API is enabled.\" (#1790) at aspnet/Identity","RelatedBody":"Hi All,\r\n\r\nStarting May 1st at approximately 1:33pm Eastern US time we started seeing the following error reported in  our logs:\r\n\r\n`Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware An unhandled exception has occurred: Failed to retrieve Facebook user information (BadRequest) Please check if the authentication information is correct and the corresponding Facebook Graph API is enabled.`\r\n\r\nWe made no code changes at that time. This just started happening out of the blue. We know this is affecting users because we've had at least 10 requests for help per day from our users since the 1st. It's becoming a real user experience issue. Any clues?\r\n\r\nWe're on 2.0.1 in general, and specifically for Microsoft.AspNetCore.Authentication.Facebook.\r\n\r\nThanks in advance!\r\n\r\n-Brian Eriksen"},{"Id":"7665895433","Type":"IssuesEvent","CreatedAt":"2018-05-13T01:26:40","Actor":"natelaff","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1789","RelatedDescription":"Opened issue \"Guidance on new 2.1 stuff\" (#1789) at aspnet/Identity","RelatedBody":"Can we get guidance on adding user properties, renaming Identity tables and changing key types with all of these changes for 2.1 (i.e. #1690, #1679)\r\n\r\nIt seems like this was made easier, right? Can we see how it all comes together now?\r\n\r\nThanks!\r\n"},{"Id":"7663541955","Type":"IssuesEvent","CreatedAt":"2018-05-11T21:48:23","Actor":"kspearrin","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1788","RelatedDescription":"Opened issue \"Consider using URL safe base64 tokens instead of URL encoding for email verification\" (#1788) at aspnet/Identity","RelatedBody":"As shown in this email verification example, it is required to URL encode the base64 email confirmation token before sending them in an email:\r\n\r\nhttps://github.com/aspnet/Identity/blob/47060f5e529ee4b872d9fcf66774935dafb051fc/samples/IdentitySample.DefaultUI/Areas/Identity/Pages/Account/Register.cshtml.cs#L100\r\n\r\nThis works the majority of the time. However, at no fault of our own, there are email providers out there that will still re-encode `%` characters that appear in anchor tags with `%25`, resulting in invalid tokens.\r\n\r\nFor example, `==` (original b64 characters) → `%3D%3D` (correct) → `%253D%253D` (incorrect).\r\n\r\nThis is obviously a bug with the email client itself, but we have come across the case several times with multiple different email clients (for example, mailbox.org will do this).\r\n\r\nSince this really effects everyone (though most may not have noticed), I would propose that the team here should consider using URL safe base64 strings by default within the framework. This would eliminate the need for us to manually create our own TokenProvider, which we've had to resort to today. URL safe base64 strings are used, for example, in JWT tokens as a standard. Here is some sample code that we use to achieve it:\r\n\r\n        public static string Base64UrlEncode(byte[] input)\r\n        {\r\n            var output = Convert.ToBase64String(input)\r\n                .Replace('+', '-')\r\n                .Replace('/', '_')\r\n                .Replace(\"=\", string.Empty);\r\n            return output;\r\n        }\r\n\r\n        public static byte[] Base64UrlDecode(string input)\r\n        {\r\n            var output = input;\r\n            // 62nd char of encoding\r\n            output = output.Replace('-', '+');\r\n            // 63rd char of encoding\r\n            output = output.Replace('_', '/');\r\n            // Pad with trailing '='s\r\n            switch(output.Length % 4)\r\n            {\r\n                case 0:\r\n                    // No pad chars in this case\r\n                    break;\r\n                case 2:\r\n                    // Two pad chars\r\n                    output += \"==\"; break;\r\n                case 3:\r\n                    // One pad char\r\n                    output += \"=\"; break;\r\n                default:\r\n                    throw new InvalidOperationException(\"Illegal base64url string!\");\r\n            }\r\n\r\n            // Standard base64 decoder\r\n            return Convert.FromBase64String(output);\r\n        }"},{"Id":"7662609604","Type":"IssuesEvent","CreatedAt":"2018-05-11T18:07:18","Actor":"AdamAnandUS","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1787","RelatedDescription":"Opened issue \"Invalid Token Error when hosted on thrid-party Server\" (#1787) at aspnet/Identity","RelatedBody":"var result = await _userManager.ConfirmEmailAsync(user, code);\r\n\r\nThis code will never work and always ends up with \"Invalid Token\" when hosted from a third-party hosting provider where there is no RDP and where I cannot change any IIS Server Settings. Even if you submit the token manually using a POST instead of get it will fail. I have used encode/decode and examined the token thoroughly.\r\n\r\nIt works perfectly on the local development machine and always fails on the hosted server."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7667994899","Type":"PullRequestEvent","CreatedAt":"2018-05-14T02:26:31","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2569","RelatedDescription":"Merged pull request \"[Platform] Speedups\" (#2569) at aspnet/KestrelHttpServer","RelatedBody":"Speed up the platform application\r\n* Move sync request processing out of `async ProcessRequest` and into `ParseHttpRequest`, also saves passing large structs. https://github.com/aspnet/KestrelHttpServer/pull/2569/commits/b33f673d6c70603f3817fffeda39ada7fe226890\r\n* Use struct adaptor (as per Kestrel) for parsing to convert the interface calls to virtual calls \r\nhttps://github.com/aspnet/KestrelHttpServer/pull/2569/commits/baab995311a680aefa6465c427cbcc55880d7e8a and https://github.com/aspnet/KestrelHttpServer/pull/2569/commits/ae8c0d04c0d78a1ee74eb46a32419b3b650737da\r\n    - `[FAILED: target not direct] IHttpHeadersHandler:OnHeader(struct,struct):this` <-- changes\r\n    - `[below ALWAYS_INLINE size] ParsingAdapter:OnHeader(struct,struct):this +\r\n       [FAILED: target not direct] HttpConnection:OnHeader(struct,struct):this` <-- to\r\n* Remove the virtual calls to make them direct calls; which also causes the `OnHeader` call to inline and elide https://github.com/aspnet/KestrelHttpServer/pull/2569/commits/56182286015c9031769478d196990cb1f07ef1e5\r\n    - `[FAILED: target not direct] HttpConnection:OnHeader(struct,struct):this` <-- changes\r\n    - `[below ALWAYS_INLINE size] BenchmarkApplication:OnHeader(struct,struct):this` <-- to\r\n* Request type to `enum` rather than double `bool` https://github.com/aspnet/KestrelHttpServer/pull/2569/commits/044f1bf57030b5a58369da2b3cb7567ed24bf439\r\n* Pre-init response statics to avoid `CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE` per call https://github.com/aspnet/KestrelHttpServer/pull/2569/commits/efdee91414a7e353816006944f2f0f3cdb295dbf\r\n* Pre-init path statics to avoid `CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE` per call https://github.com/aspnet/KestrelHttpServer/pull/2569/commits/cf910e35d902b8265ff4c6dddca647b912a82250\r\n* Faster Json fall through: Pre-check path lengths prior to calling into `SpanHelpers:SequenceEqual` for match https://github.com/aspnet/KestrelHttpServer/pull/2569/commits/0704d02cac831d10cf7c8f1a861a052eea664170\r\n* Use `CountingBufferWriter<T>` as non-shared generic (via struct wrapper) https://github.com/aspnet/KestrelHttpServer/pull/2569/commits/ff3fdeb66e7d4e65ed27ae85e6f9ffc0d36e22ea\r\n    -  `call     qword ptr [rax]IBufferWriter'1:Advance(int):this` <-- changes\r\n    -  `call     qword ptr [rax]PipeWriter:Advance(int):this` <-- to\r\n* Overwrite buffer if slice required, rather than than using slice as part of ternary \r\nhttps://github.com/aspnet/KestrelHttpServer/pull/2569/commits/58d2ee32a6584f9e4289b8f86b2a89b8ca04a859 https://github.com/aspnet/KestrelHttpServer/pull/2569#issuecomment-388655781\r\n* Pre-init date static \r\nhttps://github.com/aspnet/KestrelHttpServer/pull/2569/commits/fdea4abd6cd8e30a6c2f54f6fe746ab7d23439f7 https://github.com/aspnet/KestrelHttpServer/pull/2569#issuecomment-388659044\r\n* Smaller WriteNumeric method \r\nhttps://github.com/aspnet/KestrelHttpServer/pull/2569/commits/71c9d3d4eb9a799bbe4d8ebd96be78c4ccc56389 https://github.com/aspnet/KestrelHttpServer/pull/2569#issuecomment-388662068\r\n* Store parsing state transition in local (register) rather than class (memory) \r\nhttps://github.com/aspnet/KestrelHttpServer/pull/2569/commits/e450af6a25419d843b7c84db55f2e9683f9d2d8c https://github.com/aspnet/KestrelHttpServer/pull/2569#issuecomment-388664482\r\n* CountingBufferWriter -> smaller BufferWriter (drop unused long field) \r\nhttps://github.com/aspnet/KestrelHttpServer/pull/2569/commits/d9b3c3c6a8308df3cd35a87dfc4c7ee1bfe0e72e https://github.com/aspnet/KestrelHttpServer/pull/2569#issuecomment-388666609"},{"Id":"7666882743","Type":"IssuesEvent","CreatedAt":"2018-05-13T14:51:30","Actor":"trondhindenes","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2571","RelatedDescription":"Opened issue \"Support unix socket endpoint in ASPNETCORE_URLS\" (#2571) at aspnet/KestrelHttpServer","RelatedBody":"As far as I can see, the ASPNETCORE_URLS environment variable only supports `http`-type endpoints.\r\n\r\nOur developers are using Windows for local dev/debug, but we deploy to Linux. We'd like to be able to specify dynamically wether to use a http endpoint, a unix socket, or both. It looks like there's a bunch of code (wiring up `ListenUnixSocket`) that needs to be done in order for getting Kestrel to listen on Unix sockets.\r\nThe problem with this is that with the current option we have to do a bunch of if/then statement in order to dynamically build the correct listeners - IMHO it should simply be an environment variable or a list of appsettings.json settings. The \"magical\" `ASPNETCORE_URLS` should allow a semi-coloned list of listen endpoints and handle both http-type and socket-type endpoints."},{"Id":"7666533259","Type":"IssuesEvent","CreatedAt":"2018-05-13T11:04:39","Actor":"ayende","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2570","RelatedDescription":"Opened issue \"Crash when disposing in 2.1.0-rc1-final\" (#2570) at aspnet/KestrelHttpServer","RelatedBody":"Our unit tests crashed with the following error. \r\nNote that our code has no way to actually capture this error and handle it.\r\n\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. (An existing connection was forcibly closed by the remote host) ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host\r\n   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n   at System.Net.Sockets.Socket.Shutdown(SocketShutdown how)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.Shutdown()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.Abort()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1OutputProducer.Abort(Exception error)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Abort(Exception error)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection.Abort(Exception ex)\r\n   at System.IO.Pipelines.PipeCompletionCallbacks.Execute()\r\n   --- End of inner exception stack trace ---\r\n   at System.IO.Pipelines.PipeCompletionCallbacks.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7667351428","Type":"IssuesEvent","CreatedAt":"2018-05-13T19:43:06","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2344","RelatedDescription":"Reopened issue \"Inserting text from intellisense for @using doesn't work correctly\" (#2344) at aspnet/Razor","RelatedBody":"I have noticed this in Blazor application but then I have checked in ASP.NET Core 2.0 and it looks that the problem exists here too in any cshtml file.\r\n\r\n**Software**\r\nVS 2017 15.7.1\r\nBlazor 0.3.0\r\n\r\n**Steps**\r\n- Create a new Blazor project (I have selected hosted, but it is not important, project name BugReport)\r\n- Open `BugReport.Client\\_ViewImports.cshtml` file. It looks like this:\r\n```\r\n@using System.Net.Http\r\n@using Microsoft.AspNetCore.Blazor\r\n@using Microsoft.AspNetCore.Blazor.Components\r\n@using Microsoft.AspNetCore.Blazor.Layouts\r\n@using Microsoft.AspNetCore.Blazor.Routing\r\n@using BugReport.Client\r\n@using BugReport.Client.Shared\r\n```\r\n- In the new line at the end of the file (line 8) type `@using BugReport.Client.` You will see two options in intellisense. Select any of them.\r\n\r\n\r\n**Expected behaviour**\r\nSelected text is inserted after dot in the current line.\r\n\r\n**Current behaviour**\r\nText is appended to end of line 6. This is the first line which contains the text `@using BugReport.Client` without dot at the end. You can try to write `@using Microsoft.AspNetCore.Blazor.` and you will see that selected text will be appended to the end of line 2 where we have `@using Microsoft.AspNetCore.Blazor`"},{"Id":"7667216206","Type":"IssuesEvent","CreatedAt":"2018-05-13T18:13:41","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2344","RelatedDescription":"Closed issue \"Inserting text from intellisense for @using doesn't work correctly\" (#2344) at aspnet/Razor","RelatedBody":"I have noticed this in Blazor application but then I have checked in ASP.NET Core 2.0 and it looks that the problem exists here too in any cshtml file.\r\n\r\n**Software**\r\nVS 2017 15.7.1\r\nBlazor 0.3.0\r\n\r\n**Steps**\r\n- Create a new Blazor project (I have selected hosted, but it is not important, project name BugReport)\r\n- Open `BugReport.Client\\_ViewImports.cshtml` file. It looks like this:\r\n```\r\n@using System.Net.Http\r\n@using Microsoft.AspNetCore.Blazor\r\n@using Microsoft.AspNetCore.Blazor.Components\r\n@using Microsoft.AspNetCore.Blazor.Layouts\r\n@using Microsoft.AspNetCore.Blazor.Routing\r\n@using BugReport.Client\r\n@using BugReport.Client.Shared\r\n```\r\n- In the new line at the end of the file (line 8) type `@using BugReport.Client.` You will see two options in intellisense. Select any of them.\r\n\r\n\r\n**Expected behaviour**\r\nSelected text is inserted after dot in the current line.\r\n\r\n**Current behaviour**\r\nText is appended to end of line 6. This is the first line which contains the text `@using BugReport.Client` without dot at the end. You can try to write `@using Microsoft.AspNetCore.Blazor.` and you will see that selected text will be appended to the end of line 2 where we have `@using Microsoft.AspNetCore.Blazor`"},{"Id":"7666384523","Type":"IssuesEvent","CreatedAt":"2018-05-13T09:11:45","Actor":"hnviradiya","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2347","RelatedDescription":"Opened issue \"way to pass access_token to typescript file retrieved using razor syntax\" (#2347) at aspnet/Razor","RelatedBody":"What is the way to pass **await Context.GetTokenAsync(\"access_token\")** to typescript file.\r\n\r\nAs storing this to hidden and then use it in typescript file does not seem right to me.\r\n\r\nIs there any other way?\r\n\r\nI want to set it to default header of axios which is in typescript file. But I am only able to access this value using Razor in cshtml."},{"Id":"7663689689","Type":"PullRequestEvent","CreatedAt":"2018-05-11T22:37:02","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2346","RelatedDescription":"Opened pull request \"Added a taghelpers overload to Process and ProcessDesignTime\" (#2346) at aspnet/Razor","RelatedBody":"Fixes https://github.com/aspnet/Razor/issues/2345\r\n\r\nWe want to have a way to specify the taghelper descriptors to use while processing a specific document.\r\n- Added an overload to Process and ProcessDesignTime to take in a list `TagHelperDescriptor`s\r\n- Added the corresponding `CreateCodeDocumentCore` overload\r\n- Added `GetTagHelpers` and `SetTagHelpers` extension methods for CodeDocument\r\n- Added the necessary plumbing to use the taghelpers from the CodeDocument when available and fallback logic.\r\n- Added/updated tests"},{"Id":"7663688174","Type":"IssuesEvent","CreatedAt":"2018-05-11T22:36:28","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2345","RelatedDescription":"Opened issue \"Add a way to specify the tag helpers when processing a document\" (#2345) at aspnet/Razor","RelatedBody":"Currently when we call Engine.Process(RazorProjectItem) the tag helpers are computed everytime from the `ITagHelperFeature`. We want to be able to just specify the tag helpers to use when processing a document and the Engine should prefer that over the feature. This is useful in design time scenarios when we have already computed the tag helpers in the background.\r\n\r\nWe also want to do this for imports but I'll file that separately."},{"Id":"7663623685","Type":"IssuesEvent","CreatedAt":"2018-05-11T22:13:52","Actor":"Andrzej-W","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2344","RelatedDescription":"Opened issue \"Inserting text from intellisense for @using doesn't work correctly\" (#2344) at aspnet/Razor","RelatedBody":"I have noticed this in Blazor application but then I have checked in ASP.NET Core 2.0 and it looks that the problem exists here too in any cshtml file.\r\n\r\n**Software**\r\nVS 2017 15.7.1\r\nBlazor 0.3.0\r\n\r\n**Steps**\r\n- Create a new Blazor project (I have selected hosted, but it is not important, project name BugReport)\r\n- Open `BugReport.Client\\_ViewImports.cshtml` file. It looks like this:\r\n```\r\n@using System.Net.Http\r\n@using Microsoft.AspNetCore.Blazor\r\n@using Microsoft.AspNetCore.Blazor.Components\r\n@using Microsoft.AspNetCore.Blazor.Layouts\r\n@using Microsoft.AspNetCore.Blazor.Routing\r\n@using BugReport.Client\r\n@using BugReport.Client.Shared\r\n```\r\n- In the new line at the end of the file (line 8) type `@using BugReport.Client.` You will see two options in intellisense. Select any of them.\r\n\r\n\r\n**Expected behaviour**\r\nSelected text is inserted after dot in the current line.\r\n\r\n**Current behaviour**\r\nText is appended to end of line 6. This is the first line which contains the text `@using BugReport.Client` without dot at the end. You can try to write `@using Microsoft.AspNetCore.Blazor.` and you will see that selected text will be appended to the end of line 2 where we have `@using Microsoft.AspNetCore.Blazor`"},{"Id":"7663505659","Type":"IssuesEvent","CreatedAt":"2018-05-11T21:37:52","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1747","RelatedDescription":"Closed issue \"Design-Time Directive [Language Feature Proposal]\" (#1747) at aspnet/Razor","RelatedBody":"This is to open some discussion about an idea for a new language construct in Razor.\r\n## Background\r\nWhile most of what we do is focused on compile and run time resolution, some \"dynamic\" things are better handled at design time. This proposal is to create a design-time directive in the Razor language.  The design time directive indicates that the file contents following the directive will be modified by some process. The design-time directive provides hooks and extension points into a cshtml file to enable actions to take place at design time. These can be trigged manually, by Visual Studio, or other processing.\r\n## Design-Time Directive\r\nThe design-time directive is used to communicate with parsers, file processors, and the Razor Engine.\r\n\r\n- It takes the general form: `@[...]`\r\n- It can take parameters: `@[parser, action, parameters]`\r\n- It can have scope: `@[...]{  ...  }`\r\n\r\nThe design-time directive indicates to a process (external or internal) that an area of the file will/can be modified by the process. The directive has no impact on it's own.\r\n\r\nIt is removed at compile time by the Razor Engine from the resulting html.\r\n## Examples\r\n\r\n### Substitution\r\nThe most trivial use of the directive is to insert a group of characters into the file.\r\nGiven - `@[myText] = \"This is some text to repeat.\"`\r\nUsing - `@[myText]`\r\nProduces => `This is some text to repeat.`\r\nThe directive isn't actually replaced. The text is inserted after the directive.\r\nAny characters can be used - text, tags, code.\r\nIn initial cshtml:\r\n```\r\n  @[myText] \r\n```\r\nAfter the substitution process runs, in cshtml:\r\n```\r\n  @[myText]\r\n  This is some text to repeat.\r\n```\r\nIn html:\r\n```\r\n  This is some text to repeat.\r\n```\r\nChanging the text in the assignment changes the results in all files using the directive when the process runs again. Though the directive doesn't technically have impact on it's own, some features like substitution would be built into the environment.\r\n\r\n### Merging\r\nRazor is especially interesting because it can be a mix of many languages - cs, css, js, html. Setting aside the \"correctness\" of putting css or js in an cshtml file, they provide fair examples. In an html/cshtml file, we can include `<script></script>` and `<style></style>` blocks. For the sake of argument, let's say we have a compelling reason to include content inside them in the file. Writing the code in the page is messy, and can be problematic. Worse, many of us prefer Less and Typescript, which we can't write in-page. The `@[]` directive helps.\r\n\r\nWe can write our css in a Less file - `styles.less`, that compiles into `styles.css`, and our js in `scripts.ts`, that compiles into `scripts.js`. We get full editor and intellisense support. In our `Page.cshml` we can include the results.\r\n```\r\n  @[style, \"~/styles.css\"]\r\n     ... The contents of styles.css are copied into the page here, in a <style> block.\r\n  @[script, \"~/scripts.js]\r\n     ... The contents of scripts.js are copied into the page here in a <script> block.\r\n```\r\nThis happens during design - the file content is modified, triggered manually, by the IDE, or an extension. For example, after Web Essentials compiles a Less file into css, it could also update the pages that reference the css file through design-time directives. Though the end result is much like `@render`, we get a local copy that provides access to the internals, and allows modification if we turn \"auto-update\" off.\r\n\r\nSelectors help keep files small. If we just need a couple of styles or functions, we can only copy them.\r\n```\r\n  @[style, \"~/styles.css\", { .form-controls-block, .nav-link } ]\r\n  @[script, \"~/scripts.js\", { datepicker } ]\r\n```\r\nThis would pull the two styles and single function out of the files, and insert them into the page inside`<style>` and `<script>` blocks. This can be helpful in building small, self-contained, and lightweight components.\r\n\r\n### Templates\r\nHtml Templating is another other possibility. This can be used in regular files or in template/scaffolding engines. An overly simple example is the common label-input-validation set - \r\n  `<label asp-for=\"ModelProperty\"><input asp-for=\"ModelProperty\"></input><...validationstuff...`\r\nThere are many ways to approach this, but one could be (in a cshtml) \r\n```\r\n@[]{\r\n  form-line = \"<label asp-for=\"@[param]\" ... \" \r\n}\r\n\r\n@[form-line, param=\"ModelProperty\"]\r\n   ... Fragment is expanded here, with replacement.\r\n```\r\nTemplates are like advanced, dynamic Snippets, and can be defined in the page or in shared files. They can auto update, or be manually triggered.\r\n\r\n### Targeting\r\nWhen we know we are running a file processor over the file, we can define targets. This can make the processor more efficient, and the file easier to parse. The processor can look for tagged areas to process, or even exclude.\r\n```\r\n  @[fileProcessorName, processingAction, exclude] {\r\n       ... This section is skipped by fileProcessorName when executing processingAction \r\n         - if it is aware of design-time directives.\r\n  }\r\n```\r\n## Discussion Scope\r\nThis proposal isn't about any of the specific examples, but about the concept of being able to provide information to processes that manipulate code files. And if so, is `@[]` a good construct to use? More and more, we run processes against these files - from built-in formatting processes, to refactoring, to analysis processes. A standard way to communicate with these processors might be valuable. \r\n\r\n## Outside the Proposal\r\nThe concept can also extend into other languages.\r\nThough advanced, this could allow things like name refactoring for related items in different technologies. For example, a C# class and Typescript class could have a design-time association. Changing one triggers changes to the other. This is a design-time change - the files are modified directly. The association doesn't exist at compile or run time. This would be a long time coming, but shows possible potential of the overall concept. \r\n"},{"Id":"7663458056","Type":"IssuesEvent","CreatedAt":"2018-05-11T21:25:00","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2342","RelatedDescription":"Closed issue \"View Components cannot be included, mystery exception references irrelevant model.\" (#2342) at aspnet/Razor","RelatedBody":"This is a follow up to https://github.com/aspnet/Docs/issues/6278 A quest trying to figure out what is the default search path for ViewComponents\r\n\r\nProbably I am doing something wrong, but I cannot get ViewComponent to be included in a page. \r\n\r\n\r\nI have a folder structure:\r\n```\r\n- Pages\r\n  - Components\r\n    - ExternalSystems\r\n      - Default.cshtml\r\n- Views\r\n  - Shared\r\n    - Components\r\n      - ExternalSystems\r\n        - Default.cshtml\r\n```\r\n\r\nwithin `Pages/Index.cshtml` i'v tried to include this component by trial & error (i'm learning this stuff after all):\r\n```\r\n@await Component.InvokeAsync(\"ExternalSystems\");\r\n@await Component.InvokeAsync(\"/Pages/Components/ExternalSystems\");\r\n@await Component.InvokeAsync(\"/Pages/Components/ExternalSystems/Default\");\r\n@await Component.InvokeAsync(\"/Pages/Components/ExternalSystems/Default.cshtml\");\r\n@await Component.InvokeAsync(\"/Views/Shared/ExternalSystems\");\r\n```\r\n\r\nI expected that exception will show places searched like it does for `@Html.Partial`:\r\n> InvalidOperationException: The partial view 'none' was not found. The following locations were searched: /Pages/none.cshtml /Views/Shared/none.cshtml\r\n\r\nHowever for every single call to `@await Component.InvokeAsync` it spits this exception: `InvalidOperationException: Could not find an 'Invoke' or 'InvokeAsync' method for the view component '<Stripped.Out>.Pages.Identities.IndexModel'.`\r\nFirst of all, it doesn't show me paths searched. Second, wait what? Why are you telling me something about Pages.Identities. Yes, I have that model, but it is nowhere referenced in neither `Pages/Index.cshtml` or View Component i'm trying to include.\r\n\r\nCould someone please provide me with a guidance to determine: How view component paths are searched? For Razor Pages it is not documented, only in [3rd party site](https://www.learnrazorpages.com/razor-pages/view-components). \r\nAnyway it doesn't work that way for me - what would be the debugging steps? Console debug doesn't show anything useful.\r\n\r\ndotnet 2.0.7"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":480,"FavoriteCount":270,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2018-05-14T05:30:13.5808383Z","RunDurationInMilliseconds":8062}