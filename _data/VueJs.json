{"Data":{"Vue-Issues":{"Issues":[{"Id":"357703430","IsPullRequest":false,"CreatedAt":"2018-09-06T15:30:24","Actor":"medhamza911","Number":"8773","RawContent":null,"Title":"change data by javascript or by devtool not connected to data binding","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/689815/](https://jsfiddle.net/50wL7mdz/689815/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nthe code explain it\r\n\r\n### What is expected?\r\nmessage variable change\r\n\r\n### What is actually happening?\r\nnothing\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8773","RelatedDescription":"Closed issue \"change data by javascript or by devtool not connected to data binding\" (#8773)"},{"Id":"357678334","IsPullRequest":false,"CreatedAt":"2018-09-06T15:26:49","Actor":"yangdan8","Number":"8772","RawContent":null,"Title":"添加指令缓存自定义数据到元素dataset中","State":"closed","Body":"### What problem does this feature solve?\r\n在jquery年代，针对ul中的li要绑定相同的事件时，我们绑定的事件会放到ul上，之后增加li也无需再增加绑定事件到li上，大大提升了应用程序性能。而目前vue，angular，react采用的方式都是要求绑定到li上。目前我能采取的方式只能自定义一个my-index属性到li上，在ul上绑定事件，然后通过参数中的event.target获取到该元素，然后获取my-index属性的值，接着通过该my-index索引号去被遍历的数组中取得相关数据，感觉很绕，希望能增加一个v-data指令可以绑定自定义数据到li元素的dataSet属性上，然后可以通过冒泡的事件来取得绑定的数据，该指令绝对能独立创新领先于react和angular俩框架。\r\n\r\n### What does the proposed API look like?\r\n增加一个v-data指令可以绑定自定义数据到li元素的dataSet属性上，然后可以通过冒泡的事件来取得绑定的数据\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8772","RelatedDescription":"Closed issue \"添加指令缓存自定义数据到元素dataset中\" (#8772)"},{"Id":"357664900","IsPullRequest":false,"CreatedAt":"2018-09-06T13:52:10","Actor":"ZenLiuCN","Number":"8771","RawContent":null,"Title":"Document should mentioned MUST define Component NAME when it use itself in .vue file","State":"closed","Body":"### What problem does this feature solve?\r\nhttps://github.com/nuxt/nuxt.js/issues/3854#issue-357627623\r\n\r\nhttps://github.com/vuejs/vue-class-component/issues/267#issue-357654876\r\n\r\n### What does the proposed API look like?\r\n please add this to document\r\n\r\n**MUST define component name in .vue file for nested use**\r\n```typescript\r\n<template>\r\n  <div class=\"hello\">\r\n      <span>{{pro.name}}</span>\r\n    <Tree v-for=\"(p,i) in pro.child\" :key=\"i\" :pro=\"p\"></Tree>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Vue from 'vue'\r\n  import Component from 'vue-class-component'\r\n  @Component({\r\n    name:'Tree', // MUST BE DEFINED !\r\n    props:{\r\n      pro:Object\r\n    }\r\n  })\r\nexport default class Tree extends Vue{\r\n  }\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8771","RelatedDescription":"Closed issue \"Document should mentioned MUST define Component NAME when it use itself in .vue file\" (#8771)"},{"Id":"357661930","IsPullRequest":false,"CreatedAt":"2018-09-06T13:44:28","Actor":"ZenLiuCN","Number":"8770","RawContent":null,"Title":"doument not  mentioned MUST define component NAME for .vue when it's self contained?","State":"closed","Body":"https://github.com/vuejs/vue-class-component/issues/267#issue-357654876\r\n\r\nas this thing i found~~","Url":"https://github.com/vuejs/vue/issues/8770","RelatedDescription":"Closed issue \"doument not  mentioned MUST define component NAME for .vue when it's self contained?\" (#8770)"},{"Id":"357550647","IsPullRequest":false,"CreatedAt":"2018-09-06T11:34:32","Actor":"falstack","Number":"8769","RawContent":null,"Title":"Is it possible don't re-render dom when SSR at client side?","State":"closed","Body":"### What problem does this feature solve?\r\nbest performance\r\n\r\n### What does the proposed API look like?\r\nnothing need change\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8769","RelatedDescription":"Closed issue \"Is it possible don't re-render dom when SSR at client side?\" (#8769)"},{"Id":"357495689","IsPullRequest":false,"CreatedAt":"2018-09-06T06:18:55","Actor":"jason-chang","Number":"8768","RawContent":null,"Title":" Mixin's data isn't available during render","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/JasonChang/6kt70b5L/34/](https://jsfiddle.net/JasonChang/6kt70b5L/34/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee the JSFiddle https://jsfiddle.net/JasonChang/6kt70b5L/34/\r\n\r\n### What is expected?\r\n    Show \"instanceVarValue\" and \"$_mixinVarValue\"\r\n\r\n### What is actually happening?\r\nGot:\r\n\r\n    Show \"instanceVarValue\" and \"\"\r\n\r\nAnd got console error like bllow\r\n```\r\nvue.js:597 [Vue warn]: Property or method \"$_mixinVar\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property. See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n\r\nfound in\r\n\r\n---> <SomeView>\r\n       <Root>\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8768","RelatedDescription":"Closed issue \" Mixin's data isn't available during render\" (#8768)"},{"Id":"357261235","IsPullRequest":false,"CreatedAt":"2018-09-05T14:38:36","Actor":"thedamon","Number":"8767","RawContent":null,"Title":"Allow array/object binding for all (or specific a11y related) attributes","State":"open","Body":"### What problem does this feature solve?\r\nThe docs state that we have special functionality `when v-bind is used with class and style`. These are really useful because class and style are often references to other things. That exact use-case applies to a lot of attributes that are involved in semantic and accessible markup.\r\n\r\nFor instance, the `aria-describedby` attribute which accepts a list of IDs and must have correct spacing to be compatible with all screenreaders; this list is often dynamic and often controlled externally so we would potentially need to combined local describedby with some coming in externally.\r\n\r\nDoing\r\n```\r\n:aria-describedby=\"trim(`${describedBy} ${componentId}-affix`)\"\r\n```\r\nworks, but if describedBy is a Boolean it would have to be evaluated separately to avoid printing 'false'. Essentially we have to rebuild whatever beautiful easiness the Vue engine already does for class and style in order to make sure our code is semantic.\r\n\r\nAttributes that would greatly benefit from this would be most [aria relationship attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques#Relationship_attributes) as well as non-aria relationship type attributes like the `headers` attribute on a table cell.\r\n\r\n```\r\nreturn ['error', 'hint']\r\n        .filter(prop => this[prop])\r\n        .map(prop => `${this.componentId}-${prop}`)\r\n        .join(' ').trim();\r\n```\r\nI have been doing a lot of weird code to get proper strings based on the values of nested data and realized this exact logic is already hidden somewhere in Vue.js. I think writing accessible code is extremely important and Vue should make it as simple as possible to do so. This (and perhaps a community standard way to set predictible IDs automatically) would make establishing semantic relationships between elements/components (the main accessibility challenge with dynamic js driven interfaces that are so popular these days) much simpler.\r\n\r\nBeing able to update the docs to call out these important attributes would be a great opportunity to push people toward writing more accessible code as well.\r\n\r\n### What does the proposed API look like?\r\n```\r\n:aria-describedby=\"[describedBy, `${componentId}-affix`]\"\r\n```\r\n\r\nNot sure if there are specific issues with just allowing any attribute to behave this way, but that would be my preferred solution. If that is too difficult or causes particular performance concerns then adding that behaviour to specific attributes (those called out above, but I would have to review all valid html attributes to see which would make sense) would be a good alternative solution.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8767","RelatedDescription":"Open issue \"Allow array/object binding for all (or specific a11y related) attributes\" (#8767)"},{"Id":"357235902","IsPullRequest":false,"CreatedAt":"2018-09-05T13:42:44","Actor":"lalmat","Number":"8766","RawContent":null,"Title":"Lag during render when using cross sub-array","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Lalmat/eywraw8t/336389/](https://jsfiddle.net/Lalmat/eywraw8t/336389/)\r\n\r\n### Steps to reproduce\r\nI've isolated the bug here : https://jsfiddle.net/Lalmat/eywraw8t/336389/\r\n\r\nTo reproduce :\r\n1) Try to hide/show the hello world message, the redraw is instant\r\n2) Use the load data button\r\n3) Try to hide/show the hello world message, there's a lag that is fully dependant of you CPU velocity. \r\n\r\nIt seems that there's a setTimeout inside vue that cause this lag\r\n\r\n### What is expected?\r\nInstant redraw\r\n\r\n### What is actually happening?\r\nLag during redraw depending of computer CPU\r\n\r\n---\r\nI use cross arrays to avoid using a toggle function. I'm completely aware that this code is kind of tricky but I can't understand why there's a lag...\r\n\r\nThis is why I follow this to experts :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8766","RelatedDescription":"Open issue \"Lag during render when using cross sub-array\" (#8766)"},{"Id":"357213205","IsPullRequest":false,"CreatedAt":"2018-09-05T13:07:10","Actor":"NE-SmallTown","Number":"8765","RawContent":null,"Title":"<component :is=\"..\"> should not set attributes to the root html tag of the component automatically","State":"closed","Body":"### Version\r\n\r\n2.5.2\r\n### Reproduction link\r\n[https://codesandbox.io/s/2oz1p5qpo0](https://codesandbox.io/s/2oz1p5qpo0)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the reproduction link:\r\n\r\n1. Open the devtools\r\n2. The element with the `id=\"foo\"` will have the `propa` attribute\r\n\r\n### What is expected?\r\nThe element with the `id=\"foo\"` doesn't have the `propa` attribute\r\n\r\n### What is actually happening?\r\nIt has.\r\n\r\n---\r\nI know the problem is that the Foo component doesn't declare the `props` fields(I comment in the Foo component), if it has, the element with the `id=\"foo\"` will not have the `propa` attribute, but the **problem** here is that the variable passed to `is` to `<component :is=\"...\">` it not determined, probably it is a component which don't need the `propA` field.\r\n\r\nSo, we should not set any attribute to the root html tag of the component automatically.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8765","RelatedDescription":"Closed issue \"<component :is=\"..\"> should not set attributes to the root html tag of the component automatically\" (#8765)"},{"Id":"357197139","IsPullRequest":false,"CreatedAt":"2018-09-05T12:10:24","Actor":"chenyuan8059","Number":"8764","RawContent":null,"Title":"是否可以考虑添加 data 属性的自动注册功能","State":"closed","Body":"### What problem does this feature solve?\r\n是否可以考虑将模版中表达式添加自动注册的支持，\r\n比如 {{ user.name }} 自动在 data 中注册 user 对象和属性 name\r\n因为有时候在写代码时会出现类似 {{ a.b.c.d.name }} 表达式，需要在 data 属性中预先定义好不然会报错，而且这种书写比较麻烦\r\n\r\n### What does the proposed API look like?\r\n添加类似于 AngularJs 中那样的在模版中写的表达式 {{ user.name }} 在 scope 作用域自动生成相应的对象和属性\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8764","RelatedDescription":"Closed issue \"是否可以考虑添加 data 属性的自动注册功能\" (#8764)"},{"Id":"357186742","IsPullRequest":false,"CreatedAt":"2018-09-05T11:38:02","Actor":"ovarte","Number":"8763","RawContent":null,"Title":"vue component ","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[http://js.no_link]\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvue 在父组件向子组件props传值object的时候，怎么在子组件里created生命周期里获取props传过来的object\r\n\r\n### What is expected?\r\nvue 在父组件向子组件props传值object的时候，怎么在子组件里created生命周期里获取props传过来的object\r\n\r\n### What is actually happening?\r\nvue 在父组件向子组件props传值object的时候，怎么在子组件里created生命周期里获取props传过来的object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8763","RelatedDescription":"Closed issue \"vue component \" (#8763)"},{"Id":"357123451","IsPullRequest":false,"CreatedAt":"2018-09-05T08:39:03","Actor":"cb109","Number":"8762","RawContent":null,"Title":"Key Event wrongly triggered for unknown Modifier/Alias/Keycode on every Key in Safari 9","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/cb109/pen/xarvBZ](https://codepen.io/cb109/pen/xarvBZ)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nPlease open the codepen link in Safari 9 on iOS, which is where I observed the bug (works fine in Chrome 68 on Ubuntu 18).\r\n\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nThere are two inputs, the first working as expected, the second showing some weird behaviour:\r\n\r\nThe first textfield has a handler to fire only when pressing escape. Typing should work as expected, pressing escape while focused should clear the input.\r\n\r\nThe second textfield has a handler for an unknown key code by using an unknown key modifier alias. Typing should work the same as for the first input.\r\n\r\n### What is actually happening?\r\nTyping into the second input in Safari 9 on iOS it will always trigger the `@keyup` handler, thus clearing the input while typing. This feels wrong.\r\n\r\nIMHO this should not happen. If a key modifier-alias/code is not recognized, it should not be triggered by any key.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8762","RelatedDescription":"Open issue \"Key Event wrongly triggered for unknown Modifier/Alias/Keycode on every Key in Safari 9\" (#8762)"},{"Id":"357119625","IsPullRequest":false,"CreatedAt":"2018-09-05T08:28:55","Actor":"thebeautyoflove","Number":"8761","RawContent":null,"Title":"use transition wrapper route-view , when route change only v-enter dom appear,no v-leave","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\nvue 2.5.16\r\nvue-router 3.0.1\r\n\r\n`<transition\r\n\t\t:enter-active-class=\"`animated ${transitionEnterClass}`\"\r\n\t\t:leave-active-class=\"`animated ${transitionLeaveClass}`\"\r\n\t\t@leave=\"leave\"\r\n\t>\r\n\t\t<keep-alive :include=\"cacheList\">\r\n\t\t\t<router-view class=\"router\"></router-view>\r\n\t\t</keep-alive>\r\n\t</transition>`\r\nwhen route change, this can cause page blink because dom with v-leave don't appear,only v-enter。","Url":"https://github.com/vuejs/vue/issues/8761","RelatedDescription":"Closed issue \"use transition wrapper route-view , when route change only v-enter dom appear,no v-leave\" (#8761)"},{"Id":"357061034","IsPullRequest":false,"CreatedAt":"2018-09-05T04:25:36","Actor":"wangyi7099","Number":"8760","RawContent":null,"Title":"The strategy of merging mixins property is incorrect","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/wangyi7099/pen/QVgzYJ](https://codepen.io/wangyi7099/pen/QVgzYJ)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the reproduction link, and then open dev-tool you will see an error `TypeError: Cannot read property 'b' of null` . It means that `b` isn't set value in created hook and the `created` in component `a` dosen't trigger. \r\n\r\n1. We initialized a component, that's right\r\n```javascript\r\n   var a = Vue.component('test-a', {\r\n      data() {\r\n        return {\r\n          a: null\r\n        }\r\n      },\r\n      mounted() {\r\n        console.log(this.a.b);\r\n      },\r\n      mixins: [\r\n        {\r\n          created() {\r\n            this.a = { b: 1 }\r\n          }\r\n        }\r\n      ],\r\n      template: '<div></div>'\r\n    });\r\n```\r\n 2 But when we use `a.mixin` to mix an option that also contians a `mixins` property.  The previous `mixins` will be overridden by the current `mixins` property. This may be cased by using the `default` merge strategy rather than use concat to concat two `mixins` proerty. See relevant code.\r\n\r\nhttps://github.com/vuejs/vue/blob/52719ccab8fccffbdf497b96d3731dc86f04c1ce/src/core/util/options.js#L401\r\n\r\n```javascript\r\n    a.mixin({\r\n      methods: {\r\n        sayBye() {\r\n          console.log('Bye!');\r\n        }\r\n      },\r\n      mixins: [{\r\n        mounted() {\r\n          console.log('aaa');\r\n        }\r\n      }]\r\n    })\r\n```\r\n\r\n3. And when we change the root options by :\r\n```javascript\r\n   Vue.mixin({\r\n      created() {\r\n        this.sayTest();\r\n      },\r\n      methods: {\r\n        sayTest() {\r\n          console.log('hello test!');\r\n        }\r\n      }\r\n    })\r\n```\r\n4. The  root options has changed, and let's jump to the `init` component stage:\r\nhttps://github.com/vuejs/vue/blob/52719ccab8fccffbdf497b96d3731dc86f04c1ce/src/core/instance/init.js#L108\r\nWe can see the `mixins` proerty in `Ctor.extendOptions` has been overrode.\r\n\r\n5. And when we are trying to  print `a.b` occurs an error. \r\n\r\n### What is expected?\r\n`1` should be output.\r\n\r\n### What is actually happening?\r\n `TypeError: Cannot read property 'b' of null`\r\n\r\n---\r\nI will send a PR if I have time\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8760","RelatedDescription":"Open issue \"The strategy of merging mixins property is incorrect\" (#8760)"},{"Id":"357051424","IsPullRequest":false,"CreatedAt":"2018-09-05T03:24:44","Actor":"julian-ca","Number":"8759","RawContent":null,"Title":"Style binding: implicitly assign 'px' as the default unit for numeric values for certain css properties","State":"open","Body":"### What problem does this feature solve?\r\nWhen assigning values to a CSS property via style binding like\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width : width}\"></div>\r\n````\r\n\r\nor using the shorthand syntax...\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width}\"></div>\r\n````\r\n\r\nthis will actually not gonna work because we need to explicitly set the `unit`:\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width : width + 'px'}\"></div>\r\n````\r\n\r\nor via interpolation...\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width : `${width}px`}\"></div>\r\n````\r\n\r\nNow our code becomes more verbose. Combining all the number of occurrences of such binding, it's becoming ridiculous.\r\n\r\nI'm not sure if currently there is an elegant solution for this, but if there is. It would be also good if it is referenced in in the [docs](https://vuejs.org/v2/guide/class-and-style.html).\r\n\r\nIn React, this is the default behavior. It will add 'px' if the `unit` is not specified.\r\n\r\n### What does the proposed API look like?\r\nFor common css properties like `width` and `height`, having vue implicitly assign 'px' to the value it would definitely make our code much more cleaner.\r\n\r\nThis code...\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width}\"></div>\r\n````\r\n\r\nwill be interpreted as:\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width : width + 'px'}\"></div>\r\n````\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8759","RelatedDescription":"Open issue \"Style binding: implicitly assign 'px' as the default unit for numeric values for certain css properties\" (#8759)"},{"Id":"357017114","IsPullRequest":false,"CreatedAt":"2018-09-05T00:56:07","Actor":"dkl520","Number":"8758","RawContent":null,"Title":"scopeslot and slot","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/681226/](https://jsfiddle.net/50wL7mdz/681226/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```javascript\r\n  <script>\r\n  Vue.component(\"tb-heading\", {\r\n            template: `\r\n            <div> \r\n                <slot></slot>\r\n                  <ul> \r\n                    <li v-for=\"(v,i) in list\">\r\n                    <slot :row='v'>  hei</slot>\r\n                    </li>\r\n                   </ul> \r\n                 <slot name='a'></slot>\r\n            </div>\r\n              `,\r\n            props: {\r\n                list: {\r\n                    type: Array,\r\n                    default: () => []\r\n                }\r\n            },\r\n            mounted() {\r\n                console.log(this)\r\n            }\r\n        })\r\n\r\n   new Vue({\r\n            el: '#app',\r\n            data() {\r\n                return {\r\n                    data: ['zhangsan', 'lisi', 'wanwu', 'zhaoliu', 'tianqi', 'xiaoba']\r\n                }\r\n            },\r\n        });\r\n    </script>\r\n ```\r\n```html\r\n <div id=\"app\">\r\n        <tb-heading  :list=\"data\">\r\n            <template slot=\"a\">\r\n                <a href=\"#\">hello world</a>\r\n            </template>\r\n            <p>HELLO worldSSS</p>\r\n            <p>hello</p>\r\n            <template slot-scope=\"scope\">\r\n                <h3>\r\n                    {{scope.row}}\r\n                </h3>\r\n            </template>\r\n        </tb-heading>\r\n    </div>\r\n```\r\n\r\n\r\n\r\n### What is expected?\r\n所有的slot标签都应该被渲染出来\r\n\r\n### What is actually happening?\r\n作用域插槽和具名插槽有被渲染 匿名插槽无法渲染出来，此问题只存在与template语法中 用render不存在该问题\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8758","RelatedDescription":"Closed issue \"scopeslot and slot\" (#8758)"},{"Id":"356987125","IsPullRequest":false,"CreatedAt":"2018-09-04T21:44:00","Actor":"lehni","Number":"8757","RawContent":null,"Title":"Add a way to check if a component responds to an event, or make vm._events public","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIt would be nice to be able to check if a component responds to a given event or not. We can already do so for listeners declared in the template through the `vm.$listeners` object, but the ones registered with `vm.$on()` / `vm.$off()` don't show up in this object, they are stored in the private `vm._events` object.\r\n\r\nI would like to suggest to either add a function that checks if a component responds to a given event, or to make `vm._events` public, and call it `vm.$events`\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\nA method called `vm.$responds(event)` could be considered, returning `true` if a component responds to a given event, `false` otherwise. If an array of strings is passed to this method instead of a string, it could return `true` if the component responds to some of these events.\r\n\r\nAlternatively, the interface could simply be `vm.$events`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8757","RelatedDescription":"Open issue \"Add a way to check if a component responds to an event, or make vm._events public\" (#8757)"},{"Id":"356955247","IsPullRequest":false,"CreatedAt":"2018-09-04T20:01:15","Actor":"dkl520","Number":"8756","RawContent":null,"Title":"slot and slot-scope","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n     \r\n\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8756","RelatedDescription":"Closed issue \"slot and slot-scope\" (#8756)"},{"Id":"356892768","IsPullRequest":true,"CreatedAt":"2018-09-04T16:46:28","Actor":"mattlavallee","Number":"8755","RawContent":null,"Title":"fix(component): clean up memory leak after loading async component completes (fix #8740)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8755","RelatedDescription":"Open PR \"fix(component): clean up memory leak after loading async component completes (fix #8740)\" (#8755)"},{"Id":"356861399","IsPullRequest":false,"CreatedAt":"2018-09-04T15:29:40","Actor":"mknx-io","Number":"8754","RawContent":null,"Title":"Allow mutating props","State":"closed","Body":"### What problem does this feature solve?\r\nI am currently building a SandBox component that allows playing in a live demo with a Vue Component.\r\nThe problem is, I encountered this common error: `\"Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders\"`. I know that it is a security rule of Vue.js, and I am not used to do this. Yeah it's a bad practice.\r\n\r\nThe thing is, by its functionality, my SandBox comp. needs to access these properties and to update them, and the reactivity process must update those values in the child component itself (the SandBox is the parent component with a `<slot>` tag).\r\n\r\nI precise that even with this error, the reactivity is still here, and my values are well updated.\r\nI searched again and again on how to use a workaround for this (most on StackOverflow say I need to use computed propeties or data), but if I don't use prop. values directly, the reactivity is not present, so the child component will not be updated.\r\n\r\nI'm here to ask for help, if somebody knows how to update props by keeping the reactivity system, it should be great!\r\n(Or if the Vue.js devs can add an option or a flag to disable this error, maybe...).\r\n\r\nThanks in advance!\r\n\r\n### What does the proposed API look like?\r\nMaybe a thing like this? A simple flag or option to disable \"avoid mutating props\" error.\r\n\r\n    new Vue({\r\n        el: '...',\r\n        components: { ... },\r\n        options: {\r\n            mutatePropsError: false\r\n        }\r\n    })\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8754","RelatedDescription":"Closed issue \"Allow mutating props\" (#8754)"},{"Id":"356838085","IsPullRequest":false,"CreatedAt":"2018-09-04T14:32:17","Actor":"sts-ryan-holton","Number":"8753","RawContent":null,"Title":"Onsen UI Navigator usage with Vue JS cli project issues","State":"closed","Body":"Hi, I've recently set up a project using the Vue CLI 3.x command and I'm trying to get the Onsen UI navigator (https://onsen.io/v2/api/vue/v-ons-navigator.html) to work inside my `.vue` files.\r\n\r\nI have a `views/Home.vue` file which comes with the project by default, and am trying to get the navigator to work with another page (e.g: `views/About.vue`).\r\n\r\nI've tried linking to another page, the function is working and the new page is loading however there is no animation. Here's my code:\r\n\r\n**My button that links to another page:**\r\n\r\n```\r\n<v-ons-back-button @click=\"onAboutClick();\">About</v-ons-back-button>\r\n```\r\n\r\n**Vue JS script at the bottom of `views/Home.vue`:**\r\n\r\n```\r\nexport default {\r\n    name: 'home',\r\n    methods: {\r\n      onAboutClick: function() {\r\n        this.$router.push({ name:'about' });\r\n      }\r\n    }\r\n  }\r\n```\r\nThis technically links to the page, but doesn't create a push/pull affect.\r\n","Url":"https://github.com/vuejs/vue/issues/8753","RelatedDescription":"Closed issue \"Onsen UI Navigator usage with Vue JS cli project issues\" (#8753)"},{"Id":"356801299","IsPullRequest":false,"CreatedAt":"2018-09-04T13:06:12","Actor":"Delari","Number":"8752","RawContent":null,"Title":"vue close page function","State":"closed","Body":"How does the function cause the page to close on vue?\r\n\r\n     `this.$destroy`\r\n\r\n does not help, removes the contents, the page remains open","Url":"https://github.com/vuejs/vue/issues/8752","RelatedDescription":"Closed issue \"vue close page function\" (#8752)"},{"Id":"356741448","IsPullRequest":false,"CreatedAt":"2018-09-04T10:25:48","Actor":"txs1992","Number":"8751","RawContent":null,"Title":"When the recalculated values of the dependent computed properties have not changed, the calculated properties of all dependent are recalculated.","State":"closed","Body":"### What problem does this feature solve?\r\n\r\nSorry, the following content is not translated accurately, so use Chinese.\r\n\r\n[Example](https://jsfiddle.net/_MT_/6zscxLpj/7/)\r\n\r\n当程序中出现链式计算属性依赖时，我们可能希望的是仅当被依赖的计算属性变更时，它所依赖的计算属性才会重新去计算。而不是因为被依赖的计算属性重新计算链了，所以所有依赖它的计算属性都要重新计算。这样在链式的依赖的计算属性中，可以节省很多计算工作。\r\n\r\n\r\n### What does the proposed API look like?\r\n仅当被依赖的计算属性变更时，它所依赖的计算属性才会重新去计算。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8751","RelatedDescription":"Closed issue \"When the recalculated values of the dependent computed properties have not changed, the calculated properties of all dependent are recalculated.\" (#8751)"},{"Id":"356650683","IsPullRequest":false,"CreatedAt":"2018-09-04T04:52:30","Actor":"liuchihanxiang","Number":"8750","RawContent":null,"Title":"v-html  希望能支持解析组件","State":"closed","Body":"### What problem does this feature solve?\r\n一些动态的html字符串中 需要用到一些封装好的组件  \r\n\r\n### What does the proposed API look like?\r\nv-html\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8750","RelatedDescription":"Closed issue \"v-html  希望能支持解析组件\" (#8750)"},{"Id":"356620951","IsPullRequest":false,"CreatedAt":"2018-09-04T02:31:03","Actor":"david95thinkcode","Number":"8749","RawContent":null,"Title":"Props object change its type inside child component","State":"closed","Body":"### Version\r\n2.5.7\r\n\r\n### Reproduction link\r\n[https://jsbin.com/xafuyar/edit?html,js](https://jsbin.com/xafuyar/edit?html,js)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNormally, you have nothing to do. You just have to look at the htmland js  file inside the repro link.\r\n\r\n\r\n### What is expected?\r\n\" client \" object inside data should have the same value as \" details \" object received as prop inside child component. \r\n\r\n\r\n### What is actually happening?\r\n\"client\" is a function, not an object as \"details\"\r\n\r\n---\r\nI'm using vue JS inside Laravel app. I'm not an expert on VueJs, just a beginner so every additional advices will be apreciate :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8749","RelatedDescription":"Closed issue \"Props object change its type inside child component\" (#8749)"},{"Id":"356590922","IsPullRequest":true,"CreatedAt":"2018-09-03T19:59:58","Actor":"HcySunYang","Number":"8748","RawContent":null,"Title":"fix(#8730): Improve error reporting","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nWe can find this error at compile time.\r\n","Url":"https://github.com/vuejs/vue/pull/8748","RelatedDescription":"Open PR \"fix(#8730): Improve error reporting\" (#8748)"},{"Id":"356528835","IsPullRequest":false,"CreatedAt":"2018-09-03T14:34:16","Actor":"artemanufrij","Number":"8747","RawContent":null,"Title":"Access to 'myCompoennt' of <component is=\"myComponent\"/>","State":"closed","Body":"Hey guys,\r\n\r\nI try to access to the instance inside a component:\r\n``` html\r\n<component ref=\"CompViewer\" is=\"myComponent\"/>\r\n````\r\nrendering works as expected and my app shows myComponent as well. But how can I access to `title` props of `myComponent`\r\n\r\nI tried something like than. But it doesn't work: `this.$refs.CompViewer` is undefined.\r\n``` js\r\ngetChildTitle() {\r\n      console.log (this.$refs.CompViewer.firstChild.title);\r\n    },\r\n```\r\n\r\nHas somebody a tip?\r\n\r\nthanks a lot!","Url":"https://github.com/vuejs/vue/issues/8747","RelatedDescription":"Closed issue \"Access to 'myCompoennt' of <component is=\"myComponent\"/>\" (#8747)"},{"Id":"356382356","IsPullRequest":false,"CreatedAt":"2018-09-03T07:12:43","Actor":"erwinwahyura","Number":"8746","RawContent":null,"Title":"these dependencies not found but it actually not dependencies","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Steps to reproduce\r\ni actually just git pull from other branch\r\nand run yarn serve\r\n\r\n### What is expected?\r\nexpected run well when try to yarn serve vue-project\r\n\r\n### What is actually happening?\r\nThese dependencies were not found:\r\n\r\n* @/views/warehouse/delivery/DeliveryDetail.vue in ./src/router/warehouse-delivery/index.js\r\n* @/views/warehouse/delivery/DeliveryMain.vue in ./src/router/warehouse-delivery/index.js\r\n* @/views/warehouse/delivery/DeliveryParent.vue in ./src/router/warehouse-delivery/index.js\r\n* @/views/warehouse/label/LabelDetail.vue in ./src/router/label/index.js\r\n* @/views/warehouse/label/LabelMain.vue in ./src/router/label/index.js\r\n* @/views/warehouse/label/LabelParent.vue in ./src/router/label/index.js\r\n* @/views/warehouse/order/OrderDetail.vue in ./src/router/warehouse-order/index.js\r\n* @/views/warehouse/order/OrderMain.vue in ./src/router/warehouse-order/index.js\r\n* @/views/warehouse/order/OrderParent.vue in ./src/router/warehouse-order/index.js\r\n\r\nTo install them, you can run: npm install --save @/views/warehouse/delivery/DeliveryDetail.vue @/views/warehouse/delivery/DeliveryMain.vue @/views/warehouse/delivery/DeliveryParent.vue @/views/warehouse/label/LabelDetail.vue @/views/warehouse/label/LabelMain.vue @/views/warehouse/label/LabelParent.vue @/views/warehouse/order/OrderDetail.vue @/views/warehouse/order/OrderMain.vue @/views/warehouse/order/OrderParent.vue\r\n\r\n---\r\nthe error says these dependencies were not found, but actually is not a dependencies it just some router in my vue project\r\ni dont have any clue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8746","RelatedDescription":"Closed issue \"these dependencies not found but it actually not dependencies\" (#8746)"},{"Id":"356311913","IsPullRequest":false,"CreatedAt":"2018-09-02T21:43:20","Actor":"JinXJinX","Number":"8745","RawContent":null,"Title":"vuejs.org home page contains a broken img","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://drive.google.com/file/d/1gZSOEXKtxtsbQd9UNDE2LafK7z-kCsNx/view?usp=sharing](https://drive.google.com/file/d/1gZSOEXKtxtsbQd9UNDE2LafK7z-kCsNx/view?usp=sharing)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. open https://vuejs.org/\r\n2. go to 'Platinum Sponsors'.\r\n\r\nHere is a snapshot https://drive.google.com/file/d/1gZSOEXKtxtsbQd9UNDE2LafK7z-kCsNx/view?usp=sharing\r\n\r\n### What is expected?\r\nan available image link\r\n\r\n### What is actually happening?\r\nbroken image. image src (https://opencollective.com/vuejs/tiers/platinum-sponsors/1/website) returns a 404 not found message\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8745","RelatedDescription":"Closed issue \"vuejs.org home page contains a broken img\" (#8745)"},{"Id":"356246480","IsPullRequest":false,"CreatedAt":"2018-09-02T02:08:13","Actor":"Mikerr1111","Number":"8744","RawContent":null,"Title":"[Feature request] Snap package support ","State":"closed","Body":"I was thinking the setup and install process for Fedora, Ubuntu, and other Linux distros could be improved by having a [Snap package](https://snapcraft.io/) version. \r\n\r\n[Creating a Snap](https://tutorials.ubuntu.com/tutorial/create-your-first-snap#0)\r\n\r\n[Create snaps from your preferred programming language](https://docs.snapcraft.io/build-snaps/languages)\r\n\r\n[Linux distros with Snap support](https://docs.snapcraft.io/core/install)\r\n![snap](https://user-images.githubusercontent.com/18353476/43989596-ec564800-9d01-11e8-89e6-8e0af1434f62.png)\r\n","Url":"https://github.com/vuejs/vue/issues/8744","RelatedDescription":"Closed issue \"[Feature request] Snap package support \" (#8744)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"357802997","IsPullRequest":true,"CreatedAt":"2018-09-06T20:31:04","Actor":"feute","Number":"2379","RawContent":null,"Title":"Add missing semicolon in CSS file from transitions example","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nsmall detail in css file","Url":"https://github.com/vuejs/vue-router/pull/2379","RelatedDescription":"Closed or merged PR \"Add missing semicolon in CSS file from transitions example\" (#2379)"},{"Id":"357617377","IsPullRequest":false,"CreatedAt":"2018-09-06T11:43:45","Actor":"VCodepp","Number":"2378","RawContent":null,"Title":"Iframe problem.","State":"closed","Body":"I'm creating an admin page and I'm using the TyinMCE text editor with the FileBrowser plugins KCfinder.\r\nHowever, when I click the browser button, the window opens as if it is entering the normal site.\r\nCan I make sure some links are not taken into consideration?","Url":"https://github.com/vuejs/vue-router/issues/2378","RelatedDescription":"Closed issue \"Iframe problem.\" (#2378)"},{"Id":"357319734","IsPullRequest":true,"CreatedAt":"2018-09-05T17:00:38","Actor":"sirlancelot","Number":"2377","RawContent":null,"Title":"Indicate that error handlers get an error argument","State":"open","Body":"Update TS declaration to indicate that error handlers also pass the error as the callback's only argument.","Url":"https://github.com/vuejs/vue-router/pull/2377","RelatedDescription":"Open PR \"Indicate that error handlers get an error argument\" (#2377)"},{"Id":"356878682","IsPullRequest":true,"CreatedAt":"2018-09-04T16:05:21","Actor":"kazupon","Number":"2376","RawContent":null,"Title":"docs(ja): update docs","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n/ping @ktsn @potato4d \r\n🙏 \r\n","Url":"https://github.com/vuejs/vue-router/pull/2376","RelatedDescription":"Open PR \"docs(ja): update docs\" (#2376)"},{"Id":"356746060","IsPullRequest":true,"CreatedAt":"2018-09-04T15:04:58","Actor":"aldarund","Number":"2375","RawContent":null,"Title":"fix initial url path for non ascii urls","State":"closed","Body":"Here is demo of issue https://codesandbox.io/s/m2xnyj5zx\r\n\r\nIf click links withing app - active class applies fine for both links\r\nIf load page on /hello - active class applies to hello link fine\r\nIf load page on /тест - active class applies not applied to /тест link and the component not loaded\r\n\r\nThe problem is because on initial load vue-router use window.location.pathname for path, which is uri encoded, so it wont match routes because they are not uri encoded.","Url":"https://github.com/vuejs/vue-router/pull/2375","RelatedDescription":"Closed or merged PR \"fix initial url path for non ascii urls\" (#2375)"},{"Id":"356660866","IsPullRequest":false,"CreatedAt":"2018-09-04T05:46:40","Actor":"lihaitao123321","Number":"2374","RawContent":null,"Title":"跳转当前页面怎么实现？类似小程序能跳转10次","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2374","RelatedDescription":"Closed issue \"跳转当前页面怎么实现？类似小程序能跳转10次\" (#2374)"},{"Id":"356381703","IsPullRequest":false,"CreatedAt":"2018-09-03T12:25:01","Actor":"Fachher","Number":"2373","RawContent":null,"Title":"Registering Vue router hooks prevents vue rendering","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Fachher/vuejsschool/tree/bug/vue-router](https://github.com/Fachher/vuejsschool/tree/bug/vue-router)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ngit clone example project\r\nyarn run serve\r\nopen http://localhost:8080 with your browser\r\nClick on any link => You will see that the content area isn't rendered.\r\n\r\n### What is expected?\r\nClicking on \"home\" or \"about\" should render the content \r\n\r\n### What is actually happening?\r\nContent area isn't rendered\r\n\r\n---\r\nWhen registering the hooks in file class-component-hooks.ts everything works as expected but when I add a hook to one of the component, rendering does not work\r\n\r\n\r\nclass-component-hooks.ts .   \r\nComponent.registerHooks([\r\n    'beforeRouteEnter',\r\n    'beforeRouteLeave',\r\n    'beforeRouteUpdate'\r\n]);\r\n\r\nHome.vue .  \r\nexport default class Home extends Vue {\r\n        beforeRouteEnter(to: Route, from: Route, next: Function) {\r\n            console.log('About has been entered');\r\n        }    \r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2373","RelatedDescription":"Closed issue \"Registering Vue router hooks prevents vue rendering\" (#2373)"},{"Id":"356362072","IsPullRequest":true,"CreatedAt":"2018-09-03T05:27:12","Actor":"xuqingkuang","Number":"2372","RawContent":null,"Title":"fix: go(-1) for AbstractHistory by initial stack","State":"open","Body":"In the original implementation, stack of AbstractHistory was initialized by empty array, it makes go(-1)[1] can't work correctly.\r\n\r\nIn most situation that can't go back, it doesn't matter, but in a special environment(such as running in JavascriptCore of Native App), go(-1) can't work will be a bug.\r\n\r\nThe problem is I haven't tested in SSR, the patch may break something, a better NodeJS determine method is required.\r\n\r\n[1] https://github.com/vuejs/vue-router/blob/dev/src/history/abstract.js#L31 ","Url":"https://github.com/vuejs/vue-router/pull/2372","RelatedDescription":"Open PR \"fix: go(-1) for AbstractHistory by initial stack\" (#2372)"},{"Id":"356349991","IsPullRequest":true,"CreatedAt":"2018-09-03T05:13:34","Actor":"xuqingkuang","Number":"2371","RawContent":null,"Title":"chore: init AbstractHistory for native app usage","State":"closed","Body":"Initial AbstractHistory with \"/\" path, so that vue-router could be running in special environments, such as in Native app mode.\r\n\r\nThe problem is in the go[1] method, original implementation makes go(-1) can't work correctly. \r\n\r\n[1] https://github.com/vuejs/vue-router/blob/dev/src/history/abstract.js#L31","Url":"https://github.com/vuejs/vue-router/pull/2371","RelatedDescription":"Closed or merged PR \"chore: init AbstractHistory for native app usage\" (#2371)"},{"Id":"356049242","IsPullRequest":true,"CreatedAt":"2018-08-31T18:05:36","Actor":"yangdan8","Number":"2370","RawContent":null,"Title":"修复d.ts不能支持tsx的bug","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2370","RelatedDescription":"Closed or merged PR \"修复d.ts不能支持tsx的bug\" (#2370)"},{"Id":"355888130","IsPullRequest":true,"CreatedAt":"2018-08-31T08:32:30","Actor":"brodul","Number":"2369","RawContent":null,"Title":"docs: fix version notice","State":"open","Body":"Minor documentation change.\r\nChange the version compatibility notice. ","Url":"https://github.com/vuejs/vue-router/pull/2369","RelatedDescription":"Open PR \"docs: fix version notice\" (#2369)"},{"Id":"355062947","IsPullRequest":false,"CreatedAt":"2018-08-29T09:10:32","Actor":"rover5056","Number":"2368","RawContent":null,"Title":"beforeRouteEnter does not working","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/ROVER_K/project/editor/ZrMzOx](https://codepen.io/ROVER_K/project/editor/ZrMzOx)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. install @vue/cli v3.0.1\r\n\r\n2.vue create pro  with  vue-router, ts,scss,babel\r\n\r\n\r\n3.just add  these simple code in default About.vue file\r\n\r\n```\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator';\r\n\r\n@Component\r\nexport default class About extends Vue {\r\n  // here I try to fire this function automatic when come in this component \r\n  beforeRouteEnter (to, from, next) {\r\n    console.log('tssssss223')\r\n    next();\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nI create a new project with vue-router by vue-cli v3 . And I 'm try beforeRouteEnter function and I found it does not fired. I just add simple codes on default project... So I am sure it's not other reason.. So is that any wrong with my code or my way to use it?\r\n\r\n### What is actually happening?\r\nThe beforeRouteEnter  does not fired,either beforeRouteEnter.\r\n\r\n \r\n\r\n---\r\nAm I use this function wrong?\r\nI just follow the  guide and I have no idea about\r\nMy first aim is pass the params between the components.But I found this problem,so I create a new default project with VUE-CLI 3, and reproduce this problem again .\r\n\r\nThanks for your reading,wating for your reply~~\r\nBest regards\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2368","RelatedDescription":"Closed issue \"beforeRouteEnter does not working\" (#2368)"},{"Id":"354896341","IsPullRequest":false,"CreatedAt":"2018-08-28T22:20:27","Actor":"benjamindavid","Number":"2367","RawContent":null,"Title":"Base URL containing query parameters breaks routing","State":"closed","Body":"### Version\r\n2.5.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/benjamindavid/pen/YOWgPr](https://codepen.io/benjamindavid/pen/YOWgPr)\r\n\r\n### Steps to reproduce\r\nGo to this URL (containing a test query parameter) https://s.codepen.io/benjamindavid/debug/YOWgPr/mVMbGpDQDqpr?p=test\r\n\r\n### What is expected?\r\nThe page should show \"foo\" as the Foo component is defined for the `/` path and the base URL contains the full path, including query parameters: `/benjamindavid/debug/YOWgPr/mVMbGpDQDqpr?p=test`\r\n\r\n### What is actually happening?\r\nThe `/` route is not matched, the query parameters contained in the base URL don't seem to be properly taken into account.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2367","RelatedDescription":"Closed issue \"Base URL containing query parameters breaks routing\" (#2367)"},{"Id":"354729720","IsPullRequest":false,"CreatedAt":"2018-08-28T13:28:11","Actor":"lordenas","Number":"2366","RawContent":null,"Title":"After build routing does not work in chrome, but works in firefox","State":"closed","Body":"### What problem does this feature solve?\r\nAfter \"npm run build\" try to run index.html\r\nEverything works in Firefox. But in google chrome when you click the link turns file:///C:/index ..\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nVue.use(VueRouter);\r\n\r\nimport Login from './pages/login';\r\nimport Index from './pages/index';\r\n\r\nconst routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tredirect: {name: 'Login'}\r\n\t},\r\n\t{\r\n\t\tname: 'Login',\r\n\t\tpath: '/login',\r\n\t\tcomponent: Login,\r\n\t\tprops: { name: 'Авторизация' }\r\n\t},\r\n\t{\r\n\t\tname: 'Index',\r\n\t\tpath: '/Index',\r\n\t\tcomponent: Index,\r\n\t\tprops: { name: 'Страницы' }\r\n\t}\r\n];\r\n\r\nexport const router = new VueRouter({\r\n\troutes,\r\n\tmode: 'history'\r\n});\r\n\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2366","RelatedDescription":"Closed issue \"After build routing does not work in chrome, but works in firefox\" (#2366)"},{"Id":"354193227","IsPullRequest":true,"CreatedAt":"2018-08-27T06:17:33","Actor":"xlfsummer","Number":"2365","RawContent":null,"Title":"Update type define of RouteConfig.props","State":"open","Body":"In route config, we can pass an object to 'props' property, which key is the name of router view, and type of value is one of boolean, object or function (RoutePropsFunction).\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2365","RelatedDescription":"Open PR \"Update type define of RouteConfig.props\" (#2365)"},{"Id":"354153619","IsPullRequest":false,"CreatedAt":"2018-08-27T01:57:44","Actor":"chaoyang-Rex","Number":"2364","RawContent":null,"Title":"vue hash","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2364","RelatedDescription":"Closed issue \"vue hash\" (#2364)"},{"Id":"353962120","IsPullRequest":false,"CreatedAt":"2018-08-25T09:27:16","Actor":"kalreg69","Number":"2363","RawContent":null,"Title":"beforeEach causes <failed to convert exception to string> on any next() parameter except false or empty string","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/93jwr2okyy](https://codesandbox.io/s/93jwr2okyy)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMore precise description of problem can be found on Stackoverflow under that link:\r\nhttps://stackoverflow.com/questions/52011879/vuerouters-beforeeach-causes-error-failed-to-convert-exception-to-string?noredirect=1#comment90975639_52011879\r\n\r\nThe link to sandbox refers in console \"maximum callstack size exceeded\" - my console says \"failed to convert exception to stirng\", however puting next() or next(false) clears the problem. It generates problems only if next has a any string parameter \r\n\r\n### What is expected?\r\nI expect rerouting to specified component on calling next('/registeredComponent').\r\n\r\n### What is actually happening?\r\nI get an error \r\n[vue-router] uncaught error during route navigation:\r\n<failed to convert string to exception>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2363","RelatedDescription":"Closed issue \"beforeEach causes <failed to convert exception to string> on any next() parameter except false or empty string\" (#2363)"},{"Id":"353297599","IsPullRequest":false,"CreatedAt":"2018-08-24T10:43:48","Actor":"masquevil","Number":"2362","RawContent":null,"Title":"Two feature to make history.state more useful","State":"closed","Body":"### What problem does this feature solve?\r\n1) Run replaceState when app init\r\n`history.state.key` is a very useful value. But `history.state` is null when app init.\r\nAlthough manually run `router.replace` when app created is ok, guards like `router.beforeEach` will run twice, which is not expected.\r\n\r\n2) Change `history.state.key` when replaceState\r\nGenerally, PageA replace to PageB, keep history.state the same key is fine.\r\nBut in this case: PageA -> PageB -> replace to PageC -> back to PageA -> replaceTo PageD ----- It's expected that PageD use the same key with PageA, but actually same with PageB & PageC.\r\nA solution is to change `history.state.key` when replaceState. So that all page-jump will generate a new key.\r\n\r\n### What does the proposed API look like?\r\nno need\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2362","RelatedDescription":"Closed issue \"Two feature to make history.state more useful\" (#2362)"},{"Id":"353287728","IsPullRequest":false,"CreatedAt":"2018-08-23T08:59:41","Actor":"z649319834","Number":"2361","RawContent":null,"Title":"When the operation routing component is lazily loaded, the parameters in the url cannot be obtained through this.$route.query in created and mounted？","State":"closed","Body":"`\r\n// 路由\r\nexport default new Router({\r\nroutes: [\r\n{\r\npath: '/collect',\r\nname: 'CollectLibrary',\r\ncomponent: () => import('../pages/CollectLibrary.vue')\r\n}\r\n]\r\n\r\n`\r\nThe parameters in the url are not obtained through this.$route.query in the component's life cycle 'created' and 'mounted' functions. The parameters can be obtained by 200 milliseconds delay, and also by location. Href resolution.\r\n\r\nIf the component is not doing lazy loading, the parameters on the url can be retrieved immediately in the 'created' and 'mounted' functions\r\n\r\nJust don't know what causes it? I hope you can give me some advice","Url":"https://github.com/vuejs/vue-router/issues/2361","RelatedDescription":"Closed issue \"When the operation routing component is lazily loaded, the parameters in the url cannot be obtained through this.$route.query in created and mounted？\" (#2361)"},{"Id":"353276544","IsPullRequest":false,"CreatedAt":"2018-08-23T08:28:46","Actor":"z649319834","Number":"2360","RawContent":null,"Title":"created和mounted获取不到$route.query数据","State":"closed","Body":"我在项目中对路由组件进行懒加载操作，结果在created和mounted中无法获取路由中的query参数，求大神指点一下！\r\n`\r\n// 路由\r\nexport default new Router({\r\n  routes: [\r\n   {\r\n      path: '/collect',\r\n      name: 'CollectLibrary',\r\n      component: () => import('../pages/CollectLibrary.vue')\r\n    }\r\n]\r\n\r\n`\r\n\r\n然后在组件的生命周期created和mounted函数中通过this.$route.query都获取不到url中的参数,延时200毫秒可以获取到，通过location.href解析也可以获取到；\r\n\r\n如果组件不进行懒加载处理，可以在created和mounted函数中马上获取到url上的参数\r\n\r\n就是不知道什么原因造成？希望可以得到大家的指点","Url":"https://github.com/vuejs/vue-router/issues/2360","RelatedDescription":"Closed issue \"created和mounted获取不到$route.query数据\" (#2360)"},{"Id":"353246710","IsPullRequest":false,"CreatedAt":"2018-08-23T08:02:23","Actor":"masquevil","Number":"2359","RawContent":null,"Title":"Run replaceState when app init","State":"closed","Body":"### What problem does this feature solve?\r\n`history.state.key` is a very useful value.\r\nBut `history.state` is null when app init.\r\nAlthough manually run `router.replace` when app created is ok, guards like `router.beforeEach` will run twice, which is not expected.\r\n\r\n### What does the proposed API look like?\r\nNone\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2359","RelatedDescription":"Closed issue \"Run replaceState when app init\" (#2359)"},{"Id":"353243676","IsPullRequest":false,"CreatedAt":"2018-08-23T06:37:01","Actor":"jafri","Number":"2358","RawContent":null,"Title":"Scrollbehavior does not fire on initial load","State":"closed","Body":"```\r\nconst router = new Router({\r\n  linkActiveClass: 'is-active',\r\n  mode: 'history',\r\n  scrollBehavior (to) {\r\n    console.log(to)\r\n    if (to.hash) {\r\n      return { selector: to.hash }\r\n    } else {\r\n      return { x: 0, y: 0 }\r\n    }\r\n  },\r\n  routes\r\n})\r\n```\r\n\r\nScrollbehavior does not fire on initial load of page, it fires when moving to another page though","Url":"https://github.com/vuejs/vue-router/issues/2358","RelatedDescription":"Closed issue \"Scrollbehavior does not fire on initial load\" (#2358)"},{"Id":"352561967","IsPullRequest":true,"CreatedAt":"2018-08-21T14:19:37","Actor":"crswll","Number":"2357","RawContent":null,"Title":"Add clarification for child props","State":"open","Body":"Just wanted to clarify that when props are used on child routes that the parent props are also passed.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2357","RelatedDescription":"Open PR \"Add clarification for child props\" (#2357)"},{"Id":"352322652","IsPullRequest":false,"CreatedAt":"2018-08-21T07:12:42","Actor":"samit4me","Number":"2356","RawContent":null,"Title":"PascalCase support for Link component","State":"closed","Body":"### What problem does this feature solve?\r\nWould like to be able to use `<RouterLink>` instead of `<router-link>`.\r\n\r\nReason for this is that in the Vue Style Guide PascalCase is recommended and in the latest version of `eslint-plugin-vue@5.0.0-beta.2` this rule is now auto-fixable (e.g. it will convert `<router-link>` into `<RouterLink>`) but this breaks and the link does not work. https://vuejs.org/v2/style-guide/#Component-name-casing-in-templates-strongly-recommended\r\n\r\nWe have gotten around the issue by re-defining the router components like so:\r\n```\r\nconst RouterView = Vue.component('router-view');\r\nconst RouterLink = Vue.component('router-link');\r\nVue.component('RouterView', RouterView);\r\nVue.component('RouterLink', RouterLink);\r\n```\r\n\r\n### What does the proposed API look like?\r\nUpdate component definition in `vue-router` to have both PascalCase and kebab-case:\r\n```\r\nVue.component('router-view', View);\r\nVue.component('RouterView', View);\r\nVue.component('router-link', Link);\r\nVue.component('RouterLink', Link);\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2356","RelatedDescription":"Closed issue \"PascalCase support for Link component\" (#2356)"},{"Id":"351440039","IsPullRequest":false,"CreatedAt":"2018-08-17T02:58:46","Actor":"willjosefi","Number":"2355","RawContent":null,"Title":"watch '$route.query' is triggering when click in some link fragment/anchor like <a href=\"#\">test</a>","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/willjosefi/4shd27gm/9/](https://jsfiddle.net/willjosefi/4shd27gm/9/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust click in the links and check console or the \"logs\"\r\n\r\n### What is expected?\r\nNot trigger\r\n\r\n### What is actually happening?\r\nTriggering when click in some link anchor/fragment that links to the current page\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2355","RelatedDescription":"Open issue \"watch '$route.query' is triggering when click in some link fragment/anchor like <a href=\"#\">test</a>\" (#2355)"},{"Id":"351352594","IsPullRequest":false,"CreatedAt":"2018-08-16T20:37:18","Actor":"719media","Number":"2354","RawContent":null,"Title":"vue-router force full page redirect","State":"closed","Body":"### What problem does this feature solve?\r\nSometimes, I have pages for which I have to place third party scripts which do not have any safe teardown method. I don't want behavior from these scripts to pollute other areas of the application, but I'd still like to use vue-router to control the loading of the page, as well as redirecting TO the page. I would like to have routing leaving this page perform a full page redirect (window.location).\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nAn attribute to force router-link to perform a window.location redirect instead. I'm not sure of the best term for the attribute, but for example:\r\n`<router-link :to=\"{name: 'test'}\" refresh />` #will use window.location = '/test';\r\n\r\nI suppose this could just exist in user-land via a component wrapper over the top of router-link, but this seems like it would be a minor change so I present it for author review.\r\n\r\nThank you\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2354","RelatedDescription":"Closed issue \"vue-router force full page redirect\" (#2354)"},{"Id":"350744214","IsPullRequest":false,"CreatedAt":"2018-08-15T09:33:12","Actor":"masquevil","Number":"2353","RawContent":null,"Title":"Provide `router-alive` component for better performance","State":"closed","Body":"### What problem does this feature solve?\r\nJust like keep-alive.\r\nThe only difference is that use `history.state.key` as `vnode.key`.\r\nIt will use cache when history popstate, and create new component when click `router-link`.\r\n\r\n### What does the proposed API look like?\r\n```\r\n<router-alive>\r\n  <router-view></router-view>\r\n</router-alive>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2353","RelatedDescription":"Closed issue \"Provide `router-alive` component for better performance\" (#2353)"},{"Id":"350324355","IsPullRequest":true,"CreatedAt":"2018-08-14T08:13:34","Actor":"Alex-Sokolov","Number":"2352","RawContent":null,"Title":"docs: [RU] Translation update","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2352","RelatedDescription":"Open PR \"docs: [RU] Translation update\" (#2352)"},{"Id":"350323094","IsPullRequest":true,"CreatedAt":"2018-08-14T08:11:51","Actor":"Jinjiang","Number":"2351","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vue-router/compare/936d99a...bafbff7\r\n/ping @justineo\r\nThanks.","Url":"https://github.com/vuejs/vue-router/pull/2351","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#2351)"},{"Id":"350061608","IsPullRequest":true,"CreatedAt":"2018-08-13T14:46:28","Actor":"MoritzKn","Number":"2350","RawContent":null,"Title":"Add note for props in named views","State":"open","Body":"I searched for this is the docs for quite some time, had to have a coworker tell me and finally find the solution via [stack overflow](https://stackoverflow.com/a/42398362/5587737).","Url":"https://github.com/vuejs/vue-router/pull/2350","RelatedDescription":"Open PR \"Add note for props in named views\" (#2350)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"356482547","IsPullRequest":true,"CreatedAt":"2018-09-03T12:16:11","Actor":"xiaoshude","Number":"1396","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"open","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1396","RelatedDescription":"Open PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1396)"},{"Id":"356481173","IsPullRequest":true,"CreatedAt":"2018-09-03T12:13:04","Actor":"xiaoshude","Number":"1395","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"closed","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1395","RelatedDescription":"Closed or merged PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1395)"},{"Id":"355847188","IsPullRequest":false,"CreatedAt":"2018-09-03T07:21:12","Actor":"Fachher","Number":"1391","RawContent":null,"Title":"Registering Vuex hooks prevents vue rendering.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Fachher/vuejsschool.git](https://github.com/Fachher/vuejsschool.git)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nyarn run serve.\r\nopen browser and open http://localhost:8080\r\nYou will see that only the navigationbar is displayed but content is missing.\r\n\r\n### What is expected?\r\nSee the content of each route\r\n\r\n### What is actually happening?\r\ncontent is not rendered\r\n\r\n---\r\nRemoving hook methods from About.vue, Home.vue and ShipmentList.vue leads to working app. This means just adding the hooks does not lead to this behavior.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1391","RelatedDescription":"Closed issue \"Registering Vuex hooks prevents vue rendering.\" (#1391)"},{"Id":"349784014","IsPullRequest":true,"CreatedAt":"2018-09-01T15:52:07","Actor":"gcoguiec","Number":"1372","RawContent":null,"Title":"ci: migration to CircleCI 2","State":"closed","Body":"Since CircleCI 1 will be retired **August 31th**, I've done a couple of things (based on #1264 initial work) to achieve at least a first version of this migration.\r\n\r\n#### Done\r\n\r\n- [x] As DRY as possible.\r\n- [x] Test-reporting when no additional code was needed.\r\n- [x] Parallel running.\r\n- [x] Build-matrix against multiple node versions (currently `8:latest` and `10:latest`).\r\n- [x] Drops old `circle.yml` file.\r\n\r\n#### To be done (or not)\r\n\r\n- Test reporting for jasmine tasks (?)\r\n- Coverage [reporting](https://github.com/vuejs/vue/blob/dev/.circleci/config.yml#L37) (?)\r\n\r\n#### Additional Notes\r\n\r\nI've upgraded `eslint` and `eslint-plugin-vue-libs` to [Vue versions](https://github.com/vuejs/vue/blob/dev/package.json#L94) (junit reporter was slightly broken in previous `eslint` version) and some files were fixed in the process.","Url":"https://github.com/vuejs/vuex/pull/1372","RelatedDescription":"Closed or merged PR \"ci: migration to CircleCI 2\" (#1372)"},{"Id":"355913234","IsPullRequest":false,"CreatedAt":"2018-09-01T04:09:50","Actor":"imatmati","Number":"1393","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"### What problem does this feature solve?\r\nPrevent wrong placement of mapping helpers in component.\r\nI came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once .\r\n\r\n### What does the proposed API look like?\r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\n\r\nBut to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1393","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1393)"},{"Id":"348208324","IsPullRequest":true,"CreatedAt":"2018-09-01T04:06:32","Actor":"keng0o","Number":"1369","RawContent":null,"Title":"fix: Add key to v-for","State":"closed","Body":"Updates:\r\n---\r\n- Add key to v-for","Url":"https://github.com/vuejs/vuex/pull/1369","RelatedDescription":"Closed or merged PR \"fix: Add key to v-for\" (#1369)"},{"Id":"349750182","IsPullRequest":true,"CreatedAt":"2018-09-01T04:06:06","Actor":"simplesmiler","Number":"1371","RawContent":null,"Title":"Make tests runnable on Windows","State":"closed","Body":"For some reason selenium struggles to find phantomjs binary, so I had to specify it manually.","Url":"https://github.com/vuejs/vuex/pull/1371","RelatedDescription":"Closed or merged PR \"Make tests runnable on Windows\" (#1371)"},{"Id":"356049299","IsPullRequest":true,"CreatedAt":"2018-09-01T03:52:33","Actor":"yangdan8","Number":"1394","RawContent":null,"Title":"修复d.ts不能支持tsx的bug","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1394","RelatedDescription":"Closed or merged PR \"修复d.ts不能支持tsx的bug\" (#1394)"},{"Id":"355885735","IsPullRequest":false,"CreatedAt":"2018-08-31T08:24:23","Actor":"imatmati","Number":"1392","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"Hi,\r\n\r\nI would to propose an enhancement. I came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once ... But to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone. Why not something like : \r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\nIt would insert correctly the helpers in the component.\r\nHave a nice day.\r\n\r\nIvan Matmati\r\n","Url":"https://github.com/vuejs/vuex/issues/1392","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1392)"},{"Id":"355824650","IsPullRequest":false,"CreatedAt":"2018-08-31T03:15:23","Actor":"myadomin","Number":"1390","RawContent":null,"Title":"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js](https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\n\r\n\r\n### What is expected?\r\ndelete the todoItem\r\n\r\n### What is actually happening?\r\ndelete the todoItem and anothre todoItem\r\n\r\n---\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\nit will execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nin page vuex\\examples\\todomvc\\store\\mutations.js, mutation:removeTodo.\r\nthe mutation:removeTodo will execute twice, so will delete two todoItem.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1390","RelatedDescription":"Open issue \"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem\" (#1390)"},{"Id":"355551023","IsPullRequest":true,"CreatedAt":"2018-08-31T03:02:07","Actor":"myadomin","Number":"1388","RawContent":null,"Title":"fix bug: examples/todomvc","State":"closed","Body":"page vuex\\examples\\todomvc\\store\\mutations.js,  method:removeTodo.\r\nwhen edit some one todoItem, clear the todoItem, then press keyboard enter.\r\nbecause execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nso here will execute twice, so will delete two todoItem.\r\nso i suggest change here to .","Url":"https://github.com/vuejs/vuex/pull/1388","RelatedDescription":"Closed or merged PR \"fix bug: examples/todomvc\" (#1388)"},{"Id":"355668368","IsPullRequest":false,"CreatedAt":"2018-08-30T16:45:36","Actor":"matsieftw","Number":"1389","RawContent":null,"Title":"Documentation Never Actually Walks You Through Set Up","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://thereisntoneandyoushouldnotrequirethis.com](https://thereisntoneandyoushouldnotrequirethis.com)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Go to your docs.\r\n2. Read them.\r\n3. Think about whether they would be helpful to someone trying to set up a Vue app.\r\n\r\n### What is expected?\r\nHelpful documentation walking you through set up of a Vue app using Vuex.\r\n\r\n### What is actually happening?\r\nA lot of info on concepts and no info on actually bringing in Vuex to your application.\r\n\r\n---\r\nVue's documentation in general never actually walks you through setting anything up. It provides a few code snippets and assumes you'll understand. The documentation has been the biggest source of my frustration while using Vue since it never actually explains anything.\r\n\r\nFor example, on the Vuex installation page, sandwiched between CDN/package manager installation and building from source, you've put that Vuex needs to be instantiated in a module set up. You've provided zero context for this. Is this in the store? Is this for every file you need to access the store in? More importantly, it shouldn't be on the installation page, let alone sandwiched in between different installation methods. Vue's documentation is riddled with these issues. Unfortunately, I still don't actually know enough about how Vue actually works to be able to contribute to the documentation in any way. If I didn't have to use Vue for the project I am on, I would be using React, Redux, & RxJs and have access to meaningful, better written documentation that bothers to walk you through the set up. If Vue actually wants to gain any real traction, you're going to need to actually show folks how to use and set up your tools.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1389","RelatedDescription":"Open issue \"Documentation Never Actually Walks You Through Set Up\" (#1389)"},{"Id":"355404917","IsPullRequest":false,"CreatedAt":"2018-08-30T05:04:44","Actor":"lin-123","Number":"1384","RawContent":null,"Title":"mutate setHours by date.setHours() will not trigger view update ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/lin-123/pen/RYoaOK?editors=1111](https://codepen.io/lin-123/pen/RYoaOK?editors=1111)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n## code\r\n- store.js\r\n```javascript\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as mutations from './mutations'\r\nimport * as actions from './actions'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    date: new Date()\r\n  },\r\n  mutations,\r\n  actions,\r\n  strict: process.env.NODE_ENV !== 'production'\r\n})\r\n```\r\n\r\n- mutations.js\r\n```javascript\r\nexport const SET_HOUR = (state, hours) => {\r\n  state.date.setHours(hours)\r\n}\r\n```\r\n\r\n- components\r\n```html\r\n<template>\r\n<div class=\"map\">\r\n  <h2>{{dateFull}}</h2>\r\n  <button @click=\"updateHours\">update hours</button>\r\n</div>\r\n</template>\r\n<script>\r\nimport L from 'leaflet'\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  data: () => ({\r\n    hours: 0\r\n  }),\r\n  computed: {\r\n    ...mapState({\r\n      date: state => state.date\r\n    })\r\n  },\r\n  methods: {\r\n    updateHours() {\r\n      this.hours  = 1\r\n      this.$store.commit('SET_HOURS', this.hours)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\ndate should be change on view when i mutate date\r\n\r\n### What is actually happening?\r\nview have no change when i mutate date by state.date.setHours(hours).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1384","RelatedDescription":"Closed issue \"mutate setHours by date.setHours() will not trigger view update \" (#1384)"},{"Id":"355413687","IsPullRequest":true,"CreatedAt":"2018-08-30T05:01:01","Actor":"leecade","Number":"1387","RawContent":null,"Title":"fix: confused namespace for get module","State":"closed","Body":"see #1386","Url":"https://github.com/vuejs/vuex/pull/1387","RelatedDescription":"Closed or merged PR \"fix: confused namespace for get module\" (#1387)"},{"Id":"355412566","IsPullRequest":false,"CreatedAt":"2018-08-30T05:00:49","Actor":"leecade","Number":"1386","RawContent":null,"Title":"Confused namespace for get module","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue](https://codesandbox.io/s/vue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. create files in store folder\r\n\r\n`store/foo/index.js`\r\n\r\n`store/foo/a.js`\r\n\r\n2. get module by namespace\r\n\r\n```js\r\ncomputed: {\r\n   ...mapState('foo/a', []), // correct\r\n   ...mapState('foo', []), // correct\r\n   //  ...mapState('foo/index', []), // not works here\r\n}\r\n```\r\n\r\n### What is expected?\r\nit make sense if `mapState('foo/index', [])` works as `mapState('foo', [])`\r\n\r\n### What is actually happening?\r\n`mapState('foo/index', [])` not work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1386","RelatedDescription":"Closed issue \"Confused namespace for get module\" (#1386)"},{"Id":"355411714","IsPullRequest":false,"CreatedAt":"2018-08-30T03:36:45","Actor":"leecade","Number":"1385","RawContent":null,"Title":"Confused namespace for module","State":"closed","Body":"## Version\r\n\r\n3.0.1\r\n\r\nReproduction link\r\n\r\n## Steps to reproduce\r\n\r\n1. create file in store folder\r\n\r\n`store/foo/index.js`\r\n\r\n`store/foo/a.js`\r\n\r\n2. get module by namespace\r\n\r\n```js\r\ncomputed: {\r\n   ...mapState('foo/a', []), // correct\r\n   ...mapState('foo', []), // correct\r\n   //  ...mapState('foo/index', []), // not works here\r\n}\r\n```\r\n\r\n## What is expected?\r\n\r\nit make sense if `mapState('foo/index', [])` works as `mapState('foo', [])`\r\n\r\n## What is actually happening?\r\n\r\n`mapState('foo/index', [])` not work","Url":"https://github.com/vuejs/vuex/issues/1385","RelatedDescription":"Closed issue \"Confused namespace for module\" (#1385)"},{"Id":"355221437","IsPullRequest":false,"CreatedAt":"2018-08-29T15:43:11","Actor":"james-wasson","Number":"1383","RawContent":null,"Title":"Vuex loop dependencies are slow","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/james_wasson/2ut7rbx5/](https://jsfiddle.net/james_wasson/2ut7rbx5/)  \r\nPlease refer to the console for more information while running this fiddle.  \r\nYou can control what is being logged by changing the flags at the top of the fiddle\r\n\r\n### Steps to reproduce\r\n* create a loop adding a component\r\n* add > 8 Vuex dependencies per component row\r\n* when changing the list removing rows is slow\r\n\r\n### What is expected?\r\nDepending on Vuex should be of similar speed to passing as props.  \r\nHere is an example of passing by props: https://jsfiddle.net/james_wasson/8g2fxr9n/\r\n\r\n### What is actually happening?\r\nDepending on the number of rows the removal time increase to more than 100 milliseconds, and at very high numbers of rows (> 400) removal can take up to 500 milliseconds\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1383","RelatedDescription":"Open issue \"Vuex loop dependencies are slow\" (#1383)"},{"Id":"354375091","IsPullRequest":false,"CreatedAt":"2018-08-29T01:05:01","Actor":"devinholloway","Number":"1381","RawContent":null,"Title":"store.watch not functioning in SSR mode","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/devinholloway/vuex-watch-ssr](https://github.com/devinholloway/vuex-watch-ssr)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClone the github account. Follow instructions in README\r\n\r\n### What is expected?\r\nstore.watch to execute its callback when the state its watching chanes\r\n\r\n### What is actually happening?\r\ncallback is not called on state update only in SSR\r\n\r\n---\r\nThis is a project using Quasar for SSR. preFetch methods execute server side, much like the fetch methods in Nuxt. The purpose of this is to execute multiple server side functions where one depends on the results of the other.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1381","RelatedDescription":"Closed issue \"store.watch not functioning in SSR mode\" (#1381)"},{"Id":"354683228","IsPullRequest":false,"CreatedAt":"2018-08-28T11:13:18","Actor":"sergioIGZ","Number":"1382","RawContent":null,"Title":"this is undefined inside the getters","State":"open","Body":"### What problem does this feature solve?\r\nif (somehow) you can access to this inside getters then you could use plugins inside getters (as you can now in actions or mutations)\r\n\r\n### What does the proposed API look like?\r\nI'm not sure how would i solve this, maybe this is a bug.\r\nThe thing is that inside a getter you can use this.$myPlugin.whatever()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1382","RelatedDescription":"Open issue \"this is undefined inside the getters\" (#1382)"},{"Id":"351720920","IsPullRequest":true,"CreatedAt":"2018-08-25T09:00:18","Actor":"Alex-Sokolov","Number":"1376","RawContent":null,"Title":"docs: [RU] Translation fixes","State":"closed","Body":"Fix links anchors","Url":"https://github.com/vuejs/vuex/pull/1376","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation fixes\" (#1376)"},{"Id":"353990294","IsPullRequest":true,"CreatedAt":"2018-08-25T08:59:53","Actor":"kkkisme","Number":"1380","RawContent":null,"Title":"Update logger.d.ts","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1380","RelatedDescription":"Closed or merged PR \"Update logger.d.ts\" (#1380)"},{"Id":"353618860","IsPullRequest":false,"CreatedAt":"2018-08-24T02:21:10","Actor":"Xiaolin-Zhu","Number":"1379","RawContent":null,"Title":"There is a error when I use ...mapState","State":"closed","Body":"`...mapState({\r\n            inviteeCount: state => state.inviteeCount,\r\n        })`\r\n\r\nError is \r\nUncaught TypeError: Object(...) is not a function","Url":"https://github.com/vuejs/vuex/issues/1379","RelatedDescription":"Closed issue \"There is a error when I use ...mapState\" (#1379)"},{"Id":"353167919","IsPullRequest":false,"CreatedAt":"2018-08-23T01:17:09","Actor":"philBrown","Number":"1378","RawContent":null,"Title":"Direct mutation of state not throwing error in strict mode","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/r1z0a4gp/7/](https://jsfiddle.net/r1z0a4gp/7/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the JSFiddle example, type into the text box.\r\n\r\nThe input's `v-model` is bound to a computed property with getter and setter. The getter maps directly to `$store.state.foo` and the setter dispatches the \"setFoo\" action.\r\n\r\nThe action directly modifies `context.state.foo` instead of committing a mutation.\r\n\r\n\r\n\r\n### What is expected?\r\nStrict mode is enabled so I would expect to see an error about directly mutating state outside of a mutation\r\n\r\n### What is actually happening?\r\nNo errors are reported and state is modified\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1378","RelatedDescription":"Closed issue \"Direct mutation of state not throwing error in strict mode\" (#1378)"},{"Id":"352092756","IsPullRequest":false,"CreatedAt":"2018-08-20T11:21:30","Actor":"dracarys26","Number":"1377","RawContent":null,"Title":"vuex 支持es6的map 吗","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/issues/1377","RelatedDescription":"Closed issue \"vuex 支持es6的map 吗\" (#1377)"},{"Id":"350321174","IsPullRequest":true,"CreatedAt":"2018-08-14T08:39:00","Actor":"Jinjiang","Number":"1375","RawContent":null,"Title":"Applied #1361 to all languages","State":"closed","Body":"#1361 ","Url":"https://github.com/vuejs/vuex/pull/1375","RelatedDescription":"Closed or merged PR \"Applied #1361 to all languages\" (#1375)"},{"Id":"350267631","IsPullRequest":false,"CreatedAt":"2018-08-14T03:24:57","Actor":"eddygithub","Number":"1374","RawContent":null,"Title":"user state doesn't auto change until I manual reload the page","State":"closed","Body":"<template>\r\n    <b-navbar toggleable=\"md\" type=\"light\" variant=\"light\">\r\n        <b-navbar-nav>\r\n            <b-nav-item href=\"#\">Home</b-nav-item>\r\n        </b-navbar-nav>\r\n\r\n        <b-navbar-nav class=\"ml-auto\">\r\n            <b-nav-form>\r\n                <b-form-input class=\"mr-sm-2\" type=\"text\" placeholder=\"Search...\" v-model=\"searchText\"></b-form-input>\r\n                <b-button variant=\"outline-success\" type=\"submit\" @click=\"search\">Search</b-button>\r\n            </b-nav-form>\r\n            <b-button v-if=\"user\" variant=\"outline-danger\" @click=\"logout\">Logout</b-button>\r\n        </b-navbar-nav>\r\n    </b-navbar>\r\n</template>\r\n\r\n<script>\r\n    import firebase from 'firebase'\r\n\r\n    export default {\r\n        name: \"navbar\",\r\n        data() {\r\n            return {\r\n                searchText: '',\r\n                user: firebase.auth().currentUser || false\r\n            }\r\n        },\r\n        methods: {\r\n            search: function () {\r\n                console.log(\"search for \".concat(this.searchText))\r\n            },\r\n            logout: function () {\r\n                firebase.auth().signOut().then(() => {\r\n                    this.$router.replace('login')\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n</script>","Url":"https://github.com/vuejs/vuex/issues/1374","RelatedDescription":"Closed issue \"user state doesn't auto change until I manual reload the page\" (#1374)"},{"Id":"349842520","IsPullRequest":true,"CreatedAt":"2018-08-12T20:44:22","Actor":"evgenyt1","Number":"1373","RawContent":null,"Title":"Improve strong-typing of getters","State":"open","Body":"See small diff. At least in TS3 this improves makes `getters` strongly typed (still allowing generic getters calls).","Url":"https://github.com/vuejs/vuex/pull/1373","RelatedDescription":"Open PR \"Improve strong-typing of getters\" (#1373)"},{"Id":"348708875","IsPullRequest":false,"CreatedAt":"2018-08-08T12:42:45","Actor":"Simsteve7","Number":"1370","RawContent":null,"Title":"Rename mutation to action in typings of store.subscribeAction","State":"closed","Body":"https://github.com/vuejs/vuex/blob/f626da2a764368be77c71579686c694dc4dde1f9/types/test/index.ts#L42","Url":"https://github.com/vuejs/vuex/issues/1370","RelatedDescription":"Closed issue \"Rename mutation to action in typings of store.subscribeAction\" (#1370)"},{"Id":"348181677","IsPullRequest":true,"CreatedAt":"2018-08-07T06:32:29","Actor":"keng0o","Number":"1368","RawContent":null,"Title":"fix:Add key to v-for","State":"closed","Body":"Updates:\r\n---\r\n- Add key to v-for","Url":"https://github.com/vuejs/vuex/pull/1368","RelatedDescription":"Closed or merged PR \"fix:Add key to v-for\" (#1368)"},{"Id":"347625501","IsPullRequest":false,"CreatedAt":"2018-08-04T15:06:30","Actor":"hootlex","Number":"1367","RawContent":null,"Title":"Docs Suggestion: Split Namespaced Example into smaller sections","State":"open","Body":"### What problem does this feature solve?\r\nRight now the [namespaced example](https://vuex.vuejs.org/guide/modules.html#namespacing) is quite condensed. I believe it'd be helpful to split it into multiple, smaller sections - probably one for each asset like `getters`, `actions`, etc.\r\n\r\nSome parts might be repetitive but we will have the chance to describe some things more in depth and provide more examples in the future.\r\n\r\nWhat do you think? @ktsn @simplesmiler @chrisvfritz\r\n\r\n### What does the proposed API look like?\r\ndocs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1367","RelatedDescription":"Open issue \"Docs Suggestion: Split Namespaced Example into smaller sections\" (#1367)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-07T05:30:47.9854303Z","RunDurationInMilliseconds":3050}