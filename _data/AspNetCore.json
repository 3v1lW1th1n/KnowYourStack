{"Data":{"Blog":{"FeedItems":[{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7045999656","Type":"IssuesEvent","CreatedAt":"2018-01-02T03:30:48","Actor":"aspnet-hello","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2734","RelatedDescription":"Opened issue \"Publish the spec behind the Micrsoft Querystring Parsing and Serialization rules\" (#2734) at aspnet/Home","RelatedBody":"_From @nathanaeljones on Friday, May 30, 2014 11:56:39 AM_\r\n\r\nCould we get some light shed on the whys/hows of [querystring handling logic in vNext](https://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNet.PipelineCore/Infrastructure/ParsingHelpers.cs#L558)? Previous [versions](http://referencesource.microsoft.com/#System.Web/xsp/system/Web/HttpValueCollection.cs#159) have been inconsistent at best, and this seems like a great chance to fix things.\n\nAn all-encompassing parsing strategy may be possible, but inadvisable, as the logic could not be clearly communicated to developers. I would suggest instead that parsing/serialization formats be named specifically for their appropriate use. \n\nFor example, requests with content-type `application/x-www-form-urlencoded` must follow the [WHATWG parsing/serialization spec](http://url.spec.whatwg.org/#application/x-www-form-urlencoded-0) &mdash; which differs from php, ruby, node, python, classic asp, and each implementation in asp.net vNow, most of which have differing rules on one or more points:\n1. Handling of duplicate keys. (error, replace, concatenate, or build list)?\n2. Hash serialization. `key[a]=1&key[b]=2` produces `key = {a=1, b=2}` in some implementations\n3. [Array serialization](http://stackoverflow.com/questions/6243051/how-to-pass-an-array-within-a-query-string). `a=1&a=2`, `a=1,2`, `a[]=1&a[]=2`, `a[1]=1`, a[2]=2` are all valid ways to represent an array value on different platforms. \n4. Handling of invalid characters (error, or pretend they were URL encoded)?\n5. Encoding of reserved characters (Most frameworks fail to url encode reserved characters correctly)\n6. Order preservation - some developers (inadvisably) rely on the order of querystring pairs. A recent instance of this is in the latest version of Umbraco. \n7. Case preservation and case sensitivity. \n8. URL decoding pass count (AFAIK, only ASP.NET WebForms messes this up). Ideally,  `+`, `%20` -> ` ` should be the only lossy operation. \n\nOnce we know the team's opinions on querystrings (and paths - and PathInfos), I think there are a lot of developers that would be happy to pitch in with unit tests and compatibility profiles. I imagine that [Javascript/Node](https://github.com/joyent/node/blob/f7ede33f09187cd9b1874982e813380cd292ef17/lib/querystring.js#L142) and [php](https://github.com/php/php-src/blob/419d98b291b4dd36e63f34d72445bd954f3ce3e2/ext/standard/string.c#L4445) compatibility would be the highest priority. \n\nOf course, this is easiest if we can ensure that we do not lose any data between the network packet and the developer. I'm looking at you, IIS.\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#67_"},{"Id":"7045954571","Type":"IssuesEvent","CreatedAt":"2018-01-02T03:00:26","Actor":"aspnet-hello","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2733","RelatedDescription":"Opened issue \"Review and update form parsing logic\" (#2733) at aspnet/Home","RelatedBody":"_From @Tratcher on Tuesday, August 26, 2014 12:32:12 PM_\r\n\r\nsrc/Microsoft.AspNet.WebUtilities/ParsingHelpers.cs has at least one place where it calls char.IsWhiteSpace, but this allows many strange Unicode characters. Review this parsing code and update it to be more accurate.\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#119_"},{"Id":"7045954069","Type":"IssuesEvent","CreatedAt":"2018-01-02T03:00:12","Actor":"aspnet-hello","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2732","RelatedDescription":"Opened issue \"Logging: Tracking state changes for http context\" (#2732) at aspnet/Home","RelatedBody":"_From @yishaigalatzer on Tuesday, December 2, 2014 2:53:52 PM_\r\n\r\nMoved from aspnet/MVC#1630.\n\nThe general design idea is to add logging to HttpContext when certain things happen.\n### When the following things change log in verbose\n#### HttpContext\n\nAuthenticate\nAbort\nDispose\nSetFeature\nAcceptWebSocket ?\n#### HttpResponse\n\nStatus code changed\nHeader replaced (which is also added)\nOnSendingHeaders firing - Should probably be in the server.\nOnSendingHeaders registrations\nBody replaced\nSignIn\nSignOut\nChallenge\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#153_"},{"Id":"7045953618","Type":"IssuesEvent","CreatedAt":"2018-01-02T02:59:56","Actor":"aspnet-hello","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2731","RelatedDescription":"Opened issue \"Need to document which OWIN keys are supported in the translation layer\" (#2731) at aspnet/Home","RelatedBody":"_From @Eilon on Friday, December 12, 2014 9:34:08 AM_\r\n\r\nSomething like this table:\n\nhttp://katanaproject.codeplex.com/wikipage?title=OWIN%20Keys&referringTitle=Documentation\n\n@Tratcher FYI from our discussion.\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#156_"},{"Id":"7045953356","Type":"IssuesEvent","CreatedAt":"2018-01-02T02:59:45","Actor":"aspnet-hello","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2730","RelatedDescription":"Opened issue \"Strongly typed Request/ResponseHeader properties should return readonly collections\" (#2730) at aspnet/Home","RelatedBody":"_From @Tratcher on Thursday, January 15, 2015 10:49:04 AM_\r\n\r\nUsers may write the following code:\n`httpRequest.GetTypedHeaders().SetCookie.Add(myCookie);`\n\nHowever, this will fail silently because SetCookie.get returns a collection of parsed values that is disconnected from the underlying response headers collection.\n\nThe correct code is:\n`httpRequest.Headers.Append(HeaderNames.SetCookie, myCookie);`\nor\n`httpRequest.GetTypedHeaders().SetCookie = myCookies;`\n\nTo make sure users do not experience hard to debug silent failures have the IList returned by these properties be read only. We could also switch to IEnumerable.\n\nAlternative: It might be possible to return an IList implementation that was actually bound to the underlying header collection and did live modifications, but that would be significantly more complicated. We can make that work later if there is a strong desire for it.\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#169_"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7046077797","Type":"IssuesEvent","CreatedAt":"2018-01-02T04:24:37","Actor":"kgrvr","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1259","RelatedDescription":"Opened issue \"On rejoin group, first message not broadcasting\" (#1259) at aspnet/SignalR","RelatedBody":"### Title\r\nOn rejoin group, first message not broadcasting\r\n\r\n### Functional impact\r\nIf I join again any group after leaving it, the first message which I send does not broadcast to any joined connection. All other messages after that message gets broadcasted easily. Sometimes even second or third message is also lost.\r\n\r\n### Minimal repro steps\r\n1. Join a group and send a message\r\n2. Leave a group and join it again\r\n3. Sends a message again, first message is lost. Second message gets delivered\r\n\r\n### Expected result\r\nIt should broadcast the message to every connected connection.\r\n\r\n### Actual result\r\nMessage is getting lost\r\n\r\n### Further technical details\r\nI've invoked hub's method from client (Typescript) as :\r\n\r\n`    this._hubConnection.invoke('SendMessage', 'Hello, World!');`\r\n\r\nIn my message hub:\r\n\r\n    ```\r\npublic async Task SendMessage(string message) {\r\n            try {\r\n\t            //...\r\n                // Send message to all users in group\r\n                await Clients.Group(message.GroupId).InvokeAsync(\"ReceiveMessage\", message);\r\n\r\n                // ...\r\n            }\r\n            catch (Exception ex) {\r\n                throw ex;\r\n            }\r\n    }\r\n```\r\n\r\nAnd on my client:\r\n\r\n```\r\n    this._hubConnection.on('ReceiveMessage', (data: any) => {\r\n            console.log(data);\r\n    });\r\n```\r\n\r\nThe problem is no error is thrown, but the message gets lost somewhere. Am I doing anything wrong?"},{"Id":"7043747420","Type":"IssuesEvent","CreatedAt":"2017-12-31T12:10:19","Actor":"aleha84","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1258","RelatedDescription":"Opened issue \"dotnet core 1.1 web application all requests in pending state\" (#1258) at aspnet/SignalR","RelatedBody":"I'll duplicate my aspnet core [issue #2317](https://github.com/aspnet/Home/issues/2317) here for better coverage.\r\n\r\nYear ago started to develop web service (WEB API) based on dotnet core 1.0 with push notifications ability.\r\nUsed for this SignalR, because I was already familiar with this library from .net framework.\r\n\r\nUnfortunately there wasn't any official release for this library under dncore, so i used this:\r\n\"Microsoft.AspNetCore.SignalR.Server\": \"0.2.0-*\" from https://dotnet.myget.org/F/aspnetcore-ci-dev/api/v3/index.json\r\n\r\nAll works fine as expected. After a few month of development migrated to dot net core 1.1. All was fine.\r\nWeb application is used like a service (widget). Requests send to it from other web site (making initial requests, get js scripts, establishing websocket connection). Month ago was first release to production environment (windows server 2016). Over 500-600 simultaneous connections handling fine.\r\n\r\nAfter this time, lots of work was maded (mostly busines logic fixes and replacing EF to Dapper). And was discovered that locally on dev environment no more then 9-10 websocket connection isn't possible to establish. All other requests to service is in pending state (GET requests). If one previous connection is closed, then next recives response.\r\n\r\nIf i remove establishing of websocket connection from js ($.connection.hub.start()), then all is fine, no pending requests. No exception, no errors or warnings in logs. IIS logs also don't have any entries, like no requests was made.\r\n\r\nOn production, then release was applied, the situation is similar. Just pending state for all requests.\r\n\r\nIf switching back to branch without new features (without Dapper), locally it still handle only 10 connections, but on production all is fine, all the same 500-600 connections are stable.\r\n\r\nDev environment dotnet core sdk versions installed: 1.0.1, 1.0.4, 1.1.0, 1.1.5, 1.1.6, 2.0.2, 2.0.3, 2.1.2\r\nServer dotnet core runtime versions installed: 1.0.4, 1.0.5, 1.0.8, 1.1.1, 1.1.2, 1.1.5, 2.0.3\r\n\r\ndeps.json main diff between working and failing version:\r\n\r\n```\r\n\"Dapper/1.50.2\": {\r\n            \"dependencies\": {\r\n              \"System.Collections\": \"4.3.0\",\r\n              \"System.Collections.Concurrent\": \"4.3.0\",\r\n              \"System.Collections.NonGeneric\": \"4.3.0\",\r\n              \"System.Data.SqlClient\": \"4.3.1\",\r\n              \"System.Dynamic.Runtime\": \"4.3.0\",\r\n              \"System.Linq\": \"4.3.0\",\r\n              \"System.Reflection\": \"4.3.0\",\r\n              \"System.Reflection.Emit\": \"4.3.0\",\r\n              \"System.Reflection.Emit.Lightweight\": \"4.3.0\",\r\n              \"System.Reflection.Extensions\": \"4.3.0\",\r\n              \"System.Reflection.TypeExtensions\": \"4.3.0\",\r\n              \"System.Runtime\": \"4.3.0\",\r\n              \"System.Runtime.Extensions\": \"4.3.0\",\r\n              \"System.Runtime.InteropServices\": \"4.3.0\",\r\n              \"System.Text.RegularExpressions\": \"4.3.0\",\r\n              \"System.Threading\": \"4.3.0\",\r\n              \"System.Xml.XDocument\": \"4.3.0\",\r\n              \"System.Xml.XmlDocument\": \"4.0.1\"\r\n            },\r\n            \"runtime\": {\r\n              \"lib/netstandard1.3/Dapper.dll\": {}\r\n            },\r\n            \"compile\": {\r\n              \"lib/netstandard1.3/Dapper.dll\": {}\r\n            }               \r\n}\r\n.....\r\n\"compile\": {\r\n          \"ref/netstandard1.0/System.Reflection.Emit.Lightweight.dll\": {}\r\n        },\r\n.....\r\n\"Dapper/1.50.2\": {\r\n      \"type\": \"package\",\r\n      \"serviceable\": true,\r\n      \"sha512\": \"sha512-6VcCiiOxVhgMwgMCuQuaff8I5IyDamrzeOjuUH1iMExh8R5TJqwkVCpwdVJGQdwSCqWsQA/PerrrK7T6mONthQ==\"\r\n    },  \r\n}\r\n```\r\n\r\nCreated separated branch to migrate from 1.1 to 2.0 and use Microsoft.AspNetCore.SignalR -Version 1.0.0-alpha2-final, but there is no direct compatibility, and lack of functionality (at least not possible to send message to specified range of connections ids). So lots of additional work and tests needed, and I'm not sure if it will help at all."},{"Id":"7041653272","Type":"PullRequestEvent","CreatedAt":"2017-12-29T23:00:51","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1257","RelatedDescription":"Opened pull request \"Invoke Multiple Users\" (#1257) at aspnet/SignalR","RelatedBody":"Part of #734 "},{"Id":"7041488972","Type":"IssuesEvent","CreatedAt":"2017-12-29T21:24:59","Actor":"mortenbirkelund","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1256","RelatedDescription":"Opened issue \"Extend Chatsample with groups\" (#1256) at aspnet/SignalR","RelatedBody":"Hi\r\nI have a project where I need to use the presence functionality from the chatsample on multiple pages. Therefore I would like to extend the presence functionality from the chatsample, but I am uncertain as to how the hub should be implemented.\r\nThe idea is that the hub can be access from different pages (representing a game between 2 contestant). \r\n\r\nTherefore the user should be added to a group that is specific for the game he is visiting and whenever the `OnUsersJoined` and `OnUsersLeft` is called, it should only be for other users in the same group. \r\n\r\nI just cant figure out how what should be altered in the current chatsample? I hope that i am not the only one that could be needing this functionality, and therefore it could be beneficial with a good example. \r\n\r\nThis is a description of the process. \r\n1. A user visits http://www.domain.com/game/{id}\r\n2. The user is instantly added to the group {id}\r\n3. Only the users in the same group (id) are alerted that a new user joined. \r\n4. When a user leaves, only the users in the group are alerted that a user have left. \r\n\r\nThanks in advance for your time.\r\n"},{"Id":"7040361971","Type":"IssuesEvent","CreatedAt":"2017-12-29T13:30:04","Actor":"Nickname863","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1255","RelatedDescription":"Closed issue \"Signalr SyntaxError in Google Chrome\" (#1255) at aspnet/SignalR","RelatedBody":"It could just be me using the js Client wrong. But when i am adding the client to HTML like this:\r\n\r\n![image](https://user-images.githubusercontent.com/33596703/34428641-5b77a044-ec4f-11e7-86da-13025b89963a.png)\r\n\r\nI get \r\n\r\n![image](https://user-images.githubusercontent.com/33596703/34428672-a312eaee-ec4f-11e7-9483-b1525caca6d1.png)\r\n\r\nHowever when i load the Site in Firefox i don't get this Error and the client seems to work just fine."},{"Id":"7039148433","Type":"IssuesEvent","CreatedAt":"2017-12-29T03:21:22","Actor":"Nickname863","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1255","RelatedDescription":"Opened issue \"Signalr SyntaxError in Google Chrome\" (#1255) at aspnet/SignalR","RelatedBody":"It could just be me using the js Client wrong. But when i am adding the client to HTML like this:\r\n\r\n![image](https://user-images.githubusercontent.com/33596703/34428641-5b77a044-ec4f-11e7-86da-13025b89963a.png)\r\n\r\nI get \r\n\r\n![image](https://user-images.githubusercontent.com/33596703/34428672-a312eaee-ec4f-11e7-9483-b1525caca6d1.png)\r\n\r\nHowever when i load the Site in Firefox i don't get this Error and the client seems to work just fine."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7046097972","Type":"IssuesEvent","CreatedAt":"2018-01-02T04:40:24","Actor":"AceCoderLaura","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7177","RelatedDescription":"Opened issue \"Loading Controllers at Runtime\" (#7177) at aspnet/Mvc","RelatedBody":"Loading a dll into the appdomain does **not** cause the controller within to be hosted.\r\n\r\n`foreach (var dll in Directory.GetFiles(@\"bin\\Debug\\net461\\Controllers\"))`\r\n`{`\r\n`    var fileBytes = File.ReadAllBytes(dll);`\r\n`    System.Reflection.Assembly.Load(fileBytes);`\r\n`}`\r\n\r\nWhat do I have to do to get it hosting as though it were referenced at compile time?\r\n\r\nSample here:\r\nhttps://www.dropbox.com/s/nph2le655p219io/MvcSample.7z?dl=0"},{"Id":"7045975673","Type":"PullRequestEvent","CreatedAt":"2018-01-02T03:14:23","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7176","RelatedDescription":"Opened pull request \"Updated Razor Pages areas for compatibility switches\" (#7176) at aspnet/Mvc","RelatedBody":""},{"Id":"7045823664","Type":"PullRequestEvent","CreatedAt":"2018-01-02T01:24:49","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7175","RelatedDescription":"Opened pull request \"Move option for JSON errors to MvcJsonOptions\" (#7175) at aspnet/Mvc","RelatedBody":"This was in the wrong place - JSON formatters have their own options\r\ntype already.\r\n\r\nMoved the option to MvcJsonOptions and updated the naming + defaults to\r\nreflect our plan.\r\n\r\nAlso did a bunch of general cleanup on these tests, which were a bit\r\nsloppy."},{"Id":"7045366102","Type":"PullRequestEvent","CreatedAt":"2018-01-01T18:42:18","Actor":"ctaggart","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7174","RelatedDescription":"Opened pull request \"pack .pdb files into regular .nupkg\" (#7174) at aspnet/Mvc","RelatedBody":"https://github.com/aspnet/Universe/issues/131 is `Source Index and pack .pdb files into regular .nupkg`. The first part was resolved in September by https://github.com/aspnet/Universe/issues/553 `Enable source link for all 'src' projects that produce DLLs`. This pull request completes by using the `AllowedOutputExtensionsInPackageBuildOutputFolder` property that became available with the dotnet sdk 2.0.2 in November."},{"Id":"7045307911","Type":"PullRequestEvent","CreatedAt":"2018-01-01T17:48:44","Actor":"ctaggart","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7173","RelatedDescription":"Opened pull request \"disable the net461 tests\" (#7173) at aspnet/Mvc","RelatedBody":"Trying to get the CI to be green by temporarily disabling the net461 tests until someone fixes them.\r\n#7172"},{"Id":"7045250086","Type":"IssuesEvent","CreatedAt":"2018-01-01T16:56:01","Actor":"ctaggart","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7172","RelatedDescription":"Opened issue \"please keep CI green in 2018\" (#7172) at aspnet/Mvc","RelatedBody":"Last time the dev branch passed CI tests was December 10. That was 22 days ago. Projects that do not maintain CI are much more difficult to contribute to. Here is how far I have to zoom out at https://github.com/aspnet/Mvc/commits/dev to see the last green CI checks.\r\n\r\n![image](https://user-images.githubusercontent.com/80104/34469296-a834b04a-eefa-11e7-923b-2bfe08707b63.png)\r\n"},{"Id":"7044403075","Type":"IssuesEvent","CreatedAt":"2018-01-01T00:02:09","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7171","RelatedDescription":"Opened issue \"Improve MVC logging at INFO level\" (#7171) at aspnet/Mvc","RelatedBody":"I think we have a few important gaps in the logging info that comes from MVC by default (`INFO`). You can **almost** use the log statements to understand your performance, but we need to add 3-4 things to make is useful.\r\n\r\nHere's the current state - with some of my notes..\r\n```\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 GET http://localhost:5000/Home/About\r\n-- The above comes from hosting and represents the entire request\r\n\r\n-- We're missing right here a log statement that MVC has selected an action and started executing it. We have logging for this, but it's only on in debug. Ideally this would include the routing information as well, as this is commonly mixed up by users.\r\n\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]\r\n      Executing action method Sample.Controllers.HomeController.About (Sample) with arguments ((null)) - ModelState is Valid\r\n-- The above represents the beginning of executing the action method. This text isn't create and should be improved. We should improve formatting to look more like an actual method signature. The ((null)) is just gross. We should consider simplifying ModelState is Valid to use 'valid' or 'invalid'\r\n\r\n-- We're missing right here a log statement that the action method finished and the timing. We actually have this but it's only on in debug.\r\n\r\ninfo: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewResultExecutor[1]\r\n      Executing ViewResult, running view at path /Views/Home/About.cshtml.\r\n\r\n-- We're missing right here a log statement about the time that the action result took to execute. I think most of our action results have these, but they should include a duration in ALL cases, even if the timing is always trivial. This reassures folks even if there will never be a problem\r\n\r\n-- the below represents the end of the MVC pipeline\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action Sample.Controllers.HomeController.About (Sample) in 96.351ms\r\n      \r\n-- The below comes from hosting and represents the entire request\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 5099.661ms 200 text/html; charset=utf-8\r\n```\r\n\r\nProblems:\r\n- Can't easily tell when MVC matched an action and what route it used\r\n- Can't tell how much time was spend in user code (action method)\r\n- Can't tell how much time was spend in user code (views)\r\n\r\nThese are all things I think you should get at a glance at the info level.\r\n\r\n-----\r\n\r\nThings I would change:\r\n- [ ] [this statement](https://github.com/aspnet/Mvc/blob/c8cabde1f16980e8596f31b697786b049bd9d997/src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreLoggerExtensions.cs#L107) needs to be INFO and provide more information\r\n- [ ] [this statement](https://github.com/aspnet/Mvc/blob/c8cabde1f16980e8596f31b697786b049bd9d997/src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreLoggerExtensions.cs#L127) should have its formatting and text improved, it's clunky in common cases\r\n- [ ] [this statement](https://github.com/aspnet/Mvc/blob/c8cabde1f16980e8596f31b697786b049bd9d997/src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreLoggerExtensions.cs#L132) needs to be INFO and should include timing\r\n- [ ] Add timings to the 'end' logging of all action results, and make sure it's on at INFO level.\r\n\r\nOverall, this means that MVC would end up with 6 logging statements for INFO level. Does that seem like too much? If we need to optimize this, we could probable get it down to 4. I do think that the missing timings at INFO level are a problem."},{"Id":"7041915259","Type":"IssuesEvent","CreatedAt":"2017-12-30T02:56:25","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6547","RelatedDescription":"Closed issue \"Re-introduce HttpMethodActionConstraint dictionary perf improvement\" (#6547) at aspnet/Mvc","RelatedBody":""},{"Id":"7041915226","Type":"PullRequestEvent","CreatedAt":"2017-12-30T02:56:23","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7170","RelatedDescription":"Merged pull request \"[Fixes #6547] Re-introduce action method dictionary perf improvement\" (#7170) at aspnet/Mvc","RelatedBody":"See https://github.com/aspnet/Mvc/commit/f2a8c1cea707fd73454ce66a8c23c889b8a99f5d#diff-38cbc7b9816a3accb4c69b4e0d44fb9fL65 for details"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7043865312","Type":"IssuesEvent","CreatedAt":"2017-12-31T14:10:53","Actor":"aneequrrehman","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1549","RelatedDescription":"Opened issue \"Changing the primary key of IdentityUserClaim<> and IdentityRoleClaim<>\" (#1549) at aspnet/Identity","RelatedBody":"Well, I have updated everything necessary to change all the Identity tables' primary keys to be `Guid`s, but I couldn't find any way to change the primary keys' types for `IdentityUserClaim<>` and `IdentityRoleClaim<>` tables. \r\n\r\nI have added this line in `ApplicationUser.cs`\r\n\r\n    public virtual ICollection<IdentityUserClaim<Guid>> Claims { get; } = new List<IdentityUserClaim<Guid>>();\r\n\r\n\r\nThere should be some way to change the primary keys for `IdentityUserClaim<>` and `IdentityRoleClaim<>`?. \r\n\r\nPerhaps something like `IdentityUserClaim<TKey, TUserKey>` instead of `IdentityUserClaim<TKey>` (the name **TKey** is misleading as well unless one looks at the summary, IMHO)? Or am I missing something?"},{"Id":"7042938477","Type":"PullRequestEvent","CreatedAt":"2017-12-30T20:27:08","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1548","RelatedDescription":"Merged pull request \"Remove unnecessary dependencies\" (#1548) at aspnet/Identity","RelatedBody":""},{"Id":"7042722883","Type":"IssuesEvent","CreatedAt":"2017-12-30T17:15:05","Actor":"dpedrelli","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1540","RelatedDescription":"Closed issue \"An error occurred while calling method 'BuildWebHost' on class 'Program'. Continuing without the application service provider. Error: Scheme already exists: Identity.Application\" (#1540) at aspnet/Identity","RelatedBody":"With Entity Framework Core 2.0.0 libraries, I was able to add multiple Identity instances and create a migration.\r\n\r\n```\r\n            services.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n            services.AddIdentity<DistributorApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<DistributorApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n            services.AddIdentity<SupplierApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<SupplierApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n```\r\n\r\nI added a library that used Entity Framework Core 2.0.1 and I upgraded all of my libraries to 2.0.1.  Now, the above codes produces\r\n\r\n```\r\nAn error occurred while calling method 'BuildWebHost' on class 'Program'. Continuing without the application service provider. Error: Scheme already exists: Identity.Application\r\nUnable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time\r\n```\r\n\r\nWhen I try to create a migration.\r\n\r\nI am using the format:\r\n\r\n```\r\npublic class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n    }\r\n```\r\n\r\nIf one package references 2.0.1 and the other packages reference 2.0.0, I get the following build error:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS1705\tAssembly 'Microsoft.EntityFrameworkCore.Relational' with identity 'Microsoft.EntityFrameworkCore.Relational, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' uses 'Microsoft.EntityFrameworkCore, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' which has a higher version than referenced assembly 'Microsoft.EntityFrameworkCore' with identity 'Microsoft.EntityFrameworkCore, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\tSM.DAL\tw:\\documents\\visual studio 2017\\Projects\\SelectMarketing\\SM.DAL\\CSC\t1\tActive\r\n```\r\n\r\nIf all projects reference 2.0.0, I get the following migration error:\r\n\r\n```\r\nAn error occurred while calling method 'BuildWebHost' on class 'Program'. Continuing without the application service provider. Error: Scheme already exists: Identity.Application\r\nUnable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time.\r\n```\r\n\r\nAt one point, I had three instances of Identity and was able to create three, separate migrations."},{"Id":"7042056112","Type":"IssuesEvent","CreatedAt":"2017-12-30T05:42:52","Actor":"embryologist","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1546","RelatedDescription":"Closed issue \"Optimistic concurrency failure upon using RoleManager DeleteAsync!\" (#1546) at aspnet/Identity","RelatedBody":"My implementation,\r\n\r\n**`ApplicationRole Class`**\r\n\r\n      public class ApplicationRole: IdentityRole\r\n        {\r\n            public string Description { get; set; }\r\n        }\r\n**`ApplicationRoleViewModel class`**\r\n\r\n    public class ApplicationRoleViewModel\r\n    {\r\n        public string RoleId { get; set; }\r\n        [Required]\r\n        [DataType(DataType.Text)]\r\n        [Display(Name = \"Role Name\")]\r\n        public string RoleName { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n\r\n**Registering `Identity` Service**\r\n\r\n     services.AddIdentity<ApplicationUser, ApplicationRole>\r\n\r\n**`Registering RoleManager Service`**\r\n\r\n    services.AddScoped<IRoleManager, RoleManager>();\r\n\r\n**`RoleManager` Service**\r\n\r\n    public interface IRoleManager\r\n        {\r\n            Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model);\r\n            Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model);\r\n        }\r\n        public class RoleManager : IRoleManager\r\n        {\r\n            private readonly RoleManager<ApplicationRole> roleManager;\r\n            public RoleManager(RoleManager<ApplicationRole> roleManager)\r\n            {\r\n                \r\n                this.roleManager = roleManager;\r\n    \r\n            }\r\n            public Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.CreateAsync((role));\r\n            }\r\n            public Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.DeleteAsync((role));\r\n            }\r\n\r\n        }\r\n\r\n**`UserManagementController`** \r\n\r\n    [HttpDelete]\r\n     public async Task<IActionResult> DeleteIdentityRole([FromBody] ApplicationRoleViewModel model)\r\n        {\r\n            if (!ModelState.IsValid)\r\n                return BadRequest(ModelState);\r\n            IdentityResult result = await this.roleManager.DeleteAsync(model);\r\n            if (result.Succeeded)\r\n                return Ok(model.RoleName + \" role has been created successfully\");\r\n\r\n        return BadRequest(result.Errors);\r\n\r\n    }\r\nI keep receiving this error by calling `DeleteAsync`\r\n> Optimistic concurrency failure, object has been modified."},{"Id":"7041870858","Type":"PullRequestEvent","CreatedAt":"2017-12-30T02:08:46","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1548","RelatedDescription":"Opened pull request \"Remove unnecessary dependencies\" (#1548) at aspnet/Identity","RelatedBody":""},{"Id":"7041797236","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:55:24","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1547","RelatedDescription":"Closed issue \"How to get all Roles using asp.net core 2 Identity?\" (#1547) at aspnet/Identity","RelatedBody":"**This is a question, Not an Issue**\r\nI have a custom `IdentityRole` called `ApplicationRole`. I created a RoleManager Service and I was successful in creating new roles using `CreateAsync` method but I am facing  I can't get all roles using this implementation (`GetAllRolesAsync`). I keep getting this error,\r\n\r\n> Cannot implicitly convert type\r\n> 'System.Collections.Generic.List<ApplicationRole>' to\r\n> 'System.Threading.Tasks.Task<ArtNgCore.Controllers.ViewModels.IdentityViewModels.ApplicationRoleViewModel>'\r\n\r\n\r\n\r\nI am posting the relevant code for this implementation.\r\n\r\n  **`ApplicationRole Class`**\r\n\r\n      public class ApplicationRole: IdentityRole\r\n        {\r\n            public string Description { get; set; }\r\n        }\r\n**`ApplicationRoleViewModel class`**\r\n\r\n    public class ApplicationRoleViewModel\r\n    {\r\n        public string RoleId { get; set; }\r\n        [Required]\r\n        [DataType(DataType.Text)]\r\n        [Display(Name = \"Role Name\")]\r\n        public string RoleName { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n\r\n**Registering `Identity` Service**\r\n\r\n     services.AddIdentity<ApplicationUser, ApplicationRole>\r\n\r\n**`Registering RoleManager Service`**\r\n\r\n    services.AddScoped<IRoleManager, RoleManager>();\r\n\r\n**`RoleManager` Service**\r\n\r\n    public interface IRoleManager\r\n        {\r\n            Task<List<ApplicationRoleViewModel>> GetAllRolesAsync();\r\n            Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model);\r\n            Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model);\r\n        }\r\n        public class RoleManager : IRoleManager\r\n        {\r\n            private readonly RoleManager<ApplicationRole> roleManager;\r\n            public RoleManager(RoleManager<ApplicationRole> roleManager)\r\n            {\r\n                \r\n                this.roleManager = roleManager;\r\n    \r\n            }\r\n            public Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.CreateAsync((role));\r\n            }\r\n            public Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.DeleteAsync((role));\r\n            }\r\n    \r\n            public Task<List<ApplicationRoleViewModel>> GetAllRolesAsync()\r\n            {\r\n                var roles = this.roleManager.Roles.ToList();\r\n                return roles;\r\n            }\r\n\r\n        }\r\n\r\n**`UserManagementController`** \r\n\r\n    [HttpGet]\r\n    public async Task<IActionResult> GetAllRoles() {\r\n        var roles = this.roleManager.GetAllRolesAsync();\r\n        return Ok(roles);\r\n    } \r\n\r\n    [HttpDelete]\r\n     public async Task<IActionResult> DeleteIdentityRole([FromBody] ApplicationRoleViewModel model)\r\n        {\r\n            if (!ModelState.IsValid)\r\n                return BadRequest(ModelState);\r\n            IdentityResult result = await this.roleManager.DeleteAsync(model);\r\n            if (result.Succeeded)\r\n                return Ok(model.RoleName + \" role has been created successfully\");\r\n\r\n        return BadRequest(result.Errors);\r\n\r\n    }\r\n\r\n"},{"Id":"7041793443","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:51:49","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1159","RelatedDescription":"Closed issue \"DbUpdateConcurrencyException after success signIn\" (#1159) at aspnet/Identity","RelatedBody":"In my webApp, i want to update some custom fields of the user after success signIn. It is LastLoginDate and LastLogInIp. On my machine (localhost) everythings works fine, but on production server, i got always error:\r\n\r\n```\r\nMicrosoft.EntityFrameworkCore.DbUpdateConcurrencyException: Database operation expected to affect 1 row(s) but actually affected 0 row(s). Data may have been modified or deleted since entities were loaded. See http://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ThrowAggregateUpdateConcurrencyException(Int32 commandIndex, Int32 expectedRowsAffected, Int32 rowsAffected)\r\n   at async Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetWithoutPropagationAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(?)\r\n```\r\nThe user is logged in, but the update of the fields is not completed.\r\n\r\nThis is my Login method:\r\n```\r\npublic async Task<IActionResult> Login(LoginViewModel model)\r\n        {\r\n            if (model == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(model));\r\n            }\r\n            model.SystemName = _appOptions.Value.SystemName;\r\n            model.SystemVersion = _appOptions.Value.SystemVersion;\r\n            if (ModelState.IsValid)\r\n            {\r\n                var result = await _signInManager.PasswordSignInAsync(model.Username, model.Password, false, lockoutOnFailure: false);\r\n                if (result.Succeeded)\r\n                {\r\n                    BackofficeUser user = await _userManagerStore.FindByNameAsync(model.Username);\r\n\r\n                    if (!user.IsEnabled)\r\n                    {\r\n                        ModelState.AddModelError(string.Empty, \"User is disabled\");\r\n                        return View(model);\r\n                    }\r\n\r\n                    var auditEntry = await _auditLog.StartAsync(new AuditLogAction\r\n                    {\r\n                        Action = AuditLogActionType.Login,\r\n                        Parameters = { model.Username },\r\n                        UserId = user.Id,\r\n                        UserName = user.UserName\r\n                    });\r\n\r\n                    user.LastLoginDate = DateTime.UtcNow;\r\n                    user.LastLoginIp = Request.HttpContext.Connection.RemoteIpAddress.ToString();\r\n                    await _userManagerStore.UpdateAsync(user);\r\n                    _logger.LogInformation(1, $\"User {model.Username} logged in.\");\r\n                    auditEntry.Result = AuditLogResultType.Success;\r\n                    await _auditLog.FinishAsync(auditEntry);\r\n                    return RedirectToLocal(model.ReturnUrl);\r\n                }\r\n                if (result.IsLockedOut)\r\n                {\r\n                    ModelState.AddModelError(string.Empty,\r\n                        $\"User locked out for {ModelContext.Configuration.GetValue<int>(\"LockedOutTime\")} minutes.\");\r\n                }\r\n                else\r\n                {\r\n                    var usr = await _userManagerStore.FindByNameAsync(model.Username);\r\n                    if (usr != null)\r\n                    {\r\n                        await _userManagerStore.AccessFailedAsync(usr);\r\n                    }\r\n                    ModelState.AddModelError(string.Empty, \"Invalid login attempt.\");\r\n                }\r\n            }\r\n            return View(model);\r\n        }\r\n```\r\n\r\nThe error occurs on this row:\r\n`await _userManagerStore.UpdateAsync(user);`\r\nThis method just call UpdateAsync of class signInManager.\r\n\r\nThe error disappear when i restart the app pool of my site, but returns randomly."},{"Id":"7041789858","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:48:36","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1390","RelatedDescription":"Closed issue \"ConfirmEmail doesn't work\" (#1390) at aspnet/Identity","RelatedBody":"Moved from https://github.com/aspnet/Home/issues/2152 by @kironet\r\n\r\nHey,\r\n\r\nI was following this tutorial: https://docs.microsoft.com/en-us/aspnet/core/security/authentication/accconfirm?tabs=aspnetcore2x%2Csql-server\r\n\r\nAnd email is sent, I'm getting url like this: \r\n_https://localhost:44343/Account/ConfirmEmail?userId=e714dc1d-1b6b-4dfd-8288-78f8b429d506&amp;code=CfDJ8GPqscMYofFCs%2FRH3ucxQlVR4O2ONj8uPQyVUpllt5vd9QrjduDA46u%2FAI9jDaBK28e5U0uzFfx1zxwKQ2O0c41qpXlkVzya%2FU5D1aeLIiMUsiDTxUqil04U%2FRFs%2B%2FZ3UBXmr62zHd%2FxJdsWyo3R4gU1TMwo82OAc0qWrIzG%2BmkxE4SS%2BR0%2BvVVzDyZxLQm4Fc6B9%2Byep6o7ZzVyvhbVKlraFkE6irltJLhKcNFlT6pgmyObNk8uPANP9MXiOdNRvg%3D%3D_\r\n\r\nBut if I click on it, it does nothing, just redirect to Home/Index and I still can't login, because email is not confirmed.  "},{"Id":"7041783606","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:42:55","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1428","RelatedDescription":"Closed issue \"Remove .vscode files\" (#1428) at aspnet/Identity","RelatedBody":"Those are yours @javiercn - they're not supposed to be in source control :p"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7041389709","Type":"PullRequestEvent","CreatedAt":"2017-12-29T20:37:18","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2239","RelatedDescription":"Opened pull request \"Change ApplicationProtocol to ReadOnlyMemory<byte> \" (#2239) at aspnet/KestrelHttpServer","RelatedBody":"#2182 \r\nIn the process I realized the prior change for merging the https and core packages had dropped the new netcoreapp2.1 TFM so all of the HTTP/2 code was disabled. Filed https://github.com/aspnet/KestrelHttpServer/issues/2238 for followup."},{"Id":"7041338212","Type":"IssuesEvent","CreatedAt":"2017-12-29T20:13:52","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2238","RelatedDescription":"Opened issue \"Add functional tests for http2\" (#2238) at aspnet/KestrelHttpServer","RelatedBody":"There are not currently any functional test for the Http2 features. We accidentally disabled the entire feature when merging the https and core packages due to a missing TFM and didn't notice. https://github.com/aspnet/KestrelHttpServer/pull/2224\r\n\r\nThe big blocker here is the lack of consistent client support. However, even if there's one client on one of the OS's then that would be a good start."},{"Id":"7038977298","Type":"PullRequestEvent","CreatedAt":"2017-12-29T01:32:11","Actor":"mgravell","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2237","RelatedDescription":"Closed pull request \"DO NOT MERGE - open PR to track changes\" (#2237) at aspnet/KestrelHttpServer","RelatedBody":"intent: make the kestrel transport usable from client scenarios"},{"Id":"7038976952","Type":"PullRequestEvent","CreatedAt":"2017-12-29T01:31:59","Actor":"mgravell","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2237","RelatedDescription":"Opened pull request \"DO NOT MERGE - open PR to track changes\" (#2237) at aspnet/KestrelHttpServer","RelatedBody":"intent: make the kestrel transport usable from client scenarios"},{"Id":"7038464497","Type":"IssuesEvent","CreatedAt":"2017-12-28T21:02:03","Actor":"NVentimiglia","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2236","RelatedDescription":"Closed issue \"ConnectionResetException -4077 ECONNRESET connection reset by peer\" (#2236) at aspnet/KestrelHttpServer","RelatedBody":"I see a number of related issues. These issues are closed with the understanding that this is the normal behavior when a connection dies. I am opening this issue because this exception is killing my web server. Please advise how I can catch and handle this exception.\r\n\r\n### Stack Trace\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException occurred\r\n  HResult=0x80131620\r\n  Message=Error -4077 ECONNRESET connection reset by peer\r\n  Source=<Cannot evaluate the exception source>\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ReadResult& result)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ReadAsync>d__22.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameRequestStream.<ReadAsyncInternal>d__21.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<EnsureDataAvailableOrReadAsync>d__38.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReadNextFrameAsync>d__37.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReceiveAsync>d__36.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Foundation.Net.Transports.WSHostConnection.<UpdateAsync>d__7.MoveNext() in F:\\Projects\\Foundation\\Foundation.Core\\Foundation.Net\\Transports\\WSHostConnection.cs:line 46\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<EnsureDataAvailableOrReadAsync>d__38.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReadNextFrameAsync>d__37.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReceiveAsync>d__36.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<CloseAsync>d__41.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Foundation.Net.Transports.WSHostConnection.<DisconnectInternal>d__8.MoveNext() in F:\\Projects\\Foundation\\Foundation.Core\\Foundation.Net\\Transports\\WSHostConnection.cs:line 81\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n\r\nInner Exception 1:\r\nUvException: Error -4077 ECONNRESET connection reset by peer\r\n```\r\n\r\n## My Code\r\n\r\n```\r\n\r\npublic async Task UpdateAsync()\r\n        {\r\n            try\r\n            {\r\n                while (Socket != null && Socket.State == WebSocketState.Open)\r\n                {\r\n                    ReadSerializer.Reset();\r\n                    ReadSerializer.IsWriting = false;\r\n\r\n                    var segment = new ArraySegment<byte>(ReadSerializer.Data);\r\n\r\n                    //Stack Trace points to this line\r\n                    var received = await Socket.ReceiveAsync(segment, CancellationToken.None);\r\n\r\n                    if (!received.EndOfMessage)\r\n                        continue;\r\n\r\n                    if (Socket == null || Socket.State != WebSocketState.Open)\r\n                        return;\r\n\r\n                    if (received.MessageType == WebSocketMessageType.Binary)\r\n                    {\r\n                        RaiseMessage(ReadSerializer);\r\n                    }\r\n                    else if (received.MessageType == WebSocketMessageType.Close)\r\n                    {\r\n#if VERBOSE\r\n                        Logger.Info(\"Received Closed \" + ConnectionId);\r\n#endif\r\n                    }\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Logger.Exception(ex);\r\n            }\r\n        }\r\n```\r\nNotice that I am catching the exception, what else can I do ?\r\n\r\nMicrosoft.AspNetCore 2.01\r\nMicrosoft.AspNetCore.Http.Abstractions 2.01\r\nMicrosoft.AspNetCore.Websockets.Server 0.1.0\r\n"},{"Id":"7034658992","Type":"IssuesEvent","CreatedAt":"2017-12-27T18:09:38","Actor":"NVentimiglia","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2236","RelatedDescription":"Opened issue \"ConnectionResetException -4077 ECONNRESET connection reset by peer\" (#2236) at aspnet/KestrelHttpServer","RelatedBody":"I see a number of related issues. These issues are closed with the understanding that this is the normal behavior when a connection dies. I am opening this issue because this exception is killing my web server. Please advise how I can catch and handle this exception.\r\n\r\n### Stack Trace\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException occurred\r\n  HResult=0x80131620\r\n  Message=Error -4077 ECONNRESET connection reset by peer\r\n  Source=<Cannot evaluate the exception source>\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ReadResult& result)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ReadAsync>d__22.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameRequestStream.<ReadAsyncInternal>d__21.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<EnsureDataAvailableOrReadAsync>d__38.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReadNextFrameAsync>d__37.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReceiveAsync>d__36.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Foundation.Net.Transports.WSHostConnection.<UpdateAsync>d__7.MoveNext() in F:\\Projects\\Foundation\\Foundation.Core\\Foundation.Net\\Transports\\WSHostConnection.cs:line 46\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<EnsureDataAvailableOrReadAsync>d__38.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReadNextFrameAsync>d__37.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReceiveAsync>d__36.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<CloseAsync>d__41.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Foundation.Net.Transports.WSHostConnection.<DisconnectInternal>d__8.MoveNext() in F:\\Projects\\Foundation\\Foundation.Core\\Foundation.Net\\Transports\\WSHostConnection.cs:line 81\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n\r\nInner Exception 1:\r\nUvException: Error -4077 ECONNRESET connection reset by peer\r\n```\r\n\r\n## My Code\r\n\r\n```\r\n\r\npublic async Task UpdateAsync()\r\n        {\r\n            try\r\n            {\r\n                while (Socket != null && Socket.State == WebSocketState.Open)\r\n                {\r\n                    ReadSerializer.Reset();\r\n                    SendSerializer.IsWriting = false;\r\n\r\n                    var segment = new ArraySegment<byte>(ReadSerializer.Data);\r\n\r\n                    //Stack Trace points to this line\r\n                    var received = await Socket.ReceiveAsync(segment, CancellationToken.None);\r\n\r\n                    if (!received.EndOfMessage)\r\n                        continue;\r\n\r\n                    if (Socket == null || Socket.State != WebSocketState.Open)\r\n                        return;\r\n\r\n                    if (received.MessageType == WebSocketMessageType.Binary)\r\n                    {\r\n                        RaiseMessage(ReadSerializer);\r\n                    }\r\n                    else if (received.MessageType == WebSocketMessageType.Close)\r\n                    {\r\n#if VERBOSE\r\n                        Logger.Info(\"Received Closed \" + ConnectionId);\r\n#endif\r\n                    }\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Logger.Exception(ex);\r\n            }\r\n        }\r\n```\r\nNotice that I am catching the exception, what else can I do ?"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7041812305","Type":"IssuesEvent","CreatedAt":"2017-12-30T01:08:57","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1836","RelatedDescription":"Closed issue \"Add RazorSyntaxFactsService tests\" (#1836) at aspnet/Razor","RelatedBody":""},{"Id":"7041806355","Type":"PullRequestEvent","CreatedAt":"2017-12-30T01:03:19","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1891","RelatedDescription":"Merged pull request \"Added test for DefaultRazorSyntaxFactsService\" (#1891) at aspnet/Razor","RelatedBody":"#1836 \r\n\r\nAdded only a couple of basic tests. Didn't seem worth adding more as these tests cover pretty much everything this class does. \r\n\r\nFYI @mkArtakMSFT "}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6856182602","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:15:11","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Merged pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6856061013","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:32:45","Actor":"cristy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Opened pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2018-01-02T05:30:10.8610856Z","RunDurationInMilliseconds":9311}