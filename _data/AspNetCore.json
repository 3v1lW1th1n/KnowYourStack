{"Data":{"Blog":{"FeedItems":[{"Title":"Azure Storage for Serverless .NET Apps in Minutes","PublishedOn":"2018-01-25T19:38:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Azure Storage is a quick and effortless way to store data for applications that has high availability, is secure, scales and is redundant. This blog post walks through a simple application that...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/25/azure-storage-for-serverless-net-apps-in-minutes/","RawContent":null},{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7180592546","Type":"IssuesEvent","CreatedAt":"2018-02-01T00:02:42","Actor":"mikaelm12","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2629","RelatedDescription":"Closed issue \"Implement response caching middleware\" (#2629) at aspnet/Home","RelatedBody":"_From @Tratcher on Tuesday, June 9, 2015 9:53:36 AM_\r\n\r\nMVC and other application level components will set standard HTTP cache headers (Cache-Control, Vary, etc.) for clients and proxies.\n\nMiddleware will read the response headers and cache in a local memory cache when appropriate. Then it can short circuit incoming requests and serve them from the cache.\n\nWe may also need a feature interface for interacting with server level caches (e.g. to limit double caching).\n\r\n\r\n_Copied from original issue: aspnet/ResponseCaching#1_"},{"Id":"7180434956","Type":"IssuesEvent","CreatedAt":"2018-01-31T23:16:52","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2761","RelatedDescription":"Closed issue \"SetCookieHeaderValue.Parse does not accept non-RFC 1123 date values on expires.\" (#2761) at aspnet/Home","RelatedBody":"## What happens\r\n\r\nWhen I'm trying to parse a cookie like this one: `1P_JAR=2018-01-10-13; expires=Fri, 09-Feb-2018 13:17:26 GMT; path=/; domain=.google.it`, I get a `System.FormatException: The header contains invalid values at index 0`.\r\n\r\nIf I remove the expires key, or I manually change the value to `Fri, 09 Feb 2018 13:17:26 GMT`, the parse works as expected.\r\n\r\n## What should happen\r\n\r\nThe [RFC 2616 Section 3.3.1](https://tools.ietf.org/html/rfc2616#section-3.3.1) specify that:\r\n\r\n> HTTP/1.1 clients and servers that parse the date value MUST accept all three formats (for compatibility with HTTP/1.0), though they MUST only generate the RFC 1123 format for representing HTTP-date values in header fields. See section 19.3 for further information.\r\n\r\nI expect that the Parse\\TryParse methods allow all three formats (RFC1123, RFC850 and ANSI C) but only generate an RFC1123 compliant string when `SetCookieHeaderValue.ToString()`."},{"Id":"7180399886","Type":"IssuesEvent","CreatedAt":"2018-01-31T23:07:20","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2841","RelatedDescription":"Closed issue \" Need two Http requests to set cookies\" (#2841) at aspnet/Home","RelatedBody":"In .NET Core, I have to send a two http requests manually – only the second post request will succeed.\r\n\r\n\r\n    HttpClientHandler handler = new HttpClientHandler();\r\n    handler.Credentials = new NetworkCredential(userName, userPass);\r\n\r\n    HttpClient client = new HttpClient(handler);\r\n    client.BaseAddress = new Uri(baseUri);\r\n \r\n    // PROBLEM HERE: \r\n    await client.PostAsync(requestUri, null); // The extra post request to set cookie\r\n    var response = await client.PostAsync(requestUri, new StringContent(Body(), Encoding.UTF8, \"application/json\"));\r\n\r\n\r\nThe server sets a cookie on the initial 401 challenge and rejects the subsequent credentialed request if it lacks this cookie.\r\n\r\nFiddler Traces are in this folder: https://microsoft-my.sharepoint.com/:f:/p/tad/Ehuec61zdD9Fp1Vlf6QI718BynEnS-HF3tL4w9FXGgH7Eg?e=tsH1fU"},{"Id":"7180379125","Type":"IssuesEvent","CreatedAt":"2018-01-31T23:02:08","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2705","RelatedDescription":"Closed issue \"Consolidate all header parsing code \" (#2705) at aspnet/Home","RelatedBody":"_From @muratg on Monday, April 24, 2017 3:17:12 PM_\r\n\r\nHeader parsing logic is used in\r\n\r\n- MVC\r\n- StaticFiles\r\n- ResponseCaching\r\n\r\nWe should investigate the usages across the board and consolidate the code here.\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#825_"},{"Id":"7180358813","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:57:02","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2840","RelatedDescription":"Closed issue \"FileInfo.Length returns always 0\" (#2840) at aspnet/Home","RelatedBody":"# FileInfo.Length return always 0\r\n\r\nFileInfo.Length return always 0. I tried it with a MVC Web App and a console application.\r\nFileInfo is not null and the path is correct too. I tried to stream a video but if I don't get the range I can't stream it.\r\n\r\n# General\r\n\r\n.NET Core 2.0 & 2.0.5\r\nMac & Windows\r\n\r\n# Sample\r\n\r\n```\r\nvar fi = new FileInfo(Path.Combine(\"Videos/sample.mp4\"));\r\nConsole.WriteLine(fi.Length);\r\nConsole.ReadLine();\r\n```"},{"Id":"7180264704","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:34:53","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2697","RelatedDescription":"Closed issue \"Characters out of BMP are encoded\" (#2697) at aspnet/Home","RelatedBody":"_From @miloush on Saturday, July 15, 2017 4:46:55 AM_\r\n\r\nUsing\r\n\r\n```C#\r\nservices.Configure<WebEncoderOptions>(options =>\r\n     options.TextEncoderSettings = new TextEncoderSettings(UnicodeRanges.All));\r\n```\r\n\r\ndoes not help, 𐌰 is still output as `&#x10330;` in 2.0.0-preview2-final\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#902_"},{"Id":"7180234226","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:27:48","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2685","RelatedDescription":"Closed issue \"Adding MultipartWriter\" (#2685) at aspnet/Home","RelatedBody":"_From @daniel-white on Thursday, November 9, 2017 8:01:26 AM_\r\n\r\nWould the community like a `MultipartWriter` to compliment `MultipartReader`? It looks like `MultipartSection` could be used as is.\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#962_"},{"Id":"7180231541","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:27:10","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2682","RelatedDescription":"Closed issue \"Considerations for Multipart support off of HttpRequest\" (#2682) at aspnet/Home","RelatedBody":"_From @daniel-white on Sunday, November 12, 2017 11:34:07 AM_\r\n\r\nI'm experimenting with adding Multipart support to `HttpRequest`. It will be done similarly to how forms are handled, using the same patterns and `MultipartReader`. The end goal is to allow MVC and Web API to define models as multipart. \r\n\r\nI'm hoping for some feedback on the direction.\r\n\r\n* How should `MultipartSection` be handled? Should `Microsoft.AspnetCore.Http.Abstractions` define its own `MultipartSection`? Or should we move it from `Microsoft.AspnetCore.WebUtilities`? There seems to be no clear reference graph for this.\r\n* Should there be a `MultipartValues` which would work like `StringValues`?\r\n* Should the `MultipartSectionCollection` be able to looked up by key and as a list? Not all parts have names.\r\n\r\nThoughts?\r\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#965_"},{"Id":"7180223754","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:25:21","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2681","RelatedDescription":"Closed issue \"Two different AuthenticationProperties types\" (#2681) at aspnet/Home","RelatedBody":"_From @khellang on Monday, November 13, 2017 8:26:26 AM_\r\n\r\nWhy is there two different `AuthenticationProperties` types in this repository?\r\n\r\n- [Microsoft.AspNetCore.Http.Authentication](https://github.com/aspnet/HttpAbstractions/blob/3e3772eecd4cc57399c28a3f899e6b0406ef2e1b/src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs)\r\n- [Microsoft.AspNetCore.Authentication](https://github.com/aspnet/HttpAbstractions/blob/3e3772eecd4cc57399c28a3f899e6b0406ef2e1b/src/Microsoft.AspNetCore.Authentication.Abstractions/AuthenticationProperties.cs)\r\n\r\nWhy doesn't `Microsoft.AspNetCore.Authentication.Abstractions` use the one from `Microsoft.AspNetCore.Http.Abstractions`?\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#966_"},{"Id":"7180208154","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:21:42","Actor":"tanyado","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2841","RelatedDescription":"Opened issue \" Need two Http requests to set cookies\" (#2841) at aspnet/Home","RelatedBody":"In .NET Core, I have to send a two http requests manually – only the second post request will succeed.\r\n\r\n\r\n    HttpClientHandler handler = new HttpClientHandler();\r\n    handler.Credentials = new NetworkCredential(userName, userPass);\r\n\r\n    HttpClient client = new HttpClient(handler);\r\n    client.BaseAddress = new Uri(baseUri);\r\n \r\n    // PROBLEM HERE: \r\n    await client.PostAsync(requestUri, null); // The extra post request to set cookie\r\n    var response = await client.PostAsync(requestUri, new StringContent(Body(), Encoding.UTF8, \"application/json\"));\r\n\r\n\r\nThe server sets a cookie on the initial 401 challenge and rejects the subsequent credentialed request if it lacks this cookie.\r\n\r\nFiddler Traces are in this folder: https://microsoft-my.sharepoint.com/:f:/p/tad/Ehuec61zdD9Fp1Vlf6QI718BynEnS-HF3tL4w9FXGgH7Eg?e=tsH1fU"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7180561545","Type":"IssuesEvent","CreatedAt":"2018-01-31T23:53:24","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1387","RelatedDescription":"Opened issue \"Typescript 2.7 breaks our build\" (#1387) at aspnet/SignalR","RelatedBody":"Was getting an error that `EventSource` is already defined when building \"client-ts/signalr\""},{"Id":"7180555550","Type":"PullRequestEvent","CreatedAt":"2018-01-31T23:51:34","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1263","RelatedDescription":"Merged pull request \"Fix race in Restart during Close task\" (#1263) at aspnet/SignalR","RelatedBody":""},{"Id":"7180548159","Type":"IssuesEvent","CreatedAt":"2018-01-31T23:49:16","Actor":"ryanbrandenburg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1385","RelatedDescription":"Closed issue \"Flaky tests: HubConnectionCanSendAndReceiveMessages\" (#1385) at aspnet/SignalR","RelatedBody":"I set `HubConnectionCanSendAndReceiveMessages` and `HubConnectionCanSendAndReceiveGroupMessages` to ignore for now because they [fail](http://aspnetci/viewLog.html?tab=buildLog&logTab=tree&filter=debug&expand=all&buildId=397066&_focus=84625) on Ubuntu sometimes. It should be investigated and re-enabled once fixed."},{"Id":"7180547180","Type":"PullRequestEvent","CreatedAt":"2018-01-31T23:48:58","Actor":"ryanbrandenburg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1386","RelatedDescription":"Closed pull request \"Skip flaky tests\" (#1386) at aspnet/SignalR","RelatedBody":"aspnet/SignalR#1385."},{"Id":"7180296368","Type":"PullRequestEvent","CreatedAt":"2018-01-31T22:42:14","Actor":"ryanbrandenburg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1386","RelatedDescription":"Opened pull request \"Skip flaky tests\" (#1386) at aspnet/SignalR","RelatedBody":"aspnet/SignalR#1385."},{"Id":"7180272809","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:36:47","Actor":"ryanbrandenburg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1385","RelatedDescription":"Opened issue \"Flaky tests: HubConnectionCanSendAndReceiveMessages\" (#1385) at aspnet/SignalR","RelatedBody":"I set `HubConnectionCanSendAndReceiveMessages` and `HubConnectionCanSendAndReceiveGroupMessages` to ignore for now because they [fail](http://aspnetci/viewLog.html?tab=buildLog&logTab=tree&filter=debug&expand=all&buildId=397066&_focus=84625) on Ubuntu sometimes. It should be investigated and re-enabled once fixed."},{"Id":"7180270799","Type":"PullRequestEvent","CreatedAt":"2018-01-31T22:36:21","Actor":"natemcmaster","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1384","RelatedDescription":"Merged pull request \"Workaround flakiness in compiling the ChatSample\" (#1384) at aspnet/SignalR","RelatedBody":"Compilation fails sometimes because it's trying to bundle/minify twice at the same time.\r\n\r\n\r\n> C:\\b\\w\\4ae60d3b5c30e105\\modules\\SignalR\\samples\\ChatSample\\wwwroot\\css\\site.min.css : Bundler & Minifier error 0: The process cannot access the file 'C:\\b\\w\\4ae60d3b5c30e105\\modules\\SignalR\\samples\\ChatSample\\wwwroot\\css\\site.min.css' because it is being used by another process.\r\n"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7180859982","Type":"PullRequestEvent","CreatedAt":"2018-02-01T01:26:48","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7322","RelatedDescription":"Opened pull request \"TextOutputFormatter reads AcceptCharset header not using TypedHeaders\" (#7322) at aspnet/Mvc","RelatedBody":"This approach avoid instantiation of the RequestHeaders type.\r\n\r\n@rynowak, please let me know whether this is the type of fix you were looking for."},{"Id":"7180854749","Type":"IssuesEvent","CreatedAt":"2018-02-01T01:25:01","Actor":"jonmeyerson","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7321","RelatedDescription":"Opened issue \"Add HtmlHelper to MVC Controller like the UrlHelper\" (#7321) at aspnet/Mvc","RelatedBody":"I have a dynamic views which are assembled together at runtime. example a string like \r\n\r\n\"`<div>[PlaceHolder1]</div>Hello World<div>[PlaceHolder2]</div>`\"\r\nin which I loop through the string and replace elements in square brackets with a razor view using Html.Partial()\r\n\r\nI have been able to get this functionality to work but think it should be added to the framework.\r\n\r\nBelow is my implementation to create a HTMLHelper in a controller\r\n\r\n\r\n```\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.Infrastructure;\r\nusing Microsoft.AspNetCore.Mvc.ModelBinding;\r\nusing Microsoft.AspNetCore.Mvc.Rendering;\r\nusing Microsoft.AspNetCore.Mvc.Routing;\r\nusing Microsoft.AspNetCore.Mvc.ViewEngines;\r\nusing Microsoft.AspNetCore.Mvc.ViewFeatures;\r\nusing Microsoft.AspNetCore.Mvc.ViewFeatures.Internal;\r\nusing Microsoft.Extensions.Options;\r\nusing System.IO;\r\nusing System.Text.Encodings.Web;\r\nusing System.Threading.Tasks;\r\n\r\n\r\n    public class HelperGenerator\r\n    {\r\n        private readonly IHtmlGenerator _htmlGenerator;\r\n        private readonly ICompositeViewEngine _compositeViewEngine;\r\n        private readonly IModelMetadataProvider _modelMetadataProvider;\r\n        private readonly IViewBufferScope _viewBufferScope;\r\n        private readonly IActionContextAccessor _actionContextAccessor;\r\n        private readonly HtmlHelperOptions _htmlHelperOptions;\r\n\r\n        public HelperGenerator(IHtmlGenerator htmlGenerator, ICompositeViewEngine compositeViewEngine, IModelMetadataProvider modelMetadataProvider, IViewBufferScope viewBufferScope, IActionContextAccessor actionContextAccessor, IOptions<MvcViewOptions> options)\r\n        {\r\n            _htmlGenerator = htmlGenerator;\r\n            _compositeViewEngine = compositeViewEngine;\r\n            _modelMetadataProvider = modelMetadataProvider;\r\n            _viewBufferScope = viewBufferScope;\r\n            _actionContextAccessor = actionContextAccessor;\r\n            _htmlHelperOptions = options.Value.HtmlHelperOptions;\r\n        }\r\n        public IHtmlHelper HtmlHelper(ViewDataDictionary ViewData, ITempDataDictionary TempData)\r\n        {\r\n            var helper = new HtmlHelper(_htmlGenerator, _compositeViewEngine, _modelMetadataProvider, _viewBufferScope, HtmlEncoder.Default, UrlEncoder.Default);\r\n            var viewContext = new ViewContext(_actionContextAccessor.ActionContext,\r\n               new FakeView(),\r\n               ViewData,\r\n               TempData,\r\n               TextWriter.Null,\r\n               _htmlHelperOptions);\r\n            helper.Contextualize(viewContext);\r\n            return helper;\r\n        }\r\n        private class FakeView : IView\r\n        {\r\n            public string Path => \"View\";\r\n\r\n            public Task RenderAsync(ViewContext context)\r\n            {\r\n                return Task.FromResult(0);\r\n            }\r\n        }\r\n    }\r\n```"},{"Id":"7180765908","Type":"IssuesEvent","CreatedAt":"2018-02-01T00:58:06","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7171","RelatedDescription":"Closed issue \"Improve MVC logging at INFO level\" (#7171) at aspnet/Mvc","RelatedBody":"I think we have a few important gaps in the logging info that comes from MVC by default (`INFO`). You can **almost** use the log statements to understand your performance, but we need to add 3-4 things to make is useful.\r\n\r\nHere's the current state - with some of my notes..\r\n```\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 GET http://localhost:5000/Home/About\r\n-- The above comes from hosting and represents the entire request\r\n\r\n-- We're missing right here a log statement that MVC has selected an action and started\r\n-- executing it. We have logging for this, but it's only on in debug. Ideally this would include\r\n-- the routing information as well, as this is commonly mixed up by users.\r\n\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]\r\n      Executing action method Sample.Controllers.HomeController.About (Sample) with arguments ((null)) - ModelState is Valid\r\n-- The above represents the beginning of executing the action method. This text isn't great\r\n-- and should be improved. We should improve formatting to look more like an actual method\r\n-- signature. The ((null)) is just gross. We should consider simplifying ModelState is Valid to\r\n-- use 'valid' or 'invalid'\r\n\r\n-- We're missing right here a log statement that the action method finished and the timing.\r\n-- We actually have this but it's only on in debug.\r\n\r\ninfo: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewResultExecutor[1]\r\n      Executing ViewResult, running view at path /Views/Home/About.cshtml.\r\n\r\n-- We're missing right here a log statement about the time that the action result took to execute.\r\n-- I think most of our action results have these, but they should include a duration in ALL cases,\r\n-- even if the timing is always trivial. This reassures folks even if there will never be a problem.\r\n\r\n-- the below represents the end of the MVC pipeline\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action Sample.Controllers.HomeController.About (Sample) in 96.351ms\r\n      \r\n-- The below comes from hosting and represents the entire request\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 5099.661ms 200 text/html; charset=utf-8\r\n```\r\n\r\nProblems:\r\n- Can't easily tell when MVC matched an action and what route it used\r\n- Can't tell how much time was spend in user code (action method)\r\n- Can't tell how much time was spend in user code (views)\r\n\r\nThese are all things I think you should get at a glance at the info level.\r\n\r\n-----\r\n\r\nThings I would change:\r\n- [ ] [this statement](https://github.com/aspnet/Mvc/blob/c8cabde1f16980e8596f31b697786b049bd9d997/src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreLoggerExtensions.cs#L107) needs to be INFO and provide more information\r\n- [ ] [this statement](https://github.com/aspnet/Mvc/blob/c8cabde1f16980e8596f31b697786b049bd9d997/src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreLoggerExtensions.cs#L127) should have its formatting and text improved, it's clunky in common cases\r\n- [ ] [this statement](https://github.com/aspnet/Mvc/blob/c8cabde1f16980e8596f31b697786b049bd9d997/src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreLoggerExtensions.cs#L132) needs to be INFO and should include timing\r\n- [ ] Add timings to the 'end' logging of all action results, and make sure it's on at INFO level.\r\n\r\nOverall, this means that MVC would end up with 6 logging statements for INFO level. Does that seem like too much? If we need to optimize this, we could probable get it down to 4. I do think that the missing timings at INFO level are a problem."},{"Id":"7180765103","Type":"PullRequestEvent","CreatedAt":"2018-02-01T00:57:50","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7314","RelatedDescription":"Merged pull request \"Add INFO level logging\" (#7314) at aspnet/Mvc","RelatedBody":"Addresses #7171 "},{"Id":"7180376670","Type":"IssuesEvent","CreatedAt":"2018-01-31T23:01:30","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6579","RelatedDescription":"Closed issue \"Add the ability to manipulate global filters applied to pages using application model\" (#6579) at aspnet/Mvc","RelatedBody":"Global filters in controllers can be manipulated using `ApplicationModel.Filters`. We need something equivalent for pages."},{"Id":"7180217965","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:23:57","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7303","RelatedDescription":"Closed issue \"Referencing an AspNet Core Web application\" (#7303) at aspnet/Mvc","RelatedBody":"My general goal is to be able to add HTTP endpoint to any of my future applications in order to issue commands or monitor them from outside. Kestrel seems to be a rather elegant solution for that.\r\nIn the past few days I made some attempts to achieve this but I failed terribly. This has to do with the fact that in the past year so much happened and several -maybe too many in my case- article came out for different versions of .Net Core offering different workarounds / solutions for similar issues. Ironically the more I read about it the more confused I got. Most of them were already fixed issues or related to older version of Asp.Net Core.\r\nI assume there must be a supersimple solution for my problem which truely aligns with the coding style of the new .Net Core project templates. Lovely stuff, congratulations for the participants!\r\n\r\nI'd like to develop / debug the solution on usual way from within VS but I can't get it done. Actually I tried many options with slightly different results but none of them worked. Probably I missed the one proper combination of steps. \r\n\r\n[screenshot](https://pasteboard.co/H4JECxx.png)\r\nThis image shows the behaviour running the project from VS.\r\n\r\nIn order to demonstrate the issue I created a simple out of the box solution which can be found here: [repo](https://github.com/crmabs/Referenced-AspNet-Core-2-web-app)\r\nI deliberately kept everything intact so the example is as clean as possible. \r\n- The ConsoleApp project simulates the application I'd like add the HTTP endoint to. \r\n- WebAppWithRazor project prepresents the component which is the HTTP endpoint.\r\nSo ConsoleApp references WebAppWithRazor.\r\nIt's VS2017 15.5.5 that I'm using.\r\n\r\nEventually I found a workaround to run the published solution but it only works from console - outside of VS.\r\nI refuse to believe that there is no other way. :)\r\n\r\n1: Add this to the .csproj of the web application:\r\n`<MvcRazorExcludeRefAssembliesFromPublish>false</MvcRazorExcludeRefAssembliesFromPublish>`\r\nAs a result it will output a \"refs\" folder with a lot of .dlls to a path something like:\r\n....\\ReferenceWebApp\\WebAppWithRazor\\bin\\Release\\PublishOutput\\refs \r\n\r\n2: Publish both projects\r\n\r\n3: From the web application's publish folder copy \"WebAppWithRazor.deps.json\" file and \"refs\" folder to the publish output of the referencing project. \r\n\r\nAny help would be appreciated!"},{"Id":"7180211502","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:22:27","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7318","RelatedDescription":"Closed issue \"performance issue with asp.net core mvc + angular\" (#7318) at aspnet/Mvc","RelatedBody":"I have run a few tests recently by using AB (Apache Bench) and noticed the performance for asp.net core 2.0 mvc looks good to me, over 1,000 requests/sec for accessing /home (300 requests, 100 concurrency)\r\n\r\nBut when I created the asp.net core mvc + angular, I got only 14 requests/sec performance for accessing /home, way slower (300 requests, 100 concurrency)\r\n\r\nI am wondering if there is anything wrong with my test setup. \r\nHas anyone encountered this kind of issue?\r\n\r\nI tried this on both windows 10 and macOS 10.13, similar outcome\r\n\r\nAfter investigate a bit, I think it runs slow for two reasons：\r\n1   the site created by using angular template renders page on server side as there is the asp-prerender-module=\"ClientApp/dist/main-server\" attribute in <app> node\r\n\r\n2  it uses IIS\r\n\r\nAfter removed the asp-prerender-module attribute and ran the site by executing \"dotnet run\" (which means using kestrel directly), I got over 460 requests/sec on a desktop pc.\r\n\r\nHowever, when I tried to deploy the site on Azure Web App, but it seems I can only deploy it using IIS, which  turned out very slow, just like running on iis express locally.\r\n\r\nAny way this is not an issue that relates to asp.net core.. I'll looking to the aspNetCoreModule for IIS."},{"Id":"7180202028","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:20:21","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7319","RelatedDescription":"Closed issue \"DefaultAuthorizationService fails second time through when having a global AuthorizeFilter and a decorated AuthorizeAttribute\" (#7319) at aspnet/Mvc","RelatedBody":"I have an output like the below.. (I changed some of the names to be generic).\r\n\r\nThere doesn't seem to be a way to disable the second call to the DefaultAuthorizationService when you have a global AuthorizationFilter defined and an AuthorizationAttribute decorated on an api method.  The first call goes through the global filter and the second seems to go through the attribute.  What I would like to do, is disable the global filter when the method is decorated with an AuthorizationAttribute and only use the authentication schemes (preferably just successful on one of the schemes but it seems to call both) from the attribute.  I tried creating my own version of the AuthorizeFilter but this default filter still seems to get called from somewhere.  Also, the authorization I already passed seems to get ignored the second time through for some reason.  The policy is only a ValidUserAuthorizationPolicy..\r\n\r\nWorkflow.Audit.Service> info: MyCustomTokenAuthenticationHandler[8]\r\nWorkflow.Audit.Service>       AuthenticationScheme: MyTokenType was successfully authenticated.\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]\r\nWorkflow.Audit.Service>       Authorization was successful for user: myUser.\r\nWorkflow.Audit.Service> info: MyCustomTokenAuthenticationHandler[8]\r\nWorkflow.Audit.Service>       AuthenticationScheme: MyTokenType was successfully authenticated.\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[2]\r\nWorkflow.Audit.Service>       Authorization failed for user: (null).\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[3]\r\nWorkflow.Audit.Service>       Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Mvc.ForbidResult[1]\r\nWorkflow.Audit.Service>       Executing ForbidResult with authentication schemes (MyTokenType).\r\nWorkflow.Audit.Service> info: MyCustomTokenAuthenticationHandler[13]\r\nWorkflow.Audit.Service>       AuthenticationScheme: MyTokenType was forbidden.\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\nWorkflow.Audit.Service>       Executed action ValuesController.Post (Solution) in 597.3095ms\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n"},{"Id":"7180191189","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:17:55","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7320","RelatedDescription":"Closed issue \"the default file watch sometimes does not work in Linux containers\" (#7320) at aspnet/Mvc","RelatedBody":"We found this during our internal testing. It happens sometimes (with low frequency).\r\n\r\nOS: Linux container, docker 1.12\r\n\r\nCreate a dotnet core MVC application using the default template. Deploy to a Docker container running inside AKS (docker v1.12). Modifies Contact.cshtml file via file copying. The process is launched via 'dotnet run --no-restore --no-build --no-launch-profile'.\r\n\r\nIn most cases, the file change is picked up. However sometimes changes to the .cshtml file wasn't picked up.\r\n\r\nWe are switching to use  ENV DOTNET_USE_POLLING_FILE_WATCHER=true as a work around.\r\n"},{"Id":"7180145333","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:07:46","Actor":"danroth27","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7160","RelatedDescription":"Reopened issue \"Determine if the temp data cookie is considered essential\" (#7160) at aspnet/Mvc","RelatedBody":"RE: aspnet/Security#1561\r\n\r\nWhen this new policy is applied all non-essential cookies will be suppressed. We need to determine if temp data cookie is considered essential by default.\r\n\r\nDoes MVC issue any other cookies?\r\n\r\n@blowdart"},{"Id":"7179098512","Type":"IssuesEvent","CreatedAt":"2018-01-31T18:32:54","Actor":"xinyanmsft","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7320","RelatedDescription":"Opened issue \"the default file watch sometimes does not work in Linux containers\" (#7320) at aspnet/Mvc","RelatedBody":"We found this during our internal testing. It happens sometimes (with low frequency).\r\n\r\nOS: Linux container, docker 1.12\r\n\r\nCreate a dotnet core MVC application using the default template. Deploy to a Docker container running inside AKS (docker v1.12). Modifies Contact.cshtml file via file copying. The process is launched via 'dotnet run --no-restore --no-build --no-launch-profile'.\r\n\r\nIn most cases, the file change is picked up. However sometimes changes to the .cshtml file wasn't picked up.\r\n\r\nWe are switching to use  ENV DOTNET_USE_POLLING_FILE_WATCHER=true as a work around.\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7180181569","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:15:48","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1611","RelatedDescription":"Opened issue \"2fa: Forget this browser button is broken\" (#1611) at aspnet/Identity","RelatedBody":"@javiercn this was probably introduced with your extensibility changes due to the base model not having OnPost defined so clicking the button doesn't run the server side handler to clear the remember me cookie.\r\n\r\nhttps://github.com/aspnet/Identity/blob/dev/src/UI/Areas/Identity/Pages/Account/Manage/TwoFactorAuthentication.cshtml.cs#L27\r\n\r\nI thought it was a bug in the new totp/security stamp code i was working on...but it turned out the button was a placebo...click on it all you want, it never clears your remember browser since it doesn't hit the method :)\r\n\r\nThis probably is in the preview 1 templates as well."},{"Id":"7180108236","Type":"PullRequestEvent","CreatedAt":"2018-01-31T22:00:04","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1610","RelatedDescription":"Merged pull request \"Remove Razor.Design reference\" (#1610) at aspnet/Identity","RelatedBody":""},{"Id":"7179525096","Type":"PullRequestEvent","CreatedAt":"2018-01-31T19:58:51","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1610","RelatedDescription":"Opened pull request \"Remove Razor.Design reference\" (#1610) at aspnet/Identity","RelatedBody":""},{"Id":"7179523779","Type":"PullRequestEvent","CreatedAt":"2018-01-31T19:58:36","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1609","RelatedDescription":"Merged pull request \"Remove Razor.Design reference\" (#1609) at aspnet/Identity","RelatedBody":""},{"Id":"7179520107","Type":"PullRequestEvent","CreatedAt":"2018-01-31T19:57:52","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1609","RelatedDescription":"Opened pull request \"Remove Razor.Design reference\" (#1609) at aspnet/Identity","RelatedBody":""},{"Id":"7179515665","Type":"PullRequestEvent","CreatedAt":"2018-01-31T19:57:03","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1608","RelatedDescription":"Closed pull request \"Remove Razor.Design reference\" (#1608) at aspnet/Identity","RelatedBody":""},{"Id":"7178912454","Type":"PullRequestEvent","CreatedAt":"2018-01-31T17:55:06","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1608","RelatedDescription":"Opened pull request \"Remove Razor.Design reference\" (#1608) at aspnet/Identity","RelatedBody":""},{"Id":"7176815401","Type":"IssuesEvent","CreatedAt":"2018-01-31T11:20:20","Actor":"brechtb86","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1607","RelatedDescription":"Closed issue \"No DbContext named 'xxx' was found\" (#1607) at aspnet/Identity","RelatedBody":"I have multiple contexts and one of them works, but the other three cannot be found. \r\n\r\nI'm using `PM> Add-Migration InitialCreateLdapIdentity -context LdapIdentityDbContext<LdapUser, LdapUserRole> -verbose`\r\n\r\nThis is what it outputs:\r\n\r\n```\r\nFinding DbContext classes...\r\nFinding IDesignTimeDbContextFactory implementations...\r\nFinding application service provider...\r\nFinding BuildWebHost method...\r\nUsing environment 'Development'.\r\nUsing application service provider from BuildWebHost method on 'Program'.\r\nMicrosoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\nUser profile is available. Using 'C:\\Users\\brech\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\nFound DbContext 'ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>'.\r\nFound DbContext 'LdapIdentityDbContext<LdapUser, LdapUserRole>'.\r\nFound DbContext 'BlogIdentityDbContext<BlogUser, BlogUserRole>'.\r\nFound DbContext 'CountriesDbContext'.\r\nFinding DbContext classes in the project...\r\nMicrosoft.EntityFrameworkCore.Design.OperationException: No DbContext named 'LdapIdentityDbContext<LdapUser, LdapUserRole>' was found.\r\n```\r\n\r\nThe funny thing is when I run `Add-Migration InitialCreateCountries -context CountriesDbContext` then this works.\r\n\r\nI also tried without the generic parameters `Add-Migration InitialCreateLdapIdentity -context LdapIdentityDbContext` but to no avail.\r\n\r\nMy `Startup.cs` contains this:\r\n\r\n\r\n```\r\nservices\r\n            .AddDbContext<ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"Identity\"));\r\n                    })\r\n            .AddDbContext<LdapIdentityDbContext<LdapUser, LdapUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"LdapIdentity\"));\r\n                    })\r\n            .AddDbContext<BlogIdentityDbContext<BlogUser, BlogUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"BlogIdentity\"));\r\n                    })\r\n            .AddDbContext<CountriesDbContext>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"Countries\"));\r\n                    });\r\n    \r\nservices\r\n            .AddApplicationIdentity<ApplicationUser, ApplicationUserRole>()\r\n            .AddEntityFrameworkStores<ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<ApplicationUser>>()\r\n            .AddRoleStore<ApplicationRoleStore<ApplicationUser, ApplicationUserRole>>()\r\n            .AddUserStore<ApplicationUserStore<ApplicationUser, ApplicationUserRole>>()\r\n            .AddSignInManager<ApplicationSignInManager<ApplicationUser, ApplicationUserRole>>()\r\n            .AddUserManager<ApplicationUserManager<ApplicationUser, ApplicationUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n\r\nservices\r\n            .AddLdapIdentity<LdapUser, LdapUserRole>()\r\n            .AddEntityFrameworkStores<LdapIdentityDbContext<LdapUser, LdapUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<LdapUser>>()\r\n            .AddUserStore<LdapUserStore<LdapUser, LdapUserRole>>()\r\n            .AddSignInManager<LdapSignInManager<LdapUser, LdapUserRole>>()\r\n            .AddUserManager<LdapUserManager<LdapUser, LdapUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n\r\nservices\r\n            .AddBlogIdentity<BlogUser, BlogUserRole>()\r\n            .AddEntityFrameworkStores<BlogIdentityDbContext<BlogUser, BlogUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<BlogUser>>()\r\n            .AddUserStore<BlogUserStore<BlogUser, BlogUserRole>>()\r\n            .AddUserManager<BlogUserManager<BlogUser, BlogUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n```\r\nI'm all out of ideas, especially because in the verbose log it says explicitly that it found the contexts.\r\n\r\nAnyone has any ideas?\r\n\r\n*edit*\r\n\r\nThe methods `AddApplicationIdentity<…>`, `AddLdapIdentity<…>` and `AddBlogIdentity<…>` are extension methods on `ServiceCollection` and I have peeked at the asp.net core implementation [https://github.com/aspnet/Identity/blob/dev/src/Identity/IdentityServiceCollectionExtensions.cs](https://github.com/aspnet/Identity/blob/dev/src/Identity/IdentityServiceCollectionExtensions.cs)\r\n\r\nSo my implementation looks like this:\r\n\r\n```\r\npublic static IdentityBuilder AddApplicationIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : ApplicationUser, new()\r\n            where TUserRole : ApplicationUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationUserStore<TUser, TUserRole>, ApplicationUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationIdentityDbContext<Identity.Models.ApplicationUser, ApplicationUserRole>, ApplicationIdentityDbContext<Identity.Models.ApplicationUser, ApplicationUserRole>>();\r\n            services.TryAddScoped<ApplicationUserManager<TUser, TUserRole>, ApplicationUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationSignInManager<TUser, TUserRole>, ApplicationSignInManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n\r\npublic static IdentityBuilder AddLdapIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : LdapUser, new()\r\n            where TUserRole : LdapUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapUserStore<TUser, TUserRole>, LdapUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapIdentityDbContext<TUser, TUserRole>, LdapIdentityDbContext<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapUserManager<TUser, TUserRole>, LdapUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapSignInManager<TUser, TUserRole>, LdapSignInManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n\r\npublic static IdentityBuilder AddBlogIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : BlogUser, new()\r\n            where TUserRole : BlogUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<BlogUserStore<TUser, TUserRole>, BlogUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<BlogIdentityDbContext<BlogUser, BlogUserRole>, BlogIdentityDbContext<BlogUser, BlogUserRole>>();\r\n            services.TryAddScoped<BlogUserManager<TUser, TUserRole>, BlogUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n    }\r\n```\r\n\r\nThe implementation of `LdapIdentityDbContext` is this:\r\n\r\n```\r\npublic class LdapIdentityDbContext<TUser, TRole> : IdentityDbContext<TUser, TUserRole, Guid>\r\n        where TUser : LdapUser\r\n        where TRole : LdapUserRole\r\n    {\r\n        public LdapIdentityDbContext(DbContextOptions<LdapIdentityDbContext<TUser, TRole>> options)\r\n            : base(options)\r\n        {\r\n        }\r\n    }\r\n```\r\nI also made a post on StackOverflow:\r\n\r\n[https://stackoverflow.com/questions/48527307/ef-core-no-dbcontext-named-xxx-was-found](https://stackoverflow.com/questions/48527307/ef-core-no-dbcontext-named-xxx-was-found)\r\n"},{"Id":"7176390077","Type":"IssuesEvent","CreatedAt":"2018-01-31T09:53:08","Actor":"brechtb86","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1607","RelatedDescription":"Opened issue \"No DbContext named 'xxx' was found\" (#1607) at aspnet/Identity","RelatedBody":"I have multiple contexts and one of them works, but the other three cannot be found. \r\n\r\nI'm using `PM> Add-Migration InitialCreateLdapIdentity -context LdapIdentityDbContext<LdapUser, LdapUserRole> -verbose`\r\n\r\nThis is what it outputs:\r\n\r\n```\r\nFinding DbContext classes...\r\nFinding IDesignTimeDbContextFactory implementations...\r\nFinding application service provider...\r\nFinding BuildWebHost method...\r\nUsing environment 'Development'.\r\nUsing application service provider from BuildWebHost method on 'Program'.\r\nMicrosoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\nUser profile is available. Using 'C:\\Users\\brech\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\nFound DbContext 'ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>'.\r\nFound DbContext 'LdapIdentityDbContext<LdapUser, LdapUserRole>'.\r\nFound DbContext 'BlogIdentityDbContext<BlogUser, BlogUserRole>'.\r\nFound DbContext 'CountriesDbContext'.\r\nFinding DbContext classes in the project...\r\nMicrosoft.EntityFrameworkCore.Design.OperationException: No DbContext named 'LdapIdentityDbContext<LdapUser, LdapUserRole>' was found.\r\n```\r\n\r\nThe funny thing is when I run `Add-Migration InitialCreateCountries -context CountriesDbContext` then this works.\r\n\r\nI also tried without the generic parameters `Add-Migration InitialCreateLdapIdentity -context LdapIdentityDbContext` but to no avail.\r\n\r\nMy `Startup.cs` contains this:\r\n\r\n\r\n```\r\nservices\r\n            .AddDbContext<ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"Identity\"));\r\n                    })\r\n            .AddDbContext<LdapIdentityDbContext<LdapUser, LdapUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"LdapIdentity\"));\r\n                    })\r\n            .AddDbContext<BlogIdentityDbContext<BlogUser, BlogUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"BlogIdentity\"));\r\n                    })\r\n            .AddDbContext<CountriesDbContext>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"Countries\"));\r\n                    });\r\n    \r\nservices\r\n            .AddApplicationIdentity<ApplicationUser, ApplicationUserRole>()\r\n            .AddEntityFrameworkStores<ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<ApplicationUser>>()\r\n            .AddRoleStore<ApplicationRoleStore<ApplicationUser, ApplicationUserRole>>()\r\n            .AddUserStore<ApplicationUserStore<ApplicationUser, ApplicationUserRole>>()\r\n            .AddSignInManager<ApplicationSignInManager<ApplicationUser, ApplicationUserRole>>()\r\n            .AddUserManager<ApplicationUserManager<ApplicationUser, ApplicationUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n\r\nservices\r\n            .AddLdapIdentity<LdapUser, LdapUserRole>()\r\n            .AddEntityFrameworkStores<LdapIdentityDbContext<LdapUser, LdapUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<LdapUser>>()\r\n            .AddUserStore<LdapUser>()\r\n            .AddSignInManager<LdapSignInManager<LdapUser, LdapUserRole>>()\r\n            .AddUserManager<LdapUserManager<LdapUser, LdapUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n\r\nservices\r\n            .AddBlogIdentity<BlogUser, BlogUserRole>()\r\n            .AddEntityFrameworkStores<BlogIdentityDbContext<BlogUser, BlogUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<BlogUser>>()\r\n            .AddUserStore<BlogUser>()\r\n            .AddUserManager<BlogUserManager<BlogUser, BlogUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n```\r\nI'm all out of ideas, especially because in the verbose log it says explicitly that it found the contexts.\r\n\r\nAnyone has any ideas?\r\n\r\n*edit*\r\n\r\nThe methods `AddApplicationIdentity<…>`, `AddLdapIdentity<…>` and `AddBlogIdentity<…>` are extension methods on `ServiceCollection` and I have peeked at the asp.net core implementation [https://github.com/aspnet/Identity/blob/dev/src/Identity/IdentityServiceCollectionExtensions.cs](https://github.com/aspnet/Identity/blob/dev/src/Identity/IdentityServiceCollectionExtensions.cs)\r\n\r\nSo my implementation looks like this:\r\n\r\n```\r\npublic static IdentityBuilder AddApplicationIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : ApplicationUser, new()\r\n            where TUserRole : ApplicationUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationUserStore<TUser, TUserRole>, ApplicationUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationIdentityDbContext<Identity.Models.ApplicationUser, ApplicationUserRole>, ApplicationIdentityDbContext<Identity.Models.ApplicationUser, ApplicationUserRole>>();\r\n            services.TryAddScoped<ApplicationUserManager<TUser, TUserRole>, ApplicationUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationSignInManager<TUser, TUserRole>, ApplicationSignInManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n\r\npublic static IdentityBuilder AddLdapIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : LdapUser, new()\r\n            where TUserRole : LdapUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapUserStore<TUser, TUserRole>, LdapUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapIdentityDbContext<TUser, TUserRole>, LdapIdentityDbContext<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapUserManager<TUser, TUserRole>, LdapUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapSignInManager<TUser, TUserRole>, LdapSignInManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n\r\npublic static IdentityBuilder AddBlogIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : BlogUser, new()\r\n            where TUserRole : BlogUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<BlogUserStore<TUser, TUserRole>, BlogUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<BlogIdentityDbContext<BlogUser, BlogUserRole>, BlogIdentityDbContext<BlogUser, BlogUserRole>>();\r\n            services.TryAddScoped<BlogUserManager<TUser, TUserRole>, BlogUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n    }\r\n```\r\n\r\nThe implementation of `LdapIdentityDbContext` is this:\r\n\r\n```\r\npublic class LdapIdentityDbContext<TUser, TRole> : IdentityDbContext<TUser, TUserRole, Guid>\r\n        where TUser : LdapUser\r\n        where TRole : LdapUserRole\r\n    {\r\n        public LdapIdentityDbContext(DbContextOptions<LdapIdentityDbContext<TUser, TRole>> options)\r\n            : base(options)\r\n        {\r\n        }\r\n    }\r\n```\r\nI also made a post on StackOverflow:\r\n\r\n[https://stackoverflow.com/questions/48527307/ef-core-no-dbcontext-named-xxx-was-found](https://stackoverflow.com/questions/48527307/ef-core-no-dbcontext-named-xxx-was-found)\r\n"},{"Id":"7173588244","Type":"PullRequestEvent","CreatedAt":"2018-01-30T20:27:34","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1606","RelatedDescription":"Merged pull request \"Make Razor.Sdk a build time dependency\" (#1606) at aspnet/Identity","RelatedBody":""},{"Id":"7173053992","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:40:40","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1606","RelatedDescription":"Opened pull request \"Make Razor.Sdk a build time dependency\" (#1606) at aspnet/Identity","RelatedBody":""},{"Id":"7173017840","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:33:24","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1605","RelatedDescription":"Closed pull request \"Make Razor.Design a build time dependency\" (#1605) at aspnet/Identity","RelatedBody":""},{"Id":"7173000004","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:29:50","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1605","RelatedDescription":"Opened pull request \"Make Razor.Design a build time dependency\" (#1605) at aspnet/Identity","RelatedBody":""},{"Id":"7170880516","Type":"PullRequestEvent","CreatedAt":"2018-01-30T12:02:49","Actor":"lkubis","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1604","RelatedDescription":"Opened pull request \"Update README.md\" (#1604) at aspnet/Identity","RelatedBody":"Add link to Cassandra provider"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7181193375","Type":"IssuesEvent","CreatedAt":"2018-02-01T03:23:15","Actor":"cheesebar","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2284","RelatedDescription":"Opened issue \"warn: Microsoft.AspNetCore.Server.Kestrel[22]       Heartbeat took longer than \"00:00:01\" at \"01/31/2018 19:56:53 +00:00\".\" (#2284) at aspnet/KestrelHttpServer","RelatedBody":"when i used 'dotnet app.dll' run dotnetcoremvc application on windows server,there only little traffic on this application,There is no response on website when i use browser access the second day,then i pressed enter key in console application,then show list\r\n\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[22]\r\n      Heartbeat took longer than \"00:00:01\" at \"01/24/2018 14:22:35 +00:00\".\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[22]\r\n      Heartbeat took longer than \"00:00:01\" at \"01/24/2018 14:22:37 +00:00\".\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[22]\r\n      Heartbeat took longer than \"00:00:01\" at \"01/24/2018 14:22:36 +00:00\".\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[22]\r\n      Heartbeat took longer than \"00:00:01\" at \"01/24/2018 14:22:39 +00:00\".\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[22]\r\n      Heartbeat took longer than \"00:00:01\" at \"01/24/2018 14:22:38 +00:00\".\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[22]\r\n      Heartbeat took longer than \"00:00:01\" at \"01/24/2018 14:22:40 +00:00\".\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[22]\r\n      Heartbeat took longer than \"00:00:01\" at \"01/24/2018 14:22:41 +00:00\".\r\n\r\nAfter a while the browser get a normal response. but sometimes is bad"},{"Id":"7180214953","Type":"PullRequestEvent","CreatedAt":"2018-01-31T22:23:15","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2283","RelatedDescription":"Merged pull request \"Skip flaky test\" (#2283) at aspnet/KestrelHttpServer","RelatedBody":"#2282. Also updated the dependencies.props to make things run locally."},{"Id":"7179481169","Type":"PullRequestEvent","CreatedAt":"2018-01-31T19:50:23","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2283","RelatedDescription":"Opened pull request \"Skip flaky test\" (#2283) at aspnet/KestrelHttpServer","RelatedBody":"#2282. Also updated the dependencies.props to make things run locally."},{"Id":"7179329089","Type":"IssuesEvent","CreatedAt":"2018-01-31T19:19:36","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2282","RelatedDescription":"Opened issue \"Flaky test: ConnectionCountingReturnsToZero\" (#2282) at aspnet/KestrelHttpServer","RelatedBody":"I set `ConnectionCountingReturnsToZero` to ignore for now because it [fails](http://aspnetci/viewLog.html?buildId=397052&tab=buildResultsDiv&buildTypeId=XPlat_HighSierraOsxUniverse) on OSX sometimes. It should be investigated and re-enabled once fixed."},{"Id":"7174478923","Type":"IssuesEvent","CreatedAt":"2018-01-30T23:50:47","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2271","RelatedDescription":"Closed issue \"Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\" (#2271) at aspnet/KestrelHttpServer","RelatedBody":"`dotnet new web`\r\n\r\nSwitch from `Microsoft.AspNetCore.All` to Microsoft.AspNetCore.App.\r\n\r\n`dotnet restore`\r\n\r\n`dotnet run`\r\n\r\n```\r\nC:\\Users\\daroth\\Desktop\\test2>dotnet run\r\nUsing launch settings from C:\\Users\\daroth\\Desktop\\test2\\Properties\\launchSettings.json...\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to bind to https://localhost:44321 on the IPv4 loopback interface: 'Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.'.\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to bind to https://localhost:44321 on the IPv6 loopback interface: 'Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.'.\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nSystem.IO.IOException: Failed to bind to address https://localhost:44321. ---> System.AggregateException: One or more errors occurred. (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n   at System.Buffers.MemoryPool..ctor()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread..ctor(LibuvTransport transport)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n\r\nUnhandled Exception: System.IO.IOException: Failed to bind to address https://localhost:44321. ---> System.AggregateException: One or more errors occurred. (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n   at System.Buffers.MemoryPool..ctor()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread..ctor(LibuvTransport transport)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.<StartAsync>d__26.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__5.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at test2.Program.Main(String[] args) in C:\\Users\\daroth\\Desktop\\test2\\Program.cs:line 17\r\n\r\nC:\\Users\\daroth\\Desktop\\test2>dotnet --info\r\n.NET Command Line Tools (2.1.300-preview2-008017)\r\n\r\nProduct Information:\r\n Version:            2.1.300-preview2-008017\r\n Commit SHA-1 hash:  f4a0d2db0e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008017\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview2-26123-02\r\n  Build    : b64cb46124df1f7e64d7b7cde1034f693b270ceb\r\n```"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7180675344","Type":"PullRequestEvent","CreatedAt":"2018-02-01T00:28:51","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1998","RelatedDescription":"Opened pull request \"Change TextBufferProjectService to not be per-workspace.\" (#1998) at aspnet/Razor","RelatedBody":"Prior to this `TextBufferProjectService` operated on `IVsHierarchy` and `DotNetProject` (VS windows/mac concepts) yet it was a workspace service. In order to build non-workspace specific services I needed to change the text buffer project service to not be tied to a single workspace.\r\n\r\n- Updated impacted code to now expect this from MEF.\r\n\r\n#1997 \r\n\r\n/cc @mkArtakMSFT "},{"Id":"7180340354","Type":"PullRequestEvent","CreatedAt":"2018-01-31T22:52:32","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1996","RelatedDescription":"Opened pull request \"Update DefaultRazorEditorFactoryService to be per-workspace.\" (#1996) at aspnet/Razor","RelatedBody":"- Added a `WorkspaceProvider` API to enable the factory to retrieve a workspace given a text buffer.\r\n- Added a way to add test services to `AdhocWorkspace` so we can test against services being retrieved from a `Workspace`. This will be much more common once we rely on services coming from `TextBuffer`s in our other tooling pieces.\r\n- Added tests for the default workspace provider.\r\n\r\n**Note:** This PR lays the groundwork for enabling the remaining Razor pieces to not use `VisualStudioWorkspaceAccessor` and instead rely on getting workspaces given TextBuffers and the like.\r\n\r\n#1989 \r\n\r\n/cc @mkArtakMSFT "}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7156693215","Type":"IssuesEvent","CreatedAt":"2018-01-26T17:07:42","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1010","RelatedDescription":"Closed issue \"Manage Bower Packages: Update button should disable upon clicking\" (#1010) at aspnet/Tooling","RelatedBody":"Here are the steps to reproduce in VS 2017:\r\n\r\n1. Use the ASP.NET Core Web Application (.NET Core) project template to create a new ASP.NET Core 1.1 Web Application with No Authentication.\r\n1. Right-click the web project in Solution Explorer, and select **Manage Bower Packages...**.\r\n1. From the **Installed** tab, click the **Update** button for the Bootstrap package. Notice that the button doesn't disable after it's been clicked, yet the update is occurring.\r\n\r\nThis **Update** button should be disabled while the package update is in progress. Otherwise, the following command is executed each time the button is clicked: `\"C:\\Users\\Scott Addie\\AppData\\Roaming\\npm\\Bower.cmd\" install bootstrap#v4.0.0-alpha.6 --force-latest --save`.\r\n\r\nIn the screenshot below, you see what happens when I click the button 3 times in a row:\r\n\r\n![bower_update](https://cloud.githubusercontent.com/assets/10702007/23536562/5c5589f6-ff8b-11e6-8c22-7aa322a802d9.png)\r\n\r\n\r\n\r\n"},{"Id":"7151591436","Type":"IssuesEvent","CreatedAt":"2018-01-25T18:01:43","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/914","RelatedDescription":"Closed issue \"Format on paste setting does not work in .cshtml (Razor - VS 2015)\" (#914) at aspnet/Tooling","RelatedBody":"When disabling format on paste for C# + HTML in the Visual Studio settings, usually code does not get formatted on paste (as expected)\r\n\r\nIn razor files, when you copy and past something like this statement:\r\n```csharp\r\n@Html.AttributeEncode(\"test\")\r\n```\r\nit also works as intended.\r\n\r\nHowever when you mark the \".\" (dot) and do something like cut (Ctlr+X) and paste (Ctlr+V) (or just paste), \r\nthe html helper call gets formatted (in our case like this):\r\n```csharp\r\n@Html.AttributeEncode (\"test\")\r\n```\r\n\r\nThis is ***unexpected and even leads to a compile failure*** (razor @ syntax does not support whitespaces)"},{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7119899220","Type":"IssuesEvent","CreatedAt":"2018-01-18T22:33:02","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/555","RelatedDescription":"Closed issue \"Microsoft.DotNet.Publishing.targets breaks webdeploy zip support\" (#555) at aspnet/Tooling","RelatedBody":"When I create a VS build deployment template in VSTS, it tries building a project or solution with the following arguments:\n\n```\n/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"\n```\n\nAfter the move from DNX targets to DotNet targets, this only builds the project rather than outputting a zip file, breaking the VSTS template.\n\nI'm having a hard time trying to figure out how to call msbuild on my xproj file to get it to build a webdeploy compatible zip package that can be deployed with `Publish-AzureWebsiteProject`.\n"},{"Id":"7107011065","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:28:07","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/522","RelatedDescription":"Closed issue \"Asp.Net project with Build platform x86 \" (#522) at aspnet/Tooling","RelatedBody":"Here are threads in CLI and MVC repo https://github.com/aspnet/Mvc/issues/4663 and  https://github.com/dotnet/cli/issues/3091 with no real answers. Thought it would be VS Tooling bug.\n\nI have a asp.net project that reference a native dll via Nuget package. This native DLL is only build for x86. I've changed my project.json to set buildOptions\n \"platform\": \"x86\"\n\nBut when I build this asp.net project via visual studio, it creates \"bin\\Debug\\net46\\win7-x64\" as oppose to \"win7-x86\". If I run the resulting \".exe\" file it would crash.\n\nI've tried to use \"dotnet build -r win7-x86\" and it would create the right folder \"bin\\Debug\\net46\\win7-x86\" and then I can run the \".exe\" file.\n\nStill cannot test the application in x86 mode.\n\nThen I've uninstalled Microsoft .NET Code 1.0.0 RC2 - SDK Preview 1 (x64) which was installed via \"VS 2015 Tooling Preview\" and installed the \"x86\" one, and everything seems to be working.\n\nI think it is not right. I should be have the option to install x64 and x86 and then via that buildOption I should be able to tell dotnet how to compile. Just like MSBuild and ASP.Net projects where I set the build options from Project Properties.\n"},{"Id":"7106985478","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:22:30","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/557","RelatedDescription":"Closed issue \"Question: Typescript with ASP.NET Core RC2\" (#557) at aspnet/Tooling","RelatedBody":"Is it possible to compile Typescript code directly in Visual Studio 2015 using the ASP.NET Core RC2 project templates?  This used to work in RC1, but since updating to RC2 I can't get Typescript and ASP.NET Core working together simultaneously.  If I create a .NET Core project (e.g., **ASP.NET Core Web Application (.NET Core)** template), then I don't see \"Typescript Build\" properties page in Project Properties (the only property pages available are Application, Build, Debug).  I can create a Typescript project (e.g., **HTML Application with Typescript** template, which uses the csproj format), and Typescript works as expected, but of course I can't use .NET Core in that project.\n\nI have confirmed that my .xproj file does include a reference to Microsoft.DotNet.Web.targets, which I understand is supposed to bring in Typescript support:\n\n```\n<Import Project=\"$(VSToolsPath)\\DotNet.Web\\Microsoft.DotNet.Web.targets\"\n        Condition=\"'$(VSToolsPath)' != ''\" />\n```\n\nIs the built-in Typescript compilation no longer supported with RC2, or am I missing something somewhere?\n"},{"Id":"7065973641","Type":"PullRequestEvent","CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed pull request \"Update migrate-sql-server.md\" (#1062) at aspnet/Tooling","RelatedBody":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7168812814","Type":"IssuesEvent","CreatedAt":"2018-01-30T02:33:11","Actor":"DamianEdwards","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/287","RelatedDescription":"Opened issue \"Introduction of new meta-package \"Microsoft.AspNetCore.App\"\" (#287) at aspnet/Announcements","RelatedBody":"## Overview\r\nASP.NET Core 2.1 will introduce a new meta-package for use by applications: *Microsoft.AspNetCore.App*. Additionally, new projects created that target 2.1 will use this meta-package by default, rather than the existing meta-package *Microsoft.AspNetCore.All*.\r\n\r\nThe new meta-package differs from the existing meta-package in that it reduces the number of dependencies of packages not owned or supported by the ASP.NET or .NET teams to just those deemed necessary to ensure the major frameworks features function. The full list of packages being removed compared to *Microsoft.AspNetCore.All* can be seen below.\r\n\r\nThe existing *Microsoft.AspNetCore.All* meta-package will continue to be made available throughout the 2.x lifecycle, and it now depends on *Microsoft.AspNetCore.App*, but we recommend customers move to the new *Microsoft.AspNetCore.App* meta-pacakge and then add individual references to any of the removed packages if their app requires it.\r\n\r\n## Package references not in \"Microsoft.AspNetCore.App\", compared to \"Microsoft.AspNetCore.All\"\r\nThe following packages are direct dependencies of *Microsoft.AspNetCore.All* but **not** of *Microsoft.AspNetCore.App*. Note that any dependencies of these packages that otherwise aren't dependencies of *Microsoft.AspNetCore.App* will now **not** be included implicitly, e.g. *StackExchange.Redis* as a dependency of *Microsoft.Extensions.Caching.Redis*, *Microsoft.ApplicationInsights* as a dependency of *Microsoft.AspNetCore.ApplicationInsights.HostingStartup*:\r\n- Microsoft.Data.Sqlite\r\n- Microsoft.Data.Sqlite.Core\r\n- Microsoft.EntityFrameworkCore.Sqlite\r\n- Microsoft.EntityFrameworkCore.Sqlite.Core\r\n- Microsoft.Extensions.Caching.Redis\r\n- Microsoft.AspNetCore.DataProtection.AzureStorage\r\n- Microsoft.Extensions.Configuration.AzureKeyVault\r\n- Microsoft.AspNetCore.DataProtection.AzureKeyVault\r\n- Microsoft.AspNetCore.Identity.Service.AzureKeyVault\r\n- Microsoft.AspNetCore.AzureKeyVault.HostingStartup\r\n- Microsoft.AspNetCore.ApplicationInsights.HostingStartup\r\n\r\nWhen moving from *Microsoft.AspNetCore.All* to *Microsoft.AspNetCore.App*, if your application uses any APIs from the above packages, or packages brought in by those packages, you'll now need to add references to those packages in your project manually."},{"Id":"7082740966","Type":"IssuesEvent","CreatedAt":"2018-01-10T21:14:16","Actor":"dougbu","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/286","RelatedDescription":"Opened issue \"Remove project file elements added for WebApiCompatShim in 2.0\" (#286) at aspnet/Announcements","RelatedBody":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim package now depends on the latest (5.2.4-preview1) Microsoft.AspNet.WebApi.Client package. That dependency includes a new .NET Standard 2.0 assembly. This assembly supports all platforms the Microsoft.AspNetCore.Mvc.WebApiCompatShim package supports and includes the full Web API Client feature set.\r\n\r\nWhen upgrading projects using the Microsoft.AspNetCore.Mvc.WebApiCompatShim package to our nightly builds or the forthcoming 2.1.0-preview1 release, we recommend removing the following elements from the project file. (Of course, some projects may need the elements for other reasons.)\r\n``` xml\r\n<PackageTargetFallback>$(PackageTargetFallback);portable-net451+win8</PackageTargetFallback>\r\n<DisableImplicitAssetTargetFallback>true</DisableImplicitAssetTargetFallback>\r\n```\r\n\r\nFYI the `<PackageTargetFallback>` element caused the application to build and run against the Portable Class Library (PCL) assembly from the Microsoft.AspNet.WebApi.Client package.\r\n\r\nFor discussion of this change, see aspnet/Mvc#7229."},{"Id":"7076432273","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:08:19","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/285","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0784 - ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\" (#285) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0784\r\n##  ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of an elevation of privilege vulnerability exists when a ASP.NET Core web application, created using vulnerable project templates, fails to properly sanitize web requests. An attacker who successfully exploited this vulnerability could perform content injection attacks and run script in the security context of the logged-on user.\r\n\r\nTo exploit the vulnerability, an attacker could send a specially crafted email, containing a malicious link, to a user. Alternatively, an attacker could use a chat client to social engineer a user into clicking the malicious link. However, in all cases to exploit this vulnerability a user must click a maliciously crafted link from an attacker.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  [CVE-2018-0783](https://github.com/aspnet/Announcements/issues/284), which is in the same templates. Finally installing the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ will update the templates to correct the issue for any new applications created.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method and search for the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nReplace this line with the following code, removing the call to `Html.Raw()`\r\n\r\n```C#\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` and search for the following line, inside the `OnGetAsync()` method;\r\n\r\n```C#\r\nawait LoadSharedKeyAndQrCodeUriAsync(user);\r\n```\r\n\r\nRemove the code shown below which follows the call to `LoadSharedKeyAndQrCodeUriAsync(user);`\r\n\r\n```C#\r\nif (string.IsNullOrEmpty(SharedKey))\t\t\r\n{\t\t\r\n    await _userManager.ResetAuthenticatorKeyAsync(user);\t\t\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\t\t\r\n}\r\n```\r\n\r\nThe `OnGetAsync()` method should now look like\r\n\r\n```C#\r\npublic async Task<IActionResult> OnGetAsync()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\r\n\r\n    return Page();\r\n}\r\n```\r\n\r\n3. Still in the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` file  and search for the `LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user) function` and replace it with \r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user)\r\n{\r\n    // Load the authenticator key & QR code URI to display on the form\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n     }\r\n\r\n    SharedKey = FormatKey(unformattedKey);\r\n    AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n }\r\n```\r\n\r\n4. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find the declaration for `private const string AuthenticatorUriFormat`. Add the following new const declaration below it;\r\n\r\n```C#\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator()` function. Replace its contents with\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> EnableAuthenticator()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    var model = new EnableAuthenticatorViewModel();\r\n    await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n\r\n    return View(model);\r\n}\r\n```\r\n\r\n3. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. Replace its contents with\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> EnableAuthenticator(EnableAuthenticatorViewModel model)\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!ModelState.IsValid)\r\n    {\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n     }\r\n\r\n    // Strip spaces and hypens\r\n    var verificationCode = model.Code.Replace(\" \", string.Empty).Replace(\"-\", string.Empty);\r\n\r\n    var is2faTokenValid = await _userManager.VerifyTwoFactorTokenAsync(\r\n        user, _userManager.Options.Tokens.AuthenticatorTokenProvider, verificationCode);\r\n\r\n    if (!is2faTokenValid)\r\n    {\r\n        ModelState.AddModelError(\"Code\", \"Verification code is invalid.\");\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n    }\r\n\r\n    await _userManager.SetTwoFactorEnabledAsync(user, true);\r\n    _logger.LogInformation(\"User with ID {UserId} has enabled 2FA with an authenticator app.\", user.Id);\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    TempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\n\r\n    return RedirectToAction(nameof(ShowRecoveryCodes));\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` file create the following method after `EnableAuthenticator(EnableAuthenticatorViewModel model)`;\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file create the following method after the `GenerateQrCodeUri(string email, string unformattedKey)` method\r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user, EnableAuthenticatorViewModel model)\r\n{\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    }\r\n\r\n    model.SharedKey = FormatKey(unformattedKey);\r\n    model.AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n}\r\n```\r\n\r\n6. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n7. Open the `Models\\ManageViewModels\\EnableAuthenticatorViewModel.cs` file and add the following `using` reference;\r\n\r\n```C#\r\nusing Microsoft.AspNetCore.Mvc.ModelBinding;\r\n```\r\n\r\nthen replace the class declaration with \r\n\r\n```C# \r\npublic class EnableAuthenticatorViewModel\r\n{\r\n    [Required]\r\n    [StringLength(7, ErrorMessage = \"The {0} must be at least {2} and at max {1} characters long.\", MinimumLength = 6)]\r\n    [DataType(DataType.Text)]\r\n    [Display(Name = \"Verification Code\")]\r\n    public string Code { get; set; }\r\n\r\n    [BindNever]\r\n    public string SharedKey { get; set; }\r\n\r\n    [BindNever]\r\n    public string AuthenticatorUri { get; set; }\r\n}\r\n```\r\n\r\n8. Open the `Views\\Manage\\EnableAuthenticator.cshtml` file and replace the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nwith\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\nremove the call to `Html.Raw()`.\r\n\r\n9. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0784](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0784)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  "},{"Id":"7076428623","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:07:27","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/284","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0785 - ASP.NET Core Templates enable Cross Site Request Forgery\" (#284) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0785\r\n## ASP.NET Core Templates enable Cross Site Request Forgery\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Cross Site Request Forgery vulnerability in the individual authentication templates for ASP.NET Core 2.0. An attacker who successfully exploited this vulnerability could change the recovery codes associated with the victim's user account without his/her consent. As a result, a victim of this attack may be permanently locked out of his/her account after loosing access to his/her 2FA device, as the initial recovery codes would be no longer valid.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  CVE-2018-0784, which is in the same templates.  ***** TODO: ADD LINK TO OTHER ISSUE ***** \r\n\r\nYou should also install the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ as will update the templates to correct the issue for any _new_ applications created after its installation. Existing applications must be manually updated using the instructions below.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method. The last line of this file should be\r\n\r\n```C#\r\nreturn RedirectToPage(\"./GenerateRecoveryCodes\");\r\n```\r\n\r\nReplace this line with the following code\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\nreturn RedirectToPage(\"./ShowRecoveryCodes\");\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml` and replace its contents with \r\n\r\n```C#\r\n@page\r\n@model GenerateRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n3. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs` file. Replace its contents with\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\nusing Microsoft.Extensions.Logging;\r\nusing Company.WebApplication1.Data;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class GenerateRecoveryCodesModel : PageModel\r\n    {\r\n        private readonly UserManager<ApplicationUser> _userManager;\r\n        private readonly ILogger<GenerateRecoveryCodesModel> _logger;\r\n\r\n        public GenerateRecoveryCodesModel(\r\n            UserManager<ApplicationUser> userManager,\r\n            ILogger<GenerateRecoveryCodesModel> logger)\r\n        {\r\n            _userManager = userManager;\r\n            _logger = logger;\r\n        }\r\n\r\n        public async Task<IActionResult> OnGetAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n\r\n        public async Task<IActionResult> OnPostAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n            }\r\n\r\n            var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n            TempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\n\r\n            _logger.LogInformation(\"User with ID '{UserId}' has generated new 2FA recovery codes.\", user.Id);\r\n\r\n            return RedirectToPage(\"./ShowRecoveryCodes\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n4. Create a new file, `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml` with the following contents \r\n\r\n```C#\r\n@page\r\n@model ShowRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n5. Create a new file `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs` with the following contents\r\n\r\n```C#\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class ShowRecoveryCodesModel : PageModel\r\n    {\r\n        public string[] RecoveryCodes { get; private set; }\r\n\r\n        public IActionResult OnGet()\r\n        {\r\n            RecoveryCodes = (string[])TempData[\"RecoveryCodes\"];\r\n            if (RecoveryCodes == null)\r\n            {\r\n                return RedirectToPage(\"TwoFactorAuthentication\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n6. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find \r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\n```\r\n  and add a new declaration underneath,\r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. The last line in this method should be\r\n\r\n```C#\r\nreturn RedirectToAction(nameof(GenerateRecoveryCodes));\r\n```\r\n\r\nReplace this final line with\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\nreturn RedirectToAction(nameof(ShowRecoveryCodes));\r\n```\r\n\r\n3. Create a new method in `Controllers\\ManageController.cs` called `ShowRecoveryCodes()` with the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file and find the `GenerateRecoveryCodes()` method. The code should look as follows\r\n\r\n```C# \r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    ...\r\n}\r\n```\r\nReplace the method with the following\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n    }\r\n\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    _logger.LogInformation(\"User with ID {UserId} has generated new 2FA recovery codes.\", user.Id);\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes.ToArray() };\r\n\r\n    return View(nameof(ShowRecoveryCodes), model);\r\n}\r\n```\r\n\r\n6. Create a new View in `Views\\Manage\\ShowRecoveryCodes.cshtml` with the following content\r\n\r\n```\r\n@model ShowRecoveryCodesViewModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n7. Create a new `ShowRecoveryCodesViewModel` class in the `Models\\ManageViewModels` folder and create the class as follows\r\n\r\n```c#\r\npublic class ShowRecoveryCodesViewModel\r\n{\r\n    public string[] RecoveryCodes { get; set; }\r\n}\r\n``` \r\n\r\n8.  Delete the `Models\\ManageViewModels\\generateRecoveryCodesViewModel.cs` file.\r\n\r\n9. Open the `Views\\Manage\\GenerateRecoveryCodes.cshtml` file. Replace the contents with \r\n\r\n```\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h2>@ViewData[\"Title\"]</h2>\r\n\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form asp-action=\"GenerateRecoveryCodes\" method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n\r\n10. Edit `Views\\Manage\\TwoFactorAuthentication.cshtml` to change `<a asp-action=\"GenerateRecoveryCodes\" class=\"btn btn-default\">Reset recovery codes</a>` to ` <a asp-action=\"GenerateRecoveryCodesWarning\" class=\"btn btn-default\">Reset recovery codes</a>`.\r\n\r\n11. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0785](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0785)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n\r\n  \r\n  \r\n  "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"958482115208781824","CreatedAt":"2018-01-30T23:28:38+00:00","UserScreenname":"aspnet","Text":"Starting soon: #ASPNET Community Standup at 3:45 PM Pacific / 23:45 GMT.\n\nToday's community links: https://t.co/Va4tu6Rv47","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":11,"RawContent":null},{"Id":"958121957295140864","CreatedAt":"2018-01-29T23:37:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup tomorrow at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":3,"RawContent":null},{"Id":"956668144784846849","CreatedAt":"2018-01-25T23:20:34+00:00","UserScreenname":"aspnet","Text":"Just blogged: @Azure Storage for Serverless .NET apps in Minutes.\nhttps://t.co/5vSYYtzt8p","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":81,"FavoriteCount":52,"RawContent":null},{"Id":"956524881121771521","CreatedAt":"2018-01-25T13:51:17+00:00","UserScreenname":"aspnet","Text":"Jeff and Maira - improving https://t.co/y1SqotEH5B LIVE at 10am ET / 15:00 UTC.  Check it out! https://t.co/IXsNIkHfWB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"955862764530024448","CreatedAt":"2018-01-23T18:00:16+00:00","UserScreenname":"aspnet","Text":"Starting now: #ASPNET Community Standup with Ryan Nowak on HttpClientFactory\n\nhttps://t.co/3dFxSj11IQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":8,"RawContent":null},{"Id":"955790962739040256","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"aspnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BDz2cgCTrt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"955640761793495042","CreatedAt":"2018-01-23T03:18:07+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is Jan 23 10 AM PT / 1800 GMT with special guest Ryan Nowak talking about Htt… https://t.co/5a8Ga9AJNL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"954763537884372997","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"aspnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/0zBt67tqGg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":3,"RawContent":null},{"Id":"954724179403837440","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"aspnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/Y02invGhm1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"953279227012542464","CreatedAt":"2018-01-16T14:54:13+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz today to learn more about .NET and ask questions about .NET, .NET Core, Visual Studio or ASPNet. https://t.co/PfmelAvxS2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":7,"RawContent":null},{"Id":"952185961147969537","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"aspnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/H2wBoF77Ri","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"950775244016332800","CreatedAt":"2018-01-09T17:04:17+00:00","UserScreenname":"aspnet","Text":"Join us for the @aspnet Community Standup at 10 AM Pacific / 18:00 UTC today. We've got special guest… https://t.co/o5WiTdUXQC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":18,"RawContent":null},{"Id":"949414507759124480","CreatedAt":"2018-01-05T22:57:12+00:00","UserScreenname":"aspnet","Text":"Announcing Preview 1 of #ASPNET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 https://t.co/xVYhW7ospD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":69,"RawContent":null},{"Id":"948916811034234882","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"aspnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/SPEnBXEEbC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":5,"RawContent":null},{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-02-01T05:30:09.8863269Z","RunDurationInMilliseconds":8349}