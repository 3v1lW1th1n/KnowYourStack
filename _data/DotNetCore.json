{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Framework 4.8 Early Access build 3621!","PublishedOn":"2018-06-06T21:19:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.8 Early Access build 3621 for your feedback. This is one of the in-development builds of the next version of the .NET Framework. The changes in this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/","RawContent":null},{"Title":"Announcing ML.NET 0.2","PublishedOn":"2018-06-06T04:36:25+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Last month at //Build 2018, we released ML.NET 0.1, a cross-platform, open source machine learning framework. We would like to thank the community for the engagement so far in helping us shape ML.NET....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/05/announcing-ml-net-0-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1","PublishedOn":"2018-05-30T17:22:16+00:00","CommentsCount":69,"FacebookCount":0,"Summary":"We&#8217;re excited to announce the release of .NET Core 2.1. It includes improvements to performance, to the runtime and tools. It also includes a new way to deploy tools as NuGet packages....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1","PublishedOn":"2018-05-30T17:22:00+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today we are excited to announce the release of Entity Framework (EF) Core 2.1. This is the latest production-ready release of our open-source and cross-platform data access technology. We are...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)","PublishedOn":"2018-05-24T01:49:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)","PublishedOn":"2018-05-21T22:44:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10","PublishedOn":"2018-05-17T17:20:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1703 (Creators Update) and Windows 10 1607 (Anniversary Update). Quality and Reliability This release contains the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup","PublishedOn":"2018-05-15T18:10:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Resolves an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7697516495","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:04:23","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Merged pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "},{"Id":"7719029569","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil\" (#70) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7800000786","Type":"PullRequestEvent","CreatedAt":"2018-06-09T03:16:46","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18393","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert\" (#18393) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"7800000384","Type":"PullRequestEvent","CreatedAt":"2018-06-09T03:16:27","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18395","RelatedDescription":"Opened pull request \"Use nameof of Encoding classes\" (#18395) at dotnet/coreclr","RelatedBody":"cc: @tarekgh, @krwq "},{"Id":"7799991529","Type":"PullRequestEvent","CreatedAt":"2018-06-09T03:09:06","Actor":"eerhardt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18378","RelatedDescription":"Merged pull request \"Remove Substring in TimeZoneInfo parsing\" (#18378) at dotnet/coreclr","RelatedBody":"Convert Substring to Slice to eliminate string allocations while parsing Posix daylight savings rules."},{"Id":"7799973485","Type":"PullRequestEvent","CreatedAt":"2018-06-09T02:53:53","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18383","RelatedDescription":"Merged pull request \"Use cached strings for ToString on integer values 0 to 9\" (#18383) at dotnet/coreclr","RelatedBody":"When doing ToString on single-digit integers, just return a cached string.  This helps avoid string allocation/formatting costs for this very common case, while only costing one comparison for other cases.\r\n\r\nMicrobenchmark:\r\n```C#\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Runtime.CompilerServices;\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\nusing BenchmarkDotNet.Attributes.Jobs;\r\n\r\n[MemoryDiagnoser]\r\n[InProcess]\r\npublic class Benchmarks\r\n{\r\n    private static void Main() => BenchmarkRunner.Run<Benchmarks>();\r\n\r\n    [Benchmark]\r\n    public static string ToString1() => 1.ToString();\r\n\r\n    [Benchmark]\r\n    public static string ToString11() => 11.ToString();\r\n}\r\n```\r\n\r\nBefore:\r\n\r\n|     Method |     Mean |     Error |    StdDev |  Gen 0 | Allocated |\r\n|----------- |---------:|----------:|----------:|-------:|----------:|\r\n|  ToString1 | 20.13 ns | 0.4800 ns | 0.5527 ns | 0.0057 |      24 B |\r\n| ToString11 | 23.45 ns | 0.5625 ns | 1.0970 ns | 0.0076 |      32 B |\r\n\r\nAfter:\r\n\r\n|     Method |     Mean |     Error |    StdDev |  Gen 0 | Allocated |\r\n|----------- |---------:|----------:|----------:|-------:|----------:|\r\n|  ToString1 | 14.79 ns | 0.3820 ns | 0.3752 ns |      - |       0 B |\r\n| ToString11 | 23.11 ns | 0.5537 ns | 0.6154 ns | 0.0076 |      32 B |\r\n\r\ncc: @jkotas, @mjsabby, @ahsonkhan "},{"Id":"7799959757","Type":"PullRequestEvent","CreatedAt":"2018-06-09T02:41:28","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18308","RelatedDescription":"Merged pull request \"Remove ConcurrentDictionary from CoreLib\" (#18308) at dotnet/coreclr","RelatedBody":"@brianrob is currently working on a change that'll remove the ConcurrentDictionary usage from tracing on Linux (which, interestingly, doesn't actually currently add to the dictionary, so it's not providing anything useful at the moment, anyway).  Once that's removed, nothing else in CoreLib is using ConcurrentDictionary, and we can remove it.  This PR is thus dependent on Brian's change."},{"Id":"7799885899","Type":"PullRequestEvent","CreatedAt":"2018-06-09T01:40:13","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18394","RelatedDescription":"Opened pull request \"Re-enable tests for Windows arm64\" (#18394) at dotnet/coreclr","RelatedBody":"These tests don't fail anymore. Re-enable them.\r\n\r\nFixes #10115"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7800064614","Type":"PullRequestEvent","CreatedAt":"2018-06-09T04:15:07","Actor":"natemcmaster","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9447","RelatedDescription":"Merged pull request \"Add flag to skip download from the CDN, and support installing from a local file share\" (#9447) at dotnet/cli","RelatedBody":"Adding two improvements from changes we made to the script to support building/testing aspnetcore.\r\n\r\n* Support for installing from a local file share. This let's us test `dotnet-install.sh/ps1` when building the aspnetcore shared framework without needing to first upload it to a remote blob store\r\n* Add `-Nocdn` to disable fetching from `dotnetcli.azureedge.net`. (workaround for https://github.com/dotnet/cli/issues/9143)"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7799259998","Type":"PullRequestEvent","CreatedAt":"2018-06-08T21:18:26","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/769","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02908-01 (master)\" (#769) at dotnet/standard","RelatedBody":""},{"Id":"7797761610","Type":"PullRequestEvent","CreatedAt":"2018-06-08T15:45:42","Actor":"mairaw","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/768","RelatedDescription":"Opened pull request \"Update version\" (#768) at dotnet/standard","RelatedBody":""},{"Id":"7793338058","Type":"PullRequestEvent","CreatedAt":"2018-06-07T20:51:23","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/762","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02902-01 (master)\" (#762) at dotnet/standard","RelatedBody":""},{"Id":"7792868560","Type":"IssuesEvent","CreatedAt":"2018-06-07T19:15:38","Actor":"jnm2","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/767","RelatedDescription":"Closed issue \"Trimming intermittently fails with InvalidCastException\" (#767) at dotnet/standard","RelatedBody":"Sometimes when building from the command line, I'll get `error MSB4018: The \"TrimFiles\" task failed unexpectedly.`:\r\n\r\n```\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\amd64\\MSBuild.exe\" /v:minimal /p:Configuration=\"Release\" /target:Build /restore \"path\\to.sln\"\r\n```\r\n\r\n> C:\\Users\\jmusser\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-26322-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(71,5): error MSB4018: System.InvalidCastException: [A]NuGet.ProjectModel.LockFile cannot be cast to [B]NuGet.ProjectModel.LockFile. Type A originates from 'NuGet.ProjectModel, Version=4.7.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35' in the context 'LoadFrom' at location 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.ProjectModel.dll'. Type B originates from 'NuGet.ProjectModel, Version=4.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' in the context 'LoadFrom' at location 'C:\\Users\\jmusser\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-26322-01\\build\\desktop\\NuGet.ProjectModel.dll'.\r\n\r\nI don't remember getting this before installing the targeting pack for .NET Framework 4.7.2, but it might not be related.\r\n\r\nI haven't figured out yet if it's related to having the same solution open in VS. It may begin working when I close the solution or close VS.\r\n\r\nAlso, I upgraded to the latest preview and it continued with the same failure.\r\n\r\ncc: @ericstj "},{"Id":"7792455679","Type":"IssuesEvent","CreatedAt":"2018-06-07T17:53:39","Actor":"jnm2","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/767","RelatedDescription":"Opened issue \"Trimming intermittently fails with InvalidCastException\" (#767) at dotnet/standard","RelatedBody":"Sometimes when building from the command line, I'll get error MSB4018: The \"TrimFiles\" task failed unexpectedly.\r\n\r\n```\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\amd64\\MSBuild.exe\" /v:minimal /p:Configuration=\"Release\" /target:Build /restore \"path\\to.sln\"\r\n```\r\n\r\n> C:\\Users\\jmusser\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-26322-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(71,5): error MSB4018: System.InvalidCastException: [A]NuGet.ProjectModel.LockFile cannot be cast to [B]NuGet.ProjectModel.LockFile. Type A originates from 'NuGet.ProjectModel, Version=4.7.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35' in the context 'LoadFrom' at location 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.ProjectModel.dll'. Type B originates from 'NuGet.ProjectModel, Version=4.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' in the context 'LoadFrom' at location 'C:\\Users\\jmusser\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-26322-01\\build\\desktop\\NuGet.ProjectModel.dll'.\r\n\r\nI don't remember getting this before installing the targeting pack for .NET Framework 4.7.2, but it might not be related.\r\n\r\nI haven't figured out yet if it's related to having the same solution open in VS. It may begin working when I close the solution or close VS.\r\n\r\ncc: @ericstj "},{"Id":"7792358255","Type":"PullRequestEvent","CreatedAt":"2018-06-07T17:34:19","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/766","RelatedDescription":"Opened pull request \"Fix typo in FileNode 'Polulate'\" (#766) at dotnet/standard","RelatedBody":"/cc @nil4"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7800044512","Type":"IssuesEvent","CreatedAt":"2018-06-09T03:56:05","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29861","RelatedDescription":"Reopened issue \"System.Numerics.Vectors partialfacades error: Invalid local constant signature: 'epsilon' \" (#29861) at dotnet/corefx","RelatedBody":"1. Run `build.cmd` on a clean clone of the repo.\r\n2. Observe partialfacade errors.\r\n\r\nThis issue might have been exposed by recent buildtools changes, specifically https://github.com/dotnet/buildtools/pull/2038, but I am not sure.\r\n\r\nLooking at the list of recent [commits to master](https://github.com/dotnet/corefx/commits/master), the corefx repo builds successfully from yesterday's last commit, prior to the dependencies update: aa73b08881ccc2a438947c19d60a6665008bcc08\r\n\r\nThe error appears after https://github.com/dotnet/corefx/pull/29836 got merged (i.e. e693ef593b152fc9f92049b63afed967f167cf6f).\r\n\r\n```text\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600001F: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x06000020: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600003B: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600003C: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600003C: Invalid local constant signature: 'minAngle' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x06000059: Invalid local constant signature: 'EPSILON' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x06000072: Invalid local constant signature: 'FLT_EPSILON' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600008B: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\n```\r\n\r\ncc @eerhardt, @ViktorHofer, @danmosemsft, @stephentoub  "},{"Id":"7799995964","Type":"PullRequestEvent","CreatedAt":"2018-06-09T03:12:48","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30228","RelatedDescription":"Opened pull request \"Use nameof in more places\" (#30228) at dotnet/corefx","RelatedBody":"I'd previously scrubbed the repo for places nameof could be used.  A lot more code has come into the repo since then, so I'm rescrubbing."},{"Id":"7799974789","Type":"PullRequestEvent","CreatedAt":"2018-06-09T02:55:09","Actor":"dotnet-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30227","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#30227) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7799974224","Type":"PullRequestEvent","CreatedAt":"2018-06-09T02:54:37","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30198","RelatedDescription":"Merged pull request \"fix setting TTL on IPv6 socket on Unix\" (#30198) at dotnet/corefx","RelatedBody":"fixes #30168 \r\n\r\nOn Unix there is separate set of options for IPv6 e.g. HOP_LIMIT instead of TTL. \r\nTrying to use SO_IP_TTL will cause failure. (works OK on Windows)\r\n\r\n"},{"Id":"7799974220","Type":"IssuesEvent","CreatedAt":"2018-06-09T02:54:37","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/30168","RelatedDescription":"Closed issue \"Setting Ttl on IPv6 socket always fails on Unix.\" (#30168) at dotnet/corefx","RelatedBody":"Consider simple program like this:\r\n\r\n```c#\r\nusing System;\r\nusing System.Net;\r\nusing System.Net.Sockets;\r\nusing System.Text;\r\n\r\nnamespace tcplistenertest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (var c = new UdpClient(AddressFamily.InterNetworkV6))\r\n            {\r\n                Encoding ASCII = Encoding.ASCII;\r\n                var Addr = IPAddress.Parse(\"2607:f8b0:400a:800::200e\");\r\n                var ipe = new IPEndPoint(Addr, 80);\r\n\r\n                c.Client.Ttl = 6;\r\n\r\n                c.Send(ASCII.GetBytes(\"GET\\t\"), 4, ipe);\r\n                Console.WriteLine(\"SENT DONE\");\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n> macik2:sockets furt$ ~/latest/dotnet run\r\n> \r\n> Unhandled Exception: System.Net.Sockets.SocketException: Operation not supported\r\n>    at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n>    at System.Net.Sockets.Socket.SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, Int32 optionValue, Boolean silent)\r\n>    at System.Net.Sockets.Socket.SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, Int32 optionValue)\r\n>    at System.Net.Sockets.Socket.set_Ttl(Int16 value)\r\n>    at tcplistenertest.Program.Main(String[] args) in /Users/furt/Projects/sockets/sockets/Program.cs:line 15\r\n> \r\n\r\n\r\nThis works OK on Windows 10. UDP packet will go out with Hop Limit set to 6.\r\n\r\nThe reason why this fails on Linux and OSX is because Unixes have separate IPV6_UNICAST_HOPS/IPV6_MULTICAST_HOPS set of controls. \r\n\r\nWe expose them via SetSocketOption() but the setter for Ttl does not use them right. \r\nOne option would also be fixing SetSocketOption() so it accepts Ttl for both address families like it does on Windows. That would IMHO help with portability.\r\n"},{"Id":"7799956411","Type":"IssuesEvent","CreatedAt":"2018-06-09T02:38:19","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25189","RelatedDescription":"Reopened issue \"\"ItemRef\" - Ref element accessor for types that already have an indexer.\" (#25189) at dotnet/corefx","RelatedBody":"We have a number of  **existing** indexable types that could benefit from a ref-returning element accessor. For example `ImmutableArray`.\r\n\r\nA typical problem is that such types already have a get/set indexer, so the only way to add an indexed byref access to elements is to add a ref returning method.\r\nI believe this will happen one way or another, since there is a motivation. So, I think we should standardize on the name of such method.\r\n\r\nHere I want to propose the following convention:\r\n\r\n```C#\r\n        // when container is readonly - I.E. ImmutableArray<T>\r\n        public ref readonly T ItemRef(int index);\r\n\r\n        // when container is writeable - I.E. List<T>\r\n        public ref T ItemRef(int index);\r\n```\r\n\r\nThe alternatives could be \r\n\r\n-\t“ElementAt” – often already taken\r\n-\t“Item”          –  clashes with the underlying name of the indexer\r\n-\t “Address”    - could work too, but I think “ItemRef” reads a lot better.\r\n-\t“ItemAt”       –  original proposed name, \"ItemRef\" still seems better\r\n\r\nExamples of uses:\r\n\r\n```C#\r\n    public class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var o = new MyCollection<int>();\r\n\r\n            // use for assignment\r\n            o.ItemRef(1) = 42;\r\n\r\n            // bind to a ref local\r\n            ref var first = ref o.ItemRef(1);\r\n            first = 42;\r\n\r\n            // read indirectly. (assume the API takes \"in\" parameter)\r\n            Print(o.ItemRef(1));\r\n        }\r\n    }\r\n\r\n    class MyCollection<T>\r\n    {\r\n        public ref T ItemRef(int index) => throw null;\r\n    }\r\n\r\n```\r\n\r\nOnce we agree on the name/pattern we can enter separate bugs for particular APIs.\r\n\r\n"},{"Id":"7799952642","Type":"PullRequestEvent","CreatedAt":"2018-06-09T02:34:59","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/28533","RelatedDescription":"Closed pull request \"Updating CoreClr dependencies to stable\" (#28533) at dotnet/corefx","RelatedBody":""},{"Id":"7799937956","Type":"PullRequestEvent","CreatedAt":"2018-06-09T02:22:36","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30225","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to preview1-26609-01, preview1-26609-01, respectively (master)\" (#30225) at dotnet/corefx","RelatedBody":""},{"Id":"7799937695","Type":"PullRequestEvent","CreatedAt":"2018-06-09T02:22:23","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30226","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#30226) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7799851750","Type":"PullRequestEvent","CreatedAt":"2018-06-09T01:14:31","Actor":"dotnet-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30226","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#30226) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7800115280","Type":"PullRequestEvent","CreatedAt":"2018-06-09T05:02:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5919","RelatedDescription":"Opened pull request \"Use sysconf(_SC_NPROCESSORS_CONF) in PAL and GC ONLY on ARM and ARM64\" (#5919) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/coreclr/pull/18289"},{"Id":"7800001110","Type":"PullRequestEvent","CreatedAt":"2018-06-09T03:17:03","Actor":"stephentoub","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5918","RelatedDescription":"Merged pull request \"Update dependencies\" (#5918) at dotnet/corert","RelatedBody":""},{"Id":"7799829926","Type":"PullRequestEvent","CreatedAt":"2018-06-09T00:59:09","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5917","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5917) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7799825449","Type":"PullRequestEvent","CreatedAt":"2018-06-09T00:55:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5902","RelatedDescription":"Closed pull request \"[JustForView]Moved Mutex.cs From src to shared\" (#5902) at dotnet/corert","RelatedBody":"Related PR:- https://github.com/dotnet/coreclr/pull/18320\r\n\r\nCorert:- Implementation varies a lot for windows and unix. Windows implementation  matches the Coreclr Implementation.\r\nMerged Mutex.Windows.cs into Mutex.cs\r\nMoved Mutex.cs to Shared"},{"Id":"7799824770","Type":"PullRequestEvent","CreatedAt":"2018-06-09T00:55:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5918","RelatedDescription":"Opened pull request \"Update dependencies\" (#5918) at dotnet/corert","RelatedBody":""},{"Id":"7798829139","Type":"PullRequestEvent","CreatedAt":"2018-06-08T19:35:54","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5917","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5917) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7797424105","Type":"PullRequestEvent","CreatedAt":"2018-06-08T14:47:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5916","RelatedDescription":"Merged pull request \"Escape native library paths in Microsoft.NETCore.Native.Windows.props\" (#5916) at dotnet/corert","RelatedBody":"Fixes  #5915."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1005082168442449920","CreatedAt":"2018-06-08T13:40:37+00:00","UserScreenname":"dotnet","Text":"Tune in with Jeff as he works through the tutorials to learn F#.  Ask questions, and learn along with him https://t.co/rntL0szWYX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":12,"RawContent":null},{"Id":"1004145068381331456","CreatedAt":"2018-06-05T23:36:55+00:00","UserScreenname":"dotnet","Text":"Cool retro game built with #dotnet #monogame. Clone the repo, play the game, and you could win some serious money!… https://t.co/iHu2MQ1bME","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":68,"FavoriteCount":17,"RawContent":null}]}},"RunOn":"2018-06-09T05:30:37.8489233Z","RunDurationInMilliseconds":9630}