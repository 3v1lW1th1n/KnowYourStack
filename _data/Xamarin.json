{"Data":{"Blog":{"FeedItems":[{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7901746770","Type":"IssuesEvent","CreatedAt":"2018-06-30T17:25:29","Actor":"mattleibow","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1907","RelatedDescription":"Closed issue \"NETWORK_TYPE_METERED was changed to NETWORK_TYPE_CELLULAR in API 28\" (#1907) at xamarin/xamarin-android","RelatedBody":"According to the Android docs, the `NETWORK_TYPE_METERED` constant was deprecated in favor of `NETWORK_TYPE_CELLULAR`. This appears to be just a name change, but We can do the same in C#.\r\n\r\nSee the official docs here: \r\nhttps://developer.android.com/reference/android/app/job/JobInfo.html#NETWORK_TYPE_CELLULAR\r\n\r\nVS Version info:\r\nhttps://gist.github.com/mattleibow/c996be18c11dc6b380c24035f696788f"},{"Id":"7901743791","Type":"IssuesEvent","CreatedAt":"2018-06-30T17:23:05","Actor":"mattleibow","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1907","RelatedDescription":"Opened issue \"NETWORK_TYPE_METERED was changed to NETWORK_TYPE_CELLULAR in API 28\" (#1907) at xamarin/xamarin-android","RelatedBody":"According to the Android docs, the `NETWORK_TYPE_METERED` constant was deprecated in favor of `NETWORK_TYPE_CELLULAR`. This appears to be just a name change, but We can do the same in C#.\r\n\r\nSee the official docs here: \r\nhttps://developer.android.com/reference/android/app/job/JobInfo.html#NETWORK_TYPE_CELLULAR\r\n\r\nVS Version info:\r\nhttps://gist.github.com/mattleibow/c996be18c11dc6b380c24035f696788f"},{"Id":"7900436973","Type":"IssuesEvent","CreatedAt":"2018-06-29T23:39:59","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1791","RelatedDescription":"Closed issue \"SIGSEGV in Skia on specific device\" (#1791) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download https://github.com/luhenry/CrashGPS/tree/newcrash and open solution file from `GPS.Kernel.Project.Xamarin`\r\n2. Launch on dedicated device\r\n3. Click on any of the button\r\n\r\n### Expected Behavior\r\n\r\nIt doesn’t crash. The _equivalent_ Java app (available in `GPS.Kernel.Project.Java`) properly shows the components without crashing.\r\n\r\n### Actual Behavior\r\n\r\nIt does crash.\r\n\r\n### Version Information\r\n\r\nIt only crashes with a very specific device. It is being shipped to @jonpryor so he can take a look. It also crashes with latest XA stable and doesn’t seem to be version specific.\r\n\r\n### Log File\r\n\r\nThe stacktrace appears to be in Skia, even if SkiaSharp is not in use.\r\n\r\n _coming soon_"},{"Id":"7900034198","Type":"IssuesEvent","CreatedAt":"2018-06-29T21:17:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1888","RelatedDescription":"Closed issue \"Large libraries in binding causing dx error with too large of main dex file\" (#1888) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nWe've encountered a case where a pretty large .jar file in a Xamarin.Android binding project is causing the app project consuming it to hit a dx error:\r\n\r\n```\r\ncom.android.dex.DexException: Too many classes in --main-dex-list, main dex capacity exceeded\r\n    \tat com.android.dx.command.dexer.Main.processAllFiles(Main.java:548)\r\n    \tat com.android.dx.command.dexer.Main.runMultiDex(Main.java:368)\r\n    \tat com.android.dx.command.dexer.Main.runDx(Main.java:289)\r\n    \tat com.android.dx.command.dexer.Main.main(Main.java:247)\r\n    \tat com.android.dx.command.Main.main(Main.java:94)\r\n```\r\n\r\nNow, on the Android Studio side, this can be mitigated by using the dex options:\r\n```\r\ndexOptions {\r\n    preDexLibraries = true\r\n    jumboMode = true\r\n    keepRuntimeAnnotatedClasses false\r\n}\r\n```\r\n\r\nIn Xamarin, we can specify _some_ of these options:\r\n```\r\n<DxExtraArguments>--force-jumbo </DxExtraArguments>\r\n```\r\n\r\nHowever, there appears to be no way to do the equivalent of `keepRuntimeAnnotatedClasses false`.\r\n\r\nUpon further investigation, it seems that `com.android.multidex.MainDexListBuilder` which is what we invoke from google's build-tools to generate the main dex list keep file, does not offer any ability to *not* keep runtime annotated classes, and these classes are added to the main dex keep list file no matter what.  So, gradle appears to generate this list some other way, or at least have the ability to remove these cases from the list before invoking dx.\r\n\r\nI also looked to see if there was an opportunity to wire up a custom msbuild task to _intercept_ the `multidex.keep` file we generate and make changes to it, before we pass it to `dx.jar`, but unfortunately those operations happen within the same msbuild task so that doesn't appear to be possible.\r\n\r\nOne possible solution that comes to mind is to introduce some sort of `MainDexListRemove` msbuild property in which we could specify a file containing classes that should be removed from the `multidex.keep` file, that the Xamarin.Android build task would take into consideration after the file is created, and make changes to, before it's passed to dx.  This could mean the nuget package for the binding could include such a `multidex.remove` file in the .nupkg, with a targets file that sets the msbuild property so that apps consuming the binding would hopefully compile.\r\n\r\nThoughts? "},{"Id":"7900033279","Type":"PullRequestEvent","CreatedAt":"2018-06-29T21:17:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1896","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add ExtraArgs support to `CreateMultiDexMainDexClassList`.\" (#1896) at xamarin/xamarin-android","RelatedBody":"Context #1888\r\n\r\nThe component team need the ability to pass additional arguments\r\nto the `com.android.multidex.MainDexListBuilder`. Specifically\r\nthey need to pass `--disable-annotation-resolution-workaround`.\r\n\r\nSince we don't want to do that on all apps, we should add the ability\r\nfor them to provide those values in the `csproj` of the binding.\r\n\r\nThis commit adds `$(AndroidMultiDexClassListExtraArgs)` which will be\r\nappended to the `CreateMultiDexMainDexClassList` command line.\r\nThis will allow the team to pass any additional arguments they need."},{"Id":"7899951036","Type":"PullRequestEvent","CreatedAt":"2018-06-29T20:56:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1903","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] _CleanIntermediateIfNuGetsChange deletes build.props\" (#1903) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1878\r\n\r\nThe initial `_CleanIntermediateIfNuGetsChange` target had a terrible\r\nbug.\r\n\r\nIf you were building a project for the first time, due to the ordering\r\nof targets:\r\n\r\n    <BuildDependsOn>\r\n        _ValidateLinkMode;\r\n        _SetupDesignTimeBuildForBuild;\r\n        _CreatePropertiesCache;\r\n        _AddAndroidDefines;\r\n        _AddNativeLibraryArchiveToCompile;\r\n        _CheckTargetFramework;\r\n        _RemoveLegacyDesigner;\r\n        _ValidateAndroidPackageProperties;\r\n        _CleanIntermediateIfNuGetsChange;\r\n        $(BuildDependsOn);\r\n    </BuildDependsOn>\r\n\r\n`_CreatePropertiesCache` creates `build.props`, but then on a first\r\nbuild `_CleanIntermediateIfNuGetsChange` runs and deletes it!\r\n\r\nThe fix here is to move `_CleanIntermediateIfNuGetsChange` ahead of\r\n`_CreatePropertiesCache`--it does not appear that any other\r\nintermediate files are created before this target.\r\n\r\nI also updated the tests that validate\r\n`_CleanIntermediateIfNuGetsChange` to make sure that `build.props`\r\nexist."},{"Id":"7899925409","Type":"PullRequestEvent","CreatedAt":"2018-06-29T20:50:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1904","RelatedDescription":"Merged pull request \"[Mono.Android] Do not try to use new jni marshal methods yet\" (#1904) at xamarin/xamarin-android","RelatedBody":"The jnimarshalmethod-gen build infrastructure is not ready yet, so\r\nfor now we don't need to look for the registration methods.\r\n\r\nThe `TryRegisterNativeMembers` is quite slow and needs an update. See\r\nhttps://github.com/xamarin/xamarin-android/issues/1898."},{"Id":"7899908643","Type":"PullRequestEvent","CreatedAt":"2018-06-29T20:46:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1889","RelatedDescription":"Merged pull request \"[CodeBehind] Fix code generation for layouts with non-element root\" (#1889) at xamarin/xamarin-android","RelatedBody":"If the Android layout file being processed has an XML node other than an\r\nelement (e.g. a comment) directly following the XML declaration node, the\r\ngenerator fails to properly locate the root element and will miss any namespace\r\ndeclarations on it, as well as the `xamarin:classes` attribute.\r\n\r\nThis results in failure to generate partial class code and will also cause an\r\nerror to parse any elements with the `xamarin:managedType` attribute further\r\ndown in the layout file.\r\n\r\nThe fix is to skip over non-element nodes until we find the first element one\r\nand then attempt to read namespaces and other attributes."},{"Id":"7899699497","Type":"IssuesEvent","CreatedAt":"2018-06-29T19:57:02","Actor":"BeanStalka","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1906","RelatedDescription":"Opened issue \"monodroid.so can't find other mono .so libraries in Android Things OEM application\" (#1906) at xamarin/xamarin-android","RelatedBody":"I'm using a Raspberry pi and running Android Things on it.\r\n\r\nThe Android Things console allows a developer to upload their applications and include them on the OEM image.\r\n\r\nYou would then burn this image to a SD Card and use said card in a Raspberry Pi.\r\n\r\nIn the attached zip, please find\r\ncopy of custom powershell scrpt\r\ncopy of logcat\r\n\r\nI have no way of attaching the .apk files that I have\r\n\r\nlet me know where to drop them as I am sure they will help in diagnosing whats going on.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a hello world Xamarin Android Application \r\n2. Set Build Config to Release, Turn off Shared Runtime.\r\n3. Archive the application, creating an apk.\r\n4. Run attached script to remove .so files,add them back uncompressed,zip align and re-sign the apk\r\n5. Create an Android Things Account and create a Raspberry Pi build with latest Android Things version.\r\n        a. Add you new apps apk to the Android Things Build\r\n6. Download develpopment version of the build\r\n7. Burn downloaded .iso to a sd card\r\n8. place SD Card in Raspberry Pi and boot up\r\n9. App begins to boot, but falls over with this error:\r\n\r\n06-29 19:30:08.060: W/monodroid(27608): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:08.060: W/monodroid(27608): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:08.060: W/monodroid(27608): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:08.060: A/monodroid(27608): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:08.060: A/monodroid(27608): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:08.060: A/monodroid(27608): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:08.108: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27608) has died: fore TOP \r\n\r\nIt seems that monodroid cannot find the other .so files.\r\n\r\nThis is probably due to the following:\r\n\r\n1.) The app is installed in the OEM partition\r\n2.) The .so files are read from the apk directly and not copied/extracted.\r\n\r\nMy best guess is that monodroid is looking where the files would be copied if it were a standard application installation.  But since this app is in the oem folder, the libraries are read directly from there in their uncompressed state.\r\n\r\n### Expected Behavior\r\nThe monodroid library would find and load the libraries in the /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/app.apk\r\n\r\nAND NOT look in\r\n/oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/ which does not exist\r\n\r\n### Actual Behavior\r\nmonodroid library assumes the files location in /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/ and falls over when it cannot be loaded\r\n\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.1\r\nVisualStudio.15.Release/15.7.1+27703.2000\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\n[Files.zip](https://github.com/xamarin/xamarin-android/files/2150717/Files.zip)\r\n\r\n\r\nInstalled Version: Community\r\n\r\nMicrosoft Visual Studio Tools for Applications 2017   00369-60000-00001-AA218\r\nMicrosoft Visual Studio Tools for Applications 2017\r\n\r\nVisual C++ 2017   00369-60000-00001-AA218\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40501.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.0.40424.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.1\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nSQL Server Integration Services   \r\nMicrosoft SQL Server Integration Services Designer\r\nVersion 14.0.800.98\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27625.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 16ecf5a30ad868d183c58e4a71a71c23d4ed3ba9.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7408.1\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.0.442 (396b18cef)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.264 (fc37cd02e)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.177 (7e782c1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n### Log File\r\n\r\n2. Paste below this comment block\r\n\r\n06-29 19:30:03.408: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27353) has died: fore TOP \r\n06-29 19:30:03.408: W/system_server(302): kill(-27353, 9) failed: No such process\r\n06-29 19:30:03.409: I/Zygote(156): Process 27353 exited cleanly (15)\r\n06-29 19:30:03.420: I/ActivityManager(302): Start proc 27368:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:03.447: W/system_server(302): kill(-27353, 9) failed: No such process\r\n06-29 19:30:03.447: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27353 in 39ms\r\n06-29 19:30:03.620: W/monodroid(27368): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:03.620: W/monodroid(27368): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:03.620: W/monodroid(27368): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:03.620: A/monodroid(27368): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:03.620: A/monodroid(27368): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:03.620: A/monodroid(27368): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:03.678: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27368) has died: fore TOP \r\n06-29 19:30:03.678: I/Zygote(156): Process 27368 exited cleanly (15)\r\n06-29 19:30:03.679: W/system_server(302): kill(-27368, 9) failed: No such process\r\n06-29 19:30:03.680: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27368 in 1ms\r\n06-29 19:30:03.690: I/ActivityManager(302): Start proc 27383:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:03.890: W/monodroid(27383): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:03.890: W/monodroid(27383): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:03.890: W/monodroid(27383): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:03.890: A/monodroid(27383): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:03.890: A/monodroid(27383): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:03.890: A/monodroid(27383): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:03.938: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27383) has died: fore TOP \r\n06-29 19:30:03.938: W/system_server(302): kill(-27383, 9) failed: No such process\r\n06-29 19:30:03.938: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27383 in 0ms\r\n06-29 19:30:03.938: I/Zygote(156): Process 27383 exited cleanly (15)\r\n06-29 19:30:03.951: I/ActivityManager(302): Start proc 27398:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:04.160: W/monodroid(27398): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:04.160: W/monodroid(27398): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:04.160: W/monodroid(27398): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:04.160: A/monodroid(27398): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:04.160: A/monodroid(27398): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:04.161: A/monodroid(27398): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:04.209: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27398) has died: fore TOP \r\n06-29 19:30:04.209: W/system_server(302): kill(-27398, 9) failed: No such process\r\n06-29 19:30:04.209: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27398 in 0ms\r\n06-29 19:30:04.209: I/Zygote(156): Process 27398 exited cleanly (15)\r\n06-29 19:30:04.221: I/ActivityManager(302): Start proc 27413:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:04.281: E/zygote(27413): Failed sending reply to debugger: Broken pipe\r\n06-29 19:30:04.281: I/zygote(27413): Debugger is no longer active\r\n06-29 19:30:04.420: W/monodroid(27413): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:04.420: W/monodroid(27413): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:04.420: W/monodroid(27413): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:04.420: A/monodroid(27413): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:04.420: A/monodroid(27413): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:04.420: A/monodroid(27413): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:04.508: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27413) has died: fore TOP \r\n06-29 19:30:04.508: I/Zygote(156): Process 27413 exited cleanly (15)\r\n06-29 19:30:04.509: W/system_server(302): kill(-27413, 9) failed: No such process\r\n06-29 19:30:04.509: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27413 in 1ms\r\n06-29 19:30:04.520: I/ActivityManager(302): Start proc 27428:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:04.729: W/monodroid(27428): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:04.729: W/monodroid(27428): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:04.729: W/monodroid(27428): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:04.729: A/monodroid(27428): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:04.729: A/monodroid(27428): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:04.729: A/monodroid(27428): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:04.788: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27428) has died: fore TOP \r\n06-29 19:30:04.788: W/system_server(302): kill(-27428, 9) failed: No such process\r\n06-29 19:30:04.788: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27428 in 0ms\r\n06-29 19:30:04.789: I/Zygote(156): Process 27428 exited cleanly (15)\r\n06-29 19:30:04.800: I/ActivityManager(302): Start proc 27443:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:05.010: W/monodroid(27443): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:05.010: W/monodroid(27443): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:05.010: W/monodroid(27443): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:05.010: A/monodroid(27443): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:05.010: A/monodroid(27443): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:05.010: A/monodroid(27443): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:05.068: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27443) has died: fore TOP \r\n06-29 19:30:05.068: W/system_server(302): kill(-27443, 9) failed: No such process\r\n06-29 19:30:05.070: I/Zygote(156): Process 27443 exited cleanly (15)\r\n06-29 19:30:05.081: I/ActivityManager(302): Start proc 27458:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:05.107: W/system_server(302): kill(-27443, 9) failed: No such process\r\n06-29 19:30:05.107: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27443 in 39ms\r\n06-29 19:30:05.280: W/monodroid(27458): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:05.280: W/monodroid(27458): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:05.280: W/monodroid(27458): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:05.280: A/monodroid(27458): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:05.280: A/monodroid(27458): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:05.280: A/monodroid(27458): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:05.338: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27458) has died: fore TOP \r\n06-29 19:30:05.338: W/system_server(302): kill(-27458, 9) failed: No such process\r\n06-29 19:30:05.339: I/Zygote(156): Process 27458 exited cleanly (15)\r\n06-29 19:30:05.358: I/ActivityManager(302): Start proc 27473:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:05.385: W/system_server(302): kill(-27458, 9) failed: No such process\r\n06-29 19:30:05.387: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27458 in 49ms\r\n06-29 19:30:05.549: W/monodroid(27473): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:05.550: W/monodroid(27473): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:05.550: W/monodroid(27473): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:05.550: A/monodroid(27473): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:05.550: A/monodroid(27473): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:05.550: A/monodroid(27473): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:05.618: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27473) has died: fore TOP \r\n06-29 19:30:05.619: W/system_server(302): kill(-27473, 9) failed: No such process\r\n06-29 19:30:05.619: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27473 in 0ms\r\n06-29 19:30:05.620: I/Zygote(156): Process 27473 exited cleanly (15)\r\n06-29 19:30:05.631: I/ActivityManager(302): Start proc 27488:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:05.860: W/monodroid(27488): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:05.860: W/monodroid(27488): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:05.860: W/monodroid(27488): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:05.860: A/monodroid(27488): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:05.860: A/monodroid(27488): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:05.860: A/monodroid(27488): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:05.918: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27488) has died: fore TOP \r\n06-29 19:30:05.918: W/system_server(302): kill(-27488, 9) failed: No such process\r\n06-29 19:30:05.918: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27488 in 0ms\r\n06-29 19:30:05.919: I/Zygote(156): Process 27488 exited cleanly (15)\r\n06-29 19:30:05.931: I/ActivityManager(302): Start proc 27503:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:06.150: W/monodroid(27503): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:06.150: W/monodroid(27503): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:06.150: W/monodroid(27503): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:06.150: A/monodroid(27503): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:06.150: A/monodroid(27503): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:06.150: A/monodroid(27503): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:06.218: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27503) has died: fore TOP \r\n06-29 19:30:06.218: W/system_server(302): kill(-27503, 9) failed: No such process\r\n06-29 19:30:06.218: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27503 in 0ms\r\n06-29 19:30:06.219: I/Zygote(156): Process 27503 exited cleanly (15)\r\n06-29 19:30:06.231: I/ActivityManager(302): Start proc 27518:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:06.440: W/monodroid(27518): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:06.440: W/monodroid(27518): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:06.440: W/monodroid(27518): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:06.440: A/monodroid(27518): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:06.440: A/monodroid(27518): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:06.440: A/monodroid(27518): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:06.488: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27518) has died: fore TOP \r\n06-29 19:30:06.489: W/system_server(302): kill(-27518, 9) failed: No such process\r\n06-29 19:30:06.490: I/Zygote(156): Process 27518 exited cleanly (15)\r\n06-29 19:30:06.501: I/ActivityManager(302): Start proc 27533:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:06.527: W/system_server(302): kill(-27518, 9) failed: No such process\r\n06-29 19:30:06.527: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27518 in 39ms\r\n06-29 19:30:06.710: W/monodroid(27533): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:06.710: W/monodroid(27533): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:06.710: W/monodroid(27533): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:06.710: A/monodroid(27533): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:06.710: A/monodroid(27533): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:06.710: A/monodroid(27533): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:06.778: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27533) has died: fore TOP \r\n06-29 19:30:06.778: W/system_server(302): kill(-27533, 9) failed: No such process\r\n06-29 19:30:06.778: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27533 in 0ms\r\n06-29 19:30:06.779: I/Zygote(156): Process 27533 exited cleanly (15)\r\n06-29 19:30:06.793: I/ActivityManager(302): Start proc 27548:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:06.848: E/zygote(27548): Failed sending reply to debugger: Broken pipe\r\n06-29 19:30:06.848: I/zygote(27548): Debugger is no longer active\r\n06-29 19:30:07.000: W/monodroid(27548): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:07.000: W/monodroid(27548): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:07.000: W/monodroid(27548): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:07.000: A/monodroid(27548): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:07.000: A/monodroid(27548): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:07.000: A/monodroid(27548): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:07.048: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27548) has died: fore TOP \r\n06-29 19:30:07.048: W/system_server(302): kill(-27548, 9) failed: No such process\r\n06-29 19:30:07.050: I/Zygote(156): Process 27548 exited cleanly (15)\r\n06-29 19:30:07.061: I/ActivityManager(302): Start proc 27563:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:07.087: W/system_server(302): kill(-27548, 9) failed: No such process\r\n06-29 19:30:07.087: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27548 in 39ms\r\n06-29 19:30:07.250: W/monodroid(27563): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:07.250: W/monodroid(27563): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:07.250: W/monodroid(27563): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:07.250: A/monodroid(27563): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:07.250: A/monodroid(27563): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:07.250: A/monodroid(27563): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:07.308: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27563) has died: fore TOP \r\n06-29 19:30:07.308: W/system_server(302): kill(-27563, 9) failed: No such process\r\n06-29 19:30:07.309: I/Zygote(156): Process 27563 exited cleanly (15)\r\n06-29 19:30:07.320: I/ActivityManager(302): Start proc 27578:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:07.347: W/system_server(302): kill(-27563, 9) failed: No such process\r\n06-29 19:30:07.347: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27563 in 39ms\r\n06-29 19:30:07.509: W/monodroid(27578): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:07.509: W/monodroid(27578): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:07.509: W/monodroid(27578): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:07.509: A/monodroid(27578): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:07.509: A/monodroid(27578): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:07.509: A/monodroid(27578): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:07.558: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27578) has died: fore TOP \r\n06-29 19:30:07.558: W/system_server(302): kill(-27578, 9) failed: No such process\r\n06-29 19:30:07.558: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27578 in 0ms\r\n06-29 19:30:07.559: I/Zygote(156): Process 27578 exited cleanly (15)\r\n06-29 19:30:07.571: I/ActivityManager(302): Start proc 27593:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:07.770: W/monodroid(27593): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:07.770: W/monodroid(27593): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:07.770: W/monodroid(27593): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:07.770: A/monodroid(27593): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:07.770: A/monodroid(27593): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:07.770: A/monodroid(27593): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:07.828: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27593) has died: fore TOP \r\n06-29 19:30:07.828: W/system_server(302): kill(-27593, 9) failed: No such process\r\n06-29 19:30:07.829: I/Zygote(156): Process 27593 exited cleanly (15)\r\n06-29 19:30:07.840: I/ActivityManager(302): Start proc 27608:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:07.867: W/system_server(302): kill(-27593, 9) failed: No such process\r\n06-29 19:30:07.868: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27593 in 39ms\r\n06-29 19:30:08.060: W/monodroid(27608): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:08.060: W/monodroid(27608): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:08.060: W/monodroid(27608): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:08.060: A/monodroid(27608): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:08.060: A/monodroid(27608): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:08.060: A/monodroid(27608): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:08.108: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27608) has died: fore TOP \r\n06-29 19:30:08.109: W/system_server(302): kill(-27608, 9) failed: No such process\r\n06-29 19:30:08.109: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27608 in 0ms\r\n06-29 19:30:08.109: I/Zygote(156): Process 27608 exited cleanly (15)\r\n06-29 19:30:08.121: I/ActivityManager(302): Start proc 27623:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:08.340: W/monodroid(27623): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-2.0.so\r\n06-29 19:30:08.340: W/monodroid(27623): Trying to load sgen from: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm/libmonosgen-32bit-2.0.so\r\n06-29 19:30:08.340: W/monodroid(27623): Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n06-29 19:30:08.340: A/monodroid(27623): cannot find libmonosgen-2.0.so in app_libdir: /oem/app/MicroSemiAudioTest.MicroSemiAudioTest/lib/arm nor in previously printed locations.\r\n06-29 19:30:08.340: A/monodroid(27623): Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n06-29 19:30:08.340: A/monodroid(27623): Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n06-29 19:30:08.399: I/ActivityManager(302): Process MicroSemiAudioTest.MicroSemiAudioTest (pid 27623) has died: fore TOP \r\n06-29 19:30:08.399: W/system_server(302): kill(-27623, 9) failed: No such process\r\n06-29 19:30:08.400: I/Zygote(156): Process 27623 exited cleanly (15)\r\n06-29 19:30:08.412: I/ActivityManager(302): Start proc 27638:MicroSemiAudioTest.MicroSemiAudioTest/u0a32 for activity MicroSemiAudioTest.MicroSemiAudioTest/md5441c050b2fbf40f881dd8227e4a58352.MainActivity\r\n06-29 19:30:08.437: W/system_server(302): kill(-27623, 9) failed: No such process\r\n06-29 19:30:08.437: I/system_server(302): Successfully killed process cgroup uid 10032 pid 27623 in 38ms\r\n"},{"Id":"7898625127","Type":"PullRequestEvent","CreatedAt":"2018-06-29T15:54:40","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1905","RelatedDescription":"Opened pull request \"[build] fix for *new* TargetFrameworkVersion during nuget restore\" (#1905) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/1820059\r\n\r\nSince f9a7cfc, NuGet restore has been failing for `Xamarin.Android-Tests.sln`:\r\n\r\n    Error XA0000: Could not determine API level for $(TargetFrameworkVersion) of 'v9.0'. [E:\\A\\_work\\2\\s\\src\\Mono.Android\\Test\\Mono.Android-Tests.csproj]\r\n\r\nWhen running:\r\n\r\n    .nuget\\NuGet.exe restore Xamarin.Android-Tests.sln -Verbosity Detailed\r\n\r\nThere is a little more insight into how NuGet works:\r\n\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\bin\\msbuild.exe\r\n        \"C:\\Users\\myuser\\AppData\\Local\\Temp\\NuGetScratch\\rh0oot0c.d22.nugetinputs.targets\"\r\n        /t:GenerateRestoreGraphFile /nologo /nr:false /v:q\r\n        /p:NuGetRestoreTargets=\"C:\\Users\\myuser\\AppData\\Local\\Temp\\NuGetScratch\\zzcd4yd1.a0q.nugetrestore.targets\"\r\n        /p:RestoreUseCustomAfterTargets=\"True\"\r\n        /p:RestoreTaskAssemblyFile=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\.nuget\\NuGet.exe\"\r\n        /p:RestoreSolutionDirectory=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\"\r\n        /p:SolutionDir=\"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\"\r\n        /p:RestoreBuildInParallel=\"False\" /p:RestoreUseSkipNonexistentTargets=\"False\"\r\n\r\nApparently this targets file:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/5244dc7596f0cc0ed65984dc8c040d23b0e9c09b/src/NuGet.Core/NuGet.Build.Tasks/NuGet.targets\r\n\r\nIs extracted and invoked through MSBuild.\r\n\r\nThen `<ResolveSdks />` from the system install fails, because it does\r\nnot know what `TargetFrameworkVersion=v9.0` is yet!\r\n\r\nSo a \"hacky\" solution is:\r\n- Don't set `TargetFrameworkVersion` if NuGet is running\r\n- Set `AndroidUseLatestPlatformSdk=True` instead\r\n\r\nWe can detect if NuGet is running by using a property from the above\r\ncommand:\r\n\r\n    <_IsRunningNuGetRestore Condition=\"$(RestoreTaskAssemblyFile.EndsWith('NuGet.exe'))\">True</_IsRunningNuGetRestore>\r\n\r\nBy leaving `AndroidFrameworkVersion` blank in `Configuration.props`,\r\nit fixes `TargetFrameworkVersion` in our projects, because they do\r\nthis:\r\n\r\n    <Import Project=\"..\\..\\..\\Configuration.props\" />\r\n    <PropertyGroup>\r\n      <TargetFrameworkVersion>$(AndroidFrameworkVersion)</TargetFrameworkVersion>\r\n    </PropertyGroup>"},{"Id":"7898278869","Type":"PullRequestEvent","CreatedAt":"2018-06-29T14:53:38","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1904","RelatedDescription":"Opened pull request \"[Mono.Android] Do not try to use new jni marshal methods yet\" (#1904) at xamarin/xamarin-android","RelatedBody":"The jnimarshalmethod-gen build infrastructure is not ready yet, so\r\nfor now we don't need to look for the registration methods.\r\n\r\nThe `TryRegisterNativeMembers` is quite slow and needs an update. See\r\nhttps://github.com/xamarin/xamarin-android/issues/1898."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7901616478","Type":"IssuesEvent","CreatedAt":"2018-06-30T15:46:00","Actor":"dotMorten","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3191","RelatedDescription":"Opened issue \"Expose XmlnsDefinitionAttribute and XmlnsPrefixAttribute\" (#3191) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nPlease consider exposing `XmlnsDefinitionAttribute` and `XmlnsPrefixAttribute`, so we can register a simple-to-use namespace for all our controls, rather than having to rely on namespace + assemblyname. This allows us to us the same prefix for a range of assemblies and namespaces, without having to register a gazillion prefixes.\r\n\r\nie\r\n```\r\n<ContentPage\r\n   xmlns:CompanyName=\"http://schemas.companyname.com/winfx/2018\">\r\n\r\n <CompanyName:SomeControl />\r\n\r\n</ContentPage>\r\n```\r\nThis class is already there but internal:\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/e6d5186c8acbf37b877c7ca3c77a378352a3743d/Xamarin.Forms.Core/XmlnsDefinitionAttribute.cs#L9\r\n\r\nAnd there's a comment in the code already saying this should be a future extensibility point:\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/4d9a5bf3706778770026a18ae81a7dd5c4c15db4/Xamarin.Forms.Build.Tasks/XmlTypeExtensions.cs#L17\r\n\r\nStuff like this makes it really easy for component vendors to spread their controls over multiple assemblies, and/or namespaces, while keeping the same xmlns prefix for all their controls.\r\n\r\nSubnote: This is also a highly voted feature for UWP as well: https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/9523650-add-support-for-xmlnsdefinitionattribute\r\n"},{"Id":"7900485855","Type":"PullRequestEvent","CreatedAt":"2018-06-30T00:05:20","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3190","RelatedDescription":"Opened pull request \"Dot solution files\" (#3190) at xamarin/Xamarin.Forms","RelatedBody":"Update dot solution files to allow building local uap package so customer can more easily verify https://github.com/xamarin/Xamarin.Forms/issues/2464"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7901749647","Type":"IssuesEvent","CreatedAt":"2018-06-30T17:27:51","Actor":"twanvermetten","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4376","RelatedDescription":"Opened issue \"Linking problem after upgrade to iOS 11.4 with Zebra dll libzsdk_iosx.dll.dylib\" (#4376) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nNative linking failed for '/Users/twan/Library/Caches/Xamarin/mtbs/builds/SQ_Mobile_Med.iOS/e7ad5f1b35db29731e2fdba27eaea9f2/obj/iPhone/Debug/device-builds/ipad6.3-11.4/mtouch-cache/arm64/libzsdk_iosx.dll.dylib'. Please file a bug report at http://bugzilla.xamarin.com\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7900262220","Type":"PullRequestEvent","CreatedAt":"2018-06-29T22:27:24","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4375","RelatedDescription":"Opened pull request \"Foundation for Xcode 10 Beta 1-2\" (#4375) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7900118603","Type":"PullRequestEvent","CreatedAt":"2018-06-29T21:41:27","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4359","RelatedDescription":"Merged pull request \"[coreml] Update for Xcode 10 beta 2\" (#4359) at xamarin/xamarin-macios","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":82,"FavoriteCount":55,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":88,"FavoriteCount":37,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":21,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":158,"FavoriteCount":85,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":24,"RawContent":null}]}},"RunOn":"2018-07-01T05:30:54.1893326Z","RunDurationInMilliseconds":4246}