{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null},{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7909060448","Type":"IssuesEvent","CreatedAt":"2018-07-02T21:34:37","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1911","RelatedDescription":"Closed issue \"Firebase Cloud Firestore error\" (#1911) at xamarin/xamarin-android","RelatedBody":"I'm trying out Firestore with Xamarin.Android.\r\nHowever, after putting this:\r\n\r\n` var db = FirebaseFirestore.Instance;`\r\nIt throws an error:\r\n\r\n`FirebaseOptions.getProjectId() cannot be null`\r\n\r\nI have a Google Services JSON with the right build settings, and it has a project id. What is the problem?"},{"Id":"7908391393","Type":"IssuesEvent","CreatedAt":"2018-07-02T19:00:00","Actor":"amitairos","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1911","RelatedDescription":"Opened issue \"Firebase Cloud Firestore error\" (#1911) at xamarin/xamarin-android","RelatedBody":"I'm trying out Firestore with Xamarin.Android.\r\nHowever, after putting this:\r\n\r\n` var db = FirebaseFirestore.Instance;`\r\nIt throws an error:\r\n\r\n`FirebaseOptions.getProjectId() cannot be null`\r\n\r\nI have a Google Services JSON with the right build settings, and it has a project id. What is the problem?"},{"Id":"7908261520","Type":"IssuesEvent","CreatedAt":"2018-07-02T18:31:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1910","RelatedDescription":"Opened issue \"AOT `.so` files need to have `DT_SONAME` set.\" (#1910) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build `samples/HelloWorld` with AOT enabled:\r\n\r\n        cd samples/HelloWorld\r\n        msbuild /p:AotAssemblies=True /p:Configuration=Release /t:Install\r\n\r\n2. Run the app\r\n3. Read `adb logcat`\r\n\r\n`adb logcat` contains messages from the linker, e.g.:\r\n\r\n```\r\nlinker  : /data/app/com.xamarin.android.helloworld-LMCh2_phMORAYd6mcwj0tw==/lib/arm/libaot-mscorlib.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-mscorlib.dll.so\"\r\n```\r\n\r\nFun fact! If you build [Xamarin.Forms.ControlGallery.Android](https://github.com/xamarin/Xamarin.Forms/tree/master/Xamarin.Forms.ControlGallery.Android) with AOT and LLVM enabled, these linker messages *appear* to \"contribute\" ~1.4s to process startup!\r\n\r\n```\r\nTime\tDevice Name\tType\tPID\tTag\tMessage\r\n07-02 18:18:15.552\t5x\tInfo\t1591\tActivityManager\tStart proc 30122:AndroidControlGallery.AndroidControlGallery/u0a94 for activity AndroidControlGallery.AndroidControlGallery/md546303760447087909496d02dc7b17ae8.Activity1\r\n07-02 18:18:15.645\t5x\tWarning\t30122\tzygote\tUnexpected CPU variant for X86 using defaults: x86\r\n07-02 18:18:17.088\t5x\tWarning\t30122\tmonodroid\tTrying to load sgen from: /data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libmonosgen-2.0.so\r\n07-02 18:18:17.376\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-mscorlib.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-mscorlib.dll.so\"\r\n07-02 18:18:17.521\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.ControlGallery.Android.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.ControlGallery.Android.dll.so\"\r\n07-02 18:18:17.539\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Mono.Android.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Mono.Android.dll.so\"\r\n07-02 18:18:17.582\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-System.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-System.dll.so\"\r\n07-02 18:18:17.595\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Mono.Security.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Mono.Security.dll.so\"\r\n07-02 18:18:17.608\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Java.Interop.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Java.Interop.dll.so\"\r\n\tat com.google.android.gms.org.conscrypt.Platform.setSocketWriteTimeout(:com.google.android.gms@12685026@12.6.85 (040700-197041431):13)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n07-02 18:18:17.745\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-System.Core.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-System.Core.dll.so\"\r\n\tat libcore.io.ForwardingOs.setsockoptTimeval(ForwardingOs.java:175)\r\n\tat libcore.io.Linux.setsockoptTimeval(Native Method)\r\n07-02 18:18:17.806\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-System.Xml.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-System.Xml.dll.so\"\r\n07-02 18:18:17.877\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.Platform.Android.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.Platform.Android.dll.so\"\r\n07-02 18:18:17.893\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.Core.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.Core.dll.so\"\r\n07-02 18:18:17.900\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-System.Net.Http.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-System.Net.Http.dll.so\"\r\n07-02 18:18:17.909\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.v7.AppCompat.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.v7.AppCompat.dll.so\"\r\n07-02 18:18:17.943\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Fragment.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Fragment.dll.so\"\r\n07-02 18:18:17.950\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Core.UI.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Core.UI.dll.so\"\r\n07-02 18:18:17.966\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-System.Runtime.Serialization.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-System.Runtime.Serialization.dll.so\"\r\n07-02 18:18:17.980\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-System.ServiceModel.Internals.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-System.ServiceModel.Internals.dll.so\"\r\n07-02 18:18:17.990\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Design.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Design.dll.so\"\r\n07-02 18:18:18.030\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.v7.RecyclerView.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.v7.RecyclerView.dll.so\"\r\n07-02 18:18:18.049\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Compat.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Compat.dll.so\"\r\n07-02 18:18:18.054\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.v7.CardView.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.v7.CardView.dll.so\"\r\n07-02 18:18:18.058\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-FormsViewGroup.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-FormsViewGroup.dll.so\"\r\n07-02 18:18:18.078\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.Controls.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.Controls.dll.so\"\r\n07-02 18:18:18.103\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.Xaml.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.Xaml.dll.so\"\r\n07-02 18:18:18.138\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.CustomAttributes.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.CustomAttributes.dll.so\"\r\n07-02 18:18:18.176\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.Maps.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.Maps.dll.so\"\r\n07-02 18:18:18.204\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Newtonsoft.Json.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Newtonsoft.Json.dll.so\"\r\n07-02 18:18:18.240\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-System.Numerics.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-System.Numerics.dll.so\"\r\n07-02 18:18:18.246\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-System.Xml.Linq.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-System.Xml.Linq.dll.so\"\r\n07-02 18:18:18.296\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Microsoft.CSharp.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Microsoft.CSharp.dll.so\"\r\n07-02 18:18:18.315\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Plugin.DeviceInfo.Abstractions.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Plugin.DeviceInfo.Abstractions.dll.so\"\r\n07-02 18:18:18.319\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Plugin.DeviceInfo.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Plugin.DeviceInfo.dll.so\"\r\n07-02 18:18:18.322\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Plugin.CurrentActivity.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Plugin.CurrentActivity.dll.so\"\r\n07-02 18:18:18.326\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.Platform.Android.AppLinks.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.Platform.Android.AppLinks.dll.so\"\r\n07-02 18:18:18.333\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Firebase.AppIndexing.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Firebase.AppIndexing.dll.so\"\r\n07-02 18:18:18.344\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.GooglePlayServices.Basement.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.GooglePlayServices.Basement.dll.so\"\r\n07-02 18:18:18.352\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.GooglePlayServices.Base.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.GooglePlayServices.Base.dll.so\"\r\n07-02 18:18:18.358\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.GooglePlayServices.Tasks.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.GooglePlayServices.Tasks.dll.so\"\r\n07-02 18:18:18.365\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.Maps.Android.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.Maps.Android.dll.so\"\r\n07-02 18:18:18.372\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.GooglePlayServices.Maps.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.GooglePlayServices.Maps.dll.so\"\r\n07-02 18:18:18.380\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-PagesGallery.Droid.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-PagesGallery.Droid.dll.so\"\r\n07-02 18:18:18.383\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-PagesGallery.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-PagesGallery.dll.so\"\r\n07-02 18:18:18.388\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.Pages.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.Pages.dll.so\"\r\n07-02 18:18:18.398\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Microsoft.Azure.Mobile.Client.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Microsoft.Azure.Mobile.Client.dll.so\"\r\n07-02 18:18:18.408\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.CustomTabs.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.CustomTabs.dll.so\"\r\n07-02 18:18:18.415\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-PCLCrypto.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-PCLCrypto.dll.so\"\r\n07-02 18:18:18.420\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Validation.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Validation.dll.so\"\r\n07-02 18:18:18.422\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Arch.Core.Common.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Arch.Core.Common.dll.so\"\r\n07-02 18:18:18.424\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Arch.Lifecycle.Common.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Arch.Lifecycle.Common.dll.so\"\r\n07-02 18:18:18.427\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Arch.Lifecycle.Runtime.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Arch.Lifecycle.Runtime.dll.so\"\r\n07-02 18:18:18.430\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Animated.Vector.Drawable.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Animated.Vector.Drawable.dll.so\"\r\n07-02 18:18:18.444\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Annotations.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Annotations.dll.so\"\r\n07-02 18:18:18.494\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Core.Utils.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Core.Utils.dll.so\"\r\n07-02 18:18:18.500\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Media.Compat.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Media.Compat.dll.so\"\r\n07-02 18:18:18.501\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Transition.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Transition.dll.so\"\r\n07-02 18:18:18.506\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.v4.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.v4.dll.so\"\r\n07-02 18:18:18.513\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.v7.Palette.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.v7.Palette.dll.so\"\r\n07-02 18:18:18.523\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Android.Support.Vector.Drawable.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Android.Support.Vector.Drawable.dll.so\"\r\n07-02 18:18:18.555\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Firebase.Common.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Firebase.Common.dll.so\"\r\n07-02 18:18:18.572\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.Forms.Platform.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.Forms.Platform.dll.so\"\r\n07-02 18:18:18.573\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Xamarin.GooglePlayServices.AppIndexing.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Xamarin.GooglePlayServices.AppIndexing.dll.so\"\r\n07-02 18:18:18.575\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-PInvoke.BCrypt.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-PInvoke.BCrypt.dll.so\"\r\n07-02 18:18:18.580\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-PInvoke.Kernel32.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-PInvoke.Kernel32.dll.so\"\r\n07-02 18:18:18.583\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-PInvoke.Windows.Core.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-PInvoke.Windows.Core.dll.so\"\r\n07-02 18:18:18.587\t5x\tWarning\t30122\tmonodroid-gc\tGREF GC Threshold: 46080\r\n\tat com.google.android.gms.org.conscrypt.Platform.setSocketWriteTimeout(:com.google.android.gms@12685026@12.6.85 (040700-197041431):13)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n07-02 18:18:18.621\t5x\tWarning\t30122\tmonodroid\tCalling into managed runtime init\r\n07-02 18:18:19.287\t5x\tInfo\t30122\tFirebaseInitProvider\tFirebaseApp initialization unsuccessful\r\n07-02 18:18:19.668\t5x\tWarning\t30122\tlinker\t/data/app/AndroidControlGallery.AndroidControlGallery-3tnRD63AYnrm5K8x_JRvAw==/lib/x86/libaot-Mono.Android.Export.dll.so: is missing DT_SONAME will use basename as a replacement: \"libaot-Mono.Android.Export.dll.so\"\r\n```\r\n\r\nWould it be possible for mono's AOT compilers to set `DT_SONAME` as part of the `.so` generation?\r\n"},{"Id":"7908177255","Type":"IssuesEvent","CreatedAt":"2018-07-02T18:13:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1909","RelatedDescription":"Opened issue \"libmonodroid.so is printing out extraneous messages in Release builds.\" (#1909) at xamarin/xamarin-android","RelatedBody":"Release builds shouldn't \"spam\" logcat. (That's what Debug builds are for!)\r\n\r\nFor example:\r\n\r\n```\r\n07-02 14:11:02.336 14381 14381 W monodroid: Creating public update directory: `/data/user/0/com.xamarin.android.helloworld/files/.__override__`\r\n07-02 14:11:02.336 14381 14381 W monodroid: Using override path: /data/user/0/com.xamarin.android.helloworld/files/.__override__\r\n07-02 14:11:02.336 14381 14381 W monodroid: Using override path: /storage/emulated/0/Android/data/com.xamarin.android.helloworld/files/.__override__\r\n07-02 14:11:02.336 14381 14381 W monodroid: Trying to load sgen from: /data/user/0/com.xamarin.android.helloworld/files/.__override__/libmonosgen-2.0.so\r\n07-02 14:11:02.336 14381 14381 W monodroid: Trying to load sgen from: /storage/emulated/0/Android/data/com.xamarin.android.helloworld/files/.__override__/libmonosgen-2.0.so\r\n07-02 14:11:02.336 14381 14381 W monodroid: Trying to load sgen from: /storage/emulated/0/../legacy/Android/data/com.xamarin.android.helloworld/files/.__override__/libmonosgen-2.0.so\r\n07-02 14:11:02.336 14381 14381 W monodroid: Trying to load sgen from: /data/app/com.xamarin.android.helloworld-Kvg1puBZNPsI0VAvmW55Cg==/lib/arm/libmonosgen-2.0.so\r\n07-02 14:11:02.363 14381 14381 W monodroid-gc: GREF GC Threshold: 46080\r\n07-02 14:11:02.367 14381 14381 W monodroid: Calling into managed runtime init\r\n```"},{"Id":"7907528431","Type":"PullRequestEvent","CreatedAt":"2018-07-02T15:56:16","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1897","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add Warnings for minimum Google Play requirements.\" (#1897) at xamarin/xamarin-android","RelatedBody":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/635168\r\nFixes https://github.com/xamarin/xamarin-android/issues/1766\r\n\r\nGoogle as of August and November 2018 will required a minimum\r\nof TargetFrameworkVersion v8.0 to publish/update apps.\r\n\r\nThis commit adds a new check to `ResolveSdksTask` which will\r\nemit warnings when we hit those dates. This will only happen\r\nif the `TargetFrameworkVersion` < `v8.0`\r\n\r\nIf you are not targeting the Google Play store and wish to hide these\r\nwarnings you can make use of the `/nowarn:XA0114,XA0113` command line switch. \r\nAlternatively add\r\n\r\n    <NoWarn>XA0114;XA0113</NoWarn>\r\n\r\nto your .csproj.\r\n\r\n[1] [Google Play's target API level requirement](https://developer.android.com/distribute/best-practices/develop/target-sdk)"},{"Id":"7907528418","Type":"IssuesEvent","CreatedAt":"2018-07-02T15:56:16","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1766","RelatedDescription":"Closed issue \"Throw a warning when targetSdkVersion is < 26 for new Google Play requirements starting August 2018\" (#1766) at xamarin/xamarin-android","RelatedBody":"> Google Play will require that new apps target at least Android 8.0 (API level 26) from August 2018, and that app updates target Android 8.0 from November 2018.\r\n\r\nThus we should add a warning message to handle the following situations:\r\n\r\n**August 1, 2018 - New apps must target at least Android 8.0 (API level 26)**\r\n**November 1, 2018 - App updates must target at least Android 8.0 (API level 26)**\r\n\r\n![](https://pbs.twimg.com/media/DeejOhUUQAAvuPZ.jpg)\r\n\r\n**Documentation**\r\n\r\n- https://support.google.com/googleplay/android-developer/answer/113469#targetsdk\r\n- https://developer.android.com/distribute/best-practices/develop/target-sdk\r\n\r\n> VS bug [#635168](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/635168)"},{"Id":"7907466347","Type":"PullRequestEvent","CreatedAt":"2018-07-02T15:44:49","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1908","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Dont kill adb when debugging.\" (#1908) at xamarin/xamarin-android","RelatedBody":"When we are debugging tests we don't want to kill `adb` after\r\nthe tests. This is so we can re-run tests without having to\r\nrun\r\n\r\n\tadb start-server\r\n\r\nevery time."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7909830433","Type":"PullRequestEvent","CreatedAt":"2018-07-03T02:08:37","Actor":"jvansickle","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3203","RelatedDescription":"Opened pull request \"Fix mac os standard button events\" (#3203) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nPressed, Released, Clicked, and Command all fire appropriately\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #1776 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- macOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nThe standard Button element will invoke pressed on mousedown.\r\nThe standard Button element will invoke released on mouseup, regardless of mouseup position after mousedown.\r\nThe standard Button element will invoke Clicked on mouseup if mouseup occurs in button after mousedown.\r\nThe standard Button element will execute Command on mouseup if mouseup occurs in button after mousedown.\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has automated tests\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"7909562098","Type":"PullRequestEvent","CreatedAt":"2018-07-03T00:18:37","Actor":"jvansickle","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3202","RelatedDescription":"Opened pull request \"[macOS] Add basic application key shortcuts\" (#3202) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nA Xam.Forms standard NSApplication override is necessary to allow basic keyboard shortcuts while not using any application menus. The FormsApplication extends NSApplication while overriding the SendEvent method to be able to intercept key events to enable basic keyboard command functionality for text fields and views. The FormsApplication is used as the Principal class attribute in a project Info.plist. Until the option is added as a VS for mac item, the Info.plist file must be opened using XCode to alter the value.\r\n\r\nNo automated tests exist as each keyboard command of undo, redo, cut, copy, and paste must be run with hardware. The implementation uses hardware-independent key codes, so the \"standard\" key combo should work for any keyboard (https://developer.apple.com/documentation/appkit/nsevent/1534513-keycode)\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #1988\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- macOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNo automatic behavior changes. If the user updates their Info.plist Principal class to FormsApplication they can expect undo, redo, cut, copy, and paste keyboard commands available in all Entry and Editors.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"7909123163","Type":"PullRequestEvent","CreatedAt":"2018-07-02T21:50:38","Actor":"jvansickle","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3201","RelatedDescription":"Opened pull request \"Fix Entry Completed invocation logic for macOS\" (#3201) at xamarin/Xamarin.Forms","RelatedBody":"The Completed event should be invoked when the user presses the return key only. Using NSTextField DidEndEditing is not favorable because pressing the Tab key will cause this method as well\r\n\r\n### Description of Change ###\r\n\r\nI refactored the FormsNSTextField to have its own Completed event it invokes when the return key is pressed. The EntryRenderer for macOS will now listen for that event and run an OnCompleted  method, calling the SendCompleted for the Element.  \r\n\r\n### Issues Resolved ###\r\n\r\nfixes #1650\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- macOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nmacOS Entry.Completed will only be triggered by the user pressing the Return key. \r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"7909084896","Type":"IssuesEvent","CreatedAt":"2018-07-02T21:40:40","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3132","RelatedDescription":"Closed issue \"Android 4.1 exception: Java.Lang.NoSuchMethodError: no method with name='isInLayout' signature='()Z' in class Landroid/view/ViewGroup;\" (#3132) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Run\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.1.\r\n- Last known good version: XF3.0\r\n- IDE: VS2017\r\n \r\n- Sln: https://github.com/rzakirov/XF31-API16-Excpetion\r\n"},{"Id":"7908976296","Type":"PullRequestEvent","CreatedAt":"2018-07-02T21:14:06","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3200","RelatedDescription":"Opened pull request \"Remove xaml c/g from dot solution files\" (#3200) at xamarin/Xamarin.Forms","RelatedBody":"Housecleaning"},{"Id":"7908367379","Type":"PullRequestEvent","CreatedAt":"2018-07-02T18:54:37","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3199","RelatedDescription":"Opened pull request \"[WPF] Fix lang version to default\" (#3199) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n Fix lang version to default (Debug and Release)\r\n\r\n### Issues Resolved ###\r\n\r\nBuild OK on Release\r\n\r\n### Platforms Affected ###\r\n\r\n- WPF"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7909941628","Type":"IssuesEvent","CreatedAt":"2018-07-03T02:50:17","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4379","RelatedDescription":"Closed issue \"CustomMvxCollectionViewSource doesn't bind cells\" (#4379) at xamarin/xamarin-macios","RelatedBody":"First, this is a basic use case I'd expect to work, so I'm likely doing it wrong.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Xamarin.iOS project \r\n2. Do some standard stuff to add a collection view to the main view and bind it to a data source on a view model:\r\n```\r\npublic override void ViewDidLoad()\r\n{\r\n\tbase.ViewDidLoad();\r\n\tvar source = new CustomCollectionViewSource(collectionView);\r\n\tcollectionView.Source = source;\r\n\r\n\tvar set = this.CreateBindingSet<MainViewController, MainViewModel>();\r\n\tset.Bind(source).For(v => v.ItemsSource).To(vm => vm.DataSource);\r\n\tset.Apply();\r\n}\r\n```\r\n3. Create a collection view cell, add a label and wire up an outlet to it, register cell with the collection view and dequeue it inside CustomCollectionViewSource.GetCell(...)\r\n```\r\npublic CustomCollectionViewSource(UICollectionView collectionView) : base(collectionView)\r\n{\r\n\tcollectionView.RegisterNibForCell(CustomCollectionViewCell.Nib, CustomCollectionViewCell.Key);\r\n}\r\n\r\npublic override UICollectionViewCell GetCell(UICollectionView collectionView, NSIndexPath indexPath)\r\n{\r\n\treturn collectionView.DequeueReusableCell(CustomCollectionViewCell.Key, indexPath) as CustomCollectionViewCell;\r\n}\r\n```\r\n4. Wire up data binding in the cell \r\n```\r\nprotected CustomCollectionViewCell(IntPtr handle) : base(handle)\r\n{\r\n\tthis.DelayBind(ApplyBindings);\r\n}\r\nprotected void ApplyBindings()\r\n{\r\n\tvar set = this.CreateBindingSet<CustomCollectionViewCell, CellViewModel>();\r\n\tset.Bind(lblDescription).To(vm => vm.Description);\r\n\tset.Apply();\r\n}\r\n```\r\n5. Populate the view model's data source with some data. \r\n6. Run the app\r\n\r\n### Expected Behavior\r\nCustomCollectionViewCell renders with view model's data\r\n\r\n### Actual Behavior\r\nNo data binding\r\n\r\n### Environment\r\nmvvm cross v 5.7, iOS 11.4\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: 608ce4bb-5bb3-4e10-b254-57a4f0acca27\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/robert.altland/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Build Logs\r\nNone\r\n\r\n### Example Project (If Possible)\r\nhttps://www.dropbox.com/s/9w4q79zyih8q09r/CollectionViewRepro.zip?dl=0\r\n"},{"Id":"7909638315","Type":"IssuesEvent","CreatedAt":"2018-07-03T00:50:37","Actor":"Robert-Altland","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4379","RelatedDescription":"Opened issue \"How do you properly subclass MvxCollectionViewSource?\" (#4379) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Xamarin.iOS project \r\n2. Do some standard stuff to add a collection view to the main view and bind it to a data source on a view model:\r\n```\r\npublic override void ViewDidLoad()\r\n{\r\n\tbase.ViewDidLoad();\r\n\tvar source = new CustomCollectionViewSource(collectionView);\r\n\tcollectionView.Source = source;\r\n\r\n\tvar set = this.CreateBindingSet<MainViewController, MainViewModel>();\r\n\tset.Bind(source).For(v => v.ItemsSource).To(vm => vm.DataSource);\r\n\tset.Apply();\r\n}\r\n```\r\n3. Create a collection view cell, add a label and wire up an outlet to it, register cell with the collection view and dequeue it inside CustomCollectionViewSource.GetCell(...)\r\n```\r\npublic CustomCollectionViewSource(UICollectionView collectionView) : base(collectionView)\r\n{\r\n\tcollectionView.RegisterNibForCell(CustomCollectionViewCell.Nib, CustomCollectionViewCell.Key);\r\n}\r\n\r\npublic override UICollectionViewCell GetCell(UICollectionView collectionView, NSIndexPath indexPath)\r\n{\r\n\treturn collectionView.DequeueReusableCell(CustomCollectionViewCell.Key, indexPath) as CustomCollectionViewCell;\r\n}\r\n```\r\n4. Wire up data binding in the cell \r\n```\r\nprotected CustomCollectionViewCell(IntPtr handle) : base(handle)\r\n{\r\n\tthis.DelayBind(ApplyBindings);\r\n}\r\nprotected void ApplyBindings()\r\n{\r\n\tvar set = this.CreateBindingSet<CustomCollectionViewCell, CellViewModel>();\r\n\tset.Bind(lblDescription).To(vm => vm.Description);\r\n\tset.Apply();\r\n}\r\n```\r\n5. Populate the view model's data source with some data. \r\n6. Run the app\r\n\r\n### Expected Behavior\r\nCustomCollectionViewCell renders with view model's data\r\n\r\n### Actual Behavior\r\nNo data binding\r\n\r\n### Environment\r\nmvvm cross v 5.7, iOS 11.4\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: 608ce4bb-5bb3-4e10-b254-57a4f0acca27\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/robert.altland/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Build Logs\r\nNone\r\n\r\n### Example Project (If Possible)\r\nhttps://www.dropbox.com/s/9w4q79zyih8q09r/CollectionViewRepro.zip?dl=0\r\n"},{"Id":"7908777504","Type":"PullRequestEvent","CreatedAt":"2018-07-02T20:30:03","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4378","RelatedDescription":"Opened pull request \"[modelio] Update for Xcode 10 beta 2\" (#4378) at xamarin/xamarin-macios","RelatedBody":"Renamed and obsoleted 'FromBundle' in favor of 'FromName' for consistency with new API and because I believe it was a mistake anyway.\nFor instance 'textureNamed:' was 'FromBundle', there's no mention of the bundle there."},{"Id":"7908032252","Type":"IssuesEvent","CreatedAt":"2018-07-02T17:41:10","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4069","RelatedDescription":"Closed issue \"d15-7 regressed .NET Embedding due to header files requiring Objc++ to compile\" (#4069) at xamarin/xamarin-macios","RelatedBody":"This was found by the community here:\r\n\r\nhttps://github.com/mono/Embeddinator-4000/issues/670\r\n\r\nand was fixed in master with\r\n\r\nhttps://github.com/xamarin/xamarin-macios/commit/c9fac28a8f6840c069ad715b43f1a0192eb38ef6\r\n\r\nbut that was not added to d15-7.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Install d15-7 XM/XI\r\n2. Attempt to compile using .NET Embedding\r\n\r\n```\r\n/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include/xamarin/runtime-generated.h(86,1): error G315394AC: must use 'enum' tag to refer to type 'MarshalManagedExceptionMode'\r\n/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include/xamarin/runtime-generated.h(89,1): error G315394AC: must use 'enum' tag to refer to type 'MarshalObjectiveCExceptionMode'\r\n/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include/xamarin/runtime.h(88,18): error GF12A802B: pointer to non-const type 'const Protocol *' with no explicit ownership\r\n/PATH/Embeddinator-4000.targets(3,3): error MSB3073: The command \"/PATH/packages/Embeddinator-4000.0.4.0/tools/objcgen bin/Debug/LIB.dll --target=framework --platform=macOS-modern --abi=x86_64 --nativeexception --compile --debug --outdir=bin/Debug/\" exited with code 1.\r\n```\r\n\r\n### Expected Behavior\r\n\r\nIt to compile.\r\n\r\n### Actual Behavior\r\n\r\nCompile failures.\r\n\r\n### Environment\r\nd15-7 (Stable). d15-6 and d15-8\\master both work.\n\n> VS bug [#614249](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/614249), VS bug [#614250](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/614250)"},{"Id":"7907780907","Type":"IssuesEvent","CreatedAt":"2018-07-02T16:45:51","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4377","RelatedDescription":"Opened issue \"[Xcode10]DlfcnTest.OpenClose_libSystem failure on tvOS device\" (#4377) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Update System to Xamarin.iOS, Xcode10 build Xamarin.iOS\r\nVersion: 11.99.0.115 (Visual Studio Community)\r\nHash: 48767e21\r\n2. Build and execute monotouch-test on tvOS 12.0 beta device\r\n\r\n### Expected Behavior\r\nAll tests pass\r\n### Actual Behavior\r\n[FAIL] DlfcnTest.OpenClose_libSystem :   dlclose\r\n  Expected: -1\r\n  But was:  0\r\n### Environment\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.2 (build 40)\r\nInstallation UUID: 519fc1da-445a-45d9-9748-27fa26180fd4\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14274.16)\r\nBuild 10L176w\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.0.115 (Visual Studio Community)\r\nHash: 48767e21\r\nBranch: HEAD\r\nBuild date: 2018-07-02 08:33:04-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705020040\r\nGit revision: cfe2fc0566bc4db990242959de40505a13f58352\r\nBuild date: 2018-05-30 11:24:18-04\r\nXamarin addins: 3ac7413ef51a88e06367313c27aec8f7292752a6\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\nBuild Log: https://gist.github.com/GouriKumari/66868bf9f3086fa05445ef373ac471be\r\nTest Log: https://gist.github.com/GouriKumari/11021feb122b7b9e00067ce900872461\r\n\r\n### Example Project (If Possible)\r\n\r\nhttps://github.com/xamarin/xamarin-macios/tests/monotouch-test\r\n"},{"Id":"7907605712","Type":"PullRequestEvent","CreatedAt":"2018-07-02T16:10:25","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3574","RelatedDescription":"Closed pull request \"[don't merge] Crash hunter\" (#3574) at xamarin/xamarin-macios","RelatedBody":"This is a PR to try to track down a few macOS test crashes that happen fairly\nfrequently on the bots and not so frequently locally 😡.\n\nPlease do not merge this PR.\n\nOTOH please build it again if it ever passes!"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":40,"FavoriteCount":26,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":25,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":83,"FavoriteCount":57,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":90,"FavoriteCount":38,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":21,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":158,"FavoriteCount":85,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null}]}},"RunOn":"2018-07-03T05:30:57.1639258Z","RunDurationInMilliseconds":4857}