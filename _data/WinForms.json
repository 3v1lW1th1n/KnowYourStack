{"Data":{"GitHub":{"Issues":[{"Id":"543504308","IsPullRequest":true,"CreatedAt":"2019-12-29T18:08:48","Actor":"gpetrou","Number":"2593","RawContent":null,"Title":"Remove DRAWING_DESIGN_NAMESPACE from csproj files","State":"open","Body":"Fixes https://github.com/dotnet/winforms/issues/1435\r\n\r\n## Proposed changes\r\n\r\n- Remove DRAWING_DESIGN_NAMESPACE from csproj files.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2593)","Url":"https://github.com/dotnet/winforms/pull/2593","RelatedDescription":"Open PR \"Remove DRAWING_DESIGN_NAMESPACE from csproj files\" (#2593)"},{"Id":"543499132","IsPullRequest":true,"CreatedAt":"2019-12-29T17:54:56","Actor":"gpetrou","Number":"2592","RawContent":null,"Title":"Remove unused MCM, MCHT and MCSC constants","State":"open","Body":"##  Proposed changes\r\n\r\n- Remove unused MCM, MCHT and MCSC constants.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2592)","Url":"https://github.com/dotnet/winforms/pull/2592","RelatedDescription":"Open PR \"Remove unused MCM, MCHT and MCSC constants\" (#2592)"},{"Id":"543488984","IsPullRequest":true,"CreatedAt":"2019-12-29T17:27:12","Actor":"gpetrou","Number":"2591","RawContent":null,"Title":"Move GetThemeBool, GetThemeColor, GetThemeEnumValue and GetThemeInt t…","State":"open","Body":"…o Interop UxTheme\r\n\r\n## Proposed changes\r\n\r\n- Move GetThemeBool, GetThemeColor, GetThemeEnumValue and GetThemeInt to Interop UxTheme.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2591)","Url":"https://github.com/dotnet/winforms/pull/2591","RelatedDescription":"Open PR \"Move GetThemeBool, GetThemeColor, GetThemeEnumValue and GetThemeInt t…\" (#2591)"},{"Id":"543477193","IsPullRequest":true,"CreatedAt":"2019-12-29T16:55:49","Actor":"gpetrou","Number":"2590","RawContent":null,"Title":"Move DPI_AWARENESS, GetAwarenessFromDpiAwarenessContext and GetWindow…","State":"open","Body":"…DpiAwarenessContext to Interop User32\r\n\r\n## Proposed changes\r\n\r\n- Move DPI_AWARENESS, GetAwarenessFromDpiAwarenessContext and GetWindowDpiAwarenessContext to Interop User32.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2590)","Url":"https://github.com/dotnet/winforms/pull/2590","RelatedDescription":"Open PR \"Move DPI_AWARENESS, GetAwarenessFromDpiAwarenessContext and GetWindow…\" (#2590)"},{"Id":"543449668","IsPullRequest":true,"CreatedAt":"2019-12-29T15:43:23","Actor":"gpetrou","Number":"2589","RawContent":null,"Title":"Move DragAcceptFiles to Interop Shell32","State":"open","Body":"## Proposed changes\r\n\r\n- Move DragAcceptFiles to Interop Shell32.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2589)","Url":"https://github.com/dotnet/winforms/pull/2589","RelatedDescription":"Open PR \"Move DragAcceptFiles to Interop Shell32\" (#2589)"},{"Id":"543434938","IsPullRequest":true,"CreatedAt":"2019-12-29T15:05:48","Actor":"gpetrou","Number":"2588","RawContent":null,"Title":"Add SB and SBT enums in Interop ComCtl32 and SBS and SS enums in User32","State":"open","Body":"## Proposed changes\r\n\r\n- Add SB and SBT enums in Interop ComCtl32 and SBS and SS enums in User32. \r\n- Remove SB, SBT, SBS and SS constants from NativeMethods.cs and replace their usages with the above enums.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2588)","Url":"https://github.com/dotnet/winforms/pull/2588","RelatedDescription":"Open PR \"Add SB and SBT enums in Interop ComCtl32 and SBS and SS enums in User32\" (#2588)"},{"Id":"543430360","IsPullRequest":true,"CreatedAt":"2019-12-29T14:53:57","Actor":"gpetrou","Number":"2587","RawContent":null,"Title":"Add LVS and LVS_EX enums","State":"open","Body":"## Proposed changes\r\n\r\n- Add LVS and LVS_EX enums.\r\n- Remove LVS and LVS_EX constants from NativeMethods.cs and replace their usages with the above enums.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2587)","Url":"https://github.com/dotnet/winforms/pull/2587","RelatedDescription":"Open PR \"Add LVS and LVS_EX enums\" (#2587)"},{"Id":"543387626","IsPullRequest":true,"CreatedAt":"2019-12-29T13:16:52","Actor":"dotnet-maestro[bot]","Number":"2586","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191228.1\r\n- **Date Produced**: 12/28/2019 1:48 PM\r\n- **Commit**: 44a53c66de431dbd54b4277d6338d2b103d6852d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19628.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19628.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19628.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19628.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.19628.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2586)","Url":"https://github.com/dotnet/winforms/pull/2586","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2586)"},{"Id":"541871851","IsPullRequest":true,"CreatedAt":"2019-12-29T11:08:51","Actor":"hughbe","Number":"2567","RawContent":null,"Title":"Add StatusStrip tests","State":"closed","Body":"## Proposed Changes\r\n- Add StatusStrip tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2567)","Url":"https://github.com/dotnet/winforms/pull/2567","RelatedDescription":"Closed or merged PR \"Add StatusStrip tests\" (#2567)"},{"Id":"542980529","IsPullRequest":true,"CreatedAt":"2019-12-29T10:41:00","Actor":"hughbe","Number":"2583","RawContent":null,"Title":"Remove dead SetSelectionInCreateHandle flag","State":"closed","Body":"## Proposed Changes\r\n- Remove dead SetSelectionInCreateHandle flag\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2583)","Url":"https://github.com/dotnet/winforms/pull/2583","RelatedDescription":"Closed or merged PR \"Remove dead SetSelectionInCreateHandle flag\" (#2583)"},{"Id":"541799941","IsPullRequest":true,"CreatedAt":"2019-12-29T10:31:59","Actor":"hughbe","Number":"2565","RawContent":null,"Title":"Add Microsoft.DotNet.RemoteExecutor package reference to tests","State":"closed","Body":"This is needed for various tests that test Application.RenderWithVisualStyles, because calling `Application.UseVisualStyles` poisons the whole test process, meaning that all subsequent tests will be run in visual style enabled mode. Since we want to avoid one test affecting any others, these sorts of tests should be run in their own process.\r\n\r\nI'm submitting this on its own since PRs using this could take some time and arcade package updates makes it an absolute nightmare to add new package references as there will be an almost daily merge conflict!\r\n\r\nSee #2564\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2565)","Url":"https://github.com/dotnet/winforms/pull/2565","RelatedDescription":"Closed or merged PR \"Add Microsoft.DotNet.RemoteExecutor package reference to tests\" (#2565)"},{"Id":"542905668","IsPullRequest":true,"CreatedAt":"2019-12-29T10:17:58","Actor":"hughbe","Number":"2582","RawContent":null,"Title":"Add ToolStripControlHost tests","State":"closed","Body":"## Proposed Changes\r\n- Add ToolStripControlHost tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2582)","Url":"https://github.com/dotnet/winforms/pull/2582","RelatedDescription":"Closed or merged PR \"Add ToolStripControlHost tests\" (#2582)"},{"Id":"543106149","IsPullRequest":true,"CreatedAt":"2019-12-29T10:17:00","Actor":"hughbe","Number":"2585","RawContent":null,"Title":"Remove dead check from ToolStripControlHost. OnBoundsUpdated","State":"closed","Body":"## Proposed Changes\r\n- This if statement can never be true as `Control` always implements `IArrangedElement`, and we checked for its non-nullness before. Collapse the `is` check into the `!= null` check\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2585)","Url":"https://github.com/dotnet/winforms/pull/2585","RelatedDescription":"Closed or merged PR \"Remove dead check from ToolStripControlHost. OnBoundsUpdated\" (#2585)"},{"Id":"542125917","IsPullRequest":true,"CreatedAt":"2019-12-29T09:08:45","Actor":"hughbe","Number":"2571","RawContent":null,"Title":"Remove Control.GetVisibleCore","State":"closed","Body":"## Explanation\r\n- GetVisibleCore is defined as an `internal virtual` method, but it is never overriden\r\n- Therefore, we can get rid of it entirely and collapse it into `Control.Visible` and replace all callers of `GetVisibleCore` to `Visible`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2571)","Url":"https://github.com/dotnet/winforms/pull/2571","RelatedDescription":"Closed or merged PR \"Remove Control.GetVisibleCore\" (#2571)"},{"Id":"542548886","IsPullRequest":true,"CreatedAt":"2019-12-29T08:56:01","Actor":"hughbe","Number":"2574","RawContent":null,"Title":"Improve ColumnStyle/Row/TableLayout style tests","State":"closed","Body":"## Proposed Changes\r\n- Improve ColumnStyle/Row/TableLayout style tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2574)","Url":"https://github.com/dotnet/winforms/pull/2574","RelatedDescription":"Closed or merged PR \"Improve ColumnStyle/Row/TableLayout style tests\" (#2574)"},{"Id":"542575695","IsPullRequest":true,"CreatedAt":"2019-12-29T08:50:45","Actor":"hughbe","Number":"2575","RawContent":null,"Title":"Add ToolStripButton tests","State":"closed","Body":"## Proposed Changes\r\n- Add ToolStripButton tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2575)","Url":"https://github.com/dotnet/winforms/pull/2575","RelatedDescription":"Closed or merged PR \"Add ToolStripButton tests\" (#2575)"},{"Id":"542591191","IsPullRequest":true,"CreatedAt":"2019-12-29T08:46:07","Actor":"hughbe","Number":"2577","RawContent":null,"Title":"Add ToolStripSeparator tests","State":"closed","Body":"## Proposed Changes\r\n- Add ToolStripSeparator tests\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2577)","Url":"https://github.com/dotnet/winforms/pull/2577","RelatedDescription":"Closed or merged PR \"Add ToolStripSeparator tests\" (#2577)"},{"Id":"542636167","IsPullRequest":true,"CreatedAt":"2019-12-29T08:39:01","Actor":"hughbe","Number":"2579","RawContent":null,"Title":"Cleanup ToolStripSeparator","State":"closed","Body":"## Proposed Changes\r\n- Cleanup ToolStripSeparator\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2579)","Url":"https://github.com/dotnet/winforms/pull/2579","RelatedDescription":"Closed or merged PR \"Cleanup ToolStripSeparator\" (#2579)"},{"Id":"542122557","IsPullRequest":true,"CreatedAt":"2019-12-29T07:07:51","Actor":"dotnet-maestro[bot]","Number":"2570","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191227.1\r\n- **Date Produced**: 12/27/2019 3:35 PM\r\n- **Commit**: d2d025c1de37b1258f147851cb3e7373ad5ff09d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19627.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19627.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19627.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19627.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2570)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2570","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2570)"},{"Id":"543105670","IsPullRequest":true,"CreatedAt":"2019-12-28T09:28:26","Actor":"hughbe","Number":"2584","RawContent":null,"Title":"Cleanup ToolStripControlHost","State":"open","Body":"## Proposed Changes\r\n- Rename fields\r\n- Cleanup code\r\n- Extract nested classes\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2584)","Url":"https://github.com/dotnet/winforms/pull/2584","RelatedDescription":"Open PR \"Cleanup ToolStripControlHost\" (#2584)"},{"Id":"542084788","IsPullRequest":true,"CreatedAt":"2019-12-28T04:08:12","Actor":"hughbe","Number":"2569","RawContent":null,"Title":"Move files to the right folder","State":"closed","Body":"## Proposed Changes\r\n- Move files to the right folder\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2569)","Url":"https://github.com/dotnet/winforms/pull/2569","RelatedDescription":"Closed or merged PR \"Move files to the right folder\" (#2569)"},{"Id":"542172198","IsPullRequest":true,"CreatedAt":"2019-12-28T03:59:28","Actor":"hughbe","Number":"2572","RawContent":null,"Title":"Add DataGridView selected collection tests","State":"closed","Body":"## Proposed Changes\r\n- Add DataGridView selected collection tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2572)","Url":"https://github.com/dotnet/winforms/pull/2572","RelatedDescription":"Closed or merged PR \"Add DataGridView selected collection tests\" (#2572)"},{"Id":"542657999","IsPullRequest":false,"CreatedAt":"2019-12-27T02:16:23","Actor":"paul1956","Number":"2580","RawContent":null,"Title":"Can test WinForms under Visual Studio","State":"closed","Body":"* .NET Core Version: (Microsoft.WindowsDesktop.App 5.0.0-alpha.1.19625.3)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\nN/A\r\n**Problem description:**\r\nFollowing instructions on testing https://github.com/dotnet/winforms/blob/master/Documentation/testing-in-vs.md\r\nvery bottom Solution 2 does not work and you get the error below\r\n**Actual behavior:**\r\n```\r\nThe specified framework can be found at:\r\n  - https://aka.ms/dotnet-core-applaunch?framework=Microsoft.NETCore.App&framework_version=5.0.0-alpha1.19514.1&arch=x64&rid=win10-x64\r\n. Please check the diagnostic logs for more information.\r\n```\r\n**Expected behavior:**\r\nExpect tests to run or there is a place to download the required framework.\r\n**Minimal repro:**\r\nClone Winform Repo\r\nRun .\\build-local.ps1\r\nOpen VB 2019 16.5.0 Preview 1\r\nRun any test and in the Output/Test Window you will see error above and test does not run\r\n","Url":"https://github.com/dotnet/winforms/issues/2580","RelatedDescription":"Closed issue \"Can test WinForms under Visual Studio\" (#2580)"},{"Id":"542659449","IsPullRequest":true,"CreatedAt":"2019-12-26T20:09:09","Actor":"hughbe","Number":"2581","RawContent":null,"Title":"Add ToolStripRenderer tests","State":"open","Body":"## Proposed Changes\r\n- Add ToolStripRenderer tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2581)","Url":"https://github.com/dotnet/winforms/pull/2581","RelatedDescription":"Open PR \"Add ToolStripRenderer tests\" (#2581)"},{"Id":"542601534","IsPullRequest":true,"CreatedAt":"2019-12-26T16:41:56","Actor":"hughbe","Number":"2578","RawContent":null,"Title":"Cleanup ToolStripButton","State":"open","Body":"## Proposed Changes\r\n- Cleanup ToolStripButton\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2578)","Url":"https://github.com/dotnet/winforms/pull/2578","RelatedDescription":"Open PR \"Cleanup ToolStripButton\" (#2578)"},{"Id":"542584396","IsPullRequest":false,"CreatedAt":"2019-12-26T15:26:38","Actor":"hughbe","Number":"2576","RawContent":null,"Title":"ToolStripSeparator.GetPreferredSize has a suspicious always-true if check","State":"open","Body":"The implementation of `ToolStripSeparator.GetPreferredSize` is as follows:\r\n\r\n```cs\r\npublic override Size GetPreferredSize(Size constrainingSize)\r\n{\r\n    ToolStrip parent = ParentInternal;\r\n\r\n    if (parent == null)\r\n    {\r\n        parent = Owner;\r\n    }\r\n    if (parent == null)\r\n    {\r\n        return new Size(ToolStrip_SEPARATORTHICKNESS, ToolStrip_SEPARATORTHICKNESS);\r\n    }\r\n\r\n    if (parent is ToolStripDropDownMenu dropDownMenu)\r\n    {\r\n        return new Size(parent.Width - (parent.Padding.Horizontal - dropDownMenu.ImageMargin.Width), ToolStrip_SEPARATORTHICKNESS);\r\n    }\r\n    else\r\n    {\r\n        if (parent.LayoutStyle != ToolStripLayoutStyle.HorizontalStackWithOverflow || parent.LayoutStyle != ToolStripLayoutStyle.VerticalStackWithOverflow)\r\n        {\r\n            // we dont actually know what size to make it, so just keep it a stock size.\r\n            constrainingSize.Width = ToolStrip_SEPARATORHEIGHT;\r\n            constrainingSize.Height = ToolStrip_SEPARATORHEIGHT;\r\n        }\r\n        if (IsVertical)\r\n        {\r\n            return new Size(ToolStrip_SEPARATORTHICKNESS, constrainingSize.Height);\r\n        }\r\n        else\r\n        {\r\n            return new Size(constrainingSize.Width, ToolStrip_SEPARATORTHICKNESS);\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n\r\nNotice this case: `if (parent.LayoutStyle != ToolStripLayoutStyle.HorizontalStackWithOverflow || parent.LayoutStyle != ToolStripLayoutStyle.VerticalStackWithOverflow)`\r\n\r\nThis appears to always be true, as `parent.LayoutStyle` can't be both `HorizontalStackWithOverflow` and `VerticalStackWithOverflow`. \r\n\r\nShould this actually be an `&&` check rather than `||`","Url":"https://github.com/dotnet/winforms/issues/2576","RelatedDescription":"Open issue \"ToolStripSeparator.GetPreferredSize has a suspicious always-true if check\" (#2576)"},{"Id":"542494533","IsPullRequest":false,"CreatedAt":"2019-12-26T09:20:59","Actor":"ezolotko","Number":"2573","RawContent":null,"Title":"DocumentDesigner class is not implemented. What support to expect for custom hosting of Windows Forms designer?","State":"open","Body":"In .NET Core 3.1, DocumentDesigner class from System.Windows.Forms.Design.dll has all of its methods implemented as\r\n`new NotImplementedException(SR.NotImplementedByDesign);`\r\n\r\nThe DocumentDesigner class is vital for custom hosting of Windows Forms designer in user applications. Judging from the class' .NET Framework implementation, it contains a lot of \"glue\" root designer logic, common for all document designers.\r\n\r\nWill this class and other classes required for custom designer hosting be implemented in .NET Core?\r\nWhat is the Microsoft's stated direction regarding the Windows Forms designer custom hosting features in .NET Core?\r\n\r\nA variety of applications use this Windows Forms feature at the moment. They include report designers, application-specific data entry form designers, and others.","Url":"https://github.com/dotnet/winforms/issues/2573","RelatedDescription":"Open issue \"DocumentDesigner class is not implemented. What support to expect for custom hosting of Windows Forms designer?\" (#2573)"},{"Id":"541947901","IsPullRequest":true,"CreatedAt":"2019-12-24T00:59:16","Actor":"hughbe","Number":"2568","RawContent":null,"Title":"Add ControlAccessibleObject tests","State":"open","Body":"## Proposed Changes\r\n- Add ControlAccessibleObject tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2568)","Url":"https://github.com/dotnet/winforms/pull/2568","RelatedDescription":"Open PR \"Add ControlAccessibleObject tests\" (#2568)"},{"Id":"541830573","IsPullRequest":true,"CreatedAt":"2019-12-23T16:55:34","Actor":"hughbe","Number":"2566","RawContent":null,"Title":"Cleanup ListControl tests","State":"open","Body":"## Proposed Changes\r\nWas going to write some test for subclasses of `ListControl` but noticed the tests were a bit messy - not disposing/using `WinFormsFact` etc. so went through and cleaned up the test class\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2566)","Url":"https://github.com/dotnet/winforms/pull/2566","RelatedDescription":"Open PR \"Cleanup ListControl tests\" (#2566)"},{"Id":"541776625","IsPullRequest":true,"CreatedAt":"2019-12-23T14:24:47","Actor":"hughbe","Number":"2564","RawContent":null,"Title":"Clear ComCtlSupportsVisualStyles initialization status when enabling visual styles","State":"open","Body":"Depends on #2565 \r\n\r\nThe implementation of `Application.RenderWithVisualStyles` is the following:\r\n```cs\r\npublic static bool RenderWithVisualStyles\r\n    => ComCtlSupportsVisualStyles && VisualStyleRenderer.IsSupported;\r\n```\r\n\r\nThe implementation of `Application.ComCtlSupportsVisualStyles` is the following:\r\n```cs\r\n/// <summary>\r\n///  Typically, you shouldn't need to use this directly - use RenderWithVisualStyles instead.\r\n/// </summary>\r\ninternal static bool ComCtlSupportsVisualStyles\r\n{\r\n    get\r\n    {\r\n        if (!s_comCtlSupportsVisualStylesInitialized)\r\n        {\r\n            s_comCtlSupportsVisualStyles = InitializeComCtlSupportsVisualStyles();\r\n            s_comCtlSupportsVisualStylesInitialized = true;\r\n        }\r\n        return s_comCtlSupportsVisualStyles;\r\n    }\r\n}\r\n\r\nprivate static bool InitializeComCtlSupportsVisualStyles()\r\n{\r\n    if (UseVisualStyles)\r\n    {\r\n        // At this point, we may not have loaded ComCtl6 yet, but it will eventually be loaded,\r\n        // so we return true here. This works because UseVisualStyles, once set, cannot be\r\n        // turned off.\r\n        return true;\r\n    }\r\n\r\n    // To see if we are comctl6, we look for a function that is exposed only from comctl6\r\n    // we do not call DllGetVersion or any direct p/invoke, because the binding will be\r\n    // cached.\r\n    //\r\n    // GetModuleHandle  returns a handle to a mapped module without incrementing its\r\n    // reference count.\r\n    IntPtr hModule = Kernel32.GetModuleHandleW(Libraries.Comctl32);\r\n    if (hModule != IntPtr.Zero)\r\n    {\r\n        return Kernel32.GetProcAddress(hModule, \"ImageList_WriteEx\") != IntPtr.Zero;\r\n    }\r\n\r\n    // Load comctl since GetModuleHandle failed to find it\r\n    hModule = Kernel32.LoadLibraryFromSystemPathIfAvailable(Libraries.Comctl32);\r\n    if (hModule == IntPtr.Zero)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return Kernel32.GetProcAddress(hModule, \"ImageList_WriteEx\") != IntPtr.Zero;\r\n}\r\n```\r\n\r\nNotice that `Application.ComCtlSupportsVisualStyles` caches the result. This can cause problems when we call `Application.EnableVisualStyles()`.\r\n\r\nOnce `Application.EnableVisualStyles()` is enabled, we expect `Application.ComCtlSupportsVisualStyles` to be true (because we just enabled visual styles). `Application.RenderWithVisualStyles` would be true as a result.\r\n\r\nHowever, in the following case this does not work, as the result of `Application.ComCtlSupportsVisualStyles` is cached to `false` even though we enabled visual styles.\r\n```cs\r\nAssert.False(Application.RenderWithVisualStyles); // Commenting this out makes the assertion work.\r\nApplication.UseVisualStyles();\r\nAssert.True(Application.RenderWithVisualStyles);\r\n```\r\n\r\nWe can fix this by resetting the variable indicating whether `Application.ComCtlSupportsVisualStyles` is initialised, namely `s_comCtlSupportsVisualStylesInitialized`\r\n\r\nRelated #2556 #2555 #2555\r\n/cc @weltkante @sharwell \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2564)","Url":"https://github.com/dotnet/winforms/pull/2564","RelatedDescription":"Open PR \"Clear ComCtlSupportsVisualStyles initialization status when enabling visual styles\" (#2564)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-30T05:30:57.5474089Z","RunDurationInMilliseconds":592}