{"Data":{"GitHub":{"Issues":[{"Id":"442538143","IsPullRequest":true,"CreatedAt":"2019-05-10T04:54:36","Actor":"codemzs","Number":"3700","RawContent":null,"Title":"Add option to execute only the last transform in TransformWrapper.","State":"open","Body":"fixes #3699","Url":"https://github.com/dotnet/machinelearning/pull/3700","RelatedDescription":"Open PR \"Add option to execute only the last transform in TransformWrapper.\" (#3700)"},{"Id":"442537932","IsPullRequest":false,"CreatedAt":"2019-05-10T04:53:26","Actor":"codemzs","Number":"3699","RawContent":null,"Title":"TransfromWrapper should only apply the last transform in some cases","State":"open","Body":"Consider the pipeline generated from NimbusML that adds OptionalColumnTransform automatically to make sure label column is of correct type, i.e key type. When this model is loaded in ML.NET, OptionalColumnTransform is executed as TransformWrapper that is instantiated with an IDataView containing the entire pipeline until that point. Unfortunately transform wrapper applies the entire chain of transforms when it should just apply the last transformer in the chain, this holds true if we had a IDataTransform preceded by RowToRowMapperTransfom.\r\n\r\nCC: @yaeldekel ","Url":"https://github.com/dotnet/machinelearning/issues/3699","RelatedDescription":"Open issue \"TransfromWrapper should only apply the last transform in some cases\" (#3699)"},{"Id":"442508232","IsPullRequest":false,"CreatedAt":"2019-05-10T02:18:37","Actor":"Deucem","Number":"3698","RawContent":null,"Title":"DataViewSchema not validated for null on training, but is required for creating PredictionEngine","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWindows 10 Pro 1806 (also happens in Azure web app)\r\n- **.NET Version (eg., dotnet --info)**: \r\n2.2.104\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nSaved a model passing null for the DataViewSchema.\r\n\r\n- **What happened?**\r\nWhen you save a model with a using mlContext.Model.Save and pass null for the DataViewSchema, the model trains fine, but when you attempt to consume the model, a null reference exception is thrown:\r\n\r\n\"at Microsoft.ML.Data.DataViewConstructionUtils.GetSchemaDefinition[TRow](IHostEnvironment env, DataViewSchema schema)\"\r\n\r\n- **What did you expect?**\r\nThe mlContext.Model.Save method should throw on null DataViewSchema input parameter.\r\n\r\n### Source code / logs\r\n\r\n\"at Microsoft.ML.Data.DataViewConstructionUtils.GetSchemaDefinition[TRow](IHostEnvironment env, DataViewSchema schema)\"\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3698","RelatedDescription":"Open issue \"DataViewSchema not validated for null on training, but is required for creating PredictionEngine\" (#3698)"},{"Id":"442486096","IsPullRequest":false,"CreatedAt":"2019-05-10T00:16:42","Actor":"PeterPann23","Number":"3697","RawContent":null,"Title":"auto-generated file by Microsoft ML.NET CLI (Command-Line Interface) tool seems to be of not recomended format","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: ML.Net Model Builder (Preview) version 16.0.1905.641\r\n\r\n### Issue\r\n- **What did you do?**\r\nGave the model a csv file with 600 floats and a  header with a label column and some random names\r\n- **What happened?**\r\nModel got build and a Model input file got generated\r\n- **What did you expect?**\r\nThe model input file could load all fields but the label field in a single vector but it did not it made a class with single properties and not a features column with a single vector as is recommended here in the issues comments.\r\n\r\nWich is it, what's best practice?\r\n \r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3697","RelatedDescription":"Open issue \"auto-generated file by Microsoft ML.NET CLI (Command-Line Interface) tool seems to be of not recomended format\" (#3697)"},{"Id":"442449288","IsPullRequest":true,"CreatedAt":"2019-05-09T21:44:31","Actor":"sfilipi","Number":"3696","RawContent":null,"Title":"Sample of using LoadFromEnumerable with a SchemaDefinition","State":"open","Body":"I have seen a few asks for how to bypass having to define the size of the vector in the data models. \r\nAdding an example for it. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3696","RelatedDescription":"Open PR \"Sample of using LoadFromEnumerable with a SchemaDefinition\" (#3696)"},{"Id":"442433341","IsPullRequest":true,"CreatedAt":"2019-05-09T21:05:02","Actor":"najeeb-kazmi","Number":"3695","RawContent":null,"Title":"Fix documentation for LightGbm parameter","State":"open","Body":"Fix #3687 \r\n\r\nDocumentation for `MaximumCategoricalSplitPoint`.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3695","RelatedDescription":"Open PR \"Fix documentation for LightGbm parameter\" (#3695)"},{"Id":"442367336","IsPullRequest":false,"CreatedAt":"2019-05-09T18:17:41","Actor":"najeeb-kazmi","Number":"3694","RawContent":null,"Title":"MacOS CI legs throwing DllNotFoundException for MklImports","State":"open","Body":"The MacOS CI legs in multiple PRs are throwing `DllNotFoundException` for MklImports.dll.\r\n\r\nE.g. #3676 #3682 #3693\r\n\r\n\r\nError Message:\r\n System.TypeInitializationException : The type initializer for 'Microsoft.ML.TestFramework.BaseTestClass' threw an exception.\r\n---- System.DllNotFoundException : Unable to load shared library 'MklImports' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libMklImports, 1): image not found\r\nStack Trace:\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\r\n   at ReflectionAbstractionExtensions.<>c__DisplayClass0_0.<CreateTestClass>b__0() in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Extensions\\ReflectionAbstractionExtensions.cs:line 42\r\n   at ReflectionAbstractionExtensions.CreateTestClass(ITest test, Type testClassType, Object[] constructorArguments, IMessageBus messageBus, ExecutionTimer timer, CancellationTokenSource cancellationTokenSource) in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Extensions\\ReflectionAbstractionExtensions.cs:line 42\r\n----- Inner Stack Trace -----\r\n   at Microsoft.ML.Internal.Internallearn.Test.GlobalBase.Mkl.PptrfInternal(Layout layout, UpLo uplo, Int32 n, Double[] ap)\r\n   at Microsoft.ML.Internal.Internallearn.Test.GlobalBase.AssemblyInit() in /Users/vsts/agent/2.150.3/work/1/s/test/Microsoft.ML.TestFramework/GlobalBase.cs:line 30\r\n   at Microsoft.ML.TestFramework.BaseTestClass..cctor() in /Users/vsts/agent/2.150.3/work/1/s/test/Microsoft.ML.TestFramework/BaseTestClass.cs:line 22","Url":"https://github.com/dotnet/machinelearning/issues/3694","RelatedDescription":"Open issue \"MacOS CI legs throwing DllNotFoundException for MklImports\" (#3694)"},{"Id":"441965015","IsPullRequest":false,"CreatedAt":"2019-05-09T15:33:34","Actor":"danucalovj","Number":"3680","RawContent":null,"Title":"Max File Size Limits for Model Builder","State":"closed","Body":"Issue:\r\n\r\nUsing the ML.NET Model Builder, there is a max file size limit of 1 GB per the GUI:\r\n\r\n![image](https://user-images.githubusercontent.com/12853868/57413374-c11f2900-71a8-11e9-94ce-617f8d17babe.png)\r\n\r\nNo documentation on the limit available to my knowledge. If there is, can someone provide me the link?\r\n\r\nIs there a way to change the limit?\r\n\r\nAnd, is this a limit also using the AutoML CLI?","Url":"https://github.com/dotnet/machinelearning/issues/3680","RelatedDescription":"Closed issue \"Max File Size Limits for Model Builder\" (#3680)"},{"Id":"442287784","IsPullRequest":true,"CreatedAt":"2019-05-09T15:09:31","Actor":"mengaims","Number":"3693","RawContent":null,"Title":"Add SrCnn Anomaly Detector","State":"open","Body":"Add SRCNN algorithm to TimSeries Anomaly Detection","Url":"https://github.com/dotnet/machinelearning/pull/3693","RelatedDescription":"Open PR \"Add SrCnn Anomaly Detector\" (#3693)"},{"Id":"442276483","IsPullRequest":false,"CreatedAt":"2019-05-09T14:47:28","Actor":"Jaygem","Number":"3692","RawContent":null,"Title":"Question : Exploration through Fsharp + DataFrame types","State":"open","Body":"Will ML.NET have an API for data exploration ?\r\n\r\nBy data exploration i mean statistics, selections, filters of dataframe like objects.","Url":"https://github.com/dotnet/machinelearning/issues/3692","RelatedDescription":"Open issue \"Question : Exploration through Fsharp + DataFrame types\" (#3692)"},{"Id":"442218438","IsPullRequest":false,"CreatedAt":"2019-05-09T12:46:52","Actor":"JustAnotherPaul","Number":"3691","RawContent":null,"Title":"Visual Studio stops working when training starts","State":"open","Body":"I've tried any test data from the dotnet/machinelearning-samples repository and also made a pretty simple one myself:\r\n\r\nA,B,C,D,E\r\n1,1,1,1,1\r\n1,1,1,1,2\r\n1,1,1,1,3\r\n1,1,1,1,4\r\n1,1,1,1,5\r\n\r\n1. Add -> Machine Learning\r\n2. Selecting any scenario (it doesn't matter, since all of them crash)\r\n3. Selecting the test data from above\r\n4. As column to predic I select \"E\"\r\n5. Time to train: 10 seconds (it doesn't mater)\r\n6. then I click \"Start taining\" and VS crashes immediately\r\n\r\nI've attached the VS ActivityLog.xml, are there any other Log files or information I could provide?\r\n[ActivityLog.txt](https://github.com/dotnet/machinelearning/files/3162174/ActivityLog.txt)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3691","RelatedDescription":"Open issue \"Visual Studio stops working when training starts\" (#3691)"},{"Id":"441106929","IsPullRequest":false,"CreatedAt":"2019-05-09T11:55:24","Actor":"PeterPann23","Number":"3671","RawContent":null,"Title":"The Metrics documentation does not help","State":"closed","Body":"\r\n[Enter feedback here]\r\nHi,\r\n\r\nI feel that this level of documentation doesn't really help those that are reading it. It's okay that you provide the formulas of how you calculate the properties however 95% of those that would open help to read about it it will likely be more confused than helped.  One should document/ explain what a property means in relation to the accuracy of the model tested.\r\n\r\nLogLossReduction has one sentence that is confusing but helps \r\n\r\n> For example, if the RIG equals 20, it can be interpreted as \"the probability of a correct prediction is 20% better than random guessing.\r\n\r\nSo when executing the samples, I take the Iris clustering sample, it returns LogLossReduction of  0.9967811419606234, you and I know that this is 99.67% and not 0.99% however **RIG equals 20** is ambiguous and could be reworded as. \r\n\r\n> For example, if the LogLossReduction equals 0.20, it can be interpreted as \"the probability of a correct prediction is 20% better than random guessing.\r\n\r\n\r\nAlso, testing the metrics of N rows will not pass a \"confidence\" that a \"flip of a coin\" prediction is accurate, simply stating that a % of data must be used also doesn't help as 20% of 10 rows is not representative. \r\n\r\nIdeally one would also mention how the number can be influenced so that the users can understand how to improve the models accuracy, perhaps have links to [Feature Importance](https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/explain-machine-learning-model-permutation-feature-importance-ml-net). \r\n\r\nIdeally those that give the framework a spin should be able to understand the results generated model as well as how to improve it.\r\n\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: db0c3c11-e826-253d-983d-bc64f22bb609\r\n* Version Independent ID: db553462-9f1c-789d-caf2-408edc18d7d1\r\n* Content: [MulticlassClassificationMetrics.LogLoss Property (Microsoft.ML.Data)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.multiclassclassificationmetrics.logloss?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @sfilipi\r\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3671","RelatedDescription":"Closed issue \"The Metrics documentation does not help\" (#3671)"},{"Id":"442065313","IsPullRequest":false,"CreatedAt":"2019-05-09T11:31:52","Actor":"PeterPann23","Number":"3683","RawContent":null,"Title":"CategoricalSmoothing & Fitting model data","State":"closed","Body":"\r\n[Enter feedback here]\r\n\r\nIs this a feature that helps with solving the issue of unbalanced data in regards to class occurrence (under-fitting)? if so than it would help in high-lighting this. explaining this a bit more would help.\r\n\r\nusefull for the user of the documentation is categorizing the properties so that those new to the topic understand what to look for and where to look for it\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: d3179776-5939-ad12-68ae-0f3bd489bae0\r\n* Version Independent ID: 0f25c6ac-d961-87c0-029a-8303211acc6c\r\n* Content: [LightGbmTrainerBase&lt;TOptions,TOutput,TTransformer,TModel&gt;.OptionsBase.CategoricalSmoothing Field (Microsoft.ML.Trainers.LightGbm)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmtrainerbase-4.optionsbase.categoricalsmoothing?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Trainers.LightGbm/LightGbmTrainerBase`4+OptionsBase.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Trainers.LightGbm/LightGbmTrainerBase`4+OptionsBase.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @sfilipi\r\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3683","RelatedDescription":"Closed issue \"CategoricalSmoothing & Fitting model data\" (#3683)"},{"Id":"442143417","IsPullRequest":false,"CreatedAt":"2019-05-09T09:38:27","Actor":"rauhs","Number":"3690","RawContent":null,"Title":"SDCA's L1Regularization is badly named since rename","State":"open","Body":"A lot of the constants of various learners got renamed to `L1Regularization`. But, in SDCA this isn't actually the `L1Regularization` as the doc also states. It's the ratio of `L1/L2`.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/5d9e88083a21163258bbeb45597a5f1a95039bc8/src/Microsoft.ML.StandardTrainers/Standard/SdcaBinary.cs#L167-L175\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3690","RelatedDescription":"Open issue \"SDCA's L1Regularization is badly named since rename\" (#3690)"},{"Id":"442139476","IsPullRequest":false,"CreatedAt":"2019-05-09T09:29:12","Actor":"carlosefrias","Number":"3689","RawContent":null,"Title":"System.InvalidOperationException when loading tensorflow model","State":"open","Body":"### System information\r\n- **OS version/distro**:\r\nWindows 10\r\n- **.NET Version (eg., dotnet --info)**: \r\nVisual Studio 2017\r\n.NET Core 2.1\r\nMicrosoft.ML v1.0.0 NuGet package\r\n\r\n### Issue\r\n- **What did you do?**\r\nBased on the example on [https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/DeepLearning_ImageClassification_TensorFlow](url) I tryed to load a tensorflow model using for image segmentation into Microsoft.ML\r\nThe model it self was created using keras and then converted to tensorflow using an adapted version of the [https://github.com/amir-abdi/keras_to_tensorflow](url) \r\n- **What happened?**\r\n\r\n\r\nSystem.InvalidOperationException when calling LoadTensorFlowModel function\r\n- **What did you expect?**\r\nExcepted the model to be loaded.\r\n\r\n### Source code / logs\r\n\r\n`   at Microsoft.ML.Transforms.TensorFlow.TensorFlowUtils.LoadTFSession(IExceptionContext ectx, Byte[] modelBytes, String modelFile)\r\n   at Microsoft.ML.TensorflowCatalog.LoadTensorFlowModel(ModelOperationsCatalog catalog, String modelLocation)\r\n   at ImageClassification.Score.ModelScorer.TFModelScorer.LoadModel(String dataLocation, String imagesFolder, String modelLocation) in C:\\Users\\me1cme\\repos\\ml.net-learning\\samples\\csharp\\getting-started\\DeepLearning_ImageClassification_TensorFlow\\ImageClassification\\ModelScorer\\TFModelScorer.cs:line 67\r\n   at ImageClassification.Score.ModelScorer.TFModelScorer.Score() in C:\\Users\\me1cme\\repos\\ml.net-learning\\samples\\csharp\\getting-started\\DeepLearning_ImageClassification_TensorFlow\\ImageClassification\\ModelScorer\\TFModelScorer.cs:line 50\r\n   at ImageClassification.Program.Main() in C:\\Users\\me1cme\\repos\\ml.net-learning\\samples\\csharp\\getting-started\\DeepLearning_ImageClassification_TensorFlow\\ImageClassification\\Program.cs:line 27`\r\n\r\nMessage\r\n`TensorFlow exception triggered while loading model from '../../../assets/inputs/final.pb'`\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3689","RelatedDescription":"Open issue \"System.InvalidOperationException when loading tensorflow model\" (#3689)"},{"Id":"442124029","IsPullRequest":false,"CreatedAt":"2019-05-09T08:53:51","Actor":"rauhs","Number":"3688","RawContent":null,"Title":"LightGBM: IsUnbalanced is relevant for OVA multi class","State":"open","Body":"Version: 1.0\r\n\r\nSetup:\r\n\r\n- LightGBM Multiclass trainer\r\n- NOT softmax (thus: \"objective\" = \"mutliclassova\").\r\n\r\nBefore 1.0 we had `UnbalancedSets` available for the three booster configs, but this option was removed it seems.\r\n\r\nThough, that option very much had an effect on performance in this case.\r\n\r\nYou can see that the OVA objective just calls the binary one:\r\n\r\nhttps://github.com/microsoft/LightGBM/blob/0a4a7a86f5a1d3146c36c7d8c082154a193d4893/src/objective/multiclass_objective.hpp#L173-L182\r\n\r\nwhich will happily use the config parameter:\r\n\r\nhttps://github.com/microsoft/LightGBM/blob/0a4a7a86f5a1d3146c36c7d8c082154a193d4893/src/objective/binary_objective.hpp#L20-L36\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3688","RelatedDescription":"Open issue \"LightGBM: IsUnbalanced is relevant for OVA multi class\" (#3688)"},{"Id":"441580476","IsPullRequest":false,"CreatedAt":"2019-05-09T08:25:47","Actor":"larsbeck","Number":"3678","RawContent":null,"Title":"Cannot load a trained model: \"A local file header is corrupt\"","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: Microsoft.NETCore.App 3.0.0-preview4-27615-11\r\n\r\n### Issue\r\nCannot load a trained model.\r\n\r\n- **What did you do?**\r\nTrained a model with AutoML, saved it to \"model.zip\" (see attached) and then I tried to load it via:\r\n`\r\nvar mlContext = new MLContext();\r\nvar mlModel = mlContext.Model.Load(\"model.zip\", out _);\r\n`\r\n- **What happened?**\r\nAn exception is thrown: \"A local file header is corrupt\"\r\n- **What did you expect?**\r\nThe model to be loaded so I can make a prediction.\r\n### Source code / logs\r\n[model.zip](https://github.com/dotnet/machinelearning/files/3155902/model.zip)\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3678","RelatedDescription":"Closed issue \"Cannot load a trained model: \"A local file header is corrupt\"\" (#3678)"},{"Id":"442110732","IsPullRequest":false,"CreatedAt":"2019-05-09T08:21:40","Actor":"rauhs","Number":"3687","RawContent":null,"Title":"LightGBM option MaximumCategoricalSplitPointCount has wrong doc","State":"open","Body":"See:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/8b1b14f916428967dc0066b956485c35a0090fe3/src/Microsoft.ML.LightGbm/LightGbmTrainerBase.cs#L189-L196\r\n\r\nand\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/8b1b14f916428967dc0066b956485c35a0090fe3/src/Microsoft.ML.LightGbm/LightGbmTrainerBase.cs#L49-L59\r\n\r\nand\r\nhttps://lightgbm.readthedocs.io/en/latest/Parameters.html#max_cat_threshold :\r\n\r\n```\r\nmax_cat_threshold, default = 32, type = int, constraints: max_cat_threshold > 0\r\n- used for the categorical features\r\n- limit the max threshold points in categorical features\r\n```\r\n\r\nIt got mixed up with:\r\n\r\nhttps://lightgbm.readthedocs.io/en/latest/Parameters.html#max_cat_to_onehot\r\n\r\n```\r\nwhen number of categories of one feature smaller than or equal to max_cat_to_onehot, one-vs-other split algorithm will be used\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3687","RelatedDescription":"Open issue \"LightGBM option MaximumCategoricalSplitPointCount has wrong doc\" (#3687)"},{"Id":"442100510","IsPullRequest":false,"CreatedAt":"2019-05-09T07:57:29","Actor":"ArthurHNL","Number":"3686","RawContent":null,"Title":"ML.NET Domain does not belong to microsoft","State":"open","Body":"In marketing / newsletter emails from microsoft, ML.NET is interpreted by my email client (gmail) as an hyperlink. However, ML.NET leads to a sales inquiry for the domain.","Url":"https://github.com/dotnet/machinelearning/issues/3686","RelatedDescription":"Open issue \"ML.NET Domain does not belong to microsoft\" (#3686)"},{"Id":"442092085","IsPullRequest":false,"CreatedAt":"2019-05-09T07:34:27","Actor":"PeterPann23","Number":"3685","RawContent":null,"Title":"Nice feature however better to have a Event with an EventArgs to manage this in production code","State":"open","Body":"\r\n[Enter feedback here]\r\nThis is an important feature however there are several different ways one could come to a conclusion to early stop the training. \r\n\r\nAt the moment the training iteration goes to a fixed number 100 if I'm not mistaken. Although that number is nice it would be better to provide a early stopping rule, providing a rule would in my opinion override/enhance the NumberOfIterations property. \r\n\r\nsome simple generic rules would help\r\n    - Minimum improvement\r\n    - MaxDuration (TimeSpan)\r\n    - Number of Iterations\r\n \r\nProposed delegate\r\n    - Iteration Nr => (get)\r\n    - Maximum Iteration=> (get)\r\n    - Pref Score/ Improvement =>(get)\r\n    - Current Score/ Improvement => (get)   \r\n   -  Auto-configured [Trainer].Options specific values related to fitting\r\n    - StopNow => (get/set)\r\n    - GetMetrics(validationdata)\r\n    - GetCurrentModel()\r\n\r\nThis would allow us to early adjust the training to stop if Iteration/ time passed is not improving as per expected value. \r\n\r\nSome use cases: \r\n1. Speed up training and quality by make better use of trainer options\r\n   - understand the auto - discovered properties and how they are adjusted by \r\n     the trainer so that one can better understands what to specify in the \r\n     [Trainer].Options like  LearningRate etc NumberOfLeaves.\r\n \r\n2. Reporting: \r\n    - allows to generate charts showing progress of training (real-time and as log).\r\n    - allows joining machine resources with progress in training in reporting/ logging.\r\n\r\n3. In Multi-class:\r\n    - Additional train a specific class (under over fitting).\r\n    - Store \"sub models\" for specific classes.\r\n\r\n4. Generative adversarial network (GAN)\r\n    - Hook for joining [N] networks together allowing them. \r\n       to improve the other network in a more efficient way.\r\n\r\n5. Adversarial machine learning (spam filter's, vulnerability testing etc)\r\n     - hook for additional training on specific exploits and or \r\n       make/ save specific models for specific set of exploits/ classes.  \r\n\r\nThe above list is not a complete set of use cases, just some use cases that would be greatly improve usability of the framework that pop in mind. \r\n\r\nI know of no way, at the moment, how this can be done with the current framework without massive waist of resources and time. Training with our in-house framework has this and some of my models train for days big server so iterating / poking around (and waiting) with values is not really an option. \r\n\r\nWhen playing with Iris sample size of data this feature might sound silly as it's done before one can sip a cup of coffee, production development is a bit different. \r\n \r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 1ee559b0-04b6-5280-ed68-6291d1e2f7cf\r\n* Version Independent ID: abe34fa0-63f1-7501-165b-20b55190dc0b\r\n* Content: [LightGbmTrainerBase&lt;TOptions,TOutput,TTransformer,TModel&gt;.OptionsBase.EarlyStoppingRound Field (Microsoft.ML.Trainers.LightGbm)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmtrainerbase-4.optionsbase.earlystoppinground?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Trainers.LightGbm/LightGbmTrainerBase`4+OptionsBase.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Trainers.LightGbm/LightGbmTrainerBase`4+OptionsBase.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @sfilipi\r\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3685","RelatedDescription":"Open issue \"Nice feature however better to have a Event with an EventArgs to manage this in production code\" (#3685)"},{"Id":"442079812","IsPullRequest":false,"CreatedAt":"2019-05-09T07:00:21","Actor":"sergey-tihon","Number":"3684","RawContent":null,"Title":"[AutoML] Allow to use serialized IDataView as an input","State":"open","Body":"ML.NET support at least two types of `IDataView` serializations out of the box - text and binary files.\r\n\r\nSo I can use [one of two](https://github.com/dotnet/machinelearning/issues/3661#issuecomment-489996753) to prepare my data set for AutoML\r\n```csharp\r\nusing (var stream = File.Create(textFileName))\r\n    mlContext.Data.SaveAsText(data, stream);\r\n\r\nusing (var stream = File.Create(binFileName))\r\n    mlContext.Data.SaveAsBinary(data, stream);\r\n```\r\n\r\nBut when I try to use serialized file as an input for AutoML (both CLI and GUI version) it unable to parse them. \r\n\r\n### Binary format\r\nUsing binary format \r\n> mlnet auto-train --task binary-classification --dataset \"data-bin.idv\" --label-column-name IsCS --cache on --max-exploration-time 60  --verbosity diag\r\n\r\nI see following error\r\n```\r\nInferring Columns ...\r\nAn Error occured during inferring columns\r\nUnable to split the file provided into multiple, consistent columns.\r\nMicrosoft.ML.AutoML.InferenceException: Unable to split the file provided into multiple, consistent columns.\r\n   at Microsoft.ML.AutoML.ColumnInferenceApi.InferSplit(MLContext context, TextFileSample sample, Nullable`1 separatorChar, Nullable`1 allowQuotedStrings, Nullable`1 supportSparse)\r\n   at Microsoft.ML.AutoML.ColumnInferenceApi.InferColumns(MLContext context, String path, ColumnInformation columnInfo, Nullable`1 separatorChar, Nullable`1 allowQuotedStrings, Nullable`1 supportSparse, Boolean trimWhitespace, Boolean groupColumns)\r\n   at Microsoft.ML.CLI.CodeGenerator.AutoMLEngine.InferColumns(MLContext context, ColumnInformation columnInformation)\r\n   at Microsoft.ML.CLI.CodeGenerator.CodeGenerationHelper.GenerateCode()\r\n   at Microsoft.ML.CLI.Program.<>c__DisplayClass1_0.<Main>b__0(NewCommandSettings options)\r\nPlease see the log file for more info.\r\nExiting ...\r\n```\r\n\r\n### Text format\r\n\r\nWith `--verbosity diag` it stuck on the line \r\n```\r\nInferring Columns ...\r\nCreating Data loader ...\r\nLoading data ...\r\nExploring multiple ML algorithms and settings to find you the best model for ML task: binary-classification\r\nFor further learning check: https://aka.ms/mlnet-cli\r\n|     Trainer                              Accuracy      AUC    AUPRC  F1-score  Duration #Iteration             |\r\n[Source=AutoML, Kind=Trace] Channel started\r\n```\r\n\r\nwith default verbosity \r\n> mlnet auto-train --task binary-classification --dataset \"data-txt.tsv\" --label-column-name IsCS --cache on --max-exploration-time 60 \r\n\r\nit return an error of type mismatch\r\n```\r\nxploring multiple ML algorithms and settings to find you the best model for ML task: binary-classification\r\nFor further learning check: https://aka.ms/mlnet-cli\r\n──────────────────────────\r\nWaiting for the first iteration to complete ...                                                                                                                                       00:00:00\r\nException occured while exploring pipelines:\r\nProvided label column 'IsCS' was of type Single, but only type Boolean is allowed.\r\nPlease see the log file for more info.\r\n```\r\n\r\nbut data file looks correct (it serialized by ML.NET). \r\nThis is the header and first lines of dataset\r\n```\r\n#@ TextLoader{\r\n#@   header+\r\n#@   sep=tab\r\n#@   col=IsCS:BL:0\r\n#@   col=Features:R4:1-19\r\n#@ }\r\nIsCS\t19\t0:\"\"\r\n0\t2\t0.259255171\t0\t0\t0\t1.41421354\t0\t1.41421354\t0\t1.41421354\t0\t1.41421354\t0\t3\t6\t0\t0\t1\t1192\r\n0\t6\t0.259255171\t0\t0\t0\t1.41421354\t0\t1.41421354\t0\t1.41421354\t0\t1.41421354\t0\t3\t6\t0\t0\t1\t1192\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3684","RelatedDescription":"Open issue \"[AutoML] Allow to use serialized IDataView as an input\" (#3684)"},{"Id":"442041389","IsPullRequest":true,"CreatedAt":"2019-05-09T04:14:11","Actor":"yamachu","Number":"3682","RawContent":null,"Title":"Replace VectorType with VectorDataViewType in SchemaComprehension document","State":"open","Body":"ref: https://github.com/dotnet/machinelearning/pull/3022\r\n\r\nThe document did not follow the change https://github.com/dotnet/machinelearning/pull/3022 , so replace it.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3682","RelatedDescription":"Open PR \"Replace VectorType with VectorDataViewType in SchemaComprehension document\" (#3682)"},{"Id":"442004210","IsPullRequest":false,"CreatedAt":"2019-05-09T01:01:01","Actor":"danucalovj","Number":"3681","RawContent":null,"Title":"ML.NET API - Exploration Time vs Epochs + Loss/AUC (Enhancement)","State":"open","Body":"This is more of a feature enhancement rather than an issue. Please let me know if this is the correct venue to submit this to.\r\n\r\nIn both the Model Builder GUI and the CLI for AutoML, the only option to customize training time is through the **max exploration time** setting. Example of CLI options:\r\n\r\n![image](https://user-images.githubusercontent.com/12853868/57419929-a7d2a880-71b9-11e9-908e-1ce2d41e84e2.png)\r\n\r\nThis is a really neat way of changing things around instead of using epochs, using a time-based approach. But this could lead to undertraining a data set fairly easily, especially large ones, or produce a model that due to the fact that it hasn't been trained long enough (through several epochs throughout the entire dataset) didn't produce a good accuracy rate as expected.\r\n\r\nI'm going to take a wild guess (can't find documentation for this) that the time based approach takes into account AUC or Loss as a criteria (or another common metric) to stop the training, is that correct? In other words if I have a small dataset and I set a training time of 4 hours, but the AUC or Loss didn't improve over X iterations it calls it a day and gives me the best result, is that correct?\r\n\r\nIt would be nice if the AutoML function (Model Builder, CLI and API) provided a way to (in addition to the time-based approach, or as an alternative to):\r\n\r\n1. Set epochs for training rather than time based approach.\r\n2. Set metric to look for when stopping a training, i.e.: auc, loss, etc.\r\n3. Set thresholds of metrics to stop a training. i.e.: if after X number of epochs it doesn't improve, call it a day.","Url":"https://github.com/dotnet/machinelearning/issues/3681","RelatedDescription":"Open issue \"ML.NET API - Exploration Time vs Epochs + Loss/AUC (Enhancement)\" (#3681)"},{"Id":"441777694","IsPullRequest":false,"CreatedAt":"2019-05-08T14:53:07","Actor":"popasUC","Number":"3679","RawContent":null,"Title":"Please add support for Visual Basic.Net","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\nIt looks like this Visual Studio extension does not currently work in Visual Basic .Net projects.\r\n\r\n- **What did you do?**\r\nInstalled the ML.Net Model Builder extension in Visual Studio 2019.\r\nCreated a new VB.Net project and a new C# project.\r\n\r\n- **What happened?**\r\nThe ML.Net Model Builder extension worked in the C# project (Add - Machine Learning opened the ML.Net Model Builder tab). Pass for C#.\r\n\r\nThe ML.Net Model Builder extension did not work in the VB.Net project (Add - Machine Learning was not even available). FAIL for VB.Net.\r\n\r\n- **What did you expect?**\r\nIt would be nice for this extension to work in VB.Net projects as well.\r\nYou would more than double your audience!\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3679","RelatedDescription":"Open issue \"Please add support for Visual Basic.Net\" (#3679)"},{"Id":"441491746","IsPullRequest":false,"CreatedAt":"2019-05-07T23:51:07","Actor":"Suchiman","Number":"3677","RawContent":null,"Title":"Model Builder formats floating point numbers using current culture in C# code","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 1809 de-DE\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0 Preview 5\r\n\r\n### Issue\r\n\r\n- I've installed the extension from https://marketplace.visualstudio.com/items?itemName=MLNET.07\r\n- Then i've added Machine Learning and stepped through the wizard until it generated code\r\n- Generated code didn't compile because floating point numbers were using `,` and not `.`\r\n\r\n### Source code / logs\r\n```csharp\r\npublic static IEstimator<ITransformer> BuildTrainingPipeline(MLContext mlContext)\r\n{\r\n    // Data process configuration with pipeline data transformations \r\n    var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\"Message_tf\", \"Message\")\r\n                                .Append(mlContext.Transforms.CopyColumns(\"Features\", \"Message_tf\"))\r\n                                .Append(mlContext.Transforms.NormalizeMinMax(\"Features\", \"Features\"))\r\n                                .AppendCacheCheckpoint(mlContext);\r\n\r\n    // Set the training algorithm \r\n    var trainer = mlContext.BinaryClassification.Trainers.LbfgsLogisticRegression(new LbfgsLogisticRegressionBinaryTrainer.Options() { L2Regularization = 0, 7094225f, L1Regularization = 0, 09696315f, OptimizationTolerance = 1E-07f, HistorySize = 20, MaximumNumberOfIterations = 864052206, InitialWeightsDiameter = 0, 2569083f, DenseOptimizer = true, LabelColumnName = \"Label\", FeatureColumnName = \"Features\" });\r\n\r\n    return trainingPipeline;\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3677","RelatedDescription":"Open issue \"Model Builder formats floating point numbers using current culture in C# code\" (#3677)"},{"Id":"441466691","IsPullRequest":true,"CreatedAt":"2019-05-07T22:07:31","Actor":"najeeb-kazmi","Number":"3676","RawContent":null,"Title":"Fix SoftMax precision by utilizing double in the internal calculations","State":"open","Body":"Fixes #3648 \r\n\r\nUses `double` when calculating softmax exponent scores and only cast to `float` at the final step returning the probabilities.\r\n\r\ncc: @rauhs ","Url":"https://github.com/dotnet/machinelearning/pull/3676","RelatedDescription":"Open PR \"Fix SoftMax precision by utilizing double in the internal calculations\" (#3676)"},{"Id":"441354172","IsPullRequest":false,"CreatedAt":"2019-05-07T17:39:23","Actor":"greenygh0st","Number":"3675","RawContent":null,"Title":"Predict() cannot find file on disk even though it exists","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: macOS\r\n- **.NET Version (eg., dotnet --info)**: 2.2.2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nRan the ObjectDetection example from https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/DeepLearning_ObjectDetection_Onnx\r\n\r\n- **What happened?**\r\nThe Predict() method of the model produced an IO error that the file could not be found\r\n\r\n- **What did you expect?**\r\nFor the sample to properly classify the images.\r\n\r\n---\r\nI also confirmed that the file does exist on disk and that the file is readable. I did this by passing sample.ImagePath to File.ReadAllText() in an additional line I added above the Predict() line.\r\n\r\n![image](https://user-images.githubusercontent.com/1551020/57320674-0e29cf00-70c5-11e9-8d45-5ee2b655560b.png)\r\n\r\n### Source code / logs\r\n\r\n![image](https://user-images.githubusercontent.com/1551020/57320303-37962b00-70c4-11e9-8d25-be019e95dd98.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3675","RelatedDescription":"Open issue \"Predict() cannot find file on disk even though it exists\" (#3675)"},{"Id":"441252235","IsPullRequest":false,"CreatedAt":"2019-05-07T14:04:53","Actor":"luisquintanilla","Number":"3674","RawContent":null,"Title":"Permutation Feature Importance on Text Data","State":"open","Body":"This question/issue is related to dotnet/docs#12216\r\n\r\nUsing data that looks like the following (ignore accuracy, this was generated data for demo purposes):\r\n\r\nAudienceReview|CriticReview|Rating\r\n|---|---|---|\r\nIt was a true masterpiece|I hated it |2\r\nWorst movie ever|I did not like it|1\r\nIt was nice|It was nice|1\r\n\r\nI created the data model `InputData`:\r\n\r\n```csharp\r\npublic class InputData\r\n{\r\n    [LoadColumn(0)]\r\n    public string AudienceReview { get; set; }\r\n    [LoadColumn(1)]\r\n    public string CriticReview { get; set; }\r\n    [LoadColumn(2)]\r\n    [ColumnName(\"Label\")]\r\n    public float Rating { get; set; }\r\n}\r\n```\r\n\r\nAnd used the following pipeline:\r\n\r\n```csharp\r\nDataOperationsCatalog.TrainTestData dataSplit = mlContext.Data.TrainTestSplit(data);\r\nIDataView trainData = dataSplit.TrainSet;\r\nIDataView testSet = dataSplit.TestSet;\r\n\r\nvar trainingPipeline = mlContext.Transforms.Text.FeaturizeText(\"AudienceReview\")\r\n    .Append(mlContext.Transforms.Text.FeaturizeText(\"CriticReview\"))\r\n    .Append(mlContext.Transforms.Concatenate(\"Features\", new string[] { \"AudienceReview\", \"CriticReview\" }))\r\n    .Append(mlContext.Regression.Trainers.Sdca());\r\n\r\nvar trainedModel = trainingPipeline.Fit(trainData);\r\n\r\nvar pfi = mlContext.Regression.PermutationFeatureImportance(trainedModel.LastTransformer, trainedModel.Transform(testSet), permutationCount: 3);\r\n```\r\n\r\nI would expect the result of using PFI to contain metrics for two features, `AudienceReview` and `CriticReview`. Instead, I get 268 features.  I believe this is because it is taking the result of `FeaturizeText` and treating each element in the vector as a feature as opposed to the entire vector. Is that the intent?","Url":"https://github.com/dotnet/machinelearning/issues/3674","RelatedDescription":"Open issue \"Permutation Feature Importance on Text Data\" (#3674)"},{"Id":"441130850","IsPullRequest":false,"CreatedAt":"2019-05-07T09:25:34","Actor":"sergey-tihon","Number":"3673","RawContent":null,"Title":"Restore trainer code from model.zip ","State":"open","Body":"How can I restore the code that was used to create `model.zip`? Is model archive is self-containing?\r\n\r\n### Use case:\r\nLet's say I have 10 models in production, created by few engineers. \r\nAfter some time (1 year) I find out that one model does not perform as good as it was before and I want to retrain it using the same algorithms but with more training data.\r\n\r\nShould I maintain all version of trainers (code & params) and their relationships with generated model files separately or I will be able to restore code in the future?\r\n\r\nSomething like\r\n```\r\nmlnet gen-proj \"model.zip\" --lang C#\r\n```   \r\n\r\n### Note\r\n\r\nAlso may be useful to have AutoML logs packed inside (optionally)\r\nIf model is trained and saved by Azure ML it may be useful to know how many minutes was spend on training and what models was tried...","Url":"https://github.com/dotnet/machinelearning/issues/3673","RelatedDescription":"Open issue \"Restore trainer code from model.zip \" (#3673)"},{"Id":"441128194","IsPullRequest":false,"CreatedAt":"2019-05-07T09:19:50","Actor":"PeterPann23","Number":"3672","RawContent":null,"Title":"Perhaps show how to understand what class has what score","State":"open","Body":"One gets an set of scores only no documented way to map the value to class.  \n\nPerhaps add some samples like:\nvar predEngine = mlContext.Model.CreatePredictionEngine&lt;IrisData, IrisPrediction&gt;(trainedModel);\nVBuffer&lt;float&gt; keys = default;\npredEngine.OutputSchema[\"PredictedLabel\"].GetKeyValues(ref keys);\nvar labelsArray = keys.DenseValues().ToArray();\nfor (var i = 0; i &lt; keys.Length; i++)\n    Console.WriteLine($\"key {labelsArray[i]} = {metrics.PerClassLogLoss[i]:P4}\");\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 3a185e45-64a6-62d0-14ce-98dcb476c011\n* Version Independent ID: 2e425649-9cc1-3aff-a82c-59b04ae34702\n* Content: [MulticlassClassificationMetrics.PerClassLogLoss Property (Microsoft.ML.Data)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.multiclassclassificationmetrics.perclasslogloss?view=ml-dotnet#Microsoft_ML_Data_MulticlassClassificationMetrics_PerClassLogLoss)\n* Content Source: [dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3672","RelatedDescription":"Open issue \"Perhaps show how to understand what class has what score\" (#3672)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-05-10T05:30:35.0367686Z","RunDurationInMilliseconds":1338}