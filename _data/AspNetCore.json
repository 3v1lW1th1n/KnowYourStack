{"Data":{"Blog":{"FeedItems":[{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7 Preview 4. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null},{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7601121920","Type":"IssuesEvent","CreatedAt":"2018-04-28T09:58:22","Actor":"AuthorProxy","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3102","RelatedDescription":"Closed issue \"CORS policy not work\" (#3102) at aspnet/Home","RelatedBody":"server error: `A CORS policy named 'CorsPolicy' could not be found.`\r\nclient error:\r\n```\r\nxhr.js:178 OPTIONS http://05b9f069.ngrok.io/api/somemethod 500 (Internal Server Error)\r\nbtrips:1 Failed to load http://05b9f069.ngrok.io/api/somemethod: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:3000' is therefore not allowed access. The response had HTTP status code 500.\r\n```\r\n\r\nConfigureServices method:\r\n```\r\nvoid ConfigurePolicy(CorsPolicyBuilder builder)\r\n{\r\n    builder\r\n        .WithOrigins(\"http://localhost\", \"http://localhost:3000\")\r\n        .AllowAnyOrigin()\r\n        .AllowAnyMethod()\r\n        .AllowAnyHeader()\r\n        .AllowCredentials();\r\n}\r\n\r\nservices.AddCors(options =>\r\n{\r\n    options.AddPolicy(StartupConstants.CorsPolicy, ConfigurePolicy);\r\n});\r\n\r\nservices.AddMvc()\r\n```\r\n\r\nConfigure method\r\n```\r\napp.UseCors(StartupConstants.CorsPolicy);\r\napp.UseMvc();\r\n```"},{"Id":"7600310566","Type":"IssuesEvent","CreatedAt":"2018-04-28T00:50:09","Actor":"jmcginty","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3104","RelatedDescription":"Opened issue \"Enhancement to JsonPatch to provide a comparison method which compares two objects and returns a JsonPatchDocument\" (#3104) at aspnet/Home","RelatedBody":"Would you consider a pull request to implement this? \r\nI was thinking the API would be a static method like \r\n\r\n    /// <summary>\r\n    /// Compares two objects and returns a JsonPatchDocument describing the changes\r\n    /// </summary>\r\n    /// <param name=\"original\">original object</param>\r\n    /// <param name=\"modified\">modified object</param>\r\n    /// <returns></returns>\r\n    public static JsonPatchDocument CreatePatch(object original, object modified)\r\n\r\ncalled like so:\r\n\r\n     JsonPatchDocument patch = JsonPatchDocument.CreatePatch(originalObject, modifiedObject);\r\n\r\n"},{"Id":"7598828566","Type":"IssuesEvent","CreatedAt":"2018-04-27T17:48:34","Actor":"ryanbrandenburg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/3034","RelatedDescription":"Reopened issue \"Flaky test: System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory\" (#3034) at aspnet/Home","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=442272&tab=buildResultsDiv&buildTypeId=XPlat_Windows_Win10Universe#testNameId1329483692832033125) sometimes with the following error:\r\n\r\n```\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-Keys' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 89\r\n======= Failed test run #2 ==========\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-KeysTemp' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 55\r\n```\r\n\r\nFuture instances of this failure can be tracked [here](http://aspnetci/project.html?projectId=XPlat&buildTypeId=&tab=testDetails&testNameId=1329483692832033125&order=TEST_STATUS_DESC&branch_XPlat=__all_branches__&itemsCount=50)."},{"Id":"7598737660","Type":"IssuesEvent","CreatedAt":"2018-04-27T17:28:33","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3103","RelatedDescription":"Closed issue \"Kerberos authentication not working using documented HTTP.sys setup on Windows\" (#3103) at aspnet/Home","RelatedBody":"_From @narmafraz on April 27, 2018 16:22_\n\nTrying to setup a ASP .NET Core 2.0 REST API service on a Windows server (2012 R2) that authenticates users using Kerberos.\r\nFollowing official docs on setting up HTTP.sys: https://docs.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-2.1&tabs=aspnetcore2x#enable-windows-authentication-with-httpsys-or-weblistener\r\n\r\nThe minimal reproduction code that exhibits the issue:\r\n```c#\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Server.HttpSys;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace NetCoreHttpSys\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .UseHttpSys(options =>\r\n                {\r\n                    options.Authentication.Schemes = AuthenticationSchemes.Negotiate;\r\n                    options.Authentication.AllowAnonymous = false;\r\n                    options.UrlPrefixes.Add(\"http://+:8777/\");\r\n                })\r\n                .Build()\r\n                .Run();\r\n        }\r\n    }\r\n\r\n    public class Startup\r\n    {\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(HttpSysDefaults.AuthenticationScheme);\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n            app.Run(async context =>\r\n            {\r\n                var identity = context.User?.Identity;\r\n                await context.Response.WriteAsync(\r\n                    $\"User={identity?.Name} \" +\r\n                    $\"Authenticated={identity?.IsAuthenticated} \" +\r\n                    $\"Type={identity?.AuthenticationType}\");\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n\r\nProject file:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nRunning this as `user1` user on the server.\r\nThe following SPN has been registered in AD against `user1`: `HTTP/host1.domain.com:8777`\r\nThis SPN is listed when I run `setspn -L user1`\r\n\r\nBut when I use Chrome browser to navigate to `http://host1.domain.com:8777/` I can see by inspecting `chrome://net-internals` that the server is sending 401 with `WWW-Authenticate: Negotiate` twice and Chrome sends Kerberos tokens in the `Authorization` header twice back to the server and the third time the browser gets a 401 it pops up a user/pass challenge form.\r\n\r\nTried many different things without success and to make sure our setup/environment is not the issue I created minimal projects using other servers.\r\n\r\nMinimal OWIN service running on .NET Framework 4.6.1 that successfully authenticates browser users using Kerberos using the same setup (running on same server as same user and same port):\r\n```c#\r\nusing System;\r\nusing System.Net;\r\nusing System.Threading;\r\nusing System.Web.Http;\r\nusing Microsoft.Owin.Hosting;\r\nusing Owin;\r\n\r\nnamespace NetFrameworkOwin\r\n{\r\n    public class Program\r\n    {\r\n        public void RunWebApp(string[] urls)\r\n        {\r\n            using (WebApp.Start(new StartOptions(urls[0]), Configure))\r\n            {\r\n                Console.WriteLine(\"Started server, listening on \" + urls[0]);\r\n                new ManualResetEvent(false).WaitOne();\r\n            }\r\n        }\r\n\r\n        public void Configure(IAppBuilder appBuilder)\r\n        {\r\n            var listener = (HttpListener)appBuilder.Properties[\"System.Net.HttpListener\"];\r\n            listener.AuthenticationSchemeSelectorDelegate = request => AuthenticationSchemes.Negotiate;\r\n\r\n            appBuilder.Run(async context =>\r\n            {\r\n                var identity = context.Authentication?.User?.Identity;\r\n                await context.Response.WriteAsync(\r\n                    $\"User={identity?.Name} \" +\r\n                    $\"Authenticated={identity?.IsAuthenticated} \" +\r\n                    $\"Type={identity?.AuthenticationType}\");\r\n            });\r\n        }\r\n\r\n        public static void Main(string[] args)\r\n        {\r\n            new Program().RunWebApp(args);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`package.config` file showing the dependency versions used:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<packages>\r\n  <package id=\"Microsoft.AspNet.WebApi.Client\" version=\"5.2.3\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.AspNet.WebApi.Core\" version=\"5.2.3\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.AspNet.WebApi.Owin\" version=\"5.2.3\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.Owin\" version=\"3.1.0\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.Owin.Host.HttpListener\" version=\"3.1.0\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.Owin.Hosting\" version=\"3.1.0\" targetFramework=\"net461\" />\r\n  <package id=\"Newtonsoft.Json\" version=\"6.0.4\" targetFramework=\"net461\" />\r\n  <package id=\"Owin\" version=\"1.0\" targetFramework=\"net461\" />\r\n</packages>\r\n```\r\n\r\nAlso tried using .NET Core 2.0 HttpListener and that also successfully authenticates browser users using Kerberos running in the same environment:\r\n```c#\r\nusing System;\r\nusing System.Net;\r\nusing System.Text;\r\n\r\nnamespace NetCoreHttpListener\r\n{\r\n    class Program\r\n    {\r\n        public const string ResponseString = \"Hello world\";\r\n        public static readonly byte[] Buffer = Encoding.UTF8.GetBytes(ResponseString);\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            try\r\n            {\r\n                UseHttpListener(args[0]);\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine(e);\r\n            }\r\n        }\r\n\r\n        static void UseHttpListener(string url)\r\n        {\r\n            var listener = new HttpListener { AuthenticationSchemes = AuthenticationSchemes.Negotiate };\r\n            listener.Prefixes.Add(url);\r\n            listener.Start();\r\n            Console.WriteLine($\"Listening on {url} with HttpListener...\");\r\n\r\n            while (true)\r\n            {\r\n                var context = listener.GetContext();\r\n                var request = context.Request;\r\n                Console.WriteLine($\"Hit from {request.RemoteEndPoint.Address}...\");\r\n                var response = context.Response;\r\n                response.ContentLength64 = Buffer.Length;\r\n                var output = response.OutputStream;\r\n                output.Write(Buffer, 0, Buffer.Length);\r\n                output.Close();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nProject file:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nSo bit lost as to why the official documented method of using HTTP.sys is not working out of the box.\r\n\r\nAny pointers on how to diagnose the issue further please?\r\n\r\nRaising an issue to get help and see if this is an issue with .NET Core perhaps.​\r\n\r\n[EDIT] Add syntax highlighting by @karelz\n\n_Copied from original issue: dotnet/corefx#29371_"},{"Id":"7598713138","Type":"IssuesEvent","CreatedAt":"2018-04-27T17:23:02","Actor":"karelz","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3103","RelatedDescription":"Opened issue \"Kerberos authentication not working using documented HTTP.sys setup on Windows\" (#3103) at aspnet/Home","RelatedBody":"_From @narmafraz on April 27, 2018 16:22_\n\nTrying to setup a ASP .NET Core 2.0 REST API service on a Windows server (2012 R2) that authenticates users using Kerberos.\r\nFollowing official docs on setting up HTTP.sys: https://docs.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-2.1&tabs=aspnetcore2x#enable-windows-authentication-with-httpsys-or-weblistener\r\n\r\nThe minimal reproduction code that exhibits the issue:\r\n```c#\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Server.HttpSys;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace NetCoreHttpSys\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .UseHttpSys(options =>\r\n                {\r\n                    options.Authentication.Schemes = AuthenticationSchemes.Negotiate;\r\n                    options.Authentication.AllowAnonymous = false;\r\n                    options.UrlPrefixes.Add(\"http://+:8777/\");\r\n                })\r\n                .Build()\r\n                .Run();\r\n        }\r\n    }\r\n\r\n    public class Startup\r\n    {\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(HttpSysDefaults.AuthenticationScheme);\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n            app.Run(async context =>\r\n            {\r\n                var identity = context.User?.Identity;\r\n                await context.Response.WriteAsync(\r\n                    $\"User={identity?.Name} \" +\r\n                    $\"Authenticated={identity?.IsAuthenticated} \" +\r\n                    $\"Type={identity?.AuthenticationType}\");\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n\r\nProject file:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nRunning this as `user1` user on the server.\r\nThe following SPN has been registered in AD against `user1`: `HTTP/host1.domain.com:8777`\r\nThis SPN is listed when I run `setspn -L user1`\r\n\r\nBut when I use Chrome browser to navigate to `http://host1.domain.com:8777/` I can see by inspecting `chrome://net-internals` that the server is sending 401 with `WWW-Authenticate: Negotiate` twice and Chrome sends Kerberos tokens in the `Authorization` header twice back to the server and the third time the browser gets a 401 it pops up a user/pass challenge form.\r\n\r\nTried many different things without success and to make sure our setup/environment is not the issue I created minimal projects using other servers.\r\n\r\nMinimal OWIN service running on .NET Framework 4.6.1 that successfully authenticates browser users using Kerberos using the same setup (running on same server as same user and same port):\r\n```c#\r\nusing System;\r\nusing System.Net;\r\nusing System.Threading;\r\nusing System.Web.Http;\r\nusing Microsoft.Owin.Hosting;\r\nusing Owin;\r\n\r\nnamespace NetFrameworkOwin\r\n{\r\n    public class Program\r\n    {\r\n        public void RunWebApp(string[] urls)\r\n        {\r\n            using (WebApp.Start(new StartOptions(urls[0]), Configure))\r\n            {\r\n                Console.WriteLine(\"Started server, listening on \" + urls[0]);\r\n                new ManualResetEvent(false).WaitOne();\r\n            }\r\n        }\r\n\r\n        public void Configure(IAppBuilder appBuilder)\r\n        {\r\n            var listener = (HttpListener)appBuilder.Properties[\"System.Net.HttpListener\"];\r\n            listener.AuthenticationSchemeSelectorDelegate = request => AuthenticationSchemes.Negotiate;\r\n\r\n            appBuilder.Run(async context =>\r\n            {\r\n                var identity = context.Authentication?.User?.Identity;\r\n                await context.Response.WriteAsync(\r\n                    $\"User={identity?.Name} \" +\r\n                    $\"Authenticated={identity?.IsAuthenticated} \" +\r\n                    $\"Type={identity?.AuthenticationType}\");\r\n            });\r\n        }\r\n\r\n        public static void Main(string[] args)\r\n        {\r\n            new Program().RunWebApp(args);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`package.config` file showing the dependency versions used:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<packages>\r\n  <package id=\"Microsoft.AspNet.WebApi.Client\" version=\"5.2.3\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.AspNet.WebApi.Core\" version=\"5.2.3\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.AspNet.WebApi.Owin\" version=\"5.2.3\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.Owin\" version=\"3.1.0\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.Owin.Host.HttpListener\" version=\"3.1.0\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.Owin.Hosting\" version=\"3.1.0\" targetFramework=\"net461\" />\r\n  <package id=\"Newtonsoft.Json\" version=\"6.0.4\" targetFramework=\"net461\" />\r\n  <package id=\"Owin\" version=\"1.0\" targetFramework=\"net461\" />\r\n</packages>\r\n```\r\n\r\nAlso tried using .NET Core 2.0 HttpListener and that also successfully authenticates browser users using Kerberos running in the same environment:\r\n```c#\r\nusing System;\r\nusing System.Net;\r\nusing System.Text;\r\n\r\nnamespace NetCoreHttpListener\r\n{\r\n    class Program\r\n    {\r\n        public const string ResponseString = \"Hello world\";\r\n        public static readonly byte[] Buffer = Encoding.UTF8.GetBytes(ResponseString);\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            try\r\n            {\r\n                UseHttpListener(args[0]);\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine(e);\r\n            }\r\n        }\r\n\r\n        static void UseHttpListener(string url)\r\n        {\r\n            var listener = new HttpListener { AuthenticationSchemes = AuthenticationSchemes.Negotiate };\r\n            listener.Prefixes.Add(url);\r\n            listener.Start();\r\n            Console.WriteLine($\"Listening on {url} with HttpListener...\");\r\n\r\n            while (true)\r\n            {\r\n                var context = listener.GetContext();\r\n                var request = context.Request;\r\n                Console.WriteLine($\"Hit from {request.RemoteEndPoint.Address}...\");\r\n                var response = context.Response;\r\n                response.ContentLength64 = Buffer.Length;\r\n                var output = response.OutputStream;\r\n                output.Write(Buffer, 0, Buffer.Length);\r\n                output.Close();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nProject file:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nSo bit lost as to why the official documented method of using HTTP.sys is not working out of the box.\r\n\r\nAny pointers on how to diagnose the issue further please?\r\n\r\nRaising an issue to get help and see if this is an issue with .NET Core perhaps.​\r\n\r\n[EDIT] Add syntax highlighting by @karelz\n\n_Copied from original issue: dotnet/corefx#29371_"},{"Id":"7598396316","Type":"IssuesEvent","CreatedAt":"2018-04-27T16:15:05","Actor":"AuthorProxy","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3102","RelatedDescription":"Opened issue \"CORS policy not work\" (#3102) at aspnet/Home","RelatedBody":"server error: `A CORS policy named 'CorsPolicy' could not be found.`\r\nclient error:\r\n```\r\nxhr.js:178 OPTIONS http://05b9f069.ngrok.io/api/somemethod 500 (Internal Server Error)\r\nbtrips:1 Failed to load http://05b9f069.ngrok.io/api/somemethod: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:3000' is therefore not allowed access. The response had HTTP status code 500.\r\n```\r\n\r\nConfigureServices method:\r\n```\r\nvoid ConfigurePolicy(CorsPolicyBuilder builder)\r\n{\r\n    builder\r\n        .WithOrigins(\"http://localhost\", \"http://localhost:3000\")\r\n        .AllowAnyOrigin()\r\n        .AllowAnyMethod()\r\n        .AllowAnyHeader()\r\n        .AllowCredentials();\r\n}\r\n\r\nservices.AddCors(options =>\r\n{\r\n    options.AddPolicy(StartupConstants.CorsPolicy, ConfigurePolicy);\r\n});\r\n\r\nservices.AddMvc()\r\n```\r\n\r\nConfigure method\r\n```\r\napp.UseCors(StartupConstants.CorsPolicy);\r\napp.UseMvc();\r\n```"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7601329196","Type":"IssuesEvent","CreatedAt":"2018-04-28T12:18:10","Actor":"chenhongyi","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2159","RelatedDescription":"Opened issue \"how to set HttpConnectionContext.ActiveFormat =  TransferFormat.Binary\" (#2159) at aspnet/SignalR","RelatedBody":"### Please consider the following before filing an issue\r\n\r\nHelp me!  how to set HttpConnectionContext.ActiveFormat =  TransferFormat.Binary,\r\nIn Microsoft.AspNetCore.Http.Connections,and the version is 1.0.0-preview2-final"},{"Id":"7601271406","Type":"IssuesEvent","CreatedAt":"2018-04-28T11:38:20","Actor":"SkeletonSkelettron","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2157","RelatedDescription":"Closed issue \"''Microsoft.AspNetCore.SignalR.IHubClients' does not contain a definition for 'User''\" (#2157) at aspnet/SignalR","RelatedBody":"Hi I have Signalr Hub and use it in controllers via injection this way\r\n\r\n`private readonly IHubContext < ChatHub > chatHub;\r\n\r\n        public SharedController( IHubContext<ChatHub> hubContext)\r\n        {\r\n            chatHub= hubContext;\r\n        }\r\n\r\n\r\n        public async void SendMessage([FromBody] JObject obj)\r\n        {\r\n            await chatHub.Clients.User(userId).SendAsync(\"ReceieveMessage\", new { Message = message});\r\n        }\r\n\r\nprogram compiles, but on execution I get error: \r\n\r\n**''Microsoft.AspNetCore.SignalR.IHubClients' does not contain a definition for 'User''.**\r\n\r\nbut in other controllers everything works fine.\r\nWhat's the problem?\r\nI have signalr version 1.0.0-preview2-final\r\n\r\nThanks"},{"Id":"7600013573","Type":"IssuesEvent","CreatedAt":"2018-04-27T22:34:27","Actor":"stackt52","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2145","RelatedDescription":"Closed issue \"JavaScript client failing to connect to asp.net core 2.1 app implementing SignalR\" (#2145) at aspnet/SignalR","RelatedBody":"I'm new to the dotnet platform. I've been trying to create a server app that implements signalR in order to push notifications to connected clients in real time (according to the blog: [https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/](https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr)) but i've been having challenges having the client subscribe to push notifications services implemented on the server side using SignalR. I'm using .NET Core SDK 2.1.300-preview2, which ships with signalR, and for the client I'm using an `npm` module @aspnet/signalr@1.0.0-preview2-final.  \r\n\r\nThe client is a pure HTML5 app, and I'm adding the client signalR library using the `<script>` tag. When I run the client in order to connect I'm getting these errors in the browser console:\r\n![console](https://user-images.githubusercontent.com/21298951/39275251-f517e3d4-48e4-11e8-8893-b457e7981f5a.png)\r\nSnapshot of the code I'm using to establish connection:\r\n![client_code](https://user-images.githubusercontent.com/21298951/39275341-398ca73e-48e5-11e8-8803-f05df48a9733.png)\r\n\r\nAt first I thought maybe it's the CORS issue, but I've enabled CORS in my backend app to allow all origins, headers, and methods, but still getting the same error.\r\n\r\nI'm running both the client and server on macOs High Sierra.\r\nHow can I resolve this error?\r\n"},{"Id":"7599083455","Type":"IssuesEvent","CreatedAt":"2018-04-27T18:42:40","Actor":"ckoenig95","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2158","RelatedDescription":"Opened issue \"Maximum Payload size\" (#2158) at aspnet/SignalR","RelatedBody":"Hi,\r\n\r\nI tried to send larger amounts of data (> 100kb) over a SignalR connection from server (Kestrel) to client (Browser / JS) in a single methode invocation and got some unexpected results.\r\n\r\nFor example when sending a `byte[]` of size 50000 from server to client everything works as expected.\r\nBut when sending a `byte[]` of size somewhere between 100000 and 110000+ the server stops responding.\r\nI got no errors/exceptions and tried the `JsonHubProtocol` and `MessagePackHubProtocol`.\r\n\r\nI use AspNetCore v2.1.0-preview2-final on .NET Framework 4.6.1 with AspNetCore.SignalR v1.0.0-preview2-final.\r\n\r\nI tested this on a Windows 10 Machine with Firefox 60.0b15 (64-bit) and Chrome 66.0.3359.117 (64-Bit).\r\n\r\nA working example illustrating the issue can be found [here](https://github.com/ckoenig95/SignalRApplication).\r\n\r\n### Here are the interesting bits\r\n#### TestHub.cs\r\n```cs\r\npublic class TestHub : Hub\r\n{\r\n    public byte[] GetData(int size) => new byte[size];\r\n}\r\n```\r\n#### Browser / JS:\r\n```html\r\n<script src=\"lib/signalr/signalr.js\"></script>\r\n<script src=\"lib/msgpack5/msgpack5.js\"></script>\r\n<script src=\"lib/signalr/signalr-protocol-msgpack.js\"></script>\r\n\r\n<script>\r\n    (function () {\r\n        let protocolSelect = document.getElementById(\"protocol\");\r\n        let connectButton = document.getElementById(\"connect\");\r\n        let startButton = document.getElementById(\"start\");\r\n        let startLengthInput = document.getElementById(\"startLength\");\r\n        let requestedLengthSpan = document.getElementById(\"requestedLength\");\r\n        let responseLengthSpan = document.getElementById(\"responseLength\");\r\n\r\n        let connection;\r\n\r\n        connectButton.addEventListener(\"click\", async () => {\r\n            if (connection && connection.connection.connectionState === 1 /* Connected */)\r\n                await connection.stop();\r\n\r\n            let protocol;\r\n            switch (protocolSelect.value) {\r\n                case \"json\":\r\n                    protocol = new signalR.JsonHubProtocol();\r\n                    break;\r\n                case \"messagepack\":\r\n                    protocol = new signalR.protocols.msgpack.MessagePackHubProtocol();\r\n                    break;\r\n            }\r\n\r\n            connection = new signalR.HubConnection(\"TestHub\", { logger: signalR.LogLevel.Trace, protocol: protocol });\r\n            await connection.start();\r\n        });\r\n\r\n        startButton.addEventListener(\"click\", async () => {\r\n            for (let i = startLengthInput.valueAsNumber; true; i += 100) {\r\n                requestedLengthSpan.innerText = i;\r\n                let data = await connection.invoke(\"GetData\", i); // ISSUE: Stops responding when i is greater then ~100000 \r\n                responseLengthSpan.innerText = data.length;\r\n                await sleep(10);\r\n            }\r\n        });\r\n\r\n        function sleep(ms) {\r\n            return new Promise((resolve, reject) => setTimeout(resolve, ms));\r\n        }\r\n    })();\r\n</script>\r\n```"},{"Id":"7599027472","Type":"IssuesEvent","CreatedAt":"2018-04-27T18:30:47","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2152","RelatedDescription":"Closed issue \"Consider putting Connection ID back in the log messages\" (#2152) at aspnet/SignalR","RelatedBody":"Today we log the connection ID as a \"scope\" parameter, which tags it on every log throughout the application that is written in the scope of a specific connection. This is goodness. However, some loggers (lookin at you Azure App Service Logger) don't include Scope information in the log messages and don't have a way to do so. For these, it would be useful if the SignalR log messages included the connection ID. We should consider putting the connection ID back into the individual log messages (in the actual message) so we can get that data.\r\n\r\nSimilarly, we should expose scopes in Azure App Service, but that's a separate issue."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7601574448","Type":"IssuesEvent","CreatedAt":"2018-04-28T14:53:38","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7707","RelatedDescription":"Closed issue \"Custom ComplexTypeModelBinder doesn't work properly for Api Controllers or i do something wrong?\" (#7707) at aspnet/Mvc","RelatedBody":"Model binder doesn't work or i do something wrong.\r\nHere is my implementation.\r\n\r\n```\r\npublic class BaseAppModel\r\n{\r\n    public virtual void BindModel(ModelBindingContext bindingContext)\r\n    {\r\n    }\r\n}\r\n```\r\n \r\n```\r\npublic class TestModel : BaseAppModel\r\n{\r\n    public int Id { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n```\r\n\r\n```\r\npublic class AppModelBinderProvider : IModelBinderProvider\r\n{\r\n    public IModelBinder GetBinder(ModelBinderProviderContext context)\r\n    {\r\n        if (context == null)\r\n            throw new ArgumentNullException(nameof(context));\r\n\r\n        var modelType = context.Metadata.ModelType;\r\n        if (!typeof(BaseAppModel).IsAssignableFrom(modelType))\r\n            return null;\r\n\r\n        if (!context.Metadata.IsComplexType || context.Metadata.IsCollectionType) \r\n            return null;\r\n        \r\n        var propertyBinders = new Dictionary<ModelMetadata, IModelBinder>();\r\n        foreach (var property in context.Metadata.Properties)\r\n            propertyBinders.Add(property, context.CreateBinder(property));\r\n\r\n        return new AppModelBinder(propertyBinders);\r\n    }\r\n}\r\n```\r\n\r\n```\r\npublic class AppModelBinder : ComplexTypeModelBinder\r\n{\r\n    public AppModelBinder(IDictionary<ModelMetadata, IModelBinder> propertyBinders)\r\n        : base(propertyBinders)\r\n    {\r\n    }\r\n\r\n    protected override object CreateModel(ModelBindingContext bindingContext)\r\n    {\r\n        if (bindingContext == null)\r\n            throw new ArgumentNullException(nameof(bindingContext));\r\n\r\n        //create base model\r\n        var model = base.CreateModel(bindingContext);\r\n\r\n        //add custom model binding\r\n        (model as BaseAppModel)?.BindModel(bindingContext);\r\n\r\n        return model;\r\n    }\r\n\r\n    protected override void SetProperty(ModelBindingContext bindingContext, string modelName,\r\n        ModelMetadata propertyMetadata, ModelBindingResult bindingResult)\r\n    {\r\n        if (bindingContext == null)\r\n            throw new ArgumentNullException(nameof(bindingContext));\r\n\r\n        //trim property string values \r\n        var valueAsString = bindingResult.Model as string;\r\n        if (bindingContext.Model is BaseAppModel && !string.IsNullOrEmpty(valueAsString))\r\n        {\r\n            //excluding properties with [NoTrim] attribute\r\n            var noTrim = (propertyMetadata as DefaultModelMetadata)?.Attributes?.Attributes\r\n                ?.OfType<NoTrimAttribute>().Any();\r\n            if (!noTrim.HasValue || !noTrim.Value)\r\n                bindingResult = ModelBindingResult.Success(valueAsString.Trim());\r\n        }\r\n\r\n        base.SetProperty(bindingContext, modelName, propertyMetadata, bindingResult);\r\n    }\r\n}\r\n\r\n```\r\n\r\n```\r\n[Produces(\"application/json\")]\r\n[Route(\"api/[controller]\")]\r\npublic class ValuesController : Controller\r\n{\r\n    [HttpPost]\r\n    public void Post(TestModel model)\r\n    {\r\n\t\t//ping!\r\n    }\r\n}\r\n```\r\n\r\nWhen i debug ComplexTypeModelBinder.cs of mvc with Rider, i get result below.\r\n\r\n```\r\nprivate async Task BindModelCoreAsync(ModelBindingContext bindingContext){\r\n//... \r\n   nestedScope = new ModelBindingContext.NestedScope();\r\n    if (result.IsModelSet)// false\r\n      complexTypeModelBinder.SetProperty(bindingContext, modelName, property, result);// that's why my binder's SetProperty doesn't fire\r\n    else if (property.IsBindingRequired) // false\r\n      bindingContext.ModelState.TryAddModelError(modelName, property.ModelBindingMessageProvider.MissingBindRequiredValueAccessor(fieldName));\r\n    property = (ModelMetadata) null;\r\n//..\r\n}\r\n```\r\n\r\ni choose **body/raw(JSON(application/json))** and it **doesn't** work.\r\n\r\n![fail](https://user-images.githubusercontent.com/9105939/39241332-31cee49a-488f-11e8-9f56-1579255024b5.JPG)\r\n\r\nSurprisingly it works with **body/form-data**.\r\n\r\n![success](https://user-images.githubusercontent.com/9105939/39241350-39501cac-488f-11e8-8834-d23a7dd3b137.JPG)\r\n\r\nWhat's wrong with model binding feature of MVC? Does it behaves different for Web Api?  What i'm missing? \r\n"},{"Id":"7599415021","Type":"PullRequestEvent","CreatedAt":"2018-04-27T19:57:22","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7717","RelatedDescription":"Opened pull request \"Added tests to verify that RazorPages and FuzzyMatching with Head req…\" (#7717) at aspnet/Mvc","RelatedBody":"…uests work"},{"Id":"7598824130","Type":"IssuesEvent","CreatedAt":"2018-04-27T17:47:40","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7522","RelatedDescription":"Closed issue \"AutoValidateAntiforgeryTokenAttribute erase Cache-Control\" (#7522) at aspnet/Mvc","RelatedBody":"Hi, \r\n\r\nI use .net core 2.1 preview 1.\r\n\r\nIn Startup.cs, I use:\r\n```C#\r\n     services.AddMvc(options =>\r\n            {\r\n                options.Filters.Add(new AutoValidateAntiforgeryTokenAttribute());\r\n            }).SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n```\r\nAutoValidateAntiforgeryTokenAttribute is use to validate automatically antiforgery.\r\nAutoValidateAntiforgeryTokenAttribute add \"cache-control: no-cache, no-store\" to the header of http response.\r\n\r\nOn my controller:\r\n\r\n```C#\r\n        [HttpGet]\r\n        [HttpHead]\r\n        [Route(\"\")]\r\n        [NoCacheHttpHeaders]\r\n        public ActionResult Index()\r\n        {\r\n            return View();\r\n        }\r\n```\r\n\r\nI use NoCacheHttpHeaders attribute of NWebsec.AspNetCore.Mvc. to add this header:\r\n\r\nCache-Control: no-cache, no-store, must-revalidate\r\nExpires: -1\r\nPragma: no-cache\r\n\r\nhttps://docs.nwebsec.com/en/latest/nwebsec/Configuring-cache-headers.html\r\n\r\n## Issue\r\nAutoValidateAntiforgeryTokenAttribute rewrite value in cache-control instead of to add values:  no-cache, no-store. must-revalidate is removed.\r\n\r\n"},{"Id":"7598603498","Type":"IssuesEvent","CreatedAt":"2018-04-27T16:58:49","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7704","RelatedDescription":"Closed issue \"View() rendering is slow\" (#7704) at aspnet/Mvc","RelatedBody":"I migrated my ASP.NET Core 1.1 project over to 2.0 and everything seems to work okay. However, I noticed that where return View() is called in the server, my webApp loads extremely slow. This wasn't the case in my 1.1 project.\r\n\r\nI'm wondering if this has to do with my migration or if it is a known issue."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7601120226","Type":"IssuesEvent","CreatedAt":"2018-04-28T09:57:18","Actor":"melvillo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1770","RelatedDescription":"Closed issue \"2fa recovery code is not working (invalid)\" (#1770) at aspnet/Identity","RelatedBody":"Hi,\r\nSeems there is an issue with 2fa recovery code as it's not working.\r\n1. Create a new ASP.NET Core Web project with built-in authentication, and deploy the db as default schema\r\n2. Create a new user, and enable it's 2fa by using Microsoft Authentication app or Google's, copy the 2fa recovery code\r\n3. Log out, and re-Log in, but use the 2fa recovery code to reset the 2fa settings, then you can get the error message\r\n\r\nnetcoreapp2.0\r\nMicrosoft.AspNetCore.All            Version=\"2.0.6\" \r\nMicrosoft.EntityFrameworkCore.Tools          Version=\"2.0.2\""},{"Id":"7600370061","Type":"IssuesEvent","CreatedAt":"2018-04-28T01:28:03","Actor":"smitpatel","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1774","RelatedDescription":"Opened issue \"Migration Table name override not honored\" (#1774) at aspnet/Identity","RelatedBody":"_From @snovak7 on April 27, 2018 20:25_\n\nFirst I create my custom DbContext\r\n\r\n```c#\r\npublic class DbContext : \r\n    IdentityDbContext<User, Role, Guid, UserClaim, UserRole, UserLogin, RoleClaim, UserToken> {}\r\n```\r\n\r\nMy User looks like this\r\n\r\n```c#\r\n[Table(\"MyCustomUser\", Schema = \"users\")]\r\n    public class User : IdentityUser<Guid> {}\r\n```\r\n\r\nI setup environment that I can generate my migration code.\r\nFor the test case I included Schema, which worked...\r\n\r\n```c#\r\n            migrationBuilder.CreateTable(\r\n                name: \"AspNetUsers\",\r\n                schema: \"users\",\r\n```\r\n\r\n```c#\r\n                    b.ToTable(\"AspNetUsers\",\"users\");\r\n```\r\n\r\n### Further technical details\r\nEF Core version: 2.0.2-rtm\r\nDatabase Provider: Microsoft.EntityFrameworkCore.SqlServer, Npsql.EntityFrameworkCore.PostgreSQL\r\nOperating system: MacOS High Sierra 10.13.4\r\nIDE: dotnet cli for Migrations, Visual Studio Enterprise 2017 for Mac (Preview)\r\nVersion 7.5 Preview (7.5 build 1222)\r\n\n\n_Copied from original issue: aspnet/EntityFrameworkCore#11843_"},{"Id":"7598857515","Type":"IssuesEvent","CreatedAt":"2018-04-27T17:54:43","Actor":"ajcvickers","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1773","RelatedDescription":"Closed issue \"Changing TKey broken in RC1\" (#1773) at aspnet/Identity","RelatedBody":"Do a normal File-New Project with individual auth. Modify the ApplicationDbContext like so:\r\n\r\n```C#\r\npublic class ApplicationDbContext : IdentityDbContext<IdentityUser<Guid>, IdentityRole<Guid>, Guid>\r\n{\r\n    public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)\r\n        : base(options)\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nAttempt to use any Migrations command:\r\n```\r\nPM> add-migration Initial -Verbose\r\nUsing project 'IdentityRC1Core'.\r\nUsing startup project 'IdentityRC1Core'.\r\nBuild started...\r\nBuild succeeded.\r\nC:\\Program Files\\dotnet\\dotnet.exe exec --depsfile C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1\\IdentityRC1Core.deps.json --additionalprobingpath C:\\Users\\avickers\\.nuget\\packages --additionalprobingpath C:\\Users\\avickers\\.dotnet\\NuGetFallbackFolder --additionalprobingpath \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\" --runtimeconfig C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1\\IdentityRC1Core.runtimeconfig.json \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.tools\\2.1.0-rc1-final\\tools\\netcoreapp2.0\\any\\ef.dll\" migrations add Initial --json --verbose --no-color --prefix-output --assembly C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1\\IdentityRC1Core.dll --startup-assembly C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1\\IdentityRC1Core.dll --project-dir C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\ --language C# --working-dir C:\\Stuff\\IdentityRC1Core --root-namespace IdentityRC1Core\r\nUsing assembly 'IdentityRC1Core'.\r\nUsing startup assembly 'IdentityRC1Core'.\r\nUsing application base 'C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1'.\r\nUsing working directory 'C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core'.\r\nUsing root namespace 'IdentityRC1Core'.\r\nUsing project directory 'C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\'.\r\nFinding DbContext classes...\r\nFinding IDesignTimeDbContextFactory implementations...\r\nFinding application service provider...\r\nFinding IWebHost accessor...\r\nUsing environment 'Development'.\r\nUsing application service provider from IWebHost accessor on 'Program'.\r\nSystem.ArgumentException: GenericArguments[0], 'Microsoft.AspNetCore.Identity.IdentityUser', on 'Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6[TUser,TContext,TKey,TUserClaim,TUserLogin,TUserToken]' violates the constraint of type 'TUser'. ---> System.TypeLoadException: GenericArguments[0], 'Microsoft.AspNetCore.Identity.IdentityUser', on 'Microsoft.AspNetCore.Identity.UserStoreBase`5[TUser,TKey,TUserClaim,TUserLogin,TUserToken]' violates the constraint of type parameter 'TUser'.\r\n   at System.RuntimeTypeHandle.Instantiate(RuntimeTypeHandle handle, IntPtr* pInst, Int32 numGenericArgs, ObjectHandleOnStack type)\r\n   at System.RuntimeTypeHandle.Instantiate(Type[] inst)\r\n   at System.RuntimeType.MakeGenericType(Type[] instantiation)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n   at System.RuntimeType.MakeGenericType(Type[] instantiation)\r\n   at Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions.AddStores(IServiceCollection services, Type userType, Type roleType, Type contextType)\r\n   at Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions.AddEntityFrameworkStores[TContext](IdentityBuilder builder)\r\n   at IdentityRC1Core.Startup.ConfigureServices(IServiceCollection services) in C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\Startup.cs:line 40\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection services)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.EnsureApplicationServices()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.Initialize()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\nAn error occurred while accessing the IWebHost on class 'Program'. Continuing without the application service provider. Error: GenericArguments[0], 'Microsoft.AspNetCore.Identity.IdentityUser', on 'Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6[TUser,TContext,TKey,TUserClaim,TUserLogin,TUserToken]' violates the constraint of type 'TUser'.\r\nNo application service provider was found.\r\nFinding DbContext classes in the project...\r\nFound DbContext 'ApplicationDbContext'.\r\nMicrosoft.EntityFrameworkCore.Design.OperationException: Unable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time. ---> System.MissingMethodException: No parameterless constructor defined for this object.\r\n   at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean wrapExceptions, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor)\r\n   at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean wrapExceptions, Boolean skipCheckThis, Boolean fillCache)\r\n   at System.Activator.CreateInstance(Type type, Boolean nonPublic, Boolean wrapExceptions)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.<>c__DisplayClass12_3.<FindContextTypes>b__13()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.<>c__DisplayClass12_3.<FindContextTypes>b__13()\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.CreateContext(Func`1 factory)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.CreateContext(String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.AddMigration(String name, String outputDir, String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.AddMigrationImpl(String name, String outputDir, String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.AddMigration.<>c__DisplayClass0_1.<.ctor>b__0()\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.<>c__DisplayClass3_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.Execute(Action action)\r\nUnable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time.\r\nPM> \r\n```"},{"Id":"7598294908","Type":"IssuesEvent","CreatedAt":"2018-04-27T15:55:18","Actor":"ajcvickers","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1773","RelatedDescription":"Opened issue \"Changing TKey broken in RC1\" (#1773) at aspnet/Identity","RelatedBody":"Do a normal File-New Project with individual auth. Modify the ApplicationDbContext like so:\r\n\r\n```C#\r\npublic class ApplicationDbContext : IdentityDbContext<IdentityUser<Guid>, IdentityRole<Guid>, Guid>\r\n{\r\n    public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)\r\n        : base(options)\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nAttempt to use any Migrations command:\r\n```\r\nPM> add-migration Initial -Verbose\r\nUsing project 'IdentityRC1Core'.\r\nUsing startup project 'IdentityRC1Core'.\r\nBuild started...\r\nBuild succeeded.\r\nC:\\Program Files\\dotnet\\dotnet.exe exec --depsfile C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1\\IdentityRC1Core.deps.json --additionalprobingpath C:\\Users\\avickers\\.nuget\\packages --additionalprobingpath C:\\Users\\avickers\\.dotnet\\NuGetFallbackFolder --additionalprobingpath \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\" --runtimeconfig C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1\\IdentityRC1Core.runtimeconfig.json \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.tools\\2.1.0-rc1-final\\tools\\netcoreapp2.0\\any\\ef.dll\" migrations add Initial --json --verbose --no-color --prefix-output --assembly C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1\\IdentityRC1Core.dll --startup-assembly C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1\\IdentityRC1Core.dll --project-dir C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\ --language C# --working-dir C:\\Stuff\\IdentityRC1Core --root-namespace IdentityRC1Core\r\nUsing assembly 'IdentityRC1Core'.\r\nUsing startup assembly 'IdentityRC1Core'.\r\nUsing application base 'C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\bin\\Debug\\netcoreapp2.1'.\r\nUsing working directory 'C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core'.\r\nUsing root namespace 'IdentityRC1Core'.\r\nUsing project directory 'C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\'.\r\nFinding DbContext classes...\r\nFinding IDesignTimeDbContextFactory implementations...\r\nFinding application service provider...\r\nFinding IWebHost accessor...\r\nUsing environment 'Development'.\r\nUsing application service provider from IWebHost accessor on 'Program'.\r\nSystem.ArgumentException: GenericArguments[0], 'Microsoft.AspNetCore.Identity.IdentityUser', on 'Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6[TUser,TContext,TKey,TUserClaim,TUserLogin,TUserToken]' violates the constraint of type 'TUser'. ---> System.TypeLoadException: GenericArguments[0], 'Microsoft.AspNetCore.Identity.IdentityUser', on 'Microsoft.AspNetCore.Identity.UserStoreBase`5[TUser,TKey,TUserClaim,TUserLogin,TUserToken]' violates the constraint of type parameter 'TUser'.\r\n   at System.RuntimeTypeHandle.Instantiate(RuntimeTypeHandle handle, IntPtr* pInst, Int32 numGenericArgs, ObjectHandleOnStack type)\r\n   at System.RuntimeTypeHandle.Instantiate(Type[] inst)\r\n   at System.RuntimeType.MakeGenericType(Type[] instantiation)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n   at System.RuntimeType.MakeGenericType(Type[] instantiation)\r\n   at Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions.AddStores(IServiceCollection services, Type userType, Type roleType, Type contextType)\r\n   at Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions.AddEntityFrameworkStores[TContext](IdentityBuilder builder)\r\n   at IdentityRC1Core.Startup.ConfigureServices(IServiceCollection services) in C:\\Stuff\\IdentityRC1Core\\IdentityRC1Core\\Startup.cs:line 40\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection services)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.EnsureApplicationServices()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.Initialize()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\nAn error occurred while accessing the IWebHost on class 'Program'. Continuing without the application service provider. Error: GenericArguments[0], 'Microsoft.AspNetCore.Identity.IdentityUser', on 'Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserOnlyStore`6[TUser,TContext,TKey,TUserClaim,TUserLogin,TUserToken]' violates the constraint of type 'TUser'.\r\nNo application service provider was found.\r\nFinding DbContext classes in the project...\r\nFound DbContext 'ApplicationDbContext'.\r\nMicrosoft.EntityFrameworkCore.Design.OperationException: Unable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time. ---> System.MissingMethodException: No parameterless constructor defined for this object.\r\n   at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean wrapExceptions, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor)\r\n   at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean wrapExceptions, Boolean skipCheckThis, Boolean fillCache)\r\n   at System.Activator.CreateInstance(Type type, Boolean nonPublic, Boolean wrapExceptions)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.<>c__DisplayClass12_3.<FindContextTypes>b__13()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.<>c__DisplayClass12_3.<FindContextTypes>b__13()\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.CreateContext(Func`1 factory)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.CreateContext(String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.AddMigration(String name, String outputDir, String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.AddMigrationImpl(String name, String outputDir, String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.AddMigration.<>c__DisplayClass0_1.<.ctor>b__0()\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.<>c__DisplayClass3_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.Execute(Action action)\r\nUnable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time.\r\nPM> \r\n```"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7599645725","Type":"IssuesEvent","CreatedAt":"2018-04-27T20:51:11","Actor":"srinigithub2016","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2530","RelatedDescription":"Opened issue \"Http Status Code 204 failing with empty content\" (#2530) at aspnet/KestrelHttpServer","RelatedBody":"Service A calls Service B => Service B returns 204. On the Service A when EnsureSucessStatusCode is invoked it adds empty Content which then fails from Kestrel.\r\nWriting to the response body is invalid for responses with status code 204.\r\n\r\n at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.HandleNonBodyResponseWrite()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.<WriteAsyncAwaited>d__199.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.ResponseCompression.BodyWrapperStream.<WriteAsync>d__32.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpContent.<CopyToAsyncCore>d__44.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Sy\r\n\r\n\r\nTo have a workaround we need to explicitly add the following where the Content is null and it works fine.\r\n\r\n if( response.StatusCode.Equals(HttpStatusCode.NoContent))\r\n                    {\r\n                        var response =new HttpResponseMessage(HttpStatusCode.NoContent);\r\n                        return response;\r\n                    }\r\n\r\nAsk for Kestrel to ignore the Conent if the status code is 204. Or dotnet services should not add the content by default on 204 status code.\r\n"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7600118926","Type":"IssuesEvent","CreatedAt":"2018-04-27T23:14:39","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1838","RelatedDescription":"Closed issue \"Add IDE service focused integration tests\" (#1838) at aspnet/Razor","RelatedBody":"These tests would be a lot like our existing baseline tests where they would indicate how a specific service would act at a certain point in the document."},{"Id":"7600078808","Type":"IssuesEvent","CreatedAt":"2018-04-27T22:58:46","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1782","RelatedDescription":"Closed issue \"Try simplifying our workarounds for ProjectReference\" (#1782) at aspnet/Razor","RelatedBody":"See the set of workarounds here: https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/a70d5e6687ac818a85fe8c9760f0caf5a78dce99/StyleCop.Analyzers/StyleCop.Analyzers.Vsix/StyleCop.Analyzers.Vsix.csproj#L47-L53\r\n\r\nThis might be better than what we're currently doing to make our VSIX work with project references."},{"Id":"7600074172","Type":"IssuesEvent","CreatedAt":"2018-04-27T22:56:57","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1835","RelatedDescription":"Closed issue \"Publish Razor Addin mpack to a feed.\" (#1835) at aspnet/Razor","RelatedBody":""},{"Id":"7600061634","Type":"IssuesEvent","CreatedAt":"2018-04-27T22:52:16","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2095","RelatedDescription":"Closed issue \"Razor directive completion doesn't work in VS15.8.\" (#2095) at aspnet/Razor","RelatedBody":"This regressed with the latest bits. Could be due to Roslyn's new completion APIs but could also be due to our project engine changes. Need to investigate."},{"Id":"7599132521","Type":"PullRequestEvent","CreatedAt":"2018-04-27T18:52:53","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2315","RelatedDescription":"Opened pull request \"Make document tracker resilient to multiple subscribes.\" (#2315) at aspnet/Razor","RelatedBody":"- Added tests to verify new functionality.\r\n\r\nI could have gone one step further and removed:\r\n\r\n```C#\r\nif (documentTracker.TextViews.Count == 1)\r\n{\r\n    tracker.Subscribe();\r\n}\r\n```\r\n\r\nFrom our text view connection listener but figured it portrayed the intention of the code rather than the implementation (even though it already casts to the implementation type).\r\n\r\n#2314"},{"Id":"7598719545","Type":"IssuesEvent","CreatedAt":"2018-04-27T17:24:28","Actor":"Tarig0","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2313","RelatedDescription":"Opened issue \"Allow tag helper string attributes to honor null values\" (#2313) at aspnet/Razor","RelatedBody":"I have a view component that needs to be able to understand the difference between a null and empty string. when I use the following the view component is still retrieving an empty string.\r\n\r\n```html\r\n<vc:product-line-list exclude=\"@(Enumerable.Empty<string>())\" selected=\"@ViewData[\"selected\"]\" has-key-nomen=\"@null\"></vc:product-line-list>\r\n```"},{"Id":"7594711829","Type":"IssuesEvent","CreatedAt":"2018-04-27T00:44:12","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2310","RelatedDescription":"Closed issue \"Flaky test: WritePidFile_WorksAsExpected \" (#2310) at aspnet/Razor","RelatedBody":"This test [fails occasionally](http://aspnetci/viewLog.html?buildId=456254&buildTypeId=Lite_Razor) with the following error:\r\n\r\n```\r\nSystem.IO.IOException : The process cannot access the file 'C:\\Users\\asplab\\.dotnet\\pids\\build\\rzc-3176' because it is being used by another process.\r\n   at System.IO.FileSystem.DeleteFile(String fullPath)\r\n   at System.IO.File.Delete(String path)\r\n   at Microsoft.AspNetCore.Razor.Tools.ServerCommandTest.WritePidFile_WorksAsExpected() in /_/test/Microsoft.AspNetCore.Razor.Tools.Test/ServerCommandTest.cs:line 55\r\n```"},{"Id":"7594706549","Type":"PullRequestEvent","CreatedAt":"2018-04-27T00:42:03","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2312","RelatedDescription":"Merged pull request \"Specify RuntimeFrameworkVersion \\ NSLibraryVersion when running tests\" (#2312) at aspnet/Razor","RelatedBody":""},{"Id":"7594623902","Type":"PullRequestEvent","CreatedAt":"2018-04-27T00:10:04","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2312","RelatedDescription":"Opened pull request \"Specify RuntimeFrameworkVersion \\ NSLibraryVersion when running tests\" (#2312) at aspnet/Razor","RelatedBody":""},{"Id":"7594558496","Type":"IssuesEvent","CreatedAt":"2018-04-26T23:46:20","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2311","RelatedDescription":"Opened issue \"Broken tests: Build_RazorOutputPath_SetToNonDefault et al\" (#2311) at aspnet/Razor","RelatedBody":"These tests [fail](http://aspnetci/viewLog.html?buildId=456588&buildTypeId=XPlat_Mac_MacUniverseCoreCLR) occasionally on OSX-Universe\r\n\r\n```\r\nNo stacktrace available\r\n```\r\n\r\nThis is likely a dupe of #2309 but we should figure out why we don't get any output when it happens on OSX."},{"Id":"7594468915","Type":"IssuesEvent","CreatedAt":"2018-04-26T23:15:19","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2310","RelatedDescription":"Opened issue \"Flaky test: WritePidFile_WorksAsExpected \" (#2310) at aspnet/Razor","RelatedBody":"This test [fails occasionally](http://aspnetci/viewLog.html?buildId=456254&buildTypeId=Lite_Razor) with the following error:\r\n\r\n```\r\nSystem.IO.IOException : The process cannot access the file 'C:\\Users\\asplab\\.dotnet\\pids\\build\\rzc-3176' because it is being used by another process.\r\n   at System.IO.FileSystem.DeleteFile(String fullPath)\r\n   at System.IO.File.Delete(String path)\r\n   at Microsoft.AspNetCore.Razor.Tools.ServerCommandTest.WritePidFile_WorksAsExpected() in /_/test/Microsoft.AspNetCore.Razor.Tools.Test/ServerCommandTest.cs:line 55\r\n```"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":13,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":251,"FavoriteCount":148,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":97,"FavoriteCount":55,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2018-04-29T05:30:12.9465784Z","RunDurationInMilliseconds":7358}