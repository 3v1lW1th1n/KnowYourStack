{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11252220237","Type":"IssuesEvent","CreatedAt":"2020-01-11T06:46:32","Actor":"gsscoder","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7792","RelatedDescription":"Closed issue \"A new version of a package shows previous icon\" (#7792) at NuGet/NuGetGallery","RelatedBody":"I've recently pushed a release with a new icon, but I still se the previous one on NuGet.org.\r\n\r\n**package link**:\r\nhttps://www.nuget.org/packages/CSharpx/1.2.3-rc2\r\n\r\n**github of the project**:\r\nhttps://github.com/gsscoder/csharpx\r\n\r\nI had to use deprecated `PackageIconUrl` because, it's seem impossible to point a file with `PackageIcon`.\r\n\r\nThanks in advance."},{"Id":"11251270497","Type":"IssuesEvent","CreatedAt":"2020-01-10T23:41:47","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7774","RelatedDescription":"Closed issue \"Gallery feedback button shifts all the content to the right\" (#7774) at NuGet/NuGetGallery","RelatedBody":"1. Go to https://dev.nugettest.org\r\n2. Click on the feedback button.\r\n\r\nNotice the content shifts right as the feedback dialog appears.\r\nAt the same time the feedback button gets partially obscured by the scrollbar:\r\n![image](https://user-images.githubusercontent.com/102933/70952086-1b734880-201a-11ea-964e-57f42fb9430a.png)\r\n"},{"Id":"11242756741","Type":"PullRequestEvent","CreatedAt":"2020-01-10T00:24:52","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7803","RelatedDescription":"Merged pull request \"Minor app service related changes\" (#7803) at NuGet/NuGetGallery","RelatedBody":"Renamed a variable and a method to emphasize their relation to cloud service infrastructure (not the cloud hosting in general).\r\nRemoved duplicate code that figured out machine name.\r\nAdded `<applicationInitialization>` section to the web.config."},{"Id":"11242603265","Type":"PullRequestEvent","CreatedAt":"2020-01-09T23:50:47","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7803","RelatedDescription":"Opened pull request \"Minor app service related changes\" (#7803) at NuGet/NuGetGallery","RelatedBody":"Renamed a variable and a method to emphasize their relation to cloud service infrastructure (not the cloud hosting in general).\r\nRemoved duplicate code that figured out machine name.\r\nAdded `<applicationInitialization>` section to the web.config."},{"Id":"11242468363","Type":"IssuesEvent","CreatedAt":"2020-01-09T23:22:54","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7766","RelatedDescription":"Closed issue \"[PackageType]Update Gallery to reject invalid package types\" (#7766) at NuGet/NuGetGallery","RelatedBody":"Currently, gallery appears to do very little validation of packageTypes node on package upload.\r\nThis allows packageTypes that are invalid (according to spec) to be pushed to gallery.\r\n\r\nThese package types are effectively meaningless, and should be rejected at push time/nuspec validation time."},{"Id":"11242462744","Type":"IssuesEvent","CreatedAt":"2020-01-09T23:21:49","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7780","RelatedDescription":"Closed issue \"[PackageType]Reflowing packages with package types cause the records to be duplicated\" (#7780) at NuGet/NuGetGallery","RelatedBody":"![image](https://user-images.githubusercontent.com/94054/71047031-1af8b180-20ef-11ea-9a5a-150ddaffb3f1.png)\r\n\r\nThere should only be one."},{"Id":"11242358102","Type":"PullRequestEvent","CreatedAt":"2020-01-09T23:02:17","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7799","RelatedDescription":"Merged pull request \"Functional test script update to wait for the service to start up after the deployment\" (#7799) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2863\r\n\r\nApp service deployment reports success way before the service initialization completes successfully and is able to serve requests. This breaks our tests that encounter 502 responses and fail.\r\nThis change adds a delay and a response test to the test run script to make sure we run tests against the working service."},{"Id":"11242182811","Type":"IssuesEvent","CreatedAt":"2020-01-09T22:32:28","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7796","RelatedDescription":"Closed issue \"[2020-01-06] Deployment\" (#7796) at NuGet/NuGetGallery","RelatedBody":"NuGetGallery\r\n- [x] Merge dev to master\r\n- [x] DEV\r\n    - [x] NuGetGallery\r\n- [x] INT\r\n    - [x] NuGetGallery\r\n- [x] PROD\r\n    - [x] NuGetGallery"},{"Id":"11242111112","Type":"IssuesEvent","CreatedAt":"2020-01-09T22:20:59","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7802","RelatedDescription":"Opened issue \"Support the \"plus\" operator in search\" (#7802) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nLegacy NuGet search supported adding `+` to a term to mark it as required. For example, the query `+foo +bar` would only return results that match both `foo` and `bar`. This feature was lost in the Azure Search migration.\r\n\r\nSee this discussion: https://github.com/NuGet/docs.microsoft.com-nuget/issues/1702\r\n"},{"Id":"11241538654","Type":"PullRequestEvent","CreatedAt":"2020-01-09T20:58:49","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7798","RelatedDescription":"Merged pull request \"HTTP to HTTPS redirect differences between App and Cloud services\" (#7798) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2863\r\n\r\nCloud and app services handle the HTTP to HTTPS redirect differently (we can enable \"Always HTTPS\" for an app service, while we can't do that for the cloud service), so the test update is required to accommodate for that difference.\r\nThis change also requires the test configuration to be updated."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11254108487","Type":"IssuesEvent","CreatedAt":"2020-01-11T21:01:02","Actor":"wli3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9051","RelatedDescription":"Opened issue \"dotNet Core SDK 3.1.100 failing to restore because of bad versions\" (#9051) at NuGet/Home","RelatedBody":"_From @predatorian3 on Saturday, January 11, 2020 1:53:54 AM_\r\n\r\n# Issue Description\r\n\r\nOn a brand new install of dotNet Core SDK 3.1.100 for Windows 10 x64, It seems to be missing dependencies with the install. Should I need to include other feeds to get the `dotnet restore` to work after doing a `dotnet new xunit`? I was following this document: [Organizing and testing projects with the .NET Core command line](https://docs.microsoft.com/en-us/dotnet/core/tutorials/testing-with-cli#testing-the-sample). Some of the references are a little old so maybe something changed? \r\n\r\n## Steps performed\r\n\r\n```\r\ndotnet new xunit\r\ndotnet restore\r\n```\r\n\r\n## System Information\r\n\r\n```\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests>systeminfo\r\n\r\nHost Name:                 FENIX\r\nOS Name:                   Microsoft Windows 10 Pro\r\nOS Version:                10.0.18362 N/A Build 18362\r\nOS Manufacturer:           Microsoft Corporation\r\n```\r\n\r\n## `dotnet` Errors\r\n```\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests>dotnet restore \r\nRestore completed in 25.54 ms for C:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\src\\NewTypes\\NewTypes.csproj.\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj : error NU1100: Unable to resolve 'Microsoft.NET.Test.Sdk (>= 16.2.0)' for '.NETCoreApp,Version=v3.1'.\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj : error NU1100: Unable to resolve 'xunit (>= 2.4.0)' for '.NETCoreApp,Version=v3.1'.\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj : error NU1100: Unable to resolve 'xunit.runner.visualstudio (>= 2.4.0)' for '.NETCoreApp,Version=v3.1'.\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj : error NU1100: Unable to resolve 'coverlet.collector (>= 1.0.1)' for '.NETCoreApp,Version=v3.1'.\r\n  Restore failed in 150.83 ms for C:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj.\r\n```\r\n\r\n## `dotnet` information\r\n\r\n```\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n_Copied from original issue: dotnet/sdk#4156_"},{"Id":"11253939593","Type":"IssuesEvent","CreatedAt":"2020-01-11T19:47:15","Actor":"menaheme","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8412","RelatedDescription":"Closed issue \"Nuget MSBuild auto-detection picks up msbuild.exe 14 on a machine that has VS 2017 installed\" (#8412) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version (4.9.3.5777):\r\n\r\nVS version (if appropriate): 2017 , 15.9 (other versions of VS also installed. 2015)\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 7 v 6.1.7601\r\n\r\n## Detailed repro steps:\r\n\r\n1. run Nuget Restore <path to sln>  -NoCache -NonInteractive\r\n\r\n### Actual result:\r\n\r\nMSBuild auto-detection finds MSbuild ver 14, that is indeed installed on the machine. but visual studio 2017 came with MSBuild version 15.\r\n\r\n### Expected result:\r\nMSBuild auto-detection to find MSBuild version 15\r\n\r\n### note:\r\nthis does not happen on all dev stations, and build agents. temporary fix - we use the specify msbuild version argument.\r\n\r\n\r\n"},{"Id":"11251511889","Type":"PullRequestEvent","CreatedAt":"2020-01-11T00:51:56","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9050","RelatedDescription":"Opened pull request \"document client product dev process\" (#9050) at NuGet/Home","RelatedBody":"Fixes: #8994"},{"Id":"11250943435","Type":"IssuesEvent","CreatedAt":"2020-01-10T22:29:04","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8758","RelatedDescription":"Closed issue \"Protocol diagnostics: instrument local feeds\" (#8758) at NuGet/Home","RelatedBody":""},{"Id":"11250867613","Type":"IssuesEvent","CreatedAt":"2020-01-10T22:14:45","Actor":"aolszowka","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9049","RelatedDescription":"Opened issue \"Visual Studio 2017 Package Restore Fails If Build Force \"Too Early\" (Race Condition?)\" (#9049) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n\r\nVS version: Visual Studio 2017 15.9.14\r\n\r\nOS version: Windows Server 2012 R2\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nIn some scenarios not quite understood yet it appears that NuGet will fail to load properly in Visual Studio. Our best guess is this happens when loading larger solutions (anything with more than 50 projects, with more projects being more likely to occur).\r\n\r\nWhen this happens opening up Package Manager Console in this manner and then rebuilding allows NuGet to restore the packages.\r\n\r\n![FixNuGetInitalizationError](https://user-images.githubusercontent.com/2592881/72189833-2459fe80-33bb-11ea-8b3f-a84fb9c2cf26.gif)\r\n\r\n## Other suggested things\r\nSearching the open and closed issues for anything about race conditions shows some promising items; the closest that seems related might be https://github.com/NuGet/Home/issues/8881 but it is unclear.\r\n\r\nIs there any logs we can grab to help troubleshoot this when we do see it occur? For now we apply the work around and that always seems to work.\r\n"},{"Id":"11250085842","Type":"IssuesEvent","CreatedAt":"2020-01-10T20:07:12","Actor":"xymunter","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9048","RelatedDescription":"Opened issue \"\"NuGet restore\" with NuGet 5.x doesn't pick the highest version of MSBuild.exe available\" (#9048) at NuGet/Home","RelatedBody":"When using the _NuGet_ build task with the _restore_ command in an Azure DevOps Server 2019 (ADOS) Build Pipeline after explicitly setting NuGet version to 5.x (and _Always check for new versions_ active) via_ _NuGet tool installer_ build task, the MSBuild.exe version that then is automatically picked is not the highest one, which would be 16.4, given that Visual Studio 2019 is intalled on the build machine.\r\nInstead, the task log of the _NuGet_ build task states the following:\r\n\r\n> MSBuild auto-detection: using msbuild version '4.8.3761.0 built by: NET48REL1' from 'C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\n\r\nThe documentation for the MSBuildVersion argument then states the following:\r\n\r\n> (3.2+) Specifies the version of MSBuild to be used with this command. Supported values are 4, 12, 14, 15.1, 15.3, 15.4, 15.5, 15.6, 15.7, 15.8, 15.9. By default the MSBuild in your path is picked, otherwise it defaults to the highest installed version of MSBuild.\r\n\r\nAs far as I understand the documentation, me expecting  msbuild.exe version 16.4 to be used is not wrong.\r\n\r\nI managed to find a workaround by using the _NuGet_ work task with the _custom_ command and using the -MSBuildVersion option with the version 16.4. That worked as expected, although my first attempt failed with the error message _##[error]The nuget command failed with exit code(1) and error(Cannot find the specified version of msbuild: '16')_ after setting the -MSBuildVersion option to 16, as the help text given in ADOS implied (for me, at least) that only the general version 16 was valid for this scenario.\r\n\r\nThe next step was to replace the -MSBuildVersion option with -MSBuildPath, in order to prevent the build from failing the moment a Visual Studio 2019 update is installed on the build machine.\r\n\r\nAlthough this workaround seems to do the trick for us, I'd very much like to use the _NuGet_ build task using the _restore_ command instead of the _custom_ command.\r\nCan you please point me in a direction how to achieve this?\r\n"},{"Id":"11250015207","Type":"IssuesEvent","CreatedAt":"2020-01-10T19:56:13","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8974","RelatedDescription":"Closed issue \"Address VSSDK004, VSSDK005 & VSSDK006 analyzer warnings\" (#8974) at NuGet/Home","RelatedBody":"After upgrading our threading libraries a bunch of new warnings that are treated as errors are being raised. \r\n\r\nOne of those warnings is VSSDK004 Use BackgroundLoad flag in ProvideAutoLoad attribute for asynchronous auto load. \r\n\r\nThis is raised because of a recent change to load our package before the solution build event. \r\nhttps://github.com/NuGet/NuGet.Client/blob/cb402b5a3340ab5b2605ecc72de7f70aaac95344/src/NuGet.Clients/NuGet.SolutionRestoreManager/RestoreManagerPackage.cs#L23.\r\nHowever this is done on purpose to support the scenario. \r\n\r\nVSSDK005 & VSSDK006 are more straightforward."},{"Id":"11248212515","Type":"IssuesEvent","CreatedAt":"2020-01-10T15:49:37","Actor":"StingyJack","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9047","RelatedDescription":"Opened issue \"Issues posted here with over 100 positive reactions and supporting comments are being ignored\" (#9047) at NuGet/Home","RelatedBody":"Community feedback regarding a problem or feature isnt going to get much louder than that.  Why is the Nuget team not listening?"},{"Id":"11246437221","Type":"IssuesEvent","CreatedAt":"2020-01-10T11:57:59","Actor":"dasMulli","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9046","RelatedDescription":"Opened issue \"Azure DevOps: NuGet constantly failing due to reliance on offline package cache\" (#9046) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\ndotnet.exe --version (if appropriate): 3.1.100\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a project that references a lot of NuGet packages.\r\n\r\n2. Create an Azure DevOps build definition fetching the 3.1.100 SDK and using `dotnet build` to restore and build the project.\r\n\r\n3. Observe that builds fail occasionally. In our case, one project only succeeds in ~40% of cases.\r\n\r\n## Other suggested things\r\n\r\nIt looks like a Restore fails when a package cannot be found in the offline package source configured in Azure DevOps and the responses from nuget.org take a bit longer.\r\n\r\nIn our case, a solution with 21 projects with a total of 526 pakcage references fails to restore.\r\n\r\nFor example, we see error messages in the build log that a package doesn't exist in the offline package source, but requests to nuget.org come back as OK:\r\n\r\n![image](https://user-images.githubusercontent.com/6129250/72147397-b56eac80-339e-11ea-841e-468f525ff94f.png)\r\n\r\nHowever the overall build fails with NU1101 errors:\r\n\r\n![image](https://user-images.githubusercontent.com/6129250/72151468-970dae80-33a8-11ea-9aa3-41616dc939a5.png)\r\n\r\n"},{"Id":"11245436338","Type":"IssuesEvent","CreatedAt":"2020-01-10T09:40:58","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9045","RelatedDescription":"Opened issue \"[Localization][CHS][CHT] String “By” should be translated to “作者:”\" (#9045) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: D16.5\\29708.193\r\nOS Version: windows-10-enterprise-rs4-zh-cn\r\n## Installation\r\n1. Install a clean machine with OS: windows-10-enterprise-rs4-zh-cn\r\n2. Install VS D16.5\\29708.193: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3369922&view=results CHS/CHT\r\n## Detailed repro steps \r\n1. Open Visual Studio 2019 preview.\r\n2. Create a new Console App (.Net Core) project.\r\n3. Right-click the project and open PM UI in Solution Explorer window.\r\n4. Observe the translation of the author of the package (e.g. Newtonsoft.Json).\r\n## Expected\r\nString “by” should be translated to “作者:”.\r\n## Actual\r\nString “by” was translated to “由”/”依”, making the sentence incomplete as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/72142175-11e9c000-33cf-11ea-9741-c79269bd62bf.png)\r\n![image](https://user-images.githubusercontent.com/40230425/72142183-1615dd80-33cf-11ea-99b7-4a9ddbd73aa6.png)\r\n\r\n"},{"Id":"11243883150","Type":"IssuesEvent","CreatedAt":"2020-01-10T05:02:49","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9044","RelatedDescription":"Opened issue \"Disable NU5105\" (#9044) at NuGet/Home","RelatedBody":"When creating semver2 packages...you get something like...\r\n\r\n> The package version '1.2.3+semver2.metadata' uses SemVer 2.0.0 or components of SemVer 1.0.0 that are not supported on legacy clients. Change the package version to a SemVer 1.0.0 string. If the version contains a release label it must start with a letter. This message can be ignored if the package is not intended for older clients.\r\n\r\nI believe at this point this warning should be removed. \r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-12T05:30:49.8236335Z","RunDurationInMilliseconds":3348}