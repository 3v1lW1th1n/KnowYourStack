{"Data":{"GitHub":{"Issues":[{"Id":"552611803","IsPullRequest":false,"CreatedAt":"2020-01-21T04:03:25","Actor":"curtfehr","Number":"4680","RawContent":null,"Title":"New feature request: Image regression model","State":"open","Body":"It would be nice to have a regression model that works on images, so an image rank can be predicted.  eg. Train images of the sky with a cloudiness rank of 1-100, get prediction as a float instead of bucketing into classifications.","Url":"https://github.com/dotnet/machinelearning/issues/4680","RelatedDescription":"Open issue \"New feature request: Image regression model\" (#4680)"},{"Id":"552604981","IsPullRequest":false,"CreatedAt":"2020-01-21T03:33:17","Actor":"curtfehr","Number":"4679","RawContent":null,"Title":"Unable to load DLL 'tensorflow'","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro v 1903\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n   - Create a new .NET Core console application\r\n   - Right-click, Add Machine Learning\r\n   - Image classification\r\n   - Select input path for images\r\n   - Start Training\r\n\r\n- **What happened?**\r\n   - Crashed with: System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n\r\n- **What did you expect?**\r\n   - Training to occur\r\n\r\n### Source code / logs\r\n\r\n|     Trainer                              MicroAccuracy  MacroAccuracy  Duration #Iteration                     |\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] Downloading resnet_v2_50_299.meta from https://aka.ms/mlnet-resources/resnet_v2_50_299.meta to D:\\User Temp\\MLNET\\resnet_v2_50_299.meta\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 3711 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 10264576 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 20525056 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 30785536 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 41050112 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 51310592 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 61571072 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 71835648 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 82096128 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 92356608 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 102616931 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Download complete\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:52.2037712.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0005611.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003606.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004386.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003186.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004189.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0007600.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0009608.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0002711.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0006318.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\nTensorflow exception triggered while loading model.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4679","RelatedDescription":"Open issue \"Unable to load DLL 'tensorflow'\" (#4679)"},{"Id":"552334663","IsPullRequest":false,"CreatedAt":"2020-01-20T14:29:03","Actor":"Sinfulelf","Number":"4678","RawContent":null,"Title":"System.MissingMethodException: 'Method not found: 'Tensorflow.Tensor Tensorflow.tensorflow.truncated_normal'","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWindow 10 build-17134\r\n- **.NET Version (eg., dotnet --info)**: \r\nNetCore 3.1\r\n### Issue\r\n\r\n- **What did you do?**\r\nThat example [**Tutorial: Automated visual inspection using transfer learning with the ML.NET Image Classification AP**I](https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification-api-transfer-learning)\r\n- **What happened?**\r\nException on step _ITransformer trainedModel = trainingPipeline.Fit(trainSet)_;:\r\n\r\n> Method not found: 'Tensorflow.Tensor Tensorflow.tensorflow.truncated_normal(Int32[], Single, Single, Tensorflow.TF_DataType, System.Nullable`1<Int32>, System.String)'.\r\n\r\n`\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var workspaceRelativePath = @\"C:\\Test_dev\\ML_Main_Test\\workspace\";\r\n            var assetsRelativePath = @\"C:\\Test_dev\\ML_Main_Test\\assets\";\r\n\r\n            MLContext mlContext = new MLContext();\r\n\r\n            IEnumerable<ImageData> images = LoadImagesFromDirectory(folder: assetsRelativePath, useFolderNameAsLabel: true);\r\n\r\n            var test = images.First();\r\n\r\n            IDataView imageData = mlContext.Data.LoadFromEnumerable(images);\r\n\r\n            IDataView shuffledData = mlContext.Data.ShuffleRows(imageData);\r\n\r\n            var preprocessingPipeline = mlContext.Transforms.Conversion.MapValueToKey(\r\n                                    inputColumnName: \"Label\",\r\n                                    outputColumnName: \"LabelAsKey\")\r\n                                .Append(mlContext.Transforms.LoadRawImageBytes(\r\n                                    outputColumnName: \"Image\",\r\n                                    imageFolder: assetsRelativePath,\r\n                                    inputColumnName: \"ImagePath\"));\r\n\r\n            IDataView preProcessedData = preprocessingPipeline.Fit(shuffledData)\r\n                                            .Transform(shuffledData);\r\n\r\n            TrainTestData trainSplit = mlContext.Data.TrainTestSplit(data: preProcessedData, testFraction: 0.2);\r\n            TrainTestData validationTestSplit = mlContext.Data.TrainTestSplit(trainSplit.TestSet);\r\n\r\n            IDataView trainSet = trainSplit.TrainSet;\r\n            IDataView validationSet = validationTestSplit.TrainSet;\r\n            IDataView testSet = validationTestSplit.TestSet;\r\n\r\n            var classifierOptions = new ImageClassificationTrainer.Options()\r\n            {\r\n                FeatureColumnName = \"Image\",\r\n                LabelColumnName = \"LabelAsKey\",\r\n                ValidationSet = validationSet,\r\n                Arch = ImageClassificationTrainer.Architecture.ResnetV2101,\r\n                MetricsCallback = Console.WriteLine,\r\n                TestOnTrainSet = false,\r\n                ReuseTrainSetBottleneckCachedValues = true,\r\n                ReuseValidationSetBottleneckCachedValues = true,\r\n                WorkspacePath = workspaceRelativePath\r\n            };\r\n            var trainingPipeline = mlContext.MulticlassClassification.Trainers.ImageClassification(classifierOptions)\r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\n            ITransformer trainedModel = trainingPipeline.Fit(trainSet);\r\n\r\n            mlContext.Model.Save(trainedModel, preProcessedData.Schema, \"model.zip\");\r\n\r\n            ClassifySingleImage(mlContext, testSet, trainedModel);\r\n        }\r\n\r\n`\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4678","RelatedDescription":"Open issue \"System.MissingMethodException: 'Method not found: 'Tensorflow.Tensor Tensorflow.tensorflow.truncated_normal'\" (#4678)"},{"Id":"552210125","IsPullRequest":false,"CreatedAt":"2020-01-20T10:30:58","Actor":"salmanmkc","Number":"4677","RawContent":null,"Title":"Domain request for ML.net ","State":"open","Body":"Would be great if Microsoft has the domain ml.net to link to https://dotnet.microsoft.com/apps/machinelearning-ai/ml-dotnet because at the moment ml.net is unresolved, but asp.net redirects.","Url":"https://github.com/dotnet/machinelearning/issues/4677","RelatedDescription":"Open issue \"Domain request for ML.net \" (#4677)"},{"Id":"551919388","IsPullRequest":true,"CreatedAt":"2020-01-19T13:04:36","Actor":"yaeldekel","Number":"4676","RawContent":null,"Title":"Add support for stateful custom mappers, and for custom filters.","State":"open","Body":"Fixes #4675 .","Url":"https://github.com/dotnet/machinelearning/pull/4676","RelatedDescription":"Open PR \"Add support for stateful custom mappers, and for custom filters.\" (#4676)"},{"Id":"551919346","IsPullRequest":false,"CreatedAt":"2020-01-19T13:04:16","Actor":"yaeldekel","Number":"4675","RawContent":null,"Title":"Add support for stateful custom mappers, and for custom filters","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/4675","RelatedDescription":"Open issue \"Add support for stateful custom mappers, and for custom filters\" (#4675)"},{"Id":"551699185","IsPullRequest":true,"CreatedAt":"2020-01-18T01:09:38","Actor":"Lynx1820","Number":"4674","RawContent":null,"Title":"F1-score to return 0.0 instead of NaN","State":"open","Body":"Fixes #4664","Url":"https://github.com/dotnet/machinelearning/pull/4674","RelatedDescription":"Open PR \"F1-score to return 0.0 instead of NaN\" (#4674)"},{"Id":"551662681","IsPullRequest":true,"CreatedAt":"2020-01-17T22:31:23","Actor":"antoniovs1029","Number":"4673","RawContent":null,"Title":"Update documentation to stop mentioning interfaces that no longer exist","State":"open","Body":"So some weeks ago I noticed that the documentation under `docs/code` mention several interfaces that currently don't exist in ML.NET's codebase. They existed back in TLC... and perhaps some of them, if not all of them, actually made it into ML.NET before version 1.0 release... but the case is that they no longer exist, so I just wanted to update them.\r\n\r\nAfter looking into the TLC code, I decided to make the following replacements in the docs:\r\nISchema -> DataViewSchema\r\nIRandom -> System.Random\r\nIRow -> DataViewRow\r\nIRowCursor and ICursor -> DataViewRowCursor\r\n\r\nStill, there are some mentions to IDataReader, which doesn't exist in ML.NET, and I wouldn't be sure how to handle that case.\r\n\r\n### Side notes\r\n1. **About IRandom**: In TLC it seems that only `SysRandom `and `TauswortheHybrid ` implemented `IRandom`. In ML.NET `IRandom` and `SysRandom` don't exist, but `TauswortheHybrid` inherits from System.Random. So I guess it's safe to replace `IRandom` for \"System.Random\" in the docs.","Url":"https://github.com/dotnet/machinelearning/pull/4673","RelatedDescription":"Open PR \"Update documentation to stop mentioning interfaces that no longer exist\" (#4673)"},{"Id":"551609651","IsPullRequest":false,"CreatedAt":"2020-01-17T20:10:53","Actor":"lefig","Number":"4672","RawContent":null,"Title":"New feature request: Additional TimeseriesCatalog estimators ","State":"open","Body":"Dear all,\r\n\r\nUnless I am mistaken there is currently a single model suitable for time-series forecasting (ForecastBySsa). \r\n\r\nThe other models within this catalogue target anomaly detection. There are various alternative methods that may be used to forecast time. \r\n\r\nIt would be nice to have a choice and the option to try a different method.\r\n\r\nThank you\r\n\r\nFig","Url":"https://github.com/dotnet/machinelearning/issues/4672","RelatedDescription":"Open issue \"New feature request: Additional TimeseriesCatalog estimators \" (#4672)"},{"Id":"551021842","IsPullRequest":true,"CreatedAt":"2020-01-17T19:32:23","Actor":"frank-dong-ms","Number":"4666","RawContent":null,"Title":"collect crash dump, upload dump and pdb to artifact","State":"closed","Body":"1. collect crash dump when test host process crashes\r\n2. upload dump and pdb to artifact for further investigate","Url":"https://github.com/dotnet/machinelearning/pull/4666","RelatedDescription":"Closed or merged PR \"collect crash dump, upload dump and pdb to artifact\" (#4666)"},{"Id":"551554129","IsPullRequest":false,"CreatedAt":"2020-01-17T17:59:13","Actor":"saucepleez","Number":"4671","RawContent":null,"Title":"Loading Data from DataTable or \"Dynamic\" Model","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows\r\n- **.NET Version (eg., dotnet --info)**:  .NET Framework 4.8\r\n\r\n### Issue\r\nI would like to know how I can leverage a datatable or some similar type instead of using model classes.  To start with, I am currently able to successfully train and predict with a model class using the multi-class classification.  The current model in my setup looks like this:\r\n\r\n     public class MultiClassInput\r\n      {\r\n        [ColumnName(\"Statement\")]\r\n        public string Statement { get; set; }\r\n        [ColumnName(\"Label\")]\r\n        public string Label { get; set; }\r\n      }\r\n\r\nI am essentially creating a List<MultiClassInput> from data in a datatable.  Some sample data I used to successfully train and predict:\r\n \r\n                    v_ModelTrainingData.Rows.Clear();\r\n                    v_ModelTrainingData.Rows.Add(\"I need to Reset Password\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"I want to Reset Password\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"Password Reset\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"Reset My Password\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"Pass Reset\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"Pay Bill\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Pay Invoice\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Billing Problems\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Review Charges\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Pay Charges\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Invoice Problem\", \"#Billing\");\r\n\r\nWhat I would like to do is figure out some way to have a user pick a column to be the label -- that way I can support multiple columns of data to act as input to the training process without creating multiple classes.  Everything I have found so far looks like it requires a known model class.  Any thoughts on how I can achieve this? Thanks.\r\n\r\n### Source code / logs\r\nRead documentation for loading data: https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/load-data-ml-net","Url":"https://github.com/dotnet/machinelearning/issues/4671","RelatedDescription":"Open issue \"Loading Data from DataTable or \"Dynamic\" Model\" (#4671)"},{"Id":"551287109","IsPullRequest":false,"CreatedAt":"2020-01-17T08:58:10","Actor":"patryk-enigma","Number":"4670","RawContent":null,"Title":"MultiClass Classification - feature contribution","State":"open","Body":"Hello,\r\n\r\nDo you plan on adding Feature Contribution to multi class classification problem?\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 72fdbc4e-fdca-27da-91d3-93fb0d397185\r\n* Version Independent ID: ad7c3810-5cdf-5fc8-b856-7ce0a0f2e2f1\r\n* Content: [FeatureContributionCalculatingEstimator Class (Microsoft.ML.Transforms)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.featurecontributioncalculatingestimator?view=ml-dotnet#feedback)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Transforms/FeatureContributionCalculatingEstimator.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Transforms/FeatureContributionCalculatingEstimator.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/4670","RelatedDescription":"Open issue \"MultiClass Classification - feature contribution\" (#4670)"},{"Id":"551228320","IsPullRequest":true,"CreatedAt":"2020-01-17T06:26:58","Actor":"frank-dong-ms","Number":"4669","RawContent":null,"Title":"retry and disable tests to get stable CI","State":"open","Body":"Due to test in private agent pool, these 2 tests seems crashing test host process, try to disable them.\r\n\r\nhttps://dev.azure.com/dnceng/public/_build?definitionId=712&_a=summary\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4669","RelatedDescription":"Open PR \"retry and disable tests to get stable CI\" (#4669)"},{"Id":"551131544","IsPullRequest":true,"CreatedAt":"2020-01-17T06:13:56","Actor":"frank-dong-ms","Number":"4667","RawContent":null,"Title":"retry flaky tests","State":"closed","Body":"1. new retry fact to retry flaky tests, at most 2 times by default\r\n2. use retry fact to some known flaky tests, below is the list:\r\n\tSsaForecast\r\n\tTensorFlowImageClassificationWithPolynomialLRScheduling\r\n\tTensorFlowImageClassificationDefault\r\n\tTensorFlowImageClassificationBadImages\r\n\tCrossValidationIris\r\n\tTestOvaMacro\r\n\tEntryPointChainedCrossValMacros\r\n\tEntryPointSDCARegression\r\n\tTestOvaMacroWithUncalibratedLearner\r\n\tMulticlassTreeFeaturizedLRTest\r\n\tBinaryClassifierSymSgdTest\r\n\tBinaryClassifierLogisticRegressionBinNormTest\r\n\tTestGAMRegression\r\n\tRegressionTrainersOnnxConversionTest\r\n\tTestGcnNormCommandLine\r\n\tSavePipeSlidingWindow\r\n3. this is only to mitigate flaky tests with retry, not to address test crash or test hanging issues\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4667","RelatedDescription":"Closed or merged PR \"retry flaky tests\" (#4667)"},{"Id":"551143602","IsPullRequest":false,"CreatedAt":"2020-01-17T01:13:12","Actor":"frank-dong-ms","Number":"4668","RawContent":null,"Title":"start test process from a managed place for better control","State":"open","Body":"Start the test process from a managed place instead directly from xunit, that will give us better control:\r\n1. logging and restart test process if crashes\r\n2. retry flaky test with everything reset\r\n3. logging when test process hangs\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4668","RelatedDescription":"Open issue \"start test process from a managed place for better control\" (#4668)"},{"Id":"551002160","IsPullRequest":true,"CreatedAt":"2020-01-16T19:15:37","Actor":"mstfbl","Number":"4665","RawContent":null,"Title":"TextLoader now checks for presence of source file with clear error message","State":"open","Body":"Fixed #2461 \r\n\r\nTextLoader now checks whether the given file in path exists. If the file is missing, a clear exception stating that the file is missing is given, instead of stating that some field is missing some unknown attribute.","Url":"https://github.com/dotnet/machinelearning/pull/4665","RelatedDescription":"Open PR \"TextLoader now checks for presence of source file with clear error message\" (#4665)"},{"Id":"551001963","IsPullRequest":false,"CreatedAt":"2020-01-16T19:15:14","Actor":"justinormont","Number":"4664","RawContent":null,"Title":"F1-score to return 0.0 instead of NaN","State":"open","Body":"Our `F1` metric can currently return a `NaN` value when both the precision and recall are zero, as `F1 = 2 * precision * recall / (precision + recall)`, which turns into `0 / 0`. Precision/recall being zero occurs for a trivial model which always guesses the majority class zero.\r\n\r\nWe should return `F1=0.0` instead of `NaN`  -- this is done in sklearn ([code](https://github.com/scikit-learn/scikit-learn/blob/4b82c4450b759f4efd0dbad2840739ffc416e533/sklearn/metrics/classification.py#L927-L929)), and others ([note](https://github.com/dice-group/gerbil/wiki/Precision,-Recall-and-F1-measure#dividing-by-0)) \r\n<br/>Our `F1` calculation code:\r\nhttps://github.com/dotnet/machinelearning/blob/610ffcb67083c2e5e6e1a14884ba24b1da0384c7/src/Microsoft.ML.Data/Evaluators/BinaryClassifierEvaluator.cs#L483\r\n\r\nSee background: https://github.com/dotnet/machinelearning/issues/4648#issuecomment-574886743","Url":"https://github.com/dotnet/machinelearning/issues/4664","RelatedDescription":"Open issue \"F1-score to return 0.0 instead of NaN\" (#4664)"},{"Id":"551000677","IsPullRequest":false,"CreatedAt":"2020-01-16T19:12:25","Actor":"justinormont","Number":"4663","RawContent":null,"Title":"NaN metric value handling in AutoML","State":"open","Body":"AutoML API code is not handing `NaN` values for metrics. During the sweep, when a model returns a `NaN` value for the metric being optimized, AutoML crashes.\r\n\r\nSee background: https://github.com/dotnet/machinelearning/issues/4648#issuecomment-574886743","Url":"https://github.com/dotnet/machinelearning/issues/4663","RelatedDescription":"Open issue \"NaN metric value handling in AutoML\" (#4663)"},{"Id":"550118135","IsPullRequest":false,"CreatedAt":"2020-01-16T01:33:55","Actor":"louistrouche","Number":"4656","RawContent":null,"Title":"Error when using onnx models with GPU (CUDA 10)","State":"closed","Body":"### System information\r\n\r\n- Microsoft.ML.OnnxTransformer : 1.4.0\r\n\r\n- Microsoft.ML : 1.4.0\r\n\r\n- OnnxRuntime.Gpu (test) : 1.0.1\r\n\r\n- CUDA/cuDNN version: : CUDA 10.0.130, cuDNN 7.6.2.\r\n\r\n- .NET Core 2.0\r\n\r\n\r\n### Issue\r\nI'm currently trying to use an onnx model with a GPU and I get the following exception: \r\n\r\nSystem.EntryPointNotFoundException: Unable to find an entry point named 'OrtSessionOptionsAppendExecutionProvider_CUDA' in DLL 'onnxruntime'.\r\n\r\nThis exception appear when I use the ApplyOnnxModel method : \r\n`var pipeline =_mlContext.Transforms.ApplyOnnxModel(\r\n\t\t\t\tgpuDeviceId: gpuDeviceId,\r\n\t\t\t\tmodelFile: onnxModelFilePath);`\r\n\r\nI have tried with and without installing the NuGet package Microsoft.ML.OnnxRuntime.Gpu (1.0.1) and I get the same exception.  I have no problem using my onnx model when I use the OnnxRuntime.Gpu package directly.\r\n\r\nIt seems like even when I install the OnnxRuntime.Gpu package, it's the CPU version that is used. I would like to know if there is a way to make it work without having to build a local ML.NET OnnxTransformer package from source which depends on the OnnxRuntime.Gpu package.\r\n\r\n### Source code / logs\r\n\r\n<img width=\"934\" alt=\"error_with_onnx_gpu\" src=\"https://user-images.githubusercontent.com/33623029/72428589-51792900-378e-11ea-9b4f-1a2c024f0e50.PNG\">\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4656","RelatedDescription":"Closed issue \"Error when using onnx models with GPU (CUDA 10)\" (#4656)"},{"Id":"550495092","IsPullRequest":true,"CreatedAt":"2020-01-15T23:58:18","Actor":"antoniovs1029","Number":"4662","RawContent":null,"Title":"Throw exception in ImageClassificationTrainer when dataset contains only 1 class","State":"open","Body":"Throw exception in ImageClassificationTrainer when dataset contains only 1 class\r\n\r\nFixes #4660 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4662","RelatedDescription":"Open PR \"Throw exception in ImageClassificationTrainer when dataset contains only 1 class\" (#4662)"},{"Id":"550413875","IsPullRequest":true,"CreatedAt":"2020-01-15T20:31:58","Actor":"michaelgsharp","Number":"4661","RawContent":null,"Title":"added in support for System.DateTime type for the DateTimeTransformer","State":"open","Body":"Added in support to the `DateTimeTransformer` to use columns of `DateTime` type.\r\n\r\nRemoved the thread safe caching as its faster to just query the native code multiple times then to deal with the thread safe cache.","Url":"https://github.com/dotnet/machinelearning/pull/4661","RelatedDescription":"Open PR \"added in support for System.DateTime type for the DateTimeTransformer\" (#4661)"},{"Id":"550396115","IsPullRequest":false,"CreatedAt":"2020-01-15T19:53:26","Actor":"antoniovs1029","Number":"4660","RawContent":null,"Title":"Using an ImageClassificationTrainer with a dataset that only contains one class of images","State":"open","Body":"### Issue\r\n\r\n- **What did you do?**\r\nI tried to train a model that uses the `ImageClassificationTrainer`, using a dataset that only contains images labeled as 'dog'.\r\n\r\n- **What happened?**\r\nI got a `System.InvalidOperationException: 'Metadata KeyValues does not exist'` while fitting the model, which isn't very informative about the problem. If I didn't know my dataset only contained one label, or if I were to split the dataset in a way that the training set had only one label, then getting that exception wouldn't help to fix the problem.\r\n\r\nAlso notice that the exception is thrown _after_ training is done, so an user would have already invested time on it before noticing that something is wrong. \r\n\r\n- **What did you expect?**\r\nProbably an exception which tells me that there is only one class in my dataset, as done by other multiclass trainers such as the Multiclass LightGBM which throws a `\"System.InvalidOperationException: 'LightGBM Error, code is -1, error message is 'Number of classes should be specified and greater than 1 for multiclass training'.'\"`, or the `LinearMulticlassModelParametersBase` which throws a `System.ArgumentOutOfRangeException: 'Must be at least 2. Parameter name: numClasses'` in [here](https://github.com/dotnet/machinelearning/blob/c4e4263188dccf16903b8f3fea7e65213a69c6e3/src/Microsoft.ML.StandardTrainers/Standard/LogisticRegression/MulticlassLogisticRegression.cs#L505).\r\n\r\nIf I changed my dataset to include other labels, then the exception is gone and it works as expected.\r\n\r\n### Source code / logs\r\n[dataset.zip](https://github.com/dotnet/machinelearning/files/4067127/dataset.zip)\r\n\r\n```C#\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Vision;\r\n\r\nnamespace Microsoft.ML.Samples\r\n{\r\n    public class ModelInput\r\n    {\r\n        [ColumnName(\"Label\"), LoadColumn(0)]\r\n        public string Label { get; set; }\r\n\r\n\r\n        [ColumnName(\"ImageSource\"), LoadColumn(1)]\r\n        public string ImageSource { get; set; }\r\n    }\r\n\r\n    public static class Program\r\n    {\r\n        // private static string TRAIN_DATA_FILEPATH = @\"C:\\Users\\anvelazq\\Desktop\\issue19\\dogs-cats-horses.tsv\"; // This one works because it has multiple classes\r\n        private static string TRAIN_DATA_FILEPATH = @\"C:\\Users\\anvelazq\\Desktop\\issue19\\only-dogs.tsv\"; // This one doesn't work because it has only one class\r\n\r\n        private static MLContext mlContext = new MLContext(seed: 1);\r\n\r\n        public static void Main()\r\n        {\r\n            IDataView trainingDataView = mlContext.Data.LoadFromTextFile<ModelInput>(\r\n                                            path: TRAIN_DATA_FILEPATH,\r\n                                            hasHeader: true,\r\n                                            separatorChar: '\\t',\r\n                                            allowQuoting: true,\r\n                                            allowSparse: false);\r\n\r\n            var dataProcessPipeline = mlContext.Transforms.Conversion.MapValueToKey(\"Label\", \"Label\")\r\n                                      .Append(mlContext.Transforms.LoadRawImageBytes(\"ImageSource_featurized\", null, \"ImageSource\"))\r\n                                      .Append(mlContext.Transforms.CopyColumns(\"Features\", \"ImageSource_featurized\"));\r\n\r\n            var trainer = mlContext.MulticlassClassification.Trainers.ImageClassification(new ImageClassificationTrainer.Options() { LabelColumnName = \"Label\", FeatureColumnName = \"Features\" })\r\n                                      .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\", \"PredictedLabel\"));\r\n            var trainingPipeline = dataProcessPipeline.Append(trainer);\r\n\r\n            var model = trainingPipeline.Fit(trainingDataView); // System.InvalidOperationException: 'Metadata KeyValues does not exist'\r\n\r\n            var transformed = model.Transform(trainingDataView);\r\n            var transformedPreview = transformed.Preview();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Nugets used:\r\n![image](https://user-images.githubusercontent.com/38739674/72475405-ac674c00-379f-11ea-8c71-815038ef1374.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4660","RelatedDescription":"Open issue \"Using an ImageClassificationTrainer with a dataset that only contains one class of images\" (#4660)"},{"Id":"550375718","IsPullRequest":true,"CreatedAt":"2020-01-15T19:11:36","Actor":"harishsk","Number":"4659","RawContent":null,"Title":"Testing changing the behavior of baseline Fail function","State":"open","Body":"Draft PR to try to get callstacks at the point of failure. ","Url":"https://github.com/dotnet/machinelearning/pull/4659","RelatedDescription":"Open PR \"Testing changing the behavior of baseline Fail function\" (#4659)"},{"Id":"550238664","IsPullRequest":false,"CreatedAt":"2020-01-15T14:59:51","Actor":"lefig","Number":"4658","RawContent":null,"Title":"Q: Correct params for Timeseries analysis","State":"open","Body":"Hi all,\r\n\r\nI would appreciate checking my interpretation of the explanatory code comments for the following parameters used for time series analysis.\r\n\r\nThe example uses daily data and has:\r\nvar forecastingPipeline = mlContext.Forecasting.ForecastBySsa(\r\n     windowSize: 7,\r\n    seriesLength: 30,\r\n    trainSize: 365,\r\n    horizon: 7,\r\n   \r\nIs there a specific reason to use 30 (a month) and 7 (a week)? Also the trainSize is 365. Does this simply equate to the 365 samples used for training or represent days in a year?\r\n\r\nThanks!\r\n\r\nFig ","Url":"https://github.com/dotnet/machinelearning/issues/4658","RelatedDescription":"Open issue \"Q: Correct params for Timeseries analysis\" (#4658)"},{"Id":"550131278","IsPullRequest":true,"CreatedAt":"2020-01-15T11:32:45","Actor":"jwood803","Number":"4657","RawContent":null,"Title":"Use random file name for AutoML experiment folder","State":"open","Body":"Address #3803 by using a random file name when creating the AutoML experiment folder.","Url":"https://github.com/dotnet/machinelearning/pull/4657","RelatedDescription":"Open PR \"Use random file name for AutoML experiment folder\" (#4657)"},{"Id":"549922709","IsPullRequest":true,"CreatedAt":"2020-01-15T02:09:23","Actor":"mstfbl","Number":"4655","RawContent":null,"Title":"Added documentation regarding TextLoader's hasHeader field","State":"open","Body":"Fixes #3053\r\n\r\nAdded note regarding TextLoader's hasHeader field per @yaeldekel 's suggestion in #3053.","Url":"https://github.com/dotnet/machinelearning/pull/4655","RelatedDescription":"Open PR \"Added documentation regarding TextLoader's hasHeader field\" (#4655)"},{"Id":"549920100","IsPullRequest":true,"CreatedAt":"2020-01-15T01:59:59","Actor":"mstfbl","Number":"4654","RawContent":null,"Title":"Added documentation regarding TextLoader's hasHeader field","State":"closed","Body":"Fixes #3053 \r\n\r\nAdded note regarding TextLoader's hasHeader field per @yaeldekel 's suggestion in #3053.","Url":"https://github.com/dotnet/machinelearning/pull/4654","RelatedDescription":"Closed or merged PR \"Added documentation regarding TextLoader's hasHeader field\" (#4654)"},{"Id":"549886927","IsPullRequest":true,"CreatedAt":"2020-01-14T23:57:31","Actor":"frank-dong-ms","Number":"4653","RawContent":null,"Title":"add log for Ssaforecast test","State":"open","Body":"Add logs to investigate SsaForecast test issue.\r\n\r\nOne example is in this build: https://dev.azure.com/dnceng/public/_build/results?buildId=480666&view=logs&j=4b233af4-7b14-5f68-27c6-9c4d7ac87519&t=6e2e87e8-8c33-50e6-544b-c271638494a5\r\n\r\nError message: \r\n[xUnit.net 00:00:02.58]     Microsoft.ML.Tests.TimeSeries.SsaForecast [FAIL]\r\n  X Microsoft.ML.Tests.TimeSeries.SsaForecast [95ms]\r\n  Error Message:\r\n   Assert.Equal() Failure\r\nExpected: 0.1914917 (rounded from 0.191491723060608)\r\nActual:   -8.1287222 (rounded from -8.12872219085693)\r\n  Stack Trace:\r\n     at Microsoft.ML.Tests.TimeSeries.SsaForecast() in /Users/runner/runners/2.163.1/work/1/s/test/Microsoft.ML.TimeSeries.Tests/TimeSeriesDirectApi.cs:line 373\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4653","RelatedDescription":"Open PR \"add log for Ssaforecast test\" (#4653)"},{"Id":"549871363","IsPullRequest":true,"CreatedAt":"2020-01-14T23:10:51","Actor":"Lynx1820","Number":"4652","RawContent":null,"Title":"Fixes None dimension bug","State":"open","Body":"Bug: #4646 \r\n\r\nML.Net considers empty dimensions invalid. However, the \"None\" dimension is valid in OnnxRuntime.  ","Url":"https://github.com/dotnet/machinelearning/pull/4652","RelatedDescription":"Open PR \"Fixes None dimension bug\" (#4652)"},{"Id":"549793761","IsPullRequest":false,"CreatedAt":"2020-01-13T21:05:13","Actor":"Nico8400","Number":"4651","RawContent":null,"Title":"Tensorflow exception triggered while loading model.","State":"open","Body":"I tried to train an image classification model from ML builder but it always crashes instantly with the following stack trace \r\n[20200113 - Stack trace.txt](https://github.com/dotnet/machinelearning-modelbuilder/files/4055732/20200113.-.Stack.trace.txt)\r\n\r\nOperating System: windows\r\n\r\nAny hint to solve this problem ?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4651","RelatedDescription":"Open issue \"Tensorflow exception triggered while loading model.\" (#4651)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-01-21T05:30:44.188546Z","RunDurationInMilliseconds":1206}