{"Data":{"GitHub":{"Issues":[{"Id":"542648388","IsPullRequest":true,"CreatedAt":"2019-12-26T21:56:46","Actor":"codemzs","Number":"4604","RawContent":null,"Title":"Increment build version for 1.5-preview and 0.17-preview release.","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4604","RelatedDescription":"Closed or merged PR \"Increment build version for 1.5-preview and 0.17-preview release.\" (#4604)"},{"Id":"539948182","IsPullRequest":true,"CreatedAt":"2019-12-26T18:12:47","Actor":"harishsk","Number":"4593","RawContent":null,"Title":"Added onnx export status for all estimators and trainers","State":"closed","Body":"In particular, please review OnnxTransform.cs and SSaForecasting.cs.","Url":"https://github.com/dotnet/machinelearning/pull/4593","RelatedDescription":"Closed or merged PR \"Added onnx export status for all estimators and trainers\" (#4593)"},{"Id":"541953441","IsPullRequest":false,"CreatedAt":"2019-12-24T01:33:43","Actor":"solarflarefx","Number":"4603","RawContent":null,"Title":"Passing input from GPU","State":"open","Body":"I am working in a pipeline architecture where all intermediary data resides in the GPU. I am interested in passing data already in the GPU into a DL network with the output still residing in the GPU to be passed to the next element in a pipeline. Essentially I would like to pass a cuda array into the network, get an output and convert back into a cuda array. I’d like to do this without having to perform CPU/GPU copies. Is this possible at the moment?","Url":"https://github.com/dotnet/machinelearning/issues/4603","RelatedDescription":"Open issue \"Passing input from GPU\" (#4603)"},{"Id":"541926451","IsPullRequest":true,"CreatedAt":"2019-12-23T22:48:28","Actor":"frank-dong-ms","Number":"4602","RawContent":null,"Title":"Only for test - Ssaforecast issue","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4602","RelatedDescription":"Open PR \"Only for test - Ssaforecast issue\" (#4602)"},{"Id":"541112651","IsPullRequest":false,"CreatedAt":"2019-12-20T21:02:39","Actor":"mayoatte","Number":"4600","RawContent":null,"Title":"LightGbm in Linux Container","State":"closed","Body":"### System information\r\n\r\n- **Ubuntu*:\r\n- **.NET Core 3.0**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nDeployed a .Net Core 3.0 ML.NET app to Azure Container Instances (Linux Container). This same training app was working with other trainers but fails with the LightGbmRanking trainer.\r\n\r\n- **What happened?**\r\n\r\nReceived the error below.\r\n\r\n\r\n- **What did you expect?**\r\n\r\nI expected training to complete.\r\n\r\n### Source code / logs\r\n\r\n`Unhandled exception. System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: liblib_lightgbm: cannot open shared object file: No such file or directory\r\n   at Microsoft.ML.Trainers.LightGbm.WrappedLightGbmInterface.DatasetCreateFromSampledColumn(IntPtr sampleValuePerColumn, IntPtr sampleIndicesPerColumn, Int32 numCol, Int32[] sampleNonZeroCntPerColumn, Int32 numSampleRow, Int32 numTotalRow, String parameters, IntPtr& ret)\r\n   at Microsoft.ML.Trainers.LightGbm.Dataset..ctor(Double[][] sampleValuePerColumn, Int32[][] sampleIndicesPerColumn, Int32 numCol, Int32[] sampleNonZeroCntPerColumn, Int32 numSampleRow, Int32 numTotalRow, String param, Single[] labels, Single[] weights, Int32[] groups)\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.CreateDatasetFromSamplingData(IChannel ch, Factory factory, Int32 numRow, String param, Single[] labels, Single[] weights, Int32[] groups, CategoricalMetaData catMetaData, Dataset& dataset)\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.LoadTrainingData(IChannel ch, RoleMappedData trainData, CategoricalMetaData& catMetaData)\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)`\r\n\r\n- **What have you tried?**\r\n\r\nInstalling libomp in the docker build as mentioned [here](https://github.com/dotnet/machinelearning/issues/1282)","Url":"https://github.com/dotnet/machinelearning/issues/4600","RelatedDescription":"Closed issue \"LightGbm in Linux Container\" (#4600)"},{"Id":"540768552","IsPullRequest":false,"CreatedAt":"2019-12-20T05:23:10","Actor":"jigarhshah17","Number":"4599","RawContent":null,"Title":"SEE LINK https://dotnet.microsoft.com/learn/ml-dotnet/what-is-mldotnet","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n\r\n- **.NET Version (eg., dotnet --info)**: \r\nML.NET 1.4.0\r\n\r\n### Issue\r\nSEE LINK https://dotnet.microsoft.com/learn/ml-dotnet/what-is-mldotnet\r\n\r\nin test code below line write wrong\r\n\r\nvar predEngine = mlContext.Model.CreatePredictionEngine(model); \r\n\r\nin framework CreatePredictionEngine definition not same as above line.\r\n \r\n\r\n\r\n- **What did you do?**\r\n- **What happened?**\r\n- **What did you expect?**\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4599","RelatedDescription":"Open issue \"SEE LINK https://dotnet.microsoft.com/learn/ml-dotnet/what-is-mldotnet\" (#4599)"},{"Id":"540651772","IsPullRequest":true,"CreatedAt":"2019-12-20T00:02:49","Actor":"antoniovs1029","Number":"4598","RawContent":null,"Title":"Fixes #4074. About adding a word to French stopwords","State":"open","Body":"Fixes #4074 \r\n\r\nSimply adds the word \"les\" to the French stopwords list.","Url":"https://github.com/dotnet/machinelearning/pull/4598","RelatedDescription":"Open PR \"Fixes #4074. About adding a word to French stopwords\" (#4598)"},{"Id":"540610936","IsPullRequest":true,"CreatedAt":"2019-12-19T22:26:35","Actor":"michaelgsharp","Number":"4597","RawContent":null,"Title":"Add Category Robust Scaler Featurizer","State":"open","Body":"This change adds in the RobustScaler into the new Featurizers project. It is the third of a series of PR's that will go in. The RobustScaler is implemented in native code, so this is mostly just a wrapper around that with the appropriate entrypoints for NimbusML as well.\r\n\r\nThe RobustScaler scales and centers numerical values based on the quantile range specified. ","Url":"https://github.com/dotnet/machinelearning/pull/4597","RelatedDescription":"Open PR \"Add Category Robust Scaler Featurizer\" (#4597)"},{"Id":"540527509","IsPullRequest":true,"CreatedAt":"2019-12-19T19:54:51","Actor":"KsenijaS","Number":"4596","RawContent":null,"Title":"ONNX Conversion for Hashing Transformer","State":"open","Body":"Here is the draft for Onnx Conversion for Hashing transformer.\r\nPlease not that some test will not pass because onnx only support string and uint for murmur hash3\r\nand also needs to add mask and useOrderedHashing to be compatible with ML.NET\r\nFurther more there is a bug in ORT regarding UTF 8 encoding, (they fixed it in this PR: https://github.com/microsoft/onnxruntime/pull/2697), but I think the next release is in about 2 months\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4596","RelatedDescription":"Open PR \"ONNX Conversion for Hashing Transformer\" (#4596)"},{"Id":"540149339","IsPullRequest":false,"CreatedAt":"2019-12-19T08:11:21","Actor":"smoothumut","Number":"4595","RawContent":null,"Title":"pipeline.Fit Method not responding on after 1046th row in dataset","State":"open","Body":"I have a dataset with 3000 (BrandId, price) rows. When I run sdca regression algorithm in ML.net, pipeline.Fit method get stuck, it doesnt go to the next row in code (it keeps running but with %0 cpu usage). I thought the data may have problem, then I reduced the data. But when I remove until 1046, it starts working, but when I add one more row, it stops responding. The data looks normal, nothing is abnormal in my opionion\r\nyou can find the issue in my question at stackoverflow\r\n[you can find the code and dataset in this link](https://stackoverflow.com/questions/59404619/ml-net-pipeline-fit-not-responding-after-specific-row-number-in-d)","Url":"https://github.com/dotnet/machinelearning/issues/4595","RelatedDescription":"Open issue \"pipeline.Fit Method not responding on after 1046th row in dataset\" (#4595)"},{"Id":"539949775","IsPullRequest":true,"CreatedAt":"2019-12-18T22:04:29","Actor":"michaelgsharp","Number":"4594","RawContent":null,"Title":"Add Category Imputer Featurizer","State":"open","Body":"This change adds in the CategoryImputer into the new Featurizers project. It is the second of a series of PR's that will go in. The CategoryImputer is implemented in native code, so this is mostly just a wrapper around that with the appropriate entrypoints for NimbusML as well.\r\n\r\nThe CategoryImputer imputes missing values in a column based on the most frequent value seen during training. Due to not having support for nullable types in ML.NET, this only supports Float, Double, and Strings (with empty string being treated as \"missing\").","Url":"https://github.com/dotnet/machinelearning/pull/4594","RelatedDescription":"Open PR \"Add Category Imputer Featurizer\" (#4594)"},{"Id":"539901173","IsPullRequest":true,"CreatedAt":"2019-12-18T22:02:49","Actor":"frank-dong-ms","Number":"4592","RawContent":null,"Title":"fix System.ArgumentOutOfRangeException issue in CustomStopWordsRemovingTransformer","State":"closed","Body":"fix issue #4518 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4592","RelatedDescription":"Closed or merged PR \"fix System.ArgumentOutOfRangeException issue in CustomStopWordsRemovingTransformer\" (#4592)"},{"Id":"539896101","IsPullRequest":true,"CreatedAt":"2019-12-18T20:06:39","Actor":"frank-dong-ms","Number":"4591","RawContent":null,"Title":"fix System.ArgumentOutOfRangeException issue in CustomStopWordsRemovingTransformer","State":"closed","Body":"fix issue #4518 ","Url":"https://github.com/dotnet/machinelearning/pull/4591","RelatedDescription":"Closed or merged PR \"fix System.ArgumentOutOfRangeException issue in CustomStopWordsRemovingTransformer\" (#4591)"},{"Id":"538785927","IsPullRequest":true,"CreatedAt":"2019-12-18T20:04:24","Actor":"frank-dong-ms","Number":"4581","RawContent":null,"Title":"fix issue-4518","State":"closed","Body":"fix issue #4518 , fix System.ArgumentOutOfRangeException in CustomStopWordsRemover\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4581","RelatedDescription":"Closed or merged PR \"fix issue-4518\" (#4581)"},{"Id":"539857651","IsPullRequest":true,"CreatedAt":"2019-12-18T18:56:48","Actor":"harishsk","Number":"4590","RawContent":null,"Title":"Added onnx export support for SelectColumns","State":"open","Body":"Implemented ability to export ColumnSelectingEstimator to onnx.","Url":"https://github.com/dotnet/machinelearning/pull/4590","RelatedDescription":"Open PR \"Added onnx export support for SelectColumns\" (#4590)"},{"Id":"539843398","IsPullRequest":false,"CreatedAt":"2019-12-18T18:23:56","Actor":"frank-dong-ms","Number":"4589","RawContent":null,"Title":"throw build error for missing documentation of public class/method/property etc","State":"open","Body":"RT","Url":"https://github.com/dotnet/machinelearning/issues/4589","RelatedDescription":"Open issue \"throw build error for missing documentation of public class/method/property etc\" (#4589)"},{"Id":"537772250","IsPullRequest":true,"CreatedAt":"2019-12-18T17:15:04","Actor":"antoniovs1029","Number":"4576","RawContent":null,"Title":"Fixes #4571. About memory leak when using FeaturizeText.","State":"closed","Body":"### Updated first post:\r\nOriginally this PR included different proposals to solve issue #4571 , which are described below. From all of them, proposal 3 was chosen, and now this PR only includes the changes of that Proposal.\r\n\r\n----------------------------------\r\n\r\n### Original first post:\r\nIn this PR I include 3 proposals to solve issue #4571:\r\n1. Modifying NormStr constructor\r\n- OR -\r\n2. Modifying TextNormalizer\r\n- OR -\r\n3. Modifying NormStr.Pool Get Method\r\n\r\n(the proposals are mutually exclusive, in that we are supposed to choose one of those, but I've included the three in this PR so that we can discuss about them, since @harishsk and I are unsure about the overall impact of each one, please let us know your opinion, and if there's anything else I should test)\r\n\r\nFor reference: Offline, @daholste provided me with a dataset which I can't share in here because of privacy reasons. It had 100k rows and 2.5k columns. When featurizing 22 of those columns, he got 22 NormStr Pools which, together, had an inclusive size of 2.25 GB, because many entire rows where held in memory, mainly because of the reason I described in [this comment](https://github.com/dotnet/machinelearning/issues/4571). The text that follows assume experiments based on that dataset, finding n-grams of size 1.\r\n\r\nWhen using Proposal 1 the inclusive size of the NormStr Pools went down from 2.25GB to 22MB. When using Proposal 2 it went down to 30MB. With Proposal 3 it went down to 22MB. With any of the proposals, or without them, the time for fitting was around 40 seconds on my machine.\r\n\r\nAll of the proposals are based in the idea of creating a `ReadOnlyMemory<char>` that doesn't have an `_object` member holding a reference to the string of the whole row.\r\n\r\n### Proposal 1 - Modifying NormStr constructor\r\n[Link to proposal](https://github.com/dotnet/machinelearning/pull/4576#discussion_r357827889)\r\n- Each NormStr has _object that only contains the text that NormStr is representing, and it's saved as a char[]\r\n- With @daholste's dataset 260k NormStrs are created, and each one of those holds a reference to the corresponding char[]\r\n- When fitting with this proposal, this was the Process Memory, notice the oscillations:\r\n![image](https://user-images.githubusercontent.com/38739674/70831324-1a86b080-1da7-11ea-957a-4a4c0675c83d.png)\r\n\r\n@harishsk  and I think the oscillations in memory usage are caused by the strings that are created with this implementation, but that are then garbage collected every once in a while, because no actual reference to them is kept.\r\n- All the references to entire rows were gone\r\n\r\n### Proposal 2 - Modifying Text Normalizer\r\n[Link to proposal](https://github.com/dotnet/machinelearning/pull/4576#discussion_r357827979)\r\n- _In general_, each NormStr has a _object of type string, which holds the content of the entire column where the NormStr was found.\r\n- With the dataset, 260k NormStrs are created, and less than 120k strings are held in memory.\r\n- When fitting with this proposal, this was the Process Memory graph, notice no oscillations:\r\n![image](https://user-images.githubusercontent.com/38739674/70831302-0d69c180-1da7-11ea-8e62-828b482188e9.png)\r\n\r\n- ~~Some references to entire rows were still there (I am still figuring out why). But there were only a few of them, compared to when there was no fix; as it is shown in the decrease in size of the NormStr pools I mentioned (from 2.2GB to 30MB), this proposal is still useful, at least for @daholste case.~~ All the references to strings containing entire rows are gone.\r\n\r\n### Proposal 3 - Modifying NormStr.Pool Get Method\r\n[Link to proposal](https://github.com/dotnet/machinelearning/pull/4576#discussion_r357871260)\r\n- Each NormStr has _object that only contains the text of the string that NormStr is representing\r\n- With the dataset, 260k NormStr were created, each one holding a reference to their corresponding string.\r\n- When fitting with this proposal, this was the Process Memory, notice the oscillations:\r\n![image](https://user-images.githubusercontent.com/38739674/70838311-7a3b8680-1dbc-11ea-91b5-29509bf4f100.png)\r\n- All the references to entire rows were gone","Url":"https://github.com/dotnet/machinelearning/pull/4576","RelatedDescription":"Closed or merged PR \"Fixes #4571. About memory leak when using FeaturizeText.\" (#4576)"},{"Id":"539795685","IsPullRequest":true,"CreatedAt":"2019-12-18T16:43:29","Actor":"sharwell","Number":"4588","RawContent":null,"Title":"Optimize generic MethodInfo for Func<TRet>","State":"open","Body":"Repeated profiling showed MarshalInvoke as a _heavy_ performance bottleneck. Rather than remove the use of reflection at runtime altogether, this pull request demonstrates a strategy for caching the results of particularly expensive operations. The performance benefits come from two primary changes:\r\n\r\n1. `RuntimeReflectionExtensions.GetMethodInfo(Delegate)` is only called once for a given method\r\n2. `MethodInfo.GetGenericMethodDefinition()` is only called once for a given method\r\n\r\nIn this change, I am also caching the result of `MethodInfo.MakeGenericMethod`. It might not be necessary to cache this result, but it doesn't seem to hurt either.\r\n\r\n📝 This pull request is a demonstration of the process required to fully convert the code from the current pattern to the new pattern. I have only converted `MarshalInvoke<TRet>`; each of the others will need to be converted in a similar fashion.","Url":"https://github.com/dotnet/machinelearning/pull/4588","RelatedDescription":"Open PR \"Optimize generic MethodInfo for Func<TRet>\" (#4588)"},{"Id":"539741297","IsPullRequest":true,"CreatedAt":"2019-12-18T15:10:34","Actor":"yaeldekel","Number":"4587","RawContent":null,"Title":"Fix PFI issue in binary classification","State":"open","Body":"This change adds support for running PFI on binary classification models that do not contain a calibrator. Fixes #4517 .","Url":"https://github.com/dotnet/machinelearning/pull/4587","RelatedDescription":"Open PR \"Fix PFI issue in binary classification\" (#4587)"},{"Id":"539698912","IsPullRequest":false,"CreatedAt":"2019-12-18T14:00:19","Actor":"jigarhshah17","Number":"4586","RawContent":null,"Title":"how to pass dynamics created class or object in function In of TRow type","State":"open","Body":"https://github.com/dotnet/machinelearning/blob/290e0695b22cf9c6f49fcd222b10553b5a19a63a/src/Microsoft.ML.Data/Model/PredictionEngineExtensions.cs#L27\r\n\r\n MLContextRef.Model.CreatePredictionEngine(Of TRow, TDst)(loadedModel) \r\n\r\n\r\nhow to pass dynamics created class or object in above function In of TRow type\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4586","RelatedDescription":"Open issue \"how to pass dynamics created class or object in function In of TRow type\" (#4586)"},{"Id":"539659045","IsPullRequest":false,"CreatedAt":"2019-12-18T12:45:07","Actor":"giuseppe-terrasi","Number":"4585","RawContent":null,"Title":"Cannot delete image file passsed to PredictionEngine for Image Classification after disposing the engine","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro 10.0.18363\r\n- **.NET Version (eg., dotnet --info)**:   3.1.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**: I've tried to delete an image file used by PredictionEngine after disposing the engine\r\n- **What happened?**: An exception was thorwn: \"The process cannot access the file  because it is being used by another process.\"\r\n- **What did you expect?**: Image file deletion\r\n\r\n### Source code / logs\r\n```\r\nprivate ImagePrediction ClassifySingleImage(MLContext mLContext, ITransformer model, string imagePath)\r\n{\r\n    var imageData = new ImageData()\r\n    {\r\n        ImagePath = imagePath\r\n    };\r\n    var predictor = mLContext.Model.CreatePredictionEngine<ImageData, ImagePrediction>(model);\r\n    var prediction = predictor.Predict(imageData);\r\n    predictor.Dispose();\r\n    System.IO.File.Delete(imagePath);  // throws a FileIO exception\r\n    return prediction;\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4585","RelatedDescription":"Open issue \"Cannot delete image file passsed to PredictionEngine for Image Classification after disposing the engine\" (#4585)"},{"Id":"539373595","IsPullRequest":true,"CreatedAt":"2019-12-17T23:53:57","Actor":"LittleLittleCloud","Number":"4584","RawContent":null,"Title":"fix TextLoader bug when there's newline between quotes ","State":"open","Body":"A quick workaround for this Issue\r\n#4460 \r\nperhaps also this one\r\n#4555 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4584","RelatedDescription":"Open PR \"fix TextLoader bug when there's newline between quotes \" (#4584)"},{"Id":"539332343","IsPullRequest":false,"CreatedAt":"2019-12-17T21:58:30","Actor":"unruledboy","Number":"4583","RawContent":null,"Title":"Prediction result with custom properties","State":"open","Body":"### System information\r\n\r\n- Windows 10 Fall\r\n- .NET Core 3.0\r\n\r\n### Issue\r\n\r\n- Tried to run the \"Detect anomalies in product sales with ML.NET\" sample in https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/sales-anomaly-detection\r\n- Could not associate the prediction result with business object id\r\n- As you can see, the ProductSalesPrediction object contains the prediction result. As end users, we often need to associate individual prediction result per business object id, for example, a particular sales date / sales id. \r\n\r\nI could have used array index to work out the associated input data, but that's not intuitive.\r\n\r\nI searched the documentation in GitHub and microsoft.com but could not find one.\r\n\r\nWould be nice if we allow user to define the prediction object like this:\r\n\r\n```\r\npublic class ProductSalesPrediction\r\n{\r\n   public string Month { get; set; }\r\n\r\n   public string SaleId { get; set; }\r\n\r\n    [VectorType(3)]\r\n    public double[] Prediction { get; set; }\r\n}\r\n```\r\n\r\n### Source code / logs\r\n\r\nExact same source code in the sample mentioned above.","Url":"https://github.com/dotnet/machinelearning/issues/4583","RelatedDescription":"Open issue \"Prediction result with custom properties\" (#4583)"},{"Id":"538739900","IsPullRequest":true,"CreatedAt":"2019-12-17T19:04:18","Actor":"LittleLittleCloud","Number":"4580","RawContent":null,"Title":"[Not A Right Way] A quick fix for Recommendation Null Reference bug","State":"closed","Body":"#4579 ","Url":"https://github.com/dotnet/machinelearning/pull/4580","RelatedDescription":"Closed or merged PR \"[Not A Right Way] A quick fix for Recommendation Null Reference bug\" (#4580)"},{"Id":"538818355","IsPullRequest":false,"CreatedAt":"2019-12-17T03:59:11","Actor":"arafattehsin","Number":"4582","RawContent":null,"Title":"Model Builder does not generate the right path to model","State":"open","Body":"If the project name contains dot (.) in it then ML.NET does not generate the right path to the model.\r\n\r\n![image](https://user-images.githubusercontent.com/16351038/70963797-b123dc00-20dd-11ea-9b1c-785e37f202be.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4582","RelatedDescription":"Open issue \"Model Builder does not generate the right path to model\" (#4582)"},{"Id":"538733642","IsPullRequest":false,"CreatedAt":"2019-12-16T23:13:57","Actor":"LittleLittleCloud","Number":"4579","RawContent":null,"Title":"In CodeGenerator, Recommendation scenario Training cause null reference Exception","State":"open","Body":"Just dig in a bit. The null reference exception is because, in the AutoML generated pipeline, one of the fields in the trainer node's property dictionary is null, which crashes CodeGenerator.","Url":"https://github.com/dotnet/machinelearning/issues/4579","RelatedDescription":"Open issue \"In CodeGenerator, Recommendation scenario Training cause null reference Exception\" (#4579)"},{"Id":"541200983","IsPullRequest":false,"CreatedAt":"2019-12-15T07:34:18","Actor":"jcmontoya","Number":"4601","RawContent":null,"Title":"Generated Model cannot be converted to ONNX","State":"open","Body":"**System Information (please complete the following information):**\r\n - Model Builder Version: 1.4.0\r\n - Visual Studio Version 2019/16.3.10\r\n\r\n**Describe the bug**\r\nI used the Model Builder to Classify basketball balls and soccer balls. It works very well. then I tried to convert the generated model to ONNX using the code bellow:\r\n`\r\nstring modelPath = AppDomain.CurrentDomain.BaseDirectory + \"MLModel.zip\";\r\n\r\nITransformer mlModel = mLContext.Model.Load(modelPath, out var modelInputSchema);\r\n\r\nIDataView dataView = mLContext.Data.LoadFromTextFile<ModelInput>(\r\n                                            path: DATA_FILEPATH,\r\n                                            hasHeader: true,\r\n                                            separatorChar: '\\t',\r\n                                            allowQuoting: true,\r\n                                            allowSparse: false);\r\n\r\nMemoryStream memoryStream = new MemoryStream();\r\n\r\n**mLContext.Model.ConvertToOnnx(mlModel, dataView, memoryStream);**\r\n\r\nbyte[] data = memoryStream.ToArray();\r\n\r\nusing (FileStream fileStream = File.Create(@\"C:\\temp\\SportsBall.onnx\")) {\r\n       fileStream.Write(data, 0, data.Length);\r\n}\r\n`\r\nIn the Bold line I get the following error:\r\n\r\nSystem.InvalidOperationException: 'The targeted pipeline can not be fully converted into a well-defined ONNX model. Please check if all steps in that pipeline are convertible to ONNX and all necessary variables are not dropped (via command line arguments).'\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a simple model \r\n2. Convert to ONNX model with provided code\r\n3. See Error\r\n\r\n**Expected behavior**\r\nThe new ONNX model should be generated in the path:\r\nC:\\temp\\SportsBall.onnx\r\n\r\n**Screenshots**\r\nNA\r\n\r\n**Additional context**\r\nNA\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4601","RelatedDescription":"Open issue \"Generated Model cannot be converted to ONNX\" (#4601)"},{"Id":"537934897","IsPullRequest":false,"CreatedAt":"2019-12-14T16:31:43","Actor":"priyankagupta639","Number":"4578","RawContent":null,"Title":"YOLOv3 shows ArgumentOutOfRangeException","State":"open","Body":"Hello\r\nI'm working on the latest version of Visual Studio 2019 on Windows 10\r\nI have tried to work on object detection using yolov3 model. The yolov3.onnx file has been downloaded from [https://github.com/onnx/models/tree/master/vision/object_detection_segmentation/yolov3](url)\r\n\r\nBelow is the snippet of the error shown on the console screen.\r\n![consoleError](https://user-images.githubusercontent.com/33253391/70851172-f9fa4b80-1eb7-11ea-857b-0c27402650f7.PNG)\r\n\r\nThis is the image of the output.\r\n![output error](https://user-images.githubusercontent.com/33253391/70851408-9d4c6000-1eba-11ea-8723-6861c5ef5755.PNG)\r\n\r\n\r\nThe code is similar as used for object detection using tiny-yolov2. Following are the changes made in the code.\r\n\r\n1.) ImageNetPrediction.cs file\r\npublic class ImageNetPrediction\r\n    {\r\n        [ColumnName(\"yolonms_layer_1/ExpandDims_3:0\")]\r\n        public float[] PredictedLabels;\r\n    }\r\n\r\n2.) YoloOutputParser.cs\r\npublic const int ROW_COUNT = 13;\r\npublic const int COL_COUNT = 13;\r\npublic const int CHANNEL_COUNT = 125;\r\npublic const int BOXES_PER_CELL = 5;\r\npublic const int BOX_INFO_FEATURE_COUNT = 5;\r\npublic const int CLASS_COUNT = 80;\r\npublic const float CELL_WIDTH = 32;\r\npublic const float CELL_HEIGHT = 32;\r\n.\r\n.\r\n.\r\nprivate string[] labels = new string[]\r\n        {\r\n            \"person\", \"bicycle\", \"car\", \"motorbike\", \"aeroplane\", \"bus\", \"train\", \"truck\", \"boat\", \"traffic light\", \"fire hydrant\", \"stop sign\", \"parking meter\", \"bench\", \"bird\", \"cat\", \"dog\",\r\n            \"horse\", \"sheep\", \"cow\", \"elephant\", \"bear\", \"zebra\", \"giraffe\", \"backpack\", \"umbrella\", \"handbag\", \"tie\", \"suitcase\", \"frisbee\", \"skis\", \"snowboard\", \"sports ball\", \"kite\",\r\n            \"baseball bat\", \"baseball glove\", \"skateboard\", \"surfboard\", \"tennis racket\", \"bottle\", \"wine glass\", \"cup\", \"fork\", \"knife\", \"spoon\", \"bowl\", \"banana\", \"apple\", \"sandwich\", \"orange\",\r\n            \"broccoli\", \"carrot\", \"hot dog\", \"pizza\", \"donut\", \"cake\", \"chair\", \"sofa\", \"pottedplant\", \"bed\", \"diningtable\", \"toilet\", \"tvmonitor\", \"laptop\", \"mouse\", \"remote\", \"keyboard\",\r\n            \"cell phone\", \"microwave\", \"oven\", \"toaster\", \"sink\", \"refrigerator\", \"book\", \"clock\", \"vase\", \"scissors\", \"teddy bear\", \"hair drier\", \"toothbrush\"\r\n        };\r\n\r\n3.) OnnxModelScorer.cs\r\npublic struct TinyYoloModelSettings\r\n        {\r\n            public const string ModelInput = \"input_1\";\r\n            public const string ModelOutput = \"yolonms_layer_1/ExpandDims_3:0\";\r\n        }\r\n.\r\n.\r\n.\r\nvar pipeline = mlContext.Transforms.LoadImages(outputColumnName: \"image\", imageFolder: \"\", inputColumnName: nameof(ImageNetData.ImagePath))\r\n                            .Append(mlContext.Transforms.ResizeImages(outputColumnName: \"image\", imageWidth: ImageNetSettings.imageWidth, imageHeight: ImageNetSettings.imageHeight, inputColumnName: \"input_1\"))\r\n                            .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"image\"))\r\n                            .Append(mlContext.Transforms.ApplyOnnxModel(modelFile: modelLocation, outputColumnNames: new[] { TinyYoloModelSettings.ModelOutput }, inputColumnNames: new[] { TinyYoloModelSettings.ModelInput }));\r\n.\r\n.\r\n.\r\npublic static void Main()\r\n        {\r\n            var assetsRelativePath = @\"../../../assets\";\r\n            string assetsPath = GetAbsolutePath(assetsRelativePath);\r\n            var modelFilePath = Path.Combine(assetsPath, \"Model\", \"yolov3.onnx\");\r\n            var imagesFolder = Path.Combine(assetsPath, \"images\");\r\n            var outputFolder = Path.Combine(assetsPath, \"images\", \"output\");\r\n\r\n\r\n\r\nAlso, how should I carry out the Preprocessing and Postprocessing steps?","Url":"https://github.com/dotnet/machinelearning/issues/4578","RelatedDescription":"Open issue \"YOLOv3 shows ArgumentOutOfRangeException\" (#4578)"},{"Id":"537833474","IsPullRequest":true,"CreatedAt":"2019-12-14T00:16:41","Actor":"Lynx1820","Number":"4577","RawContent":null,"Title":"Added onnx export support for VectorWhitening","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4577","RelatedDescription":"Open PR \"Added onnx export support for VectorWhitening\" (#4577)"},{"Id":"537388411","IsPullRequest":false,"CreatedAt":"2019-12-13T07:16:56","Actor":"jigarhshah17","Number":"4575","RawContent":null,"Title":"how to build DataViewSchema with Annotations?","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nwindows 7\r\n- **.NET Version (eg., dotnet --info)**: \r\n4.6.1\r\n### Issue\r\nhow to build DataViewSchema with Annotations?\r\n- **What did you do?**\r\nhow to build DataViewSchema with Annotations?\r\n- **What happened?**\r\n- **What did you expect?**\r\n\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4575","RelatedDescription":"Open issue \"how to build DataViewSchema with Annotations?\" (#4575)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-28T05:30:43.4664168Z","RunDurationInMilliseconds":809}